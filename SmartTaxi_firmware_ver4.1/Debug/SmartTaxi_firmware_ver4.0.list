
SmartTaxi_firmware_ver4.0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000197c4  080000bc  080000bc  000010bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000800  08019880  08019880  0001a880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801a080  0801a080  0001c510  2**0
                  CONTENTS
  4 .ARM          00000008  0801a080  0801a080  0001b080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0801a088  0801a088  0001c510  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0801a088  0801a088  0001b088  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801a08c  0801a08c  0001b08c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000510  20000000  0801a090  0001c000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000030f0  20000510  0801a5a0  0001c510  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20003600  0801a5a0  0001c600  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0001c510  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001eb89  00000000  00000000  0001c538  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003ceb  00000000  00000000  0003b0c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001aa0  00000000  00000000  0003edb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000014fb  00000000  00000000  00040850  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00005b0d  00000000  00000000  00041d4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00024aee  00000000  00000000  00047858  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000ab701  00000000  00000000  0006c346  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00117a47  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006f28  00000000  00000000  00117a8c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  0011e9b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	@ (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	@ (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	@ (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000510 	.word	0x20000510
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08019868 	.word	0x08019868

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	@ (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	@ (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	@ (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			@ (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000514 	.word	0x20000514
 8000100:	08019868 	.word	0x08019868

08000104 <strlen>:
 8000104:	2300      	movs	r3, #0
 8000106:	5cc2      	ldrb	r2, [r0, r3]
 8000108:	3301      	adds	r3, #1
 800010a:	2a00      	cmp	r2, #0
 800010c:	d1fb      	bne.n	8000106 <strlen+0x2>
 800010e:	1e58      	subs	r0, r3, #1
 8000110:	4770      	bx	lr
	...

08000114 <__gnu_thumb1_case_shi>:
 8000114:	b403      	push	{r0, r1}
 8000116:	4671      	mov	r1, lr
 8000118:	0849      	lsrs	r1, r1, #1
 800011a:	0040      	lsls	r0, r0, #1
 800011c:	0049      	lsls	r1, r1, #1
 800011e:	5e09      	ldrsh	r1, [r1, r0]
 8000120:	0049      	lsls	r1, r1, #1
 8000122:	448e      	add	lr, r1
 8000124:	bc03      	pop	{r0, r1}
 8000126:	4770      	bx	lr

08000128 <__udivsi3>:
 8000128:	2200      	movs	r2, #0
 800012a:	0843      	lsrs	r3, r0, #1
 800012c:	428b      	cmp	r3, r1
 800012e:	d374      	bcc.n	800021a <__udivsi3+0xf2>
 8000130:	0903      	lsrs	r3, r0, #4
 8000132:	428b      	cmp	r3, r1
 8000134:	d35f      	bcc.n	80001f6 <__udivsi3+0xce>
 8000136:	0a03      	lsrs	r3, r0, #8
 8000138:	428b      	cmp	r3, r1
 800013a:	d344      	bcc.n	80001c6 <__udivsi3+0x9e>
 800013c:	0b03      	lsrs	r3, r0, #12
 800013e:	428b      	cmp	r3, r1
 8000140:	d328      	bcc.n	8000194 <__udivsi3+0x6c>
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d30d      	bcc.n	8000164 <__udivsi3+0x3c>
 8000148:	22ff      	movs	r2, #255	@ 0xff
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	ba12      	rev	r2, r2
 800014e:	0c03      	lsrs	r3, r0, #16
 8000150:	428b      	cmp	r3, r1
 8000152:	d302      	bcc.n	800015a <__udivsi3+0x32>
 8000154:	1212      	asrs	r2, r2, #8
 8000156:	0209      	lsls	r1, r1, #8
 8000158:	d065      	beq.n	8000226 <__udivsi3+0xfe>
 800015a:	0b03      	lsrs	r3, r0, #12
 800015c:	428b      	cmp	r3, r1
 800015e:	d319      	bcc.n	8000194 <__udivsi3+0x6c>
 8000160:	e000      	b.n	8000164 <__udivsi3+0x3c>
 8000162:	0a09      	lsrs	r1, r1, #8
 8000164:	0bc3      	lsrs	r3, r0, #15
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x46>
 800016a:	03cb      	lsls	r3, r1, #15
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b83      	lsrs	r3, r0, #14
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x52>
 8000176:	038b      	lsls	r3, r1, #14
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b43      	lsrs	r3, r0, #13
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x5e>
 8000182:	034b      	lsls	r3, r1, #13
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b03      	lsrs	r3, r0, #12
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x6a>
 800018e:	030b      	lsls	r3, r1, #12
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0ac3      	lsrs	r3, r0, #11
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x76>
 800019a:	02cb      	lsls	r3, r1, #11
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a83      	lsrs	r3, r0, #10
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x82>
 80001a6:	028b      	lsls	r3, r1, #10
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a43      	lsrs	r3, r0, #9
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x8e>
 80001b2:	024b      	lsls	r3, r1, #9
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a03      	lsrs	r3, r0, #8
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x9a>
 80001be:	020b      	lsls	r3, r1, #8
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	d2cd      	bcs.n	8000162 <__udivsi3+0x3a>
 80001c6:	09c3      	lsrs	r3, r0, #7
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xa8>
 80001cc:	01cb      	lsls	r3, r1, #7
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0983      	lsrs	r3, r0, #6
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xb4>
 80001d8:	018b      	lsls	r3, r1, #6
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0943      	lsrs	r3, r0, #5
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xc0>
 80001e4:	014b      	lsls	r3, r1, #5
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0903      	lsrs	r3, r0, #4
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xcc>
 80001f0:	010b      	lsls	r3, r1, #4
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	08c3      	lsrs	r3, r0, #3
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xd8>
 80001fc:	00cb      	lsls	r3, r1, #3
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0883      	lsrs	r3, r0, #2
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xe4>
 8000208:	008b      	lsls	r3, r1, #2
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	0843      	lsrs	r3, r0, #1
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xf0>
 8000214:	004b      	lsls	r3, r1, #1
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	1a41      	subs	r1, r0, r1
 800021c:	d200      	bcs.n	8000220 <__udivsi3+0xf8>
 800021e:	4601      	mov	r1, r0
 8000220:	4152      	adcs	r2, r2
 8000222:	4610      	mov	r0, r2
 8000224:	4770      	bx	lr
 8000226:	e7ff      	b.n	8000228 <__udivsi3+0x100>
 8000228:	b501      	push	{r0, lr}
 800022a:	2000      	movs	r0, #0
 800022c:	f000 f8f0 	bl	8000410 <__aeabi_idiv0>
 8000230:	bd02      	pop	{r1, pc}
 8000232:	46c0      	nop			@ (mov r8, r8)

08000234 <__aeabi_uidivmod>:
 8000234:	2900      	cmp	r1, #0
 8000236:	d0f7      	beq.n	8000228 <__udivsi3+0x100>
 8000238:	e776      	b.n	8000128 <__udivsi3>
 800023a:	4770      	bx	lr

0800023c <__divsi3>:
 800023c:	4603      	mov	r3, r0
 800023e:	430b      	orrs	r3, r1
 8000240:	d47f      	bmi.n	8000342 <__divsi3+0x106>
 8000242:	2200      	movs	r2, #0
 8000244:	0843      	lsrs	r3, r0, #1
 8000246:	428b      	cmp	r3, r1
 8000248:	d374      	bcc.n	8000334 <__divsi3+0xf8>
 800024a:	0903      	lsrs	r3, r0, #4
 800024c:	428b      	cmp	r3, r1
 800024e:	d35f      	bcc.n	8000310 <__divsi3+0xd4>
 8000250:	0a03      	lsrs	r3, r0, #8
 8000252:	428b      	cmp	r3, r1
 8000254:	d344      	bcc.n	80002e0 <__divsi3+0xa4>
 8000256:	0b03      	lsrs	r3, r0, #12
 8000258:	428b      	cmp	r3, r1
 800025a:	d328      	bcc.n	80002ae <__divsi3+0x72>
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d30d      	bcc.n	800027e <__divsi3+0x42>
 8000262:	22ff      	movs	r2, #255	@ 0xff
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	ba12      	rev	r2, r2
 8000268:	0c03      	lsrs	r3, r0, #16
 800026a:	428b      	cmp	r3, r1
 800026c:	d302      	bcc.n	8000274 <__divsi3+0x38>
 800026e:	1212      	asrs	r2, r2, #8
 8000270:	0209      	lsls	r1, r1, #8
 8000272:	d065      	beq.n	8000340 <__divsi3+0x104>
 8000274:	0b03      	lsrs	r3, r0, #12
 8000276:	428b      	cmp	r3, r1
 8000278:	d319      	bcc.n	80002ae <__divsi3+0x72>
 800027a:	e000      	b.n	800027e <__divsi3+0x42>
 800027c:	0a09      	lsrs	r1, r1, #8
 800027e:	0bc3      	lsrs	r3, r0, #15
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x4c>
 8000284:	03cb      	lsls	r3, r1, #15
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b83      	lsrs	r3, r0, #14
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x58>
 8000290:	038b      	lsls	r3, r1, #14
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b43      	lsrs	r3, r0, #13
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x64>
 800029c:	034b      	lsls	r3, r1, #13
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b03      	lsrs	r3, r0, #12
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x70>
 80002a8:	030b      	lsls	r3, r1, #12
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0ac3      	lsrs	r3, r0, #11
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x7c>
 80002b4:	02cb      	lsls	r3, r1, #11
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a83      	lsrs	r3, r0, #10
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x88>
 80002c0:	028b      	lsls	r3, r1, #10
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a43      	lsrs	r3, r0, #9
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x94>
 80002cc:	024b      	lsls	r3, r1, #9
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a03      	lsrs	r3, r0, #8
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0xa0>
 80002d8:	020b      	lsls	r3, r1, #8
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	d2cd      	bcs.n	800027c <__divsi3+0x40>
 80002e0:	09c3      	lsrs	r3, r0, #7
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xae>
 80002e6:	01cb      	lsls	r3, r1, #7
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0983      	lsrs	r3, r0, #6
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xba>
 80002f2:	018b      	lsls	r3, r1, #6
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0943      	lsrs	r3, r0, #5
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xc6>
 80002fe:	014b      	lsls	r3, r1, #5
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0903      	lsrs	r3, r0, #4
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xd2>
 800030a:	010b      	lsls	r3, r1, #4
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	08c3      	lsrs	r3, r0, #3
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xde>
 8000316:	00cb      	lsls	r3, r1, #3
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0883      	lsrs	r3, r0, #2
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xea>
 8000322:	008b      	lsls	r3, r1, #2
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	0843      	lsrs	r3, r0, #1
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xf6>
 800032e:	004b      	lsls	r3, r1, #1
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	1a41      	subs	r1, r0, r1
 8000336:	d200      	bcs.n	800033a <__divsi3+0xfe>
 8000338:	4601      	mov	r1, r0
 800033a:	4152      	adcs	r2, r2
 800033c:	4610      	mov	r0, r2
 800033e:	4770      	bx	lr
 8000340:	e05d      	b.n	80003fe <__divsi3+0x1c2>
 8000342:	0fca      	lsrs	r2, r1, #31
 8000344:	d000      	beq.n	8000348 <__divsi3+0x10c>
 8000346:	4249      	negs	r1, r1
 8000348:	1003      	asrs	r3, r0, #32
 800034a:	d300      	bcc.n	800034e <__divsi3+0x112>
 800034c:	4240      	negs	r0, r0
 800034e:	4053      	eors	r3, r2
 8000350:	2200      	movs	r2, #0
 8000352:	469c      	mov	ip, r3
 8000354:	0903      	lsrs	r3, r0, #4
 8000356:	428b      	cmp	r3, r1
 8000358:	d32d      	bcc.n	80003b6 <__divsi3+0x17a>
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d312      	bcc.n	8000386 <__divsi3+0x14a>
 8000360:	22fc      	movs	r2, #252	@ 0xfc
 8000362:	0189      	lsls	r1, r1, #6
 8000364:	ba12      	rev	r2, r2
 8000366:	0a03      	lsrs	r3, r0, #8
 8000368:	428b      	cmp	r3, r1
 800036a:	d30c      	bcc.n	8000386 <__divsi3+0x14a>
 800036c:	0189      	lsls	r1, r1, #6
 800036e:	1192      	asrs	r2, r2, #6
 8000370:	428b      	cmp	r3, r1
 8000372:	d308      	bcc.n	8000386 <__divsi3+0x14a>
 8000374:	0189      	lsls	r1, r1, #6
 8000376:	1192      	asrs	r2, r2, #6
 8000378:	428b      	cmp	r3, r1
 800037a:	d304      	bcc.n	8000386 <__divsi3+0x14a>
 800037c:	0189      	lsls	r1, r1, #6
 800037e:	d03a      	beq.n	80003f6 <__divsi3+0x1ba>
 8000380:	1192      	asrs	r2, r2, #6
 8000382:	e000      	b.n	8000386 <__divsi3+0x14a>
 8000384:	0989      	lsrs	r1, r1, #6
 8000386:	09c3      	lsrs	r3, r0, #7
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x154>
 800038c:	01cb      	lsls	r3, r1, #7
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0983      	lsrs	r3, r0, #6
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x160>
 8000398:	018b      	lsls	r3, r1, #6
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0943      	lsrs	r3, r0, #5
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x16c>
 80003a4:	014b      	lsls	r3, r1, #5
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0903      	lsrs	r3, r0, #4
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x178>
 80003b0:	010b      	lsls	r3, r1, #4
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	08c3      	lsrs	r3, r0, #3
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x184>
 80003bc:	00cb      	lsls	r3, r1, #3
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0883      	lsrs	r3, r0, #2
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x190>
 80003c8:	008b      	lsls	r3, r1, #2
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	d2d9      	bcs.n	8000384 <__divsi3+0x148>
 80003d0:	0843      	lsrs	r3, r0, #1
 80003d2:	428b      	cmp	r3, r1
 80003d4:	d301      	bcc.n	80003da <__divsi3+0x19e>
 80003d6:	004b      	lsls	r3, r1, #1
 80003d8:	1ac0      	subs	r0, r0, r3
 80003da:	4152      	adcs	r2, r2
 80003dc:	1a41      	subs	r1, r0, r1
 80003de:	d200      	bcs.n	80003e2 <__divsi3+0x1a6>
 80003e0:	4601      	mov	r1, r0
 80003e2:	4663      	mov	r3, ip
 80003e4:	4152      	adcs	r2, r2
 80003e6:	105b      	asrs	r3, r3, #1
 80003e8:	4610      	mov	r0, r2
 80003ea:	d301      	bcc.n	80003f0 <__divsi3+0x1b4>
 80003ec:	4240      	negs	r0, r0
 80003ee:	2b00      	cmp	r3, #0
 80003f0:	d500      	bpl.n	80003f4 <__divsi3+0x1b8>
 80003f2:	4249      	negs	r1, r1
 80003f4:	4770      	bx	lr
 80003f6:	4663      	mov	r3, ip
 80003f8:	105b      	asrs	r3, r3, #1
 80003fa:	d300      	bcc.n	80003fe <__divsi3+0x1c2>
 80003fc:	4240      	negs	r0, r0
 80003fe:	b501      	push	{r0, lr}
 8000400:	2000      	movs	r0, #0
 8000402:	f000 f805 	bl	8000410 <__aeabi_idiv0>
 8000406:	bd02      	pop	{r1, pc}

08000408 <__aeabi_idivmod>:
 8000408:	2900      	cmp	r1, #0
 800040a:	d0f8      	beq.n	80003fe <__divsi3+0x1c2>
 800040c:	e716      	b.n	800023c <__divsi3>
 800040e:	4770      	bx	lr

08000410 <__aeabi_idiv0>:
 8000410:	4770      	bx	lr
 8000412:	46c0      	nop			@ (mov r8, r8)

08000414 <__aeabi_cdrcmple>:
 8000414:	4684      	mov	ip, r0
 8000416:	0010      	movs	r0, r2
 8000418:	4662      	mov	r2, ip
 800041a:	468c      	mov	ip, r1
 800041c:	0019      	movs	r1, r3
 800041e:	4663      	mov	r3, ip
 8000420:	e000      	b.n	8000424 <__aeabi_cdcmpeq>
 8000422:	46c0      	nop			@ (mov r8, r8)

08000424 <__aeabi_cdcmpeq>:
 8000424:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000426:	f001 ffc5 	bl	80023b4 <__ledf2>
 800042a:	2800      	cmp	r0, #0
 800042c:	d401      	bmi.n	8000432 <__aeabi_cdcmpeq+0xe>
 800042e:	2100      	movs	r1, #0
 8000430:	42c8      	cmn	r0, r1
 8000432:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000434 <__aeabi_dcmpeq>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f001 ff05 	bl	8002244 <__eqdf2>
 800043a:	4240      	negs	r0, r0
 800043c:	3001      	adds	r0, #1
 800043e:	bd10      	pop	{r4, pc}

08000440 <__aeabi_dcmplt>:
 8000440:	b510      	push	{r4, lr}
 8000442:	f001 ffb7 	bl	80023b4 <__ledf2>
 8000446:	2800      	cmp	r0, #0
 8000448:	db01      	blt.n	800044e <__aeabi_dcmplt+0xe>
 800044a:	2000      	movs	r0, #0
 800044c:	bd10      	pop	{r4, pc}
 800044e:	2001      	movs	r0, #1
 8000450:	bd10      	pop	{r4, pc}
 8000452:	46c0      	nop			@ (mov r8, r8)

08000454 <__aeabi_dcmple>:
 8000454:	b510      	push	{r4, lr}
 8000456:	f001 ffad 	bl	80023b4 <__ledf2>
 800045a:	2800      	cmp	r0, #0
 800045c:	dd01      	ble.n	8000462 <__aeabi_dcmple+0xe>
 800045e:	2000      	movs	r0, #0
 8000460:	bd10      	pop	{r4, pc}
 8000462:	2001      	movs	r0, #1
 8000464:	bd10      	pop	{r4, pc}
 8000466:	46c0      	nop			@ (mov r8, r8)

08000468 <__aeabi_dcmpgt>:
 8000468:	b510      	push	{r4, lr}
 800046a:	f001 ff2f 	bl	80022cc <__gedf2>
 800046e:	2800      	cmp	r0, #0
 8000470:	dc01      	bgt.n	8000476 <__aeabi_dcmpgt+0xe>
 8000472:	2000      	movs	r0, #0
 8000474:	bd10      	pop	{r4, pc}
 8000476:	2001      	movs	r0, #1
 8000478:	bd10      	pop	{r4, pc}
 800047a:	46c0      	nop			@ (mov r8, r8)

0800047c <__aeabi_dcmpge>:
 800047c:	b510      	push	{r4, lr}
 800047e:	f001 ff25 	bl	80022cc <__gedf2>
 8000482:	2800      	cmp	r0, #0
 8000484:	da01      	bge.n	800048a <__aeabi_dcmpge+0xe>
 8000486:	2000      	movs	r0, #0
 8000488:	bd10      	pop	{r4, pc}
 800048a:	2001      	movs	r0, #1
 800048c:	bd10      	pop	{r4, pc}
 800048e:	46c0      	nop			@ (mov r8, r8)

08000490 <__aeabi_cfrcmple>:
 8000490:	4684      	mov	ip, r0
 8000492:	0008      	movs	r0, r1
 8000494:	4661      	mov	r1, ip
 8000496:	e7ff      	b.n	8000498 <__aeabi_cfcmpeq>

08000498 <__aeabi_cfcmpeq>:
 8000498:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800049a:	f000 fc77 	bl	8000d8c <__lesf2>
 800049e:	2800      	cmp	r0, #0
 80004a0:	d401      	bmi.n	80004a6 <__aeabi_cfcmpeq+0xe>
 80004a2:	2100      	movs	r1, #0
 80004a4:	42c8      	cmn	r0, r1
 80004a6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004a8 <__aeabi_fcmpeq>:
 80004a8:	b510      	push	{r4, lr}
 80004aa:	f000 fbf7 	bl	8000c9c <__eqsf2>
 80004ae:	4240      	negs	r0, r0
 80004b0:	3001      	adds	r0, #1
 80004b2:	bd10      	pop	{r4, pc}

080004b4 <__aeabi_fcmplt>:
 80004b4:	b510      	push	{r4, lr}
 80004b6:	f000 fc69 	bl	8000d8c <__lesf2>
 80004ba:	2800      	cmp	r0, #0
 80004bc:	db01      	blt.n	80004c2 <__aeabi_fcmplt+0xe>
 80004be:	2000      	movs	r0, #0
 80004c0:	bd10      	pop	{r4, pc}
 80004c2:	2001      	movs	r0, #1
 80004c4:	bd10      	pop	{r4, pc}
 80004c6:	46c0      	nop			@ (mov r8, r8)

080004c8 <__aeabi_fcmple>:
 80004c8:	b510      	push	{r4, lr}
 80004ca:	f000 fc5f 	bl	8000d8c <__lesf2>
 80004ce:	2800      	cmp	r0, #0
 80004d0:	dd01      	ble.n	80004d6 <__aeabi_fcmple+0xe>
 80004d2:	2000      	movs	r0, #0
 80004d4:	bd10      	pop	{r4, pc}
 80004d6:	2001      	movs	r0, #1
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	46c0      	nop			@ (mov r8, r8)

080004dc <__aeabi_fcmpgt>:
 80004dc:	b510      	push	{r4, lr}
 80004de:	f000 fc05 	bl	8000cec <__gesf2>
 80004e2:	2800      	cmp	r0, #0
 80004e4:	dc01      	bgt.n	80004ea <__aeabi_fcmpgt+0xe>
 80004e6:	2000      	movs	r0, #0
 80004e8:	bd10      	pop	{r4, pc}
 80004ea:	2001      	movs	r0, #1
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	46c0      	nop			@ (mov r8, r8)

080004f0 <__aeabi_fcmpge>:
 80004f0:	b510      	push	{r4, lr}
 80004f2:	f000 fbfb 	bl	8000cec <__gesf2>
 80004f6:	2800      	cmp	r0, #0
 80004f8:	da01      	bge.n	80004fe <__aeabi_fcmpge+0xe>
 80004fa:	2000      	movs	r0, #0
 80004fc:	bd10      	pop	{r4, pc}
 80004fe:	2001      	movs	r0, #1
 8000500:	bd10      	pop	{r4, pc}
 8000502:	46c0      	nop			@ (mov r8, r8)

08000504 <__aeabi_uldivmod>:
 8000504:	2b00      	cmp	r3, #0
 8000506:	d111      	bne.n	800052c <__aeabi_uldivmod+0x28>
 8000508:	2a00      	cmp	r2, #0
 800050a:	d10f      	bne.n	800052c <__aeabi_uldivmod+0x28>
 800050c:	2900      	cmp	r1, #0
 800050e:	d100      	bne.n	8000512 <__aeabi_uldivmod+0xe>
 8000510:	2800      	cmp	r0, #0
 8000512:	d002      	beq.n	800051a <__aeabi_uldivmod+0x16>
 8000514:	2100      	movs	r1, #0
 8000516:	43c9      	mvns	r1, r1
 8000518:	0008      	movs	r0, r1
 800051a:	b407      	push	{r0, r1, r2}
 800051c:	4802      	ldr	r0, [pc, #8]	@ (8000528 <__aeabi_uldivmod+0x24>)
 800051e:	a102      	add	r1, pc, #8	@ (adr r1, 8000528 <__aeabi_uldivmod+0x24>)
 8000520:	1840      	adds	r0, r0, r1
 8000522:	9002      	str	r0, [sp, #8]
 8000524:	bd03      	pop	{r0, r1, pc}
 8000526:	46c0      	nop			@ (mov r8, r8)
 8000528:	fffffee9 	.word	0xfffffee9
 800052c:	b403      	push	{r0, r1}
 800052e:	4668      	mov	r0, sp
 8000530:	b501      	push	{r0, lr}
 8000532:	9802      	ldr	r0, [sp, #8]
 8000534:	f000 f83c 	bl	80005b0 <__udivmoddi4>
 8000538:	9b01      	ldr	r3, [sp, #4]
 800053a:	469e      	mov	lr, r3
 800053c:	b002      	add	sp, #8
 800053e:	bc0c      	pop	{r2, r3}
 8000540:	4770      	bx	lr
 8000542:	46c0      	nop			@ (mov r8, r8)

08000544 <__aeabi_f2uiz>:
 8000544:	219e      	movs	r1, #158	@ 0x9e
 8000546:	b510      	push	{r4, lr}
 8000548:	05c9      	lsls	r1, r1, #23
 800054a:	1c04      	adds	r4, r0, #0
 800054c:	f7ff ffd0 	bl	80004f0 <__aeabi_fcmpge>
 8000550:	2800      	cmp	r0, #0
 8000552:	d103      	bne.n	800055c <__aeabi_f2uiz+0x18>
 8000554:	1c20      	adds	r0, r4, #0
 8000556:	f000 ff49 	bl	80013ec <__aeabi_f2iz>
 800055a:	bd10      	pop	{r4, pc}
 800055c:	219e      	movs	r1, #158	@ 0x9e
 800055e:	1c20      	adds	r0, r4, #0
 8000560:	05c9      	lsls	r1, r1, #23
 8000562:	f000 fd9f 	bl	80010a4 <__aeabi_fsub>
 8000566:	f000 ff41 	bl	80013ec <__aeabi_f2iz>
 800056a:	2380      	movs	r3, #128	@ 0x80
 800056c:	061b      	lsls	r3, r3, #24
 800056e:	469c      	mov	ip, r3
 8000570:	4460      	add	r0, ip
 8000572:	e7f2      	b.n	800055a <__aeabi_f2uiz+0x16>

08000574 <__aeabi_d2uiz>:
 8000574:	b570      	push	{r4, r5, r6, lr}
 8000576:	2200      	movs	r2, #0
 8000578:	4b0c      	ldr	r3, [pc, #48]	@ (80005ac <__aeabi_d2uiz+0x38>)
 800057a:	0004      	movs	r4, r0
 800057c:	000d      	movs	r5, r1
 800057e:	f7ff ff7d 	bl	800047c <__aeabi_dcmpge>
 8000582:	2800      	cmp	r0, #0
 8000584:	d104      	bne.n	8000590 <__aeabi_d2uiz+0x1c>
 8000586:	0020      	movs	r0, r4
 8000588:	0029      	movs	r1, r5
 800058a:	f002 fde9 	bl	8003160 <__aeabi_d2iz>
 800058e:	bd70      	pop	{r4, r5, r6, pc}
 8000590:	4b06      	ldr	r3, [pc, #24]	@ (80005ac <__aeabi_d2uiz+0x38>)
 8000592:	2200      	movs	r2, #0
 8000594:	0020      	movs	r0, r4
 8000596:	0029      	movs	r1, r5
 8000598:	f002 fa46 	bl	8002a28 <__aeabi_dsub>
 800059c:	f002 fde0 	bl	8003160 <__aeabi_d2iz>
 80005a0:	2380      	movs	r3, #128	@ 0x80
 80005a2:	061b      	lsls	r3, r3, #24
 80005a4:	469c      	mov	ip, r3
 80005a6:	4460      	add	r0, ip
 80005a8:	e7f1      	b.n	800058e <__aeabi_d2uiz+0x1a>
 80005aa:	46c0      	nop			@ (mov r8, r8)
 80005ac:	41e00000 	.word	0x41e00000

080005b0 <__udivmoddi4>:
 80005b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80005b2:	4657      	mov	r7, sl
 80005b4:	464e      	mov	r6, r9
 80005b6:	4645      	mov	r5, r8
 80005b8:	46de      	mov	lr, fp
 80005ba:	b5e0      	push	{r5, r6, r7, lr}
 80005bc:	0004      	movs	r4, r0
 80005be:	000d      	movs	r5, r1
 80005c0:	4692      	mov	sl, r2
 80005c2:	4699      	mov	r9, r3
 80005c4:	b083      	sub	sp, #12
 80005c6:	428b      	cmp	r3, r1
 80005c8:	d830      	bhi.n	800062c <__udivmoddi4+0x7c>
 80005ca:	d02d      	beq.n	8000628 <__udivmoddi4+0x78>
 80005cc:	4649      	mov	r1, r9
 80005ce:	4650      	mov	r0, sl
 80005d0:	f002 ff3e 	bl	8003450 <__clzdi2>
 80005d4:	0029      	movs	r1, r5
 80005d6:	0006      	movs	r6, r0
 80005d8:	0020      	movs	r0, r4
 80005da:	f002 ff39 	bl	8003450 <__clzdi2>
 80005de:	1a33      	subs	r3, r6, r0
 80005e0:	4698      	mov	r8, r3
 80005e2:	3b20      	subs	r3, #32
 80005e4:	d434      	bmi.n	8000650 <__udivmoddi4+0xa0>
 80005e6:	469b      	mov	fp, r3
 80005e8:	4653      	mov	r3, sl
 80005ea:	465a      	mov	r2, fp
 80005ec:	4093      	lsls	r3, r2
 80005ee:	4642      	mov	r2, r8
 80005f0:	001f      	movs	r7, r3
 80005f2:	4653      	mov	r3, sl
 80005f4:	4093      	lsls	r3, r2
 80005f6:	001e      	movs	r6, r3
 80005f8:	42af      	cmp	r7, r5
 80005fa:	d83b      	bhi.n	8000674 <__udivmoddi4+0xc4>
 80005fc:	42af      	cmp	r7, r5
 80005fe:	d100      	bne.n	8000602 <__udivmoddi4+0x52>
 8000600:	e079      	b.n	80006f6 <__udivmoddi4+0x146>
 8000602:	465b      	mov	r3, fp
 8000604:	1ba4      	subs	r4, r4, r6
 8000606:	41bd      	sbcs	r5, r7
 8000608:	2b00      	cmp	r3, #0
 800060a:	da00      	bge.n	800060e <__udivmoddi4+0x5e>
 800060c:	e076      	b.n	80006fc <__udivmoddi4+0x14c>
 800060e:	2200      	movs	r2, #0
 8000610:	2300      	movs	r3, #0
 8000612:	9200      	str	r2, [sp, #0]
 8000614:	9301      	str	r3, [sp, #4]
 8000616:	2301      	movs	r3, #1
 8000618:	465a      	mov	r2, fp
 800061a:	4093      	lsls	r3, r2
 800061c:	9301      	str	r3, [sp, #4]
 800061e:	2301      	movs	r3, #1
 8000620:	4642      	mov	r2, r8
 8000622:	4093      	lsls	r3, r2
 8000624:	9300      	str	r3, [sp, #0]
 8000626:	e029      	b.n	800067c <__udivmoddi4+0xcc>
 8000628:	4282      	cmp	r2, r0
 800062a:	d9cf      	bls.n	80005cc <__udivmoddi4+0x1c>
 800062c:	2200      	movs	r2, #0
 800062e:	2300      	movs	r3, #0
 8000630:	9200      	str	r2, [sp, #0]
 8000632:	9301      	str	r3, [sp, #4]
 8000634:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8000636:	2b00      	cmp	r3, #0
 8000638:	d001      	beq.n	800063e <__udivmoddi4+0x8e>
 800063a:	601c      	str	r4, [r3, #0]
 800063c:	605d      	str	r5, [r3, #4]
 800063e:	9800      	ldr	r0, [sp, #0]
 8000640:	9901      	ldr	r1, [sp, #4]
 8000642:	b003      	add	sp, #12
 8000644:	bcf0      	pop	{r4, r5, r6, r7}
 8000646:	46bb      	mov	fp, r7
 8000648:	46b2      	mov	sl, r6
 800064a:	46a9      	mov	r9, r5
 800064c:	46a0      	mov	r8, r4
 800064e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000650:	4642      	mov	r2, r8
 8000652:	469b      	mov	fp, r3
 8000654:	2320      	movs	r3, #32
 8000656:	1a9b      	subs	r3, r3, r2
 8000658:	4652      	mov	r2, sl
 800065a:	40da      	lsrs	r2, r3
 800065c:	4641      	mov	r1, r8
 800065e:	0013      	movs	r3, r2
 8000660:	464a      	mov	r2, r9
 8000662:	408a      	lsls	r2, r1
 8000664:	0017      	movs	r7, r2
 8000666:	4642      	mov	r2, r8
 8000668:	431f      	orrs	r7, r3
 800066a:	4653      	mov	r3, sl
 800066c:	4093      	lsls	r3, r2
 800066e:	001e      	movs	r6, r3
 8000670:	42af      	cmp	r7, r5
 8000672:	d9c3      	bls.n	80005fc <__udivmoddi4+0x4c>
 8000674:	2200      	movs	r2, #0
 8000676:	2300      	movs	r3, #0
 8000678:	9200      	str	r2, [sp, #0]
 800067a:	9301      	str	r3, [sp, #4]
 800067c:	4643      	mov	r3, r8
 800067e:	2b00      	cmp	r3, #0
 8000680:	d0d8      	beq.n	8000634 <__udivmoddi4+0x84>
 8000682:	07fb      	lsls	r3, r7, #31
 8000684:	0872      	lsrs	r2, r6, #1
 8000686:	431a      	orrs	r2, r3
 8000688:	4646      	mov	r6, r8
 800068a:	087b      	lsrs	r3, r7, #1
 800068c:	e00e      	b.n	80006ac <__udivmoddi4+0xfc>
 800068e:	42ab      	cmp	r3, r5
 8000690:	d101      	bne.n	8000696 <__udivmoddi4+0xe6>
 8000692:	42a2      	cmp	r2, r4
 8000694:	d80c      	bhi.n	80006b0 <__udivmoddi4+0x100>
 8000696:	1aa4      	subs	r4, r4, r2
 8000698:	419d      	sbcs	r5, r3
 800069a:	2001      	movs	r0, #1
 800069c:	1924      	adds	r4, r4, r4
 800069e:	416d      	adcs	r5, r5
 80006a0:	2100      	movs	r1, #0
 80006a2:	3e01      	subs	r6, #1
 80006a4:	1824      	adds	r4, r4, r0
 80006a6:	414d      	adcs	r5, r1
 80006a8:	2e00      	cmp	r6, #0
 80006aa:	d006      	beq.n	80006ba <__udivmoddi4+0x10a>
 80006ac:	42ab      	cmp	r3, r5
 80006ae:	d9ee      	bls.n	800068e <__udivmoddi4+0xde>
 80006b0:	3e01      	subs	r6, #1
 80006b2:	1924      	adds	r4, r4, r4
 80006b4:	416d      	adcs	r5, r5
 80006b6:	2e00      	cmp	r6, #0
 80006b8:	d1f8      	bne.n	80006ac <__udivmoddi4+0xfc>
 80006ba:	9800      	ldr	r0, [sp, #0]
 80006bc:	9901      	ldr	r1, [sp, #4]
 80006be:	465b      	mov	r3, fp
 80006c0:	1900      	adds	r0, r0, r4
 80006c2:	4169      	adcs	r1, r5
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	db24      	blt.n	8000712 <__udivmoddi4+0x162>
 80006c8:	002b      	movs	r3, r5
 80006ca:	465a      	mov	r2, fp
 80006cc:	4644      	mov	r4, r8
 80006ce:	40d3      	lsrs	r3, r2
 80006d0:	002a      	movs	r2, r5
 80006d2:	40e2      	lsrs	r2, r4
 80006d4:	001c      	movs	r4, r3
 80006d6:	465b      	mov	r3, fp
 80006d8:	0015      	movs	r5, r2
 80006da:	2b00      	cmp	r3, #0
 80006dc:	db2a      	blt.n	8000734 <__udivmoddi4+0x184>
 80006de:	0026      	movs	r6, r4
 80006e0:	409e      	lsls	r6, r3
 80006e2:	0033      	movs	r3, r6
 80006e4:	0026      	movs	r6, r4
 80006e6:	4647      	mov	r7, r8
 80006e8:	40be      	lsls	r6, r7
 80006ea:	0032      	movs	r2, r6
 80006ec:	1a80      	subs	r0, r0, r2
 80006ee:	4199      	sbcs	r1, r3
 80006f0:	9000      	str	r0, [sp, #0]
 80006f2:	9101      	str	r1, [sp, #4]
 80006f4:	e79e      	b.n	8000634 <__udivmoddi4+0x84>
 80006f6:	42a3      	cmp	r3, r4
 80006f8:	d8bc      	bhi.n	8000674 <__udivmoddi4+0xc4>
 80006fa:	e782      	b.n	8000602 <__udivmoddi4+0x52>
 80006fc:	4642      	mov	r2, r8
 80006fe:	2320      	movs	r3, #32
 8000700:	2100      	movs	r1, #0
 8000702:	1a9b      	subs	r3, r3, r2
 8000704:	2200      	movs	r2, #0
 8000706:	9100      	str	r1, [sp, #0]
 8000708:	9201      	str	r2, [sp, #4]
 800070a:	2201      	movs	r2, #1
 800070c:	40da      	lsrs	r2, r3
 800070e:	9201      	str	r2, [sp, #4]
 8000710:	e785      	b.n	800061e <__udivmoddi4+0x6e>
 8000712:	4642      	mov	r2, r8
 8000714:	2320      	movs	r3, #32
 8000716:	1a9b      	subs	r3, r3, r2
 8000718:	002a      	movs	r2, r5
 800071a:	4646      	mov	r6, r8
 800071c:	409a      	lsls	r2, r3
 800071e:	0023      	movs	r3, r4
 8000720:	40f3      	lsrs	r3, r6
 8000722:	4644      	mov	r4, r8
 8000724:	4313      	orrs	r3, r2
 8000726:	002a      	movs	r2, r5
 8000728:	40e2      	lsrs	r2, r4
 800072a:	001c      	movs	r4, r3
 800072c:	465b      	mov	r3, fp
 800072e:	0015      	movs	r5, r2
 8000730:	2b00      	cmp	r3, #0
 8000732:	dad4      	bge.n	80006de <__udivmoddi4+0x12e>
 8000734:	4642      	mov	r2, r8
 8000736:	002f      	movs	r7, r5
 8000738:	2320      	movs	r3, #32
 800073a:	0026      	movs	r6, r4
 800073c:	4097      	lsls	r7, r2
 800073e:	1a9b      	subs	r3, r3, r2
 8000740:	40de      	lsrs	r6, r3
 8000742:	003b      	movs	r3, r7
 8000744:	4333      	orrs	r3, r6
 8000746:	e7cd      	b.n	80006e4 <__udivmoddi4+0x134>

08000748 <__aeabi_fadd>:
 8000748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800074a:	46ce      	mov	lr, r9
 800074c:	4647      	mov	r7, r8
 800074e:	0243      	lsls	r3, r0, #9
 8000750:	0a5a      	lsrs	r2, r3, #9
 8000752:	024e      	lsls	r6, r1, #9
 8000754:	0045      	lsls	r5, r0, #1
 8000756:	0fc4      	lsrs	r4, r0, #31
 8000758:	0048      	lsls	r0, r1, #1
 800075a:	4691      	mov	r9, r2
 800075c:	0e2d      	lsrs	r5, r5, #24
 800075e:	0a72      	lsrs	r2, r6, #9
 8000760:	0e00      	lsrs	r0, r0, #24
 8000762:	4694      	mov	ip, r2
 8000764:	b580      	push	{r7, lr}
 8000766:	099b      	lsrs	r3, r3, #6
 8000768:	0fc9      	lsrs	r1, r1, #31
 800076a:	09b6      	lsrs	r6, r6, #6
 800076c:	1a2a      	subs	r2, r5, r0
 800076e:	428c      	cmp	r4, r1
 8000770:	d021      	beq.n	80007b6 <__aeabi_fadd+0x6e>
 8000772:	2a00      	cmp	r2, #0
 8000774:	dd0d      	ble.n	8000792 <__aeabi_fadd+0x4a>
 8000776:	2800      	cmp	r0, #0
 8000778:	d12d      	bne.n	80007d6 <__aeabi_fadd+0x8e>
 800077a:	2e00      	cmp	r6, #0
 800077c:	d100      	bne.n	8000780 <__aeabi_fadd+0x38>
 800077e:	e08d      	b.n	800089c <__aeabi_fadd+0x154>
 8000780:	1e51      	subs	r1, r2, #1
 8000782:	2a01      	cmp	r2, #1
 8000784:	d100      	bne.n	8000788 <__aeabi_fadd+0x40>
 8000786:	e11d      	b.n	80009c4 <__aeabi_fadd+0x27c>
 8000788:	2aff      	cmp	r2, #255	@ 0xff
 800078a:	d100      	bne.n	800078e <__aeabi_fadd+0x46>
 800078c:	e0ab      	b.n	80008e6 <__aeabi_fadd+0x19e>
 800078e:	000a      	movs	r2, r1
 8000790:	e027      	b.n	80007e2 <__aeabi_fadd+0x9a>
 8000792:	2a00      	cmp	r2, #0
 8000794:	d04d      	beq.n	8000832 <__aeabi_fadd+0xea>
 8000796:	1b42      	subs	r2, r0, r5
 8000798:	2d00      	cmp	r5, #0
 800079a:	d000      	beq.n	800079e <__aeabi_fadd+0x56>
 800079c:	e0cc      	b.n	8000938 <__aeabi_fadd+0x1f0>
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d100      	bne.n	80007a4 <__aeabi_fadd+0x5c>
 80007a2:	e079      	b.n	8000898 <__aeabi_fadd+0x150>
 80007a4:	1e54      	subs	r4, r2, #1
 80007a6:	2a01      	cmp	r2, #1
 80007a8:	d100      	bne.n	80007ac <__aeabi_fadd+0x64>
 80007aa:	e128      	b.n	80009fe <__aeabi_fadd+0x2b6>
 80007ac:	2aff      	cmp	r2, #255	@ 0xff
 80007ae:	d100      	bne.n	80007b2 <__aeabi_fadd+0x6a>
 80007b0:	e097      	b.n	80008e2 <__aeabi_fadd+0x19a>
 80007b2:	0022      	movs	r2, r4
 80007b4:	e0c5      	b.n	8000942 <__aeabi_fadd+0x1fa>
 80007b6:	2a00      	cmp	r2, #0
 80007b8:	dc00      	bgt.n	80007bc <__aeabi_fadd+0x74>
 80007ba:	e096      	b.n	80008ea <__aeabi_fadd+0x1a2>
 80007bc:	2800      	cmp	r0, #0
 80007be:	d04f      	beq.n	8000860 <__aeabi_fadd+0x118>
 80007c0:	2dff      	cmp	r5, #255	@ 0xff
 80007c2:	d100      	bne.n	80007c6 <__aeabi_fadd+0x7e>
 80007c4:	e08f      	b.n	80008e6 <__aeabi_fadd+0x19e>
 80007c6:	2180      	movs	r1, #128	@ 0x80
 80007c8:	04c9      	lsls	r1, r1, #19
 80007ca:	430e      	orrs	r6, r1
 80007cc:	2a1b      	cmp	r2, #27
 80007ce:	dd51      	ble.n	8000874 <__aeabi_fadd+0x12c>
 80007d0:	002a      	movs	r2, r5
 80007d2:	3301      	adds	r3, #1
 80007d4:	e018      	b.n	8000808 <__aeabi_fadd+0xc0>
 80007d6:	2dff      	cmp	r5, #255	@ 0xff
 80007d8:	d100      	bne.n	80007dc <__aeabi_fadd+0x94>
 80007da:	e084      	b.n	80008e6 <__aeabi_fadd+0x19e>
 80007dc:	2180      	movs	r1, #128	@ 0x80
 80007de:	04c9      	lsls	r1, r1, #19
 80007e0:	430e      	orrs	r6, r1
 80007e2:	2101      	movs	r1, #1
 80007e4:	2a1b      	cmp	r2, #27
 80007e6:	dc08      	bgt.n	80007fa <__aeabi_fadd+0xb2>
 80007e8:	0031      	movs	r1, r6
 80007ea:	2020      	movs	r0, #32
 80007ec:	40d1      	lsrs	r1, r2
 80007ee:	1a82      	subs	r2, r0, r2
 80007f0:	4096      	lsls	r6, r2
 80007f2:	0032      	movs	r2, r6
 80007f4:	1e50      	subs	r0, r2, #1
 80007f6:	4182      	sbcs	r2, r0
 80007f8:	4311      	orrs	r1, r2
 80007fa:	1a5b      	subs	r3, r3, r1
 80007fc:	015a      	lsls	r2, r3, #5
 80007fe:	d459      	bmi.n	80008b4 <__aeabi_fadd+0x16c>
 8000800:	2107      	movs	r1, #7
 8000802:	002a      	movs	r2, r5
 8000804:	4019      	ands	r1, r3
 8000806:	d049      	beq.n	800089c <__aeabi_fadd+0x154>
 8000808:	210f      	movs	r1, #15
 800080a:	4019      	ands	r1, r3
 800080c:	2904      	cmp	r1, #4
 800080e:	d000      	beq.n	8000812 <__aeabi_fadd+0xca>
 8000810:	3304      	adds	r3, #4
 8000812:	0159      	lsls	r1, r3, #5
 8000814:	d542      	bpl.n	800089c <__aeabi_fadd+0x154>
 8000816:	1c50      	adds	r0, r2, #1
 8000818:	2afe      	cmp	r2, #254	@ 0xfe
 800081a:	d03a      	beq.n	8000892 <__aeabi_fadd+0x14a>
 800081c:	019b      	lsls	r3, r3, #6
 800081e:	b2c0      	uxtb	r0, r0
 8000820:	0a5b      	lsrs	r3, r3, #9
 8000822:	05c0      	lsls	r0, r0, #23
 8000824:	4318      	orrs	r0, r3
 8000826:	07e4      	lsls	r4, r4, #31
 8000828:	4320      	orrs	r0, r4
 800082a:	bcc0      	pop	{r6, r7}
 800082c:	46b9      	mov	r9, r7
 800082e:	46b0      	mov	r8, r6
 8000830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000832:	20fe      	movs	r0, #254	@ 0xfe
 8000834:	4680      	mov	r8, r0
 8000836:	1c6f      	adds	r7, r5, #1
 8000838:	0038      	movs	r0, r7
 800083a:	4647      	mov	r7, r8
 800083c:	4207      	tst	r7, r0
 800083e:	d000      	beq.n	8000842 <__aeabi_fadd+0xfa>
 8000840:	e08e      	b.n	8000960 <__aeabi_fadd+0x218>
 8000842:	2d00      	cmp	r5, #0
 8000844:	d000      	beq.n	8000848 <__aeabi_fadd+0x100>
 8000846:	e0b4      	b.n	80009b2 <__aeabi_fadd+0x26a>
 8000848:	2b00      	cmp	r3, #0
 800084a:	d100      	bne.n	800084e <__aeabi_fadd+0x106>
 800084c:	e0db      	b.n	8000a06 <__aeabi_fadd+0x2be>
 800084e:	2e00      	cmp	r6, #0
 8000850:	d06c      	beq.n	800092c <__aeabi_fadd+0x1e4>
 8000852:	1b98      	subs	r0, r3, r6
 8000854:	0145      	lsls	r5, r0, #5
 8000856:	d400      	bmi.n	800085a <__aeabi_fadd+0x112>
 8000858:	e0f7      	b.n	8000a4a <__aeabi_fadd+0x302>
 800085a:	000c      	movs	r4, r1
 800085c:	1af3      	subs	r3, r6, r3
 800085e:	e03d      	b.n	80008dc <__aeabi_fadd+0x194>
 8000860:	2e00      	cmp	r6, #0
 8000862:	d01b      	beq.n	800089c <__aeabi_fadd+0x154>
 8000864:	1e51      	subs	r1, r2, #1
 8000866:	2a01      	cmp	r2, #1
 8000868:	d100      	bne.n	800086c <__aeabi_fadd+0x124>
 800086a:	e082      	b.n	8000972 <__aeabi_fadd+0x22a>
 800086c:	2aff      	cmp	r2, #255	@ 0xff
 800086e:	d03a      	beq.n	80008e6 <__aeabi_fadd+0x19e>
 8000870:	000a      	movs	r2, r1
 8000872:	e7ab      	b.n	80007cc <__aeabi_fadd+0x84>
 8000874:	0031      	movs	r1, r6
 8000876:	2020      	movs	r0, #32
 8000878:	40d1      	lsrs	r1, r2
 800087a:	1a82      	subs	r2, r0, r2
 800087c:	4096      	lsls	r6, r2
 800087e:	0032      	movs	r2, r6
 8000880:	1e50      	subs	r0, r2, #1
 8000882:	4182      	sbcs	r2, r0
 8000884:	430a      	orrs	r2, r1
 8000886:	189b      	adds	r3, r3, r2
 8000888:	015a      	lsls	r2, r3, #5
 800088a:	d5b9      	bpl.n	8000800 <__aeabi_fadd+0xb8>
 800088c:	1c6a      	adds	r2, r5, #1
 800088e:	2dfe      	cmp	r5, #254	@ 0xfe
 8000890:	d175      	bne.n	800097e <__aeabi_fadd+0x236>
 8000892:	20ff      	movs	r0, #255	@ 0xff
 8000894:	2300      	movs	r3, #0
 8000896:	e7c4      	b.n	8000822 <__aeabi_fadd+0xda>
 8000898:	000c      	movs	r4, r1
 800089a:	0033      	movs	r3, r6
 800089c:	08db      	lsrs	r3, r3, #3
 800089e:	2aff      	cmp	r2, #255	@ 0xff
 80008a0:	d146      	bne.n	8000930 <__aeabi_fadd+0x1e8>
 80008a2:	2b00      	cmp	r3, #0
 80008a4:	d0f5      	beq.n	8000892 <__aeabi_fadd+0x14a>
 80008a6:	2280      	movs	r2, #128	@ 0x80
 80008a8:	03d2      	lsls	r2, r2, #15
 80008aa:	4313      	orrs	r3, r2
 80008ac:	025b      	lsls	r3, r3, #9
 80008ae:	20ff      	movs	r0, #255	@ 0xff
 80008b0:	0a5b      	lsrs	r3, r3, #9
 80008b2:	e7b6      	b.n	8000822 <__aeabi_fadd+0xda>
 80008b4:	019f      	lsls	r7, r3, #6
 80008b6:	09bf      	lsrs	r7, r7, #6
 80008b8:	0038      	movs	r0, r7
 80008ba:	f002 fdab 	bl	8003414 <__clzsi2>
 80008be:	3805      	subs	r0, #5
 80008c0:	4087      	lsls	r7, r0
 80008c2:	4285      	cmp	r5, r0
 80008c4:	dc24      	bgt.n	8000910 <__aeabi_fadd+0x1c8>
 80008c6:	003b      	movs	r3, r7
 80008c8:	2120      	movs	r1, #32
 80008ca:	1b42      	subs	r2, r0, r5
 80008cc:	3201      	adds	r2, #1
 80008ce:	40d3      	lsrs	r3, r2
 80008d0:	1a8a      	subs	r2, r1, r2
 80008d2:	4097      	lsls	r7, r2
 80008d4:	1e7a      	subs	r2, r7, #1
 80008d6:	4197      	sbcs	r7, r2
 80008d8:	2200      	movs	r2, #0
 80008da:	433b      	orrs	r3, r7
 80008dc:	0759      	lsls	r1, r3, #29
 80008de:	d193      	bne.n	8000808 <__aeabi_fadd+0xc0>
 80008e0:	e797      	b.n	8000812 <__aeabi_fadd+0xca>
 80008e2:	000c      	movs	r4, r1
 80008e4:	0033      	movs	r3, r6
 80008e6:	08db      	lsrs	r3, r3, #3
 80008e8:	e7db      	b.n	80008a2 <__aeabi_fadd+0x15a>
 80008ea:	2a00      	cmp	r2, #0
 80008ec:	d014      	beq.n	8000918 <__aeabi_fadd+0x1d0>
 80008ee:	1b42      	subs	r2, r0, r5
 80008f0:	2d00      	cmp	r5, #0
 80008f2:	d14b      	bne.n	800098c <__aeabi_fadd+0x244>
 80008f4:	2b00      	cmp	r3, #0
 80008f6:	d0d0      	beq.n	800089a <__aeabi_fadd+0x152>
 80008f8:	1e51      	subs	r1, r2, #1
 80008fa:	2a01      	cmp	r2, #1
 80008fc:	d100      	bne.n	8000900 <__aeabi_fadd+0x1b8>
 80008fe:	e09e      	b.n	8000a3e <__aeabi_fadd+0x2f6>
 8000900:	2aff      	cmp	r2, #255	@ 0xff
 8000902:	d0ef      	beq.n	80008e4 <__aeabi_fadd+0x19c>
 8000904:	000a      	movs	r2, r1
 8000906:	2a1b      	cmp	r2, #27
 8000908:	dd5f      	ble.n	80009ca <__aeabi_fadd+0x282>
 800090a:	0002      	movs	r2, r0
 800090c:	1c73      	adds	r3, r6, #1
 800090e:	e77b      	b.n	8000808 <__aeabi_fadd+0xc0>
 8000910:	4b50      	ldr	r3, [pc, #320]	@ (8000a54 <__aeabi_fadd+0x30c>)
 8000912:	1a2a      	subs	r2, r5, r0
 8000914:	403b      	ands	r3, r7
 8000916:	e7e1      	b.n	80008dc <__aeabi_fadd+0x194>
 8000918:	21fe      	movs	r1, #254	@ 0xfe
 800091a:	1c6a      	adds	r2, r5, #1
 800091c:	4211      	tst	r1, r2
 800091e:	d13b      	bne.n	8000998 <__aeabi_fadd+0x250>
 8000920:	2d00      	cmp	r5, #0
 8000922:	d15d      	bne.n	80009e0 <__aeabi_fadd+0x298>
 8000924:	2b00      	cmp	r3, #0
 8000926:	d07f      	beq.n	8000a28 <__aeabi_fadd+0x2e0>
 8000928:	2e00      	cmp	r6, #0
 800092a:	d17f      	bne.n	8000a2c <__aeabi_fadd+0x2e4>
 800092c:	2200      	movs	r2, #0
 800092e:	08db      	lsrs	r3, r3, #3
 8000930:	025b      	lsls	r3, r3, #9
 8000932:	0a5b      	lsrs	r3, r3, #9
 8000934:	b2d0      	uxtb	r0, r2
 8000936:	e774      	b.n	8000822 <__aeabi_fadd+0xda>
 8000938:	28ff      	cmp	r0, #255	@ 0xff
 800093a:	d0d2      	beq.n	80008e2 <__aeabi_fadd+0x19a>
 800093c:	2480      	movs	r4, #128	@ 0x80
 800093e:	04e4      	lsls	r4, r4, #19
 8000940:	4323      	orrs	r3, r4
 8000942:	2401      	movs	r4, #1
 8000944:	2a1b      	cmp	r2, #27
 8000946:	dc07      	bgt.n	8000958 <__aeabi_fadd+0x210>
 8000948:	001c      	movs	r4, r3
 800094a:	2520      	movs	r5, #32
 800094c:	40d4      	lsrs	r4, r2
 800094e:	1aaa      	subs	r2, r5, r2
 8000950:	4093      	lsls	r3, r2
 8000952:	1e5a      	subs	r2, r3, #1
 8000954:	4193      	sbcs	r3, r2
 8000956:	431c      	orrs	r4, r3
 8000958:	1b33      	subs	r3, r6, r4
 800095a:	0005      	movs	r5, r0
 800095c:	000c      	movs	r4, r1
 800095e:	e74d      	b.n	80007fc <__aeabi_fadd+0xb4>
 8000960:	1b9f      	subs	r7, r3, r6
 8000962:	017a      	lsls	r2, r7, #5
 8000964:	d422      	bmi.n	80009ac <__aeabi_fadd+0x264>
 8000966:	2f00      	cmp	r7, #0
 8000968:	d1a6      	bne.n	80008b8 <__aeabi_fadd+0x170>
 800096a:	2400      	movs	r4, #0
 800096c:	2000      	movs	r0, #0
 800096e:	2300      	movs	r3, #0
 8000970:	e757      	b.n	8000822 <__aeabi_fadd+0xda>
 8000972:	199b      	adds	r3, r3, r6
 8000974:	2501      	movs	r5, #1
 8000976:	3201      	adds	r2, #1
 8000978:	0159      	lsls	r1, r3, #5
 800097a:	d400      	bmi.n	800097e <__aeabi_fadd+0x236>
 800097c:	e740      	b.n	8000800 <__aeabi_fadd+0xb8>
 800097e:	2101      	movs	r1, #1
 8000980:	4835      	ldr	r0, [pc, #212]	@ (8000a58 <__aeabi_fadd+0x310>)
 8000982:	4019      	ands	r1, r3
 8000984:	085b      	lsrs	r3, r3, #1
 8000986:	4003      	ands	r3, r0
 8000988:	430b      	orrs	r3, r1
 800098a:	e7a7      	b.n	80008dc <__aeabi_fadd+0x194>
 800098c:	28ff      	cmp	r0, #255	@ 0xff
 800098e:	d0a9      	beq.n	80008e4 <__aeabi_fadd+0x19c>
 8000990:	2180      	movs	r1, #128	@ 0x80
 8000992:	04c9      	lsls	r1, r1, #19
 8000994:	430b      	orrs	r3, r1
 8000996:	e7b6      	b.n	8000906 <__aeabi_fadd+0x1be>
 8000998:	2aff      	cmp	r2, #255	@ 0xff
 800099a:	d100      	bne.n	800099e <__aeabi_fadd+0x256>
 800099c:	e779      	b.n	8000892 <__aeabi_fadd+0x14a>
 800099e:	199b      	adds	r3, r3, r6
 80009a0:	085b      	lsrs	r3, r3, #1
 80009a2:	0759      	lsls	r1, r3, #29
 80009a4:	d000      	beq.n	80009a8 <__aeabi_fadd+0x260>
 80009a6:	e72f      	b.n	8000808 <__aeabi_fadd+0xc0>
 80009a8:	08db      	lsrs	r3, r3, #3
 80009aa:	e7c1      	b.n	8000930 <__aeabi_fadd+0x1e8>
 80009ac:	000c      	movs	r4, r1
 80009ae:	1af7      	subs	r7, r6, r3
 80009b0:	e782      	b.n	80008b8 <__aeabi_fadd+0x170>
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d12c      	bne.n	8000a10 <__aeabi_fadd+0x2c8>
 80009b6:	2e00      	cmp	r6, #0
 80009b8:	d193      	bne.n	80008e2 <__aeabi_fadd+0x19a>
 80009ba:	2380      	movs	r3, #128	@ 0x80
 80009bc:	2400      	movs	r4, #0
 80009be:	20ff      	movs	r0, #255	@ 0xff
 80009c0:	03db      	lsls	r3, r3, #15
 80009c2:	e72e      	b.n	8000822 <__aeabi_fadd+0xda>
 80009c4:	2501      	movs	r5, #1
 80009c6:	1b9b      	subs	r3, r3, r6
 80009c8:	e718      	b.n	80007fc <__aeabi_fadd+0xb4>
 80009ca:	0019      	movs	r1, r3
 80009cc:	2520      	movs	r5, #32
 80009ce:	40d1      	lsrs	r1, r2
 80009d0:	1aaa      	subs	r2, r5, r2
 80009d2:	4093      	lsls	r3, r2
 80009d4:	1e5a      	subs	r2, r3, #1
 80009d6:	4193      	sbcs	r3, r2
 80009d8:	430b      	orrs	r3, r1
 80009da:	0005      	movs	r5, r0
 80009dc:	199b      	adds	r3, r3, r6
 80009de:	e753      	b.n	8000888 <__aeabi_fadd+0x140>
 80009e0:	2b00      	cmp	r3, #0
 80009e2:	d100      	bne.n	80009e6 <__aeabi_fadd+0x29e>
 80009e4:	e77e      	b.n	80008e4 <__aeabi_fadd+0x19c>
 80009e6:	2e00      	cmp	r6, #0
 80009e8:	d100      	bne.n	80009ec <__aeabi_fadd+0x2a4>
 80009ea:	e77c      	b.n	80008e6 <__aeabi_fadd+0x19e>
 80009ec:	2280      	movs	r2, #128	@ 0x80
 80009ee:	03d2      	lsls	r2, r2, #15
 80009f0:	4591      	cmp	r9, r2
 80009f2:	d302      	bcc.n	80009fa <__aeabi_fadd+0x2b2>
 80009f4:	4594      	cmp	ip, r2
 80009f6:	d200      	bcs.n	80009fa <__aeabi_fadd+0x2b2>
 80009f8:	0033      	movs	r3, r6
 80009fa:	08db      	lsrs	r3, r3, #3
 80009fc:	e753      	b.n	80008a6 <__aeabi_fadd+0x15e>
 80009fe:	000c      	movs	r4, r1
 8000a00:	1af3      	subs	r3, r6, r3
 8000a02:	3501      	adds	r5, #1
 8000a04:	e6fa      	b.n	80007fc <__aeabi_fadd+0xb4>
 8000a06:	2e00      	cmp	r6, #0
 8000a08:	d0af      	beq.n	800096a <__aeabi_fadd+0x222>
 8000a0a:	000c      	movs	r4, r1
 8000a0c:	0033      	movs	r3, r6
 8000a0e:	e78d      	b.n	800092c <__aeabi_fadd+0x1e4>
 8000a10:	2e00      	cmp	r6, #0
 8000a12:	d100      	bne.n	8000a16 <__aeabi_fadd+0x2ce>
 8000a14:	e767      	b.n	80008e6 <__aeabi_fadd+0x19e>
 8000a16:	2280      	movs	r2, #128	@ 0x80
 8000a18:	03d2      	lsls	r2, r2, #15
 8000a1a:	4591      	cmp	r9, r2
 8000a1c:	d3ed      	bcc.n	80009fa <__aeabi_fadd+0x2b2>
 8000a1e:	4594      	cmp	ip, r2
 8000a20:	d2eb      	bcs.n	80009fa <__aeabi_fadd+0x2b2>
 8000a22:	000c      	movs	r4, r1
 8000a24:	0033      	movs	r3, r6
 8000a26:	e7e8      	b.n	80009fa <__aeabi_fadd+0x2b2>
 8000a28:	0033      	movs	r3, r6
 8000a2a:	e77f      	b.n	800092c <__aeabi_fadd+0x1e4>
 8000a2c:	199b      	adds	r3, r3, r6
 8000a2e:	2200      	movs	r2, #0
 8000a30:	0159      	lsls	r1, r3, #5
 8000a32:	d5b9      	bpl.n	80009a8 <__aeabi_fadd+0x260>
 8000a34:	4a07      	ldr	r2, [pc, #28]	@ (8000a54 <__aeabi_fadd+0x30c>)
 8000a36:	4013      	ands	r3, r2
 8000a38:	08db      	lsrs	r3, r3, #3
 8000a3a:	2201      	movs	r2, #1
 8000a3c:	e778      	b.n	8000930 <__aeabi_fadd+0x1e8>
 8000a3e:	199b      	adds	r3, r3, r6
 8000a40:	3201      	adds	r2, #1
 8000a42:	3501      	adds	r5, #1
 8000a44:	0159      	lsls	r1, r3, #5
 8000a46:	d49a      	bmi.n	800097e <__aeabi_fadd+0x236>
 8000a48:	e6da      	b.n	8000800 <__aeabi_fadd+0xb8>
 8000a4a:	1e03      	subs	r3, r0, #0
 8000a4c:	d08d      	beq.n	800096a <__aeabi_fadd+0x222>
 8000a4e:	08db      	lsrs	r3, r3, #3
 8000a50:	e76e      	b.n	8000930 <__aeabi_fadd+0x1e8>
 8000a52:	46c0      	nop			@ (mov r8, r8)
 8000a54:	fbffffff 	.word	0xfbffffff
 8000a58:	7dffffff 	.word	0x7dffffff

08000a5c <__aeabi_fdiv>:
 8000a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a5e:	464f      	mov	r7, r9
 8000a60:	4646      	mov	r6, r8
 8000a62:	46d6      	mov	lr, sl
 8000a64:	0244      	lsls	r4, r0, #9
 8000a66:	b5c0      	push	{r6, r7, lr}
 8000a68:	0047      	lsls	r7, r0, #1
 8000a6a:	1c0e      	adds	r6, r1, #0
 8000a6c:	0a64      	lsrs	r4, r4, #9
 8000a6e:	0e3f      	lsrs	r7, r7, #24
 8000a70:	0fc5      	lsrs	r5, r0, #31
 8000a72:	2f00      	cmp	r7, #0
 8000a74:	d03c      	beq.n	8000af0 <__aeabi_fdiv+0x94>
 8000a76:	2fff      	cmp	r7, #255	@ 0xff
 8000a78:	d042      	beq.n	8000b00 <__aeabi_fdiv+0xa4>
 8000a7a:	2300      	movs	r3, #0
 8000a7c:	2280      	movs	r2, #128	@ 0x80
 8000a7e:	4699      	mov	r9, r3
 8000a80:	469a      	mov	sl, r3
 8000a82:	00e4      	lsls	r4, r4, #3
 8000a84:	04d2      	lsls	r2, r2, #19
 8000a86:	4314      	orrs	r4, r2
 8000a88:	3f7f      	subs	r7, #127	@ 0x7f
 8000a8a:	0273      	lsls	r3, r6, #9
 8000a8c:	0a5b      	lsrs	r3, r3, #9
 8000a8e:	4698      	mov	r8, r3
 8000a90:	0073      	lsls	r3, r6, #1
 8000a92:	0e1b      	lsrs	r3, r3, #24
 8000a94:	0ff6      	lsrs	r6, r6, #31
 8000a96:	2b00      	cmp	r3, #0
 8000a98:	d01b      	beq.n	8000ad2 <__aeabi_fdiv+0x76>
 8000a9a:	2bff      	cmp	r3, #255	@ 0xff
 8000a9c:	d013      	beq.n	8000ac6 <__aeabi_fdiv+0x6a>
 8000a9e:	4642      	mov	r2, r8
 8000aa0:	2180      	movs	r1, #128	@ 0x80
 8000aa2:	00d2      	lsls	r2, r2, #3
 8000aa4:	04c9      	lsls	r1, r1, #19
 8000aa6:	4311      	orrs	r1, r2
 8000aa8:	4688      	mov	r8, r1
 8000aaa:	2000      	movs	r0, #0
 8000aac:	3b7f      	subs	r3, #127	@ 0x7f
 8000aae:	0029      	movs	r1, r5
 8000ab0:	1aff      	subs	r7, r7, r3
 8000ab2:	464b      	mov	r3, r9
 8000ab4:	4071      	eors	r1, r6
 8000ab6:	b2c9      	uxtb	r1, r1
 8000ab8:	2b0f      	cmp	r3, #15
 8000aba:	d900      	bls.n	8000abe <__aeabi_fdiv+0x62>
 8000abc:	e0b5      	b.n	8000c2a <__aeabi_fdiv+0x1ce>
 8000abe:	4a74      	ldr	r2, [pc, #464]	@ (8000c90 <__aeabi_fdiv+0x234>)
 8000ac0:	009b      	lsls	r3, r3, #2
 8000ac2:	58d3      	ldr	r3, [r2, r3]
 8000ac4:	469f      	mov	pc, r3
 8000ac6:	4643      	mov	r3, r8
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	d13f      	bne.n	8000b4c <__aeabi_fdiv+0xf0>
 8000acc:	3fff      	subs	r7, #255	@ 0xff
 8000ace:	3302      	adds	r3, #2
 8000ad0:	e003      	b.n	8000ada <__aeabi_fdiv+0x7e>
 8000ad2:	4643      	mov	r3, r8
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d12d      	bne.n	8000b34 <__aeabi_fdiv+0xd8>
 8000ad8:	2301      	movs	r3, #1
 8000ada:	0029      	movs	r1, r5
 8000adc:	464a      	mov	r2, r9
 8000ade:	4071      	eors	r1, r6
 8000ae0:	b2c9      	uxtb	r1, r1
 8000ae2:	431a      	orrs	r2, r3
 8000ae4:	2a0e      	cmp	r2, #14
 8000ae6:	d838      	bhi.n	8000b5a <__aeabi_fdiv+0xfe>
 8000ae8:	486a      	ldr	r0, [pc, #424]	@ (8000c94 <__aeabi_fdiv+0x238>)
 8000aea:	0092      	lsls	r2, r2, #2
 8000aec:	5882      	ldr	r2, [r0, r2]
 8000aee:	4697      	mov	pc, r2
 8000af0:	2c00      	cmp	r4, #0
 8000af2:	d113      	bne.n	8000b1c <__aeabi_fdiv+0xc0>
 8000af4:	2304      	movs	r3, #4
 8000af6:	4699      	mov	r9, r3
 8000af8:	3b03      	subs	r3, #3
 8000afa:	2700      	movs	r7, #0
 8000afc:	469a      	mov	sl, r3
 8000afe:	e7c4      	b.n	8000a8a <__aeabi_fdiv+0x2e>
 8000b00:	2c00      	cmp	r4, #0
 8000b02:	d105      	bne.n	8000b10 <__aeabi_fdiv+0xb4>
 8000b04:	2308      	movs	r3, #8
 8000b06:	4699      	mov	r9, r3
 8000b08:	3b06      	subs	r3, #6
 8000b0a:	27ff      	movs	r7, #255	@ 0xff
 8000b0c:	469a      	mov	sl, r3
 8000b0e:	e7bc      	b.n	8000a8a <__aeabi_fdiv+0x2e>
 8000b10:	230c      	movs	r3, #12
 8000b12:	4699      	mov	r9, r3
 8000b14:	3b09      	subs	r3, #9
 8000b16:	27ff      	movs	r7, #255	@ 0xff
 8000b18:	469a      	mov	sl, r3
 8000b1a:	e7b6      	b.n	8000a8a <__aeabi_fdiv+0x2e>
 8000b1c:	0020      	movs	r0, r4
 8000b1e:	f002 fc79 	bl	8003414 <__clzsi2>
 8000b22:	2776      	movs	r7, #118	@ 0x76
 8000b24:	1f43      	subs	r3, r0, #5
 8000b26:	409c      	lsls	r4, r3
 8000b28:	2300      	movs	r3, #0
 8000b2a:	427f      	negs	r7, r7
 8000b2c:	4699      	mov	r9, r3
 8000b2e:	469a      	mov	sl, r3
 8000b30:	1a3f      	subs	r7, r7, r0
 8000b32:	e7aa      	b.n	8000a8a <__aeabi_fdiv+0x2e>
 8000b34:	4640      	mov	r0, r8
 8000b36:	f002 fc6d 	bl	8003414 <__clzsi2>
 8000b3a:	4642      	mov	r2, r8
 8000b3c:	1f43      	subs	r3, r0, #5
 8000b3e:	409a      	lsls	r2, r3
 8000b40:	2376      	movs	r3, #118	@ 0x76
 8000b42:	425b      	negs	r3, r3
 8000b44:	1a1b      	subs	r3, r3, r0
 8000b46:	4690      	mov	r8, r2
 8000b48:	2000      	movs	r0, #0
 8000b4a:	e7b0      	b.n	8000aae <__aeabi_fdiv+0x52>
 8000b4c:	2303      	movs	r3, #3
 8000b4e:	464a      	mov	r2, r9
 8000b50:	431a      	orrs	r2, r3
 8000b52:	4691      	mov	r9, r2
 8000b54:	2003      	movs	r0, #3
 8000b56:	33fc      	adds	r3, #252	@ 0xfc
 8000b58:	e7a9      	b.n	8000aae <__aeabi_fdiv+0x52>
 8000b5a:	000d      	movs	r5, r1
 8000b5c:	20ff      	movs	r0, #255	@ 0xff
 8000b5e:	2200      	movs	r2, #0
 8000b60:	05c0      	lsls	r0, r0, #23
 8000b62:	07ed      	lsls	r5, r5, #31
 8000b64:	4310      	orrs	r0, r2
 8000b66:	4328      	orrs	r0, r5
 8000b68:	bce0      	pop	{r5, r6, r7}
 8000b6a:	46ba      	mov	sl, r7
 8000b6c:	46b1      	mov	r9, r6
 8000b6e:	46a8      	mov	r8, r5
 8000b70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b72:	000d      	movs	r5, r1
 8000b74:	2000      	movs	r0, #0
 8000b76:	2200      	movs	r2, #0
 8000b78:	e7f2      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000b7a:	4653      	mov	r3, sl
 8000b7c:	2b02      	cmp	r3, #2
 8000b7e:	d0ed      	beq.n	8000b5c <__aeabi_fdiv+0x100>
 8000b80:	2b03      	cmp	r3, #3
 8000b82:	d033      	beq.n	8000bec <__aeabi_fdiv+0x190>
 8000b84:	46a0      	mov	r8, r4
 8000b86:	2b01      	cmp	r3, #1
 8000b88:	d105      	bne.n	8000b96 <__aeabi_fdiv+0x13a>
 8000b8a:	2000      	movs	r0, #0
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	e7e7      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000b90:	0035      	movs	r5, r6
 8000b92:	2803      	cmp	r0, #3
 8000b94:	d07a      	beq.n	8000c8c <__aeabi_fdiv+0x230>
 8000b96:	003b      	movs	r3, r7
 8000b98:	337f      	adds	r3, #127	@ 0x7f
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	dd2d      	ble.n	8000bfa <__aeabi_fdiv+0x19e>
 8000b9e:	4642      	mov	r2, r8
 8000ba0:	0752      	lsls	r2, r2, #29
 8000ba2:	d007      	beq.n	8000bb4 <__aeabi_fdiv+0x158>
 8000ba4:	220f      	movs	r2, #15
 8000ba6:	4641      	mov	r1, r8
 8000ba8:	400a      	ands	r2, r1
 8000baa:	2a04      	cmp	r2, #4
 8000bac:	d002      	beq.n	8000bb4 <__aeabi_fdiv+0x158>
 8000bae:	2204      	movs	r2, #4
 8000bb0:	4694      	mov	ip, r2
 8000bb2:	44e0      	add	r8, ip
 8000bb4:	4642      	mov	r2, r8
 8000bb6:	0112      	lsls	r2, r2, #4
 8000bb8:	d505      	bpl.n	8000bc6 <__aeabi_fdiv+0x16a>
 8000bba:	4642      	mov	r2, r8
 8000bbc:	4b36      	ldr	r3, [pc, #216]	@ (8000c98 <__aeabi_fdiv+0x23c>)
 8000bbe:	401a      	ands	r2, r3
 8000bc0:	003b      	movs	r3, r7
 8000bc2:	4690      	mov	r8, r2
 8000bc4:	3380      	adds	r3, #128	@ 0x80
 8000bc6:	2bfe      	cmp	r3, #254	@ 0xfe
 8000bc8:	dcc8      	bgt.n	8000b5c <__aeabi_fdiv+0x100>
 8000bca:	4642      	mov	r2, r8
 8000bcc:	0192      	lsls	r2, r2, #6
 8000bce:	0a52      	lsrs	r2, r2, #9
 8000bd0:	b2d8      	uxtb	r0, r3
 8000bd2:	e7c5      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000bd4:	2280      	movs	r2, #128	@ 0x80
 8000bd6:	2500      	movs	r5, #0
 8000bd8:	20ff      	movs	r0, #255	@ 0xff
 8000bda:	03d2      	lsls	r2, r2, #15
 8000bdc:	e7c0      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000bde:	2280      	movs	r2, #128	@ 0x80
 8000be0:	03d2      	lsls	r2, r2, #15
 8000be2:	4214      	tst	r4, r2
 8000be4:	d002      	beq.n	8000bec <__aeabi_fdiv+0x190>
 8000be6:	4643      	mov	r3, r8
 8000be8:	4213      	tst	r3, r2
 8000bea:	d049      	beq.n	8000c80 <__aeabi_fdiv+0x224>
 8000bec:	2280      	movs	r2, #128	@ 0x80
 8000bee:	03d2      	lsls	r2, r2, #15
 8000bf0:	4322      	orrs	r2, r4
 8000bf2:	0252      	lsls	r2, r2, #9
 8000bf4:	20ff      	movs	r0, #255	@ 0xff
 8000bf6:	0a52      	lsrs	r2, r2, #9
 8000bf8:	e7b2      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000bfa:	2201      	movs	r2, #1
 8000bfc:	1ad3      	subs	r3, r2, r3
 8000bfe:	2b1b      	cmp	r3, #27
 8000c00:	dcc3      	bgt.n	8000b8a <__aeabi_fdiv+0x12e>
 8000c02:	4642      	mov	r2, r8
 8000c04:	40da      	lsrs	r2, r3
 8000c06:	4643      	mov	r3, r8
 8000c08:	379e      	adds	r7, #158	@ 0x9e
 8000c0a:	40bb      	lsls	r3, r7
 8000c0c:	1e59      	subs	r1, r3, #1
 8000c0e:	418b      	sbcs	r3, r1
 8000c10:	431a      	orrs	r2, r3
 8000c12:	0753      	lsls	r3, r2, #29
 8000c14:	d004      	beq.n	8000c20 <__aeabi_fdiv+0x1c4>
 8000c16:	230f      	movs	r3, #15
 8000c18:	4013      	ands	r3, r2
 8000c1a:	2b04      	cmp	r3, #4
 8000c1c:	d000      	beq.n	8000c20 <__aeabi_fdiv+0x1c4>
 8000c1e:	3204      	adds	r2, #4
 8000c20:	0153      	lsls	r3, r2, #5
 8000c22:	d529      	bpl.n	8000c78 <__aeabi_fdiv+0x21c>
 8000c24:	2001      	movs	r0, #1
 8000c26:	2200      	movs	r2, #0
 8000c28:	e79a      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000c2a:	4642      	mov	r2, r8
 8000c2c:	0163      	lsls	r3, r4, #5
 8000c2e:	0155      	lsls	r5, r2, #5
 8000c30:	42ab      	cmp	r3, r5
 8000c32:	d215      	bcs.n	8000c60 <__aeabi_fdiv+0x204>
 8000c34:	201b      	movs	r0, #27
 8000c36:	2200      	movs	r2, #0
 8000c38:	3f01      	subs	r7, #1
 8000c3a:	2601      	movs	r6, #1
 8000c3c:	001c      	movs	r4, r3
 8000c3e:	0052      	lsls	r2, r2, #1
 8000c40:	005b      	lsls	r3, r3, #1
 8000c42:	2c00      	cmp	r4, #0
 8000c44:	db01      	blt.n	8000c4a <__aeabi_fdiv+0x1ee>
 8000c46:	429d      	cmp	r5, r3
 8000c48:	d801      	bhi.n	8000c4e <__aeabi_fdiv+0x1f2>
 8000c4a:	1b5b      	subs	r3, r3, r5
 8000c4c:	4332      	orrs	r2, r6
 8000c4e:	3801      	subs	r0, #1
 8000c50:	2800      	cmp	r0, #0
 8000c52:	d1f3      	bne.n	8000c3c <__aeabi_fdiv+0x1e0>
 8000c54:	1e58      	subs	r0, r3, #1
 8000c56:	4183      	sbcs	r3, r0
 8000c58:	4313      	orrs	r3, r2
 8000c5a:	4698      	mov	r8, r3
 8000c5c:	000d      	movs	r5, r1
 8000c5e:	e79a      	b.n	8000b96 <__aeabi_fdiv+0x13a>
 8000c60:	201a      	movs	r0, #26
 8000c62:	2201      	movs	r2, #1
 8000c64:	1b5b      	subs	r3, r3, r5
 8000c66:	e7e8      	b.n	8000c3a <__aeabi_fdiv+0x1de>
 8000c68:	3b02      	subs	r3, #2
 8000c6a:	425a      	negs	r2, r3
 8000c6c:	4153      	adcs	r3, r2
 8000c6e:	425b      	negs	r3, r3
 8000c70:	0035      	movs	r5, r6
 8000c72:	2200      	movs	r2, #0
 8000c74:	b2d8      	uxtb	r0, r3
 8000c76:	e773      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000c78:	0192      	lsls	r2, r2, #6
 8000c7a:	2000      	movs	r0, #0
 8000c7c:	0a52      	lsrs	r2, r2, #9
 8000c7e:	e76f      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000c80:	431a      	orrs	r2, r3
 8000c82:	0252      	lsls	r2, r2, #9
 8000c84:	0035      	movs	r5, r6
 8000c86:	20ff      	movs	r0, #255	@ 0xff
 8000c88:	0a52      	lsrs	r2, r2, #9
 8000c8a:	e769      	b.n	8000b60 <__aeabi_fdiv+0x104>
 8000c8c:	4644      	mov	r4, r8
 8000c8e:	e7ad      	b.n	8000bec <__aeabi_fdiv+0x190>
 8000c90:	08019de4 	.word	0x08019de4
 8000c94:	08019e24 	.word	0x08019e24
 8000c98:	f7ffffff 	.word	0xf7ffffff

08000c9c <__eqsf2>:
 8000c9c:	b570      	push	{r4, r5, r6, lr}
 8000c9e:	0042      	lsls	r2, r0, #1
 8000ca0:	024e      	lsls	r6, r1, #9
 8000ca2:	004c      	lsls	r4, r1, #1
 8000ca4:	0245      	lsls	r5, r0, #9
 8000ca6:	0a6d      	lsrs	r5, r5, #9
 8000ca8:	0e12      	lsrs	r2, r2, #24
 8000caa:	0fc3      	lsrs	r3, r0, #31
 8000cac:	0a76      	lsrs	r6, r6, #9
 8000cae:	0e24      	lsrs	r4, r4, #24
 8000cb0:	0fc9      	lsrs	r1, r1, #31
 8000cb2:	2aff      	cmp	r2, #255	@ 0xff
 8000cb4:	d010      	beq.n	8000cd8 <__eqsf2+0x3c>
 8000cb6:	2cff      	cmp	r4, #255	@ 0xff
 8000cb8:	d00c      	beq.n	8000cd4 <__eqsf2+0x38>
 8000cba:	2001      	movs	r0, #1
 8000cbc:	42a2      	cmp	r2, r4
 8000cbe:	d10a      	bne.n	8000cd6 <__eqsf2+0x3a>
 8000cc0:	42b5      	cmp	r5, r6
 8000cc2:	d108      	bne.n	8000cd6 <__eqsf2+0x3a>
 8000cc4:	428b      	cmp	r3, r1
 8000cc6:	d00f      	beq.n	8000ce8 <__eqsf2+0x4c>
 8000cc8:	2a00      	cmp	r2, #0
 8000cca:	d104      	bne.n	8000cd6 <__eqsf2+0x3a>
 8000ccc:	0028      	movs	r0, r5
 8000cce:	1e43      	subs	r3, r0, #1
 8000cd0:	4198      	sbcs	r0, r3
 8000cd2:	e000      	b.n	8000cd6 <__eqsf2+0x3a>
 8000cd4:	2001      	movs	r0, #1
 8000cd6:	bd70      	pop	{r4, r5, r6, pc}
 8000cd8:	2001      	movs	r0, #1
 8000cda:	2cff      	cmp	r4, #255	@ 0xff
 8000cdc:	d1fb      	bne.n	8000cd6 <__eqsf2+0x3a>
 8000cde:	4335      	orrs	r5, r6
 8000ce0:	d1f9      	bne.n	8000cd6 <__eqsf2+0x3a>
 8000ce2:	404b      	eors	r3, r1
 8000ce4:	0018      	movs	r0, r3
 8000ce6:	e7f6      	b.n	8000cd6 <__eqsf2+0x3a>
 8000ce8:	2000      	movs	r0, #0
 8000cea:	e7f4      	b.n	8000cd6 <__eqsf2+0x3a>

08000cec <__gesf2>:
 8000cec:	b530      	push	{r4, r5, lr}
 8000cee:	0042      	lsls	r2, r0, #1
 8000cf0:	0244      	lsls	r4, r0, #9
 8000cf2:	024d      	lsls	r5, r1, #9
 8000cf4:	0fc3      	lsrs	r3, r0, #31
 8000cf6:	0048      	lsls	r0, r1, #1
 8000cf8:	0a64      	lsrs	r4, r4, #9
 8000cfa:	0e12      	lsrs	r2, r2, #24
 8000cfc:	0a6d      	lsrs	r5, r5, #9
 8000cfe:	0e00      	lsrs	r0, r0, #24
 8000d00:	0fc9      	lsrs	r1, r1, #31
 8000d02:	2aff      	cmp	r2, #255	@ 0xff
 8000d04:	d019      	beq.n	8000d3a <__gesf2+0x4e>
 8000d06:	28ff      	cmp	r0, #255	@ 0xff
 8000d08:	d00b      	beq.n	8000d22 <__gesf2+0x36>
 8000d0a:	2a00      	cmp	r2, #0
 8000d0c:	d11e      	bne.n	8000d4c <__gesf2+0x60>
 8000d0e:	2800      	cmp	r0, #0
 8000d10:	d10b      	bne.n	8000d2a <__gesf2+0x3e>
 8000d12:	2d00      	cmp	r5, #0
 8000d14:	d027      	beq.n	8000d66 <__gesf2+0x7a>
 8000d16:	2c00      	cmp	r4, #0
 8000d18:	d134      	bne.n	8000d84 <__gesf2+0x98>
 8000d1a:	2900      	cmp	r1, #0
 8000d1c:	d02f      	beq.n	8000d7e <__gesf2+0x92>
 8000d1e:	0008      	movs	r0, r1
 8000d20:	bd30      	pop	{r4, r5, pc}
 8000d22:	2d00      	cmp	r5, #0
 8000d24:	d128      	bne.n	8000d78 <__gesf2+0x8c>
 8000d26:	2a00      	cmp	r2, #0
 8000d28:	d101      	bne.n	8000d2e <__gesf2+0x42>
 8000d2a:	2c00      	cmp	r4, #0
 8000d2c:	d0f5      	beq.n	8000d1a <__gesf2+0x2e>
 8000d2e:	428b      	cmp	r3, r1
 8000d30:	d107      	bne.n	8000d42 <__gesf2+0x56>
 8000d32:	2b00      	cmp	r3, #0
 8000d34:	d023      	beq.n	8000d7e <__gesf2+0x92>
 8000d36:	0018      	movs	r0, r3
 8000d38:	e7f2      	b.n	8000d20 <__gesf2+0x34>
 8000d3a:	2c00      	cmp	r4, #0
 8000d3c:	d11c      	bne.n	8000d78 <__gesf2+0x8c>
 8000d3e:	28ff      	cmp	r0, #255	@ 0xff
 8000d40:	d014      	beq.n	8000d6c <__gesf2+0x80>
 8000d42:	1e58      	subs	r0, r3, #1
 8000d44:	2302      	movs	r3, #2
 8000d46:	4018      	ands	r0, r3
 8000d48:	3801      	subs	r0, #1
 8000d4a:	e7e9      	b.n	8000d20 <__gesf2+0x34>
 8000d4c:	2800      	cmp	r0, #0
 8000d4e:	d0f8      	beq.n	8000d42 <__gesf2+0x56>
 8000d50:	428b      	cmp	r3, r1
 8000d52:	d1f6      	bne.n	8000d42 <__gesf2+0x56>
 8000d54:	4282      	cmp	r2, r0
 8000d56:	dcf4      	bgt.n	8000d42 <__gesf2+0x56>
 8000d58:	dbeb      	blt.n	8000d32 <__gesf2+0x46>
 8000d5a:	42ac      	cmp	r4, r5
 8000d5c:	d8f1      	bhi.n	8000d42 <__gesf2+0x56>
 8000d5e:	2000      	movs	r0, #0
 8000d60:	42ac      	cmp	r4, r5
 8000d62:	d2dd      	bcs.n	8000d20 <__gesf2+0x34>
 8000d64:	e7e5      	b.n	8000d32 <__gesf2+0x46>
 8000d66:	2c00      	cmp	r4, #0
 8000d68:	d0da      	beq.n	8000d20 <__gesf2+0x34>
 8000d6a:	e7ea      	b.n	8000d42 <__gesf2+0x56>
 8000d6c:	2d00      	cmp	r5, #0
 8000d6e:	d103      	bne.n	8000d78 <__gesf2+0x8c>
 8000d70:	428b      	cmp	r3, r1
 8000d72:	d1e6      	bne.n	8000d42 <__gesf2+0x56>
 8000d74:	2000      	movs	r0, #0
 8000d76:	e7d3      	b.n	8000d20 <__gesf2+0x34>
 8000d78:	2002      	movs	r0, #2
 8000d7a:	4240      	negs	r0, r0
 8000d7c:	e7d0      	b.n	8000d20 <__gesf2+0x34>
 8000d7e:	2001      	movs	r0, #1
 8000d80:	4240      	negs	r0, r0
 8000d82:	e7cd      	b.n	8000d20 <__gesf2+0x34>
 8000d84:	428b      	cmp	r3, r1
 8000d86:	d0e8      	beq.n	8000d5a <__gesf2+0x6e>
 8000d88:	e7db      	b.n	8000d42 <__gesf2+0x56>
 8000d8a:	46c0      	nop			@ (mov r8, r8)

08000d8c <__lesf2>:
 8000d8c:	b530      	push	{r4, r5, lr}
 8000d8e:	0042      	lsls	r2, r0, #1
 8000d90:	0244      	lsls	r4, r0, #9
 8000d92:	024d      	lsls	r5, r1, #9
 8000d94:	0fc3      	lsrs	r3, r0, #31
 8000d96:	0048      	lsls	r0, r1, #1
 8000d98:	0a64      	lsrs	r4, r4, #9
 8000d9a:	0e12      	lsrs	r2, r2, #24
 8000d9c:	0a6d      	lsrs	r5, r5, #9
 8000d9e:	0e00      	lsrs	r0, r0, #24
 8000da0:	0fc9      	lsrs	r1, r1, #31
 8000da2:	2aff      	cmp	r2, #255	@ 0xff
 8000da4:	d01a      	beq.n	8000ddc <__lesf2+0x50>
 8000da6:	28ff      	cmp	r0, #255	@ 0xff
 8000da8:	d00e      	beq.n	8000dc8 <__lesf2+0x3c>
 8000daa:	2a00      	cmp	r2, #0
 8000dac:	d11e      	bne.n	8000dec <__lesf2+0x60>
 8000dae:	2800      	cmp	r0, #0
 8000db0:	d10e      	bne.n	8000dd0 <__lesf2+0x44>
 8000db2:	2d00      	cmp	r5, #0
 8000db4:	d02a      	beq.n	8000e0c <__lesf2+0x80>
 8000db6:	2c00      	cmp	r4, #0
 8000db8:	d00c      	beq.n	8000dd4 <__lesf2+0x48>
 8000dba:	428b      	cmp	r3, r1
 8000dbc:	d01d      	beq.n	8000dfa <__lesf2+0x6e>
 8000dbe:	1e58      	subs	r0, r3, #1
 8000dc0:	2302      	movs	r3, #2
 8000dc2:	4018      	ands	r0, r3
 8000dc4:	3801      	subs	r0, #1
 8000dc6:	e010      	b.n	8000dea <__lesf2+0x5e>
 8000dc8:	2d00      	cmp	r5, #0
 8000dca:	d10d      	bne.n	8000de8 <__lesf2+0x5c>
 8000dcc:	2a00      	cmp	r2, #0
 8000dce:	d120      	bne.n	8000e12 <__lesf2+0x86>
 8000dd0:	2c00      	cmp	r4, #0
 8000dd2:	d11e      	bne.n	8000e12 <__lesf2+0x86>
 8000dd4:	2900      	cmp	r1, #0
 8000dd6:	d023      	beq.n	8000e20 <__lesf2+0x94>
 8000dd8:	0008      	movs	r0, r1
 8000dda:	e006      	b.n	8000dea <__lesf2+0x5e>
 8000ddc:	2c00      	cmp	r4, #0
 8000dde:	d103      	bne.n	8000de8 <__lesf2+0x5c>
 8000de0:	28ff      	cmp	r0, #255	@ 0xff
 8000de2:	d1ec      	bne.n	8000dbe <__lesf2+0x32>
 8000de4:	2d00      	cmp	r5, #0
 8000de6:	d017      	beq.n	8000e18 <__lesf2+0x8c>
 8000de8:	2002      	movs	r0, #2
 8000dea:	bd30      	pop	{r4, r5, pc}
 8000dec:	2800      	cmp	r0, #0
 8000dee:	d0e6      	beq.n	8000dbe <__lesf2+0x32>
 8000df0:	428b      	cmp	r3, r1
 8000df2:	d1e4      	bne.n	8000dbe <__lesf2+0x32>
 8000df4:	4282      	cmp	r2, r0
 8000df6:	dce2      	bgt.n	8000dbe <__lesf2+0x32>
 8000df8:	db04      	blt.n	8000e04 <__lesf2+0x78>
 8000dfa:	42ac      	cmp	r4, r5
 8000dfc:	d8df      	bhi.n	8000dbe <__lesf2+0x32>
 8000dfe:	2000      	movs	r0, #0
 8000e00:	42ac      	cmp	r4, r5
 8000e02:	d2f2      	bcs.n	8000dea <__lesf2+0x5e>
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d00b      	beq.n	8000e20 <__lesf2+0x94>
 8000e08:	0018      	movs	r0, r3
 8000e0a:	e7ee      	b.n	8000dea <__lesf2+0x5e>
 8000e0c:	2c00      	cmp	r4, #0
 8000e0e:	d0ec      	beq.n	8000dea <__lesf2+0x5e>
 8000e10:	e7d5      	b.n	8000dbe <__lesf2+0x32>
 8000e12:	428b      	cmp	r3, r1
 8000e14:	d1d3      	bne.n	8000dbe <__lesf2+0x32>
 8000e16:	e7f5      	b.n	8000e04 <__lesf2+0x78>
 8000e18:	2000      	movs	r0, #0
 8000e1a:	428b      	cmp	r3, r1
 8000e1c:	d0e5      	beq.n	8000dea <__lesf2+0x5e>
 8000e1e:	e7ce      	b.n	8000dbe <__lesf2+0x32>
 8000e20:	2001      	movs	r0, #1
 8000e22:	4240      	negs	r0, r0
 8000e24:	e7e1      	b.n	8000dea <__lesf2+0x5e>
 8000e26:	46c0      	nop			@ (mov r8, r8)

08000e28 <__aeabi_fmul>:
 8000e28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e2a:	464f      	mov	r7, r9
 8000e2c:	4646      	mov	r6, r8
 8000e2e:	46d6      	mov	lr, sl
 8000e30:	0243      	lsls	r3, r0, #9
 8000e32:	0a5b      	lsrs	r3, r3, #9
 8000e34:	0045      	lsls	r5, r0, #1
 8000e36:	b5c0      	push	{r6, r7, lr}
 8000e38:	4699      	mov	r9, r3
 8000e3a:	1c0f      	adds	r7, r1, #0
 8000e3c:	0e2d      	lsrs	r5, r5, #24
 8000e3e:	0fc6      	lsrs	r6, r0, #31
 8000e40:	2d00      	cmp	r5, #0
 8000e42:	d100      	bne.n	8000e46 <__aeabi_fmul+0x1e>
 8000e44:	e088      	b.n	8000f58 <__aeabi_fmul+0x130>
 8000e46:	2dff      	cmp	r5, #255	@ 0xff
 8000e48:	d100      	bne.n	8000e4c <__aeabi_fmul+0x24>
 8000e4a:	e08d      	b.n	8000f68 <__aeabi_fmul+0x140>
 8000e4c:	2280      	movs	r2, #128	@ 0x80
 8000e4e:	00db      	lsls	r3, r3, #3
 8000e50:	04d2      	lsls	r2, r2, #19
 8000e52:	431a      	orrs	r2, r3
 8000e54:	2300      	movs	r3, #0
 8000e56:	4691      	mov	r9, r2
 8000e58:	4698      	mov	r8, r3
 8000e5a:	469a      	mov	sl, r3
 8000e5c:	3d7f      	subs	r5, #127	@ 0x7f
 8000e5e:	027c      	lsls	r4, r7, #9
 8000e60:	007b      	lsls	r3, r7, #1
 8000e62:	0a64      	lsrs	r4, r4, #9
 8000e64:	0e1b      	lsrs	r3, r3, #24
 8000e66:	0fff      	lsrs	r7, r7, #31
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d068      	beq.n	8000f3e <__aeabi_fmul+0x116>
 8000e6c:	2bff      	cmp	r3, #255	@ 0xff
 8000e6e:	d021      	beq.n	8000eb4 <__aeabi_fmul+0x8c>
 8000e70:	2280      	movs	r2, #128	@ 0x80
 8000e72:	00e4      	lsls	r4, r4, #3
 8000e74:	04d2      	lsls	r2, r2, #19
 8000e76:	4314      	orrs	r4, r2
 8000e78:	4642      	mov	r2, r8
 8000e7a:	3b7f      	subs	r3, #127	@ 0x7f
 8000e7c:	195b      	adds	r3, r3, r5
 8000e7e:	2100      	movs	r1, #0
 8000e80:	1c5d      	adds	r5, r3, #1
 8000e82:	2a0a      	cmp	r2, #10
 8000e84:	dc2e      	bgt.n	8000ee4 <__aeabi_fmul+0xbc>
 8000e86:	407e      	eors	r6, r7
 8000e88:	4642      	mov	r2, r8
 8000e8a:	2a02      	cmp	r2, #2
 8000e8c:	dc23      	bgt.n	8000ed6 <__aeabi_fmul+0xae>
 8000e8e:	3a01      	subs	r2, #1
 8000e90:	2a01      	cmp	r2, #1
 8000e92:	d900      	bls.n	8000e96 <__aeabi_fmul+0x6e>
 8000e94:	e0bd      	b.n	8001012 <__aeabi_fmul+0x1ea>
 8000e96:	2902      	cmp	r1, #2
 8000e98:	d06e      	beq.n	8000f78 <__aeabi_fmul+0x150>
 8000e9a:	2901      	cmp	r1, #1
 8000e9c:	d12c      	bne.n	8000ef8 <__aeabi_fmul+0xd0>
 8000e9e:	2000      	movs	r0, #0
 8000ea0:	2200      	movs	r2, #0
 8000ea2:	05c0      	lsls	r0, r0, #23
 8000ea4:	07f6      	lsls	r6, r6, #31
 8000ea6:	4310      	orrs	r0, r2
 8000ea8:	4330      	orrs	r0, r6
 8000eaa:	bce0      	pop	{r5, r6, r7}
 8000eac:	46ba      	mov	sl, r7
 8000eae:	46b1      	mov	r9, r6
 8000eb0:	46a8      	mov	r8, r5
 8000eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb4:	002b      	movs	r3, r5
 8000eb6:	33ff      	adds	r3, #255	@ 0xff
 8000eb8:	2c00      	cmp	r4, #0
 8000eba:	d065      	beq.n	8000f88 <__aeabi_fmul+0x160>
 8000ebc:	2203      	movs	r2, #3
 8000ebe:	4641      	mov	r1, r8
 8000ec0:	4311      	orrs	r1, r2
 8000ec2:	0032      	movs	r2, r6
 8000ec4:	3501      	adds	r5, #1
 8000ec6:	4688      	mov	r8, r1
 8000ec8:	407a      	eors	r2, r7
 8000eca:	35ff      	adds	r5, #255	@ 0xff
 8000ecc:	290a      	cmp	r1, #10
 8000ece:	dd00      	ble.n	8000ed2 <__aeabi_fmul+0xaa>
 8000ed0:	e0d8      	b.n	8001084 <__aeabi_fmul+0x25c>
 8000ed2:	0016      	movs	r6, r2
 8000ed4:	2103      	movs	r1, #3
 8000ed6:	4640      	mov	r0, r8
 8000ed8:	2201      	movs	r2, #1
 8000eda:	4082      	lsls	r2, r0
 8000edc:	20a6      	movs	r0, #166	@ 0xa6
 8000ede:	00c0      	lsls	r0, r0, #3
 8000ee0:	4202      	tst	r2, r0
 8000ee2:	d020      	beq.n	8000f26 <__aeabi_fmul+0xfe>
 8000ee4:	4653      	mov	r3, sl
 8000ee6:	2b02      	cmp	r3, #2
 8000ee8:	d046      	beq.n	8000f78 <__aeabi_fmul+0x150>
 8000eea:	2b03      	cmp	r3, #3
 8000eec:	d100      	bne.n	8000ef0 <__aeabi_fmul+0xc8>
 8000eee:	e0bb      	b.n	8001068 <__aeabi_fmul+0x240>
 8000ef0:	4651      	mov	r1, sl
 8000ef2:	464c      	mov	r4, r9
 8000ef4:	2901      	cmp	r1, #1
 8000ef6:	d0d2      	beq.n	8000e9e <__aeabi_fmul+0x76>
 8000ef8:	002b      	movs	r3, r5
 8000efa:	337f      	adds	r3, #127	@ 0x7f
 8000efc:	2b00      	cmp	r3, #0
 8000efe:	dd70      	ble.n	8000fe2 <__aeabi_fmul+0x1ba>
 8000f00:	0762      	lsls	r2, r4, #29
 8000f02:	d004      	beq.n	8000f0e <__aeabi_fmul+0xe6>
 8000f04:	220f      	movs	r2, #15
 8000f06:	4022      	ands	r2, r4
 8000f08:	2a04      	cmp	r2, #4
 8000f0a:	d000      	beq.n	8000f0e <__aeabi_fmul+0xe6>
 8000f0c:	3404      	adds	r4, #4
 8000f0e:	0122      	lsls	r2, r4, #4
 8000f10:	d503      	bpl.n	8000f1a <__aeabi_fmul+0xf2>
 8000f12:	4b63      	ldr	r3, [pc, #396]	@ (80010a0 <__aeabi_fmul+0x278>)
 8000f14:	401c      	ands	r4, r3
 8000f16:	002b      	movs	r3, r5
 8000f18:	3380      	adds	r3, #128	@ 0x80
 8000f1a:	2bfe      	cmp	r3, #254	@ 0xfe
 8000f1c:	dc2c      	bgt.n	8000f78 <__aeabi_fmul+0x150>
 8000f1e:	01a2      	lsls	r2, r4, #6
 8000f20:	0a52      	lsrs	r2, r2, #9
 8000f22:	b2d8      	uxtb	r0, r3
 8000f24:	e7bd      	b.n	8000ea2 <__aeabi_fmul+0x7a>
 8000f26:	2090      	movs	r0, #144	@ 0x90
 8000f28:	0080      	lsls	r0, r0, #2
 8000f2a:	4202      	tst	r2, r0
 8000f2c:	d127      	bne.n	8000f7e <__aeabi_fmul+0x156>
 8000f2e:	38b9      	subs	r0, #185	@ 0xb9
 8000f30:	38ff      	subs	r0, #255	@ 0xff
 8000f32:	4210      	tst	r0, r2
 8000f34:	d06d      	beq.n	8001012 <__aeabi_fmul+0x1ea>
 8000f36:	003e      	movs	r6, r7
 8000f38:	46a1      	mov	r9, r4
 8000f3a:	468a      	mov	sl, r1
 8000f3c:	e7d2      	b.n	8000ee4 <__aeabi_fmul+0xbc>
 8000f3e:	2c00      	cmp	r4, #0
 8000f40:	d141      	bne.n	8000fc6 <__aeabi_fmul+0x19e>
 8000f42:	2301      	movs	r3, #1
 8000f44:	4642      	mov	r2, r8
 8000f46:	431a      	orrs	r2, r3
 8000f48:	4690      	mov	r8, r2
 8000f4a:	002b      	movs	r3, r5
 8000f4c:	4642      	mov	r2, r8
 8000f4e:	2101      	movs	r1, #1
 8000f50:	1c5d      	adds	r5, r3, #1
 8000f52:	2a0a      	cmp	r2, #10
 8000f54:	dd97      	ble.n	8000e86 <__aeabi_fmul+0x5e>
 8000f56:	e7c5      	b.n	8000ee4 <__aeabi_fmul+0xbc>
 8000f58:	2b00      	cmp	r3, #0
 8000f5a:	d126      	bne.n	8000faa <__aeabi_fmul+0x182>
 8000f5c:	2304      	movs	r3, #4
 8000f5e:	4698      	mov	r8, r3
 8000f60:	3b03      	subs	r3, #3
 8000f62:	2500      	movs	r5, #0
 8000f64:	469a      	mov	sl, r3
 8000f66:	e77a      	b.n	8000e5e <__aeabi_fmul+0x36>
 8000f68:	2b00      	cmp	r3, #0
 8000f6a:	d118      	bne.n	8000f9e <__aeabi_fmul+0x176>
 8000f6c:	2308      	movs	r3, #8
 8000f6e:	4698      	mov	r8, r3
 8000f70:	3b06      	subs	r3, #6
 8000f72:	25ff      	movs	r5, #255	@ 0xff
 8000f74:	469a      	mov	sl, r3
 8000f76:	e772      	b.n	8000e5e <__aeabi_fmul+0x36>
 8000f78:	20ff      	movs	r0, #255	@ 0xff
 8000f7a:	2200      	movs	r2, #0
 8000f7c:	e791      	b.n	8000ea2 <__aeabi_fmul+0x7a>
 8000f7e:	2280      	movs	r2, #128	@ 0x80
 8000f80:	2600      	movs	r6, #0
 8000f82:	20ff      	movs	r0, #255	@ 0xff
 8000f84:	03d2      	lsls	r2, r2, #15
 8000f86:	e78c      	b.n	8000ea2 <__aeabi_fmul+0x7a>
 8000f88:	4641      	mov	r1, r8
 8000f8a:	2202      	movs	r2, #2
 8000f8c:	3501      	adds	r5, #1
 8000f8e:	4311      	orrs	r1, r2
 8000f90:	4688      	mov	r8, r1
 8000f92:	35ff      	adds	r5, #255	@ 0xff
 8000f94:	290a      	cmp	r1, #10
 8000f96:	dca5      	bgt.n	8000ee4 <__aeabi_fmul+0xbc>
 8000f98:	2102      	movs	r1, #2
 8000f9a:	407e      	eors	r6, r7
 8000f9c:	e774      	b.n	8000e88 <__aeabi_fmul+0x60>
 8000f9e:	230c      	movs	r3, #12
 8000fa0:	4698      	mov	r8, r3
 8000fa2:	3b09      	subs	r3, #9
 8000fa4:	25ff      	movs	r5, #255	@ 0xff
 8000fa6:	469a      	mov	sl, r3
 8000fa8:	e759      	b.n	8000e5e <__aeabi_fmul+0x36>
 8000faa:	0018      	movs	r0, r3
 8000fac:	f002 fa32 	bl	8003414 <__clzsi2>
 8000fb0:	464a      	mov	r2, r9
 8000fb2:	1f43      	subs	r3, r0, #5
 8000fb4:	2576      	movs	r5, #118	@ 0x76
 8000fb6:	409a      	lsls	r2, r3
 8000fb8:	2300      	movs	r3, #0
 8000fba:	426d      	negs	r5, r5
 8000fbc:	4691      	mov	r9, r2
 8000fbe:	4698      	mov	r8, r3
 8000fc0:	469a      	mov	sl, r3
 8000fc2:	1a2d      	subs	r5, r5, r0
 8000fc4:	e74b      	b.n	8000e5e <__aeabi_fmul+0x36>
 8000fc6:	0020      	movs	r0, r4
 8000fc8:	f002 fa24 	bl	8003414 <__clzsi2>
 8000fcc:	4642      	mov	r2, r8
 8000fce:	1f43      	subs	r3, r0, #5
 8000fd0:	409c      	lsls	r4, r3
 8000fd2:	1a2b      	subs	r3, r5, r0
 8000fd4:	3b76      	subs	r3, #118	@ 0x76
 8000fd6:	2100      	movs	r1, #0
 8000fd8:	1c5d      	adds	r5, r3, #1
 8000fda:	2a0a      	cmp	r2, #10
 8000fdc:	dc00      	bgt.n	8000fe0 <__aeabi_fmul+0x1b8>
 8000fde:	e752      	b.n	8000e86 <__aeabi_fmul+0x5e>
 8000fe0:	e780      	b.n	8000ee4 <__aeabi_fmul+0xbc>
 8000fe2:	2201      	movs	r2, #1
 8000fe4:	1ad3      	subs	r3, r2, r3
 8000fe6:	2b1b      	cmp	r3, #27
 8000fe8:	dd00      	ble.n	8000fec <__aeabi_fmul+0x1c4>
 8000fea:	e758      	b.n	8000e9e <__aeabi_fmul+0x76>
 8000fec:	359e      	adds	r5, #158	@ 0x9e
 8000fee:	0022      	movs	r2, r4
 8000ff0:	40ac      	lsls	r4, r5
 8000ff2:	40da      	lsrs	r2, r3
 8000ff4:	1e63      	subs	r3, r4, #1
 8000ff6:	419c      	sbcs	r4, r3
 8000ff8:	4322      	orrs	r2, r4
 8000ffa:	0753      	lsls	r3, r2, #29
 8000ffc:	d004      	beq.n	8001008 <__aeabi_fmul+0x1e0>
 8000ffe:	230f      	movs	r3, #15
 8001000:	4013      	ands	r3, r2
 8001002:	2b04      	cmp	r3, #4
 8001004:	d000      	beq.n	8001008 <__aeabi_fmul+0x1e0>
 8001006:	3204      	adds	r2, #4
 8001008:	0153      	lsls	r3, r2, #5
 800100a:	d537      	bpl.n	800107c <__aeabi_fmul+0x254>
 800100c:	2001      	movs	r0, #1
 800100e:	2200      	movs	r2, #0
 8001010:	e747      	b.n	8000ea2 <__aeabi_fmul+0x7a>
 8001012:	0c21      	lsrs	r1, r4, #16
 8001014:	464a      	mov	r2, r9
 8001016:	0424      	lsls	r4, r4, #16
 8001018:	0c24      	lsrs	r4, r4, #16
 800101a:	0027      	movs	r7, r4
 800101c:	0c10      	lsrs	r0, r2, #16
 800101e:	0412      	lsls	r2, r2, #16
 8001020:	0c12      	lsrs	r2, r2, #16
 8001022:	4344      	muls	r4, r0
 8001024:	4357      	muls	r7, r2
 8001026:	4348      	muls	r0, r1
 8001028:	4351      	muls	r1, r2
 800102a:	0c3a      	lsrs	r2, r7, #16
 800102c:	1909      	adds	r1, r1, r4
 800102e:	1852      	adds	r2, r2, r1
 8001030:	4294      	cmp	r4, r2
 8001032:	d903      	bls.n	800103c <__aeabi_fmul+0x214>
 8001034:	2180      	movs	r1, #128	@ 0x80
 8001036:	0249      	lsls	r1, r1, #9
 8001038:	468c      	mov	ip, r1
 800103a:	4460      	add	r0, ip
 800103c:	043f      	lsls	r7, r7, #16
 800103e:	0411      	lsls	r1, r2, #16
 8001040:	0c3f      	lsrs	r7, r7, #16
 8001042:	19c9      	adds	r1, r1, r7
 8001044:	018c      	lsls	r4, r1, #6
 8001046:	1e67      	subs	r7, r4, #1
 8001048:	41bc      	sbcs	r4, r7
 800104a:	0c12      	lsrs	r2, r2, #16
 800104c:	0e89      	lsrs	r1, r1, #26
 800104e:	1812      	adds	r2, r2, r0
 8001050:	430c      	orrs	r4, r1
 8001052:	0192      	lsls	r2, r2, #6
 8001054:	4314      	orrs	r4, r2
 8001056:	0112      	lsls	r2, r2, #4
 8001058:	d50e      	bpl.n	8001078 <__aeabi_fmul+0x250>
 800105a:	2301      	movs	r3, #1
 800105c:	0862      	lsrs	r2, r4, #1
 800105e:	401c      	ands	r4, r3
 8001060:	4314      	orrs	r4, r2
 8001062:	e749      	b.n	8000ef8 <__aeabi_fmul+0xd0>
 8001064:	003e      	movs	r6, r7
 8001066:	46a1      	mov	r9, r4
 8001068:	2280      	movs	r2, #128	@ 0x80
 800106a:	464b      	mov	r3, r9
 800106c:	03d2      	lsls	r2, r2, #15
 800106e:	431a      	orrs	r2, r3
 8001070:	0252      	lsls	r2, r2, #9
 8001072:	20ff      	movs	r0, #255	@ 0xff
 8001074:	0a52      	lsrs	r2, r2, #9
 8001076:	e714      	b.n	8000ea2 <__aeabi_fmul+0x7a>
 8001078:	001d      	movs	r5, r3
 800107a:	e73d      	b.n	8000ef8 <__aeabi_fmul+0xd0>
 800107c:	0192      	lsls	r2, r2, #6
 800107e:	2000      	movs	r0, #0
 8001080:	0a52      	lsrs	r2, r2, #9
 8001082:	e70e      	b.n	8000ea2 <__aeabi_fmul+0x7a>
 8001084:	290f      	cmp	r1, #15
 8001086:	d1ed      	bne.n	8001064 <__aeabi_fmul+0x23c>
 8001088:	2280      	movs	r2, #128	@ 0x80
 800108a:	464b      	mov	r3, r9
 800108c:	03d2      	lsls	r2, r2, #15
 800108e:	4213      	tst	r3, r2
 8001090:	d0ea      	beq.n	8001068 <__aeabi_fmul+0x240>
 8001092:	4214      	tst	r4, r2
 8001094:	d1e8      	bne.n	8001068 <__aeabi_fmul+0x240>
 8001096:	003e      	movs	r6, r7
 8001098:	20ff      	movs	r0, #255	@ 0xff
 800109a:	4322      	orrs	r2, r4
 800109c:	e701      	b.n	8000ea2 <__aeabi_fmul+0x7a>
 800109e:	46c0      	nop			@ (mov r8, r8)
 80010a0:	f7ffffff 	.word	0xf7ffffff

080010a4 <__aeabi_fsub>:
 80010a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010a6:	4647      	mov	r7, r8
 80010a8:	46ce      	mov	lr, r9
 80010aa:	024e      	lsls	r6, r1, #9
 80010ac:	0243      	lsls	r3, r0, #9
 80010ae:	0045      	lsls	r5, r0, #1
 80010b0:	0a72      	lsrs	r2, r6, #9
 80010b2:	0fc4      	lsrs	r4, r0, #31
 80010b4:	0048      	lsls	r0, r1, #1
 80010b6:	b580      	push	{r7, lr}
 80010b8:	4694      	mov	ip, r2
 80010ba:	0a5f      	lsrs	r7, r3, #9
 80010bc:	0e2d      	lsrs	r5, r5, #24
 80010be:	099b      	lsrs	r3, r3, #6
 80010c0:	0e00      	lsrs	r0, r0, #24
 80010c2:	0fc9      	lsrs	r1, r1, #31
 80010c4:	09b6      	lsrs	r6, r6, #6
 80010c6:	28ff      	cmp	r0, #255	@ 0xff
 80010c8:	d024      	beq.n	8001114 <__aeabi_fsub+0x70>
 80010ca:	2201      	movs	r2, #1
 80010cc:	4051      	eors	r1, r2
 80010ce:	1a2a      	subs	r2, r5, r0
 80010d0:	428c      	cmp	r4, r1
 80010d2:	d00f      	beq.n	80010f4 <__aeabi_fsub+0x50>
 80010d4:	2a00      	cmp	r2, #0
 80010d6:	dc00      	bgt.n	80010da <__aeabi_fsub+0x36>
 80010d8:	e16a      	b.n	80013b0 <__aeabi_fsub+0x30c>
 80010da:	2800      	cmp	r0, #0
 80010dc:	d135      	bne.n	800114a <__aeabi_fsub+0xa6>
 80010de:	2e00      	cmp	r6, #0
 80010e0:	d100      	bne.n	80010e4 <__aeabi_fsub+0x40>
 80010e2:	e0a2      	b.n	800122a <__aeabi_fsub+0x186>
 80010e4:	1e51      	subs	r1, r2, #1
 80010e6:	2a01      	cmp	r2, #1
 80010e8:	d100      	bne.n	80010ec <__aeabi_fsub+0x48>
 80010ea:	e124      	b.n	8001336 <__aeabi_fsub+0x292>
 80010ec:	2aff      	cmp	r2, #255	@ 0xff
 80010ee:	d021      	beq.n	8001134 <__aeabi_fsub+0x90>
 80010f0:	000a      	movs	r2, r1
 80010f2:	e02f      	b.n	8001154 <__aeabi_fsub+0xb0>
 80010f4:	2a00      	cmp	r2, #0
 80010f6:	dc00      	bgt.n	80010fa <__aeabi_fsub+0x56>
 80010f8:	e167      	b.n	80013ca <__aeabi_fsub+0x326>
 80010fa:	2800      	cmp	r0, #0
 80010fc:	d05e      	beq.n	80011bc <__aeabi_fsub+0x118>
 80010fe:	2dff      	cmp	r5, #255	@ 0xff
 8001100:	d018      	beq.n	8001134 <__aeabi_fsub+0x90>
 8001102:	2180      	movs	r1, #128	@ 0x80
 8001104:	04c9      	lsls	r1, r1, #19
 8001106:	430e      	orrs	r6, r1
 8001108:	2a1b      	cmp	r2, #27
 800110a:	dc00      	bgt.n	800110e <__aeabi_fsub+0x6a>
 800110c:	e076      	b.n	80011fc <__aeabi_fsub+0x158>
 800110e:	002a      	movs	r2, r5
 8001110:	3301      	adds	r3, #1
 8001112:	e032      	b.n	800117a <__aeabi_fsub+0xd6>
 8001114:	002a      	movs	r2, r5
 8001116:	3aff      	subs	r2, #255	@ 0xff
 8001118:	4691      	mov	r9, r2
 800111a:	2e00      	cmp	r6, #0
 800111c:	d042      	beq.n	80011a4 <__aeabi_fsub+0x100>
 800111e:	428c      	cmp	r4, r1
 8001120:	d055      	beq.n	80011ce <__aeabi_fsub+0x12a>
 8001122:	464a      	mov	r2, r9
 8001124:	2a00      	cmp	r2, #0
 8001126:	d100      	bne.n	800112a <__aeabi_fsub+0x86>
 8001128:	e09c      	b.n	8001264 <__aeabi_fsub+0x1c0>
 800112a:	2d00      	cmp	r5, #0
 800112c:	d100      	bne.n	8001130 <__aeabi_fsub+0x8c>
 800112e:	e077      	b.n	8001220 <__aeabi_fsub+0x17c>
 8001130:	000c      	movs	r4, r1
 8001132:	0033      	movs	r3, r6
 8001134:	08db      	lsrs	r3, r3, #3
 8001136:	2b00      	cmp	r3, #0
 8001138:	d100      	bne.n	800113c <__aeabi_fsub+0x98>
 800113a:	e06e      	b.n	800121a <__aeabi_fsub+0x176>
 800113c:	2280      	movs	r2, #128	@ 0x80
 800113e:	03d2      	lsls	r2, r2, #15
 8001140:	4313      	orrs	r3, r2
 8001142:	025b      	lsls	r3, r3, #9
 8001144:	20ff      	movs	r0, #255	@ 0xff
 8001146:	0a5b      	lsrs	r3, r3, #9
 8001148:	e024      	b.n	8001194 <__aeabi_fsub+0xf0>
 800114a:	2dff      	cmp	r5, #255	@ 0xff
 800114c:	d0f2      	beq.n	8001134 <__aeabi_fsub+0x90>
 800114e:	2180      	movs	r1, #128	@ 0x80
 8001150:	04c9      	lsls	r1, r1, #19
 8001152:	430e      	orrs	r6, r1
 8001154:	2101      	movs	r1, #1
 8001156:	2a1b      	cmp	r2, #27
 8001158:	dc08      	bgt.n	800116c <__aeabi_fsub+0xc8>
 800115a:	0031      	movs	r1, r6
 800115c:	2020      	movs	r0, #32
 800115e:	40d1      	lsrs	r1, r2
 8001160:	1a82      	subs	r2, r0, r2
 8001162:	4096      	lsls	r6, r2
 8001164:	0032      	movs	r2, r6
 8001166:	1e50      	subs	r0, r2, #1
 8001168:	4182      	sbcs	r2, r0
 800116a:	4311      	orrs	r1, r2
 800116c:	1a5b      	subs	r3, r3, r1
 800116e:	015a      	lsls	r2, r3, #5
 8001170:	d460      	bmi.n	8001234 <__aeabi_fsub+0x190>
 8001172:	2107      	movs	r1, #7
 8001174:	002a      	movs	r2, r5
 8001176:	4019      	ands	r1, r3
 8001178:	d057      	beq.n	800122a <__aeabi_fsub+0x186>
 800117a:	210f      	movs	r1, #15
 800117c:	4019      	ands	r1, r3
 800117e:	2904      	cmp	r1, #4
 8001180:	d000      	beq.n	8001184 <__aeabi_fsub+0xe0>
 8001182:	3304      	adds	r3, #4
 8001184:	0159      	lsls	r1, r3, #5
 8001186:	d550      	bpl.n	800122a <__aeabi_fsub+0x186>
 8001188:	1c50      	adds	r0, r2, #1
 800118a:	2afe      	cmp	r2, #254	@ 0xfe
 800118c:	d045      	beq.n	800121a <__aeabi_fsub+0x176>
 800118e:	019b      	lsls	r3, r3, #6
 8001190:	b2c0      	uxtb	r0, r0
 8001192:	0a5b      	lsrs	r3, r3, #9
 8001194:	05c0      	lsls	r0, r0, #23
 8001196:	4318      	orrs	r0, r3
 8001198:	07e4      	lsls	r4, r4, #31
 800119a:	4320      	orrs	r0, r4
 800119c:	bcc0      	pop	{r6, r7}
 800119e:	46b9      	mov	r9, r7
 80011a0:	46b0      	mov	r8, r6
 80011a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011a4:	2201      	movs	r2, #1
 80011a6:	4051      	eors	r1, r2
 80011a8:	428c      	cmp	r4, r1
 80011aa:	d1ba      	bne.n	8001122 <__aeabi_fsub+0x7e>
 80011ac:	464a      	mov	r2, r9
 80011ae:	2a00      	cmp	r2, #0
 80011b0:	d010      	beq.n	80011d4 <__aeabi_fsub+0x130>
 80011b2:	2d00      	cmp	r5, #0
 80011b4:	d100      	bne.n	80011b8 <__aeabi_fsub+0x114>
 80011b6:	e098      	b.n	80012ea <__aeabi_fsub+0x246>
 80011b8:	2300      	movs	r3, #0
 80011ba:	e7bb      	b.n	8001134 <__aeabi_fsub+0x90>
 80011bc:	2e00      	cmp	r6, #0
 80011be:	d034      	beq.n	800122a <__aeabi_fsub+0x186>
 80011c0:	1e51      	subs	r1, r2, #1
 80011c2:	2a01      	cmp	r2, #1
 80011c4:	d06e      	beq.n	80012a4 <__aeabi_fsub+0x200>
 80011c6:	2aff      	cmp	r2, #255	@ 0xff
 80011c8:	d0b4      	beq.n	8001134 <__aeabi_fsub+0x90>
 80011ca:	000a      	movs	r2, r1
 80011cc:	e79c      	b.n	8001108 <__aeabi_fsub+0x64>
 80011ce:	2a00      	cmp	r2, #0
 80011d0:	d000      	beq.n	80011d4 <__aeabi_fsub+0x130>
 80011d2:	e088      	b.n	80012e6 <__aeabi_fsub+0x242>
 80011d4:	20fe      	movs	r0, #254	@ 0xfe
 80011d6:	1c6a      	adds	r2, r5, #1
 80011d8:	4210      	tst	r0, r2
 80011da:	d000      	beq.n	80011de <__aeabi_fsub+0x13a>
 80011dc:	e092      	b.n	8001304 <__aeabi_fsub+0x260>
 80011de:	2d00      	cmp	r5, #0
 80011e0:	d000      	beq.n	80011e4 <__aeabi_fsub+0x140>
 80011e2:	e0a4      	b.n	800132e <__aeabi_fsub+0x28a>
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d100      	bne.n	80011ea <__aeabi_fsub+0x146>
 80011e8:	e0cb      	b.n	8001382 <__aeabi_fsub+0x2de>
 80011ea:	2e00      	cmp	r6, #0
 80011ec:	d000      	beq.n	80011f0 <__aeabi_fsub+0x14c>
 80011ee:	e0ca      	b.n	8001386 <__aeabi_fsub+0x2e2>
 80011f0:	2200      	movs	r2, #0
 80011f2:	08db      	lsrs	r3, r3, #3
 80011f4:	025b      	lsls	r3, r3, #9
 80011f6:	0a5b      	lsrs	r3, r3, #9
 80011f8:	b2d0      	uxtb	r0, r2
 80011fa:	e7cb      	b.n	8001194 <__aeabi_fsub+0xf0>
 80011fc:	0031      	movs	r1, r6
 80011fe:	2020      	movs	r0, #32
 8001200:	40d1      	lsrs	r1, r2
 8001202:	1a82      	subs	r2, r0, r2
 8001204:	4096      	lsls	r6, r2
 8001206:	0032      	movs	r2, r6
 8001208:	1e50      	subs	r0, r2, #1
 800120a:	4182      	sbcs	r2, r0
 800120c:	430a      	orrs	r2, r1
 800120e:	189b      	adds	r3, r3, r2
 8001210:	015a      	lsls	r2, r3, #5
 8001212:	d5ae      	bpl.n	8001172 <__aeabi_fsub+0xce>
 8001214:	1c6a      	adds	r2, r5, #1
 8001216:	2dfe      	cmp	r5, #254	@ 0xfe
 8001218:	d14a      	bne.n	80012b0 <__aeabi_fsub+0x20c>
 800121a:	20ff      	movs	r0, #255	@ 0xff
 800121c:	2300      	movs	r3, #0
 800121e:	e7b9      	b.n	8001194 <__aeabi_fsub+0xf0>
 8001220:	22ff      	movs	r2, #255	@ 0xff
 8001222:	2b00      	cmp	r3, #0
 8001224:	d14b      	bne.n	80012be <__aeabi_fsub+0x21a>
 8001226:	000c      	movs	r4, r1
 8001228:	0033      	movs	r3, r6
 800122a:	08db      	lsrs	r3, r3, #3
 800122c:	2aff      	cmp	r2, #255	@ 0xff
 800122e:	d100      	bne.n	8001232 <__aeabi_fsub+0x18e>
 8001230:	e781      	b.n	8001136 <__aeabi_fsub+0x92>
 8001232:	e7df      	b.n	80011f4 <__aeabi_fsub+0x150>
 8001234:	019f      	lsls	r7, r3, #6
 8001236:	09bf      	lsrs	r7, r7, #6
 8001238:	0038      	movs	r0, r7
 800123a:	f002 f8eb 	bl	8003414 <__clzsi2>
 800123e:	3805      	subs	r0, #5
 8001240:	4087      	lsls	r7, r0
 8001242:	4285      	cmp	r5, r0
 8001244:	dc21      	bgt.n	800128a <__aeabi_fsub+0x1e6>
 8001246:	003b      	movs	r3, r7
 8001248:	2120      	movs	r1, #32
 800124a:	1b42      	subs	r2, r0, r5
 800124c:	3201      	adds	r2, #1
 800124e:	40d3      	lsrs	r3, r2
 8001250:	1a8a      	subs	r2, r1, r2
 8001252:	4097      	lsls	r7, r2
 8001254:	1e7a      	subs	r2, r7, #1
 8001256:	4197      	sbcs	r7, r2
 8001258:	2200      	movs	r2, #0
 800125a:	433b      	orrs	r3, r7
 800125c:	0759      	lsls	r1, r3, #29
 800125e:	d000      	beq.n	8001262 <__aeabi_fsub+0x1be>
 8001260:	e78b      	b.n	800117a <__aeabi_fsub+0xd6>
 8001262:	e78f      	b.n	8001184 <__aeabi_fsub+0xe0>
 8001264:	20fe      	movs	r0, #254	@ 0xfe
 8001266:	1c6a      	adds	r2, r5, #1
 8001268:	4210      	tst	r0, r2
 800126a:	d112      	bne.n	8001292 <__aeabi_fsub+0x1ee>
 800126c:	2d00      	cmp	r5, #0
 800126e:	d152      	bne.n	8001316 <__aeabi_fsub+0x272>
 8001270:	2b00      	cmp	r3, #0
 8001272:	d07c      	beq.n	800136e <__aeabi_fsub+0x2ca>
 8001274:	2e00      	cmp	r6, #0
 8001276:	d0bb      	beq.n	80011f0 <__aeabi_fsub+0x14c>
 8001278:	1b9a      	subs	r2, r3, r6
 800127a:	0150      	lsls	r0, r2, #5
 800127c:	d400      	bmi.n	8001280 <__aeabi_fsub+0x1dc>
 800127e:	e08b      	b.n	8001398 <__aeabi_fsub+0x2f4>
 8001280:	2401      	movs	r4, #1
 8001282:	2200      	movs	r2, #0
 8001284:	1af3      	subs	r3, r6, r3
 8001286:	400c      	ands	r4, r1
 8001288:	e7e8      	b.n	800125c <__aeabi_fsub+0x1b8>
 800128a:	4b56      	ldr	r3, [pc, #344]	@ (80013e4 <__aeabi_fsub+0x340>)
 800128c:	1a2a      	subs	r2, r5, r0
 800128e:	403b      	ands	r3, r7
 8001290:	e7e4      	b.n	800125c <__aeabi_fsub+0x1b8>
 8001292:	1b9f      	subs	r7, r3, r6
 8001294:	017a      	lsls	r2, r7, #5
 8001296:	d446      	bmi.n	8001326 <__aeabi_fsub+0x282>
 8001298:	2f00      	cmp	r7, #0
 800129a:	d1cd      	bne.n	8001238 <__aeabi_fsub+0x194>
 800129c:	2400      	movs	r4, #0
 800129e:	2000      	movs	r0, #0
 80012a0:	2300      	movs	r3, #0
 80012a2:	e777      	b.n	8001194 <__aeabi_fsub+0xf0>
 80012a4:	199b      	adds	r3, r3, r6
 80012a6:	2501      	movs	r5, #1
 80012a8:	3201      	adds	r2, #1
 80012aa:	0159      	lsls	r1, r3, #5
 80012ac:	d400      	bmi.n	80012b0 <__aeabi_fsub+0x20c>
 80012ae:	e760      	b.n	8001172 <__aeabi_fsub+0xce>
 80012b0:	2101      	movs	r1, #1
 80012b2:	484d      	ldr	r0, [pc, #308]	@ (80013e8 <__aeabi_fsub+0x344>)
 80012b4:	4019      	ands	r1, r3
 80012b6:	085b      	lsrs	r3, r3, #1
 80012b8:	4003      	ands	r3, r0
 80012ba:	430b      	orrs	r3, r1
 80012bc:	e7ce      	b.n	800125c <__aeabi_fsub+0x1b8>
 80012be:	1e57      	subs	r7, r2, #1
 80012c0:	2a01      	cmp	r2, #1
 80012c2:	d05a      	beq.n	800137a <__aeabi_fsub+0x2d6>
 80012c4:	000c      	movs	r4, r1
 80012c6:	2aff      	cmp	r2, #255	@ 0xff
 80012c8:	d033      	beq.n	8001332 <__aeabi_fsub+0x28e>
 80012ca:	2201      	movs	r2, #1
 80012cc:	2f1b      	cmp	r7, #27
 80012ce:	dc07      	bgt.n	80012e0 <__aeabi_fsub+0x23c>
 80012d0:	2120      	movs	r1, #32
 80012d2:	1bc9      	subs	r1, r1, r7
 80012d4:	001a      	movs	r2, r3
 80012d6:	408b      	lsls	r3, r1
 80012d8:	40fa      	lsrs	r2, r7
 80012da:	1e59      	subs	r1, r3, #1
 80012dc:	418b      	sbcs	r3, r1
 80012de:	431a      	orrs	r2, r3
 80012e0:	0005      	movs	r5, r0
 80012e2:	1ab3      	subs	r3, r6, r2
 80012e4:	e743      	b.n	800116e <__aeabi_fsub+0xca>
 80012e6:	2d00      	cmp	r5, #0
 80012e8:	d123      	bne.n	8001332 <__aeabi_fsub+0x28e>
 80012ea:	22ff      	movs	r2, #255	@ 0xff
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d09b      	beq.n	8001228 <__aeabi_fsub+0x184>
 80012f0:	1e51      	subs	r1, r2, #1
 80012f2:	2a01      	cmp	r2, #1
 80012f4:	d0d6      	beq.n	80012a4 <__aeabi_fsub+0x200>
 80012f6:	2aff      	cmp	r2, #255	@ 0xff
 80012f8:	d01b      	beq.n	8001332 <__aeabi_fsub+0x28e>
 80012fa:	291b      	cmp	r1, #27
 80012fc:	dd2c      	ble.n	8001358 <__aeabi_fsub+0x2b4>
 80012fe:	0002      	movs	r2, r0
 8001300:	1c73      	adds	r3, r6, #1
 8001302:	e73a      	b.n	800117a <__aeabi_fsub+0xd6>
 8001304:	2aff      	cmp	r2, #255	@ 0xff
 8001306:	d088      	beq.n	800121a <__aeabi_fsub+0x176>
 8001308:	199b      	adds	r3, r3, r6
 800130a:	085b      	lsrs	r3, r3, #1
 800130c:	0759      	lsls	r1, r3, #29
 800130e:	d000      	beq.n	8001312 <__aeabi_fsub+0x26e>
 8001310:	e733      	b.n	800117a <__aeabi_fsub+0xd6>
 8001312:	08db      	lsrs	r3, r3, #3
 8001314:	e76e      	b.n	80011f4 <__aeabi_fsub+0x150>
 8001316:	2b00      	cmp	r3, #0
 8001318:	d110      	bne.n	800133c <__aeabi_fsub+0x298>
 800131a:	2e00      	cmp	r6, #0
 800131c:	d043      	beq.n	80013a6 <__aeabi_fsub+0x302>
 800131e:	2401      	movs	r4, #1
 8001320:	0033      	movs	r3, r6
 8001322:	400c      	ands	r4, r1
 8001324:	e706      	b.n	8001134 <__aeabi_fsub+0x90>
 8001326:	2401      	movs	r4, #1
 8001328:	1af7      	subs	r7, r6, r3
 800132a:	400c      	ands	r4, r1
 800132c:	e784      	b.n	8001238 <__aeabi_fsub+0x194>
 800132e:	2b00      	cmp	r3, #0
 8001330:	d104      	bne.n	800133c <__aeabi_fsub+0x298>
 8001332:	0033      	movs	r3, r6
 8001334:	e6fe      	b.n	8001134 <__aeabi_fsub+0x90>
 8001336:	2501      	movs	r5, #1
 8001338:	1b9b      	subs	r3, r3, r6
 800133a:	e718      	b.n	800116e <__aeabi_fsub+0xca>
 800133c:	2e00      	cmp	r6, #0
 800133e:	d100      	bne.n	8001342 <__aeabi_fsub+0x29e>
 8001340:	e6f8      	b.n	8001134 <__aeabi_fsub+0x90>
 8001342:	2280      	movs	r2, #128	@ 0x80
 8001344:	03d2      	lsls	r2, r2, #15
 8001346:	4297      	cmp	r7, r2
 8001348:	d304      	bcc.n	8001354 <__aeabi_fsub+0x2b0>
 800134a:	4594      	cmp	ip, r2
 800134c:	d202      	bcs.n	8001354 <__aeabi_fsub+0x2b0>
 800134e:	2401      	movs	r4, #1
 8001350:	0033      	movs	r3, r6
 8001352:	400c      	ands	r4, r1
 8001354:	08db      	lsrs	r3, r3, #3
 8001356:	e6f1      	b.n	800113c <__aeabi_fsub+0x98>
 8001358:	001a      	movs	r2, r3
 800135a:	2520      	movs	r5, #32
 800135c:	40ca      	lsrs	r2, r1
 800135e:	1a69      	subs	r1, r5, r1
 8001360:	408b      	lsls	r3, r1
 8001362:	1e59      	subs	r1, r3, #1
 8001364:	418b      	sbcs	r3, r1
 8001366:	4313      	orrs	r3, r2
 8001368:	0005      	movs	r5, r0
 800136a:	199b      	adds	r3, r3, r6
 800136c:	e750      	b.n	8001210 <__aeabi_fsub+0x16c>
 800136e:	2e00      	cmp	r6, #0
 8001370:	d094      	beq.n	800129c <__aeabi_fsub+0x1f8>
 8001372:	2401      	movs	r4, #1
 8001374:	0033      	movs	r3, r6
 8001376:	400c      	ands	r4, r1
 8001378:	e73a      	b.n	80011f0 <__aeabi_fsub+0x14c>
 800137a:	000c      	movs	r4, r1
 800137c:	2501      	movs	r5, #1
 800137e:	1af3      	subs	r3, r6, r3
 8001380:	e6f5      	b.n	800116e <__aeabi_fsub+0xca>
 8001382:	0033      	movs	r3, r6
 8001384:	e734      	b.n	80011f0 <__aeabi_fsub+0x14c>
 8001386:	199b      	adds	r3, r3, r6
 8001388:	2200      	movs	r2, #0
 800138a:	0159      	lsls	r1, r3, #5
 800138c:	d5c1      	bpl.n	8001312 <__aeabi_fsub+0x26e>
 800138e:	4a15      	ldr	r2, [pc, #84]	@ (80013e4 <__aeabi_fsub+0x340>)
 8001390:	4013      	ands	r3, r2
 8001392:	08db      	lsrs	r3, r3, #3
 8001394:	2201      	movs	r2, #1
 8001396:	e72d      	b.n	80011f4 <__aeabi_fsub+0x150>
 8001398:	2a00      	cmp	r2, #0
 800139a:	d100      	bne.n	800139e <__aeabi_fsub+0x2fa>
 800139c:	e77e      	b.n	800129c <__aeabi_fsub+0x1f8>
 800139e:	0013      	movs	r3, r2
 80013a0:	2200      	movs	r2, #0
 80013a2:	08db      	lsrs	r3, r3, #3
 80013a4:	e726      	b.n	80011f4 <__aeabi_fsub+0x150>
 80013a6:	2380      	movs	r3, #128	@ 0x80
 80013a8:	2400      	movs	r4, #0
 80013aa:	20ff      	movs	r0, #255	@ 0xff
 80013ac:	03db      	lsls	r3, r3, #15
 80013ae:	e6f1      	b.n	8001194 <__aeabi_fsub+0xf0>
 80013b0:	2a00      	cmp	r2, #0
 80013b2:	d100      	bne.n	80013b6 <__aeabi_fsub+0x312>
 80013b4:	e756      	b.n	8001264 <__aeabi_fsub+0x1c0>
 80013b6:	1b47      	subs	r7, r0, r5
 80013b8:	003a      	movs	r2, r7
 80013ba:	2d00      	cmp	r5, #0
 80013bc:	d100      	bne.n	80013c0 <__aeabi_fsub+0x31c>
 80013be:	e730      	b.n	8001222 <__aeabi_fsub+0x17e>
 80013c0:	2280      	movs	r2, #128	@ 0x80
 80013c2:	04d2      	lsls	r2, r2, #19
 80013c4:	000c      	movs	r4, r1
 80013c6:	4313      	orrs	r3, r2
 80013c8:	e77f      	b.n	80012ca <__aeabi_fsub+0x226>
 80013ca:	2a00      	cmp	r2, #0
 80013cc:	d100      	bne.n	80013d0 <__aeabi_fsub+0x32c>
 80013ce:	e701      	b.n	80011d4 <__aeabi_fsub+0x130>
 80013d0:	1b41      	subs	r1, r0, r5
 80013d2:	2d00      	cmp	r5, #0
 80013d4:	d101      	bne.n	80013da <__aeabi_fsub+0x336>
 80013d6:	000a      	movs	r2, r1
 80013d8:	e788      	b.n	80012ec <__aeabi_fsub+0x248>
 80013da:	2280      	movs	r2, #128	@ 0x80
 80013dc:	04d2      	lsls	r2, r2, #19
 80013de:	4313      	orrs	r3, r2
 80013e0:	e78b      	b.n	80012fa <__aeabi_fsub+0x256>
 80013e2:	46c0      	nop			@ (mov r8, r8)
 80013e4:	fbffffff 	.word	0xfbffffff
 80013e8:	7dffffff 	.word	0x7dffffff

080013ec <__aeabi_f2iz>:
 80013ec:	0241      	lsls	r1, r0, #9
 80013ee:	0042      	lsls	r2, r0, #1
 80013f0:	0fc3      	lsrs	r3, r0, #31
 80013f2:	0a49      	lsrs	r1, r1, #9
 80013f4:	2000      	movs	r0, #0
 80013f6:	0e12      	lsrs	r2, r2, #24
 80013f8:	2a7e      	cmp	r2, #126	@ 0x7e
 80013fa:	dd03      	ble.n	8001404 <__aeabi_f2iz+0x18>
 80013fc:	2a9d      	cmp	r2, #157	@ 0x9d
 80013fe:	dd02      	ble.n	8001406 <__aeabi_f2iz+0x1a>
 8001400:	4a09      	ldr	r2, [pc, #36]	@ (8001428 <__aeabi_f2iz+0x3c>)
 8001402:	1898      	adds	r0, r3, r2
 8001404:	4770      	bx	lr
 8001406:	2080      	movs	r0, #128	@ 0x80
 8001408:	0400      	lsls	r0, r0, #16
 800140a:	4301      	orrs	r1, r0
 800140c:	2a95      	cmp	r2, #149	@ 0x95
 800140e:	dc07      	bgt.n	8001420 <__aeabi_f2iz+0x34>
 8001410:	2096      	movs	r0, #150	@ 0x96
 8001412:	1a82      	subs	r2, r0, r2
 8001414:	40d1      	lsrs	r1, r2
 8001416:	4248      	negs	r0, r1
 8001418:	2b00      	cmp	r3, #0
 800141a:	d1f3      	bne.n	8001404 <__aeabi_f2iz+0x18>
 800141c:	0008      	movs	r0, r1
 800141e:	e7f1      	b.n	8001404 <__aeabi_f2iz+0x18>
 8001420:	3a96      	subs	r2, #150	@ 0x96
 8001422:	4091      	lsls	r1, r2
 8001424:	e7f7      	b.n	8001416 <__aeabi_f2iz+0x2a>
 8001426:	46c0      	nop			@ (mov r8, r8)
 8001428:	7fffffff 	.word	0x7fffffff

0800142c <__aeabi_i2f>:
 800142c:	b570      	push	{r4, r5, r6, lr}
 800142e:	2800      	cmp	r0, #0
 8001430:	d013      	beq.n	800145a <__aeabi_i2f+0x2e>
 8001432:	17c3      	asrs	r3, r0, #31
 8001434:	18c5      	adds	r5, r0, r3
 8001436:	405d      	eors	r5, r3
 8001438:	0fc4      	lsrs	r4, r0, #31
 800143a:	0028      	movs	r0, r5
 800143c:	f001 ffea 	bl	8003414 <__clzsi2>
 8001440:	239e      	movs	r3, #158	@ 0x9e
 8001442:	0001      	movs	r1, r0
 8001444:	1a1b      	subs	r3, r3, r0
 8001446:	2b96      	cmp	r3, #150	@ 0x96
 8001448:	dc0f      	bgt.n	800146a <__aeabi_i2f+0x3e>
 800144a:	2808      	cmp	r0, #8
 800144c:	d034      	beq.n	80014b8 <__aeabi_i2f+0x8c>
 800144e:	3908      	subs	r1, #8
 8001450:	408d      	lsls	r5, r1
 8001452:	026d      	lsls	r5, r5, #9
 8001454:	0a6d      	lsrs	r5, r5, #9
 8001456:	b2d8      	uxtb	r0, r3
 8001458:	e002      	b.n	8001460 <__aeabi_i2f+0x34>
 800145a:	2400      	movs	r4, #0
 800145c:	2000      	movs	r0, #0
 800145e:	2500      	movs	r5, #0
 8001460:	05c0      	lsls	r0, r0, #23
 8001462:	4328      	orrs	r0, r5
 8001464:	07e4      	lsls	r4, r4, #31
 8001466:	4320      	orrs	r0, r4
 8001468:	bd70      	pop	{r4, r5, r6, pc}
 800146a:	2b99      	cmp	r3, #153	@ 0x99
 800146c:	dc16      	bgt.n	800149c <__aeabi_i2f+0x70>
 800146e:	1f42      	subs	r2, r0, #5
 8001470:	2805      	cmp	r0, #5
 8001472:	d000      	beq.n	8001476 <__aeabi_i2f+0x4a>
 8001474:	4095      	lsls	r5, r2
 8001476:	002a      	movs	r2, r5
 8001478:	4811      	ldr	r0, [pc, #68]	@ (80014c0 <__aeabi_i2f+0x94>)
 800147a:	4002      	ands	r2, r0
 800147c:	076e      	lsls	r6, r5, #29
 800147e:	d009      	beq.n	8001494 <__aeabi_i2f+0x68>
 8001480:	260f      	movs	r6, #15
 8001482:	4035      	ands	r5, r6
 8001484:	2d04      	cmp	r5, #4
 8001486:	d005      	beq.n	8001494 <__aeabi_i2f+0x68>
 8001488:	3204      	adds	r2, #4
 800148a:	0155      	lsls	r5, r2, #5
 800148c:	d502      	bpl.n	8001494 <__aeabi_i2f+0x68>
 800148e:	239f      	movs	r3, #159	@ 0x9f
 8001490:	4002      	ands	r2, r0
 8001492:	1a5b      	subs	r3, r3, r1
 8001494:	0192      	lsls	r2, r2, #6
 8001496:	0a55      	lsrs	r5, r2, #9
 8001498:	b2d8      	uxtb	r0, r3
 800149a:	e7e1      	b.n	8001460 <__aeabi_i2f+0x34>
 800149c:	2205      	movs	r2, #5
 800149e:	1a12      	subs	r2, r2, r0
 80014a0:	0028      	movs	r0, r5
 80014a2:	40d0      	lsrs	r0, r2
 80014a4:	0002      	movs	r2, r0
 80014a6:	0008      	movs	r0, r1
 80014a8:	301b      	adds	r0, #27
 80014aa:	4085      	lsls	r5, r0
 80014ac:	0028      	movs	r0, r5
 80014ae:	1e45      	subs	r5, r0, #1
 80014b0:	41a8      	sbcs	r0, r5
 80014b2:	4302      	orrs	r2, r0
 80014b4:	0015      	movs	r5, r2
 80014b6:	e7de      	b.n	8001476 <__aeabi_i2f+0x4a>
 80014b8:	026d      	lsls	r5, r5, #9
 80014ba:	2096      	movs	r0, #150	@ 0x96
 80014bc:	0a6d      	lsrs	r5, r5, #9
 80014be:	e7cf      	b.n	8001460 <__aeabi_i2f+0x34>
 80014c0:	fbffffff 	.word	0xfbffffff

080014c4 <__aeabi_ui2f>:
 80014c4:	b570      	push	{r4, r5, r6, lr}
 80014c6:	1e04      	subs	r4, r0, #0
 80014c8:	d00e      	beq.n	80014e8 <__aeabi_ui2f+0x24>
 80014ca:	f001 ffa3 	bl	8003414 <__clzsi2>
 80014ce:	239e      	movs	r3, #158	@ 0x9e
 80014d0:	0001      	movs	r1, r0
 80014d2:	1a1b      	subs	r3, r3, r0
 80014d4:	2b96      	cmp	r3, #150	@ 0x96
 80014d6:	dc0c      	bgt.n	80014f2 <__aeabi_ui2f+0x2e>
 80014d8:	2808      	cmp	r0, #8
 80014da:	d02f      	beq.n	800153c <__aeabi_ui2f+0x78>
 80014dc:	3908      	subs	r1, #8
 80014de:	408c      	lsls	r4, r1
 80014e0:	0264      	lsls	r4, r4, #9
 80014e2:	0a64      	lsrs	r4, r4, #9
 80014e4:	b2d8      	uxtb	r0, r3
 80014e6:	e001      	b.n	80014ec <__aeabi_ui2f+0x28>
 80014e8:	2000      	movs	r0, #0
 80014ea:	2400      	movs	r4, #0
 80014ec:	05c0      	lsls	r0, r0, #23
 80014ee:	4320      	orrs	r0, r4
 80014f0:	bd70      	pop	{r4, r5, r6, pc}
 80014f2:	2b99      	cmp	r3, #153	@ 0x99
 80014f4:	dc16      	bgt.n	8001524 <__aeabi_ui2f+0x60>
 80014f6:	1f42      	subs	r2, r0, #5
 80014f8:	2805      	cmp	r0, #5
 80014fa:	d000      	beq.n	80014fe <__aeabi_ui2f+0x3a>
 80014fc:	4094      	lsls	r4, r2
 80014fe:	0022      	movs	r2, r4
 8001500:	4810      	ldr	r0, [pc, #64]	@ (8001544 <__aeabi_ui2f+0x80>)
 8001502:	4002      	ands	r2, r0
 8001504:	0765      	lsls	r5, r4, #29
 8001506:	d009      	beq.n	800151c <__aeabi_ui2f+0x58>
 8001508:	250f      	movs	r5, #15
 800150a:	402c      	ands	r4, r5
 800150c:	2c04      	cmp	r4, #4
 800150e:	d005      	beq.n	800151c <__aeabi_ui2f+0x58>
 8001510:	3204      	adds	r2, #4
 8001512:	0154      	lsls	r4, r2, #5
 8001514:	d502      	bpl.n	800151c <__aeabi_ui2f+0x58>
 8001516:	239f      	movs	r3, #159	@ 0x9f
 8001518:	4002      	ands	r2, r0
 800151a:	1a5b      	subs	r3, r3, r1
 800151c:	0192      	lsls	r2, r2, #6
 800151e:	0a54      	lsrs	r4, r2, #9
 8001520:	b2d8      	uxtb	r0, r3
 8001522:	e7e3      	b.n	80014ec <__aeabi_ui2f+0x28>
 8001524:	0002      	movs	r2, r0
 8001526:	0020      	movs	r0, r4
 8001528:	321b      	adds	r2, #27
 800152a:	4090      	lsls	r0, r2
 800152c:	0002      	movs	r2, r0
 800152e:	1e50      	subs	r0, r2, #1
 8001530:	4182      	sbcs	r2, r0
 8001532:	2005      	movs	r0, #5
 8001534:	1a40      	subs	r0, r0, r1
 8001536:	40c4      	lsrs	r4, r0
 8001538:	4314      	orrs	r4, r2
 800153a:	e7e0      	b.n	80014fe <__aeabi_ui2f+0x3a>
 800153c:	0264      	lsls	r4, r4, #9
 800153e:	2096      	movs	r0, #150	@ 0x96
 8001540:	0a64      	lsrs	r4, r4, #9
 8001542:	e7d3      	b.n	80014ec <__aeabi_ui2f+0x28>
 8001544:	fbffffff 	.word	0xfbffffff

08001548 <__aeabi_dadd>:
 8001548:	b5f0      	push	{r4, r5, r6, r7, lr}
 800154a:	4657      	mov	r7, sl
 800154c:	464e      	mov	r6, r9
 800154e:	4645      	mov	r5, r8
 8001550:	46de      	mov	lr, fp
 8001552:	b5e0      	push	{r5, r6, r7, lr}
 8001554:	b083      	sub	sp, #12
 8001556:	9000      	str	r0, [sp, #0]
 8001558:	9101      	str	r1, [sp, #4]
 800155a:	030c      	lsls	r4, r1, #12
 800155c:	004f      	lsls	r7, r1, #1
 800155e:	0fce      	lsrs	r6, r1, #31
 8001560:	0a61      	lsrs	r1, r4, #9
 8001562:	9c00      	ldr	r4, [sp, #0]
 8001564:	031d      	lsls	r5, r3, #12
 8001566:	0f64      	lsrs	r4, r4, #29
 8001568:	430c      	orrs	r4, r1
 800156a:	9900      	ldr	r1, [sp, #0]
 800156c:	9200      	str	r2, [sp, #0]
 800156e:	9301      	str	r3, [sp, #4]
 8001570:	00c8      	lsls	r0, r1, #3
 8001572:	0059      	lsls	r1, r3, #1
 8001574:	0d4b      	lsrs	r3, r1, #21
 8001576:	4699      	mov	r9, r3
 8001578:	9a00      	ldr	r2, [sp, #0]
 800157a:	9b01      	ldr	r3, [sp, #4]
 800157c:	0a6d      	lsrs	r5, r5, #9
 800157e:	0fd9      	lsrs	r1, r3, #31
 8001580:	0f53      	lsrs	r3, r2, #29
 8001582:	432b      	orrs	r3, r5
 8001584:	469a      	mov	sl, r3
 8001586:	9b00      	ldr	r3, [sp, #0]
 8001588:	0d7f      	lsrs	r7, r7, #21
 800158a:	00da      	lsls	r2, r3, #3
 800158c:	4694      	mov	ip, r2
 800158e:	464a      	mov	r2, r9
 8001590:	46b0      	mov	r8, r6
 8001592:	1aba      	subs	r2, r7, r2
 8001594:	428e      	cmp	r6, r1
 8001596:	d100      	bne.n	800159a <__aeabi_dadd+0x52>
 8001598:	e0b0      	b.n	80016fc <__aeabi_dadd+0x1b4>
 800159a:	2a00      	cmp	r2, #0
 800159c:	dc00      	bgt.n	80015a0 <__aeabi_dadd+0x58>
 800159e:	e078      	b.n	8001692 <__aeabi_dadd+0x14a>
 80015a0:	4649      	mov	r1, r9
 80015a2:	2900      	cmp	r1, #0
 80015a4:	d100      	bne.n	80015a8 <__aeabi_dadd+0x60>
 80015a6:	e0e9      	b.n	800177c <__aeabi_dadd+0x234>
 80015a8:	49c9      	ldr	r1, [pc, #804]	@ (80018d0 <__aeabi_dadd+0x388>)
 80015aa:	428f      	cmp	r7, r1
 80015ac:	d100      	bne.n	80015b0 <__aeabi_dadd+0x68>
 80015ae:	e195      	b.n	80018dc <__aeabi_dadd+0x394>
 80015b0:	2501      	movs	r5, #1
 80015b2:	2a38      	cmp	r2, #56	@ 0x38
 80015b4:	dc16      	bgt.n	80015e4 <__aeabi_dadd+0x9c>
 80015b6:	2180      	movs	r1, #128	@ 0x80
 80015b8:	4653      	mov	r3, sl
 80015ba:	0409      	lsls	r1, r1, #16
 80015bc:	430b      	orrs	r3, r1
 80015be:	469a      	mov	sl, r3
 80015c0:	2a1f      	cmp	r2, #31
 80015c2:	dd00      	ble.n	80015c6 <__aeabi_dadd+0x7e>
 80015c4:	e1e7      	b.n	8001996 <__aeabi_dadd+0x44e>
 80015c6:	2120      	movs	r1, #32
 80015c8:	4655      	mov	r5, sl
 80015ca:	1a8b      	subs	r3, r1, r2
 80015cc:	4661      	mov	r1, ip
 80015ce:	409d      	lsls	r5, r3
 80015d0:	40d1      	lsrs	r1, r2
 80015d2:	430d      	orrs	r5, r1
 80015d4:	4661      	mov	r1, ip
 80015d6:	4099      	lsls	r1, r3
 80015d8:	1e4b      	subs	r3, r1, #1
 80015da:	4199      	sbcs	r1, r3
 80015dc:	4653      	mov	r3, sl
 80015de:	40d3      	lsrs	r3, r2
 80015e0:	430d      	orrs	r5, r1
 80015e2:	1ae4      	subs	r4, r4, r3
 80015e4:	1b45      	subs	r5, r0, r5
 80015e6:	42a8      	cmp	r0, r5
 80015e8:	4180      	sbcs	r0, r0
 80015ea:	4240      	negs	r0, r0
 80015ec:	1a24      	subs	r4, r4, r0
 80015ee:	0223      	lsls	r3, r4, #8
 80015f0:	d400      	bmi.n	80015f4 <__aeabi_dadd+0xac>
 80015f2:	e10f      	b.n	8001814 <__aeabi_dadd+0x2cc>
 80015f4:	0264      	lsls	r4, r4, #9
 80015f6:	0a64      	lsrs	r4, r4, #9
 80015f8:	2c00      	cmp	r4, #0
 80015fa:	d100      	bne.n	80015fe <__aeabi_dadd+0xb6>
 80015fc:	e139      	b.n	8001872 <__aeabi_dadd+0x32a>
 80015fe:	0020      	movs	r0, r4
 8001600:	f001 ff08 	bl	8003414 <__clzsi2>
 8001604:	0003      	movs	r3, r0
 8001606:	3b08      	subs	r3, #8
 8001608:	2120      	movs	r1, #32
 800160a:	0028      	movs	r0, r5
 800160c:	1aca      	subs	r2, r1, r3
 800160e:	40d0      	lsrs	r0, r2
 8001610:	409c      	lsls	r4, r3
 8001612:	0002      	movs	r2, r0
 8001614:	409d      	lsls	r5, r3
 8001616:	4322      	orrs	r2, r4
 8001618:	429f      	cmp	r7, r3
 800161a:	dd00      	ble.n	800161e <__aeabi_dadd+0xd6>
 800161c:	e173      	b.n	8001906 <__aeabi_dadd+0x3be>
 800161e:	1bd8      	subs	r0, r3, r7
 8001620:	3001      	adds	r0, #1
 8001622:	1a09      	subs	r1, r1, r0
 8001624:	002c      	movs	r4, r5
 8001626:	408d      	lsls	r5, r1
 8001628:	40c4      	lsrs	r4, r0
 800162a:	1e6b      	subs	r3, r5, #1
 800162c:	419d      	sbcs	r5, r3
 800162e:	0013      	movs	r3, r2
 8001630:	40c2      	lsrs	r2, r0
 8001632:	408b      	lsls	r3, r1
 8001634:	4325      	orrs	r5, r4
 8001636:	2700      	movs	r7, #0
 8001638:	0014      	movs	r4, r2
 800163a:	431d      	orrs	r5, r3
 800163c:	076b      	lsls	r3, r5, #29
 800163e:	d009      	beq.n	8001654 <__aeabi_dadd+0x10c>
 8001640:	230f      	movs	r3, #15
 8001642:	402b      	ands	r3, r5
 8001644:	2b04      	cmp	r3, #4
 8001646:	d005      	beq.n	8001654 <__aeabi_dadd+0x10c>
 8001648:	1d2b      	adds	r3, r5, #4
 800164a:	42ab      	cmp	r3, r5
 800164c:	41ad      	sbcs	r5, r5
 800164e:	426d      	negs	r5, r5
 8001650:	1964      	adds	r4, r4, r5
 8001652:	001d      	movs	r5, r3
 8001654:	0223      	lsls	r3, r4, #8
 8001656:	d400      	bmi.n	800165a <__aeabi_dadd+0x112>
 8001658:	e12d      	b.n	80018b6 <__aeabi_dadd+0x36e>
 800165a:	4a9d      	ldr	r2, [pc, #628]	@ (80018d0 <__aeabi_dadd+0x388>)
 800165c:	3701      	adds	r7, #1
 800165e:	4297      	cmp	r7, r2
 8001660:	d100      	bne.n	8001664 <__aeabi_dadd+0x11c>
 8001662:	e0d3      	b.n	800180c <__aeabi_dadd+0x2c4>
 8001664:	4646      	mov	r6, r8
 8001666:	499b      	ldr	r1, [pc, #620]	@ (80018d4 <__aeabi_dadd+0x38c>)
 8001668:	08ed      	lsrs	r5, r5, #3
 800166a:	4021      	ands	r1, r4
 800166c:	074a      	lsls	r2, r1, #29
 800166e:	432a      	orrs	r2, r5
 8001670:	057c      	lsls	r4, r7, #21
 8001672:	024d      	lsls	r5, r1, #9
 8001674:	0b2d      	lsrs	r5, r5, #12
 8001676:	0d64      	lsrs	r4, r4, #21
 8001678:	0524      	lsls	r4, r4, #20
 800167a:	432c      	orrs	r4, r5
 800167c:	07f6      	lsls	r6, r6, #31
 800167e:	4334      	orrs	r4, r6
 8001680:	0010      	movs	r0, r2
 8001682:	0021      	movs	r1, r4
 8001684:	b003      	add	sp, #12
 8001686:	bcf0      	pop	{r4, r5, r6, r7}
 8001688:	46bb      	mov	fp, r7
 800168a:	46b2      	mov	sl, r6
 800168c:	46a9      	mov	r9, r5
 800168e:	46a0      	mov	r8, r4
 8001690:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001692:	2a00      	cmp	r2, #0
 8001694:	d100      	bne.n	8001698 <__aeabi_dadd+0x150>
 8001696:	e084      	b.n	80017a2 <__aeabi_dadd+0x25a>
 8001698:	464a      	mov	r2, r9
 800169a:	1bd2      	subs	r2, r2, r7
 800169c:	2f00      	cmp	r7, #0
 800169e:	d000      	beq.n	80016a2 <__aeabi_dadd+0x15a>
 80016a0:	e16d      	b.n	800197e <__aeabi_dadd+0x436>
 80016a2:	0025      	movs	r5, r4
 80016a4:	4305      	orrs	r5, r0
 80016a6:	d100      	bne.n	80016aa <__aeabi_dadd+0x162>
 80016a8:	e127      	b.n	80018fa <__aeabi_dadd+0x3b2>
 80016aa:	1e56      	subs	r6, r2, #1
 80016ac:	2a01      	cmp	r2, #1
 80016ae:	d100      	bne.n	80016b2 <__aeabi_dadd+0x16a>
 80016b0:	e23b      	b.n	8001b2a <__aeabi_dadd+0x5e2>
 80016b2:	4d87      	ldr	r5, [pc, #540]	@ (80018d0 <__aeabi_dadd+0x388>)
 80016b4:	42aa      	cmp	r2, r5
 80016b6:	d100      	bne.n	80016ba <__aeabi_dadd+0x172>
 80016b8:	e26a      	b.n	8001b90 <__aeabi_dadd+0x648>
 80016ba:	2501      	movs	r5, #1
 80016bc:	2e38      	cmp	r6, #56	@ 0x38
 80016be:	dc12      	bgt.n	80016e6 <__aeabi_dadd+0x19e>
 80016c0:	0032      	movs	r2, r6
 80016c2:	2a1f      	cmp	r2, #31
 80016c4:	dd00      	ble.n	80016c8 <__aeabi_dadd+0x180>
 80016c6:	e1f8      	b.n	8001aba <__aeabi_dadd+0x572>
 80016c8:	2620      	movs	r6, #32
 80016ca:	0025      	movs	r5, r4
 80016cc:	1ab6      	subs	r6, r6, r2
 80016ce:	0007      	movs	r7, r0
 80016d0:	4653      	mov	r3, sl
 80016d2:	40b0      	lsls	r0, r6
 80016d4:	40d4      	lsrs	r4, r2
 80016d6:	40b5      	lsls	r5, r6
 80016d8:	40d7      	lsrs	r7, r2
 80016da:	1e46      	subs	r6, r0, #1
 80016dc:	41b0      	sbcs	r0, r6
 80016de:	1b1b      	subs	r3, r3, r4
 80016e0:	469a      	mov	sl, r3
 80016e2:	433d      	orrs	r5, r7
 80016e4:	4305      	orrs	r5, r0
 80016e6:	4662      	mov	r2, ip
 80016e8:	1b55      	subs	r5, r2, r5
 80016ea:	45ac      	cmp	ip, r5
 80016ec:	4192      	sbcs	r2, r2
 80016ee:	4653      	mov	r3, sl
 80016f0:	4252      	negs	r2, r2
 80016f2:	000e      	movs	r6, r1
 80016f4:	464f      	mov	r7, r9
 80016f6:	4688      	mov	r8, r1
 80016f8:	1a9c      	subs	r4, r3, r2
 80016fa:	e778      	b.n	80015ee <__aeabi_dadd+0xa6>
 80016fc:	2a00      	cmp	r2, #0
 80016fe:	dc00      	bgt.n	8001702 <__aeabi_dadd+0x1ba>
 8001700:	e08e      	b.n	8001820 <__aeabi_dadd+0x2d8>
 8001702:	4649      	mov	r1, r9
 8001704:	2900      	cmp	r1, #0
 8001706:	d175      	bne.n	80017f4 <__aeabi_dadd+0x2ac>
 8001708:	4661      	mov	r1, ip
 800170a:	4653      	mov	r3, sl
 800170c:	4319      	orrs	r1, r3
 800170e:	d100      	bne.n	8001712 <__aeabi_dadd+0x1ca>
 8001710:	e0f6      	b.n	8001900 <__aeabi_dadd+0x3b8>
 8001712:	1e51      	subs	r1, r2, #1
 8001714:	2a01      	cmp	r2, #1
 8001716:	d100      	bne.n	800171a <__aeabi_dadd+0x1d2>
 8001718:	e191      	b.n	8001a3e <__aeabi_dadd+0x4f6>
 800171a:	4d6d      	ldr	r5, [pc, #436]	@ (80018d0 <__aeabi_dadd+0x388>)
 800171c:	42aa      	cmp	r2, r5
 800171e:	d100      	bne.n	8001722 <__aeabi_dadd+0x1da>
 8001720:	e0dc      	b.n	80018dc <__aeabi_dadd+0x394>
 8001722:	2501      	movs	r5, #1
 8001724:	2938      	cmp	r1, #56	@ 0x38
 8001726:	dc14      	bgt.n	8001752 <__aeabi_dadd+0x20a>
 8001728:	000a      	movs	r2, r1
 800172a:	2a1f      	cmp	r2, #31
 800172c:	dd00      	ble.n	8001730 <__aeabi_dadd+0x1e8>
 800172e:	e1a2      	b.n	8001a76 <__aeabi_dadd+0x52e>
 8001730:	2120      	movs	r1, #32
 8001732:	4653      	mov	r3, sl
 8001734:	1a89      	subs	r1, r1, r2
 8001736:	408b      	lsls	r3, r1
 8001738:	001d      	movs	r5, r3
 800173a:	4663      	mov	r3, ip
 800173c:	40d3      	lsrs	r3, r2
 800173e:	431d      	orrs	r5, r3
 8001740:	4663      	mov	r3, ip
 8001742:	408b      	lsls	r3, r1
 8001744:	0019      	movs	r1, r3
 8001746:	1e4b      	subs	r3, r1, #1
 8001748:	4199      	sbcs	r1, r3
 800174a:	4653      	mov	r3, sl
 800174c:	40d3      	lsrs	r3, r2
 800174e:	430d      	orrs	r5, r1
 8001750:	18e4      	adds	r4, r4, r3
 8001752:	182d      	adds	r5, r5, r0
 8001754:	4285      	cmp	r5, r0
 8001756:	4180      	sbcs	r0, r0
 8001758:	4240      	negs	r0, r0
 800175a:	1824      	adds	r4, r4, r0
 800175c:	0223      	lsls	r3, r4, #8
 800175e:	d559      	bpl.n	8001814 <__aeabi_dadd+0x2cc>
 8001760:	4b5b      	ldr	r3, [pc, #364]	@ (80018d0 <__aeabi_dadd+0x388>)
 8001762:	3701      	adds	r7, #1
 8001764:	429f      	cmp	r7, r3
 8001766:	d051      	beq.n	800180c <__aeabi_dadd+0x2c4>
 8001768:	2101      	movs	r1, #1
 800176a:	4b5a      	ldr	r3, [pc, #360]	@ (80018d4 <__aeabi_dadd+0x38c>)
 800176c:	086a      	lsrs	r2, r5, #1
 800176e:	401c      	ands	r4, r3
 8001770:	4029      	ands	r1, r5
 8001772:	430a      	orrs	r2, r1
 8001774:	07e5      	lsls	r5, r4, #31
 8001776:	4315      	orrs	r5, r2
 8001778:	0864      	lsrs	r4, r4, #1
 800177a:	e75f      	b.n	800163c <__aeabi_dadd+0xf4>
 800177c:	4661      	mov	r1, ip
 800177e:	4653      	mov	r3, sl
 8001780:	4319      	orrs	r1, r3
 8001782:	d100      	bne.n	8001786 <__aeabi_dadd+0x23e>
 8001784:	e0bc      	b.n	8001900 <__aeabi_dadd+0x3b8>
 8001786:	1e51      	subs	r1, r2, #1
 8001788:	2a01      	cmp	r2, #1
 800178a:	d100      	bne.n	800178e <__aeabi_dadd+0x246>
 800178c:	e164      	b.n	8001a58 <__aeabi_dadd+0x510>
 800178e:	4d50      	ldr	r5, [pc, #320]	@ (80018d0 <__aeabi_dadd+0x388>)
 8001790:	42aa      	cmp	r2, r5
 8001792:	d100      	bne.n	8001796 <__aeabi_dadd+0x24e>
 8001794:	e16a      	b.n	8001a6c <__aeabi_dadd+0x524>
 8001796:	2501      	movs	r5, #1
 8001798:	2938      	cmp	r1, #56	@ 0x38
 800179a:	dd00      	ble.n	800179e <__aeabi_dadd+0x256>
 800179c:	e722      	b.n	80015e4 <__aeabi_dadd+0x9c>
 800179e:	000a      	movs	r2, r1
 80017a0:	e70e      	b.n	80015c0 <__aeabi_dadd+0x78>
 80017a2:	4a4d      	ldr	r2, [pc, #308]	@ (80018d8 <__aeabi_dadd+0x390>)
 80017a4:	1c7d      	adds	r5, r7, #1
 80017a6:	4215      	tst	r5, r2
 80017a8:	d000      	beq.n	80017ac <__aeabi_dadd+0x264>
 80017aa:	e0d0      	b.n	800194e <__aeabi_dadd+0x406>
 80017ac:	0025      	movs	r5, r4
 80017ae:	4662      	mov	r2, ip
 80017b0:	4653      	mov	r3, sl
 80017b2:	4305      	orrs	r5, r0
 80017b4:	431a      	orrs	r2, r3
 80017b6:	2f00      	cmp	r7, #0
 80017b8:	d000      	beq.n	80017bc <__aeabi_dadd+0x274>
 80017ba:	e137      	b.n	8001a2c <__aeabi_dadd+0x4e4>
 80017bc:	2d00      	cmp	r5, #0
 80017be:	d100      	bne.n	80017c2 <__aeabi_dadd+0x27a>
 80017c0:	e1a8      	b.n	8001b14 <__aeabi_dadd+0x5cc>
 80017c2:	2a00      	cmp	r2, #0
 80017c4:	d100      	bne.n	80017c8 <__aeabi_dadd+0x280>
 80017c6:	e16a      	b.n	8001a9e <__aeabi_dadd+0x556>
 80017c8:	4663      	mov	r3, ip
 80017ca:	1ac5      	subs	r5, r0, r3
 80017cc:	4653      	mov	r3, sl
 80017ce:	1ae2      	subs	r2, r4, r3
 80017d0:	42a8      	cmp	r0, r5
 80017d2:	419b      	sbcs	r3, r3
 80017d4:	425b      	negs	r3, r3
 80017d6:	1ad3      	subs	r3, r2, r3
 80017d8:	021a      	lsls	r2, r3, #8
 80017da:	d400      	bmi.n	80017de <__aeabi_dadd+0x296>
 80017dc:	e203      	b.n	8001be6 <__aeabi_dadd+0x69e>
 80017de:	4663      	mov	r3, ip
 80017e0:	1a1d      	subs	r5, r3, r0
 80017e2:	45ac      	cmp	ip, r5
 80017e4:	4192      	sbcs	r2, r2
 80017e6:	4653      	mov	r3, sl
 80017e8:	4252      	negs	r2, r2
 80017ea:	1b1c      	subs	r4, r3, r4
 80017ec:	000e      	movs	r6, r1
 80017ee:	4688      	mov	r8, r1
 80017f0:	1aa4      	subs	r4, r4, r2
 80017f2:	e723      	b.n	800163c <__aeabi_dadd+0xf4>
 80017f4:	4936      	ldr	r1, [pc, #216]	@ (80018d0 <__aeabi_dadd+0x388>)
 80017f6:	428f      	cmp	r7, r1
 80017f8:	d070      	beq.n	80018dc <__aeabi_dadd+0x394>
 80017fa:	2501      	movs	r5, #1
 80017fc:	2a38      	cmp	r2, #56	@ 0x38
 80017fe:	dca8      	bgt.n	8001752 <__aeabi_dadd+0x20a>
 8001800:	2180      	movs	r1, #128	@ 0x80
 8001802:	4653      	mov	r3, sl
 8001804:	0409      	lsls	r1, r1, #16
 8001806:	430b      	orrs	r3, r1
 8001808:	469a      	mov	sl, r3
 800180a:	e78e      	b.n	800172a <__aeabi_dadd+0x1e2>
 800180c:	003c      	movs	r4, r7
 800180e:	2500      	movs	r5, #0
 8001810:	2200      	movs	r2, #0
 8001812:	e731      	b.n	8001678 <__aeabi_dadd+0x130>
 8001814:	2307      	movs	r3, #7
 8001816:	402b      	ands	r3, r5
 8001818:	2b00      	cmp	r3, #0
 800181a:	d000      	beq.n	800181e <__aeabi_dadd+0x2d6>
 800181c:	e710      	b.n	8001640 <__aeabi_dadd+0xf8>
 800181e:	e093      	b.n	8001948 <__aeabi_dadd+0x400>
 8001820:	2a00      	cmp	r2, #0
 8001822:	d074      	beq.n	800190e <__aeabi_dadd+0x3c6>
 8001824:	464a      	mov	r2, r9
 8001826:	1bd2      	subs	r2, r2, r7
 8001828:	2f00      	cmp	r7, #0
 800182a:	d100      	bne.n	800182e <__aeabi_dadd+0x2e6>
 800182c:	e0c7      	b.n	80019be <__aeabi_dadd+0x476>
 800182e:	4928      	ldr	r1, [pc, #160]	@ (80018d0 <__aeabi_dadd+0x388>)
 8001830:	4589      	cmp	r9, r1
 8001832:	d100      	bne.n	8001836 <__aeabi_dadd+0x2ee>
 8001834:	e185      	b.n	8001b42 <__aeabi_dadd+0x5fa>
 8001836:	2501      	movs	r5, #1
 8001838:	2a38      	cmp	r2, #56	@ 0x38
 800183a:	dc12      	bgt.n	8001862 <__aeabi_dadd+0x31a>
 800183c:	2180      	movs	r1, #128	@ 0x80
 800183e:	0409      	lsls	r1, r1, #16
 8001840:	430c      	orrs	r4, r1
 8001842:	2a1f      	cmp	r2, #31
 8001844:	dd00      	ble.n	8001848 <__aeabi_dadd+0x300>
 8001846:	e1ab      	b.n	8001ba0 <__aeabi_dadd+0x658>
 8001848:	2120      	movs	r1, #32
 800184a:	0025      	movs	r5, r4
 800184c:	1a89      	subs	r1, r1, r2
 800184e:	0007      	movs	r7, r0
 8001850:	4088      	lsls	r0, r1
 8001852:	408d      	lsls	r5, r1
 8001854:	40d7      	lsrs	r7, r2
 8001856:	1e41      	subs	r1, r0, #1
 8001858:	4188      	sbcs	r0, r1
 800185a:	40d4      	lsrs	r4, r2
 800185c:	433d      	orrs	r5, r7
 800185e:	4305      	orrs	r5, r0
 8001860:	44a2      	add	sl, r4
 8001862:	4465      	add	r5, ip
 8001864:	4565      	cmp	r5, ip
 8001866:	4192      	sbcs	r2, r2
 8001868:	4252      	negs	r2, r2
 800186a:	4452      	add	r2, sl
 800186c:	0014      	movs	r4, r2
 800186e:	464f      	mov	r7, r9
 8001870:	e774      	b.n	800175c <__aeabi_dadd+0x214>
 8001872:	0028      	movs	r0, r5
 8001874:	f001 fdce 	bl	8003414 <__clzsi2>
 8001878:	0003      	movs	r3, r0
 800187a:	3318      	adds	r3, #24
 800187c:	2b1f      	cmp	r3, #31
 800187e:	dc00      	bgt.n	8001882 <__aeabi_dadd+0x33a>
 8001880:	e6c2      	b.n	8001608 <__aeabi_dadd+0xc0>
 8001882:	002a      	movs	r2, r5
 8001884:	3808      	subs	r0, #8
 8001886:	4082      	lsls	r2, r0
 8001888:	429f      	cmp	r7, r3
 800188a:	dd00      	ble.n	800188e <__aeabi_dadd+0x346>
 800188c:	e0a9      	b.n	80019e2 <__aeabi_dadd+0x49a>
 800188e:	1bdb      	subs	r3, r3, r7
 8001890:	1c58      	adds	r0, r3, #1
 8001892:	281f      	cmp	r0, #31
 8001894:	dc00      	bgt.n	8001898 <__aeabi_dadd+0x350>
 8001896:	e1ac      	b.n	8001bf2 <__aeabi_dadd+0x6aa>
 8001898:	0015      	movs	r5, r2
 800189a:	3b1f      	subs	r3, #31
 800189c:	40dd      	lsrs	r5, r3
 800189e:	2820      	cmp	r0, #32
 80018a0:	d005      	beq.n	80018ae <__aeabi_dadd+0x366>
 80018a2:	2340      	movs	r3, #64	@ 0x40
 80018a4:	1a1b      	subs	r3, r3, r0
 80018a6:	409a      	lsls	r2, r3
 80018a8:	1e53      	subs	r3, r2, #1
 80018aa:	419a      	sbcs	r2, r3
 80018ac:	4315      	orrs	r5, r2
 80018ae:	2307      	movs	r3, #7
 80018b0:	2700      	movs	r7, #0
 80018b2:	402b      	ands	r3, r5
 80018b4:	e7b0      	b.n	8001818 <__aeabi_dadd+0x2d0>
 80018b6:	08ed      	lsrs	r5, r5, #3
 80018b8:	4b05      	ldr	r3, [pc, #20]	@ (80018d0 <__aeabi_dadd+0x388>)
 80018ba:	0762      	lsls	r2, r4, #29
 80018bc:	432a      	orrs	r2, r5
 80018be:	08e4      	lsrs	r4, r4, #3
 80018c0:	429f      	cmp	r7, r3
 80018c2:	d00f      	beq.n	80018e4 <__aeabi_dadd+0x39c>
 80018c4:	0324      	lsls	r4, r4, #12
 80018c6:	0b25      	lsrs	r5, r4, #12
 80018c8:	057c      	lsls	r4, r7, #21
 80018ca:	0d64      	lsrs	r4, r4, #21
 80018cc:	e6d4      	b.n	8001678 <__aeabi_dadd+0x130>
 80018ce:	46c0      	nop			@ (mov r8, r8)
 80018d0:	000007ff 	.word	0x000007ff
 80018d4:	ff7fffff 	.word	0xff7fffff
 80018d8:	000007fe 	.word	0x000007fe
 80018dc:	08c0      	lsrs	r0, r0, #3
 80018de:	0762      	lsls	r2, r4, #29
 80018e0:	4302      	orrs	r2, r0
 80018e2:	08e4      	lsrs	r4, r4, #3
 80018e4:	0013      	movs	r3, r2
 80018e6:	4323      	orrs	r3, r4
 80018e8:	d100      	bne.n	80018ec <__aeabi_dadd+0x3a4>
 80018ea:	e186      	b.n	8001bfa <__aeabi_dadd+0x6b2>
 80018ec:	2580      	movs	r5, #128	@ 0x80
 80018ee:	032d      	lsls	r5, r5, #12
 80018f0:	4325      	orrs	r5, r4
 80018f2:	032d      	lsls	r5, r5, #12
 80018f4:	4cc3      	ldr	r4, [pc, #780]	@ (8001c04 <__aeabi_dadd+0x6bc>)
 80018f6:	0b2d      	lsrs	r5, r5, #12
 80018f8:	e6be      	b.n	8001678 <__aeabi_dadd+0x130>
 80018fa:	4660      	mov	r0, ip
 80018fc:	4654      	mov	r4, sl
 80018fe:	000e      	movs	r6, r1
 8001900:	0017      	movs	r7, r2
 8001902:	08c5      	lsrs	r5, r0, #3
 8001904:	e7d8      	b.n	80018b8 <__aeabi_dadd+0x370>
 8001906:	4cc0      	ldr	r4, [pc, #768]	@ (8001c08 <__aeabi_dadd+0x6c0>)
 8001908:	1aff      	subs	r7, r7, r3
 800190a:	4014      	ands	r4, r2
 800190c:	e696      	b.n	800163c <__aeabi_dadd+0xf4>
 800190e:	4abf      	ldr	r2, [pc, #764]	@ (8001c0c <__aeabi_dadd+0x6c4>)
 8001910:	1c79      	adds	r1, r7, #1
 8001912:	4211      	tst	r1, r2
 8001914:	d16b      	bne.n	80019ee <__aeabi_dadd+0x4a6>
 8001916:	0022      	movs	r2, r4
 8001918:	4302      	orrs	r2, r0
 800191a:	2f00      	cmp	r7, #0
 800191c:	d000      	beq.n	8001920 <__aeabi_dadd+0x3d8>
 800191e:	e0db      	b.n	8001ad8 <__aeabi_dadd+0x590>
 8001920:	2a00      	cmp	r2, #0
 8001922:	d100      	bne.n	8001926 <__aeabi_dadd+0x3de>
 8001924:	e12d      	b.n	8001b82 <__aeabi_dadd+0x63a>
 8001926:	4662      	mov	r2, ip
 8001928:	4653      	mov	r3, sl
 800192a:	431a      	orrs	r2, r3
 800192c:	d100      	bne.n	8001930 <__aeabi_dadd+0x3e8>
 800192e:	e0b6      	b.n	8001a9e <__aeabi_dadd+0x556>
 8001930:	4663      	mov	r3, ip
 8001932:	18c5      	adds	r5, r0, r3
 8001934:	4285      	cmp	r5, r0
 8001936:	4180      	sbcs	r0, r0
 8001938:	4454      	add	r4, sl
 800193a:	4240      	negs	r0, r0
 800193c:	1824      	adds	r4, r4, r0
 800193e:	0223      	lsls	r3, r4, #8
 8001940:	d502      	bpl.n	8001948 <__aeabi_dadd+0x400>
 8001942:	000f      	movs	r7, r1
 8001944:	4bb0      	ldr	r3, [pc, #704]	@ (8001c08 <__aeabi_dadd+0x6c0>)
 8001946:	401c      	ands	r4, r3
 8001948:	003a      	movs	r2, r7
 800194a:	0028      	movs	r0, r5
 800194c:	e7d8      	b.n	8001900 <__aeabi_dadd+0x3b8>
 800194e:	4662      	mov	r2, ip
 8001950:	1a85      	subs	r5, r0, r2
 8001952:	42a8      	cmp	r0, r5
 8001954:	4192      	sbcs	r2, r2
 8001956:	4653      	mov	r3, sl
 8001958:	4252      	negs	r2, r2
 800195a:	4691      	mov	r9, r2
 800195c:	1ae3      	subs	r3, r4, r3
 800195e:	001a      	movs	r2, r3
 8001960:	464b      	mov	r3, r9
 8001962:	1ad2      	subs	r2, r2, r3
 8001964:	0013      	movs	r3, r2
 8001966:	4691      	mov	r9, r2
 8001968:	021a      	lsls	r2, r3, #8
 800196a:	d454      	bmi.n	8001a16 <__aeabi_dadd+0x4ce>
 800196c:	464a      	mov	r2, r9
 800196e:	464c      	mov	r4, r9
 8001970:	432a      	orrs	r2, r5
 8001972:	d000      	beq.n	8001976 <__aeabi_dadd+0x42e>
 8001974:	e640      	b.n	80015f8 <__aeabi_dadd+0xb0>
 8001976:	2600      	movs	r6, #0
 8001978:	2400      	movs	r4, #0
 800197a:	2500      	movs	r5, #0
 800197c:	e67c      	b.n	8001678 <__aeabi_dadd+0x130>
 800197e:	4da1      	ldr	r5, [pc, #644]	@ (8001c04 <__aeabi_dadd+0x6bc>)
 8001980:	45a9      	cmp	r9, r5
 8001982:	d100      	bne.n	8001986 <__aeabi_dadd+0x43e>
 8001984:	e090      	b.n	8001aa8 <__aeabi_dadd+0x560>
 8001986:	2501      	movs	r5, #1
 8001988:	2a38      	cmp	r2, #56	@ 0x38
 800198a:	dd00      	ble.n	800198e <__aeabi_dadd+0x446>
 800198c:	e6ab      	b.n	80016e6 <__aeabi_dadd+0x19e>
 800198e:	2580      	movs	r5, #128	@ 0x80
 8001990:	042d      	lsls	r5, r5, #16
 8001992:	432c      	orrs	r4, r5
 8001994:	e695      	b.n	80016c2 <__aeabi_dadd+0x17a>
 8001996:	0011      	movs	r1, r2
 8001998:	4655      	mov	r5, sl
 800199a:	3920      	subs	r1, #32
 800199c:	40cd      	lsrs	r5, r1
 800199e:	46a9      	mov	r9, r5
 80019a0:	2a20      	cmp	r2, #32
 80019a2:	d006      	beq.n	80019b2 <__aeabi_dadd+0x46a>
 80019a4:	2140      	movs	r1, #64	@ 0x40
 80019a6:	4653      	mov	r3, sl
 80019a8:	1a8a      	subs	r2, r1, r2
 80019aa:	4093      	lsls	r3, r2
 80019ac:	4662      	mov	r2, ip
 80019ae:	431a      	orrs	r2, r3
 80019b0:	4694      	mov	ip, r2
 80019b2:	4665      	mov	r5, ip
 80019b4:	1e6b      	subs	r3, r5, #1
 80019b6:	419d      	sbcs	r5, r3
 80019b8:	464b      	mov	r3, r9
 80019ba:	431d      	orrs	r5, r3
 80019bc:	e612      	b.n	80015e4 <__aeabi_dadd+0x9c>
 80019be:	0021      	movs	r1, r4
 80019c0:	4301      	orrs	r1, r0
 80019c2:	d100      	bne.n	80019c6 <__aeabi_dadd+0x47e>
 80019c4:	e0c4      	b.n	8001b50 <__aeabi_dadd+0x608>
 80019c6:	1e51      	subs	r1, r2, #1
 80019c8:	2a01      	cmp	r2, #1
 80019ca:	d100      	bne.n	80019ce <__aeabi_dadd+0x486>
 80019cc:	e0fb      	b.n	8001bc6 <__aeabi_dadd+0x67e>
 80019ce:	4d8d      	ldr	r5, [pc, #564]	@ (8001c04 <__aeabi_dadd+0x6bc>)
 80019d0:	42aa      	cmp	r2, r5
 80019d2:	d100      	bne.n	80019d6 <__aeabi_dadd+0x48e>
 80019d4:	e0b5      	b.n	8001b42 <__aeabi_dadd+0x5fa>
 80019d6:	2501      	movs	r5, #1
 80019d8:	2938      	cmp	r1, #56	@ 0x38
 80019da:	dd00      	ble.n	80019de <__aeabi_dadd+0x496>
 80019dc:	e741      	b.n	8001862 <__aeabi_dadd+0x31a>
 80019de:	000a      	movs	r2, r1
 80019e0:	e72f      	b.n	8001842 <__aeabi_dadd+0x2fa>
 80019e2:	4c89      	ldr	r4, [pc, #548]	@ (8001c08 <__aeabi_dadd+0x6c0>)
 80019e4:	1aff      	subs	r7, r7, r3
 80019e6:	4014      	ands	r4, r2
 80019e8:	0762      	lsls	r2, r4, #29
 80019ea:	08e4      	lsrs	r4, r4, #3
 80019ec:	e76a      	b.n	80018c4 <__aeabi_dadd+0x37c>
 80019ee:	4a85      	ldr	r2, [pc, #532]	@ (8001c04 <__aeabi_dadd+0x6bc>)
 80019f0:	4291      	cmp	r1, r2
 80019f2:	d100      	bne.n	80019f6 <__aeabi_dadd+0x4ae>
 80019f4:	e0e3      	b.n	8001bbe <__aeabi_dadd+0x676>
 80019f6:	4663      	mov	r3, ip
 80019f8:	18c2      	adds	r2, r0, r3
 80019fa:	4282      	cmp	r2, r0
 80019fc:	4180      	sbcs	r0, r0
 80019fe:	0023      	movs	r3, r4
 8001a00:	4240      	negs	r0, r0
 8001a02:	4453      	add	r3, sl
 8001a04:	181b      	adds	r3, r3, r0
 8001a06:	07dd      	lsls	r5, r3, #31
 8001a08:	085c      	lsrs	r4, r3, #1
 8001a0a:	2307      	movs	r3, #7
 8001a0c:	0852      	lsrs	r2, r2, #1
 8001a0e:	4315      	orrs	r5, r2
 8001a10:	000f      	movs	r7, r1
 8001a12:	402b      	ands	r3, r5
 8001a14:	e700      	b.n	8001818 <__aeabi_dadd+0x2d0>
 8001a16:	4663      	mov	r3, ip
 8001a18:	1a1d      	subs	r5, r3, r0
 8001a1a:	45ac      	cmp	ip, r5
 8001a1c:	4192      	sbcs	r2, r2
 8001a1e:	4653      	mov	r3, sl
 8001a20:	4252      	negs	r2, r2
 8001a22:	1b1c      	subs	r4, r3, r4
 8001a24:	000e      	movs	r6, r1
 8001a26:	4688      	mov	r8, r1
 8001a28:	1aa4      	subs	r4, r4, r2
 8001a2a:	e5e5      	b.n	80015f8 <__aeabi_dadd+0xb0>
 8001a2c:	2d00      	cmp	r5, #0
 8001a2e:	d000      	beq.n	8001a32 <__aeabi_dadd+0x4ea>
 8001a30:	e091      	b.n	8001b56 <__aeabi_dadd+0x60e>
 8001a32:	2a00      	cmp	r2, #0
 8001a34:	d138      	bne.n	8001aa8 <__aeabi_dadd+0x560>
 8001a36:	2480      	movs	r4, #128	@ 0x80
 8001a38:	2600      	movs	r6, #0
 8001a3a:	0324      	lsls	r4, r4, #12
 8001a3c:	e756      	b.n	80018ec <__aeabi_dadd+0x3a4>
 8001a3e:	4663      	mov	r3, ip
 8001a40:	18c5      	adds	r5, r0, r3
 8001a42:	4285      	cmp	r5, r0
 8001a44:	4180      	sbcs	r0, r0
 8001a46:	4454      	add	r4, sl
 8001a48:	4240      	negs	r0, r0
 8001a4a:	1824      	adds	r4, r4, r0
 8001a4c:	2701      	movs	r7, #1
 8001a4e:	0223      	lsls	r3, r4, #8
 8001a50:	d400      	bmi.n	8001a54 <__aeabi_dadd+0x50c>
 8001a52:	e6df      	b.n	8001814 <__aeabi_dadd+0x2cc>
 8001a54:	2702      	movs	r7, #2
 8001a56:	e687      	b.n	8001768 <__aeabi_dadd+0x220>
 8001a58:	4663      	mov	r3, ip
 8001a5a:	1ac5      	subs	r5, r0, r3
 8001a5c:	42a8      	cmp	r0, r5
 8001a5e:	4180      	sbcs	r0, r0
 8001a60:	4653      	mov	r3, sl
 8001a62:	4240      	negs	r0, r0
 8001a64:	1ae4      	subs	r4, r4, r3
 8001a66:	2701      	movs	r7, #1
 8001a68:	1a24      	subs	r4, r4, r0
 8001a6a:	e5c0      	b.n	80015ee <__aeabi_dadd+0xa6>
 8001a6c:	0762      	lsls	r2, r4, #29
 8001a6e:	08c0      	lsrs	r0, r0, #3
 8001a70:	4302      	orrs	r2, r0
 8001a72:	08e4      	lsrs	r4, r4, #3
 8001a74:	e736      	b.n	80018e4 <__aeabi_dadd+0x39c>
 8001a76:	0011      	movs	r1, r2
 8001a78:	4653      	mov	r3, sl
 8001a7a:	3920      	subs	r1, #32
 8001a7c:	40cb      	lsrs	r3, r1
 8001a7e:	4699      	mov	r9, r3
 8001a80:	2a20      	cmp	r2, #32
 8001a82:	d006      	beq.n	8001a92 <__aeabi_dadd+0x54a>
 8001a84:	2140      	movs	r1, #64	@ 0x40
 8001a86:	4653      	mov	r3, sl
 8001a88:	1a8a      	subs	r2, r1, r2
 8001a8a:	4093      	lsls	r3, r2
 8001a8c:	4662      	mov	r2, ip
 8001a8e:	431a      	orrs	r2, r3
 8001a90:	4694      	mov	ip, r2
 8001a92:	4665      	mov	r5, ip
 8001a94:	1e6b      	subs	r3, r5, #1
 8001a96:	419d      	sbcs	r5, r3
 8001a98:	464b      	mov	r3, r9
 8001a9a:	431d      	orrs	r5, r3
 8001a9c:	e659      	b.n	8001752 <__aeabi_dadd+0x20a>
 8001a9e:	0762      	lsls	r2, r4, #29
 8001aa0:	08c0      	lsrs	r0, r0, #3
 8001aa2:	4302      	orrs	r2, r0
 8001aa4:	08e4      	lsrs	r4, r4, #3
 8001aa6:	e70d      	b.n	80018c4 <__aeabi_dadd+0x37c>
 8001aa8:	4653      	mov	r3, sl
 8001aaa:	075a      	lsls	r2, r3, #29
 8001aac:	4663      	mov	r3, ip
 8001aae:	08d8      	lsrs	r0, r3, #3
 8001ab0:	4653      	mov	r3, sl
 8001ab2:	000e      	movs	r6, r1
 8001ab4:	4302      	orrs	r2, r0
 8001ab6:	08dc      	lsrs	r4, r3, #3
 8001ab8:	e714      	b.n	80018e4 <__aeabi_dadd+0x39c>
 8001aba:	0015      	movs	r5, r2
 8001abc:	0026      	movs	r6, r4
 8001abe:	3d20      	subs	r5, #32
 8001ac0:	40ee      	lsrs	r6, r5
 8001ac2:	2a20      	cmp	r2, #32
 8001ac4:	d003      	beq.n	8001ace <__aeabi_dadd+0x586>
 8001ac6:	2540      	movs	r5, #64	@ 0x40
 8001ac8:	1aaa      	subs	r2, r5, r2
 8001aca:	4094      	lsls	r4, r2
 8001acc:	4320      	orrs	r0, r4
 8001ace:	1e42      	subs	r2, r0, #1
 8001ad0:	4190      	sbcs	r0, r2
 8001ad2:	0005      	movs	r5, r0
 8001ad4:	4335      	orrs	r5, r6
 8001ad6:	e606      	b.n	80016e6 <__aeabi_dadd+0x19e>
 8001ad8:	2a00      	cmp	r2, #0
 8001ada:	d07c      	beq.n	8001bd6 <__aeabi_dadd+0x68e>
 8001adc:	4662      	mov	r2, ip
 8001ade:	4653      	mov	r3, sl
 8001ae0:	08c0      	lsrs	r0, r0, #3
 8001ae2:	431a      	orrs	r2, r3
 8001ae4:	d100      	bne.n	8001ae8 <__aeabi_dadd+0x5a0>
 8001ae6:	e6fa      	b.n	80018de <__aeabi_dadd+0x396>
 8001ae8:	0762      	lsls	r2, r4, #29
 8001aea:	4310      	orrs	r0, r2
 8001aec:	2280      	movs	r2, #128	@ 0x80
 8001aee:	08e4      	lsrs	r4, r4, #3
 8001af0:	0312      	lsls	r2, r2, #12
 8001af2:	4214      	tst	r4, r2
 8001af4:	d008      	beq.n	8001b08 <__aeabi_dadd+0x5c0>
 8001af6:	08d9      	lsrs	r1, r3, #3
 8001af8:	4211      	tst	r1, r2
 8001afa:	d105      	bne.n	8001b08 <__aeabi_dadd+0x5c0>
 8001afc:	4663      	mov	r3, ip
 8001afe:	08d8      	lsrs	r0, r3, #3
 8001b00:	4653      	mov	r3, sl
 8001b02:	000c      	movs	r4, r1
 8001b04:	075b      	lsls	r3, r3, #29
 8001b06:	4318      	orrs	r0, r3
 8001b08:	0f42      	lsrs	r2, r0, #29
 8001b0a:	00c0      	lsls	r0, r0, #3
 8001b0c:	08c0      	lsrs	r0, r0, #3
 8001b0e:	0752      	lsls	r2, r2, #29
 8001b10:	4302      	orrs	r2, r0
 8001b12:	e6e7      	b.n	80018e4 <__aeabi_dadd+0x39c>
 8001b14:	2a00      	cmp	r2, #0
 8001b16:	d100      	bne.n	8001b1a <__aeabi_dadd+0x5d2>
 8001b18:	e72d      	b.n	8001976 <__aeabi_dadd+0x42e>
 8001b1a:	4663      	mov	r3, ip
 8001b1c:	08d8      	lsrs	r0, r3, #3
 8001b1e:	4653      	mov	r3, sl
 8001b20:	075a      	lsls	r2, r3, #29
 8001b22:	000e      	movs	r6, r1
 8001b24:	4302      	orrs	r2, r0
 8001b26:	08dc      	lsrs	r4, r3, #3
 8001b28:	e6cc      	b.n	80018c4 <__aeabi_dadd+0x37c>
 8001b2a:	4663      	mov	r3, ip
 8001b2c:	1a1d      	subs	r5, r3, r0
 8001b2e:	45ac      	cmp	ip, r5
 8001b30:	4192      	sbcs	r2, r2
 8001b32:	4653      	mov	r3, sl
 8001b34:	4252      	negs	r2, r2
 8001b36:	1b1c      	subs	r4, r3, r4
 8001b38:	000e      	movs	r6, r1
 8001b3a:	4688      	mov	r8, r1
 8001b3c:	1aa4      	subs	r4, r4, r2
 8001b3e:	3701      	adds	r7, #1
 8001b40:	e555      	b.n	80015ee <__aeabi_dadd+0xa6>
 8001b42:	4663      	mov	r3, ip
 8001b44:	08d9      	lsrs	r1, r3, #3
 8001b46:	4653      	mov	r3, sl
 8001b48:	075a      	lsls	r2, r3, #29
 8001b4a:	430a      	orrs	r2, r1
 8001b4c:	08dc      	lsrs	r4, r3, #3
 8001b4e:	e6c9      	b.n	80018e4 <__aeabi_dadd+0x39c>
 8001b50:	4660      	mov	r0, ip
 8001b52:	4654      	mov	r4, sl
 8001b54:	e6d4      	b.n	8001900 <__aeabi_dadd+0x3b8>
 8001b56:	08c0      	lsrs	r0, r0, #3
 8001b58:	2a00      	cmp	r2, #0
 8001b5a:	d100      	bne.n	8001b5e <__aeabi_dadd+0x616>
 8001b5c:	e6bf      	b.n	80018de <__aeabi_dadd+0x396>
 8001b5e:	0762      	lsls	r2, r4, #29
 8001b60:	4310      	orrs	r0, r2
 8001b62:	2280      	movs	r2, #128	@ 0x80
 8001b64:	08e4      	lsrs	r4, r4, #3
 8001b66:	0312      	lsls	r2, r2, #12
 8001b68:	4214      	tst	r4, r2
 8001b6a:	d0cd      	beq.n	8001b08 <__aeabi_dadd+0x5c0>
 8001b6c:	08dd      	lsrs	r5, r3, #3
 8001b6e:	4215      	tst	r5, r2
 8001b70:	d1ca      	bne.n	8001b08 <__aeabi_dadd+0x5c0>
 8001b72:	4663      	mov	r3, ip
 8001b74:	08d8      	lsrs	r0, r3, #3
 8001b76:	4653      	mov	r3, sl
 8001b78:	075b      	lsls	r3, r3, #29
 8001b7a:	000e      	movs	r6, r1
 8001b7c:	002c      	movs	r4, r5
 8001b7e:	4318      	orrs	r0, r3
 8001b80:	e7c2      	b.n	8001b08 <__aeabi_dadd+0x5c0>
 8001b82:	4663      	mov	r3, ip
 8001b84:	08d9      	lsrs	r1, r3, #3
 8001b86:	4653      	mov	r3, sl
 8001b88:	075a      	lsls	r2, r3, #29
 8001b8a:	430a      	orrs	r2, r1
 8001b8c:	08dc      	lsrs	r4, r3, #3
 8001b8e:	e699      	b.n	80018c4 <__aeabi_dadd+0x37c>
 8001b90:	4663      	mov	r3, ip
 8001b92:	08d8      	lsrs	r0, r3, #3
 8001b94:	4653      	mov	r3, sl
 8001b96:	075a      	lsls	r2, r3, #29
 8001b98:	000e      	movs	r6, r1
 8001b9a:	4302      	orrs	r2, r0
 8001b9c:	08dc      	lsrs	r4, r3, #3
 8001b9e:	e6a1      	b.n	80018e4 <__aeabi_dadd+0x39c>
 8001ba0:	0011      	movs	r1, r2
 8001ba2:	0027      	movs	r7, r4
 8001ba4:	3920      	subs	r1, #32
 8001ba6:	40cf      	lsrs	r7, r1
 8001ba8:	2a20      	cmp	r2, #32
 8001baa:	d003      	beq.n	8001bb4 <__aeabi_dadd+0x66c>
 8001bac:	2140      	movs	r1, #64	@ 0x40
 8001bae:	1a8a      	subs	r2, r1, r2
 8001bb0:	4094      	lsls	r4, r2
 8001bb2:	4320      	orrs	r0, r4
 8001bb4:	1e42      	subs	r2, r0, #1
 8001bb6:	4190      	sbcs	r0, r2
 8001bb8:	0005      	movs	r5, r0
 8001bba:	433d      	orrs	r5, r7
 8001bbc:	e651      	b.n	8001862 <__aeabi_dadd+0x31a>
 8001bbe:	000c      	movs	r4, r1
 8001bc0:	2500      	movs	r5, #0
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	e558      	b.n	8001678 <__aeabi_dadd+0x130>
 8001bc6:	4460      	add	r0, ip
 8001bc8:	4560      	cmp	r0, ip
 8001bca:	4192      	sbcs	r2, r2
 8001bcc:	4454      	add	r4, sl
 8001bce:	4252      	negs	r2, r2
 8001bd0:	0005      	movs	r5, r0
 8001bd2:	18a4      	adds	r4, r4, r2
 8001bd4:	e73a      	b.n	8001a4c <__aeabi_dadd+0x504>
 8001bd6:	4653      	mov	r3, sl
 8001bd8:	075a      	lsls	r2, r3, #29
 8001bda:	4663      	mov	r3, ip
 8001bdc:	08d9      	lsrs	r1, r3, #3
 8001bde:	4653      	mov	r3, sl
 8001be0:	430a      	orrs	r2, r1
 8001be2:	08dc      	lsrs	r4, r3, #3
 8001be4:	e67e      	b.n	80018e4 <__aeabi_dadd+0x39c>
 8001be6:	001a      	movs	r2, r3
 8001be8:	001c      	movs	r4, r3
 8001bea:	432a      	orrs	r2, r5
 8001bec:	d000      	beq.n	8001bf0 <__aeabi_dadd+0x6a8>
 8001bee:	e6ab      	b.n	8001948 <__aeabi_dadd+0x400>
 8001bf0:	e6c1      	b.n	8001976 <__aeabi_dadd+0x42e>
 8001bf2:	2120      	movs	r1, #32
 8001bf4:	2500      	movs	r5, #0
 8001bf6:	1a09      	subs	r1, r1, r0
 8001bf8:	e519      	b.n	800162e <__aeabi_dadd+0xe6>
 8001bfa:	2200      	movs	r2, #0
 8001bfc:	2500      	movs	r5, #0
 8001bfe:	4c01      	ldr	r4, [pc, #4]	@ (8001c04 <__aeabi_dadd+0x6bc>)
 8001c00:	e53a      	b.n	8001678 <__aeabi_dadd+0x130>
 8001c02:	46c0      	nop			@ (mov r8, r8)
 8001c04:	000007ff 	.word	0x000007ff
 8001c08:	ff7fffff 	.word	0xff7fffff
 8001c0c:	000007fe 	.word	0x000007fe

08001c10 <__aeabi_ddiv>:
 8001c10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c12:	46de      	mov	lr, fp
 8001c14:	4645      	mov	r5, r8
 8001c16:	4657      	mov	r7, sl
 8001c18:	464e      	mov	r6, r9
 8001c1a:	b5e0      	push	{r5, r6, r7, lr}
 8001c1c:	b087      	sub	sp, #28
 8001c1e:	9200      	str	r2, [sp, #0]
 8001c20:	9301      	str	r3, [sp, #4]
 8001c22:	030b      	lsls	r3, r1, #12
 8001c24:	0b1b      	lsrs	r3, r3, #12
 8001c26:	469b      	mov	fp, r3
 8001c28:	0fca      	lsrs	r2, r1, #31
 8001c2a:	004b      	lsls	r3, r1, #1
 8001c2c:	0004      	movs	r4, r0
 8001c2e:	4680      	mov	r8, r0
 8001c30:	0d5b      	lsrs	r3, r3, #21
 8001c32:	9202      	str	r2, [sp, #8]
 8001c34:	d100      	bne.n	8001c38 <__aeabi_ddiv+0x28>
 8001c36:	e16a      	b.n	8001f0e <__aeabi_ddiv+0x2fe>
 8001c38:	4ad4      	ldr	r2, [pc, #848]	@ (8001f8c <__aeabi_ddiv+0x37c>)
 8001c3a:	4293      	cmp	r3, r2
 8001c3c:	d100      	bne.n	8001c40 <__aeabi_ddiv+0x30>
 8001c3e:	e18c      	b.n	8001f5a <__aeabi_ddiv+0x34a>
 8001c40:	4659      	mov	r1, fp
 8001c42:	0f42      	lsrs	r2, r0, #29
 8001c44:	00c9      	lsls	r1, r1, #3
 8001c46:	430a      	orrs	r2, r1
 8001c48:	2180      	movs	r1, #128	@ 0x80
 8001c4a:	0409      	lsls	r1, r1, #16
 8001c4c:	4311      	orrs	r1, r2
 8001c4e:	00c2      	lsls	r2, r0, #3
 8001c50:	4690      	mov	r8, r2
 8001c52:	4acf      	ldr	r2, [pc, #828]	@ (8001f90 <__aeabi_ddiv+0x380>)
 8001c54:	4689      	mov	r9, r1
 8001c56:	4692      	mov	sl, r2
 8001c58:	449a      	add	sl, r3
 8001c5a:	2300      	movs	r3, #0
 8001c5c:	2400      	movs	r4, #0
 8001c5e:	9303      	str	r3, [sp, #12]
 8001c60:	9e00      	ldr	r6, [sp, #0]
 8001c62:	9f01      	ldr	r7, [sp, #4]
 8001c64:	033b      	lsls	r3, r7, #12
 8001c66:	0b1b      	lsrs	r3, r3, #12
 8001c68:	469b      	mov	fp, r3
 8001c6a:	007b      	lsls	r3, r7, #1
 8001c6c:	0030      	movs	r0, r6
 8001c6e:	0d5b      	lsrs	r3, r3, #21
 8001c70:	0ffd      	lsrs	r5, r7, #31
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d100      	bne.n	8001c78 <__aeabi_ddiv+0x68>
 8001c76:	e128      	b.n	8001eca <__aeabi_ddiv+0x2ba>
 8001c78:	4ac4      	ldr	r2, [pc, #784]	@ (8001f8c <__aeabi_ddiv+0x37c>)
 8001c7a:	4293      	cmp	r3, r2
 8001c7c:	d100      	bne.n	8001c80 <__aeabi_ddiv+0x70>
 8001c7e:	e177      	b.n	8001f70 <__aeabi_ddiv+0x360>
 8001c80:	4659      	mov	r1, fp
 8001c82:	0f72      	lsrs	r2, r6, #29
 8001c84:	00c9      	lsls	r1, r1, #3
 8001c86:	430a      	orrs	r2, r1
 8001c88:	2180      	movs	r1, #128	@ 0x80
 8001c8a:	0409      	lsls	r1, r1, #16
 8001c8c:	4311      	orrs	r1, r2
 8001c8e:	468b      	mov	fp, r1
 8001c90:	49bf      	ldr	r1, [pc, #764]	@ (8001f90 <__aeabi_ddiv+0x380>)
 8001c92:	00f2      	lsls	r2, r6, #3
 8001c94:	468c      	mov	ip, r1
 8001c96:	4651      	mov	r1, sl
 8001c98:	4463      	add	r3, ip
 8001c9a:	1acb      	subs	r3, r1, r3
 8001c9c:	469a      	mov	sl, r3
 8001c9e:	2300      	movs	r3, #0
 8001ca0:	9e02      	ldr	r6, [sp, #8]
 8001ca2:	406e      	eors	r6, r5
 8001ca4:	2c0f      	cmp	r4, #15
 8001ca6:	d827      	bhi.n	8001cf8 <__aeabi_ddiv+0xe8>
 8001ca8:	49ba      	ldr	r1, [pc, #744]	@ (8001f94 <__aeabi_ddiv+0x384>)
 8001caa:	00a4      	lsls	r4, r4, #2
 8001cac:	5909      	ldr	r1, [r1, r4]
 8001cae:	468f      	mov	pc, r1
 8001cb0:	46cb      	mov	fp, r9
 8001cb2:	4642      	mov	r2, r8
 8001cb4:	9e02      	ldr	r6, [sp, #8]
 8001cb6:	9b03      	ldr	r3, [sp, #12]
 8001cb8:	2b02      	cmp	r3, #2
 8001cba:	d016      	beq.n	8001cea <__aeabi_ddiv+0xda>
 8001cbc:	2b03      	cmp	r3, #3
 8001cbe:	d100      	bne.n	8001cc2 <__aeabi_ddiv+0xb2>
 8001cc0:	e2a6      	b.n	8002210 <__aeabi_ddiv+0x600>
 8001cc2:	2b01      	cmp	r3, #1
 8001cc4:	d000      	beq.n	8001cc8 <__aeabi_ddiv+0xb8>
 8001cc6:	e0df      	b.n	8001e88 <__aeabi_ddiv+0x278>
 8001cc8:	2200      	movs	r2, #0
 8001cca:	2300      	movs	r3, #0
 8001ccc:	2400      	movs	r4, #0
 8001cce:	4690      	mov	r8, r2
 8001cd0:	051b      	lsls	r3, r3, #20
 8001cd2:	4323      	orrs	r3, r4
 8001cd4:	07f6      	lsls	r6, r6, #31
 8001cd6:	4333      	orrs	r3, r6
 8001cd8:	4640      	mov	r0, r8
 8001cda:	0019      	movs	r1, r3
 8001cdc:	b007      	add	sp, #28
 8001cde:	bcf0      	pop	{r4, r5, r6, r7}
 8001ce0:	46bb      	mov	fp, r7
 8001ce2:	46b2      	mov	sl, r6
 8001ce4:	46a9      	mov	r9, r5
 8001ce6:	46a0      	mov	r8, r4
 8001ce8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cea:	2200      	movs	r2, #0
 8001cec:	2400      	movs	r4, #0
 8001cee:	4690      	mov	r8, r2
 8001cf0:	4ba6      	ldr	r3, [pc, #664]	@ (8001f8c <__aeabi_ddiv+0x37c>)
 8001cf2:	e7ed      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 8001cf4:	002e      	movs	r6, r5
 8001cf6:	e7df      	b.n	8001cb8 <__aeabi_ddiv+0xa8>
 8001cf8:	45cb      	cmp	fp, r9
 8001cfa:	d200      	bcs.n	8001cfe <__aeabi_ddiv+0xee>
 8001cfc:	e1d4      	b.n	80020a8 <__aeabi_ddiv+0x498>
 8001cfe:	d100      	bne.n	8001d02 <__aeabi_ddiv+0xf2>
 8001d00:	e1cf      	b.n	80020a2 <__aeabi_ddiv+0x492>
 8001d02:	2301      	movs	r3, #1
 8001d04:	425b      	negs	r3, r3
 8001d06:	469c      	mov	ip, r3
 8001d08:	4644      	mov	r4, r8
 8001d0a:	4648      	mov	r0, r9
 8001d0c:	2700      	movs	r7, #0
 8001d0e:	44e2      	add	sl, ip
 8001d10:	465b      	mov	r3, fp
 8001d12:	0e15      	lsrs	r5, r2, #24
 8001d14:	021b      	lsls	r3, r3, #8
 8001d16:	431d      	orrs	r5, r3
 8001d18:	0c19      	lsrs	r1, r3, #16
 8001d1a:	042b      	lsls	r3, r5, #16
 8001d1c:	0212      	lsls	r2, r2, #8
 8001d1e:	9500      	str	r5, [sp, #0]
 8001d20:	0c1d      	lsrs	r5, r3, #16
 8001d22:	4691      	mov	r9, r2
 8001d24:	9102      	str	r1, [sp, #8]
 8001d26:	9503      	str	r5, [sp, #12]
 8001d28:	f7fe fa84 	bl	8000234 <__aeabi_uidivmod>
 8001d2c:	0002      	movs	r2, r0
 8001d2e:	436a      	muls	r2, r5
 8001d30:	040b      	lsls	r3, r1, #16
 8001d32:	0c21      	lsrs	r1, r4, #16
 8001d34:	4680      	mov	r8, r0
 8001d36:	4319      	orrs	r1, r3
 8001d38:	428a      	cmp	r2, r1
 8001d3a:	d909      	bls.n	8001d50 <__aeabi_ddiv+0x140>
 8001d3c:	9d00      	ldr	r5, [sp, #0]
 8001d3e:	2301      	movs	r3, #1
 8001d40:	46ac      	mov	ip, r5
 8001d42:	425b      	negs	r3, r3
 8001d44:	4461      	add	r1, ip
 8001d46:	469c      	mov	ip, r3
 8001d48:	44e0      	add	r8, ip
 8001d4a:	428d      	cmp	r5, r1
 8001d4c:	d800      	bhi.n	8001d50 <__aeabi_ddiv+0x140>
 8001d4e:	e1fb      	b.n	8002148 <__aeabi_ddiv+0x538>
 8001d50:	1a88      	subs	r0, r1, r2
 8001d52:	9902      	ldr	r1, [sp, #8]
 8001d54:	f7fe fa6e 	bl	8000234 <__aeabi_uidivmod>
 8001d58:	9a03      	ldr	r2, [sp, #12]
 8001d5a:	0424      	lsls	r4, r4, #16
 8001d5c:	4342      	muls	r2, r0
 8001d5e:	0409      	lsls	r1, r1, #16
 8001d60:	0c24      	lsrs	r4, r4, #16
 8001d62:	0003      	movs	r3, r0
 8001d64:	430c      	orrs	r4, r1
 8001d66:	42a2      	cmp	r2, r4
 8001d68:	d906      	bls.n	8001d78 <__aeabi_ddiv+0x168>
 8001d6a:	9900      	ldr	r1, [sp, #0]
 8001d6c:	3b01      	subs	r3, #1
 8001d6e:	468c      	mov	ip, r1
 8001d70:	4464      	add	r4, ip
 8001d72:	42a1      	cmp	r1, r4
 8001d74:	d800      	bhi.n	8001d78 <__aeabi_ddiv+0x168>
 8001d76:	e1e1      	b.n	800213c <__aeabi_ddiv+0x52c>
 8001d78:	1aa0      	subs	r0, r4, r2
 8001d7a:	4642      	mov	r2, r8
 8001d7c:	0412      	lsls	r2, r2, #16
 8001d7e:	431a      	orrs	r2, r3
 8001d80:	4693      	mov	fp, r2
 8001d82:	464b      	mov	r3, r9
 8001d84:	4659      	mov	r1, fp
 8001d86:	0c1b      	lsrs	r3, r3, #16
 8001d88:	001d      	movs	r5, r3
 8001d8a:	9304      	str	r3, [sp, #16]
 8001d8c:	040b      	lsls	r3, r1, #16
 8001d8e:	4649      	mov	r1, r9
 8001d90:	0409      	lsls	r1, r1, #16
 8001d92:	0c09      	lsrs	r1, r1, #16
 8001d94:	000c      	movs	r4, r1
 8001d96:	0c1b      	lsrs	r3, r3, #16
 8001d98:	435c      	muls	r4, r3
 8001d9a:	0c12      	lsrs	r2, r2, #16
 8001d9c:	436b      	muls	r3, r5
 8001d9e:	4688      	mov	r8, r1
 8001da0:	4351      	muls	r1, r2
 8001da2:	436a      	muls	r2, r5
 8001da4:	0c25      	lsrs	r5, r4, #16
 8001da6:	46ac      	mov	ip, r5
 8001da8:	185b      	adds	r3, r3, r1
 8001daa:	4463      	add	r3, ip
 8001dac:	4299      	cmp	r1, r3
 8001dae:	d903      	bls.n	8001db8 <__aeabi_ddiv+0x1a8>
 8001db0:	2180      	movs	r1, #128	@ 0x80
 8001db2:	0249      	lsls	r1, r1, #9
 8001db4:	468c      	mov	ip, r1
 8001db6:	4462      	add	r2, ip
 8001db8:	0c19      	lsrs	r1, r3, #16
 8001dba:	0424      	lsls	r4, r4, #16
 8001dbc:	041b      	lsls	r3, r3, #16
 8001dbe:	0c24      	lsrs	r4, r4, #16
 8001dc0:	188a      	adds	r2, r1, r2
 8001dc2:	191c      	adds	r4, r3, r4
 8001dc4:	4290      	cmp	r0, r2
 8001dc6:	d302      	bcc.n	8001dce <__aeabi_ddiv+0x1be>
 8001dc8:	d116      	bne.n	8001df8 <__aeabi_ddiv+0x1e8>
 8001dca:	42a7      	cmp	r7, r4
 8001dcc:	d214      	bcs.n	8001df8 <__aeabi_ddiv+0x1e8>
 8001dce:	465b      	mov	r3, fp
 8001dd0:	9d00      	ldr	r5, [sp, #0]
 8001dd2:	3b01      	subs	r3, #1
 8001dd4:	444f      	add	r7, r9
 8001dd6:	9305      	str	r3, [sp, #20]
 8001dd8:	454f      	cmp	r7, r9
 8001dda:	419b      	sbcs	r3, r3
 8001ddc:	46ac      	mov	ip, r5
 8001dde:	425b      	negs	r3, r3
 8001de0:	4463      	add	r3, ip
 8001de2:	18c0      	adds	r0, r0, r3
 8001de4:	4285      	cmp	r5, r0
 8001de6:	d300      	bcc.n	8001dea <__aeabi_ddiv+0x1da>
 8001de8:	e1a1      	b.n	800212e <__aeabi_ddiv+0x51e>
 8001dea:	4282      	cmp	r2, r0
 8001dec:	d900      	bls.n	8001df0 <__aeabi_ddiv+0x1e0>
 8001dee:	e1f6      	b.n	80021de <__aeabi_ddiv+0x5ce>
 8001df0:	d100      	bne.n	8001df4 <__aeabi_ddiv+0x1e4>
 8001df2:	e1f1      	b.n	80021d8 <__aeabi_ddiv+0x5c8>
 8001df4:	9b05      	ldr	r3, [sp, #20]
 8001df6:	469b      	mov	fp, r3
 8001df8:	1b3c      	subs	r4, r7, r4
 8001dfa:	42a7      	cmp	r7, r4
 8001dfc:	41bf      	sbcs	r7, r7
 8001dfe:	9d00      	ldr	r5, [sp, #0]
 8001e00:	1a80      	subs	r0, r0, r2
 8001e02:	427f      	negs	r7, r7
 8001e04:	1bc0      	subs	r0, r0, r7
 8001e06:	4285      	cmp	r5, r0
 8001e08:	d100      	bne.n	8001e0c <__aeabi_ddiv+0x1fc>
 8001e0a:	e1d0      	b.n	80021ae <__aeabi_ddiv+0x59e>
 8001e0c:	9902      	ldr	r1, [sp, #8]
 8001e0e:	f7fe fa11 	bl	8000234 <__aeabi_uidivmod>
 8001e12:	9a03      	ldr	r2, [sp, #12]
 8001e14:	040b      	lsls	r3, r1, #16
 8001e16:	4342      	muls	r2, r0
 8001e18:	0c21      	lsrs	r1, r4, #16
 8001e1a:	0007      	movs	r7, r0
 8001e1c:	4319      	orrs	r1, r3
 8001e1e:	428a      	cmp	r2, r1
 8001e20:	d900      	bls.n	8001e24 <__aeabi_ddiv+0x214>
 8001e22:	e178      	b.n	8002116 <__aeabi_ddiv+0x506>
 8001e24:	1a88      	subs	r0, r1, r2
 8001e26:	9902      	ldr	r1, [sp, #8]
 8001e28:	f7fe fa04 	bl	8000234 <__aeabi_uidivmod>
 8001e2c:	9a03      	ldr	r2, [sp, #12]
 8001e2e:	0424      	lsls	r4, r4, #16
 8001e30:	4342      	muls	r2, r0
 8001e32:	0409      	lsls	r1, r1, #16
 8001e34:	0c24      	lsrs	r4, r4, #16
 8001e36:	0003      	movs	r3, r0
 8001e38:	430c      	orrs	r4, r1
 8001e3a:	42a2      	cmp	r2, r4
 8001e3c:	d900      	bls.n	8001e40 <__aeabi_ddiv+0x230>
 8001e3e:	e15d      	b.n	80020fc <__aeabi_ddiv+0x4ec>
 8001e40:	4641      	mov	r1, r8
 8001e42:	1aa4      	subs	r4, r4, r2
 8001e44:	043a      	lsls	r2, r7, #16
 8001e46:	431a      	orrs	r2, r3
 8001e48:	9d04      	ldr	r5, [sp, #16]
 8001e4a:	0413      	lsls	r3, r2, #16
 8001e4c:	0c1b      	lsrs	r3, r3, #16
 8001e4e:	4359      	muls	r1, r3
 8001e50:	4647      	mov	r7, r8
 8001e52:	436b      	muls	r3, r5
 8001e54:	469c      	mov	ip, r3
 8001e56:	0c10      	lsrs	r0, r2, #16
 8001e58:	4347      	muls	r7, r0
 8001e5a:	0c0b      	lsrs	r3, r1, #16
 8001e5c:	44bc      	add	ip, r7
 8001e5e:	4463      	add	r3, ip
 8001e60:	4368      	muls	r0, r5
 8001e62:	429f      	cmp	r7, r3
 8001e64:	d903      	bls.n	8001e6e <__aeabi_ddiv+0x25e>
 8001e66:	2580      	movs	r5, #128	@ 0x80
 8001e68:	026d      	lsls	r5, r5, #9
 8001e6a:	46ac      	mov	ip, r5
 8001e6c:	4460      	add	r0, ip
 8001e6e:	0c1f      	lsrs	r7, r3, #16
 8001e70:	0409      	lsls	r1, r1, #16
 8001e72:	041b      	lsls	r3, r3, #16
 8001e74:	0c09      	lsrs	r1, r1, #16
 8001e76:	183f      	adds	r7, r7, r0
 8001e78:	185b      	adds	r3, r3, r1
 8001e7a:	42bc      	cmp	r4, r7
 8001e7c:	d200      	bcs.n	8001e80 <__aeabi_ddiv+0x270>
 8001e7e:	e102      	b.n	8002086 <__aeabi_ddiv+0x476>
 8001e80:	d100      	bne.n	8001e84 <__aeabi_ddiv+0x274>
 8001e82:	e0fd      	b.n	8002080 <__aeabi_ddiv+0x470>
 8001e84:	2301      	movs	r3, #1
 8001e86:	431a      	orrs	r2, r3
 8001e88:	4b43      	ldr	r3, [pc, #268]	@ (8001f98 <__aeabi_ddiv+0x388>)
 8001e8a:	4453      	add	r3, sl
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	dc00      	bgt.n	8001e92 <__aeabi_ddiv+0x282>
 8001e90:	e0ae      	b.n	8001ff0 <__aeabi_ddiv+0x3e0>
 8001e92:	0751      	lsls	r1, r2, #29
 8001e94:	d000      	beq.n	8001e98 <__aeabi_ddiv+0x288>
 8001e96:	e198      	b.n	80021ca <__aeabi_ddiv+0x5ba>
 8001e98:	4659      	mov	r1, fp
 8001e9a:	01c9      	lsls	r1, r1, #7
 8001e9c:	d506      	bpl.n	8001eac <__aeabi_ddiv+0x29c>
 8001e9e:	4659      	mov	r1, fp
 8001ea0:	4b3e      	ldr	r3, [pc, #248]	@ (8001f9c <__aeabi_ddiv+0x38c>)
 8001ea2:	4019      	ands	r1, r3
 8001ea4:	2380      	movs	r3, #128	@ 0x80
 8001ea6:	468b      	mov	fp, r1
 8001ea8:	00db      	lsls	r3, r3, #3
 8001eaa:	4453      	add	r3, sl
 8001eac:	493c      	ldr	r1, [pc, #240]	@ (8001fa0 <__aeabi_ddiv+0x390>)
 8001eae:	428b      	cmp	r3, r1
 8001eb0:	dd00      	ble.n	8001eb4 <__aeabi_ddiv+0x2a4>
 8001eb2:	e71a      	b.n	8001cea <__aeabi_ddiv+0xda>
 8001eb4:	4659      	mov	r1, fp
 8001eb6:	08d2      	lsrs	r2, r2, #3
 8001eb8:	0749      	lsls	r1, r1, #29
 8001eba:	4311      	orrs	r1, r2
 8001ebc:	465a      	mov	r2, fp
 8001ebe:	055b      	lsls	r3, r3, #21
 8001ec0:	0254      	lsls	r4, r2, #9
 8001ec2:	4688      	mov	r8, r1
 8001ec4:	0b24      	lsrs	r4, r4, #12
 8001ec6:	0d5b      	lsrs	r3, r3, #21
 8001ec8:	e702      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 8001eca:	465a      	mov	r2, fp
 8001ecc:	9b00      	ldr	r3, [sp, #0]
 8001ece:	431a      	orrs	r2, r3
 8001ed0:	d100      	bne.n	8001ed4 <__aeabi_ddiv+0x2c4>
 8001ed2:	e07e      	b.n	8001fd2 <__aeabi_ddiv+0x3c2>
 8001ed4:	465b      	mov	r3, fp
 8001ed6:	2b00      	cmp	r3, #0
 8001ed8:	d100      	bne.n	8001edc <__aeabi_ddiv+0x2cc>
 8001eda:	e100      	b.n	80020de <__aeabi_ddiv+0x4ce>
 8001edc:	4658      	mov	r0, fp
 8001ede:	f001 fa99 	bl	8003414 <__clzsi2>
 8001ee2:	0002      	movs	r2, r0
 8001ee4:	0003      	movs	r3, r0
 8001ee6:	3a0b      	subs	r2, #11
 8001ee8:	271d      	movs	r7, #29
 8001eea:	9e00      	ldr	r6, [sp, #0]
 8001eec:	1aba      	subs	r2, r7, r2
 8001eee:	0019      	movs	r1, r3
 8001ef0:	4658      	mov	r0, fp
 8001ef2:	40d6      	lsrs	r6, r2
 8001ef4:	3908      	subs	r1, #8
 8001ef6:	4088      	lsls	r0, r1
 8001ef8:	0032      	movs	r2, r6
 8001efa:	4302      	orrs	r2, r0
 8001efc:	4693      	mov	fp, r2
 8001efe:	9a00      	ldr	r2, [sp, #0]
 8001f00:	408a      	lsls	r2, r1
 8001f02:	4928      	ldr	r1, [pc, #160]	@ (8001fa4 <__aeabi_ddiv+0x394>)
 8001f04:	4453      	add	r3, sl
 8001f06:	468a      	mov	sl, r1
 8001f08:	449a      	add	sl, r3
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	e6c8      	b.n	8001ca0 <__aeabi_ddiv+0x90>
 8001f0e:	465b      	mov	r3, fp
 8001f10:	4303      	orrs	r3, r0
 8001f12:	4699      	mov	r9, r3
 8001f14:	d056      	beq.n	8001fc4 <__aeabi_ddiv+0x3b4>
 8001f16:	465b      	mov	r3, fp
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	d100      	bne.n	8001f1e <__aeabi_ddiv+0x30e>
 8001f1c:	e0cd      	b.n	80020ba <__aeabi_ddiv+0x4aa>
 8001f1e:	4658      	mov	r0, fp
 8001f20:	f001 fa78 	bl	8003414 <__clzsi2>
 8001f24:	230b      	movs	r3, #11
 8001f26:	425b      	negs	r3, r3
 8001f28:	469c      	mov	ip, r3
 8001f2a:	0002      	movs	r2, r0
 8001f2c:	4484      	add	ip, r0
 8001f2e:	4666      	mov	r6, ip
 8001f30:	231d      	movs	r3, #29
 8001f32:	1b9b      	subs	r3, r3, r6
 8001f34:	0026      	movs	r6, r4
 8001f36:	0011      	movs	r1, r2
 8001f38:	4658      	mov	r0, fp
 8001f3a:	40de      	lsrs	r6, r3
 8001f3c:	3908      	subs	r1, #8
 8001f3e:	4088      	lsls	r0, r1
 8001f40:	0033      	movs	r3, r6
 8001f42:	4303      	orrs	r3, r0
 8001f44:	4699      	mov	r9, r3
 8001f46:	0023      	movs	r3, r4
 8001f48:	408b      	lsls	r3, r1
 8001f4a:	4698      	mov	r8, r3
 8001f4c:	4b16      	ldr	r3, [pc, #88]	@ (8001fa8 <__aeabi_ddiv+0x398>)
 8001f4e:	2400      	movs	r4, #0
 8001f50:	1a9b      	subs	r3, r3, r2
 8001f52:	469a      	mov	sl, r3
 8001f54:	2300      	movs	r3, #0
 8001f56:	9303      	str	r3, [sp, #12]
 8001f58:	e682      	b.n	8001c60 <__aeabi_ddiv+0x50>
 8001f5a:	465a      	mov	r2, fp
 8001f5c:	4302      	orrs	r2, r0
 8001f5e:	4691      	mov	r9, r2
 8001f60:	d12a      	bne.n	8001fb8 <__aeabi_ddiv+0x3a8>
 8001f62:	2200      	movs	r2, #0
 8001f64:	469a      	mov	sl, r3
 8001f66:	2302      	movs	r3, #2
 8001f68:	4690      	mov	r8, r2
 8001f6a:	2408      	movs	r4, #8
 8001f6c:	9303      	str	r3, [sp, #12]
 8001f6e:	e677      	b.n	8001c60 <__aeabi_ddiv+0x50>
 8001f70:	465a      	mov	r2, fp
 8001f72:	9b00      	ldr	r3, [sp, #0]
 8001f74:	431a      	orrs	r2, r3
 8001f76:	4b0d      	ldr	r3, [pc, #52]	@ (8001fac <__aeabi_ddiv+0x39c>)
 8001f78:	469c      	mov	ip, r3
 8001f7a:	44e2      	add	sl, ip
 8001f7c:	2a00      	cmp	r2, #0
 8001f7e:	d117      	bne.n	8001fb0 <__aeabi_ddiv+0x3a0>
 8001f80:	2302      	movs	r3, #2
 8001f82:	431c      	orrs	r4, r3
 8001f84:	2300      	movs	r3, #0
 8001f86:	469b      	mov	fp, r3
 8001f88:	3302      	adds	r3, #2
 8001f8a:	e689      	b.n	8001ca0 <__aeabi_ddiv+0x90>
 8001f8c:	000007ff 	.word	0x000007ff
 8001f90:	fffffc01 	.word	0xfffffc01
 8001f94:	08019e60 	.word	0x08019e60
 8001f98:	000003ff 	.word	0x000003ff
 8001f9c:	feffffff 	.word	0xfeffffff
 8001fa0:	000007fe 	.word	0x000007fe
 8001fa4:	000003f3 	.word	0x000003f3
 8001fa8:	fffffc0d 	.word	0xfffffc0d
 8001fac:	fffff801 	.word	0xfffff801
 8001fb0:	2303      	movs	r3, #3
 8001fb2:	0032      	movs	r2, r6
 8001fb4:	431c      	orrs	r4, r3
 8001fb6:	e673      	b.n	8001ca0 <__aeabi_ddiv+0x90>
 8001fb8:	469a      	mov	sl, r3
 8001fba:	2303      	movs	r3, #3
 8001fbc:	46d9      	mov	r9, fp
 8001fbe:	240c      	movs	r4, #12
 8001fc0:	9303      	str	r3, [sp, #12]
 8001fc2:	e64d      	b.n	8001c60 <__aeabi_ddiv+0x50>
 8001fc4:	2300      	movs	r3, #0
 8001fc6:	4698      	mov	r8, r3
 8001fc8:	469a      	mov	sl, r3
 8001fca:	3301      	adds	r3, #1
 8001fcc:	2404      	movs	r4, #4
 8001fce:	9303      	str	r3, [sp, #12]
 8001fd0:	e646      	b.n	8001c60 <__aeabi_ddiv+0x50>
 8001fd2:	2301      	movs	r3, #1
 8001fd4:	431c      	orrs	r4, r3
 8001fd6:	2300      	movs	r3, #0
 8001fd8:	469b      	mov	fp, r3
 8001fda:	3301      	adds	r3, #1
 8001fdc:	e660      	b.n	8001ca0 <__aeabi_ddiv+0x90>
 8001fde:	2300      	movs	r3, #0
 8001fe0:	2480      	movs	r4, #128	@ 0x80
 8001fe2:	4698      	mov	r8, r3
 8001fe4:	2600      	movs	r6, #0
 8001fe6:	4b92      	ldr	r3, [pc, #584]	@ (8002230 <__aeabi_ddiv+0x620>)
 8001fe8:	0324      	lsls	r4, r4, #12
 8001fea:	e671      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 8001fec:	2201      	movs	r2, #1
 8001fee:	4252      	negs	r2, r2
 8001ff0:	2101      	movs	r1, #1
 8001ff2:	1ac9      	subs	r1, r1, r3
 8001ff4:	2938      	cmp	r1, #56	@ 0x38
 8001ff6:	dd00      	ble.n	8001ffa <__aeabi_ddiv+0x3ea>
 8001ff8:	e666      	b.n	8001cc8 <__aeabi_ddiv+0xb8>
 8001ffa:	291f      	cmp	r1, #31
 8001ffc:	dc00      	bgt.n	8002000 <__aeabi_ddiv+0x3f0>
 8001ffe:	e0ab      	b.n	8002158 <__aeabi_ddiv+0x548>
 8002000:	201f      	movs	r0, #31
 8002002:	4240      	negs	r0, r0
 8002004:	1ac3      	subs	r3, r0, r3
 8002006:	4658      	mov	r0, fp
 8002008:	40d8      	lsrs	r0, r3
 800200a:	0003      	movs	r3, r0
 800200c:	2920      	cmp	r1, #32
 800200e:	d004      	beq.n	800201a <__aeabi_ddiv+0x40a>
 8002010:	4658      	mov	r0, fp
 8002012:	4988      	ldr	r1, [pc, #544]	@ (8002234 <__aeabi_ddiv+0x624>)
 8002014:	4451      	add	r1, sl
 8002016:	4088      	lsls	r0, r1
 8002018:	4302      	orrs	r2, r0
 800201a:	1e51      	subs	r1, r2, #1
 800201c:	418a      	sbcs	r2, r1
 800201e:	431a      	orrs	r2, r3
 8002020:	2307      	movs	r3, #7
 8002022:	0019      	movs	r1, r3
 8002024:	2400      	movs	r4, #0
 8002026:	4011      	ands	r1, r2
 8002028:	4213      	tst	r3, r2
 800202a:	d00c      	beq.n	8002046 <__aeabi_ddiv+0x436>
 800202c:	230f      	movs	r3, #15
 800202e:	4013      	ands	r3, r2
 8002030:	2b04      	cmp	r3, #4
 8002032:	d100      	bne.n	8002036 <__aeabi_ddiv+0x426>
 8002034:	e0f9      	b.n	800222a <__aeabi_ddiv+0x61a>
 8002036:	1d11      	adds	r1, r2, #4
 8002038:	4291      	cmp	r1, r2
 800203a:	419b      	sbcs	r3, r3
 800203c:	000a      	movs	r2, r1
 800203e:	425b      	negs	r3, r3
 8002040:	0759      	lsls	r1, r3, #29
 8002042:	025b      	lsls	r3, r3, #9
 8002044:	0b1c      	lsrs	r4, r3, #12
 8002046:	08d2      	lsrs	r2, r2, #3
 8002048:	430a      	orrs	r2, r1
 800204a:	4690      	mov	r8, r2
 800204c:	2300      	movs	r3, #0
 800204e:	e63f      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 8002050:	2480      	movs	r4, #128	@ 0x80
 8002052:	464b      	mov	r3, r9
 8002054:	0324      	lsls	r4, r4, #12
 8002056:	4223      	tst	r3, r4
 8002058:	d009      	beq.n	800206e <__aeabi_ddiv+0x45e>
 800205a:	465b      	mov	r3, fp
 800205c:	4223      	tst	r3, r4
 800205e:	d106      	bne.n	800206e <__aeabi_ddiv+0x45e>
 8002060:	431c      	orrs	r4, r3
 8002062:	0324      	lsls	r4, r4, #12
 8002064:	002e      	movs	r6, r5
 8002066:	4690      	mov	r8, r2
 8002068:	4b71      	ldr	r3, [pc, #452]	@ (8002230 <__aeabi_ddiv+0x620>)
 800206a:	0b24      	lsrs	r4, r4, #12
 800206c:	e630      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 800206e:	2480      	movs	r4, #128	@ 0x80
 8002070:	464b      	mov	r3, r9
 8002072:	0324      	lsls	r4, r4, #12
 8002074:	431c      	orrs	r4, r3
 8002076:	0324      	lsls	r4, r4, #12
 8002078:	9e02      	ldr	r6, [sp, #8]
 800207a:	4b6d      	ldr	r3, [pc, #436]	@ (8002230 <__aeabi_ddiv+0x620>)
 800207c:	0b24      	lsrs	r4, r4, #12
 800207e:	e627      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 8002080:	2b00      	cmp	r3, #0
 8002082:	d100      	bne.n	8002086 <__aeabi_ddiv+0x476>
 8002084:	e700      	b.n	8001e88 <__aeabi_ddiv+0x278>
 8002086:	9800      	ldr	r0, [sp, #0]
 8002088:	1e51      	subs	r1, r2, #1
 800208a:	4684      	mov	ip, r0
 800208c:	4464      	add	r4, ip
 800208e:	4284      	cmp	r4, r0
 8002090:	d200      	bcs.n	8002094 <__aeabi_ddiv+0x484>
 8002092:	e084      	b.n	800219e <__aeabi_ddiv+0x58e>
 8002094:	42bc      	cmp	r4, r7
 8002096:	d200      	bcs.n	800209a <__aeabi_ddiv+0x48a>
 8002098:	e0ae      	b.n	80021f8 <__aeabi_ddiv+0x5e8>
 800209a:	d100      	bne.n	800209e <__aeabi_ddiv+0x48e>
 800209c:	e0c1      	b.n	8002222 <__aeabi_ddiv+0x612>
 800209e:	000a      	movs	r2, r1
 80020a0:	e6f0      	b.n	8001e84 <__aeabi_ddiv+0x274>
 80020a2:	4542      	cmp	r2, r8
 80020a4:	d900      	bls.n	80020a8 <__aeabi_ddiv+0x498>
 80020a6:	e62c      	b.n	8001d02 <__aeabi_ddiv+0xf2>
 80020a8:	464b      	mov	r3, r9
 80020aa:	07dc      	lsls	r4, r3, #31
 80020ac:	0858      	lsrs	r0, r3, #1
 80020ae:	4643      	mov	r3, r8
 80020b0:	085b      	lsrs	r3, r3, #1
 80020b2:	431c      	orrs	r4, r3
 80020b4:	4643      	mov	r3, r8
 80020b6:	07df      	lsls	r7, r3, #31
 80020b8:	e62a      	b.n	8001d10 <__aeabi_ddiv+0x100>
 80020ba:	f001 f9ab 	bl	8003414 <__clzsi2>
 80020be:	2315      	movs	r3, #21
 80020c0:	469c      	mov	ip, r3
 80020c2:	4484      	add	ip, r0
 80020c4:	0002      	movs	r2, r0
 80020c6:	4663      	mov	r3, ip
 80020c8:	3220      	adds	r2, #32
 80020ca:	2b1c      	cmp	r3, #28
 80020cc:	dc00      	bgt.n	80020d0 <__aeabi_ddiv+0x4c0>
 80020ce:	e72e      	b.n	8001f2e <__aeabi_ddiv+0x31e>
 80020d0:	0023      	movs	r3, r4
 80020d2:	3808      	subs	r0, #8
 80020d4:	4083      	lsls	r3, r0
 80020d6:	4699      	mov	r9, r3
 80020d8:	2300      	movs	r3, #0
 80020da:	4698      	mov	r8, r3
 80020dc:	e736      	b.n	8001f4c <__aeabi_ddiv+0x33c>
 80020de:	f001 f999 	bl	8003414 <__clzsi2>
 80020e2:	0002      	movs	r2, r0
 80020e4:	0003      	movs	r3, r0
 80020e6:	3215      	adds	r2, #21
 80020e8:	3320      	adds	r3, #32
 80020ea:	2a1c      	cmp	r2, #28
 80020ec:	dc00      	bgt.n	80020f0 <__aeabi_ddiv+0x4e0>
 80020ee:	e6fb      	b.n	8001ee8 <__aeabi_ddiv+0x2d8>
 80020f0:	9900      	ldr	r1, [sp, #0]
 80020f2:	3808      	subs	r0, #8
 80020f4:	4081      	lsls	r1, r0
 80020f6:	2200      	movs	r2, #0
 80020f8:	468b      	mov	fp, r1
 80020fa:	e702      	b.n	8001f02 <__aeabi_ddiv+0x2f2>
 80020fc:	9900      	ldr	r1, [sp, #0]
 80020fe:	3b01      	subs	r3, #1
 8002100:	468c      	mov	ip, r1
 8002102:	4464      	add	r4, ip
 8002104:	42a1      	cmp	r1, r4
 8002106:	d900      	bls.n	800210a <__aeabi_ddiv+0x4fa>
 8002108:	e69a      	b.n	8001e40 <__aeabi_ddiv+0x230>
 800210a:	42a2      	cmp	r2, r4
 800210c:	d800      	bhi.n	8002110 <__aeabi_ddiv+0x500>
 800210e:	e697      	b.n	8001e40 <__aeabi_ddiv+0x230>
 8002110:	1e83      	subs	r3, r0, #2
 8002112:	4464      	add	r4, ip
 8002114:	e694      	b.n	8001e40 <__aeabi_ddiv+0x230>
 8002116:	46ac      	mov	ip, r5
 8002118:	4461      	add	r1, ip
 800211a:	3f01      	subs	r7, #1
 800211c:	428d      	cmp	r5, r1
 800211e:	d900      	bls.n	8002122 <__aeabi_ddiv+0x512>
 8002120:	e680      	b.n	8001e24 <__aeabi_ddiv+0x214>
 8002122:	428a      	cmp	r2, r1
 8002124:	d800      	bhi.n	8002128 <__aeabi_ddiv+0x518>
 8002126:	e67d      	b.n	8001e24 <__aeabi_ddiv+0x214>
 8002128:	1e87      	subs	r7, r0, #2
 800212a:	4461      	add	r1, ip
 800212c:	e67a      	b.n	8001e24 <__aeabi_ddiv+0x214>
 800212e:	4285      	cmp	r5, r0
 8002130:	d000      	beq.n	8002134 <__aeabi_ddiv+0x524>
 8002132:	e65f      	b.n	8001df4 <__aeabi_ddiv+0x1e4>
 8002134:	45b9      	cmp	r9, r7
 8002136:	d900      	bls.n	800213a <__aeabi_ddiv+0x52a>
 8002138:	e65c      	b.n	8001df4 <__aeabi_ddiv+0x1e4>
 800213a:	e656      	b.n	8001dea <__aeabi_ddiv+0x1da>
 800213c:	42a2      	cmp	r2, r4
 800213e:	d800      	bhi.n	8002142 <__aeabi_ddiv+0x532>
 8002140:	e61a      	b.n	8001d78 <__aeabi_ddiv+0x168>
 8002142:	1e83      	subs	r3, r0, #2
 8002144:	4464      	add	r4, ip
 8002146:	e617      	b.n	8001d78 <__aeabi_ddiv+0x168>
 8002148:	428a      	cmp	r2, r1
 800214a:	d800      	bhi.n	800214e <__aeabi_ddiv+0x53e>
 800214c:	e600      	b.n	8001d50 <__aeabi_ddiv+0x140>
 800214e:	46ac      	mov	ip, r5
 8002150:	1e83      	subs	r3, r0, #2
 8002152:	4698      	mov	r8, r3
 8002154:	4461      	add	r1, ip
 8002156:	e5fb      	b.n	8001d50 <__aeabi_ddiv+0x140>
 8002158:	4837      	ldr	r0, [pc, #220]	@ (8002238 <__aeabi_ddiv+0x628>)
 800215a:	0014      	movs	r4, r2
 800215c:	4450      	add	r0, sl
 800215e:	4082      	lsls	r2, r0
 8002160:	465b      	mov	r3, fp
 8002162:	0017      	movs	r7, r2
 8002164:	4083      	lsls	r3, r0
 8002166:	40cc      	lsrs	r4, r1
 8002168:	1e7a      	subs	r2, r7, #1
 800216a:	4197      	sbcs	r7, r2
 800216c:	4323      	orrs	r3, r4
 800216e:	433b      	orrs	r3, r7
 8002170:	001a      	movs	r2, r3
 8002172:	465b      	mov	r3, fp
 8002174:	40cb      	lsrs	r3, r1
 8002176:	0751      	lsls	r1, r2, #29
 8002178:	d009      	beq.n	800218e <__aeabi_ddiv+0x57e>
 800217a:	210f      	movs	r1, #15
 800217c:	4011      	ands	r1, r2
 800217e:	2904      	cmp	r1, #4
 8002180:	d005      	beq.n	800218e <__aeabi_ddiv+0x57e>
 8002182:	1d11      	adds	r1, r2, #4
 8002184:	4291      	cmp	r1, r2
 8002186:	4192      	sbcs	r2, r2
 8002188:	4252      	negs	r2, r2
 800218a:	189b      	adds	r3, r3, r2
 800218c:	000a      	movs	r2, r1
 800218e:	0219      	lsls	r1, r3, #8
 8002190:	d400      	bmi.n	8002194 <__aeabi_ddiv+0x584>
 8002192:	e755      	b.n	8002040 <__aeabi_ddiv+0x430>
 8002194:	2200      	movs	r2, #0
 8002196:	2301      	movs	r3, #1
 8002198:	2400      	movs	r4, #0
 800219a:	4690      	mov	r8, r2
 800219c:	e598      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 800219e:	000a      	movs	r2, r1
 80021a0:	42bc      	cmp	r4, r7
 80021a2:	d000      	beq.n	80021a6 <__aeabi_ddiv+0x596>
 80021a4:	e66e      	b.n	8001e84 <__aeabi_ddiv+0x274>
 80021a6:	454b      	cmp	r3, r9
 80021a8:	d000      	beq.n	80021ac <__aeabi_ddiv+0x59c>
 80021aa:	e66b      	b.n	8001e84 <__aeabi_ddiv+0x274>
 80021ac:	e66c      	b.n	8001e88 <__aeabi_ddiv+0x278>
 80021ae:	4b23      	ldr	r3, [pc, #140]	@ (800223c <__aeabi_ddiv+0x62c>)
 80021b0:	4a23      	ldr	r2, [pc, #140]	@ (8002240 <__aeabi_ddiv+0x630>)
 80021b2:	4453      	add	r3, sl
 80021b4:	4592      	cmp	sl, r2
 80021b6:	da00      	bge.n	80021ba <__aeabi_ddiv+0x5aa>
 80021b8:	e718      	b.n	8001fec <__aeabi_ddiv+0x3dc>
 80021ba:	2101      	movs	r1, #1
 80021bc:	4249      	negs	r1, r1
 80021be:	1d0a      	adds	r2, r1, #4
 80021c0:	428a      	cmp	r2, r1
 80021c2:	4189      	sbcs	r1, r1
 80021c4:	4249      	negs	r1, r1
 80021c6:	448b      	add	fp, r1
 80021c8:	e666      	b.n	8001e98 <__aeabi_ddiv+0x288>
 80021ca:	210f      	movs	r1, #15
 80021cc:	4011      	ands	r1, r2
 80021ce:	2904      	cmp	r1, #4
 80021d0:	d100      	bne.n	80021d4 <__aeabi_ddiv+0x5c4>
 80021d2:	e661      	b.n	8001e98 <__aeabi_ddiv+0x288>
 80021d4:	0011      	movs	r1, r2
 80021d6:	e7f2      	b.n	80021be <__aeabi_ddiv+0x5ae>
 80021d8:	42bc      	cmp	r4, r7
 80021da:	d800      	bhi.n	80021de <__aeabi_ddiv+0x5ce>
 80021dc:	e60a      	b.n	8001df4 <__aeabi_ddiv+0x1e4>
 80021de:	2302      	movs	r3, #2
 80021e0:	425b      	negs	r3, r3
 80021e2:	469c      	mov	ip, r3
 80021e4:	9900      	ldr	r1, [sp, #0]
 80021e6:	444f      	add	r7, r9
 80021e8:	454f      	cmp	r7, r9
 80021ea:	419b      	sbcs	r3, r3
 80021ec:	44e3      	add	fp, ip
 80021ee:	468c      	mov	ip, r1
 80021f0:	425b      	negs	r3, r3
 80021f2:	4463      	add	r3, ip
 80021f4:	18c0      	adds	r0, r0, r3
 80021f6:	e5ff      	b.n	8001df8 <__aeabi_ddiv+0x1e8>
 80021f8:	4649      	mov	r1, r9
 80021fa:	9d00      	ldr	r5, [sp, #0]
 80021fc:	0048      	lsls	r0, r1, #1
 80021fe:	4548      	cmp	r0, r9
 8002200:	4189      	sbcs	r1, r1
 8002202:	46ac      	mov	ip, r5
 8002204:	4249      	negs	r1, r1
 8002206:	4461      	add	r1, ip
 8002208:	4681      	mov	r9, r0
 800220a:	3a02      	subs	r2, #2
 800220c:	1864      	adds	r4, r4, r1
 800220e:	e7c7      	b.n	80021a0 <__aeabi_ddiv+0x590>
 8002210:	2480      	movs	r4, #128	@ 0x80
 8002212:	465b      	mov	r3, fp
 8002214:	0324      	lsls	r4, r4, #12
 8002216:	431c      	orrs	r4, r3
 8002218:	0324      	lsls	r4, r4, #12
 800221a:	4690      	mov	r8, r2
 800221c:	4b04      	ldr	r3, [pc, #16]	@ (8002230 <__aeabi_ddiv+0x620>)
 800221e:	0b24      	lsrs	r4, r4, #12
 8002220:	e556      	b.n	8001cd0 <__aeabi_ddiv+0xc0>
 8002222:	4599      	cmp	r9, r3
 8002224:	d3e8      	bcc.n	80021f8 <__aeabi_ddiv+0x5e8>
 8002226:	000a      	movs	r2, r1
 8002228:	e7bd      	b.n	80021a6 <__aeabi_ddiv+0x596>
 800222a:	2300      	movs	r3, #0
 800222c:	e708      	b.n	8002040 <__aeabi_ddiv+0x430>
 800222e:	46c0      	nop			@ (mov r8, r8)
 8002230:	000007ff 	.word	0x000007ff
 8002234:	0000043e 	.word	0x0000043e
 8002238:	0000041e 	.word	0x0000041e
 800223c:	000003ff 	.word	0x000003ff
 8002240:	fffffc02 	.word	0xfffffc02

08002244 <__eqdf2>:
 8002244:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002246:	4657      	mov	r7, sl
 8002248:	46de      	mov	lr, fp
 800224a:	464e      	mov	r6, r9
 800224c:	4645      	mov	r5, r8
 800224e:	b5e0      	push	{r5, r6, r7, lr}
 8002250:	000d      	movs	r5, r1
 8002252:	0004      	movs	r4, r0
 8002254:	0fe8      	lsrs	r0, r5, #31
 8002256:	4683      	mov	fp, r0
 8002258:	0309      	lsls	r1, r1, #12
 800225a:	0fd8      	lsrs	r0, r3, #31
 800225c:	0b09      	lsrs	r1, r1, #12
 800225e:	4682      	mov	sl, r0
 8002260:	4819      	ldr	r0, [pc, #100]	@ (80022c8 <__eqdf2+0x84>)
 8002262:	468c      	mov	ip, r1
 8002264:	031f      	lsls	r7, r3, #12
 8002266:	0069      	lsls	r1, r5, #1
 8002268:	005e      	lsls	r6, r3, #1
 800226a:	0d49      	lsrs	r1, r1, #21
 800226c:	0b3f      	lsrs	r7, r7, #12
 800226e:	0d76      	lsrs	r6, r6, #21
 8002270:	4281      	cmp	r1, r0
 8002272:	d018      	beq.n	80022a6 <__eqdf2+0x62>
 8002274:	4286      	cmp	r6, r0
 8002276:	d00f      	beq.n	8002298 <__eqdf2+0x54>
 8002278:	2001      	movs	r0, #1
 800227a:	42b1      	cmp	r1, r6
 800227c:	d10d      	bne.n	800229a <__eqdf2+0x56>
 800227e:	45bc      	cmp	ip, r7
 8002280:	d10b      	bne.n	800229a <__eqdf2+0x56>
 8002282:	4294      	cmp	r4, r2
 8002284:	d109      	bne.n	800229a <__eqdf2+0x56>
 8002286:	45d3      	cmp	fp, sl
 8002288:	d01c      	beq.n	80022c4 <__eqdf2+0x80>
 800228a:	2900      	cmp	r1, #0
 800228c:	d105      	bne.n	800229a <__eqdf2+0x56>
 800228e:	4660      	mov	r0, ip
 8002290:	4320      	orrs	r0, r4
 8002292:	1e43      	subs	r3, r0, #1
 8002294:	4198      	sbcs	r0, r3
 8002296:	e000      	b.n	800229a <__eqdf2+0x56>
 8002298:	2001      	movs	r0, #1
 800229a:	bcf0      	pop	{r4, r5, r6, r7}
 800229c:	46bb      	mov	fp, r7
 800229e:	46b2      	mov	sl, r6
 80022a0:	46a9      	mov	r9, r5
 80022a2:	46a0      	mov	r8, r4
 80022a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022a6:	2001      	movs	r0, #1
 80022a8:	428e      	cmp	r6, r1
 80022aa:	d1f6      	bne.n	800229a <__eqdf2+0x56>
 80022ac:	4661      	mov	r1, ip
 80022ae:	4339      	orrs	r1, r7
 80022b0:	000f      	movs	r7, r1
 80022b2:	4317      	orrs	r7, r2
 80022b4:	4327      	orrs	r7, r4
 80022b6:	d1f0      	bne.n	800229a <__eqdf2+0x56>
 80022b8:	465b      	mov	r3, fp
 80022ba:	4652      	mov	r2, sl
 80022bc:	1a98      	subs	r0, r3, r2
 80022be:	1e43      	subs	r3, r0, #1
 80022c0:	4198      	sbcs	r0, r3
 80022c2:	e7ea      	b.n	800229a <__eqdf2+0x56>
 80022c4:	2000      	movs	r0, #0
 80022c6:	e7e8      	b.n	800229a <__eqdf2+0x56>
 80022c8:	000007ff 	.word	0x000007ff

080022cc <__gedf2>:
 80022cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022ce:	4657      	mov	r7, sl
 80022d0:	464e      	mov	r6, r9
 80022d2:	4645      	mov	r5, r8
 80022d4:	46de      	mov	lr, fp
 80022d6:	b5e0      	push	{r5, r6, r7, lr}
 80022d8:	000d      	movs	r5, r1
 80022da:	030f      	lsls	r7, r1, #12
 80022dc:	0b39      	lsrs	r1, r7, #12
 80022de:	b083      	sub	sp, #12
 80022e0:	0004      	movs	r4, r0
 80022e2:	4680      	mov	r8, r0
 80022e4:	9101      	str	r1, [sp, #4]
 80022e6:	0058      	lsls	r0, r3, #1
 80022e8:	0fe9      	lsrs	r1, r5, #31
 80022ea:	4f31      	ldr	r7, [pc, #196]	@ (80023b0 <__gedf2+0xe4>)
 80022ec:	0d40      	lsrs	r0, r0, #21
 80022ee:	468c      	mov	ip, r1
 80022f0:	006e      	lsls	r6, r5, #1
 80022f2:	0319      	lsls	r1, r3, #12
 80022f4:	4682      	mov	sl, r0
 80022f6:	4691      	mov	r9, r2
 80022f8:	0d76      	lsrs	r6, r6, #21
 80022fa:	0b09      	lsrs	r1, r1, #12
 80022fc:	0fd8      	lsrs	r0, r3, #31
 80022fe:	42be      	cmp	r6, r7
 8002300:	d01f      	beq.n	8002342 <__gedf2+0x76>
 8002302:	45ba      	cmp	sl, r7
 8002304:	d00f      	beq.n	8002326 <__gedf2+0x5a>
 8002306:	2e00      	cmp	r6, #0
 8002308:	d12f      	bne.n	800236a <__gedf2+0x9e>
 800230a:	4655      	mov	r5, sl
 800230c:	9e01      	ldr	r6, [sp, #4]
 800230e:	4334      	orrs	r4, r6
 8002310:	2d00      	cmp	r5, #0
 8002312:	d127      	bne.n	8002364 <__gedf2+0x98>
 8002314:	430a      	orrs	r2, r1
 8002316:	d03a      	beq.n	800238e <__gedf2+0xc2>
 8002318:	2c00      	cmp	r4, #0
 800231a:	d145      	bne.n	80023a8 <__gedf2+0xdc>
 800231c:	2800      	cmp	r0, #0
 800231e:	d11a      	bne.n	8002356 <__gedf2+0x8a>
 8002320:	2001      	movs	r0, #1
 8002322:	4240      	negs	r0, r0
 8002324:	e017      	b.n	8002356 <__gedf2+0x8a>
 8002326:	4311      	orrs	r1, r2
 8002328:	d13b      	bne.n	80023a2 <__gedf2+0xd6>
 800232a:	2e00      	cmp	r6, #0
 800232c:	d102      	bne.n	8002334 <__gedf2+0x68>
 800232e:	9f01      	ldr	r7, [sp, #4]
 8002330:	4327      	orrs	r7, r4
 8002332:	d0f3      	beq.n	800231c <__gedf2+0x50>
 8002334:	4584      	cmp	ip, r0
 8002336:	d109      	bne.n	800234c <__gedf2+0x80>
 8002338:	4663      	mov	r3, ip
 800233a:	2b00      	cmp	r3, #0
 800233c:	d0f0      	beq.n	8002320 <__gedf2+0x54>
 800233e:	4660      	mov	r0, ip
 8002340:	e009      	b.n	8002356 <__gedf2+0x8a>
 8002342:	9f01      	ldr	r7, [sp, #4]
 8002344:	4327      	orrs	r7, r4
 8002346:	d12c      	bne.n	80023a2 <__gedf2+0xd6>
 8002348:	45b2      	cmp	sl, r6
 800234a:	d024      	beq.n	8002396 <__gedf2+0xca>
 800234c:	4663      	mov	r3, ip
 800234e:	2002      	movs	r0, #2
 8002350:	3b01      	subs	r3, #1
 8002352:	4018      	ands	r0, r3
 8002354:	3801      	subs	r0, #1
 8002356:	b003      	add	sp, #12
 8002358:	bcf0      	pop	{r4, r5, r6, r7}
 800235a:	46bb      	mov	fp, r7
 800235c:	46b2      	mov	sl, r6
 800235e:	46a9      	mov	r9, r5
 8002360:	46a0      	mov	r8, r4
 8002362:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002364:	2c00      	cmp	r4, #0
 8002366:	d0d9      	beq.n	800231c <__gedf2+0x50>
 8002368:	e7e4      	b.n	8002334 <__gedf2+0x68>
 800236a:	4654      	mov	r4, sl
 800236c:	2c00      	cmp	r4, #0
 800236e:	d0ed      	beq.n	800234c <__gedf2+0x80>
 8002370:	4584      	cmp	ip, r0
 8002372:	d1eb      	bne.n	800234c <__gedf2+0x80>
 8002374:	4556      	cmp	r6, sl
 8002376:	dce9      	bgt.n	800234c <__gedf2+0x80>
 8002378:	dbde      	blt.n	8002338 <__gedf2+0x6c>
 800237a:	9b01      	ldr	r3, [sp, #4]
 800237c:	428b      	cmp	r3, r1
 800237e:	d8e5      	bhi.n	800234c <__gedf2+0x80>
 8002380:	d1da      	bne.n	8002338 <__gedf2+0x6c>
 8002382:	45c8      	cmp	r8, r9
 8002384:	d8e2      	bhi.n	800234c <__gedf2+0x80>
 8002386:	2000      	movs	r0, #0
 8002388:	45c8      	cmp	r8, r9
 800238a:	d2e4      	bcs.n	8002356 <__gedf2+0x8a>
 800238c:	e7d4      	b.n	8002338 <__gedf2+0x6c>
 800238e:	2000      	movs	r0, #0
 8002390:	2c00      	cmp	r4, #0
 8002392:	d0e0      	beq.n	8002356 <__gedf2+0x8a>
 8002394:	e7da      	b.n	800234c <__gedf2+0x80>
 8002396:	4311      	orrs	r1, r2
 8002398:	d103      	bne.n	80023a2 <__gedf2+0xd6>
 800239a:	4584      	cmp	ip, r0
 800239c:	d1d6      	bne.n	800234c <__gedf2+0x80>
 800239e:	2000      	movs	r0, #0
 80023a0:	e7d9      	b.n	8002356 <__gedf2+0x8a>
 80023a2:	2002      	movs	r0, #2
 80023a4:	4240      	negs	r0, r0
 80023a6:	e7d6      	b.n	8002356 <__gedf2+0x8a>
 80023a8:	4584      	cmp	ip, r0
 80023aa:	d0e6      	beq.n	800237a <__gedf2+0xae>
 80023ac:	e7ce      	b.n	800234c <__gedf2+0x80>
 80023ae:	46c0      	nop			@ (mov r8, r8)
 80023b0:	000007ff 	.word	0x000007ff

080023b4 <__ledf2>:
 80023b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023b6:	4657      	mov	r7, sl
 80023b8:	464e      	mov	r6, r9
 80023ba:	4645      	mov	r5, r8
 80023bc:	46de      	mov	lr, fp
 80023be:	b5e0      	push	{r5, r6, r7, lr}
 80023c0:	000d      	movs	r5, r1
 80023c2:	030f      	lsls	r7, r1, #12
 80023c4:	0004      	movs	r4, r0
 80023c6:	4680      	mov	r8, r0
 80023c8:	0fe8      	lsrs	r0, r5, #31
 80023ca:	0b39      	lsrs	r1, r7, #12
 80023cc:	4684      	mov	ip, r0
 80023ce:	b083      	sub	sp, #12
 80023d0:	0058      	lsls	r0, r3, #1
 80023d2:	4f30      	ldr	r7, [pc, #192]	@ (8002494 <__ledf2+0xe0>)
 80023d4:	0d40      	lsrs	r0, r0, #21
 80023d6:	9101      	str	r1, [sp, #4]
 80023d8:	031e      	lsls	r6, r3, #12
 80023da:	0069      	lsls	r1, r5, #1
 80023dc:	4682      	mov	sl, r0
 80023de:	4691      	mov	r9, r2
 80023e0:	0d49      	lsrs	r1, r1, #21
 80023e2:	0b36      	lsrs	r6, r6, #12
 80023e4:	0fd8      	lsrs	r0, r3, #31
 80023e6:	42b9      	cmp	r1, r7
 80023e8:	d020      	beq.n	800242c <__ledf2+0x78>
 80023ea:	45ba      	cmp	sl, r7
 80023ec:	d00f      	beq.n	800240e <__ledf2+0x5a>
 80023ee:	2900      	cmp	r1, #0
 80023f0:	d12b      	bne.n	800244a <__ledf2+0x96>
 80023f2:	9901      	ldr	r1, [sp, #4]
 80023f4:	430c      	orrs	r4, r1
 80023f6:	4651      	mov	r1, sl
 80023f8:	2900      	cmp	r1, #0
 80023fa:	d137      	bne.n	800246c <__ledf2+0xb8>
 80023fc:	4332      	orrs	r2, r6
 80023fe:	d038      	beq.n	8002472 <__ledf2+0xbe>
 8002400:	2c00      	cmp	r4, #0
 8002402:	d144      	bne.n	800248e <__ledf2+0xda>
 8002404:	2800      	cmp	r0, #0
 8002406:	d119      	bne.n	800243c <__ledf2+0x88>
 8002408:	2001      	movs	r0, #1
 800240a:	4240      	negs	r0, r0
 800240c:	e016      	b.n	800243c <__ledf2+0x88>
 800240e:	4316      	orrs	r6, r2
 8002410:	d113      	bne.n	800243a <__ledf2+0x86>
 8002412:	2900      	cmp	r1, #0
 8002414:	d102      	bne.n	800241c <__ledf2+0x68>
 8002416:	9f01      	ldr	r7, [sp, #4]
 8002418:	4327      	orrs	r7, r4
 800241a:	d0f3      	beq.n	8002404 <__ledf2+0x50>
 800241c:	4584      	cmp	ip, r0
 800241e:	d020      	beq.n	8002462 <__ledf2+0xae>
 8002420:	4663      	mov	r3, ip
 8002422:	2002      	movs	r0, #2
 8002424:	3b01      	subs	r3, #1
 8002426:	4018      	ands	r0, r3
 8002428:	3801      	subs	r0, #1
 800242a:	e007      	b.n	800243c <__ledf2+0x88>
 800242c:	9f01      	ldr	r7, [sp, #4]
 800242e:	4327      	orrs	r7, r4
 8002430:	d103      	bne.n	800243a <__ledf2+0x86>
 8002432:	458a      	cmp	sl, r1
 8002434:	d1f4      	bne.n	8002420 <__ledf2+0x6c>
 8002436:	4316      	orrs	r6, r2
 8002438:	d01f      	beq.n	800247a <__ledf2+0xc6>
 800243a:	2002      	movs	r0, #2
 800243c:	b003      	add	sp, #12
 800243e:	bcf0      	pop	{r4, r5, r6, r7}
 8002440:	46bb      	mov	fp, r7
 8002442:	46b2      	mov	sl, r6
 8002444:	46a9      	mov	r9, r5
 8002446:	46a0      	mov	r8, r4
 8002448:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800244a:	4654      	mov	r4, sl
 800244c:	2c00      	cmp	r4, #0
 800244e:	d0e7      	beq.n	8002420 <__ledf2+0x6c>
 8002450:	4584      	cmp	ip, r0
 8002452:	d1e5      	bne.n	8002420 <__ledf2+0x6c>
 8002454:	4551      	cmp	r1, sl
 8002456:	dce3      	bgt.n	8002420 <__ledf2+0x6c>
 8002458:	db03      	blt.n	8002462 <__ledf2+0xae>
 800245a:	9b01      	ldr	r3, [sp, #4]
 800245c:	42b3      	cmp	r3, r6
 800245e:	d8df      	bhi.n	8002420 <__ledf2+0x6c>
 8002460:	d00f      	beq.n	8002482 <__ledf2+0xce>
 8002462:	4663      	mov	r3, ip
 8002464:	2b00      	cmp	r3, #0
 8002466:	d0cf      	beq.n	8002408 <__ledf2+0x54>
 8002468:	4660      	mov	r0, ip
 800246a:	e7e7      	b.n	800243c <__ledf2+0x88>
 800246c:	2c00      	cmp	r4, #0
 800246e:	d0c9      	beq.n	8002404 <__ledf2+0x50>
 8002470:	e7d4      	b.n	800241c <__ledf2+0x68>
 8002472:	2000      	movs	r0, #0
 8002474:	2c00      	cmp	r4, #0
 8002476:	d0e1      	beq.n	800243c <__ledf2+0x88>
 8002478:	e7d2      	b.n	8002420 <__ledf2+0x6c>
 800247a:	4584      	cmp	ip, r0
 800247c:	d1d0      	bne.n	8002420 <__ledf2+0x6c>
 800247e:	2000      	movs	r0, #0
 8002480:	e7dc      	b.n	800243c <__ledf2+0x88>
 8002482:	45c8      	cmp	r8, r9
 8002484:	d8cc      	bhi.n	8002420 <__ledf2+0x6c>
 8002486:	2000      	movs	r0, #0
 8002488:	45c8      	cmp	r8, r9
 800248a:	d2d7      	bcs.n	800243c <__ledf2+0x88>
 800248c:	e7e9      	b.n	8002462 <__ledf2+0xae>
 800248e:	4584      	cmp	ip, r0
 8002490:	d0e3      	beq.n	800245a <__ledf2+0xa6>
 8002492:	e7c5      	b.n	8002420 <__ledf2+0x6c>
 8002494:	000007ff 	.word	0x000007ff

08002498 <__aeabi_dmul>:
 8002498:	b5f0      	push	{r4, r5, r6, r7, lr}
 800249a:	4657      	mov	r7, sl
 800249c:	46de      	mov	lr, fp
 800249e:	464e      	mov	r6, r9
 80024a0:	4645      	mov	r5, r8
 80024a2:	b5e0      	push	{r5, r6, r7, lr}
 80024a4:	001f      	movs	r7, r3
 80024a6:	030b      	lsls	r3, r1, #12
 80024a8:	0b1b      	lsrs	r3, r3, #12
 80024aa:	0016      	movs	r6, r2
 80024ac:	469a      	mov	sl, r3
 80024ae:	0fca      	lsrs	r2, r1, #31
 80024b0:	004b      	lsls	r3, r1, #1
 80024b2:	0004      	movs	r4, r0
 80024b4:	4693      	mov	fp, r2
 80024b6:	b087      	sub	sp, #28
 80024b8:	0d5b      	lsrs	r3, r3, #21
 80024ba:	d100      	bne.n	80024be <__aeabi_dmul+0x26>
 80024bc:	e0d5      	b.n	800266a <__aeabi_dmul+0x1d2>
 80024be:	4abb      	ldr	r2, [pc, #748]	@ (80027ac <__aeabi_dmul+0x314>)
 80024c0:	4293      	cmp	r3, r2
 80024c2:	d100      	bne.n	80024c6 <__aeabi_dmul+0x2e>
 80024c4:	e0f8      	b.n	80026b8 <__aeabi_dmul+0x220>
 80024c6:	4651      	mov	r1, sl
 80024c8:	0f42      	lsrs	r2, r0, #29
 80024ca:	00c9      	lsls	r1, r1, #3
 80024cc:	430a      	orrs	r2, r1
 80024ce:	2180      	movs	r1, #128	@ 0x80
 80024d0:	0409      	lsls	r1, r1, #16
 80024d2:	4311      	orrs	r1, r2
 80024d4:	00c2      	lsls	r2, r0, #3
 80024d6:	4691      	mov	r9, r2
 80024d8:	4ab5      	ldr	r2, [pc, #724]	@ (80027b0 <__aeabi_dmul+0x318>)
 80024da:	468a      	mov	sl, r1
 80024dc:	189d      	adds	r5, r3, r2
 80024de:	2300      	movs	r3, #0
 80024e0:	4698      	mov	r8, r3
 80024e2:	9302      	str	r3, [sp, #8]
 80024e4:	033c      	lsls	r4, r7, #12
 80024e6:	007b      	lsls	r3, r7, #1
 80024e8:	0ffa      	lsrs	r2, r7, #31
 80024ea:	0030      	movs	r0, r6
 80024ec:	0b24      	lsrs	r4, r4, #12
 80024ee:	0d5b      	lsrs	r3, r3, #21
 80024f0:	9200      	str	r2, [sp, #0]
 80024f2:	d100      	bne.n	80024f6 <__aeabi_dmul+0x5e>
 80024f4:	e096      	b.n	8002624 <__aeabi_dmul+0x18c>
 80024f6:	4aad      	ldr	r2, [pc, #692]	@ (80027ac <__aeabi_dmul+0x314>)
 80024f8:	4293      	cmp	r3, r2
 80024fa:	d031      	beq.n	8002560 <__aeabi_dmul+0xc8>
 80024fc:	0f72      	lsrs	r2, r6, #29
 80024fe:	00e4      	lsls	r4, r4, #3
 8002500:	4322      	orrs	r2, r4
 8002502:	2480      	movs	r4, #128	@ 0x80
 8002504:	0424      	lsls	r4, r4, #16
 8002506:	4314      	orrs	r4, r2
 8002508:	4aa9      	ldr	r2, [pc, #676]	@ (80027b0 <__aeabi_dmul+0x318>)
 800250a:	00f0      	lsls	r0, r6, #3
 800250c:	4694      	mov	ip, r2
 800250e:	4463      	add	r3, ip
 8002510:	195b      	adds	r3, r3, r5
 8002512:	1c5a      	adds	r2, r3, #1
 8002514:	9201      	str	r2, [sp, #4]
 8002516:	4642      	mov	r2, r8
 8002518:	2600      	movs	r6, #0
 800251a:	2a0a      	cmp	r2, #10
 800251c:	dc42      	bgt.n	80025a4 <__aeabi_dmul+0x10c>
 800251e:	465a      	mov	r2, fp
 8002520:	9900      	ldr	r1, [sp, #0]
 8002522:	404a      	eors	r2, r1
 8002524:	4693      	mov	fp, r2
 8002526:	4642      	mov	r2, r8
 8002528:	2a02      	cmp	r2, #2
 800252a:	dc32      	bgt.n	8002592 <__aeabi_dmul+0xfa>
 800252c:	3a01      	subs	r2, #1
 800252e:	2a01      	cmp	r2, #1
 8002530:	d900      	bls.n	8002534 <__aeabi_dmul+0x9c>
 8002532:	e149      	b.n	80027c8 <__aeabi_dmul+0x330>
 8002534:	2e02      	cmp	r6, #2
 8002536:	d100      	bne.n	800253a <__aeabi_dmul+0xa2>
 8002538:	e0ca      	b.n	80026d0 <__aeabi_dmul+0x238>
 800253a:	2e01      	cmp	r6, #1
 800253c:	d13d      	bne.n	80025ba <__aeabi_dmul+0x122>
 800253e:	2300      	movs	r3, #0
 8002540:	2400      	movs	r4, #0
 8002542:	2200      	movs	r2, #0
 8002544:	0010      	movs	r0, r2
 8002546:	465a      	mov	r2, fp
 8002548:	051b      	lsls	r3, r3, #20
 800254a:	4323      	orrs	r3, r4
 800254c:	07d2      	lsls	r2, r2, #31
 800254e:	4313      	orrs	r3, r2
 8002550:	0019      	movs	r1, r3
 8002552:	b007      	add	sp, #28
 8002554:	bcf0      	pop	{r4, r5, r6, r7}
 8002556:	46bb      	mov	fp, r7
 8002558:	46b2      	mov	sl, r6
 800255a:	46a9      	mov	r9, r5
 800255c:	46a0      	mov	r8, r4
 800255e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002560:	4b92      	ldr	r3, [pc, #584]	@ (80027ac <__aeabi_dmul+0x314>)
 8002562:	4326      	orrs	r6, r4
 8002564:	18eb      	adds	r3, r5, r3
 8002566:	2e00      	cmp	r6, #0
 8002568:	d100      	bne.n	800256c <__aeabi_dmul+0xd4>
 800256a:	e0bb      	b.n	80026e4 <__aeabi_dmul+0x24c>
 800256c:	2203      	movs	r2, #3
 800256e:	4641      	mov	r1, r8
 8002570:	4311      	orrs	r1, r2
 8002572:	465a      	mov	r2, fp
 8002574:	4688      	mov	r8, r1
 8002576:	9900      	ldr	r1, [sp, #0]
 8002578:	404a      	eors	r2, r1
 800257a:	2180      	movs	r1, #128	@ 0x80
 800257c:	0109      	lsls	r1, r1, #4
 800257e:	468c      	mov	ip, r1
 8002580:	0029      	movs	r1, r5
 8002582:	4461      	add	r1, ip
 8002584:	9101      	str	r1, [sp, #4]
 8002586:	4641      	mov	r1, r8
 8002588:	290a      	cmp	r1, #10
 800258a:	dd00      	ble.n	800258e <__aeabi_dmul+0xf6>
 800258c:	e233      	b.n	80029f6 <__aeabi_dmul+0x55e>
 800258e:	4693      	mov	fp, r2
 8002590:	2603      	movs	r6, #3
 8002592:	4642      	mov	r2, r8
 8002594:	2701      	movs	r7, #1
 8002596:	4097      	lsls	r7, r2
 8002598:	21a6      	movs	r1, #166	@ 0xa6
 800259a:	003a      	movs	r2, r7
 800259c:	00c9      	lsls	r1, r1, #3
 800259e:	400a      	ands	r2, r1
 80025a0:	420f      	tst	r7, r1
 80025a2:	d031      	beq.n	8002608 <__aeabi_dmul+0x170>
 80025a4:	9e02      	ldr	r6, [sp, #8]
 80025a6:	2e02      	cmp	r6, #2
 80025a8:	d100      	bne.n	80025ac <__aeabi_dmul+0x114>
 80025aa:	e235      	b.n	8002a18 <__aeabi_dmul+0x580>
 80025ac:	2e03      	cmp	r6, #3
 80025ae:	d100      	bne.n	80025b2 <__aeabi_dmul+0x11a>
 80025b0:	e1d2      	b.n	8002958 <__aeabi_dmul+0x4c0>
 80025b2:	4654      	mov	r4, sl
 80025b4:	4648      	mov	r0, r9
 80025b6:	2e01      	cmp	r6, #1
 80025b8:	d0c1      	beq.n	800253e <__aeabi_dmul+0xa6>
 80025ba:	9a01      	ldr	r2, [sp, #4]
 80025bc:	4b7d      	ldr	r3, [pc, #500]	@ (80027b4 <__aeabi_dmul+0x31c>)
 80025be:	4694      	mov	ip, r2
 80025c0:	4463      	add	r3, ip
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	dc00      	bgt.n	80025c8 <__aeabi_dmul+0x130>
 80025c6:	e0c0      	b.n	800274a <__aeabi_dmul+0x2b2>
 80025c8:	0742      	lsls	r2, r0, #29
 80025ca:	d009      	beq.n	80025e0 <__aeabi_dmul+0x148>
 80025cc:	220f      	movs	r2, #15
 80025ce:	4002      	ands	r2, r0
 80025d0:	2a04      	cmp	r2, #4
 80025d2:	d005      	beq.n	80025e0 <__aeabi_dmul+0x148>
 80025d4:	1d02      	adds	r2, r0, #4
 80025d6:	4282      	cmp	r2, r0
 80025d8:	4180      	sbcs	r0, r0
 80025da:	4240      	negs	r0, r0
 80025dc:	1824      	adds	r4, r4, r0
 80025de:	0010      	movs	r0, r2
 80025e0:	01e2      	lsls	r2, r4, #7
 80025e2:	d506      	bpl.n	80025f2 <__aeabi_dmul+0x15a>
 80025e4:	4b74      	ldr	r3, [pc, #464]	@ (80027b8 <__aeabi_dmul+0x320>)
 80025e6:	9a01      	ldr	r2, [sp, #4]
 80025e8:	401c      	ands	r4, r3
 80025ea:	2380      	movs	r3, #128	@ 0x80
 80025ec:	4694      	mov	ip, r2
 80025ee:	00db      	lsls	r3, r3, #3
 80025f0:	4463      	add	r3, ip
 80025f2:	4a72      	ldr	r2, [pc, #456]	@ (80027bc <__aeabi_dmul+0x324>)
 80025f4:	4293      	cmp	r3, r2
 80025f6:	dc6b      	bgt.n	80026d0 <__aeabi_dmul+0x238>
 80025f8:	0762      	lsls	r2, r4, #29
 80025fa:	08c0      	lsrs	r0, r0, #3
 80025fc:	0264      	lsls	r4, r4, #9
 80025fe:	055b      	lsls	r3, r3, #21
 8002600:	4302      	orrs	r2, r0
 8002602:	0b24      	lsrs	r4, r4, #12
 8002604:	0d5b      	lsrs	r3, r3, #21
 8002606:	e79d      	b.n	8002544 <__aeabi_dmul+0xac>
 8002608:	2190      	movs	r1, #144	@ 0x90
 800260a:	0089      	lsls	r1, r1, #2
 800260c:	420f      	tst	r7, r1
 800260e:	d163      	bne.n	80026d8 <__aeabi_dmul+0x240>
 8002610:	2288      	movs	r2, #136	@ 0x88
 8002612:	423a      	tst	r2, r7
 8002614:	d100      	bne.n	8002618 <__aeabi_dmul+0x180>
 8002616:	e0d7      	b.n	80027c8 <__aeabi_dmul+0x330>
 8002618:	9b00      	ldr	r3, [sp, #0]
 800261a:	46a2      	mov	sl, r4
 800261c:	469b      	mov	fp, r3
 800261e:	4681      	mov	r9, r0
 8002620:	9602      	str	r6, [sp, #8]
 8002622:	e7bf      	b.n	80025a4 <__aeabi_dmul+0x10c>
 8002624:	0023      	movs	r3, r4
 8002626:	4333      	orrs	r3, r6
 8002628:	d100      	bne.n	800262c <__aeabi_dmul+0x194>
 800262a:	e07f      	b.n	800272c <__aeabi_dmul+0x294>
 800262c:	2c00      	cmp	r4, #0
 800262e:	d100      	bne.n	8002632 <__aeabi_dmul+0x19a>
 8002630:	e1ad      	b.n	800298e <__aeabi_dmul+0x4f6>
 8002632:	0020      	movs	r0, r4
 8002634:	f000 feee 	bl	8003414 <__clzsi2>
 8002638:	0002      	movs	r2, r0
 800263a:	0003      	movs	r3, r0
 800263c:	3a0b      	subs	r2, #11
 800263e:	201d      	movs	r0, #29
 8002640:	0019      	movs	r1, r3
 8002642:	1a82      	subs	r2, r0, r2
 8002644:	0030      	movs	r0, r6
 8002646:	3908      	subs	r1, #8
 8002648:	40d0      	lsrs	r0, r2
 800264a:	408c      	lsls	r4, r1
 800264c:	4304      	orrs	r4, r0
 800264e:	0030      	movs	r0, r6
 8002650:	4088      	lsls	r0, r1
 8002652:	4a5b      	ldr	r2, [pc, #364]	@ (80027c0 <__aeabi_dmul+0x328>)
 8002654:	1aeb      	subs	r3, r5, r3
 8002656:	4694      	mov	ip, r2
 8002658:	4463      	add	r3, ip
 800265a:	1c5a      	adds	r2, r3, #1
 800265c:	9201      	str	r2, [sp, #4]
 800265e:	4642      	mov	r2, r8
 8002660:	2600      	movs	r6, #0
 8002662:	2a0a      	cmp	r2, #10
 8002664:	dc00      	bgt.n	8002668 <__aeabi_dmul+0x1d0>
 8002666:	e75a      	b.n	800251e <__aeabi_dmul+0x86>
 8002668:	e79c      	b.n	80025a4 <__aeabi_dmul+0x10c>
 800266a:	4653      	mov	r3, sl
 800266c:	4303      	orrs	r3, r0
 800266e:	4699      	mov	r9, r3
 8002670:	d054      	beq.n	800271c <__aeabi_dmul+0x284>
 8002672:	4653      	mov	r3, sl
 8002674:	2b00      	cmp	r3, #0
 8002676:	d100      	bne.n	800267a <__aeabi_dmul+0x1e2>
 8002678:	e177      	b.n	800296a <__aeabi_dmul+0x4d2>
 800267a:	4650      	mov	r0, sl
 800267c:	f000 feca 	bl	8003414 <__clzsi2>
 8002680:	230b      	movs	r3, #11
 8002682:	425b      	negs	r3, r3
 8002684:	469c      	mov	ip, r3
 8002686:	0002      	movs	r2, r0
 8002688:	4484      	add	ip, r0
 800268a:	0011      	movs	r1, r2
 800268c:	4650      	mov	r0, sl
 800268e:	3908      	subs	r1, #8
 8002690:	4088      	lsls	r0, r1
 8002692:	231d      	movs	r3, #29
 8002694:	4680      	mov	r8, r0
 8002696:	4660      	mov	r0, ip
 8002698:	1a1b      	subs	r3, r3, r0
 800269a:	0020      	movs	r0, r4
 800269c:	40d8      	lsrs	r0, r3
 800269e:	0003      	movs	r3, r0
 80026a0:	4640      	mov	r0, r8
 80026a2:	4303      	orrs	r3, r0
 80026a4:	469a      	mov	sl, r3
 80026a6:	0023      	movs	r3, r4
 80026a8:	408b      	lsls	r3, r1
 80026aa:	4699      	mov	r9, r3
 80026ac:	2300      	movs	r3, #0
 80026ae:	4d44      	ldr	r5, [pc, #272]	@ (80027c0 <__aeabi_dmul+0x328>)
 80026b0:	4698      	mov	r8, r3
 80026b2:	1aad      	subs	r5, r5, r2
 80026b4:	9302      	str	r3, [sp, #8]
 80026b6:	e715      	b.n	80024e4 <__aeabi_dmul+0x4c>
 80026b8:	4652      	mov	r2, sl
 80026ba:	4302      	orrs	r2, r0
 80026bc:	4691      	mov	r9, r2
 80026be:	d126      	bne.n	800270e <__aeabi_dmul+0x276>
 80026c0:	2200      	movs	r2, #0
 80026c2:	001d      	movs	r5, r3
 80026c4:	2302      	movs	r3, #2
 80026c6:	4692      	mov	sl, r2
 80026c8:	3208      	adds	r2, #8
 80026ca:	4690      	mov	r8, r2
 80026cc:	9302      	str	r3, [sp, #8]
 80026ce:	e709      	b.n	80024e4 <__aeabi_dmul+0x4c>
 80026d0:	2400      	movs	r4, #0
 80026d2:	2200      	movs	r2, #0
 80026d4:	4b35      	ldr	r3, [pc, #212]	@ (80027ac <__aeabi_dmul+0x314>)
 80026d6:	e735      	b.n	8002544 <__aeabi_dmul+0xac>
 80026d8:	2300      	movs	r3, #0
 80026da:	2480      	movs	r4, #128	@ 0x80
 80026dc:	469b      	mov	fp, r3
 80026de:	0324      	lsls	r4, r4, #12
 80026e0:	4b32      	ldr	r3, [pc, #200]	@ (80027ac <__aeabi_dmul+0x314>)
 80026e2:	e72f      	b.n	8002544 <__aeabi_dmul+0xac>
 80026e4:	2202      	movs	r2, #2
 80026e6:	4641      	mov	r1, r8
 80026e8:	4311      	orrs	r1, r2
 80026ea:	2280      	movs	r2, #128	@ 0x80
 80026ec:	0112      	lsls	r2, r2, #4
 80026ee:	4694      	mov	ip, r2
 80026f0:	002a      	movs	r2, r5
 80026f2:	4462      	add	r2, ip
 80026f4:	4688      	mov	r8, r1
 80026f6:	9201      	str	r2, [sp, #4]
 80026f8:	290a      	cmp	r1, #10
 80026fa:	dd00      	ble.n	80026fe <__aeabi_dmul+0x266>
 80026fc:	e752      	b.n	80025a4 <__aeabi_dmul+0x10c>
 80026fe:	465a      	mov	r2, fp
 8002700:	2000      	movs	r0, #0
 8002702:	9900      	ldr	r1, [sp, #0]
 8002704:	0004      	movs	r4, r0
 8002706:	404a      	eors	r2, r1
 8002708:	4693      	mov	fp, r2
 800270a:	2602      	movs	r6, #2
 800270c:	e70b      	b.n	8002526 <__aeabi_dmul+0x8e>
 800270e:	220c      	movs	r2, #12
 8002710:	001d      	movs	r5, r3
 8002712:	2303      	movs	r3, #3
 8002714:	4681      	mov	r9, r0
 8002716:	4690      	mov	r8, r2
 8002718:	9302      	str	r3, [sp, #8]
 800271a:	e6e3      	b.n	80024e4 <__aeabi_dmul+0x4c>
 800271c:	2300      	movs	r3, #0
 800271e:	469a      	mov	sl, r3
 8002720:	3304      	adds	r3, #4
 8002722:	4698      	mov	r8, r3
 8002724:	3b03      	subs	r3, #3
 8002726:	2500      	movs	r5, #0
 8002728:	9302      	str	r3, [sp, #8]
 800272a:	e6db      	b.n	80024e4 <__aeabi_dmul+0x4c>
 800272c:	4642      	mov	r2, r8
 800272e:	3301      	adds	r3, #1
 8002730:	431a      	orrs	r2, r3
 8002732:	002b      	movs	r3, r5
 8002734:	4690      	mov	r8, r2
 8002736:	1c5a      	adds	r2, r3, #1
 8002738:	9201      	str	r2, [sp, #4]
 800273a:	4642      	mov	r2, r8
 800273c:	2400      	movs	r4, #0
 800273e:	2000      	movs	r0, #0
 8002740:	2601      	movs	r6, #1
 8002742:	2a0a      	cmp	r2, #10
 8002744:	dc00      	bgt.n	8002748 <__aeabi_dmul+0x2b0>
 8002746:	e6ea      	b.n	800251e <__aeabi_dmul+0x86>
 8002748:	e72c      	b.n	80025a4 <__aeabi_dmul+0x10c>
 800274a:	2201      	movs	r2, #1
 800274c:	1ad2      	subs	r2, r2, r3
 800274e:	2a38      	cmp	r2, #56	@ 0x38
 8002750:	dd00      	ble.n	8002754 <__aeabi_dmul+0x2bc>
 8002752:	e6f4      	b.n	800253e <__aeabi_dmul+0xa6>
 8002754:	2a1f      	cmp	r2, #31
 8002756:	dc00      	bgt.n	800275a <__aeabi_dmul+0x2c2>
 8002758:	e12a      	b.n	80029b0 <__aeabi_dmul+0x518>
 800275a:	211f      	movs	r1, #31
 800275c:	4249      	negs	r1, r1
 800275e:	1acb      	subs	r3, r1, r3
 8002760:	0021      	movs	r1, r4
 8002762:	40d9      	lsrs	r1, r3
 8002764:	000b      	movs	r3, r1
 8002766:	2a20      	cmp	r2, #32
 8002768:	d005      	beq.n	8002776 <__aeabi_dmul+0x2de>
 800276a:	4a16      	ldr	r2, [pc, #88]	@ (80027c4 <__aeabi_dmul+0x32c>)
 800276c:	9d01      	ldr	r5, [sp, #4]
 800276e:	4694      	mov	ip, r2
 8002770:	4465      	add	r5, ip
 8002772:	40ac      	lsls	r4, r5
 8002774:	4320      	orrs	r0, r4
 8002776:	1e42      	subs	r2, r0, #1
 8002778:	4190      	sbcs	r0, r2
 800277a:	4318      	orrs	r0, r3
 800277c:	2307      	movs	r3, #7
 800277e:	0019      	movs	r1, r3
 8002780:	2400      	movs	r4, #0
 8002782:	4001      	ands	r1, r0
 8002784:	4203      	tst	r3, r0
 8002786:	d00c      	beq.n	80027a2 <__aeabi_dmul+0x30a>
 8002788:	230f      	movs	r3, #15
 800278a:	4003      	ands	r3, r0
 800278c:	2b04      	cmp	r3, #4
 800278e:	d100      	bne.n	8002792 <__aeabi_dmul+0x2fa>
 8002790:	e140      	b.n	8002a14 <__aeabi_dmul+0x57c>
 8002792:	1d03      	adds	r3, r0, #4
 8002794:	4283      	cmp	r3, r0
 8002796:	41a4      	sbcs	r4, r4
 8002798:	0018      	movs	r0, r3
 800279a:	4264      	negs	r4, r4
 800279c:	0761      	lsls	r1, r4, #29
 800279e:	0264      	lsls	r4, r4, #9
 80027a0:	0b24      	lsrs	r4, r4, #12
 80027a2:	08c2      	lsrs	r2, r0, #3
 80027a4:	2300      	movs	r3, #0
 80027a6:	430a      	orrs	r2, r1
 80027a8:	e6cc      	b.n	8002544 <__aeabi_dmul+0xac>
 80027aa:	46c0      	nop			@ (mov r8, r8)
 80027ac:	000007ff 	.word	0x000007ff
 80027b0:	fffffc01 	.word	0xfffffc01
 80027b4:	000003ff 	.word	0x000003ff
 80027b8:	feffffff 	.word	0xfeffffff
 80027bc:	000007fe 	.word	0x000007fe
 80027c0:	fffffc0d 	.word	0xfffffc0d
 80027c4:	0000043e 	.word	0x0000043e
 80027c8:	4649      	mov	r1, r9
 80027ca:	464a      	mov	r2, r9
 80027cc:	0409      	lsls	r1, r1, #16
 80027ce:	0c09      	lsrs	r1, r1, #16
 80027d0:	000d      	movs	r5, r1
 80027d2:	0c16      	lsrs	r6, r2, #16
 80027d4:	0c02      	lsrs	r2, r0, #16
 80027d6:	0400      	lsls	r0, r0, #16
 80027d8:	0c00      	lsrs	r0, r0, #16
 80027da:	4345      	muls	r5, r0
 80027dc:	46ac      	mov	ip, r5
 80027de:	0005      	movs	r5, r0
 80027e0:	4375      	muls	r5, r6
 80027e2:	46a8      	mov	r8, r5
 80027e4:	0015      	movs	r5, r2
 80027e6:	000f      	movs	r7, r1
 80027e8:	4375      	muls	r5, r6
 80027ea:	9200      	str	r2, [sp, #0]
 80027ec:	9502      	str	r5, [sp, #8]
 80027ee:	002a      	movs	r2, r5
 80027f0:	9d00      	ldr	r5, [sp, #0]
 80027f2:	436f      	muls	r7, r5
 80027f4:	4665      	mov	r5, ip
 80027f6:	0c2d      	lsrs	r5, r5, #16
 80027f8:	46a9      	mov	r9, r5
 80027fa:	4447      	add	r7, r8
 80027fc:	444f      	add	r7, r9
 80027fe:	45b8      	cmp	r8, r7
 8002800:	d905      	bls.n	800280e <__aeabi_dmul+0x376>
 8002802:	0015      	movs	r5, r2
 8002804:	2280      	movs	r2, #128	@ 0x80
 8002806:	0252      	lsls	r2, r2, #9
 8002808:	4690      	mov	r8, r2
 800280a:	4445      	add	r5, r8
 800280c:	9502      	str	r5, [sp, #8]
 800280e:	0c3d      	lsrs	r5, r7, #16
 8002810:	9503      	str	r5, [sp, #12]
 8002812:	4665      	mov	r5, ip
 8002814:	042d      	lsls	r5, r5, #16
 8002816:	043f      	lsls	r7, r7, #16
 8002818:	0c2d      	lsrs	r5, r5, #16
 800281a:	46ac      	mov	ip, r5
 800281c:	003d      	movs	r5, r7
 800281e:	4465      	add	r5, ip
 8002820:	9504      	str	r5, [sp, #16]
 8002822:	0c25      	lsrs	r5, r4, #16
 8002824:	0424      	lsls	r4, r4, #16
 8002826:	0c24      	lsrs	r4, r4, #16
 8002828:	46ac      	mov	ip, r5
 800282a:	0025      	movs	r5, r4
 800282c:	4375      	muls	r5, r6
 800282e:	46a8      	mov	r8, r5
 8002830:	4665      	mov	r5, ip
 8002832:	000f      	movs	r7, r1
 8002834:	4369      	muls	r1, r5
 8002836:	4441      	add	r1, r8
 8002838:	4689      	mov	r9, r1
 800283a:	4367      	muls	r7, r4
 800283c:	0c39      	lsrs	r1, r7, #16
 800283e:	4449      	add	r1, r9
 8002840:	436e      	muls	r6, r5
 8002842:	4588      	cmp	r8, r1
 8002844:	d903      	bls.n	800284e <__aeabi_dmul+0x3b6>
 8002846:	2280      	movs	r2, #128	@ 0x80
 8002848:	0252      	lsls	r2, r2, #9
 800284a:	4690      	mov	r8, r2
 800284c:	4446      	add	r6, r8
 800284e:	0c0d      	lsrs	r5, r1, #16
 8002850:	46a8      	mov	r8, r5
 8002852:	0035      	movs	r5, r6
 8002854:	4445      	add	r5, r8
 8002856:	9505      	str	r5, [sp, #20]
 8002858:	9d03      	ldr	r5, [sp, #12]
 800285a:	043f      	lsls	r7, r7, #16
 800285c:	46a8      	mov	r8, r5
 800285e:	0c3f      	lsrs	r7, r7, #16
 8002860:	0409      	lsls	r1, r1, #16
 8002862:	19c9      	adds	r1, r1, r7
 8002864:	4488      	add	r8, r1
 8002866:	4645      	mov	r5, r8
 8002868:	9503      	str	r5, [sp, #12]
 800286a:	4655      	mov	r5, sl
 800286c:	042e      	lsls	r6, r5, #16
 800286e:	0c36      	lsrs	r6, r6, #16
 8002870:	0c2f      	lsrs	r7, r5, #16
 8002872:	0035      	movs	r5, r6
 8002874:	4345      	muls	r5, r0
 8002876:	4378      	muls	r0, r7
 8002878:	4681      	mov	r9, r0
 800287a:	0038      	movs	r0, r7
 800287c:	46a8      	mov	r8, r5
 800287e:	0c2d      	lsrs	r5, r5, #16
 8002880:	46aa      	mov	sl, r5
 8002882:	9a00      	ldr	r2, [sp, #0]
 8002884:	4350      	muls	r0, r2
 8002886:	4372      	muls	r2, r6
 8002888:	444a      	add	r2, r9
 800288a:	4452      	add	r2, sl
 800288c:	4591      	cmp	r9, r2
 800288e:	d903      	bls.n	8002898 <__aeabi_dmul+0x400>
 8002890:	2580      	movs	r5, #128	@ 0x80
 8002892:	026d      	lsls	r5, r5, #9
 8002894:	46a9      	mov	r9, r5
 8002896:	4448      	add	r0, r9
 8002898:	0c15      	lsrs	r5, r2, #16
 800289a:	46a9      	mov	r9, r5
 800289c:	4645      	mov	r5, r8
 800289e:	042d      	lsls	r5, r5, #16
 80028a0:	0c2d      	lsrs	r5, r5, #16
 80028a2:	46a8      	mov	r8, r5
 80028a4:	4665      	mov	r5, ip
 80028a6:	437d      	muls	r5, r7
 80028a8:	0412      	lsls	r2, r2, #16
 80028aa:	4448      	add	r0, r9
 80028ac:	4490      	add	r8, r2
 80028ae:	46a9      	mov	r9, r5
 80028b0:	0032      	movs	r2, r6
 80028b2:	4665      	mov	r5, ip
 80028b4:	4362      	muls	r2, r4
 80028b6:	436e      	muls	r6, r5
 80028b8:	437c      	muls	r4, r7
 80028ba:	0c17      	lsrs	r7, r2, #16
 80028bc:	1936      	adds	r6, r6, r4
 80028be:	19bf      	adds	r7, r7, r6
 80028c0:	42bc      	cmp	r4, r7
 80028c2:	d903      	bls.n	80028cc <__aeabi_dmul+0x434>
 80028c4:	2480      	movs	r4, #128	@ 0x80
 80028c6:	0264      	lsls	r4, r4, #9
 80028c8:	46a4      	mov	ip, r4
 80028ca:	44e1      	add	r9, ip
 80028cc:	9c02      	ldr	r4, [sp, #8]
 80028ce:	9e03      	ldr	r6, [sp, #12]
 80028d0:	46a4      	mov	ip, r4
 80028d2:	9d05      	ldr	r5, [sp, #20]
 80028d4:	4466      	add	r6, ip
 80028d6:	428e      	cmp	r6, r1
 80028d8:	4189      	sbcs	r1, r1
 80028da:	46ac      	mov	ip, r5
 80028dc:	0412      	lsls	r2, r2, #16
 80028de:	043c      	lsls	r4, r7, #16
 80028e0:	0c12      	lsrs	r2, r2, #16
 80028e2:	18a2      	adds	r2, r4, r2
 80028e4:	4462      	add	r2, ip
 80028e6:	4249      	negs	r1, r1
 80028e8:	1854      	adds	r4, r2, r1
 80028ea:	4446      	add	r6, r8
 80028ec:	46a4      	mov	ip, r4
 80028ee:	4546      	cmp	r6, r8
 80028f0:	41a4      	sbcs	r4, r4
 80028f2:	4682      	mov	sl, r0
 80028f4:	4264      	negs	r4, r4
 80028f6:	46a0      	mov	r8, r4
 80028f8:	42aa      	cmp	r2, r5
 80028fa:	4192      	sbcs	r2, r2
 80028fc:	458c      	cmp	ip, r1
 80028fe:	4189      	sbcs	r1, r1
 8002900:	44e2      	add	sl, ip
 8002902:	44d0      	add	r8, sl
 8002904:	4249      	negs	r1, r1
 8002906:	4252      	negs	r2, r2
 8002908:	430a      	orrs	r2, r1
 800290a:	45a0      	cmp	r8, r4
 800290c:	41a4      	sbcs	r4, r4
 800290e:	4582      	cmp	sl, r0
 8002910:	4189      	sbcs	r1, r1
 8002912:	4264      	negs	r4, r4
 8002914:	4249      	negs	r1, r1
 8002916:	430c      	orrs	r4, r1
 8002918:	4641      	mov	r1, r8
 800291a:	0c3f      	lsrs	r7, r7, #16
 800291c:	19d2      	adds	r2, r2, r7
 800291e:	1912      	adds	r2, r2, r4
 8002920:	0dcc      	lsrs	r4, r1, #23
 8002922:	9904      	ldr	r1, [sp, #16]
 8002924:	0270      	lsls	r0, r6, #9
 8002926:	4308      	orrs	r0, r1
 8002928:	1e41      	subs	r1, r0, #1
 800292a:	4188      	sbcs	r0, r1
 800292c:	4641      	mov	r1, r8
 800292e:	444a      	add	r2, r9
 8002930:	0df6      	lsrs	r6, r6, #23
 8002932:	0252      	lsls	r2, r2, #9
 8002934:	4330      	orrs	r0, r6
 8002936:	0249      	lsls	r1, r1, #9
 8002938:	4314      	orrs	r4, r2
 800293a:	4308      	orrs	r0, r1
 800293c:	01d2      	lsls	r2, r2, #7
 800293e:	d535      	bpl.n	80029ac <__aeabi_dmul+0x514>
 8002940:	2201      	movs	r2, #1
 8002942:	0843      	lsrs	r3, r0, #1
 8002944:	4002      	ands	r2, r0
 8002946:	4313      	orrs	r3, r2
 8002948:	07e0      	lsls	r0, r4, #31
 800294a:	4318      	orrs	r0, r3
 800294c:	0864      	lsrs	r4, r4, #1
 800294e:	e634      	b.n	80025ba <__aeabi_dmul+0x122>
 8002950:	9b00      	ldr	r3, [sp, #0]
 8002952:	46a2      	mov	sl, r4
 8002954:	469b      	mov	fp, r3
 8002956:	4681      	mov	r9, r0
 8002958:	2480      	movs	r4, #128	@ 0x80
 800295a:	4653      	mov	r3, sl
 800295c:	0324      	lsls	r4, r4, #12
 800295e:	431c      	orrs	r4, r3
 8002960:	0324      	lsls	r4, r4, #12
 8002962:	464a      	mov	r2, r9
 8002964:	4b2e      	ldr	r3, [pc, #184]	@ (8002a20 <__aeabi_dmul+0x588>)
 8002966:	0b24      	lsrs	r4, r4, #12
 8002968:	e5ec      	b.n	8002544 <__aeabi_dmul+0xac>
 800296a:	f000 fd53 	bl	8003414 <__clzsi2>
 800296e:	2315      	movs	r3, #21
 8002970:	469c      	mov	ip, r3
 8002972:	4484      	add	ip, r0
 8002974:	0002      	movs	r2, r0
 8002976:	4663      	mov	r3, ip
 8002978:	3220      	adds	r2, #32
 800297a:	2b1c      	cmp	r3, #28
 800297c:	dc00      	bgt.n	8002980 <__aeabi_dmul+0x4e8>
 800297e:	e684      	b.n	800268a <__aeabi_dmul+0x1f2>
 8002980:	2300      	movs	r3, #0
 8002982:	4699      	mov	r9, r3
 8002984:	0023      	movs	r3, r4
 8002986:	3808      	subs	r0, #8
 8002988:	4083      	lsls	r3, r0
 800298a:	469a      	mov	sl, r3
 800298c:	e68e      	b.n	80026ac <__aeabi_dmul+0x214>
 800298e:	f000 fd41 	bl	8003414 <__clzsi2>
 8002992:	0002      	movs	r2, r0
 8002994:	0003      	movs	r3, r0
 8002996:	3215      	adds	r2, #21
 8002998:	3320      	adds	r3, #32
 800299a:	2a1c      	cmp	r2, #28
 800299c:	dc00      	bgt.n	80029a0 <__aeabi_dmul+0x508>
 800299e:	e64e      	b.n	800263e <__aeabi_dmul+0x1a6>
 80029a0:	0002      	movs	r2, r0
 80029a2:	0034      	movs	r4, r6
 80029a4:	3a08      	subs	r2, #8
 80029a6:	2000      	movs	r0, #0
 80029a8:	4094      	lsls	r4, r2
 80029aa:	e652      	b.n	8002652 <__aeabi_dmul+0x1ba>
 80029ac:	9301      	str	r3, [sp, #4]
 80029ae:	e604      	b.n	80025ba <__aeabi_dmul+0x122>
 80029b0:	4b1c      	ldr	r3, [pc, #112]	@ (8002a24 <__aeabi_dmul+0x58c>)
 80029b2:	0021      	movs	r1, r4
 80029b4:	469c      	mov	ip, r3
 80029b6:	0003      	movs	r3, r0
 80029b8:	9d01      	ldr	r5, [sp, #4]
 80029ba:	40d3      	lsrs	r3, r2
 80029bc:	4465      	add	r5, ip
 80029be:	40a9      	lsls	r1, r5
 80029c0:	4319      	orrs	r1, r3
 80029c2:	0003      	movs	r3, r0
 80029c4:	40ab      	lsls	r3, r5
 80029c6:	1e58      	subs	r0, r3, #1
 80029c8:	4183      	sbcs	r3, r0
 80029ca:	4319      	orrs	r1, r3
 80029cc:	0008      	movs	r0, r1
 80029ce:	40d4      	lsrs	r4, r2
 80029d0:	074b      	lsls	r3, r1, #29
 80029d2:	d009      	beq.n	80029e8 <__aeabi_dmul+0x550>
 80029d4:	230f      	movs	r3, #15
 80029d6:	400b      	ands	r3, r1
 80029d8:	2b04      	cmp	r3, #4
 80029da:	d005      	beq.n	80029e8 <__aeabi_dmul+0x550>
 80029dc:	1d0b      	adds	r3, r1, #4
 80029de:	428b      	cmp	r3, r1
 80029e0:	4180      	sbcs	r0, r0
 80029e2:	4240      	negs	r0, r0
 80029e4:	1824      	adds	r4, r4, r0
 80029e6:	0018      	movs	r0, r3
 80029e8:	0223      	lsls	r3, r4, #8
 80029ea:	d400      	bmi.n	80029ee <__aeabi_dmul+0x556>
 80029ec:	e6d6      	b.n	800279c <__aeabi_dmul+0x304>
 80029ee:	2301      	movs	r3, #1
 80029f0:	2400      	movs	r4, #0
 80029f2:	2200      	movs	r2, #0
 80029f4:	e5a6      	b.n	8002544 <__aeabi_dmul+0xac>
 80029f6:	290f      	cmp	r1, #15
 80029f8:	d1aa      	bne.n	8002950 <__aeabi_dmul+0x4b8>
 80029fa:	2380      	movs	r3, #128	@ 0x80
 80029fc:	4652      	mov	r2, sl
 80029fe:	031b      	lsls	r3, r3, #12
 8002a00:	421a      	tst	r2, r3
 8002a02:	d0a9      	beq.n	8002958 <__aeabi_dmul+0x4c0>
 8002a04:	421c      	tst	r4, r3
 8002a06:	d1a7      	bne.n	8002958 <__aeabi_dmul+0x4c0>
 8002a08:	431c      	orrs	r4, r3
 8002a0a:	9b00      	ldr	r3, [sp, #0]
 8002a0c:	0002      	movs	r2, r0
 8002a0e:	469b      	mov	fp, r3
 8002a10:	4b03      	ldr	r3, [pc, #12]	@ (8002a20 <__aeabi_dmul+0x588>)
 8002a12:	e597      	b.n	8002544 <__aeabi_dmul+0xac>
 8002a14:	2400      	movs	r4, #0
 8002a16:	e6c1      	b.n	800279c <__aeabi_dmul+0x304>
 8002a18:	2400      	movs	r4, #0
 8002a1a:	4b01      	ldr	r3, [pc, #4]	@ (8002a20 <__aeabi_dmul+0x588>)
 8002a1c:	0022      	movs	r2, r4
 8002a1e:	e591      	b.n	8002544 <__aeabi_dmul+0xac>
 8002a20:	000007ff 	.word	0x000007ff
 8002a24:	0000041e 	.word	0x0000041e

08002a28 <__aeabi_dsub>:
 8002a28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a2a:	464e      	mov	r6, r9
 8002a2c:	4645      	mov	r5, r8
 8002a2e:	46de      	mov	lr, fp
 8002a30:	4657      	mov	r7, sl
 8002a32:	b5e0      	push	{r5, r6, r7, lr}
 8002a34:	b085      	sub	sp, #20
 8002a36:	9000      	str	r0, [sp, #0]
 8002a38:	9101      	str	r1, [sp, #4]
 8002a3a:	030c      	lsls	r4, r1, #12
 8002a3c:	004f      	lsls	r7, r1, #1
 8002a3e:	0fce      	lsrs	r6, r1, #31
 8002a40:	0a61      	lsrs	r1, r4, #9
 8002a42:	9c00      	ldr	r4, [sp, #0]
 8002a44:	46b0      	mov	r8, r6
 8002a46:	0f64      	lsrs	r4, r4, #29
 8002a48:	430c      	orrs	r4, r1
 8002a4a:	9900      	ldr	r1, [sp, #0]
 8002a4c:	0d7f      	lsrs	r7, r7, #21
 8002a4e:	00c8      	lsls	r0, r1, #3
 8002a50:	0011      	movs	r1, r2
 8002a52:	001a      	movs	r2, r3
 8002a54:	031b      	lsls	r3, r3, #12
 8002a56:	469c      	mov	ip, r3
 8002a58:	9100      	str	r1, [sp, #0]
 8002a5a:	9201      	str	r2, [sp, #4]
 8002a5c:	0051      	lsls	r1, r2, #1
 8002a5e:	0d4b      	lsrs	r3, r1, #21
 8002a60:	4699      	mov	r9, r3
 8002a62:	9b01      	ldr	r3, [sp, #4]
 8002a64:	9d00      	ldr	r5, [sp, #0]
 8002a66:	0fd9      	lsrs	r1, r3, #31
 8002a68:	4663      	mov	r3, ip
 8002a6a:	0f6a      	lsrs	r2, r5, #29
 8002a6c:	0a5b      	lsrs	r3, r3, #9
 8002a6e:	4313      	orrs	r3, r2
 8002a70:	00ea      	lsls	r2, r5, #3
 8002a72:	4694      	mov	ip, r2
 8002a74:	4693      	mov	fp, r2
 8002a76:	4ac1      	ldr	r2, [pc, #772]	@ (8002d7c <__aeabi_dsub+0x354>)
 8002a78:	9003      	str	r0, [sp, #12]
 8002a7a:	9302      	str	r3, [sp, #8]
 8002a7c:	4591      	cmp	r9, r2
 8002a7e:	d100      	bne.n	8002a82 <__aeabi_dsub+0x5a>
 8002a80:	e0cd      	b.n	8002c1e <__aeabi_dsub+0x1f6>
 8002a82:	2501      	movs	r5, #1
 8002a84:	4069      	eors	r1, r5
 8002a86:	464d      	mov	r5, r9
 8002a88:	1b7d      	subs	r5, r7, r5
 8002a8a:	46aa      	mov	sl, r5
 8002a8c:	428e      	cmp	r6, r1
 8002a8e:	d100      	bne.n	8002a92 <__aeabi_dsub+0x6a>
 8002a90:	e080      	b.n	8002b94 <__aeabi_dsub+0x16c>
 8002a92:	2d00      	cmp	r5, #0
 8002a94:	dc00      	bgt.n	8002a98 <__aeabi_dsub+0x70>
 8002a96:	e335      	b.n	8003104 <__aeabi_dsub+0x6dc>
 8002a98:	4649      	mov	r1, r9
 8002a9a:	2900      	cmp	r1, #0
 8002a9c:	d100      	bne.n	8002aa0 <__aeabi_dsub+0x78>
 8002a9e:	e0df      	b.n	8002c60 <__aeabi_dsub+0x238>
 8002aa0:	4297      	cmp	r7, r2
 8002aa2:	d100      	bne.n	8002aa6 <__aeabi_dsub+0x7e>
 8002aa4:	e194      	b.n	8002dd0 <__aeabi_dsub+0x3a8>
 8002aa6:	4652      	mov	r2, sl
 8002aa8:	2501      	movs	r5, #1
 8002aaa:	2a38      	cmp	r2, #56	@ 0x38
 8002aac:	dc19      	bgt.n	8002ae2 <__aeabi_dsub+0xba>
 8002aae:	2280      	movs	r2, #128	@ 0x80
 8002ab0:	9b02      	ldr	r3, [sp, #8]
 8002ab2:	0412      	lsls	r2, r2, #16
 8002ab4:	4313      	orrs	r3, r2
 8002ab6:	9302      	str	r3, [sp, #8]
 8002ab8:	4652      	mov	r2, sl
 8002aba:	2a1f      	cmp	r2, #31
 8002abc:	dd00      	ble.n	8002ac0 <__aeabi_dsub+0x98>
 8002abe:	e1e3      	b.n	8002e88 <__aeabi_dsub+0x460>
 8002ac0:	4653      	mov	r3, sl
 8002ac2:	2220      	movs	r2, #32
 8002ac4:	4661      	mov	r1, ip
 8002ac6:	9d02      	ldr	r5, [sp, #8]
 8002ac8:	1ad2      	subs	r2, r2, r3
 8002aca:	4095      	lsls	r5, r2
 8002acc:	40d9      	lsrs	r1, r3
 8002ace:	430d      	orrs	r5, r1
 8002ad0:	4661      	mov	r1, ip
 8002ad2:	4091      	lsls	r1, r2
 8002ad4:	000a      	movs	r2, r1
 8002ad6:	1e51      	subs	r1, r2, #1
 8002ad8:	418a      	sbcs	r2, r1
 8002ada:	4315      	orrs	r5, r2
 8002adc:	9a02      	ldr	r2, [sp, #8]
 8002ade:	40da      	lsrs	r2, r3
 8002ae0:	1aa4      	subs	r4, r4, r2
 8002ae2:	1b45      	subs	r5, r0, r5
 8002ae4:	42a8      	cmp	r0, r5
 8002ae6:	4180      	sbcs	r0, r0
 8002ae8:	4240      	negs	r0, r0
 8002aea:	1a24      	subs	r4, r4, r0
 8002aec:	0223      	lsls	r3, r4, #8
 8002aee:	d400      	bmi.n	8002af2 <__aeabi_dsub+0xca>
 8002af0:	e13d      	b.n	8002d6e <__aeabi_dsub+0x346>
 8002af2:	0264      	lsls	r4, r4, #9
 8002af4:	0a64      	lsrs	r4, r4, #9
 8002af6:	2c00      	cmp	r4, #0
 8002af8:	d100      	bne.n	8002afc <__aeabi_dsub+0xd4>
 8002afa:	e147      	b.n	8002d8c <__aeabi_dsub+0x364>
 8002afc:	0020      	movs	r0, r4
 8002afe:	f000 fc89 	bl	8003414 <__clzsi2>
 8002b02:	0003      	movs	r3, r0
 8002b04:	3b08      	subs	r3, #8
 8002b06:	2120      	movs	r1, #32
 8002b08:	0028      	movs	r0, r5
 8002b0a:	1aca      	subs	r2, r1, r3
 8002b0c:	40d0      	lsrs	r0, r2
 8002b0e:	409c      	lsls	r4, r3
 8002b10:	0002      	movs	r2, r0
 8002b12:	409d      	lsls	r5, r3
 8002b14:	4322      	orrs	r2, r4
 8002b16:	429f      	cmp	r7, r3
 8002b18:	dd00      	ble.n	8002b1c <__aeabi_dsub+0xf4>
 8002b1a:	e177      	b.n	8002e0c <__aeabi_dsub+0x3e4>
 8002b1c:	1bd8      	subs	r0, r3, r7
 8002b1e:	3001      	adds	r0, #1
 8002b20:	1a09      	subs	r1, r1, r0
 8002b22:	002c      	movs	r4, r5
 8002b24:	408d      	lsls	r5, r1
 8002b26:	40c4      	lsrs	r4, r0
 8002b28:	1e6b      	subs	r3, r5, #1
 8002b2a:	419d      	sbcs	r5, r3
 8002b2c:	0013      	movs	r3, r2
 8002b2e:	40c2      	lsrs	r2, r0
 8002b30:	408b      	lsls	r3, r1
 8002b32:	4325      	orrs	r5, r4
 8002b34:	2700      	movs	r7, #0
 8002b36:	0014      	movs	r4, r2
 8002b38:	431d      	orrs	r5, r3
 8002b3a:	076b      	lsls	r3, r5, #29
 8002b3c:	d009      	beq.n	8002b52 <__aeabi_dsub+0x12a>
 8002b3e:	230f      	movs	r3, #15
 8002b40:	402b      	ands	r3, r5
 8002b42:	2b04      	cmp	r3, #4
 8002b44:	d005      	beq.n	8002b52 <__aeabi_dsub+0x12a>
 8002b46:	1d2b      	adds	r3, r5, #4
 8002b48:	42ab      	cmp	r3, r5
 8002b4a:	41ad      	sbcs	r5, r5
 8002b4c:	426d      	negs	r5, r5
 8002b4e:	1964      	adds	r4, r4, r5
 8002b50:	001d      	movs	r5, r3
 8002b52:	0223      	lsls	r3, r4, #8
 8002b54:	d400      	bmi.n	8002b58 <__aeabi_dsub+0x130>
 8002b56:	e140      	b.n	8002dda <__aeabi_dsub+0x3b2>
 8002b58:	4a88      	ldr	r2, [pc, #544]	@ (8002d7c <__aeabi_dsub+0x354>)
 8002b5a:	3701      	adds	r7, #1
 8002b5c:	4297      	cmp	r7, r2
 8002b5e:	d100      	bne.n	8002b62 <__aeabi_dsub+0x13a>
 8002b60:	e101      	b.n	8002d66 <__aeabi_dsub+0x33e>
 8002b62:	2601      	movs	r6, #1
 8002b64:	4643      	mov	r3, r8
 8002b66:	4986      	ldr	r1, [pc, #536]	@ (8002d80 <__aeabi_dsub+0x358>)
 8002b68:	08ed      	lsrs	r5, r5, #3
 8002b6a:	4021      	ands	r1, r4
 8002b6c:	074a      	lsls	r2, r1, #29
 8002b6e:	432a      	orrs	r2, r5
 8002b70:	057c      	lsls	r4, r7, #21
 8002b72:	024d      	lsls	r5, r1, #9
 8002b74:	0b2d      	lsrs	r5, r5, #12
 8002b76:	0d64      	lsrs	r4, r4, #21
 8002b78:	401e      	ands	r6, r3
 8002b7a:	0524      	lsls	r4, r4, #20
 8002b7c:	432c      	orrs	r4, r5
 8002b7e:	07f6      	lsls	r6, r6, #31
 8002b80:	4334      	orrs	r4, r6
 8002b82:	0010      	movs	r0, r2
 8002b84:	0021      	movs	r1, r4
 8002b86:	b005      	add	sp, #20
 8002b88:	bcf0      	pop	{r4, r5, r6, r7}
 8002b8a:	46bb      	mov	fp, r7
 8002b8c:	46b2      	mov	sl, r6
 8002b8e:	46a9      	mov	r9, r5
 8002b90:	46a0      	mov	r8, r4
 8002b92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b94:	2d00      	cmp	r5, #0
 8002b96:	dc00      	bgt.n	8002b9a <__aeabi_dsub+0x172>
 8002b98:	e2d0      	b.n	800313c <__aeabi_dsub+0x714>
 8002b9a:	4649      	mov	r1, r9
 8002b9c:	2900      	cmp	r1, #0
 8002b9e:	d000      	beq.n	8002ba2 <__aeabi_dsub+0x17a>
 8002ba0:	e0d4      	b.n	8002d4c <__aeabi_dsub+0x324>
 8002ba2:	4661      	mov	r1, ip
 8002ba4:	9b02      	ldr	r3, [sp, #8]
 8002ba6:	4319      	orrs	r1, r3
 8002ba8:	d100      	bne.n	8002bac <__aeabi_dsub+0x184>
 8002baa:	e12b      	b.n	8002e04 <__aeabi_dsub+0x3dc>
 8002bac:	1e69      	subs	r1, r5, #1
 8002bae:	2d01      	cmp	r5, #1
 8002bb0:	d100      	bne.n	8002bb4 <__aeabi_dsub+0x18c>
 8002bb2:	e1d9      	b.n	8002f68 <__aeabi_dsub+0x540>
 8002bb4:	4295      	cmp	r5, r2
 8002bb6:	d100      	bne.n	8002bba <__aeabi_dsub+0x192>
 8002bb8:	e10a      	b.n	8002dd0 <__aeabi_dsub+0x3a8>
 8002bba:	2501      	movs	r5, #1
 8002bbc:	2938      	cmp	r1, #56	@ 0x38
 8002bbe:	dc17      	bgt.n	8002bf0 <__aeabi_dsub+0x1c8>
 8002bc0:	468a      	mov	sl, r1
 8002bc2:	4653      	mov	r3, sl
 8002bc4:	2b1f      	cmp	r3, #31
 8002bc6:	dd00      	ble.n	8002bca <__aeabi_dsub+0x1a2>
 8002bc8:	e1e7      	b.n	8002f9a <__aeabi_dsub+0x572>
 8002bca:	2220      	movs	r2, #32
 8002bcc:	1ad2      	subs	r2, r2, r3
 8002bce:	9b02      	ldr	r3, [sp, #8]
 8002bd0:	4661      	mov	r1, ip
 8002bd2:	4093      	lsls	r3, r2
 8002bd4:	001d      	movs	r5, r3
 8002bd6:	4653      	mov	r3, sl
 8002bd8:	40d9      	lsrs	r1, r3
 8002bda:	4663      	mov	r3, ip
 8002bdc:	4093      	lsls	r3, r2
 8002bde:	001a      	movs	r2, r3
 8002be0:	430d      	orrs	r5, r1
 8002be2:	1e51      	subs	r1, r2, #1
 8002be4:	418a      	sbcs	r2, r1
 8002be6:	4653      	mov	r3, sl
 8002be8:	4315      	orrs	r5, r2
 8002bea:	9a02      	ldr	r2, [sp, #8]
 8002bec:	40da      	lsrs	r2, r3
 8002bee:	18a4      	adds	r4, r4, r2
 8002bf0:	182d      	adds	r5, r5, r0
 8002bf2:	4285      	cmp	r5, r0
 8002bf4:	4180      	sbcs	r0, r0
 8002bf6:	4240      	negs	r0, r0
 8002bf8:	1824      	adds	r4, r4, r0
 8002bfa:	0223      	lsls	r3, r4, #8
 8002bfc:	d400      	bmi.n	8002c00 <__aeabi_dsub+0x1d8>
 8002bfe:	e0b6      	b.n	8002d6e <__aeabi_dsub+0x346>
 8002c00:	4b5e      	ldr	r3, [pc, #376]	@ (8002d7c <__aeabi_dsub+0x354>)
 8002c02:	3701      	adds	r7, #1
 8002c04:	429f      	cmp	r7, r3
 8002c06:	d100      	bne.n	8002c0a <__aeabi_dsub+0x1e2>
 8002c08:	e0ad      	b.n	8002d66 <__aeabi_dsub+0x33e>
 8002c0a:	2101      	movs	r1, #1
 8002c0c:	4b5c      	ldr	r3, [pc, #368]	@ (8002d80 <__aeabi_dsub+0x358>)
 8002c0e:	086a      	lsrs	r2, r5, #1
 8002c10:	401c      	ands	r4, r3
 8002c12:	4029      	ands	r1, r5
 8002c14:	430a      	orrs	r2, r1
 8002c16:	07e5      	lsls	r5, r4, #31
 8002c18:	4315      	orrs	r5, r2
 8002c1a:	0864      	lsrs	r4, r4, #1
 8002c1c:	e78d      	b.n	8002b3a <__aeabi_dsub+0x112>
 8002c1e:	4a59      	ldr	r2, [pc, #356]	@ (8002d84 <__aeabi_dsub+0x35c>)
 8002c20:	9b02      	ldr	r3, [sp, #8]
 8002c22:	4692      	mov	sl, r2
 8002c24:	4662      	mov	r2, ip
 8002c26:	44ba      	add	sl, r7
 8002c28:	431a      	orrs	r2, r3
 8002c2a:	d02c      	beq.n	8002c86 <__aeabi_dsub+0x25e>
 8002c2c:	428e      	cmp	r6, r1
 8002c2e:	d02e      	beq.n	8002c8e <__aeabi_dsub+0x266>
 8002c30:	4652      	mov	r2, sl
 8002c32:	2a00      	cmp	r2, #0
 8002c34:	d060      	beq.n	8002cf8 <__aeabi_dsub+0x2d0>
 8002c36:	2f00      	cmp	r7, #0
 8002c38:	d100      	bne.n	8002c3c <__aeabi_dsub+0x214>
 8002c3a:	e0db      	b.n	8002df4 <__aeabi_dsub+0x3cc>
 8002c3c:	4663      	mov	r3, ip
 8002c3e:	000e      	movs	r6, r1
 8002c40:	9c02      	ldr	r4, [sp, #8]
 8002c42:	08d8      	lsrs	r0, r3, #3
 8002c44:	0762      	lsls	r2, r4, #29
 8002c46:	4302      	orrs	r2, r0
 8002c48:	08e4      	lsrs	r4, r4, #3
 8002c4a:	0013      	movs	r3, r2
 8002c4c:	4323      	orrs	r3, r4
 8002c4e:	d100      	bne.n	8002c52 <__aeabi_dsub+0x22a>
 8002c50:	e254      	b.n	80030fc <__aeabi_dsub+0x6d4>
 8002c52:	2580      	movs	r5, #128	@ 0x80
 8002c54:	032d      	lsls	r5, r5, #12
 8002c56:	4325      	orrs	r5, r4
 8002c58:	032d      	lsls	r5, r5, #12
 8002c5a:	4c48      	ldr	r4, [pc, #288]	@ (8002d7c <__aeabi_dsub+0x354>)
 8002c5c:	0b2d      	lsrs	r5, r5, #12
 8002c5e:	e78c      	b.n	8002b7a <__aeabi_dsub+0x152>
 8002c60:	4661      	mov	r1, ip
 8002c62:	9b02      	ldr	r3, [sp, #8]
 8002c64:	4319      	orrs	r1, r3
 8002c66:	d100      	bne.n	8002c6a <__aeabi_dsub+0x242>
 8002c68:	e0cc      	b.n	8002e04 <__aeabi_dsub+0x3dc>
 8002c6a:	0029      	movs	r1, r5
 8002c6c:	3901      	subs	r1, #1
 8002c6e:	2d01      	cmp	r5, #1
 8002c70:	d100      	bne.n	8002c74 <__aeabi_dsub+0x24c>
 8002c72:	e188      	b.n	8002f86 <__aeabi_dsub+0x55e>
 8002c74:	4295      	cmp	r5, r2
 8002c76:	d100      	bne.n	8002c7a <__aeabi_dsub+0x252>
 8002c78:	e0aa      	b.n	8002dd0 <__aeabi_dsub+0x3a8>
 8002c7a:	2501      	movs	r5, #1
 8002c7c:	2938      	cmp	r1, #56	@ 0x38
 8002c7e:	dd00      	ble.n	8002c82 <__aeabi_dsub+0x25a>
 8002c80:	e72f      	b.n	8002ae2 <__aeabi_dsub+0xba>
 8002c82:	468a      	mov	sl, r1
 8002c84:	e718      	b.n	8002ab8 <__aeabi_dsub+0x90>
 8002c86:	2201      	movs	r2, #1
 8002c88:	4051      	eors	r1, r2
 8002c8a:	428e      	cmp	r6, r1
 8002c8c:	d1d0      	bne.n	8002c30 <__aeabi_dsub+0x208>
 8002c8e:	4653      	mov	r3, sl
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	d100      	bne.n	8002c96 <__aeabi_dsub+0x26e>
 8002c94:	e0be      	b.n	8002e14 <__aeabi_dsub+0x3ec>
 8002c96:	2f00      	cmp	r7, #0
 8002c98:	d000      	beq.n	8002c9c <__aeabi_dsub+0x274>
 8002c9a:	e138      	b.n	8002f0e <__aeabi_dsub+0x4e6>
 8002c9c:	46ca      	mov	sl, r9
 8002c9e:	0022      	movs	r2, r4
 8002ca0:	4302      	orrs	r2, r0
 8002ca2:	d100      	bne.n	8002ca6 <__aeabi_dsub+0x27e>
 8002ca4:	e1e2      	b.n	800306c <__aeabi_dsub+0x644>
 8002ca6:	4653      	mov	r3, sl
 8002ca8:	1e59      	subs	r1, r3, #1
 8002caa:	2b01      	cmp	r3, #1
 8002cac:	d100      	bne.n	8002cb0 <__aeabi_dsub+0x288>
 8002cae:	e20d      	b.n	80030cc <__aeabi_dsub+0x6a4>
 8002cb0:	4a32      	ldr	r2, [pc, #200]	@ (8002d7c <__aeabi_dsub+0x354>)
 8002cb2:	4592      	cmp	sl, r2
 8002cb4:	d100      	bne.n	8002cb8 <__aeabi_dsub+0x290>
 8002cb6:	e1d2      	b.n	800305e <__aeabi_dsub+0x636>
 8002cb8:	2701      	movs	r7, #1
 8002cba:	2938      	cmp	r1, #56	@ 0x38
 8002cbc:	dc13      	bgt.n	8002ce6 <__aeabi_dsub+0x2be>
 8002cbe:	291f      	cmp	r1, #31
 8002cc0:	dd00      	ble.n	8002cc4 <__aeabi_dsub+0x29c>
 8002cc2:	e1ee      	b.n	80030a2 <__aeabi_dsub+0x67a>
 8002cc4:	2220      	movs	r2, #32
 8002cc6:	9b02      	ldr	r3, [sp, #8]
 8002cc8:	1a52      	subs	r2, r2, r1
 8002cca:	0025      	movs	r5, r4
 8002ccc:	0007      	movs	r7, r0
 8002cce:	469a      	mov	sl, r3
 8002cd0:	40cc      	lsrs	r4, r1
 8002cd2:	4090      	lsls	r0, r2
 8002cd4:	4095      	lsls	r5, r2
 8002cd6:	40cf      	lsrs	r7, r1
 8002cd8:	44a2      	add	sl, r4
 8002cda:	1e42      	subs	r2, r0, #1
 8002cdc:	4190      	sbcs	r0, r2
 8002cde:	4653      	mov	r3, sl
 8002ce0:	432f      	orrs	r7, r5
 8002ce2:	4307      	orrs	r7, r0
 8002ce4:	9302      	str	r3, [sp, #8]
 8002ce6:	003d      	movs	r5, r7
 8002ce8:	4465      	add	r5, ip
 8002cea:	4565      	cmp	r5, ip
 8002cec:	4192      	sbcs	r2, r2
 8002cee:	9b02      	ldr	r3, [sp, #8]
 8002cf0:	4252      	negs	r2, r2
 8002cf2:	464f      	mov	r7, r9
 8002cf4:	18d4      	adds	r4, r2, r3
 8002cf6:	e780      	b.n	8002bfa <__aeabi_dsub+0x1d2>
 8002cf8:	4a23      	ldr	r2, [pc, #140]	@ (8002d88 <__aeabi_dsub+0x360>)
 8002cfa:	1c7d      	adds	r5, r7, #1
 8002cfc:	4215      	tst	r5, r2
 8002cfe:	d000      	beq.n	8002d02 <__aeabi_dsub+0x2da>
 8002d00:	e0aa      	b.n	8002e58 <__aeabi_dsub+0x430>
 8002d02:	4662      	mov	r2, ip
 8002d04:	0025      	movs	r5, r4
 8002d06:	9b02      	ldr	r3, [sp, #8]
 8002d08:	4305      	orrs	r5, r0
 8002d0a:	431a      	orrs	r2, r3
 8002d0c:	2f00      	cmp	r7, #0
 8002d0e:	d000      	beq.n	8002d12 <__aeabi_dsub+0x2ea>
 8002d10:	e0f5      	b.n	8002efe <__aeabi_dsub+0x4d6>
 8002d12:	2d00      	cmp	r5, #0
 8002d14:	d100      	bne.n	8002d18 <__aeabi_dsub+0x2f0>
 8002d16:	e16b      	b.n	8002ff0 <__aeabi_dsub+0x5c8>
 8002d18:	2a00      	cmp	r2, #0
 8002d1a:	d100      	bne.n	8002d1e <__aeabi_dsub+0x2f6>
 8002d1c:	e152      	b.n	8002fc4 <__aeabi_dsub+0x59c>
 8002d1e:	4663      	mov	r3, ip
 8002d20:	1ac5      	subs	r5, r0, r3
 8002d22:	9b02      	ldr	r3, [sp, #8]
 8002d24:	1ae2      	subs	r2, r4, r3
 8002d26:	42a8      	cmp	r0, r5
 8002d28:	419b      	sbcs	r3, r3
 8002d2a:	425b      	negs	r3, r3
 8002d2c:	1ad3      	subs	r3, r2, r3
 8002d2e:	021a      	lsls	r2, r3, #8
 8002d30:	d400      	bmi.n	8002d34 <__aeabi_dsub+0x30c>
 8002d32:	e1d5      	b.n	80030e0 <__aeabi_dsub+0x6b8>
 8002d34:	4663      	mov	r3, ip
 8002d36:	1a1d      	subs	r5, r3, r0
 8002d38:	45ac      	cmp	ip, r5
 8002d3a:	4192      	sbcs	r2, r2
 8002d3c:	2601      	movs	r6, #1
 8002d3e:	9b02      	ldr	r3, [sp, #8]
 8002d40:	4252      	negs	r2, r2
 8002d42:	1b1c      	subs	r4, r3, r4
 8002d44:	4688      	mov	r8, r1
 8002d46:	1aa4      	subs	r4, r4, r2
 8002d48:	400e      	ands	r6, r1
 8002d4a:	e6f6      	b.n	8002b3a <__aeabi_dsub+0x112>
 8002d4c:	4297      	cmp	r7, r2
 8002d4e:	d03f      	beq.n	8002dd0 <__aeabi_dsub+0x3a8>
 8002d50:	4652      	mov	r2, sl
 8002d52:	2501      	movs	r5, #1
 8002d54:	2a38      	cmp	r2, #56	@ 0x38
 8002d56:	dd00      	ble.n	8002d5a <__aeabi_dsub+0x332>
 8002d58:	e74a      	b.n	8002bf0 <__aeabi_dsub+0x1c8>
 8002d5a:	2280      	movs	r2, #128	@ 0x80
 8002d5c:	9b02      	ldr	r3, [sp, #8]
 8002d5e:	0412      	lsls	r2, r2, #16
 8002d60:	4313      	orrs	r3, r2
 8002d62:	9302      	str	r3, [sp, #8]
 8002d64:	e72d      	b.n	8002bc2 <__aeabi_dsub+0x19a>
 8002d66:	003c      	movs	r4, r7
 8002d68:	2500      	movs	r5, #0
 8002d6a:	2200      	movs	r2, #0
 8002d6c:	e705      	b.n	8002b7a <__aeabi_dsub+0x152>
 8002d6e:	2307      	movs	r3, #7
 8002d70:	402b      	ands	r3, r5
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d000      	beq.n	8002d78 <__aeabi_dsub+0x350>
 8002d76:	e6e2      	b.n	8002b3e <__aeabi_dsub+0x116>
 8002d78:	e06b      	b.n	8002e52 <__aeabi_dsub+0x42a>
 8002d7a:	46c0      	nop			@ (mov r8, r8)
 8002d7c:	000007ff 	.word	0x000007ff
 8002d80:	ff7fffff 	.word	0xff7fffff
 8002d84:	fffff801 	.word	0xfffff801
 8002d88:	000007fe 	.word	0x000007fe
 8002d8c:	0028      	movs	r0, r5
 8002d8e:	f000 fb41 	bl	8003414 <__clzsi2>
 8002d92:	0003      	movs	r3, r0
 8002d94:	3318      	adds	r3, #24
 8002d96:	2b1f      	cmp	r3, #31
 8002d98:	dc00      	bgt.n	8002d9c <__aeabi_dsub+0x374>
 8002d9a:	e6b4      	b.n	8002b06 <__aeabi_dsub+0xde>
 8002d9c:	002a      	movs	r2, r5
 8002d9e:	3808      	subs	r0, #8
 8002da0:	4082      	lsls	r2, r0
 8002da2:	429f      	cmp	r7, r3
 8002da4:	dd00      	ble.n	8002da8 <__aeabi_dsub+0x380>
 8002da6:	e0b9      	b.n	8002f1c <__aeabi_dsub+0x4f4>
 8002da8:	1bdb      	subs	r3, r3, r7
 8002daa:	1c58      	adds	r0, r3, #1
 8002dac:	281f      	cmp	r0, #31
 8002dae:	dc00      	bgt.n	8002db2 <__aeabi_dsub+0x38a>
 8002db0:	e1a0      	b.n	80030f4 <__aeabi_dsub+0x6cc>
 8002db2:	0015      	movs	r5, r2
 8002db4:	3b1f      	subs	r3, #31
 8002db6:	40dd      	lsrs	r5, r3
 8002db8:	2820      	cmp	r0, #32
 8002dba:	d005      	beq.n	8002dc8 <__aeabi_dsub+0x3a0>
 8002dbc:	2340      	movs	r3, #64	@ 0x40
 8002dbe:	1a1b      	subs	r3, r3, r0
 8002dc0:	409a      	lsls	r2, r3
 8002dc2:	1e53      	subs	r3, r2, #1
 8002dc4:	419a      	sbcs	r2, r3
 8002dc6:	4315      	orrs	r5, r2
 8002dc8:	2307      	movs	r3, #7
 8002dca:	2700      	movs	r7, #0
 8002dcc:	402b      	ands	r3, r5
 8002dce:	e7d0      	b.n	8002d72 <__aeabi_dsub+0x34a>
 8002dd0:	08c0      	lsrs	r0, r0, #3
 8002dd2:	0762      	lsls	r2, r4, #29
 8002dd4:	4302      	orrs	r2, r0
 8002dd6:	08e4      	lsrs	r4, r4, #3
 8002dd8:	e737      	b.n	8002c4a <__aeabi_dsub+0x222>
 8002dda:	08ea      	lsrs	r2, r5, #3
 8002ddc:	0763      	lsls	r3, r4, #29
 8002dde:	431a      	orrs	r2, r3
 8002de0:	4bd3      	ldr	r3, [pc, #844]	@ (8003130 <__aeabi_dsub+0x708>)
 8002de2:	08e4      	lsrs	r4, r4, #3
 8002de4:	429f      	cmp	r7, r3
 8002de6:	d100      	bne.n	8002dea <__aeabi_dsub+0x3c2>
 8002de8:	e72f      	b.n	8002c4a <__aeabi_dsub+0x222>
 8002dea:	0324      	lsls	r4, r4, #12
 8002dec:	0b25      	lsrs	r5, r4, #12
 8002dee:	057c      	lsls	r4, r7, #21
 8002df0:	0d64      	lsrs	r4, r4, #21
 8002df2:	e6c2      	b.n	8002b7a <__aeabi_dsub+0x152>
 8002df4:	46ca      	mov	sl, r9
 8002df6:	0022      	movs	r2, r4
 8002df8:	4302      	orrs	r2, r0
 8002dfa:	d158      	bne.n	8002eae <__aeabi_dsub+0x486>
 8002dfc:	4663      	mov	r3, ip
 8002dfe:	000e      	movs	r6, r1
 8002e00:	9c02      	ldr	r4, [sp, #8]
 8002e02:	9303      	str	r3, [sp, #12]
 8002e04:	9b03      	ldr	r3, [sp, #12]
 8002e06:	4657      	mov	r7, sl
 8002e08:	08da      	lsrs	r2, r3, #3
 8002e0a:	e7e7      	b.n	8002ddc <__aeabi_dsub+0x3b4>
 8002e0c:	4cc9      	ldr	r4, [pc, #804]	@ (8003134 <__aeabi_dsub+0x70c>)
 8002e0e:	1aff      	subs	r7, r7, r3
 8002e10:	4014      	ands	r4, r2
 8002e12:	e692      	b.n	8002b3a <__aeabi_dsub+0x112>
 8002e14:	4dc8      	ldr	r5, [pc, #800]	@ (8003138 <__aeabi_dsub+0x710>)
 8002e16:	1c7a      	adds	r2, r7, #1
 8002e18:	422a      	tst	r2, r5
 8002e1a:	d000      	beq.n	8002e1e <__aeabi_dsub+0x3f6>
 8002e1c:	e084      	b.n	8002f28 <__aeabi_dsub+0x500>
 8002e1e:	0022      	movs	r2, r4
 8002e20:	4302      	orrs	r2, r0
 8002e22:	2f00      	cmp	r7, #0
 8002e24:	d000      	beq.n	8002e28 <__aeabi_dsub+0x400>
 8002e26:	e0ef      	b.n	8003008 <__aeabi_dsub+0x5e0>
 8002e28:	2a00      	cmp	r2, #0
 8002e2a:	d100      	bne.n	8002e2e <__aeabi_dsub+0x406>
 8002e2c:	e0e5      	b.n	8002ffa <__aeabi_dsub+0x5d2>
 8002e2e:	4662      	mov	r2, ip
 8002e30:	9902      	ldr	r1, [sp, #8]
 8002e32:	430a      	orrs	r2, r1
 8002e34:	d100      	bne.n	8002e38 <__aeabi_dsub+0x410>
 8002e36:	e0c5      	b.n	8002fc4 <__aeabi_dsub+0x59c>
 8002e38:	4663      	mov	r3, ip
 8002e3a:	18c5      	adds	r5, r0, r3
 8002e3c:	468c      	mov	ip, r1
 8002e3e:	4285      	cmp	r5, r0
 8002e40:	4180      	sbcs	r0, r0
 8002e42:	4464      	add	r4, ip
 8002e44:	4240      	negs	r0, r0
 8002e46:	1824      	adds	r4, r4, r0
 8002e48:	0223      	lsls	r3, r4, #8
 8002e4a:	d502      	bpl.n	8002e52 <__aeabi_dsub+0x42a>
 8002e4c:	4bb9      	ldr	r3, [pc, #740]	@ (8003134 <__aeabi_dsub+0x70c>)
 8002e4e:	3701      	adds	r7, #1
 8002e50:	401c      	ands	r4, r3
 8002e52:	46ba      	mov	sl, r7
 8002e54:	9503      	str	r5, [sp, #12]
 8002e56:	e7d5      	b.n	8002e04 <__aeabi_dsub+0x3dc>
 8002e58:	4662      	mov	r2, ip
 8002e5a:	1a85      	subs	r5, r0, r2
 8002e5c:	42a8      	cmp	r0, r5
 8002e5e:	4192      	sbcs	r2, r2
 8002e60:	4252      	negs	r2, r2
 8002e62:	4691      	mov	r9, r2
 8002e64:	9b02      	ldr	r3, [sp, #8]
 8002e66:	1ae3      	subs	r3, r4, r3
 8002e68:	001a      	movs	r2, r3
 8002e6a:	464b      	mov	r3, r9
 8002e6c:	1ad2      	subs	r2, r2, r3
 8002e6e:	0013      	movs	r3, r2
 8002e70:	4691      	mov	r9, r2
 8002e72:	021a      	lsls	r2, r3, #8
 8002e74:	d46c      	bmi.n	8002f50 <__aeabi_dsub+0x528>
 8002e76:	464a      	mov	r2, r9
 8002e78:	464c      	mov	r4, r9
 8002e7a:	432a      	orrs	r2, r5
 8002e7c:	d000      	beq.n	8002e80 <__aeabi_dsub+0x458>
 8002e7e:	e63a      	b.n	8002af6 <__aeabi_dsub+0xce>
 8002e80:	2600      	movs	r6, #0
 8002e82:	2400      	movs	r4, #0
 8002e84:	2500      	movs	r5, #0
 8002e86:	e678      	b.n	8002b7a <__aeabi_dsub+0x152>
 8002e88:	9902      	ldr	r1, [sp, #8]
 8002e8a:	4653      	mov	r3, sl
 8002e8c:	000d      	movs	r5, r1
 8002e8e:	3a20      	subs	r2, #32
 8002e90:	40d5      	lsrs	r5, r2
 8002e92:	2b20      	cmp	r3, #32
 8002e94:	d006      	beq.n	8002ea4 <__aeabi_dsub+0x47c>
 8002e96:	2240      	movs	r2, #64	@ 0x40
 8002e98:	1ad2      	subs	r2, r2, r3
 8002e9a:	000b      	movs	r3, r1
 8002e9c:	4093      	lsls	r3, r2
 8002e9e:	4662      	mov	r2, ip
 8002ea0:	431a      	orrs	r2, r3
 8002ea2:	4693      	mov	fp, r2
 8002ea4:	465b      	mov	r3, fp
 8002ea6:	1e5a      	subs	r2, r3, #1
 8002ea8:	4193      	sbcs	r3, r2
 8002eaa:	431d      	orrs	r5, r3
 8002eac:	e619      	b.n	8002ae2 <__aeabi_dsub+0xba>
 8002eae:	4653      	mov	r3, sl
 8002eb0:	1e5a      	subs	r2, r3, #1
 8002eb2:	2b01      	cmp	r3, #1
 8002eb4:	d100      	bne.n	8002eb8 <__aeabi_dsub+0x490>
 8002eb6:	e0c6      	b.n	8003046 <__aeabi_dsub+0x61e>
 8002eb8:	4e9d      	ldr	r6, [pc, #628]	@ (8003130 <__aeabi_dsub+0x708>)
 8002eba:	45b2      	cmp	sl, r6
 8002ebc:	d100      	bne.n	8002ec0 <__aeabi_dsub+0x498>
 8002ebe:	e6bd      	b.n	8002c3c <__aeabi_dsub+0x214>
 8002ec0:	4688      	mov	r8, r1
 8002ec2:	000e      	movs	r6, r1
 8002ec4:	2501      	movs	r5, #1
 8002ec6:	2a38      	cmp	r2, #56	@ 0x38
 8002ec8:	dc10      	bgt.n	8002eec <__aeabi_dsub+0x4c4>
 8002eca:	2a1f      	cmp	r2, #31
 8002ecc:	dc7f      	bgt.n	8002fce <__aeabi_dsub+0x5a6>
 8002ece:	2120      	movs	r1, #32
 8002ed0:	0025      	movs	r5, r4
 8002ed2:	1a89      	subs	r1, r1, r2
 8002ed4:	0007      	movs	r7, r0
 8002ed6:	4088      	lsls	r0, r1
 8002ed8:	408d      	lsls	r5, r1
 8002eda:	40d7      	lsrs	r7, r2
 8002edc:	40d4      	lsrs	r4, r2
 8002ede:	1e41      	subs	r1, r0, #1
 8002ee0:	4188      	sbcs	r0, r1
 8002ee2:	9b02      	ldr	r3, [sp, #8]
 8002ee4:	433d      	orrs	r5, r7
 8002ee6:	1b1b      	subs	r3, r3, r4
 8002ee8:	4305      	orrs	r5, r0
 8002eea:	9302      	str	r3, [sp, #8]
 8002eec:	4662      	mov	r2, ip
 8002eee:	1b55      	subs	r5, r2, r5
 8002ef0:	45ac      	cmp	ip, r5
 8002ef2:	4192      	sbcs	r2, r2
 8002ef4:	9b02      	ldr	r3, [sp, #8]
 8002ef6:	4252      	negs	r2, r2
 8002ef8:	464f      	mov	r7, r9
 8002efa:	1a9c      	subs	r4, r3, r2
 8002efc:	e5f6      	b.n	8002aec <__aeabi_dsub+0xc4>
 8002efe:	2d00      	cmp	r5, #0
 8002f00:	d000      	beq.n	8002f04 <__aeabi_dsub+0x4dc>
 8002f02:	e0b7      	b.n	8003074 <__aeabi_dsub+0x64c>
 8002f04:	2a00      	cmp	r2, #0
 8002f06:	d100      	bne.n	8002f0a <__aeabi_dsub+0x4e2>
 8002f08:	e0f0      	b.n	80030ec <__aeabi_dsub+0x6c4>
 8002f0a:	2601      	movs	r6, #1
 8002f0c:	400e      	ands	r6, r1
 8002f0e:	4663      	mov	r3, ip
 8002f10:	9802      	ldr	r0, [sp, #8]
 8002f12:	08d9      	lsrs	r1, r3, #3
 8002f14:	0742      	lsls	r2, r0, #29
 8002f16:	430a      	orrs	r2, r1
 8002f18:	08c4      	lsrs	r4, r0, #3
 8002f1a:	e696      	b.n	8002c4a <__aeabi_dsub+0x222>
 8002f1c:	4c85      	ldr	r4, [pc, #532]	@ (8003134 <__aeabi_dsub+0x70c>)
 8002f1e:	1aff      	subs	r7, r7, r3
 8002f20:	4014      	ands	r4, r2
 8002f22:	0762      	lsls	r2, r4, #29
 8002f24:	08e4      	lsrs	r4, r4, #3
 8002f26:	e760      	b.n	8002dea <__aeabi_dsub+0x3c2>
 8002f28:	4981      	ldr	r1, [pc, #516]	@ (8003130 <__aeabi_dsub+0x708>)
 8002f2a:	428a      	cmp	r2, r1
 8002f2c:	d100      	bne.n	8002f30 <__aeabi_dsub+0x508>
 8002f2e:	e0c9      	b.n	80030c4 <__aeabi_dsub+0x69c>
 8002f30:	4663      	mov	r3, ip
 8002f32:	18c1      	adds	r1, r0, r3
 8002f34:	4281      	cmp	r1, r0
 8002f36:	4180      	sbcs	r0, r0
 8002f38:	9b02      	ldr	r3, [sp, #8]
 8002f3a:	4240      	negs	r0, r0
 8002f3c:	18e3      	adds	r3, r4, r3
 8002f3e:	181b      	adds	r3, r3, r0
 8002f40:	07dd      	lsls	r5, r3, #31
 8002f42:	085c      	lsrs	r4, r3, #1
 8002f44:	2307      	movs	r3, #7
 8002f46:	0849      	lsrs	r1, r1, #1
 8002f48:	430d      	orrs	r5, r1
 8002f4a:	0017      	movs	r7, r2
 8002f4c:	402b      	ands	r3, r5
 8002f4e:	e710      	b.n	8002d72 <__aeabi_dsub+0x34a>
 8002f50:	4663      	mov	r3, ip
 8002f52:	1a1d      	subs	r5, r3, r0
 8002f54:	45ac      	cmp	ip, r5
 8002f56:	4192      	sbcs	r2, r2
 8002f58:	2601      	movs	r6, #1
 8002f5a:	9b02      	ldr	r3, [sp, #8]
 8002f5c:	4252      	negs	r2, r2
 8002f5e:	1b1c      	subs	r4, r3, r4
 8002f60:	4688      	mov	r8, r1
 8002f62:	1aa4      	subs	r4, r4, r2
 8002f64:	400e      	ands	r6, r1
 8002f66:	e5c6      	b.n	8002af6 <__aeabi_dsub+0xce>
 8002f68:	4663      	mov	r3, ip
 8002f6a:	18c5      	adds	r5, r0, r3
 8002f6c:	9b02      	ldr	r3, [sp, #8]
 8002f6e:	4285      	cmp	r5, r0
 8002f70:	4180      	sbcs	r0, r0
 8002f72:	469c      	mov	ip, r3
 8002f74:	4240      	negs	r0, r0
 8002f76:	4464      	add	r4, ip
 8002f78:	1824      	adds	r4, r4, r0
 8002f7a:	2701      	movs	r7, #1
 8002f7c:	0223      	lsls	r3, r4, #8
 8002f7e:	d400      	bmi.n	8002f82 <__aeabi_dsub+0x55a>
 8002f80:	e6f5      	b.n	8002d6e <__aeabi_dsub+0x346>
 8002f82:	2702      	movs	r7, #2
 8002f84:	e641      	b.n	8002c0a <__aeabi_dsub+0x1e2>
 8002f86:	4663      	mov	r3, ip
 8002f88:	1ac5      	subs	r5, r0, r3
 8002f8a:	42a8      	cmp	r0, r5
 8002f8c:	4180      	sbcs	r0, r0
 8002f8e:	9b02      	ldr	r3, [sp, #8]
 8002f90:	4240      	negs	r0, r0
 8002f92:	1ae4      	subs	r4, r4, r3
 8002f94:	2701      	movs	r7, #1
 8002f96:	1a24      	subs	r4, r4, r0
 8002f98:	e5a8      	b.n	8002aec <__aeabi_dsub+0xc4>
 8002f9a:	9d02      	ldr	r5, [sp, #8]
 8002f9c:	4652      	mov	r2, sl
 8002f9e:	002b      	movs	r3, r5
 8002fa0:	3a20      	subs	r2, #32
 8002fa2:	40d3      	lsrs	r3, r2
 8002fa4:	0019      	movs	r1, r3
 8002fa6:	4653      	mov	r3, sl
 8002fa8:	2b20      	cmp	r3, #32
 8002faa:	d006      	beq.n	8002fba <__aeabi_dsub+0x592>
 8002fac:	2240      	movs	r2, #64	@ 0x40
 8002fae:	1ad2      	subs	r2, r2, r3
 8002fb0:	002b      	movs	r3, r5
 8002fb2:	4093      	lsls	r3, r2
 8002fb4:	4662      	mov	r2, ip
 8002fb6:	431a      	orrs	r2, r3
 8002fb8:	4693      	mov	fp, r2
 8002fba:	465d      	mov	r5, fp
 8002fbc:	1e6b      	subs	r3, r5, #1
 8002fbe:	419d      	sbcs	r5, r3
 8002fc0:	430d      	orrs	r5, r1
 8002fc2:	e615      	b.n	8002bf0 <__aeabi_dsub+0x1c8>
 8002fc4:	0762      	lsls	r2, r4, #29
 8002fc6:	08c0      	lsrs	r0, r0, #3
 8002fc8:	4302      	orrs	r2, r0
 8002fca:	08e4      	lsrs	r4, r4, #3
 8002fcc:	e70d      	b.n	8002dea <__aeabi_dsub+0x3c2>
 8002fce:	0011      	movs	r1, r2
 8002fd0:	0027      	movs	r7, r4
 8002fd2:	3920      	subs	r1, #32
 8002fd4:	40cf      	lsrs	r7, r1
 8002fd6:	2a20      	cmp	r2, #32
 8002fd8:	d005      	beq.n	8002fe6 <__aeabi_dsub+0x5be>
 8002fda:	2140      	movs	r1, #64	@ 0x40
 8002fdc:	1a8a      	subs	r2, r1, r2
 8002fde:	4094      	lsls	r4, r2
 8002fe0:	0025      	movs	r5, r4
 8002fe2:	4305      	orrs	r5, r0
 8002fe4:	9503      	str	r5, [sp, #12]
 8002fe6:	9d03      	ldr	r5, [sp, #12]
 8002fe8:	1e6a      	subs	r2, r5, #1
 8002fea:	4195      	sbcs	r5, r2
 8002fec:	433d      	orrs	r5, r7
 8002fee:	e77d      	b.n	8002eec <__aeabi_dsub+0x4c4>
 8002ff0:	2a00      	cmp	r2, #0
 8002ff2:	d100      	bne.n	8002ff6 <__aeabi_dsub+0x5ce>
 8002ff4:	e744      	b.n	8002e80 <__aeabi_dsub+0x458>
 8002ff6:	2601      	movs	r6, #1
 8002ff8:	400e      	ands	r6, r1
 8002ffa:	4663      	mov	r3, ip
 8002ffc:	08d9      	lsrs	r1, r3, #3
 8002ffe:	9b02      	ldr	r3, [sp, #8]
 8003000:	075a      	lsls	r2, r3, #29
 8003002:	430a      	orrs	r2, r1
 8003004:	08dc      	lsrs	r4, r3, #3
 8003006:	e6f0      	b.n	8002dea <__aeabi_dsub+0x3c2>
 8003008:	2a00      	cmp	r2, #0
 800300a:	d028      	beq.n	800305e <__aeabi_dsub+0x636>
 800300c:	4662      	mov	r2, ip
 800300e:	9f02      	ldr	r7, [sp, #8]
 8003010:	08c0      	lsrs	r0, r0, #3
 8003012:	433a      	orrs	r2, r7
 8003014:	d100      	bne.n	8003018 <__aeabi_dsub+0x5f0>
 8003016:	e6dc      	b.n	8002dd2 <__aeabi_dsub+0x3aa>
 8003018:	0762      	lsls	r2, r4, #29
 800301a:	4310      	orrs	r0, r2
 800301c:	2280      	movs	r2, #128	@ 0x80
 800301e:	08e4      	lsrs	r4, r4, #3
 8003020:	0312      	lsls	r2, r2, #12
 8003022:	4214      	tst	r4, r2
 8003024:	d009      	beq.n	800303a <__aeabi_dsub+0x612>
 8003026:	08fd      	lsrs	r5, r7, #3
 8003028:	4215      	tst	r5, r2
 800302a:	d106      	bne.n	800303a <__aeabi_dsub+0x612>
 800302c:	4663      	mov	r3, ip
 800302e:	2601      	movs	r6, #1
 8003030:	002c      	movs	r4, r5
 8003032:	08d8      	lsrs	r0, r3, #3
 8003034:	077b      	lsls	r3, r7, #29
 8003036:	4318      	orrs	r0, r3
 8003038:	400e      	ands	r6, r1
 800303a:	0f42      	lsrs	r2, r0, #29
 800303c:	00c0      	lsls	r0, r0, #3
 800303e:	08c0      	lsrs	r0, r0, #3
 8003040:	0752      	lsls	r2, r2, #29
 8003042:	4302      	orrs	r2, r0
 8003044:	e601      	b.n	8002c4a <__aeabi_dsub+0x222>
 8003046:	4663      	mov	r3, ip
 8003048:	1a1d      	subs	r5, r3, r0
 800304a:	45ac      	cmp	ip, r5
 800304c:	4192      	sbcs	r2, r2
 800304e:	9b02      	ldr	r3, [sp, #8]
 8003050:	4252      	negs	r2, r2
 8003052:	1b1c      	subs	r4, r3, r4
 8003054:	000e      	movs	r6, r1
 8003056:	4688      	mov	r8, r1
 8003058:	2701      	movs	r7, #1
 800305a:	1aa4      	subs	r4, r4, r2
 800305c:	e546      	b.n	8002aec <__aeabi_dsub+0xc4>
 800305e:	4663      	mov	r3, ip
 8003060:	08d9      	lsrs	r1, r3, #3
 8003062:	9b02      	ldr	r3, [sp, #8]
 8003064:	075a      	lsls	r2, r3, #29
 8003066:	430a      	orrs	r2, r1
 8003068:	08dc      	lsrs	r4, r3, #3
 800306a:	e5ee      	b.n	8002c4a <__aeabi_dsub+0x222>
 800306c:	4663      	mov	r3, ip
 800306e:	9c02      	ldr	r4, [sp, #8]
 8003070:	9303      	str	r3, [sp, #12]
 8003072:	e6c7      	b.n	8002e04 <__aeabi_dsub+0x3dc>
 8003074:	08c0      	lsrs	r0, r0, #3
 8003076:	2a00      	cmp	r2, #0
 8003078:	d100      	bne.n	800307c <__aeabi_dsub+0x654>
 800307a:	e6aa      	b.n	8002dd2 <__aeabi_dsub+0x3aa>
 800307c:	0762      	lsls	r2, r4, #29
 800307e:	4310      	orrs	r0, r2
 8003080:	2280      	movs	r2, #128	@ 0x80
 8003082:	08e4      	lsrs	r4, r4, #3
 8003084:	0312      	lsls	r2, r2, #12
 8003086:	4214      	tst	r4, r2
 8003088:	d0d7      	beq.n	800303a <__aeabi_dsub+0x612>
 800308a:	9f02      	ldr	r7, [sp, #8]
 800308c:	08fd      	lsrs	r5, r7, #3
 800308e:	4215      	tst	r5, r2
 8003090:	d1d3      	bne.n	800303a <__aeabi_dsub+0x612>
 8003092:	4663      	mov	r3, ip
 8003094:	2601      	movs	r6, #1
 8003096:	08d8      	lsrs	r0, r3, #3
 8003098:	077b      	lsls	r3, r7, #29
 800309a:	002c      	movs	r4, r5
 800309c:	4318      	orrs	r0, r3
 800309e:	400e      	ands	r6, r1
 80030a0:	e7cb      	b.n	800303a <__aeabi_dsub+0x612>
 80030a2:	000a      	movs	r2, r1
 80030a4:	0027      	movs	r7, r4
 80030a6:	3a20      	subs	r2, #32
 80030a8:	40d7      	lsrs	r7, r2
 80030aa:	2920      	cmp	r1, #32
 80030ac:	d005      	beq.n	80030ba <__aeabi_dsub+0x692>
 80030ae:	2240      	movs	r2, #64	@ 0x40
 80030b0:	1a52      	subs	r2, r2, r1
 80030b2:	4094      	lsls	r4, r2
 80030b4:	0025      	movs	r5, r4
 80030b6:	4305      	orrs	r5, r0
 80030b8:	9503      	str	r5, [sp, #12]
 80030ba:	9d03      	ldr	r5, [sp, #12]
 80030bc:	1e6a      	subs	r2, r5, #1
 80030be:	4195      	sbcs	r5, r2
 80030c0:	432f      	orrs	r7, r5
 80030c2:	e610      	b.n	8002ce6 <__aeabi_dsub+0x2be>
 80030c4:	0014      	movs	r4, r2
 80030c6:	2500      	movs	r5, #0
 80030c8:	2200      	movs	r2, #0
 80030ca:	e556      	b.n	8002b7a <__aeabi_dsub+0x152>
 80030cc:	9b02      	ldr	r3, [sp, #8]
 80030ce:	4460      	add	r0, ip
 80030d0:	4699      	mov	r9, r3
 80030d2:	4560      	cmp	r0, ip
 80030d4:	4192      	sbcs	r2, r2
 80030d6:	444c      	add	r4, r9
 80030d8:	4252      	negs	r2, r2
 80030da:	0005      	movs	r5, r0
 80030dc:	18a4      	adds	r4, r4, r2
 80030de:	e74c      	b.n	8002f7a <__aeabi_dsub+0x552>
 80030e0:	001a      	movs	r2, r3
 80030e2:	001c      	movs	r4, r3
 80030e4:	432a      	orrs	r2, r5
 80030e6:	d000      	beq.n	80030ea <__aeabi_dsub+0x6c2>
 80030e8:	e6b3      	b.n	8002e52 <__aeabi_dsub+0x42a>
 80030ea:	e6c9      	b.n	8002e80 <__aeabi_dsub+0x458>
 80030ec:	2480      	movs	r4, #128	@ 0x80
 80030ee:	2600      	movs	r6, #0
 80030f0:	0324      	lsls	r4, r4, #12
 80030f2:	e5ae      	b.n	8002c52 <__aeabi_dsub+0x22a>
 80030f4:	2120      	movs	r1, #32
 80030f6:	2500      	movs	r5, #0
 80030f8:	1a09      	subs	r1, r1, r0
 80030fa:	e517      	b.n	8002b2c <__aeabi_dsub+0x104>
 80030fc:	2200      	movs	r2, #0
 80030fe:	2500      	movs	r5, #0
 8003100:	4c0b      	ldr	r4, [pc, #44]	@ (8003130 <__aeabi_dsub+0x708>)
 8003102:	e53a      	b.n	8002b7a <__aeabi_dsub+0x152>
 8003104:	2d00      	cmp	r5, #0
 8003106:	d100      	bne.n	800310a <__aeabi_dsub+0x6e2>
 8003108:	e5f6      	b.n	8002cf8 <__aeabi_dsub+0x2d0>
 800310a:	464b      	mov	r3, r9
 800310c:	1bda      	subs	r2, r3, r7
 800310e:	4692      	mov	sl, r2
 8003110:	2f00      	cmp	r7, #0
 8003112:	d100      	bne.n	8003116 <__aeabi_dsub+0x6ee>
 8003114:	e66f      	b.n	8002df6 <__aeabi_dsub+0x3ce>
 8003116:	2a38      	cmp	r2, #56	@ 0x38
 8003118:	dc05      	bgt.n	8003126 <__aeabi_dsub+0x6fe>
 800311a:	2680      	movs	r6, #128	@ 0x80
 800311c:	0436      	lsls	r6, r6, #16
 800311e:	4334      	orrs	r4, r6
 8003120:	4688      	mov	r8, r1
 8003122:	000e      	movs	r6, r1
 8003124:	e6d1      	b.n	8002eca <__aeabi_dsub+0x4a2>
 8003126:	4688      	mov	r8, r1
 8003128:	000e      	movs	r6, r1
 800312a:	2501      	movs	r5, #1
 800312c:	e6de      	b.n	8002eec <__aeabi_dsub+0x4c4>
 800312e:	46c0      	nop			@ (mov r8, r8)
 8003130:	000007ff 	.word	0x000007ff
 8003134:	ff7fffff 	.word	0xff7fffff
 8003138:	000007fe 	.word	0x000007fe
 800313c:	2d00      	cmp	r5, #0
 800313e:	d100      	bne.n	8003142 <__aeabi_dsub+0x71a>
 8003140:	e668      	b.n	8002e14 <__aeabi_dsub+0x3ec>
 8003142:	464b      	mov	r3, r9
 8003144:	1bd9      	subs	r1, r3, r7
 8003146:	2f00      	cmp	r7, #0
 8003148:	d101      	bne.n	800314e <__aeabi_dsub+0x726>
 800314a:	468a      	mov	sl, r1
 800314c:	e5a7      	b.n	8002c9e <__aeabi_dsub+0x276>
 800314e:	2701      	movs	r7, #1
 8003150:	2938      	cmp	r1, #56	@ 0x38
 8003152:	dd00      	ble.n	8003156 <__aeabi_dsub+0x72e>
 8003154:	e5c7      	b.n	8002ce6 <__aeabi_dsub+0x2be>
 8003156:	2280      	movs	r2, #128	@ 0x80
 8003158:	0412      	lsls	r2, r2, #16
 800315a:	4314      	orrs	r4, r2
 800315c:	e5af      	b.n	8002cbe <__aeabi_dsub+0x296>
 800315e:	46c0      	nop			@ (mov r8, r8)

08003160 <__aeabi_d2iz>:
 8003160:	000b      	movs	r3, r1
 8003162:	0002      	movs	r2, r0
 8003164:	b570      	push	{r4, r5, r6, lr}
 8003166:	4d16      	ldr	r5, [pc, #88]	@ (80031c0 <__aeabi_d2iz+0x60>)
 8003168:	030c      	lsls	r4, r1, #12
 800316a:	b082      	sub	sp, #8
 800316c:	0049      	lsls	r1, r1, #1
 800316e:	2000      	movs	r0, #0
 8003170:	9200      	str	r2, [sp, #0]
 8003172:	9301      	str	r3, [sp, #4]
 8003174:	0b24      	lsrs	r4, r4, #12
 8003176:	0d49      	lsrs	r1, r1, #21
 8003178:	0fde      	lsrs	r6, r3, #31
 800317a:	42a9      	cmp	r1, r5
 800317c:	dd04      	ble.n	8003188 <__aeabi_d2iz+0x28>
 800317e:	4811      	ldr	r0, [pc, #68]	@ (80031c4 <__aeabi_d2iz+0x64>)
 8003180:	4281      	cmp	r1, r0
 8003182:	dd03      	ble.n	800318c <__aeabi_d2iz+0x2c>
 8003184:	4b10      	ldr	r3, [pc, #64]	@ (80031c8 <__aeabi_d2iz+0x68>)
 8003186:	18f0      	adds	r0, r6, r3
 8003188:	b002      	add	sp, #8
 800318a:	bd70      	pop	{r4, r5, r6, pc}
 800318c:	2080      	movs	r0, #128	@ 0x80
 800318e:	0340      	lsls	r0, r0, #13
 8003190:	4320      	orrs	r0, r4
 8003192:	4c0e      	ldr	r4, [pc, #56]	@ (80031cc <__aeabi_d2iz+0x6c>)
 8003194:	1a64      	subs	r4, r4, r1
 8003196:	2c1f      	cmp	r4, #31
 8003198:	dd08      	ble.n	80031ac <__aeabi_d2iz+0x4c>
 800319a:	4b0d      	ldr	r3, [pc, #52]	@ (80031d0 <__aeabi_d2iz+0x70>)
 800319c:	1a5b      	subs	r3, r3, r1
 800319e:	40d8      	lsrs	r0, r3
 80031a0:	0003      	movs	r3, r0
 80031a2:	4258      	negs	r0, r3
 80031a4:	2e00      	cmp	r6, #0
 80031a6:	d1ef      	bne.n	8003188 <__aeabi_d2iz+0x28>
 80031a8:	0018      	movs	r0, r3
 80031aa:	e7ed      	b.n	8003188 <__aeabi_d2iz+0x28>
 80031ac:	4b09      	ldr	r3, [pc, #36]	@ (80031d4 <__aeabi_d2iz+0x74>)
 80031ae:	9a00      	ldr	r2, [sp, #0]
 80031b0:	469c      	mov	ip, r3
 80031b2:	0003      	movs	r3, r0
 80031b4:	4461      	add	r1, ip
 80031b6:	408b      	lsls	r3, r1
 80031b8:	40e2      	lsrs	r2, r4
 80031ba:	4313      	orrs	r3, r2
 80031bc:	e7f1      	b.n	80031a2 <__aeabi_d2iz+0x42>
 80031be:	46c0      	nop			@ (mov r8, r8)
 80031c0:	000003fe 	.word	0x000003fe
 80031c4:	0000041d 	.word	0x0000041d
 80031c8:	7fffffff 	.word	0x7fffffff
 80031cc:	00000433 	.word	0x00000433
 80031d0:	00000413 	.word	0x00000413
 80031d4:	fffffbed 	.word	0xfffffbed

080031d8 <__aeabi_i2d>:
 80031d8:	b570      	push	{r4, r5, r6, lr}
 80031da:	2800      	cmp	r0, #0
 80031dc:	d016      	beq.n	800320c <__aeabi_i2d+0x34>
 80031de:	17c3      	asrs	r3, r0, #31
 80031e0:	18c5      	adds	r5, r0, r3
 80031e2:	405d      	eors	r5, r3
 80031e4:	0fc4      	lsrs	r4, r0, #31
 80031e6:	0028      	movs	r0, r5
 80031e8:	f000 f914 	bl	8003414 <__clzsi2>
 80031ec:	4b10      	ldr	r3, [pc, #64]	@ (8003230 <__aeabi_i2d+0x58>)
 80031ee:	1a1b      	subs	r3, r3, r0
 80031f0:	055b      	lsls	r3, r3, #21
 80031f2:	0d5b      	lsrs	r3, r3, #21
 80031f4:	280a      	cmp	r0, #10
 80031f6:	dc14      	bgt.n	8003222 <__aeabi_i2d+0x4a>
 80031f8:	0002      	movs	r2, r0
 80031fa:	002e      	movs	r6, r5
 80031fc:	3215      	adds	r2, #21
 80031fe:	4096      	lsls	r6, r2
 8003200:	220b      	movs	r2, #11
 8003202:	1a12      	subs	r2, r2, r0
 8003204:	40d5      	lsrs	r5, r2
 8003206:	032d      	lsls	r5, r5, #12
 8003208:	0b2d      	lsrs	r5, r5, #12
 800320a:	e003      	b.n	8003214 <__aeabi_i2d+0x3c>
 800320c:	2400      	movs	r4, #0
 800320e:	2300      	movs	r3, #0
 8003210:	2500      	movs	r5, #0
 8003212:	2600      	movs	r6, #0
 8003214:	051b      	lsls	r3, r3, #20
 8003216:	432b      	orrs	r3, r5
 8003218:	07e4      	lsls	r4, r4, #31
 800321a:	4323      	orrs	r3, r4
 800321c:	0030      	movs	r0, r6
 800321e:	0019      	movs	r1, r3
 8003220:	bd70      	pop	{r4, r5, r6, pc}
 8003222:	380b      	subs	r0, #11
 8003224:	4085      	lsls	r5, r0
 8003226:	032d      	lsls	r5, r5, #12
 8003228:	2600      	movs	r6, #0
 800322a:	0b2d      	lsrs	r5, r5, #12
 800322c:	e7f2      	b.n	8003214 <__aeabi_i2d+0x3c>
 800322e:	46c0      	nop			@ (mov r8, r8)
 8003230:	0000041e 	.word	0x0000041e

08003234 <__aeabi_ui2d>:
 8003234:	b510      	push	{r4, lr}
 8003236:	1e04      	subs	r4, r0, #0
 8003238:	d010      	beq.n	800325c <__aeabi_ui2d+0x28>
 800323a:	f000 f8eb 	bl	8003414 <__clzsi2>
 800323e:	4b0e      	ldr	r3, [pc, #56]	@ (8003278 <__aeabi_ui2d+0x44>)
 8003240:	1a1b      	subs	r3, r3, r0
 8003242:	055b      	lsls	r3, r3, #21
 8003244:	0d5b      	lsrs	r3, r3, #21
 8003246:	280a      	cmp	r0, #10
 8003248:	dc0f      	bgt.n	800326a <__aeabi_ui2d+0x36>
 800324a:	220b      	movs	r2, #11
 800324c:	0021      	movs	r1, r4
 800324e:	1a12      	subs	r2, r2, r0
 8003250:	40d1      	lsrs	r1, r2
 8003252:	3015      	adds	r0, #21
 8003254:	030a      	lsls	r2, r1, #12
 8003256:	4084      	lsls	r4, r0
 8003258:	0b12      	lsrs	r2, r2, #12
 800325a:	e001      	b.n	8003260 <__aeabi_ui2d+0x2c>
 800325c:	2300      	movs	r3, #0
 800325e:	2200      	movs	r2, #0
 8003260:	051b      	lsls	r3, r3, #20
 8003262:	4313      	orrs	r3, r2
 8003264:	0020      	movs	r0, r4
 8003266:	0019      	movs	r1, r3
 8003268:	bd10      	pop	{r4, pc}
 800326a:	0022      	movs	r2, r4
 800326c:	380b      	subs	r0, #11
 800326e:	4082      	lsls	r2, r0
 8003270:	0312      	lsls	r2, r2, #12
 8003272:	2400      	movs	r4, #0
 8003274:	0b12      	lsrs	r2, r2, #12
 8003276:	e7f3      	b.n	8003260 <__aeabi_ui2d+0x2c>
 8003278:	0000041e 	.word	0x0000041e

0800327c <__aeabi_f2d>:
 800327c:	b570      	push	{r4, r5, r6, lr}
 800327e:	0242      	lsls	r2, r0, #9
 8003280:	0043      	lsls	r3, r0, #1
 8003282:	0fc4      	lsrs	r4, r0, #31
 8003284:	20fe      	movs	r0, #254	@ 0xfe
 8003286:	0e1b      	lsrs	r3, r3, #24
 8003288:	1c59      	adds	r1, r3, #1
 800328a:	0a55      	lsrs	r5, r2, #9
 800328c:	4208      	tst	r0, r1
 800328e:	d00c      	beq.n	80032aa <__aeabi_f2d+0x2e>
 8003290:	21e0      	movs	r1, #224	@ 0xe0
 8003292:	0089      	lsls	r1, r1, #2
 8003294:	468c      	mov	ip, r1
 8003296:	076d      	lsls	r5, r5, #29
 8003298:	0b12      	lsrs	r2, r2, #12
 800329a:	4463      	add	r3, ip
 800329c:	051b      	lsls	r3, r3, #20
 800329e:	4313      	orrs	r3, r2
 80032a0:	07e4      	lsls	r4, r4, #31
 80032a2:	4323      	orrs	r3, r4
 80032a4:	0028      	movs	r0, r5
 80032a6:	0019      	movs	r1, r3
 80032a8:	bd70      	pop	{r4, r5, r6, pc}
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d114      	bne.n	80032d8 <__aeabi_f2d+0x5c>
 80032ae:	2d00      	cmp	r5, #0
 80032b0:	d01b      	beq.n	80032ea <__aeabi_f2d+0x6e>
 80032b2:	0028      	movs	r0, r5
 80032b4:	f000 f8ae 	bl	8003414 <__clzsi2>
 80032b8:	280a      	cmp	r0, #10
 80032ba:	dc1c      	bgt.n	80032f6 <__aeabi_f2d+0x7a>
 80032bc:	230b      	movs	r3, #11
 80032be:	002a      	movs	r2, r5
 80032c0:	1a1b      	subs	r3, r3, r0
 80032c2:	40da      	lsrs	r2, r3
 80032c4:	0003      	movs	r3, r0
 80032c6:	3315      	adds	r3, #21
 80032c8:	409d      	lsls	r5, r3
 80032ca:	4b0e      	ldr	r3, [pc, #56]	@ (8003304 <__aeabi_f2d+0x88>)
 80032cc:	0312      	lsls	r2, r2, #12
 80032ce:	1a1b      	subs	r3, r3, r0
 80032d0:	055b      	lsls	r3, r3, #21
 80032d2:	0b12      	lsrs	r2, r2, #12
 80032d4:	0d5b      	lsrs	r3, r3, #21
 80032d6:	e7e1      	b.n	800329c <__aeabi_f2d+0x20>
 80032d8:	2d00      	cmp	r5, #0
 80032da:	d009      	beq.n	80032f0 <__aeabi_f2d+0x74>
 80032dc:	0b13      	lsrs	r3, r2, #12
 80032de:	2280      	movs	r2, #128	@ 0x80
 80032e0:	0312      	lsls	r2, r2, #12
 80032e2:	431a      	orrs	r2, r3
 80032e4:	076d      	lsls	r5, r5, #29
 80032e6:	4b08      	ldr	r3, [pc, #32]	@ (8003308 <__aeabi_f2d+0x8c>)
 80032e8:	e7d8      	b.n	800329c <__aeabi_f2d+0x20>
 80032ea:	2300      	movs	r3, #0
 80032ec:	2200      	movs	r2, #0
 80032ee:	e7d5      	b.n	800329c <__aeabi_f2d+0x20>
 80032f0:	2200      	movs	r2, #0
 80032f2:	4b05      	ldr	r3, [pc, #20]	@ (8003308 <__aeabi_f2d+0x8c>)
 80032f4:	e7d2      	b.n	800329c <__aeabi_f2d+0x20>
 80032f6:	0003      	movs	r3, r0
 80032f8:	002a      	movs	r2, r5
 80032fa:	3b0b      	subs	r3, #11
 80032fc:	409a      	lsls	r2, r3
 80032fe:	2500      	movs	r5, #0
 8003300:	e7e3      	b.n	80032ca <__aeabi_f2d+0x4e>
 8003302:	46c0      	nop			@ (mov r8, r8)
 8003304:	00000389 	.word	0x00000389
 8003308:	000007ff 	.word	0x000007ff

0800330c <__aeabi_d2f>:
 800330c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800330e:	004b      	lsls	r3, r1, #1
 8003310:	030f      	lsls	r7, r1, #12
 8003312:	0d5b      	lsrs	r3, r3, #21
 8003314:	4c3b      	ldr	r4, [pc, #236]	@ (8003404 <__aeabi_d2f+0xf8>)
 8003316:	0f45      	lsrs	r5, r0, #29
 8003318:	b083      	sub	sp, #12
 800331a:	0a7f      	lsrs	r7, r7, #9
 800331c:	1c5e      	adds	r6, r3, #1
 800331e:	432f      	orrs	r7, r5
 8003320:	9000      	str	r0, [sp, #0]
 8003322:	9101      	str	r1, [sp, #4]
 8003324:	0fca      	lsrs	r2, r1, #31
 8003326:	00c5      	lsls	r5, r0, #3
 8003328:	4226      	tst	r6, r4
 800332a:	d00b      	beq.n	8003344 <__aeabi_d2f+0x38>
 800332c:	4936      	ldr	r1, [pc, #216]	@ (8003408 <__aeabi_d2f+0xfc>)
 800332e:	185c      	adds	r4, r3, r1
 8003330:	2cfe      	cmp	r4, #254	@ 0xfe
 8003332:	dd13      	ble.n	800335c <__aeabi_d2f+0x50>
 8003334:	20ff      	movs	r0, #255	@ 0xff
 8003336:	2300      	movs	r3, #0
 8003338:	05c0      	lsls	r0, r0, #23
 800333a:	4318      	orrs	r0, r3
 800333c:	07d2      	lsls	r2, r2, #31
 800333e:	4310      	orrs	r0, r2
 8003340:	b003      	add	sp, #12
 8003342:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003344:	2b00      	cmp	r3, #0
 8003346:	d102      	bne.n	800334e <__aeabi_d2f+0x42>
 8003348:	2000      	movs	r0, #0
 800334a:	2300      	movs	r3, #0
 800334c:	e7f4      	b.n	8003338 <__aeabi_d2f+0x2c>
 800334e:	433d      	orrs	r5, r7
 8003350:	d0f0      	beq.n	8003334 <__aeabi_d2f+0x28>
 8003352:	2380      	movs	r3, #128	@ 0x80
 8003354:	03db      	lsls	r3, r3, #15
 8003356:	20ff      	movs	r0, #255	@ 0xff
 8003358:	433b      	orrs	r3, r7
 800335a:	e7ed      	b.n	8003338 <__aeabi_d2f+0x2c>
 800335c:	2c00      	cmp	r4, #0
 800335e:	dd14      	ble.n	800338a <__aeabi_d2f+0x7e>
 8003360:	9b00      	ldr	r3, [sp, #0]
 8003362:	00ff      	lsls	r7, r7, #3
 8003364:	019b      	lsls	r3, r3, #6
 8003366:	1e58      	subs	r0, r3, #1
 8003368:	4183      	sbcs	r3, r0
 800336a:	0f69      	lsrs	r1, r5, #29
 800336c:	433b      	orrs	r3, r7
 800336e:	430b      	orrs	r3, r1
 8003370:	0759      	lsls	r1, r3, #29
 8003372:	d041      	beq.n	80033f8 <__aeabi_d2f+0xec>
 8003374:	210f      	movs	r1, #15
 8003376:	4019      	ands	r1, r3
 8003378:	2904      	cmp	r1, #4
 800337a:	d028      	beq.n	80033ce <__aeabi_d2f+0xc2>
 800337c:	3304      	adds	r3, #4
 800337e:	0159      	lsls	r1, r3, #5
 8003380:	d525      	bpl.n	80033ce <__aeabi_d2f+0xc2>
 8003382:	3401      	adds	r4, #1
 8003384:	2300      	movs	r3, #0
 8003386:	b2e0      	uxtb	r0, r4
 8003388:	e7d6      	b.n	8003338 <__aeabi_d2f+0x2c>
 800338a:	0021      	movs	r1, r4
 800338c:	3117      	adds	r1, #23
 800338e:	dbdb      	blt.n	8003348 <__aeabi_d2f+0x3c>
 8003390:	2180      	movs	r1, #128	@ 0x80
 8003392:	201e      	movs	r0, #30
 8003394:	0409      	lsls	r1, r1, #16
 8003396:	4339      	orrs	r1, r7
 8003398:	1b00      	subs	r0, r0, r4
 800339a:	281f      	cmp	r0, #31
 800339c:	dd1b      	ble.n	80033d6 <__aeabi_d2f+0xca>
 800339e:	2602      	movs	r6, #2
 80033a0:	4276      	negs	r6, r6
 80033a2:	1b34      	subs	r4, r6, r4
 80033a4:	000e      	movs	r6, r1
 80033a6:	40e6      	lsrs	r6, r4
 80033a8:	0034      	movs	r4, r6
 80033aa:	2820      	cmp	r0, #32
 80033ac:	d004      	beq.n	80033b8 <__aeabi_d2f+0xac>
 80033ae:	4817      	ldr	r0, [pc, #92]	@ (800340c <__aeabi_d2f+0x100>)
 80033b0:	4684      	mov	ip, r0
 80033b2:	4463      	add	r3, ip
 80033b4:	4099      	lsls	r1, r3
 80033b6:	430d      	orrs	r5, r1
 80033b8:	002b      	movs	r3, r5
 80033ba:	1e59      	subs	r1, r3, #1
 80033bc:	418b      	sbcs	r3, r1
 80033be:	4323      	orrs	r3, r4
 80033c0:	0759      	lsls	r1, r3, #29
 80033c2:	d015      	beq.n	80033f0 <__aeabi_d2f+0xe4>
 80033c4:	210f      	movs	r1, #15
 80033c6:	2400      	movs	r4, #0
 80033c8:	4019      	ands	r1, r3
 80033ca:	2904      	cmp	r1, #4
 80033cc:	d117      	bne.n	80033fe <__aeabi_d2f+0xf2>
 80033ce:	019b      	lsls	r3, r3, #6
 80033d0:	0a5b      	lsrs	r3, r3, #9
 80033d2:	b2e0      	uxtb	r0, r4
 80033d4:	e7b0      	b.n	8003338 <__aeabi_d2f+0x2c>
 80033d6:	4c0e      	ldr	r4, [pc, #56]	@ (8003410 <__aeabi_d2f+0x104>)
 80033d8:	191c      	adds	r4, r3, r4
 80033da:	002b      	movs	r3, r5
 80033dc:	40a5      	lsls	r5, r4
 80033de:	40c3      	lsrs	r3, r0
 80033e0:	40a1      	lsls	r1, r4
 80033e2:	1e68      	subs	r0, r5, #1
 80033e4:	4185      	sbcs	r5, r0
 80033e6:	4329      	orrs	r1, r5
 80033e8:	430b      	orrs	r3, r1
 80033ea:	2400      	movs	r4, #0
 80033ec:	0759      	lsls	r1, r3, #29
 80033ee:	d1c1      	bne.n	8003374 <__aeabi_d2f+0x68>
 80033f0:	019b      	lsls	r3, r3, #6
 80033f2:	2000      	movs	r0, #0
 80033f4:	0a5b      	lsrs	r3, r3, #9
 80033f6:	e79f      	b.n	8003338 <__aeabi_d2f+0x2c>
 80033f8:	08db      	lsrs	r3, r3, #3
 80033fa:	b2e0      	uxtb	r0, r4
 80033fc:	e79c      	b.n	8003338 <__aeabi_d2f+0x2c>
 80033fe:	3304      	adds	r3, #4
 8003400:	e7e5      	b.n	80033ce <__aeabi_d2f+0xc2>
 8003402:	46c0      	nop			@ (mov r8, r8)
 8003404:	000007fe 	.word	0x000007fe
 8003408:	fffffc80 	.word	0xfffffc80
 800340c:	fffffca2 	.word	0xfffffca2
 8003410:	fffffc82 	.word	0xfffffc82

08003414 <__clzsi2>:
 8003414:	211c      	movs	r1, #28
 8003416:	2301      	movs	r3, #1
 8003418:	041b      	lsls	r3, r3, #16
 800341a:	4298      	cmp	r0, r3
 800341c:	d301      	bcc.n	8003422 <__clzsi2+0xe>
 800341e:	0c00      	lsrs	r0, r0, #16
 8003420:	3910      	subs	r1, #16
 8003422:	0a1b      	lsrs	r3, r3, #8
 8003424:	4298      	cmp	r0, r3
 8003426:	d301      	bcc.n	800342c <__clzsi2+0x18>
 8003428:	0a00      	lsrs	r0, r0, #8
 800342a:	3908      	subs	r1, #8
 800342c:	091b      	lsrs	r3, r3, #4
 800342e:	4298      	cmp	r0, r3
 8003430:	d301      	bcc.n	8003436 <__clzsi2+0x22>
 8003432:	0900      	lsrs	r0, r0, #4
 8003434:	3904      	subs	r1, #4
 8003436:	a202      	add	r2, pc, #8	@ (adr r2, 8003440 <__clzsi2+0x2c>)
 8003438:	5c10      	ldrb	r0, [r2, r0]
 800343a:	1840      	adds	r0, r0, r1
 800343c:	4770      	bx	lr
 800343e:	46c0      	nop			@ (mov r8, r8)
 8003440:	02020304 	.word	0x02020304
 8003444:	01010101 	.word	0x01010101
	...

08003450 <__clzdi2>:
 8003450:	b510      	push	{r4, lr}
 8003452:	2900      	cmp	r1, #0
 8003454:	d103      	bne.n	800345e <__clzdi2+0xe>
 8003456:	f7ff ffdd 	bl	8003414 <__clzsi2>
 800345a:	3020      	adds	r0, #32
 800345c:	e002      	b.n	8003464 <__clzdi2+0x14>
 800345e:	0008      	movs	r0, r1
 8003460:	f7ff ffd8 	bl	8003414 <__clzsi2>
 8003464:	bd10      	pop	{r4, pc}
 8003466:	46c0      	nop			@ (mov r8, r8)

08003468 <SELECT>:
 * SPI functions
 **************************************/

/* slave select */
static void SELECT(void)
{
 8003468:	b580      	push	{r7, lr}
 800346a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_RESET);
 800346c:	23a0      	movs	r3, #160	@ 0xa0
 800346e:	05db      	lsls	r3, r3, #23
 8003470:	2200      	movs	r2, #0
 8003472:	2110      	movs	r1, #16
 8003474:	0018      	movs	r0, r3
 8003476:	f00b f9d2 	bl	800e81e <HAL_GPIO_WritePin>
	HAL_Delay(1);
 800347a:	2001      	movs	r0, #1
 800347c:	f00a fc02 	bl	800dc84 <HAL_Delay>
}
 8003480:	46c0      	nop			@ (mov r8, r8)
 8003482:	46bd      	mov	sp, r7
 8003484:	bd80      	pop	{r7, pc}

08003486 <DESELECT>:

/* slave deselect */
static void DESELECT(void)
{
 8003486:	b580      	push	{r7, lr}
 8003488:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_SET);
 800348a:	23a0      	movs	r3, #160	@ 0xa0
 800348c:	05db      	lsls	r3, r3, #23
 800348e:	2201      	movs	r2, #1
 8003490:	2110      	movs	r1, #16
 8003492:	0018      	movs	r0, r3
 8003494:	f00b f9c3 	bl	800e81e <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8003498:	2001      	movs	r0, #1
 800349a:	f00a fbf3 	bl	800dc84 <HAL_Delay>
}
 800349e:	46c0      	nop			@ (mov r8, r8)
 80034a0:	46bd      	mov	sp, r7
 80034a2:	bd80      	pop	{r7, pc}

080034a4 <SPI_TxByte>:

/* SPI transmit a byte */
static void SPI_TxByte(uint8_t data)
{
 80034a4:	b580      	push	{r7, lr}
 80034a6:	b082      	sub	sp, #8
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	0002      	movs	r2, r0
 80034ac:	1dfb      	adds	r3, r7, #7
 80034ae:	701a      	strb	r2, [r3, #0]
	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 80034b0:	46c0      	nop			@ (mov r8, r8)
 80034b2:	4b08      	ldr	r3, [pc, #32]	@ (80034d4 <SPI_TxByte+0x30>)
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	689b      	ldr	r3, [r3, #8]
 80034b8:	2202      	movs	r2, #2
 80034ba:	4013      	ands	r3, r2
 80034bc:	2b02      	cmp	r3, #2
 80034be:	d1f8      	bne.n	80034b2 <SPI_TxByte+0xe>
	HAL_SPI_Transmit(HSPI_SDCARD, &data, 1, SPI_TIMEOUT);
 80034c0:	1df9      	adds	r1, r7, #7
 80034c2:	4804      	ldr	r0, [pc, #16]	@ (80034d4 <SPI_TxByte+0x30>)
 80034c4:	2364      	movs	r3, #100	@ 0x64
 80034c6:	2201      	movs	r2, #1
 80034c8:	f00e f83e 	bl	8011548 <HAL_SPI_Transmit>
}
 80034cc:	46c0      	nop			@ (mov r8, r8)
 80034ce:	46bd      	mov	sp, r7
 80034d0:	b002      	add	sp, #8
 80034d2:	bd80      	pop	{r7, pc}
 80034d4:	200008f4 	.word	0x200008f4

080034d8 <SPI_TxBuffer>:

/* SPI transmit buffer */
static void SPI_TxBuffer(uint8_t *buffer, uint16_t len)
{
 80034d8:	b580      	push	{r7, lr}
 80034da:	b082      	sub	sp, #8
 80034dc:	af00      	add	r7, sp, #0
 80034de:	6078      	str	r0, [r7, #4]
 80034e0:	000a      	movs	r2, r1
 80034e2:	1cbb      	adds	r3, r7, #2
 80034e4:	801a      	strh	r2, [r3, #0]
	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 80034e6:	46c0      	nop			@ (mov r8, r8)
 80034e8:	4b08      	ldr	r3, [pc, #32]	@ (800350c <SPI_TxBuffer+0x34>)
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	689b      	ldr	r3, [r3, #8]
 80034ee:	2202      	movs	r2, #2
 80034f0:	4013      	ands	r3, r2
 80034f2:	2b02      	cmp	r3, #2
 80034f4:	d1f8      	bne.n	80034e8 <SPI_TxBuffer+0x10>
	HAL_SPI_Transmit(HSPI_SDCARD, buffer, len, SPI_TIMEOUT);
 80034f6:	1cbb      	adds	r3, r7, #2
 80034f8:	881a      	ldrh	r2, [r3, #0]
 80034fa:	6879      	ldr	r1, [r7, #4]
 80034fc:	4803      	ldr	r0, [pc, #12]	@ (800350c <SPI_TxBuffer+0x34>)
 80034fe:	2364      	movs	r3, #100	@ 0x64
 8003500:	f00e f822 	bl	8011548 <HAL_SPI_Transmit>
}
 8003504:	46c0      	nop			@ (mov r8, r8)
 8003506:	46bd      	mov	sp, r7
 8003508:	b002      	add	sp, #8
 800350a:	bd80      	pop	{r7, pc}
 800350c:	200008f4 	.word	0x200008f4

08003510 <SPI_RxByte>:

/* SPI receive a byte */
static uint8_t SPI_RxByte(void)
{
 8003510:	b580      	push	{r7, lr}
 8003512:	b084      	sub	sp, #16
 8003514:	af02      	add	r7, sp, #8
	uint8_t dummy, data;
	dummy = 0xFF;
 8003516:	1dfb      	adds	r3, r7, #7
 8003518:	22ff      	movs	r2, #255	@ 0xff
 800351a:	701a      	strb	r2, [r3, #0]

	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 800351c:	46c0      	nop			@ (mov r8, r8)
 800351e:	4b0a      	ldr	r3, [pc, #40]	@ (8003548 <SPI_RxByte+0x38>)
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	689b      	ldr	r3, [r3, #8]
 8003524:	2202      	movs	r2, #2
 8003526:	4013      	ands	r3, r2
 8003528:	2b02      	cmp	r3, #2
 800352a:	d1f8      	bne.n	800351e <SPI_RxByte+0xe>
	HAL_SPI_TransmitReceive(HSPI_SDCARD, &dummy, &data, 1, SPI_TIMEOUT);
 800352c:	1dba      	adds	r2, r7, #6
 800352e:	1df9      	adds	r1, r7, #7
 8003530:	4805      	ldr	r0, [pc, #20]	@ (8003548 <SPI_RxByte+0x38>)
 8003532:	2364      	movs	r3, #100	@ 0x64
 8003534:	9300      	str	r3, [sp, #0]
 8003536:	2301      	movs	r3, #1
 8003538:	f00e f95e 	bl	80117f8 <HAL_SPI_TransmitReceive>

	return data;
 800353c:	1dbb      	adds	r3, r7, #6
 800353e:	781b      	ldrb	r3, [r3, #0]
}
 8003540:	0018      	movs	r0, r3
 8003542:	46bd      	mov	sp, r7
 8003544:	b002      	add	sp, #8
 8003546:	bd80      	pop	{r7, pc}
 8003548:	200008f4 	.word	0x200008f4

0800354c <SPI_RxBytePtr>:

/* SPI receive a byte via pointer */
static void SPI_RxBytePtr(uint8_t *buff) 
{
 800354c:	b580      	push	{r7, lr}
 800354e:	b082      	sub	sp, #8
 8003550:	af00      	add	r7, sp, #0
 8003552:	6078      	str	r0, [r7, #4]
	*buff = SPI_RxByte();
 8003554:	f7ff ffdc 	bl	8003510 <SPI_RxByte>
 8003558:	0003      	movs	r3, r0
 800355a:	001a      	movs	r2, r3
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	701a      	strb	r2, [r3, #0]
}
 8003560:	46c0      	nop			@ (mov r8, r8)
 8003562:	46bd      	mov	sp, r7
 8003564:	b002      	add	sp, #8
 8003566:	bd80      	pop	{r7, pc}

08003568 <SD_ReadyWait>:
 * SD functions
 **************************************/

/* wait SD ready */
static uint8_t SD_ReadyWait(void)
{
 8003568:	b590      	push	{r4, r7, lr}
 800356a:	b083      	sub	sp, #12
 800356c:	af00      	add	r7, sp, #0
	uint8_t res;

	/* timeout 500ms */
	Timer2 = 500;
 800356e:	4b0c      	ldr	r3, [pc, #48]	@ (80035a0 <SD_ReadyWait+0x38>)
 8003570:	22fa      	movs	r2, #250	@ 0xfa
 8003572:	0052      	lsls	r2, r2, #1
 8003574:	801a      	strh	r2, [r3, #0]

	/* if SD goes ready, receives 0xFF */
	do {
		res = SPI_RxByte();
 8003576:	1dfc      	adds	r4, r7, #7
 8003578:	f7ff ffca 	bl	8003510 <SPI_RxByte>
 800357c:	0003      	movs	r3, r0
 800357e:	7023      	strb	r3, [r4, #0]
	} while ((res != 0xFF) && Timer2);
 8003580:	1dfb      	adds	r3, r7, #7
 8003582:	781b      	ldrb	r3, [r3, #0]
 8003584:	2bff      	cmp	r3, #255	@ 0xff
 8003586:	d004      	beq.n	8003592 <SD_ReadyWait+0x2a>
 8003588:	4b05      	ldr	r3, [pc, #20]	@ (80035a0 <SD_ReadyWait+0x38>)
 800358a:	881b      	ldrh	r3, [r3, #0]
 800358c:	b29b      	uxth	r3, r3
 800358e:	2b00      	cmp	r3, #0
 8003590:	d1f1      	bne.n	8003576 <SD_ReadyWait+0xe>

	return res;
 8003592:	1dfb      	adds	r3, r7, #7
 8003594:	781b      	ldrb	r3, [r3, #0]
}
 8003596:	0018      	movs	r0, r3
 8003598:	46bd      	mov	sp, r7
 800359a:	b003      	add	sp, #12
 800359c:	bd90      	pop	{r4, r7, pc}
 800359e:	46c0      	nop			@ (mov r8, r8)
 80035a0:	2000346c 	.word	0x2000346c

080035a4 <SD_PowerOn>:

/* power on */
static void SD_PowerOn(void) 
{
 80035a4:	b580      	push	{r7, lr}
 80035a6:	b084      	sub	sp, #16
 80035a8:	af00      	add	r7, sp, #0
	uint8_t args[6];
	uint32_t cnt = 0x1FFF;
 80035aa:	4b20      	ldr	r3, [pc, #128]	@ (800362c <SD_PowerOn+0x88>)
 80035ac:	60fb      	str	r3, [r7, #12]

	/* transmit bytes to wake up */
	DESELECT();
 80035ae:	f7ff ff6a 	bl	8003486 <DESELECT>
	for(int i = 0; i < 10; i++)
 80035b2:	2300      	movs	r3, #0
 80035b4:	60bb      	str	r3, [r7, #8]
 80035b6:	e005      	b.n	80035c4 <SD_PowerOn+0x20>
	{
		SPI_TxByte(0xFF);
 80035b8:	20ff      	movs	r0, #255	@ 0xff
 80035ba:	f7ff ff73 	bl	80034a4 <SPI_TxByte>
	for(int i = 0; i < 10; i++)
 80035be:	68bb      	ldr	r3, [r7, #8]
 80035c0:	3301      	adds	r3, #1
 80035c2:	60bb      	str	r3, [r7, #8]
 80035c4:	68bb      	ldr	r3, [r7, #8]
 80035c6:	2b09      	cmp	r3, #9
 80035c8:	ddf6      	ble.n	80035b8 <SD_PowerOn+0x14>
	}

	/* slave select */
	SELECT();
 80035ca:	f7ff ff4d 	bl	8003468 <SELECT>

	/* make idle state */
	args[0] = CMD0;		/* CMD0:GO_IDLE_STATE */
 80035ce:	003b      	movs	r3, r7
 80035d0:	2240      	movs	r2, #64	@ 0x40
 80035d2:	701a      	strb	r2, [r3, #0]
	args[1] = 0;
 80035d4:	003b      	movs	r3, r7
 80035d6:	2200      	movs	r2, #0
 80035d8:	705a      	strb	r2, [r3, #1]
	args[2] = 0;
 80035da:	003b      	movs	r3, r7
 80035dc:	2200      	movs	r2, #0
 80035de:	709a      	strb	r2, [r3, #2]
	args[3] = 0;
 80035e0:	003b      	movs	r3, r7
 80035e2:	2200      	movs	r2, #0
 80035e4:	70da      	strb	r2, [r3, #3]
	args[4] = 0;
 80035e6:	003b      	movs	r3, r7
 80035e8:	2200      	movs	r2, #0
 80035ea:	711a      	strb	r2, [r3, #4]
	args[5] = 0x95;		/* CRC */
 80035ec:	003b      	movs	r3, r7
 80035ee:	2295      	movs	r2, #149	@ 0x95
 80035f0:	715a      	strb	r2, [r3, #5]

	SPI_TxBuffer(args, sizeof(args));
 80035f2:	003b      	movs	r3, r7
 80035f4:	2106      	movs	r1, #6
 80035f6:	0018      	movs	r0, r3
 80035f8:	f7ff ff6e 	bl	80034d8 <SPI_TxBuffer>

	/* wait response */
	while ((SPI_RxByte() != 0x01) && cnt)
 80035fc:	e002      	b.n	8003604 <SD_PowerOn+0x60>
	{
		cnt--;
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	3b01      	subs	r3, #1
 8003602:	60fb      	str	r3, [r7, #12]
	while ((SPI_RxByte() != 0x01) && cnt)
 8003604:	f7ff ff84 	bl	8003510 <SPI_RxByte>
 8003608:	0003      	movs	r3, r0
 800360a:	2b01      	cmp	r3, #1
 800360c:	d002      	beq.n	8003614 <SD_PowerOn+0x70>
 800360e:	68fb      	ldr	r3, [r7, #12]
 8003610:	2b00      	cmp	r3, #0
 8003612:	d1f4      	bne.n	80035fe <SD_PowerOn+0x5a>
	}

	DESELECT();
 8003614:	f7ff ff37 	bl	8003486 <DESELECT>
	SPI_TxByte(0XFF);
 8003618:	20ff      	movs	r0, #255	@ 0xff
 800361a:	f7ff ff43 	bl	80034a4 <SPI_TxByte>

	PowerFlag = 1;
 800361e:	4b04      	ldr	r3, [pc, #16]	@ (8003630 <SD_PowerOn+0x8c>)
 8003620:	2201      	movs	r2, #1
 8003622:	701a      	strb	r2, [r3, #0]
}
 8003624:	46c0      	nop			@ (mov r8, r8)
 8003626:	46bd      	mov	sp, r7
 8003628:	b004      	add	sp, #16
 800362a:	bd80      	pop	{r7, pc}
 800362c:	00001fff 	.word	0x00001fff
 8003630:	2000052d 	.word	0x2000052d

08003634 <SD_PowerOff>:

/* power off */
static void SD_PowerOff(void) 
{
 8003634:	b580      	push	{r7, lr}
 8003636:	af00      	add	r7, sp, #0
	PowerFlag = 0;
 8003638:	4b02      	ldr	r3, [pc, #8]	@ (8003644 <SD_PowerOff+0x10>)
 800363a:	2200      	movs	r2, #0
 800363c:	701a      	strb	r2, [r3, #0]
}
 800363e:	46c0      	nop			@ (mov r8, r8)
 8003640:	46bd      	mov	sp, r7
 8003642:	bd80      	pop	{r7, pc}
 8003644:	2000052d 	.word	0x2000052d

08003648 <SD_CheckPower>:

/* check power flag */
static uint8_t SD_CheckPower(void) 
{
 8003648:	b580      	push	{r7, lr}
 800364a:	af00      	add	r7, sp, #0
	return PowerFlag;
 800364c:	4b02      	ldr	r3, [pc, #8]	@ (8003658 <SD_CheckPower+0x10>)
 800364e:	781b      	ldrb	r3, [r3, #0]
}
 8003650:	0018      	movs	r0, r3
 8003652:	46bd      	mov	sp, r7
 8003654:	bd80      	pop	{r7, pc}
 8003656:	46c0      	nop			@ (mov r8, r8)
 8003658:	2000052d 	.word	0x2000052d

0800365c <SD_RxDataBlock>:

/* receive data block */
static bool SD_RxDataBlock(BYTE *buff, UINT len)
{
 800365c:	b5b0      	push	{r4, r5, r7, lr}
 800365e:	b084      	sub	sp, #16
 8003660:	af00      	add	r7, sp, #0
 8003662:	6078      	str	r0, [r7, #4]
 8003664:	6039      	str	r1, [r7, #0]
	uint8_t token;

	/* timeout 200ms */
	Timer1 = 200;
 8003666:	4b16      	ldr	r3, [pc, #88]	@ (80036c0 <SD_RxDataBlock+0x64>)
 8003668:	22c8      	movs	r2, #200	@ 0xc8
 800366a:	801a      	strh	r2, [r3, #0]

	/* loop until receive a response or timeout */
	do {
		token = SPI_RxByte();
 800366c:	250f      	movs	r5, #15
 800366e:	197c      	adds	r4, r7, r5
 8003670:	f7ff ff4e 	bl	8003510 <SPI_RxByte>
 8003674:	0003      	movs	r3, r0
 8003676:	7023      	strb	r3, [r4, #0]
	} while((token == 0xFF) && Timer1);
 8003678:	197b      	adds	r3, r7, r5
 800367a:	781b      	ldrb	r3, [r3, #0]
 800367c:	2bff      	cmp	r3, #255	@ 0xff
 800367e:	d104      	bne.n	800368a <SD_RxDataBlock+0x2e>
 8003680:	4b0f      	ldr	r3, [pc, #60]	@ (80036c0 <SD_RxDataBlock+0x64>)
 8003682:	881b      	ldrh	r3, [r3, #0]
 8003684:	b29b      	uxth	r3, r3
 8003686:	2b00      	cmp	r3, #0
 8003688:	d1f0      	bne.n	800366c <SD_RxDataBlock+0x10>

	/* invalid response */
	if(token != 0xFE) return FALSE;
 800368a:	230f      	movs	r3, #15
 800368c:	18fb      	adds	r3, r7, r3
 800368e:	781b      	ldrb	r3, [r3, #0]
 8003690:	2bfe      	cmp	r3, #254	@ 0xfe
 8003692:	d001      	beq.n	8003698 <SD_RxDataBlock+0x3c>
 8003694:	2300      	movs	r3, #0
 8003696:	e00f      	b.n	80036b8 <SD_RxDataBlock+0x5c>

	/* receive data */
	do {
		SPI_RxBytePtr(buff++);
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	1c5a      	adds	r2, r3, #1
 800369c:	607a      	str	r2, [r7, #4]
 800369e:	0018      	movs	r0, r3
 80036a0:	f7ff ff54 	bl	800354c <SPI_RxBytePtr>
	} while(len--);
 80036a4:	683b      	ldr	r3, [r7, #0]
 80036a6:	1e5a      	subs	r2, r3, #1
 80036a8:	603a      	str	r2, [r7, #0]
 80036aa:	2b00      	cmp	r3, #0
 80036ac:	d1f4      	bne.n	8003698 <SD_RxDataBlock+0x3c>

	/* discard CRC */
	SPI_RxByte();
 80036ae:	f7ff ff2f 	bl	8003510 <SPI_RxByte>
	SPI_RxByte();
 80036b2:	f7ff ff2d 	bl	8003510 <SPI_RxByte>

	return TRUE;
 80036b6:	2301      	movs	r3, #1
}
 80036b8:	0018      	movs	r0, r3
 80036ba:	46bd      	mov	sp, r7
 80036bc:	b004      	add	sp, #16
 80036be:	bdb0      	pop	{r4, r5, r7, pc}
 80036c0:	2000346a 	.word	0x2000346a

080036c4 <SD_TxDataBlock>:

/* transmit data block */
#if _USE_WRITE == 1
static bool SD_TxDataBlock(const uint8_t *buff, BYTE token)
{
 80036c4:	b5b0      	push	{r4, r5, r7, lr}
 80036c6:	b084      	sub	sp, #16
 80036c8:	af00      	add	r7, sp, #0
 80036ca:	6078      	str	r0, [r7, #4]
 80036cc:	000a      	movs	r2, r1
 80036ce:	1cfb      	adds	r3, r7, #3
 80036d0:	701a      	strb	r2, [r3, #0]
	uint8_t resp;
	uint8_t i = 0;
 80036d2:	230e      	movs	r3, #14
 80036d4:	18fb      	adds	r3, r7, r3
 80036d6:	2200      	movs	r2, #0
 80036d8:	701a      	strb	r2, [r3, #0]

	/* wait SD ready */
	if (SD_ReadyWait() != 0xFF) return FALSE;
 80036da:	f7ff ff45 	bl	8003568 <SD_ReadyWait>
 80036de:	0003      	movs	r3, r0
 80036e0:	2bff      	cmp	r3, #255	@ 0xff
 80036e2:	d001      	beq.n	80036e8 <SD_TxDataBlock+0x24>
 80036e4:	2300      	movs	r3, #0
 80036e6:	e03c      	b.n	8003762 <SD_TxDataBlock+0x9e>

	/* transmit token */
	SPI_TxByte(token);
 80036e8:	1cfb      	adds	r3, r7, #3
 80036ea:	781b      	ldrb	r3, [r3, #0]
 80036ec:	0018      	movs	r0, r3
 80036ee:	f7ff fed9 	bl	80034a4 <SPI_TxByte>

	/* if it's not STOP token, transmit data */
	if (token != 0xFD)
 80036f2:	1cfb      	adds	r3, r7, #3
 80036f4:	781b      	ldrb	r3, [r3, #0]
 80036f6:	2bfd      	cmp	r3, #253	@ 0xfd
 80036f8:	d029      	beq.n	800374e <SD_TxDataBlock+0x8a>
	{
		SPI_TxBuffer((uint8_t*)buff, 512);
 80036fa:	2380      	movs	r3, #128	@ 0x80
 80036fc:	009a      	lsls	r2, r3, #2
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	0011      	movs	r1, r2
 8003702:	0018      	movs	r0, r3
 8003704:	f7ff fee8 	bl	80034d8 <SPI_TxBuffer>

		/* discard CRC */
		SPI_RxByte();
 8003708:	f7ff ff02 	bl	8003510 <SPI_RxByte>
		SPI_RxByte();
 800370c:	f7ff ff00 	bl	8003510 <SPI_RxByte>

		/* receive response */
		while (i <= 64)
 8003710:	e011      	b.n	8003736 <SD_TxDataBlock+0x72>
		{
			resp = SPI_RxByte();
 8003712:	250f      	movs	r5, #15
 8003714:	197c      	adds	r4, r7, r5
 8003716:	f7ff fefb 	bl	8003510 <SPI_RxByte>
 800371a:	0003      	movs	r3, r0
 800371c:	7023      	strb	r3, [r4, #0]

			/* transmit 0x05 accepted */
			if ((resp & 0x1F) == 0x05) break;
 800371e:	197b      	adds	r3, r7, r5
 8003720:	781b      	ldrb	r3, [r3, #0]
 8003722:	221f      	movs	r2, #31
 8003724:	4013      	ands	r3, r2
 8003726:	2b05      	cmp	r3, #5
 8003728:	d00b      	beq.n	8003742 <SD_TxDataBlock+0x7e>
			i++;
 800372a:	210e      	movs	r1, #14
 800372c:	187b      	adds	r3, r7, r1
 800372e:	781a      	ldrb	r2, [r3, #0]
 8003730:	187b      	adds	r3, r7, r1
 8003732:	3201      	adds	r2, #1
 8003734:	701a      	strb	r2, [r3, #0]
		while (i <= 64)
 8003736:	230e      	movs	r3, #14
 8003738:	18fb      	adds	r3, r7, r3
 800373a:	781b      	ldrb	r3, [r3, #0]
 800373c:	2b40      	cmp	r3, #64	@ 0x40
 800373e:	d9e8      	bls.n	8003712 <SD_TxDataBlock+0x4e>
 8003740:	e000      	b.n	8003744 <SD_TxDataBlock+0x80>
			if ((resp & 0x1F) == 0x05) break;
 8003742:	46c0      	nop			@ (mov r8, r8)
		}

		/* recv buffer clear */
		while (SPI_RxByte() == 0);
 8003744:	46c0      	nop			@ (mov r8, r8)
 8003746:	f7ff fee3 	bl	8003510 <SPI_RxByte>
 800374a:	1e03      	subs	r3, r0, #0
 800374c:	d0fb      	beq.n	8003746 <SD_TxDataBlock+0x82>
	}

	/* transmit 0x05 accepted */
	if ((resp & 0x1F) == 0x05) return TRUE;
 800374e:	230f      	movs	r3, #15
 8003750:	18fb      	adds	r3, r7, r3
 8003752:	781b      	ldrb	r3, [r3, #0]
 8003754:	221f      	movs	r2, #31
 8003756:	4013      	ands	r3, r2
 8003758:	2b05      	cmp	r3, #5
 800375a:	d101      	bne.n	8003760 <SD_TxDataBlock+0x9c>
 800375c:	2301      	movs	r3, #1
 800375e:	e000      	b.n	8003762 <SD_TxDataBlock+0x9e>

	return FALSE;
 8003760:	2300      	movs	r3, #0
}
 8003762:	0018      	movs	r0, r3
 8003764:	46bd      	mov	sp, r7
 8003766:	b004      	add	sp, #16
 8003768:	bdb0      	pop	{r4, r5, r7, pc}

0800376a <SD_SendCmd>:
#endif /* _USE_WRITE */

/* transmit command */
static BYTE SD_SendCmd(BYTE cmd, uint32_t arg)
{
 800376a:	b5b0      	push	{r4, r5, r7, lr}
 800376c:	b084      	sub	sp, #16
 800376e:	af00      	add	r7, sp, #0
 8003770:	0002      	movs	r2, r0
 8003772:	6039      	str	r1, [r7, #0]
 8003774:	1dfb      	adds	r3, r7, #7
 8003776:	701a      	strb	r2, [r3, #0]
	uint8_t crc, res;

	/* wait SD ready */
	if (SD_ReadyWait() != 0xFF) return 0xFF;
 8003778:	f7ff fef6 	bl	8003568 <SD_ReadyWait>
 800377c:	0003      	movs	r3, r0
 800377e:	2bff      	cmp	r3, #255	@ 0xff
 8003780:	d001      	beq.n	8003786 <SD_SendCmd+0x1c>
 8003782:	23ff      	movs	r3, #255	@ 0xff
 8003784:	e059      	b.n	800383a <SD_SendCmd+0xd0>

	/* transmit command */
	SPI_TxByte(cmd); 					/* Command */
 8003786:	1dfb      	adds	r3, r7, #7
 8003788:	781b      	ldrb	r3, [r3, #0]
 800378a:	0018      	movs	r0, r3
 800378c:	f7ff fe8a 	bl	80034a4 <SPI_TxByte>
	SPI_TxByte((uint8_t)(arg >> 24)); 	/* Argument[31..24] */
 8003790:	683b      	ldr	r3, [r7, #0]
 8003792:	0e1b      	lsrs	r3, r3, #24
 8003794:	b2db      	uxtb	r3, r3
 8003796:	0018      	movs	r0, r3
 8003798:	f7ff fe84 	bl	80034a4 <SPI_TxByte>
	SPI_TxByte((uint8_t)(arg >> 16)); 	/* Argument[23..16] */
 800379c:	683b      	ldr	r3, [r7, #0]
 800379e:	0c1b      	lsrs	r3, r3, #16
 80037a0:	b2db      	uxtb	r3, r3
 80037a2:	0018      	movs	r0, r3
 80037a4:	f7ff fe7e 	bl	80034a4 <SPI_TxByte>
	SPI_TxByte((uint8_t)(arg >> 8)); 	/* Argument[15..8] */
 80037a8:	683b      	ldr	r3, [r7, #0]
 80037aa:	0a1b      	lsrs	r3, r3, #8
 80037ac:	b2db      	uxtb	r3, r3
 80037ae:	0018      	movs	r0, r3
 80037b0:	f7ff fe78 	bl	80034a4 <SPI_TxByte>
	SPI_TxByte((uint8_t)arg); 			/* Argument[7..0] */
 80037b4:	683b      	ldr	r3, [r7, #0]
 80037b6:	b2db      	uxtb	r3, r3
 80037b8:	0018      	movs	r0, r3
 80037ba:	f7ff fe73 	bl	80034a4 <SPI_TxByte>

	/* prepare CRC */
	if(cmd == CMD0) crc = 0x95;	/* CRC for CMD0(0) */
 80037be:	1dfb      	adds	r3, r7, #7
 80037c0:	781b      	ldrb	r3, [r3, #0]
 80037c2:	2b40      	cmp	r3, #64	@ 0x40
 80037c4:	d104      	bne.n	80037d0 <SD_SendCmd+0x66>
 80037c6:	230f      	movs	r3, #15
 80037c8:	18fb      	adds	r3, r7, r3
 80037ca:	2295      	movs	r2, #149	@ 0x95
 80037cc:	701a      	strb	r2, [r3, #0]
 80037ce:	e00c      	b.n	80037ea <SD_SendCmd+0x80>
	else if(cmd == CMD8) crc = 0x87;	/* CRC for CMD8(0x1AA) */
 80037d0:	1dfb      	adds	r3, r7, #7
 80037d2:	781b      	ldrb	r3, [r3, #0]
 80037d4:	2b48      	cmp	r3, #72	@ 0x48
 80037d6:	d104      	bne.n	80037e2 <SD_SendCmd+0x78>
 80037d8:	230f      	movs	r3, #15
 80037da:	18fb      	adds	r3, r7, r3
 80037dc:	2287      	movs	r2, #135	@ 0x87
 80037de:	701a      	strb	r2, [r3, #0]
 80037e0:	e003      	b.n	80037ea <SD_SendCmd+0x80>
	else crc = 1;
 80037e2:	230f      	movs	r3, #15
 80037e4:	18fb      	adds	r3, r7, r3
 80037e6:	2201      	movs	r2, #1
 80037e8:	701a      	strb	r2, [r3, #0]

	/* transmit CRC */
	SPI_TxByte(crc);
 80037ea:	230f      	movs	r3, #15
 80037ec:	18fb      	adds	r3, r7, r3
 80037ee:	781b      	ldrb	r3, [r3, #0]
 80037f0:	0018      	movs	r0, r3
 80037f2:	f7ff fe57 	bl	80034a4 <SPI_TxByte>

	/* Skip a stuff byte when STOP_TRANSMISSION */
	if (cmd == CMD12) SPI_RxByte();
 80037f6:	1dfb      	adds	r3, r7, #7
 80037f8:	781b      	ldrb	r3, [r3, #0]
 80037fa:	2b4c      	cmp	r3, #76	@ 0x4c
 80037fc:	d101      	bne.n	8003802 <SD_SendCmd+0x98>
 80037fe:	f7ff fe87 	bl	8003510 <SPI_RxByte>

	/* receive response */
	uint8_t n = 10;
 8003802:	230e      	movs	r3, #14
 8003804:	18fb      	adds	r3, r7, r3
 8003806:	220a      	movs	r2, #10
 8003808:	701a      	strb	r2, [r3, #0]
	do {
		res = SPI_RxByte();
 800380a:	250d      	movs	r5, #13
 800380c:	197c      	adds	r4, r7, r5
 800380e:	f7ff fe7f 	bl	8003510 <SPI_RxByte>
 8003812:	0003      	movs	r3, r0
 8003814:	7023      	strb	r3, [r4, #0]
	} while ((res & 0x80) && --n);
 8003816:	197b      	adds	r3, r7, r5
 8003818:	781b      	ldrb	r3, [r3, #0]
 800381a:	b25b      	sxtb	r3, r3
 800381c:	2b00      	cmp	r3, #0
 800381e:	da09      	bge.n	8003834 <SD_SendCmd+0xca>
 8003820:	210e      	movs	r1, #14
 8003822:	187b      	adds	r3, r7, r1
 8003824:	187a      	adds	r2, r7, r1
 8003826:	7812      	ldrb	r2, [r2, #0]
 8003828:	3a01      	subs	r2, #1
 800382a:	701a      	strb	r2, [r3, #0]
 800382c:	187b      	adds	r3, r7, r1
 800382e:	781b      	ldrb	r3, [r3, #0]
 8003830:	2b00      	cmp	r3, #0
 8003832:	d1ea      	bne.n	800380a <SD_SendCmd+0xa0>

	return res;
 8003834:	230d      	movs	r3, #13
 8003836:	18fb      	adds	r3, r7, r3
 8003838:	781b      	ldrb	r3, [r3, #0]
}
 800383a:	0018      	movs	r0, r3
 800383c:	46bd      	mov	sp, r7
 800383e:	b004      	add	sp, #16
 8003840:	bdb0      	pop	{r4, r5, r7, pc}
	...

08003844 <SD_disk_initialize>:
 * user_diskio.c functions
 **************************************/

/* initialize SD */
DSTATUS SD_disk_initialize(BYTE drv) 
{
 8003844:	b5b0      	push	{r4, r5, r7, lr}
 8003846:	b084      	sub	sp, #16
 8003848:	af00      	add	r7, sp, #0
 800384a:	0002      	movs	r2, r0
 800384c:	1dfb      	adds	r3, r7, #7
 800384e:	701a      	strb	r2, [r3, #0]
	uint8_t n, type, ocr[4];

	/* single drive, drv should be 0 */
	if(drv) return STA_NOINIT;
 8003850:	1dfb      	adds	r3, r7, #7
 8003852:	781b      	ldrb	r3, [r3, #0]
 8003854:	2b00      	cmp	r3, #0
 8003856:	d001      	beq.n	800385c <SD_disk_initialize+0x18>
 8003858:	2301      	movs	r3, #1
 800385a:	e0f6      	b.n	8003a4a <SD_disk_initialize+0x206>

	/* no disk */
	if(Stat & STA_NODISK) return Stat;
 800385c:	4b7d      	ldr	r3, [pc, #500]	@ (8003a54 <SD_disk_initialize+0x210>)
 800385e:	781b      	ldrb	r3, [r3, #0]
 8003860:	b2db      	uxtb	r3, r3
 8003862:	001a      	movs	r2, r3
 8003864:	2302      	movs	r3, #2
 8003866:	4013      	ands	r3, r2
 8003868:	d003      	beq.n	8003872 <SD_disk_initialize+0x2e>
 800386a:	4b7a      	ldr	r3, [pc, #488]	@ (8003a54 <SD_disk_initialize+0x210>)
 800386c:	781b      	ldrb	r3, [r3, #0]
 800386e:	b2db      	uxtb	r3, r3
 8003870:	e0eb      	b.n	8003a4a <SD_disk_initialize+0x206>

	/* power on */
	SD_PowerOn();
 8003872:	f7ff fe97 	bl	80035a4 <SD_PowerOn>

	/* slave select */
	SELECT();
 8003876:	f7ff fdf7 	bl	8003468 <SELECT>

	/* check disk type */
	type = 0;
 800387a:	230e      	movs	r3, #14
 800387c:	18fb      	adds	r3, r7, r3
 800387e:	2200      	movs	r2, #0
 8003880:	701a      	strb	r2, [r3, #0]

	/* send GO_IDLE_STATE command */
	if (SD_SendCmd(CMD0, 0) == 1)
 8003882:	2100      	movs	r1, #0
 8003884:	2040      	movs	r0, #64	@ 0x40
 8003886:	f7ff ff70 	bl	800376a <SD_SendCmd>
 800388a:	0003      	movs	r3, r0
 800388c:	2b01      	cmp	r3, #1
 800388e:	d000      	beq.n	8003892 <SD_disk_initialize+0x4e>
 8003890:	e0c0      	b.n	8003a14 <SD_disk_initialize+0x1d0>
	{
		/* timeout 1 sec */
		Timer1 = 1000;
 8003892:	4b71      	ldr	r3, [pc, #452]	@ (8003a58 <SD_disk_initialize+0x214>)
 8003894:	22fa      	movs	r2, #250	@ 0xfa
 8003896:	0092      	lsls	r2, r2, #2
 8003898:	801a      	strh	r2, [r3, #0]

		/* SDC V2+ accept CMD8 command, http://elm-chan.org/docs/mmc/mmc_e.html */
		if (SD_SendCmd(CMD8, 0x1AA) == 1)
 800389a:	23d5      	movs	r3, #213	@ 0xd5
 800389c:	005b      	lsls	r3, r3, #1
 800389e:	0019      	movs	r1, r3
 80038a0:	2048      	movs	r0, #72	@ 0x48
 80038a2:	f7ff ff62 	bl	800376a <SD_SendCmd>
 80038a6:	0003      	movs	r3, r0
 80038a8:	2b01      	cmp	r3, #1
 80038aa:	d000      	beq.n	80038ae <SD_disk_initialize+0x6a>
 80038ac:	e06d      	b.n	800398a <SD_disk_initialize+0x146>
		{
			/* operation condition register */
			for (n = 0; n < 4; n++)
 80038ae:	230f      	movs	r3, #15
 80038b0:	18fb      	adds	r3, r7, r3
 80038b2:	2200      	movs	r2, #0
 80038b4:	701a      	strb	r2, [r3, #0]
 80038b6:	e00e      	b.n	80038d6 <SD_disk_initialize+0x92>
			{
				ocr[n] = SPI_RxByte();
 80038b8:	250f      	movs	r5, #15
 80038ba:	197b      	adds	r3, r7, r5
 80038bc:	781c      	ldrb	r4, [r3, #0]
 80038be:	f7ff fe27 	bl	8003510 <SPI_RxByte>
 80038c2:	0003      	movs	r3, r0
 80038c4:	001a      	movs	r2, r3
 80038c6:	2308      	movs	r3, #8
 80038c8:	18fb      	adds	r3, r7, r3
 80038ca:	551a      	strb	r2, [r3, r4]
			for (n = 0; n < 4; n++)
 80038cc:	197b      	adds	r3, r7, r5
 80038ce:	781a      	ldrb	r2, [r3, #0]
 80038d0:	197b      	adds	r3, r7, r5
 80038d2:	3201      	adds	r2, #1
 80038d4:	701a      	strb	r2, [r3, #0]
 80038d6:	230f      	movs	r3, #15
 80038d8:	18fb      	adds	r3, r7, r3
 80038da:	781b      	ldrb	r3, [r3, #0]
 80038dc:	2b03      	cmp	r3, #3
 80038de:	d9eb      	bls.n	80038b8 <SD_disk_initialize+0x74>
			}

			/* voltage range 2.7-3.6V */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA)
 80038e0:	2208      	movs	r2, #8
 80038e2:	18bb      	adds	r3, r7, r2
 80038e4:	789b      	ldrb	r3, [r3, #2]
 80038e6:	2b01      	cmp	r3, #1
 80038e8:	d000      	beq.n	80038ec <SD_disk_initialize+0xa8>
 80038ea:	e093      	b.n	8003a14 <SD_disk_initialize+0x1d0>
 80038ec:	18bb      	adds	r3, r7, r2
 80038ee:	78db      	ldrb	r3, [r3, #3]
 80038f0:	2baa      	cmp	r3, #170	@ 0xaa
 80038f2:	d000      	beq.n	80038f6 <SD_disk_initialize+0xb2>
 80038f4:	e08e      	b.n	8003a14 <SD_disk_initialize+0x1d0>
			{
				/* ACMD41 with HCS bit */
				do {
					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 1UL << 30) == 0) break;
 80038f6:	2100      	movs	r1, #0
 80038f8:	2077      	movs	r0, #119	@ 0x77
 80038fa:	f7ff ff36 	bl	800376a <SD_SendCmd>
 80038fe:	0003      	movs	r3, r0
 8003900:	2b01      	cmp	r3, #1
 8003902:	d807      	bhi.n	8003914 <SD_disk_initialize+0xd0>
 8003904:	2380      	movs	r3, #128	@ 0x80
 8003906:	05db      	lsls	r3, r3, #23
 8003908:	0019      	movs	r1, r3
 800390a:	2069      	movs	r0, #105	@ 0x69
 800390c:	f7ff ff2d 	bl	800376a <SD_SendCmd>
 8003910:	1e03      	subs	r3, r0, #0
 8003912:	d005      	beq.n	8003920 <SD_disk_initialize+0xdc>
				} while (Timer1);
 8003914:	4b50      	ldr	r3, [pc, #320]	@ (8003a58 <SD_disk_initialize+0x214>)
 8003916:	881b      	ldrh	r3, [r3, #0]
 8003918:	b29b      	uxth	r3, r3
 800391a:	2b00      	cmp	r3, #0
 800391c:	d1eb      	bne.n	80038f6 <SD_disk_initialize+0xb2>
 800391e:	e000      	b.n	8003922 <SD_disk_initialize+0xde>
					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 1UL << 30) == 0) break;
 8003920:	46c0      	nop			@ (mov r8, r8)

				/* READ_OCR */
				if (Timer1 && SD_SendCmd(CMD58, 0) == 0)
 8003922:	4b4d      	ldr	r3, [pc, #308]	@ (8003a58 <SD_disk_initialize+0x214>)
 8003924:	881b      	ldrh	r3, [r3, #0]
 8003926:	b29b      	uxth	r3, r3
 8003928:	2b00      	cmp	r3, #0
 800392a:	d100      	bne.n	800392e <SD_disk_initialize+0xea>
 800392c:	e072      	b.n	8003a14 <SD_disk_initialize+0x1d0>
 800392e:	2100      	movs	r1, #0
 8003930:	207a      	movs	r0, #122	@ 0x7a
 8003932:	f7ff ff1a 	bl	800376a <SD_SendCmd>
 8003936:	1e03      	subs	r3, r0, #0
 8003938:	d000      	beq.n	800393c <SD_disk_initialize+0xf8>
 800393a:	e06b      	b.n	8003a14 <SD_disk_initialize+0x1d0>
				{
					/* Check CCS bit */
					for (n = 0; n < 4; n++)
 800393c:	230f      	movs	r3, #15
 800393e:	18fb      	adds	r3, r7, r3
 8003940:	2200      	movs	r2, #0
 8003942:	701a      	strb	r2, [r3, #0]
 8003944:	e00e      	b.n	8003964 <SD_disk_initialize+0x120>
					{
						ocr[n] = SPI_RxByte();
 8003946:	250f      	movs	r5, #15
 8003948:	197b      	adds	r3, r7, r5
 800394a:	781c      	ldrb	r4, [r3, #0]
 800394c:	f7ff fde0 	bl	8003510 <SPI_RxByte>
 8003950:	0003      	movs	r3, r0
 8003952:	001a      	movs	r2, r3
 8003954:	2308      	movs	r3, #8
 8003956:	18fb      	adds	r3, r7, r3
 8003958:	551a      	strb	r2, [r3, r4]
					for (n = 0; n < 4; n++)
 800395a:	197b      	adds	r3, r7, r5
 800395c:	781a      	ldrb	r2, [r3, #0]
 800395e:	197b      	adds	r3, r7, r5
 8003960:	3201      	adds	r2, #1
 8003962:	701a      	strb	r2, [r3, #0]
 8003964:	230f      	movs	r3, #15
 8003966:	18fb      	adds	r3, r7, r3
 8003968:	781b      	ldrb	r3, [r3, #0]
 800396a:	2b03      	cmp	r3, #3
 800396c:	d9eb      	bls.n	8003946 <SD_disk_initialize+0x102>
					}

					/* SDv2 (HC or SC) */
					type = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
 800396e:	2308      	movs	r3, #8
 8003970:	18fb      	adds	r3, r7, r3
 8003972:	781b      	ldrb	r3, [r3, #0]
 8003974:	001a      	movs	r2, r3
 8003976:	2340      	movs	r3, #64	@ 0x40
 8003978:	4013      	ands	r3, r2
 800397a:	d001      	beq.n	8003980 <SD_disk_initialize+0x13c>
 800397c:	220c      	movs	r2, #12
 800397e:	e000      	b.n	8003982 <SD_disk_initialize+0x13e>
 8003980:	2204      	movs	r2, #4
 8003982:	230e      	movs	r3, #14
 8003984:	18fb      	adds	r3, r7, r3
 8003986:	701a      	strb	r2, [r3, #0]
 8003988:	e044      	b.n	8003a14 <SD_disk_initialize+0x1d0>
			}
		}
		else
		{
			/* SDC V1 or MMC */
			type = (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 0) <= 1) ? CT_SD1 : CT_MMC;
 800398a:	2100      	movs	r1, #0
 800398c:	2077      	movs	r0, #119	@ 0x77
 800398e:	f7ff feec 	bl	800376a <SD_SendCmd>
 8003992:	0003      	movs	r3, r0
 8003994:	2b01      	cmp	r3, #1
 8003996:	d808      	bhi.n	80039aa <SD_disk_initialize+0x166>
 8003998:	2100      	movs	r1, #0
 800399a:	2069      	movs	r0, #105	@ 0x69
 800399c:	f7ff fee5 	bl	800376a <SD_SendCmd>
 80039a0:	0003      	movs	r3, r0
 80039a2:	2b01      	cmp	r3, #1
 80039a4:	d801      	bhi.n	80039aa <SD_disk_initialize+0x166>
 80039a6:	2202      	movs	r2, #2
 80039a8:	e000      	b.n	80039ac <SD_disk_initialize+0x168>
 80039aa:	2201      	movs	r2, #1
 80039ac:	230e      	movs	r3, #14
 80039ae:	18fb      	adds	r3, r7, r3
 80039b0:	701a      	strb	r2, [r3, #0]

			do
			{
				if (type == CT_SD1)
 80039b2:	230e      	movs	r3, #14
 80039b4:	18fb      	adds	r3, r7, r3
 80039b6:	781b      	ldrb	r3, [r3, #0]
 80039b8:	2b02      	cmp	r3, #2
 80039ba:	d10d      	bne.n	80039d8 <SD_disk_initialize+0x194>
				{
					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 0) == 0) break; /* ACMD41 */
 80039bc:	2100      	movs	r1, #0
 80039be:	2077      	movs	r0, #119	@ 0x77
 80039c0:	f7ff fed3 	bl	800376a <SD_SendCmd>
 80039c4:	0003      	movs	r3, r0
 80039c6:	2b01      	cmp	r3, #1
 80039c8:	d80c      	bhi.n	80039e4 <SD_disk_initialize+0x1a0>
 80039ca:	2100      	movs	r1, #0
 80039cc:	2069      	movs	r0, #105	@ 0x69
 80039ce:	f7ff fecc 	bl	800376a <SD_SendCmd>
 80039d2:	1e03      	subs	r3, r0, #0
 80039d4:	d106      	bne.n	80039e4 <SD_disk_initialize+0x1a0>
 80039d6:	e00c      	b.n	80039f2 <SD_disk_initialize+0x1ae>
				}
				else
				{
					if (SD_SendCmd(CMD1, 0) == 0) break; /* CMD1 */
 80039d8:	2100      	movs	r1, #0
 80039da:	2041      	movs	r0, #65	@ 0x41
 80039dc:	f7ff fec5 	bl	800376a <SD_SendCmd>
 80039e0:	1e03      	subs	r3, r0, #0
 80039e2:	d005      	beq.n	80039f0 <SD_disk_initialize+0x1ac>
				}

			} while (Timer1);
 80039e4:	4b1c      	ldr	r3, [pc, #112]	@ (8003a58 <SD_disk_initialize+0x214>)
 80039e6:	881b      	ldrh	r3, [r3, #0]
 80039e8:	b29b      	uxth	r3, r3
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d1e1      	bne.n	80039b2 <SD_disk_initialize+0x16e>
 80039ee:	e000      	b.n	80039f2 <SD_disk_initialize+0x1ae>
					if (SD_SendCmd(CMD1, 0) == 0) break; /* CMD1 */
 80039f0:	46c0      	nop			@ (mov r8, r8)

			/* SET_BLOCKLEN */
			if (!Timer1 || SD_SendCmd(CMD16, 512) != 0) type = 0;
 80039f2:	4b19      	ldr	r3, [pc, #100]	@ (8003a58 <SD_disk_initialize+0x214>)
 80039f4:	881b      	ldrh	r3, [r3, #0]
 80039f6:	b29b      	uxth	r3, r3
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d007      	beq.n	8003a0c <SD_disk_initialize+0x1c8>
 80039fc:	2380      	movs	r3, #128	@ 0x80
 80039fe:	009b      	lsls	r3, r3, #2
 8003a00:	0019      	movs	r1, r3
 8003a02:	2050      	movs	r0, #80	@ 0x50
 8003a04:	f7ff feb1 	bl	800376a <SD_SendCmd>
 8003a08:	1e03      	subs	r3, r0, #0
 8003a0a:	d003      	beq.n	8003a14 <SD_disk_initialize+0x1d0>
 8003a0c:	230e      	movs	r3, #14
 8003a0e:	18fb      	adds	r3, r7, r3
 8003a10:	2200      	movs	r2, #0
 8003a12:	701a      	strb	r2, [r3, #0]
		}
	}

	CardType = type;
 8003a14:	4b11      	ldr	r3, [pc, #68]	@ (8003a5c <SD_disk_initialize+0x218>)
 8003a16:	240e      	movs	r4, #14
 8003a18:	193a      	adds	r2, r7, r4
 8003a1a:	7812      	ldrb	r2, [r2, #0]
 8003a1c:	701a      	strb	r2, [r3, #0]

	/* Idle */
	DESELECT();
 8003a1e:	f7ff fd32 	bl	8003486 <DESELECT>
	SPI_RxByte();
 8003a22:	f7ff fd75 	bl	8003510 <SPI_RxByte>

	/* Clear STA_NOINIT */
	if (type)
 8003a26:	193b      	adds	r3, r7, r4
 8003a28:	781b      	ldrb	r3, [r3, #0]
 8003a2a:	2b00      	cmp	r3, #0
 8003a2c:	d008      	beq.n	8003a40 <SD_disk_initialize+0x1fc>
	{
		Stat &= ~STA_NOINIT;
 8003a2e:	4b09      	ldr	r3, [pc, #36]	@ (8003a54 <SD_disk_initialize+0x210>)
 8003a30:	781b      	ldrb	r3, [r3, #0]
 8003a32:	b2db      	uxtb	r3, r3
 8003a34:	2201      	movs	r2, #1
 8003a36:	4393      	bics	r3, r2
 8003a38:	b2da      	uxtb	r2, r3
 8003a3a:	4b06      	ldr	r3, [pc, #24]	@ (8003a54 <SD_disk_initialize+0x210>)
 8003a3c:	701a      	strb	r2, [r3, #0]
 8003a3e:	e001      	b.n	8003a44 <SD_disk_initialize+0x200>
	}
	else
	{
		/* Initialization failed */
		SD_PowerOff();
 8003a40:	f7ff fdf8 	bl	8003634 <SD_PowerOff>
	}

	return Stat;
 8003a44:	4b03      	ldr	r3, [pc, #12]	@ (8003a54 <SD_disk_initialize+0x210>)
 8003a46:	781b      	ldrb	r3, [r3, #0]
 8003a48:	b2db      	uxtb	r3, r3
}
 8003a4a:	0018      	movs	r0, r3
 8003a4c:	46bd      	mov	sp, r7
 8003a4e:	b004      	add	sp, #16
 8003a50:	bdb0      	pop	{r4, r5, r7, pc}
 8003a52:	46c0      	nop			@ (mov r8, r8)
 8003a54:	20000000 	.word	0x20000000
 8003a58:	2000346a 	.word	0x2000346a
 8003a5c:	2000052c 	.word	0x2000052c

08003a60 <SD_disk_status>:

/* return disk status */
DSTATUS SD_disk_status(BYTE drv) 
{
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b082      	sub	sp, #8
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	0002      	movs	r2, r0
 8003a68:	1dfb      	adds	r3, r7, #7
 8003a6a:	701a      	strb	r2, [r3, #0]
	if (drv) return STA_NOINIT;
 8003a6c:	1dfb      	adds	r3, r7, #7
 8003a6e:	781b      	ldrb	r3, [r3, #0]
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	d001      	beq.n	8003a78 <SD_disk_status+0x18>
 8003a74:	2301      	movs	r3, #1
 8003a76:	e002      	b.n	8003a7e <SD_disk_status+0x1e>
	return Stat;
 8003a78:	4b03      	ldr	r3, [pc, #12]	@ (8003a88 <SD_disk_status+0x28>)
 8003a7a:	781b      	ldrb	r3, [r3, #0]
 8003a7c:	b2db      	uxtb	r3, r3
}
 8003a7e:	0018      	movs	r0, r3
 8003a80:	46bd      	mov	sp, r7
 8003a82:	b002      	add	sp, #8
 8003a84:	bd80      	pop	{r7, pc}
 8003a86:	46c0      	nop			@ (mov r8, r8)
 8003a88:	20000000 	.word	0x20000000

08003a8c <SD_disk_read>:

/* read sector */
DRESULT SD_disk_read(BYTE pdrv, BYTE* buff, DWORD sector, UINT count) 
{
 8003a8c:	b580      	push	{r7, lr}
 8003a8e:	b084      	sub	sp, #16
 8003a90:	af00      	add	r7, sp, #0
 8003a92:	60b9      	str	r1, [r7, #8]
 8003a94:	607a      	str	r2, [r7, #4]
 8003a96:	603b      	str	r3, [r7, #0]
 8003a98:	210f      	movs	r1, #15
 8003a9a:	187b      	adds	r3, r7, r1
 8003a9c:	1c02      	adds	r2, r0, #0
 8003a9e:	701a      	strb	r2, [r3, #0]
	/* pdrv should be 0 */
	if (pdrv || !count) return RES_PARERR;
 8003aa0:	187b      	adds	r3, r7, r1
 8003aa2:	781b      	ldrb	r3, [r3, #0]
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d102      	bne.n	8003aae <SD_disk_read+0x22>
 8003aa8:	683b      	ldr	r3, [r7, #0]
 8003aaa:	2b00      	cmp	r3, #0
 8003aac:	d101      	bne.n	8003ab2 <SD_disk_read+0x26>
 8003aae:	2304      	movs	r3, #4
 8003ab0:	e053      	b.n	8003b5a <SD_disk_read+0xce>

	/* no disk */
	if (Stat & STA_NOINIT) return RES_NOTRDY;
 8003ab2:	4b2c      	ldr	r3, [pc, #176]	@ (8003b64 <SD_disk_read+0xd8>)
 8003ab4:	781b      	ldrb	r3, [r3, #0]
 8003ab6:	b2db      	uxtb	r3, r3
 8003ab8:	001a      	movs	r2, r3
 8003aba:	2301      	movs	r3, #1
 8003abc:	4013      	ands	r3, r2
 8003abe:	d001      	beq.n	8003ac4 <SD_disk_read+0x38>
 8003ac0:	2303      	movs	r3, #3
 8003ac2:	e04a      	b.n	8003b5a <SD_disk_read+0xce>

	/* convert to byte address */
	if (!(CardType & CT_SD2)) sector *= 512;
 8003ac4:	4b28      	ldr	r3, [pc, #160]	@ (8003b68 <SD_disk_read+0xdc>)
 8003ac6:	781b      	ldrb	r3, [r3, #0]
 8003ac8:	001a      	movs	r2, r3
 8003aca:	2304      	movs	r3, #4
 8003acc:	4013      	ands	r3, r2
 8003ace:	d102      	bne.n	8003ad6 <SD_disk_read+0x4a>
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	025b      	lsls	r3, r3, #9
 8003ad4:	607b      	str	r3, [r7, #4]

	SELECT();
 8003ad6:	f7ff fcc7 	bl	8003468 <SELECT>

	if (count == 1)
 8003ada:	683b      	ldr	r3, [r7, #0]
 8003adc:	2b01      	cmp	r3, #1
 8003ade:	d112      	bne.n	8003b06 <SD_disk_read+0x7a>
	{
		/* READ_SINGLE_BLOCK */
		if ((SD_SendCmd(CMD17, sector) == 0) && SD_RxDataBlock(buff, 512)) count = 0;
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	0019      	movs	r1, r3
 8003ae4:	2051      	movs	r0, #81	@ 0x51
 8003ae6:	f7ff fe40 	bl	800376a <SD_SendCmd>
 8003aea:	1e03      	subs	r3, r0, #0
 8003aec:	d12d      	bne.n	8003b4a <SD_disk_read+0xbe>
 8003aee:	2380      	movs	r3, #128	@ 0x80
 8003af0:	009a      	lsls	r2, r3, #2
 8003af2:	68bb      	ldr	r3, [r7, #8]
 8003af4:	0011      	movs	r1, r2
 8003af6:	0018      	movs	r0, r3
 8003af8:	f7ff fdb0 	bl	800365c <SD_RxDataBlock>
 8003afc:	1e03      	subs	r3, r0, #0
 8003afe:	d024      	beq.n	8003b4a <SD_disk_read+0xbe>
 8003b00:	2300      	movs	r3, #0
 8003b02:	603b      	str	r3, [r7, #0]
 8003b04:	e021      	b.n	8003b4a <SD_disk_read+0xbe>
	}
	else
	{
		/* READ_MULTIPLE_BLOCK */
		if (SD_SendCmd(CMD18, sector) == 0)
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	0019      	movs	r1, r3
 8003b0a:	2052      	movs	r0, #82	@ 0x52
 8003b0c:	f7ff fe2d 	bl	800376a <SD_SendCmd>
 8003b10:	1e03      	subs	r3, r0, #0
 8003b12:	d11a      	bne.n	8003b4a <SD_disk_read+0xbe>
		{
			do {
				if (!SD_RxDataBlock(buff, 512)) break;
 8003b14:	2380      	movs	r3, #128	@ 0x80
 8003b16:	009a      	lsls	r2, r3, #2
 8003b18:	68bb      	ldr	r3, [r7, #8]
 8003b1a:	0011      	movs	r1, r2
 8003b1c:	0018      	movs	r0, r3
 8003b1e:	f7ff fd9d 	bl	800365c <SD_RxDataBlock>
 8003b22:	1e03      	subs	r3, r0, #0
 8003b24:	d00c      	beq.n	8003b40 <SD_disk_read+0xb4>
				buff += 512;
 8003b26:	68bb      	ldr	r3, [r7, #8]
 8003b28:	2280      	movs	r2, #128	@ 0x80
 8003b2a:	0092      	lsls	r2, r2, #2
 8003b2c:	4694      	mov	ip, r2
 8003b2e:	4463      	add	r3, ip
 8003b30:	60bb      	str	r3, [r7, #8]
			} while (--count);
 8003b32:	683b      	ldr	r3, [r7, #0]
 8003b34:	3b01      	subs	r3, #1
 8003b36:	603b      	str	r3, [r7, #0]
 8003b38:	683b      	ldr	r3, [r7, #0]
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d1ea      	bne.n	8003b14 <SD_disk_read+0x88>
 8003b3e:	e000      	b.n	8003b42 <SD_disk_read+0xb6>
				if (!SD_RxDataBlock(buff, 512)) break;
 8003b40:	46c0      	nop			@ (mov r8, r8)

			/* STOP_TRANSMISSION */
			SD_SendCmd(CMD12, 0);
 8003b42:	2100      	movs	r1, #0
 8003b44:	204c      	movs	r0, #76	@ 0x4c
 8003b46:	f7ff fe10 	bl	800376a <SD_SendCmd>
		}
	}

	/* Idle */
	DESELECT();
 8003b4a:	f7ff fc9c 	bl	8003486 <DESELECT>
	SPI_RxByte();
 8003b4e:	f7ff fcdf 	bl	8003510 <SPI_RxByte>

	return count ? RES_ERROR : RES_OK;
 8003b52:	683b      	ldr	r3, [r7, #0]
 8003b54:	1e5a      	subs	r2, r3, #1
 8003b56:	4193      	sbcs	r3, r2
 8003b58:	b2db      	uxtb	r3, r3
}
 8003b5a:	0018      	movs	r0, r3
 8003b5c:	46bd      	mov	sp, r7
 8003b5e:	b004      	add	sp, #16
 8003b60:	bd80      	pop	{r7, pc}
 8003b62:	46c0      	nop			@ (mov r8, r8)
 8003b64:	20000000 	.word	0x20000000
 8003b68:	2000052c 	.word	0x2000052c

08003b6c <SD_disk_write>:

/* write sector */
#if _USE_WRITE == 1
DRESULT SD_disk_write(BYTE pdrv, const BYTE* buff, DWORD sector, UINT count) 
{
 8003b6c:	b580      	push	{r7, lr}
 8003b6e:	b084      	sub	sp, #16
 8003b70:	af00      	add	r7, sp, #0
 8003b72:	60b9      	str	r1, [r7, #8]
 8003b74:	607a      	str	r2, [r7, #4]
 8003b76:	603b      	str	r3, [r7, #0]
 8003b78:	210f      	movs	r1, #15
 8003b7a:	187b      	adds	r3, r7, r1
 8003b7c:	1c02      	adds	r2, r0, #0
 8003b7e:	701a      	strb	r2, [r3, #0]
	/* pdrv should be 0 */
	if (pdrv || !count) return RES_PARERR;
 8003b80:	187b      	adds	r3, r7, r1
 8003b82:	781b      	ldrb	r3, [r3, #0]
 8003b84:	2b00      	cmp	r3, #0
 8003b86:	d102      	bne.n	8003b8e <SD_disk_write+0x22>
 8003b88:	683b      	ldr	r3, [r7, #0]
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d101      	bne.n	8003b92 <SD_disk_write+0x26>
 8003b8e:	2304      	movs	r3, #4
 8003b90:	e06b      	b.n	8003c6a <SD_disk_write+0xfe>

	/* no disk */
	if (Stat & STA_NOINIT) return RES_NOTRDY;
 8003b92:	4b38      	ldr	r3, [pc, #224]	@ (8003c74 <SD_disk_write+0x108>)
 8003b94:	781b      	ldrb	r3, [r3, #0]
 8003b96:	b2db      	uxtb	r3, r3
 8003b98:	001a      	movs	r2, r3
 8003b9a:	2301      	movs	r3, #1
 8003b9c:	4013      	ands	r3, r2
 8003b9e:	d001      	beq.n	8003ba4 <SD_disk_write+0x38>
 8003ba0:	2303      	movs	r3, #3
 8003ba2:	e062      	b.n	8003c6a <SD_disk_write+0xfe>

	/* write protection */
	if (Stat & STA_PROTECT) return RES_WRPRT;
 8003ba4:	4b33      	ldr	r3, [pc, #204]	@ (8003c74 <SD_disk_write+0x108>)
 8003ba6:	781b      	ldrb	r3, [r3, #0]
 8003ba8:	b2db      	uxtb	r3, r3
 8003baa:	001a      	movs	r2, r3
 8003bac:	2304      	movs	r3, #4
 8003bae:	4013      	ands	r3, r2
 8003bb0:	d001      	beq.n	8003bb6 <SD_disk_write+0x4a>
 8003bb2:	2302      	movs	r3, #2
 8003bb4:	e059      	b.n	8003c6a <SD_disk_write+0xfe>

	/* convert to byte address */
	if (!(CardType & CT_SD2)) sector *= 512;
 8003bb6:	4b30      	ldr	r3, [pc, #192]	@ (8003c78 <SD_disk_write+0x10c>)
 8003bb8:	781b      	ldrb	r3, [r3, #0]
 8003bba:	001a      	movs	r2, r3
 8003bbc:	2304      	movs	r3, #4
 8003bbe:	4013      	ands	r3, r2
 8003bc0:	d102      	bne.n	8003bc8 <SD_disk_write+0x5c>
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	025b      	lsls	r3, r3, #9
 8003bc6:	607b      	str	r3, [r7, #4]

	SELECT();
 8003bc8:	f7ff fc4e 	bl	8003468 <SELECT>

	if (count == 1)
 8003bcc:	683b      	ldr	r3, [r7, #0]
 8003bce:	2b01      	cmp	r3, #1
 8003bd0:	d110      	bne.n	8003bf4 <SD_disk_write+0x88>
	{
		/* WRITE_BLOCK */
		if ((SD_SendCmd(CMD24, sector) == 0) && SD_TxDataBlock(buff, 0xFE))
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	0019      	movs	r1, r3
 8003bd6:	2058      	movs	r0, #88	@ 0x58
 8003bd8:	f7ff fdc7 	bl	800376a <SD_SendCmd>
 8003bdc:	1e03      	subs	r3, r0, #0
 8003bde:	d13c      	bne.n	8003c5a <SD_disk_write+0xee>
 8003be0:	68bb      	ldr	r3, [r7, #8]
 8003be2:	21fe      	movs	r1, #254	@ 0xfe
 8003be4:	0018      	movs	r0, r3
 8003be6:	f7ff fd6d 	bl	80036c4 <SD_TxDataBlock>
 8003bea:	1e03      	subs	r3, r0, #0
 8003bec:	d035      	beq.n	8003c5a <SD_disk_write+0xee>
			count = 0;
 8003bee:	2300      	movs	r3, #0
 8003bf0:	603b      	str	r3, [r7, #0]
 8003bf2:	e032      	b.n	8003c5a <SD_disk_write+0xee>
	}
	else
	{
		/* WRITE_MULTIPLE_BLOCK */
		if (CardType & CT_SD1)
 8003bf4:	4b20      	ldr	r3, [pc, #128]	@ (8003c78 <SD_disk_write+0x10c>)
 8003bf6:	781b      	ldrb	r3, [r3, #0]
 8003bf8:	001a      	movs	r2, r3
 8003bfa:	2302      	movs	r3, #2
 8003bfc:	4013      	ands	r3, r2
 8003bfe:	d008      	beq.n	8003c12 <SD_disk_write+0xa6>
		{
			SD_SendCmd(CMD55, 0);
 8003c00:	2100      	movs	r1, #0
 8003c02:	2077      	movs	r0, #119	@ 0x77
 8003c04:	f7ff fdb1 	bl	800376a <SD_SendCmd>
			SD_SendCmd(CMD23, count); /* ACMD23 */
 8003c08:	683b      	ldr	r3, [r7, #0]
 8003c0a:	0019      	movs	r1, r3
 8003c0c:	2057      	movs	r0, #87	@ 0x57
 8003c0e:	f7ff fdac 	bl	800376a <SD_SendCmd>
		}

		if (SD_SendCmd(CMD25, sector) == 0)
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	0019      	movs	r1, r3
 8003c16:	2059      	movs	r0, #89	@ 0x59
 8003c18:	f7ff fda7 	bl	800376a <SD_SendCmd>
 8003c1c:	1e03      	subs	r3, r0, #0
 8003c1e:	d11c      	bne.n	8003c5a <SD_disk_write+0xee>
		{
			do {
				if(!SD_TxDataBlock(buff, 0xFC)) break;
 8003c20:	68bb      	ldr	r3, [r7, #8]
 8003c22:	21fc      	movs	r1, #252	@ 0xfc
 8003c24:	0018      	movs	r0, r3
 8003c26:	f7ff fd4d 	bl	80036c4 <SD_TxDataBlock>
 8003c2a:	1e03      	subs	r3, r0, #0
 8003c2c:	d00c      	beq.n	8003c48 <SD_disk_write+0xdc>
				buff += 512;
 8003c2e:	68bb      	ldr	r3, [r7, #8]
 8003c30:	2280      	movs	r2, #128	@ 0x80
 8003c32:	0092      	lsls	r2, r2, #2
 8003c34:	4694      	mov	ip, r2
 8003c36:	4463      	add	r3, ip
 8003c38:	60bb      	str	r3, [r7, #8]
			} while (--count);
 8003c3a:	683b      	ldr	r3, [r7, #0]
 8003c3c:	3b01      	subs	r3, #1
 8003c3e:	603b      	str	r3, [r7, #0]
 8003c40:	683b      	ldr	r3, [r7, #0]
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	d1ec      	bne.n	8003c20 <SD_disk_write+0xb4>
 8003c46:	e000      	b.n	8003c4a <SD_disk_write+0xde>
				if(!SD_TxDataBlock(buff, 0xFC)) break;
 8003c48:	46c0      	nop			@ (mov r8, r8)

			/* STOP_TRAN token */
			if(!SD_TxDataBlock(0, 0xFD))
 8003c4a:	21fd      	movs	r1, #253	@ 0xfd
 8003c4c:	2000      	movs	r0, #0
 8003c4e:	f7ff fd39 	bl	80036c4 <SD_TxDataBlock>
 8003c52:	1e03      	subs	r3, r0, #0
 8003c54:	d101      	bne.n	8003c5a <SD_disk_write+0xee>
			{
				count = 1;
 8003c56:	2301      	movs	r3, #1
 8003c58:	603b      	str	r3, [r7, #0]
			}
		}
	}

	/* Idle */
	DESELECT();
 8003c5a:	f7ff fc14 	bl	8003486 <DESELECT>
	SPI_RxByte();
 8003c5e:	f7ff fc57 	bl	8003510 <SPI_RxByte>

	return count ? RES_ERROR : RES_OK;
 8003c62:	683b      	ldr	r3, [r7, #0]
 8003c64:	1e5a      	subs	r2, r3, #1
 8003c66:	4193      	sbcs	r3, r2
 8003c68:	b2db      	uxtb	r3, r3
}
 8003c6a:	0018      	movs	r0, r3
 8003c6c:	46bd      	mov	sp, r7
 8003c6e:	b004      	add	sp, #16
 8003c70:	bd80      	pop	{r7, pc}
 8003c72:	46c0      	nop			@ (mov r8, r8)
 8003c74:	20000000 	.word	0x20000000
 8003c78:	2000052c 	.word	0x2000052c

08003c7c <SD_disk_ioctl>:
#endif /* _USE_WRITE */

/* ioctl */
DRESULT SD_disk_ioctl(BYTE drv, BYTE ctrl, void *buff) 
{
 8003c7c:	b590      	push	{r4, r7, lr}
 8003c7e:	b08b      	sub	sp, #44	@ 0x2c
 8003c80:	af00      	add	r7, sp, #0
 8003c82:	603a      	str	r2, [r7, #0]
 8003c84:	1dfb      	adds	r3, r7, #7
 8003c86:	1c02      	adds	r2, r0, #0
 8003c88:	701a      	strb	r2, [r3, #0]
 8003c8a:	1dbb      	adds	r3, r7, #6
 8003c8c:	1c0a      	adds	r2, r1, #0
 8003c8e:	701a      	strb	r2, [r3, #0]
	DRESULT res;
	uint8_t n, csd[16], *ptr = buff;
 8003c90:	683b      	ldr	r3, [r7, #0]
 8003c92:	623b      	str	r3, [r7, #32]
	WORD csize;

	/* pdrv should be 0 */
	if (drv) return RES_PARERR;
 8003c94:	1dfb      	adds	r3, r7, #7
 8003c96:	781b      	ldrb	r3, [r3, #0]
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	d001      	beq.n	8003ca0 <SD_disk_ioctl+0x24>
 8003c9c:	2304      	movs	r3, #4
 8003c9e:	e119      	b.n	8003ed4 <SD_disk_ioctl+0x258>
	res = RES_ERROR;
 8003ca0:	2327      	movs	r3, #39	@ 0x27
 8003ca2:	18fb      	adds	r3, r7, r3
 8003ca4:	2201      	movs	r2, #1
 8003ca6:	701a      	strb	r2, [r3, #0]

	if (ctrl == CTRL_POWER)
 8003ca8:	1dbb      	adds	r3, r7, #6
 8003caa:	781b      	ldrb	r3, [r3, #0]
 8003cac:	2b05      	cmp	r3, #5
 8003cae:	d127      	bne.n	8003d00 <SD_disk_ioctl+0x84>
	{
		switch (*ptr)
 8003cb0:	6a3b      	ldr	r3, [r7, #32]
 8003cb2:	781b      	ldrb	r3, [r3, #0]
 8003cb4:	2b02      	cmp	r3, #2
 8003cb6:	d013      	beq.n	8003ce0 <SD_disk_ioctl+0x64>
 8003cb8:	dc1d      	bgt.n	8003cf6 <SD_disk_ioctl+0x7a>
 8003cba:	2b00      	cmp	r3, #0
 8003cbc:	d002      	beq.n	8003cc4 <SD_disk_ioctl+0x48>
 8003cbe:	2b01      	cmp	r3, #1
 8003cc0:	d007      	beq.n	8003cd2 <SD_disk_ioctl+0x56>
 8003cc2:	e018      	b.n	8003cf6 <SD_disk_ioctl+0x7a>
		{
		case 0:
			SD_PowerOff();		/* Power Off */
 8003cc4:	f7ff fcb6 	bl	8003634 <SD_PowerOff>
			res = RES_OK;
 8003cc8:	2327      	movs	r3, #39	@ 0x27
 8003cca:	18fb      	adds	r3, r7, r3
 8003ccc:	2200      	movs	r2, #0
 8003cce:	701a      	strb	r2, [r3, #0]
			break;
 8003cd0:	e0fd      	b.n	8003ece <SD_disk_ioctl+0x252>
		case 1:
			SD_PowerOn();		/* Power On */
 8003cd2:	f7ff fc67 	bl	80035a4 <SD_PowerOn>
			res = RES_OK;
 8003cd6:	2327      	movs	r3, #39	@ 0x27
 8003cd8:	18fb      	adds	r3, r7, r3
 8003cda:	2200      	movs	r2, #0
 8003cdc:	701a      	strb	r2, [r3, #0]
			break;
 8003cde:	e0f6      	b.n	8003ece <SD_disk_ioctl+0x252>
		case 2:
			*(ptr + 1) = SD_CheckPower();
 8003ce0:	6a3b      	ldr	r3, [r7, #32]
 8003ce2:	1c5c      	adds	r4, r3, #1
 8003ce4:	f7ff fcb0 	bl	8003648 <SD_CheckPower>
 8003ce8:	0003      	movs	r3, r0
 8003cea:	7023      	strb	r3, [r4, #0]
			res = RES_OK;		/* Power Check */
 8003cec:	2327      	movs	r3, #39	@ 0x27
 8003cee:	18fb      	adds	r3, r7, r3
 8003cf0:	2200      	movs	r2, #0
 8003cf2:	701a      	strb	r2, [r3, #0]
			break;
 8003cf4:	e0eb      	b.n	8003ece <SD_disk_ioctl+0x252>
		default:
			res = RES_PARERR;
 8003cf6:	2327      	movs	r3, #39	@ 0x27
 8003cf8:	18fb      	adds	r3, r7, r3
 8003cfa:	2204      	movs	r2, #4
 8003cfc:	701a      	strb	r2, [r3, #0]
 8003cfe:	e0e6      	b.n	8003ece <SD_disk_ioctl+0x252>
		}
	}
	else
	{
		/* no disk */
		if (Stat & STA_NOINIT) return RES_NOTRDY;
 8003d00:	4b76      	ldr	r3, [pc, #472]	@ (8003edc <SD_disk_ioctl+0x260>)
 8003d02:	781b      	ldrb	r3, [r3, #0]
 8003d04:	b2db      	uxtb	r3, r3
 8003d06:	001a      	movs	r2, r3
 8003d08:	2301      	movs	r3, #1
 8003d0a:	4013      	ands	r3, r2
 8003d0c:	d001      	beq.n	8003d12 <SD_disk_ioctl+0x96>
 8003d0e:	2303      	movs	r3, #3
 8003d10:	e0e0      	b.n	8003ed4 <SD_disk_ioctl+0x258>

		SELECT();
 8003d12:	f7ff fba9 	bl	8003468 <SELECT>

		switch (ctrl)
 8003d16:	1dbb      	adds	r3, r7, #6
 8003d18:	781b      	ldrb	r3, [r3, #0]
 8003d1a:	2b0d      	cmp	r3, #13
 8003d1c:	d900      	bls.n	8003d20 <SD_disk_ioctl+0xa4>
 8003d1e:	e0c6      	b.n	8003eae <SD_disk_ioctl+0x232>
 8003d20:	009a      	lsls	r2, r3, #2
 8003d22:	4b6f      	ldr	r3, [pc, #444]	@ (8003ee0 <SD_disk_ioctl+0x264>)
 8003d24:	18d3      	adds	r3, r2, r3
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	469f      	mov	pc, r3
		{
		case GET_SECTOR_COUNT:
			/* SEND_CSD */
			if ((SD_SendCmd(CMD9, 0) == 0) && SD_RxDataBlock(csd, 16))
 8003d2a:	2100      	movs	r1, #0
 8003d2c:	2049      	movs	r0, #73	@ 0x49
 8003d2e:	f7ff fd1c 	bl	800376a <SD_SendCmd>
 8003d32:	1e03      	subs	r3, r0, #0
 8003d34:	d000      	beq.n	8003d38 <SD_disk_ioctl+0xbc>
 8003d36:	e0bf      	b.n	8003eb8 <SD_disk_ioctl+0x23c>
 8003d38:	240c      	movs	r4, #12
 8003d3a:	193b      	adds	r3, r7, r4
 8003d3c:	2110      	movs	r1, #16
 8003d3e:	0018      	movs	r0, r3
 8003d40:	f7ff fc8c 	bl	800365c <SD_RxDataBlock>
 8003d44:	1e03      	subs	r3, r0, #0
 8003d46:	d100      	bne.n	8003d4a <SD_disk_ioctl+0xce>
 8003d48:	e0b6      	b.n	8003eb8 <SD_disk_ioctl+0x23c>
			{
				if ((csd[0] >> 6) == 1)
 8003d4a:	0022      	movs	r2, r4
 8003d4c:	18bb      	adds	r3, r7, r2
 8003d4e:	781b      	ldrb	r3, [r3, #0]
 8003d50:	099b      	lsrs	r3, r3, #6
 8003d52:	b2db      	uxtb	r3, r3
 8003d54:	2b01      	cmp	r3, #1
 8003d56:	d113      	bne.n	8003d80 <SD_disk_ioctl+0x104>
				{
					/* SDC V2 */
					csize = csd[9] + ((WORD) csd[8] << 8) + 1;
 8003d58:	0011      	movs	r1, r2
 8003d5a:	18bb      	adds	r3, r7, r2
 8003d5c:	7a5b      	ldrb	r3, [r3, #9]
 8003d5e:	001a      	movs	r2, r3
 8003d60:	187b      	adds	r3, r7, r1
 8003d62:	7a1b      	ldrb	r3, [r3, #8]
 8003d64:	021b      	lsls	r3, r3, #8
 8003d66:	b29b      	uxth	r3, r3
 8003d68:	18d3      	adds	r3, r2, r3
 8003d6a:	b29a      	uxth	r2, r3
 8003d6c:	211e      	movs	r1, #30
 8003d6e:	187b      	adds	r3, r7, r1
 8003d70:	3201      	adds	r2, #1
 8003d72:	801a      	strh	r2, [r3, #0]
					*(DWORD*) buff = (DWORD) csize << 10;
 8003d74:	187b      	adds	r3, r7, r1
 8003d76:	881b      	ldrh	r3, [r3, #0]
 8003d78:	029a      	lsls	r2, r3, #10
 8003d7a:	683b      	ldr	r3, [r7, #0]
 8003d7c:	601a      	str	r2, [r3, #0]
 8003d7e:	e039      	b.n	8003df4 <SD_disk_ioctl+0x178>
				}
				else
				{
					/* MMC or SDC V1 */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
 8003d80:	200c      	movs	r0, #12
 8003d82:	183b      	adds	r3, r7, r0
 8003d84:	795b      	ldrb	r3, [r3, #5]
 8003d86:	220f      	movs	r2, #15
 8003d88:	4013      	ands	r3, r2
 8003d8a:	b2da      	uxtb	r2, r3
 8003d8c:	183b      	adds	r3, r7, r0
 8003d8e:	7a9b      	ldrb	r3, [r3, #10]
 8003d90:	09db      	lsrs	r3, r3, #7
 8003d92:	b2db      	uxtb	r3, r3
 8003d94:	18d3      	adds	r3, r2, r3
 8003d96:	b2da      	uxtb	r2, r3
 8003d98:	183b      	adds	r3, r7, r0
 8003d9a:	7a5b      	ldrb	r3, [r3, #9]
 8003d9c:	005b      	lsls	r3, r3, #1
 8003d9e:	b2db      	uxtb	r3, r3
 8003da0:	2106      	movs	r1, #6
 8003da2:	400b      	ands	r3, r1
 8003da4:	b2db      	uxtb	r3, r3
 8003da6:	18d3      	adds	r3, r2, r3
 8003da8:	b2da      	uxtb	r2, r3
 8003daa:	2426      	movs	r4, #38	@ 0x26
 8003dac:	193b      	adds	r3, r7, r4
 8003dae:	3202      	adds	r2, #2
 8003db0:	701a      	strb	r2, [r3, #0]
					csize = (csd[8] >> 6) + ((WORD) csd[7] << 2) + ((WORD) (csd[6] & 3) << 10) + 1;
 8003db2:	183b      	adds	r3, r7, r0
 8003db4:	7a1b      	ldrb	r3, [r3, #8]
 8003db6:	099b      	lsrs	r3, r3, #6
 8003db8:	b2db      	uxtb	r3, r3
 8003dba:	001a      	movs	r2, r3
 8003dbc:	183b      	adds	r3, r7, r0
 8003dbe:	79db      	ldrb	r3, [r3, #7]
 8003dc0:	009b      	lsls	r3, r3, #2
 8003dc2:	b29b      	uxth	r3, r3
 8003dc4:	18d3      	adds	r3, r2, r3
 8003dc6:	b29a      	uxth	r2, r3
 8003dc8:	183b      	adds	r3, r7, r0
 8003dca:	799b      	ldrb	r3, [r3, #6]
 8003dcc:	029b      	lsls	r3, r3, #10
 8003dce:	b299      	uxth	r1, r3
 8003dd0:	23c0      	movs	r3, #192	@ 0xc0
 8003dd2:	011b      	lsls	r3, r3, #4
 8003dd4:	400b      	ands	r3, r1
 8003dd6:	b29b      	uxth	r3, r3
 8003dd8:	18d3      	adds	r3, r2, r3
 8003dda:	b29a      	uxth	r2, r3
 8003ddc:	211e      	movs	r1, #30
 8003dde:	187b      	adds	r3, r7, r1
 8003de0:	3201      	adds	r2, #1
 8003de2:	801a      	strh	r2, [r3, #0]
					*(DWORD*) buff = (DWORD) csize << (n - 9);
 8003de4:	187b      	adds	r3, r7, r1
 8003de6:	881a      	ldrh	r2, [r3, #0]
 8003de8:	193b      	adds	r3, r7, r4
 8003dea:	781b      	ldrb	r3, [r3, #0]
 8003dec:	3b09      	subs	r3, #9
 8003dee:	409a      	lsls	r2, r3
 8003df0:	683b      	ldr	r3, [r7, #0]
 8003df2:	601a      	str	r2, [r3, #0]
				}
				res = RES_OK;
 8003df4:	2327      	movs	r3, #39	@ 0x27
 8003df6:	18fb      	adds	r3, r7, r3
 8003df8:	2200      	movs	r2, #0
 8003dfa:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003dfc:	e05c      	b.n	8003eb8 <SD_disk_ioctl+0x23c>
		case GET_SECTOR_SIZE:
			*(WORD*) buff = 512;
 8003dfe:	683b      	ldr	r3, [r7, #0]
 8003e00:	2280      	movs	r2, #128	@ 0x80
 8003e02:	0092      	lsls	r2, r2, #2
 8003e04:	801a      	strh	r2, [r3, #0]
			res = RES_OK;
 8003e06:	2327      	movs	r3, #39	@ 0x27
 8003e08:	18fb      	adds	r3, r7, r3
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	701a      	strb	r2, [r3, #0]
			break;
 8003e0e:	e05a      	b.n	8003ec6 <SD_disk_ioctl+0x24a>
		case CTRL_SYNC:
			if (SD_ReadyWait() == 0xFF) res = RES_OK;
 8003e10:	f7ff fbaa 	bl	8003568 <SD_ReadyWait>
 8003e14:	0003      	movs	r3, r0
 8003e16:	2bff      	cmp	r3, #255	@ 0xff
 8003e18:	d150      	bne.n	8003ebc <SD_disk_ioctl+0x240>
 8003e1a:	2327      	movs	r3, #39	@ 0x27
 8003e1c:	18fb      	adds	r3, r7, r3
 8003e1e:	2200      	movs	r2, #0
 8003e20:	701a      	strb	r2, [r3, #0]
			break;
 8003e22:	e04b      	b.n	8003ebc <SD_disk_ioctl+0x240>
		case MMC_GET_CSD:
			/* SEND_CSD */
			if (SD_SendCmd(CMD9, 0) == 0 && SD_RxDataBlock(ptr, 16)) res = RES_OK;
 8003e24:	2100      	movs	r1, #0
 8003e26:	2049      	movs	r0, #73	@ 0x49
 8003e28:	f7ff fc9f 	bl	800376a <SD_SendCmd>
 8003e2c:	1e03      	subs	r3, r0, #0
 8003e2e:	d147      	bne.n	8003ec0 <SD_disk_ioctl+0x244>
 8003e30:	6a3b      	ldr	r3, [r7, #32]
 8003e32:	2110      	movs	r1, #16
 8003e34:	0018      	movs	r0, r3
 8003e36:	f7ff fc11 	bl	800365c <SD_RxDataBlock>
 8003e3a:	1e03      	subs	r3, r0, #0
 8003e3c:	d040      	beq.n	8003ec0 <SD_disk_ioctl+0x244>
 8003e3e:	2327      	movs	r3, #39	@ 0x27
 8003e40:	18fb      	adds	r3, r7, r3
 8003e42:	2200      	movs	r2, #0
 8003e44:	701a      	strb	r2, [r3, #0]
			break;
 8003e46:	e03b      	b.n	8003ec0 <SD_disk_ioctl+0x244>
		case MMC_GET_CID:
			/* SEND_CID */
			if (SD_SendCmd(CMD10, 0) == 0 && SD_RxDataBlock(ptr, 16)) res = RES_OK;
 8003e48:	2100      	movs	r1, #0
 8003e4a:	204a      	movs	r0, #74	@ 0x4a
 8003e4c:	f7ff fc8d 	bl	800376a <SD_SendCmd>
 8003e50:	1e03      	subs	r3, r0, #0
 8003e52:	d137      	bne.n	8003ec4 <SD_disk_ioctl+0x248>
 8003e54:	6a3b      	ldr	r3, [r7, #32]
 8003e56:	2110      	movs	r1, #16
 8003e58:	0018      	movs	r0, r3
 8003e5a:	f7ff fbff 	bl	800365c <SD_RxDataBlock>
 8003e5e:	1e03      	subs	r3, r0, #0
 8003e60:	d030      	beq.n	8003ec4 <SD_disk_ioctl+0x248>
 8003e62:	2327      	movs	r3, #39	@ 0x27
 8003e64:	18fb      	adds	r3, r7, r3
 8003e66:	2200      	movs	r2, #0
 8003e68:	701a      	strb	r2, [r3, #0]
			break;
 8003e6a:	e02b      	b.n	8003ec4 <SD_disk_ioctl+0x248>
		case MMC_GET_OCR:
			/* READ_OCR */
			if (SD_SendCmd(CMD58, 0) == 0)
 8003e6c:	2100      	movs	r1, #0
 8003e6e:	207a      	movs	r0, #122	@ 0x7a
 8003e70:	f7ff fc7b 	bl	800376a <SD_SendCmd>
 8003e74:	1e03      	subs	r3, r0, #0
 8003e76:	d11a      	bne.n	8003eae <SD_disk_ioctl+0x232>
			{
				for (n = 0; n < 4; n++)
 8003e78:	2326      	movs	r3, #38	@ 0x26
 8003e7a:	18fb      	adds	r3, r7, r3
 8003e7c:	2200      	movs	r2, #0
 8003e7e:	701a      	strb	r2, [r3, #0]
 8003e80:	e00c      	b.n	8003e9c <SD_disk_ioctl+0x220>
				{
					*ptr++ = SPI_RxByte();
 8003e82:	6a3c      	ldr	r4, [r7, #32]
 8003e84:	1c63      	adds	r3, r4, #1
 8003e86:	623b      	str	r3, [r7, #32]
 8003e88:	f7ff fb42 	bl	8003510 <SPI_RxByte>
 8003e8c:	0003      	movs	r3, r0
 8003e8e:	7023      	strb	r3, [r4, #0]
				for (n = 0; n < 4; n++)
 8003e90:	2126      	movs	r1, #38	@ 0x26
 8003e92:	187b      	adds	r3, r7, r1
 8003e94:	781a      	ldrb	r2, [r3, #0]
 8003e96:	187b      	adds	r3, r7, r1
 8003e98:	3201      	adds	r2, #1
 8003e9a:	701a      	strb	r2, [r3, #0]
 8003e9c:	2326      	movs	r3, #38	@ 0x26
 8003e9e:	18fb      	adds	r3, r7, r3
 8003ea0:	781b      	ldrb	r3, [r3, #0]
 8003ea2:	2b03      	cmp	r3, #3
 8003ea4:	d9ed      	bls.n	8003e82 <SD_disk_ioctl+0x206>
				}
				res = RES_OK;
 8003ea6:	2327      	movs	r3, #39	@ 0x27
 8003ea8:	18fb      	adds	r3, r7, r3
 8003eaa:	2200      	movs	r2, #0
 8003eac:	701a      	strb	r2, [r3, #0]
			}
		default:
			res = RES_PARERR;
 8003eae:	2327      	movs	r3, #39	@ 0x27
 8003eb0:	18fb      	adds	r3, r7, r3
 8003eb2:	2204      	movs	r2, #4
 8003eb4:	701a      	strb	r2, [r3, #0]
 8003eb6:	e006      	b.n	8003ec6 <SD_disk_ioctl+0x24a>
			break;
 8003eb8:	46c0      	nop			@ (mov r8, r8)
 8003eba:	e004      	b.n	8003ec6 <SD_disk_ioctl+0x24a>
			break;
 8003ebc:	46c0      	nop			@ (mov r8, r8)
 8003ebe:	e002      	b.n	8003ec6 <SD_disk_ioctl+0x24a>
			break;
 8003ec0:	46c0      	nop			@ (mov r8, r8)
 8003ec2:	e000      	b.n	8003ec6 <SD_disk_ioctl+0x24a>
			break;
 8003ec4:	46c0      	nop			@ (mov r8, r8)
		}

		DESELECT();
 8003ec6:	f7ff fade 	bl	8003486 <DESELECT>
		SPI_RxByte();
 8003eca:	f7ff fb21 	bl	8003510 <SPI_RxByte>
	}

	return res;
 8003ece:	2327      	movs	r3, #39	@ 0x27
 8003ed0:	18fb      	adds	r3, r7, r3
 8003ed2:	781b      	ldrb	r3, [r3, #0]
}
 8003ed4:	0018      	movs	r0, r3
 8003ed6:	46bd      	mov	sp, r7
 8003ed8:	b00b      	add	sp, #44	@ 0x2c
 8003eda:	bd90      	pop	{r4, r7, pc}
 8003edc:	20000000 	.word	0x20000000
 8003ee0:	08019ea0 	.word	0x08019ea0

08003ee4 <bufsize>:
	uint8_t len = strlen (string);
	HAL_UART_Transmit(&huart2, (uint8_t *) string, len, 2000);// transmit in blocking mode
}

int bufsize (char *buf)
{
 8003ee4:	b580      	push	{r7, lr}
 8003ee6:	b084      	sub	sp, #16
 8003ee8:	af00      	add	r7, sp, #0
 8003eea:	6078      	str	r0, [r7, #4]
	int i=0;
 8003eec:	2300      	movs	r3, #0
 8003eee:	60fb      	str	r3, [r7, #12]
	while (*buf++ != '\0') i++;
 8003ef0:	e002      	b.n	8003ef8 <bufsize+0x14>
 8003ef2:	68fb      	ldr	r3, [r7, #12]
 8003ef4:	3301      	adds	r3, #1
 8003ef6:	60fb      	str	r3, [r7, #12]
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	1c5a      	adds	r2, r3, #1
 8003efc:	607a      	str	r2, [r7, #4]
 8003efe:	781b      	ldrb	r3, [r3, #0]
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d1f6      	bne.n	8003ef2 <bufsize+0xe>
	return i;
 8003f04:	68fb      	ldr	r3, [r7, #12]
}
 8003f06:	0018      	movs	r0, r3
 8003f08:	46bd      	mov	sp, r7
 8003f0a:	b004      	add	sp, #16
 8003f0c:	bd80      	pop	{r7, pc}
	...

08003f10 <clear_buffer>:

void clear_buffer (void)
{
 8003f10:	b580      	push	{r7, lr}
 8003f12:	b082      	sub	sp, #8
 8003f14:	af00      	add	r7, sp, #0
	for (int i=0; i<1024; i++)
 8003f16:	2300      	movs	r3, #0
 8003f18:	607b      	str	r3, [r7, #4]
 8003f1a:	e007      	b.n	8003f2c <clear_buffer+0x1c>
	{
		buffer[i] = '\0';
 8003f1c:	4a08      	ldr	r2, [pc, #32]	@ (8003f40 <clear_buffer+0x30>)
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	18d3      	adds	r3, r2, r3
 8003f22:	2200      	movs	r2, #0
 8003f24:	701a      	strb	r2, [r3, #0]
	for (int i=0; i<1024; i++)
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	3301      	adds	r3, #1
 8003f2a:	607b      	str	r3, [r7, #4]
 8003f2c:	687a      	ldr	r2, [r7, #4]
 8003f2e:	2380      	movs	r3, #128	@ 0x80
 8003f30:	00db      	lsls	r3, r3, #3
 8003f32:	429a      	cmp	r2, r3
 8003f34:	dbf2      	blt.n	8003f1c <clear_buffer+0xc>
	}
}
 8003f36:	46c0      	nop			@ (mov r8, r8)
 8003f38:	46c0      	nop			@ (mov r8, r8)
 8003f3a:	46bd      	mov	sp, r7
 8003f3c:	b002      	add	sp, #8
 8003f3e:	bd80      	pop	{r7, pc}
 8003f40:	20002f3c 	.word	0x20002f3c

08003f44 <USER_UART_IDLECallback>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void USER_UART_IDLECallback(UART_HandleTypeDef *huart)
{
 8003f44:	b590      	push	{r4, r7, lr}
 8003f46:	b085      	sub	sp, #20
 8003f48:	af00      	add	r7, sp, #0
 8003f4a:	6078      	str	r0, [r7, #4]
    HAL_UART_DMAStop(&huart1);
 8003f4c:	4b1c      	ldr	r3, [pc, #112]	@ (8003fc0 <USER_UART_IDLECallback+0x7c>)
 8003f4e:	0018      	movs	r0, r3
 8003f50:	f00f fa9e 	bl	8013490 <HAL_UART_DMAStop>
    uint8_t data_length  = BUFFER_SIZE - __HAL_DMA_GET_COUNTER(&hdma_usart1_rx);
 8003f54:	4b1b      	ldr	r3, [pc, #108]	@ (8003fc4 <USER_UART_IDLECallback+0x80>)
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	685b      	ldr	r3, [r3, #4]
 8003f5a:	b2da      	uxtb	r2, r3
 8003f5c:	230f      	movs	r3, #15
 8003f5e:	18fb      	adds	r3, r7, r3
 8003f60:	2140      	movs	r1, #64	@ 0x40
 8003f62:	1a8a      	subs	r2, r1, r2
 8003f64:	701a      	strb	r2, [r3, #0]

    memcpy(RxBuff,receive_buff,12);
 8003f66:	4b18      	ldr	r3, [pc, #96]	@ (8003fc8 <USER_UART_IDLECallback+0x84>)
 8003f68:	4a18      	ldr	r2, [pc, #96]	@ (8003fcc <USER_UART_IDLECallback+0x88>)
 8003f6a:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003f6c:	c313      	stmia	r3!, {r0, r1, r4}
    //test
    if (RxBuff[0] == 0 && RxBuff[1] == 0)
 8003f6e:	4b16      	ldr	r3, [pc, #88]	@ (8003fc8 <USER_UART_IDLECallback+0x84>)
 8003f70:	781b      	ldrb	r3, [r3, #0]
 8003f72:	2b00      	cmp	r3, #0
 8003f74:	d107      	bne.n	8003f86 <USER_UART_IDLECallback+0x42>
 8003f76:	4b14      	ldr	r3, [pc, #80]	@ (8003fc8 <USER_UART_IDLECallback+0x84>)
 8003f78:	785b      	ldrb	r3, [r3, #1]
 8003f7a:	2b00      	cmp	r3, #0
 8003f7c:	d103      	bne.n	8003f86 <USER_UART_IDLECallback+0x42>
    {
    	HAL_UART_ErrorCallback(huart);
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	0018      	movs	r0, r3
 8003f82:	f000 f847 	bl	8004014 <HAL_UART_ErrorCallback>
    }
    if (RxBuff[3] == 0x83)
 8003f86:	4b10      	ldr	r3, [pc, #64]	@ (8003fc8 <USER_UART_IDLECallback+0x84>)
 8003f88:	78db      	ldrb	r3, [r3, #3]
 8003f8a:	2b83      	cmp	r3, #131	@ 0x83
 8003f8c:	d102      	bne.n	8003f94 <USER_UART_IDLECallback+0x50>
    	RxFlag = TRUE;
 8003f8e:	4b10      	ldr	r3, [pc, #64]	@ (8003fd0 <USER_UART_IDLECallback+0x8c>)
 8003f90:	2201      	movs	r2, #1
 8003f92:	701a      	strb	r2, [r3, #0]
    memset(receive_buff,0,data_length);
 8003f94:	240f      	movs	r4, #15
 8003f96:	193b      	adds	r3, r7, r4
 8003f98:	781a      	ldrb	r2, [r3, #0]
 8003f9a:	4b0c      	ldr	r3, [pc, #48]	@ (8003fcc <USER_UART_IDLECallback+0x88>)
 8003f9c:	2100      	movs	r1, #0
 8003f9e:	0018      	movs	r0, r3
 8003fa0:	f014 fe56 	bl	8018c50 <memset>
    data_length = 0;
 8003fa4:	193b      	adds	r3, r7, r4
 8003fa6:	2200      	movs	r2, #0
 8003fa8:	701a      	strb	r2, [r3, #0]
    HAL_UART_Receive_DMA(&huart1, (uint8_t*)receive_buff, 64);
 8003faa:	4908      	ldr	r1, [pc, #32]	@ (8003fcc <USER_UART_IDLECallback+0x88>)
 8003fac:	4b04      	ldr	r3, [pc, #16]	@ (8003fc0 <USER_UART_IDLECallback+0x7c>)
 8003fae:	2240      	movs	r2, #64	@ 0x40
 8003fb0:	0018      	movs	r0, r3
 8003fb2:	f00f fa03 	bl	80133bc <HAL_UART_Receive_DMA>
}
 8003fb6:	46c0      	nop			@ (mov r8, r8)
 8003fb8:	46bd      	mov	sp, r7
 8003fba:	b005      	add	sp, #20
 8003fbc:	bd90      	pop	{r4, r7, pc}
 8003fbe:	46c0      	nop			@ (mov r8, r8)
 8003fc0:	20000658 	.word	0x20000658
 8003fc4:	20000898 	.word	0x20000898
 8003fc8:	20000a40 	.word	0x20000a40
 8003fcc:	20000a80 	.word	0x20000a80
 8003fd0:	20000a3c 	.word	0x20000a3c

08003fd4 <USER_UART_IRQHandler>:

void USER_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8003fd4:	b580      	push	{r7, lr}
 8003fd6:	b082      	sub	sp, #8
 8003fd8:	af00      	add	r7, sp, #0
 8003fda:	6078      	str	r0, [r7, #4]
    if(huart->Instance == USART1)
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	4a0a      	ldr	r2, [pc, #40]	@ (800400c <USER_UART_IRQHandler+0x38>)
 8003fe2:	4293      	cmp	r3, r2
 8003fe4:	d10e      	bne.n	8004004 <USER_UART_IRQHandler+0x30>
    {
        if(RESET != __HAL_UART_GET_FLAG(&huart1, UART_FLAG_IDLE))
 8003fe6:	4b0a      	ldr	r3, [pc, #40]	@ (8004010 <USER_UART_IRQHandler+0x3c>)
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	69db      	ldr	r3, [r3, #28]
 8003fec:	2210      	movs	r2, #16
 8003fee:	4013      	ands	r3, r2
 8003ff0:	2b10      	cmp	r3, #16
 8003ff2:	d107      	bne.n	8004004 <USER_UART_IRQHandler+0x30>
        {
            __HAL_UART_CLEAR_IDLEFLAG(&huart1);
 8003ff4:	4b06      	ldr	r3, [pc, #24]	@ (8004010 <USER_UART_IRQHandler+0x3c>)
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	2210      	movs	r2, #16
 8003ffa:	621a      	str	r2, [r3, #32]
            USER_UART_IDLECallback(huart);
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	0018      	movs	r0, r3
 8004000:	f7ff ffa0 	bl	8003f44 <USER_UART_IDLECallback>
        }
    }
}
 8004004:	46c0      	nop			@ (mov r8, r8)
 8004006:	46bd      	mov	sp, r7
 8004008:	b002      	add	sp, #8
 800400a:	bd80      	pop	{r7, pc}
 800400c:	40013800 	.word	0x40013800
 8004010:	20000658 	.word	0x20000658

08004014 <HAL_UART_ErrorCallback>:

//test
void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8004014:	b580      	push	{r7, lr}
 8004016:	b082      	sub	sp, #8
 8004018:	af00      	add	r7, sp, #0
 800401a:	6078      	str	r0, [r7, #4]
//	if(huart->ErrorCode&HAL_UART_ERROR_ORE)
//	{
//		__HAL_UART_CLEAR_OREFLAG(huart);
//	}
	if(huart->Instance == USART1)
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	4a05      	ldr	r2, [pc, #20]	@ (8004038 <HAL_UART_ErrorCallback+0x24>)
 8004022:	4293      	cmp	r3, r2
 8004024:	d103      	bne.n	800402e <HAL_UART_ErrorCallback+0x1a>
	{
		HAL_UART_AbortReceive(&huart1);
 8004026:	4b05      	ldr	r3, [pc, #20]	@ (800403c <HAL_UART_ErrorCallback+0x28>)
 8004028:	0018      	movs	r0, r3
 800402a:	f00f fac3 	bl	80135b4 <HAL_UART_AbortReceive>
	}
}
 800402e:	46c0      	nop			@ (mov r8, r8)
 8004030:	46bd      	mov	sp, r7
 8004032:	b002      	add	sp, #8
 8004034:	bd80      	pop	{r7, pc}
 8004036:	46c0      	nop			@ (mov r8, r8)
 8004038:	40013800 	.word	0x40013800
 800403c:	20000658 	.word	0x20000658

08004040 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8004040:	b590      	push	{r4, r7, lr}
 8004042:	b083      	sub	sp, #12
 8004044:	af00      	add	r7, sp, #0
 8004046:	6078      	str	r0, [r7, #4]
	static uint8_t RxBuffer[48];
	static uint16_t RxCount = 0;

	memcpy(ReplyBuffer, Type, sizeof(unsigned char)*2);
 8004048:	4b40      	ldr	r3, [pc, #256]	@ (800414c <HAL_UART_RxCpltCallback+0x10c>)
 800404a:	881a      	ldrh	r2, [r3, #0]
 800404c:	4b40      	ldr	r3, [pc, #256]	@ (8004150 <HAL_UART_RxCpltCallback+0x110>)
 800404e:	801a      	strh	r2, [r3, #0]
	memcpy(ReplyBuffer+2, plate_no, sizeof(unsigned char)*10);
 8004050:	4a40      	ldr	r2, [pc, #256]	@ (8004154 <HAL_UART_RxCpltCallback+0x114>)
 8004052:	4b41      	ldr	r3, [pc, #260]	@ (8004158 <HAL_UART_RxCpltCallback+0x118>)
 8004054:	0010      	movs	r0, r2
 8004056:	0019      	movs	r1, r3
 8004058:	230a      	movs	r3, #10
 800405a:	001a      	movs	r2, r3
 800405c:	f014 fe7b 	bl	8018d56 <memcpy>

	if(huart->Instance == USART3)
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	4a3d      	ldr	r2, [pc, #244]	@ (800415c <HAL_UART_RxCpltCallback+0x11c>)
 8004066:	4293      	cmp	r3, r2
 8004068:	d165      	bne.n	8004136 <HAL_UART_RxCpltCallback+0xf6>
	{
		if(Flag_Head == TRUE)
 800406a:	4b3d      	ldr	r3, [pc, #244]	@ (8004160 <HAL_UART_RxCpltCallback+0x120>)
 800406c:	781b      	ldrb	r3, [r3, #0]
 800406e:	2b01      	cmp	r3, #1
 8004070:	d156      	bne.n	8004120 <HAL_UART_RxCpltCallback+0xe0>
		{
			if(Receiving == TRUE)
 8004072:	4b3c      	ldr	r3, [pc, #240]	@ (8004164 <HAL_UART_RxCpltCallback+0x124>)
 8004074:	781b      	ldrb	r3, [r3, #0]
 8004076:	2b01      	cmp	r3, #1
 8004078:	d138      	bne.n	80040ec <HAL_UART_RxCpltCallback+0xac>
			{
				if((RxCount >= 46) && (rec_ch == 0xFF))
 800407a:	4b3b      	ldr	r3, [pc, #236]	@ (8004168 <HAL_UART_RxCpltCallback+0x128>)
 800407c:	881b      	ldrh	r3, [r3, #0]
 800407e:	2b2d      	cmp	r3, #45	@ 0x2d
 8004080:	d926      	bls.n	80040d0 <HAL_UART_RxCpltCallback+0x90>
 8004082:	4b3a      	ldr	r3, [pc, #232]	@ (800416c <HAL_UART_RxCpltCallback+0x12c>)
 8004084:	781b      	ldrb	r3, [r3, #0]
 8004086:	2bff      	cmp	r3, #255	@ 0xff
 8004088:	d122      	bne.n	80040d0 <HAL_UART_RxCpltCallback+0x90>
				{
					RxCount = 0;
 800408a:	4b37      	ldr	r3, [pc, #220]	@ (8004168 <HAL_UART_RxCpltCallback+0x128>)
 800408c:	2200      	movs	r2, #0
 800408e:	801a      	strh	r2, [r3, #0]
					memset(WriteBuffer,0,48);
 8004090:	4b37      	ldr	r3, [pc, #220]	@ (8004170 <HAL_UART_RxCpltCallback+0x130>)
 8004092:	2230      	movs	r2, #48	@ 0x30
 8004094:	2100      	movs	r1, #0
 8004096:	0018      	movs	r0, r3
 8004098:	f014 fdda 	bl	8018c50 <memset>
					memcpy(WriteBuffer,RxBuffer,48);
 800409c:	4b34      	ldr	r3, [pc, #208]	@ (8004170 <HAL_UART_RxCpltCallback+0x130>)
 800409e:	4a35      	ldr	r2, [pc, #212]	@ (8004174 <HAL_UART_RxCpltCallback+0x134>)
 80040a0:	ca13      	ldmia	r2!, {r0, r1, r4}
 80040a2:	c313      	stmia	r3!, {r0, r1, r4}
 80040a4:	ca13      	ldmia	r2!, {r0, r1, r4}
 80040a6:	c313      	stmia	r3!, {r0, r1, r4}
 80040a8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80040aa:	c313      	stmia	r3!, {r0, r1, r4}
 80040ac:	ca13      	ldmia	r2!, {r0, r1, r4}
 80040ae:	c313      	stmia	r3!, {r0, r1, r4}
					memset(RxBuffer,0,48);
 80040b0:	4b30      	ldr	r3, [pc, #192]	@ (8004174 <HAL_UART_RxCpltCallback+0x134>)
 80040b2:	2230      	movs	r2, #48	@ 0x30
 80040b4:	2100      	movs	r1, #0
 80040b6:	0018      	movs	r0, r3
 80040b8:	f014 fdca 	bl	8018c50 <memset>
					Flag_Para_W = TRUE;
 80040bc:	4b2e      	ldr	r3, [pc, #184]	@ (8004178 <HAL_UART_RxCpltCallback+0x138>)
 80040be:	2201      	movs	r2, #1
 80040c0:	701a      	strb	r2, [r3, #0]
					Flag_Head = FALSE;
 80040c2:	4b27      	ldr	r3, [pc, #156]	@ (8004160 <HAL_UART_RxCpltCallback+0x120>)
 80040c4:	2200      	movs	r2, #0
 80040c6:	701a      	strb	r2, [r3, #0]
					Receiving = FALSE;
 80040c8:	4b26      	ldr	r3, [pc, #152]	@ (8004164 <HAL_UART_RxCpltCallback+0x124>)
 80040ca:	2200      	movs	r2, #0
 80040cc:	701a      	strb	r2, [r3, #0]
 80040ce:	e032      	b.n	8004136 <HAL_UART_RxCpltCallback+0xf6>
				}
				else
				{
					RxBuffer[RxCount] = rec_ch;
 80040d0:	4b25      	ldr	r3, [pc, #148]	@ (8004168 <HAL_UART_RxCpltCallback+0x128>)
 80040d2:	881b      	ldrh	r3, [r3, #0]
 80040d4:	001a      	movs	r2, r3
 80040d6:	4b25      	ldr	r3, [pc, #148]	@ (800416c <HAL_UART_RxCpltCallback+0x12c>)
 80040d8:	7819      	ldrb	r1, [r3, #0]
 80040da:	4b26      	ldr	r3, [pc, #152]	@ (8004174 <HAL_UART_RxCpltCallback+0x134>)
 80040dc:	5499      	strb	r1, [r3, r2]
					RxCount++;
 80040de:	4b22      	ldr	r3, [pc, #136]	@ (8004168 <HAL_UART_RxCpltCallback+0x128>)
 80040e0:	881b      	ldrh	r3, [r3, #0]
 80040e2:	3301      	adds	r3, #1
 80040e4:	b29a      	uxth	r2, r3
 80040e6:	4b20      	ldr	r3, [pc, #128]	@ (8004168 <HAL_UART_RxCpltCallback+0x128>)
 80040e8:	801a      	strh	r2, [r3, #0]
 80040ea:	e024      	b.n	8004136 <HAL_UART_RxCpltCallback+0xf6>
				}
			}
			else
			{
				if(rec_ch == 0xBB)
 80040ec:	4b1f      	ldr	r3, [pc, #124]	@ (800416c <HAL_UART_RxCpltCallback+0x12c>)
 80040ee:	781b      	ldrb	r3, [r3, #0]
 80040f0:	2bbb      	cmp	r3, #187	@ 0xbb
 80040f2:	d103      	bne.n	80040fc <HAL_UART_RxCpltCallback+0xbc>
				{
					//header - 0xAA 0xBB: start receiving parameters
					Receiving = TRUE;
 80040f4:	4b1b      	ldr	r3, [pc, #108]	@ (8004164 <HAL_UART_RxCpltCallback+0x124>)
 80040f6:	2201      	movs	r2, #1
 80040f8:	701a      	strb	r2, [r3, #0]
 80040fa:	e01c      	b.n	8004136 <HAL_UART_RxCpltCallback+0xf6>
				}
				else if(rec_ch == 0xCC)
 80040fc:	4b1b      	ldr	r3, [pc, #108]	@ (800416c <HAL_UART_RxCpltCallback+0x12c>)
 80040fe:	781b      	ldrb	r3, [r3, #0]
 8004100:	2bcc      	cmp	r3, #204	@ 0xcc
 8004102:	d109      	bne.n	8004118 <HAL_UART_RxCpltCallback+0xd8>
				{
					//header - 0xAA 0xCC: start reply taxi type & plate no.
					Receiving = FALSE;
 8004104:	4b17      	ldr	r3, [pc, #92]	@ (8004164 <HAL_UART_RxCpltCallback+0x124>)
 8004106:	2200      	movs	r2, #0
 8004108:	701a      	strb	r2, [r3, #0]
					HAL_UART_Transmit(&huart3, ReplyBuffer, 16, 0xff);
 800410a:	4911      	ldr	r1, [pc, #68]	@ (8004150 <HAL_UART_RxCpltCallback+0x110>)
 800410c:	481b      	ldr	r0, [pc, #108]	@ (800417c <HAL_UART_RxCpltCallback+0x13c>)
 800410e:	23ff      	movs	r3, #255	@ 0xff
 8004110:	2210      	movs	r2, #16
 8004112:	f00f f83d 	bl	8013190 <HAL_UART_Transmit>
 8004116:	e00e      	b.n	8004136 <HAL_UART_RxCpltCallback+0xf6>
				}
				else
				{
					Receiving = FALSE;
 8004118:	4b12      	ldr	r3, [pc, #72]	@ (8004164 <HAL_UART_RxCpltCallback+0x124>)
 800411a:	2200      	movs	r2, #0
 800411c:	701a      	strb	r2, [r3, #0]
 800411e:	e00a      	b.n	8004136 <HAL_UART_RxCpltCallback+0xf6>
				}
			}
		}
		else
		{
			if(rec_ch == 0xAA)
 8004120:	4b12      	ldr	r3, [pc, #72]	@ (800416c <HAL_UART_RxCpltCallback+0x12c>)
 8004122:	781b      	ldrb	r3, [r3, #0]
 8004124:	2baa      	cmp	r3, #170	@ 0xaa
 8004126:	d103      	bne.n	8004130 <HAL_UART_RxCpltCallback+0xf0>
				Flag_Head = TRUE;
 8004128:	4b0d      	ldr	r3, [pc, #52]	@ (8004160 <HAL_UART_RxCpltCallback+0x120>)
 800412a:	2201      	movs	r2, #1
 800412c:	701a      	strb	r2, [r3, #0]
 800412e:	e002      	b.n	8004136 <HAL_UART_RxCpltCallback+0xf6>
			else
				Flag_Head = FALSE;
 8004130:	4b0b      	ldr	r3, [pc, #44]	@ (8004160 <HAL_UART_RxCpltCallback+0x120>)
 8004132:	2200      	movs	r2, #0
 8004134:	701a      	strb	r2, [r3, #0]
		}
	}
	HAL_UART_Receive_IT(&huart3, &rec_ch, 1);
 8004136:	490d      	ldr	r1, [pc, #52]	@ (800416c <HAL_UART_RxCpltCallback+0x12c>)
 8004138:	4b10      	ldr	r3, [pc, #64]	@ (800417c <HAL_UART_RxCpltCallback+0x13c>)
 800413a:	2201      	movs	r2, #1
 800413c:	0018      	movs	r0, r3
 800413e:	f00f f8d3 	bl	80132e8 <HAL_UART_Receive_IT>
}
 8004142:	46c0      	nop			@ (mov r8, r8)
 8004144:	46bd      	mov	sp, r7
 8004146:	b003      	add	sp, #12
 8004148:	bd90      	pop	{r4, r7, pc}
 800414a:	46c0      	nop			@ (mov r8, r8)
 800414c:	20000c10 	.word	0x20000c10
 8004150:	20000c00 	.word	0x20000c00
 8004154:	20000c02 	.word	0x20000c02
 8004158:	20000c14 	.word	0x20000c14
 800415c:	40004800 	.word	0x40004800
 8004160:	20000bfb 	.word	0x20000bfb
 8004164:	20000bfc 	.word	0x20000bfc
 8004168:	200033de 	.word	0x200033de
 800416c:	20000a78 	.word	0x20000a78
 8004170:	20000bc8 	.word	0x20000bc8
 8004174:	200033e0 	.word	0x200033e0
 8004178:	20000bfa 	.word	0x20000bfa
 800417c:	20000778 	.word	0x20000778

08004180 <HAL_TIM_IC_CaptureCallback>:

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8004180:	b580      	push	{r7, lr}
 8004182:	b082      	sub	sp, #8
 8004184:	af00      	add	r7, sp, #0
 8004186:	6078      	str	r0, [r7, #4]
	if(htim->Instance == TIM2)
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	681a      	ldr	r2, [r3, #0]
 800418c:	2380      	movs	r3, #128	@ 0x80
 800418e:	05db      	lsls	r3, r3, #23
 8004190:	429a      	cmp	r2, r3
 8004192:	d14d      	bne.n	8004230 <HAL_TIM_IC_CaptureCallback+0xb0>
	{
		if(Is_First_Captured == 0)
 8004194:	4b4e      	ldr	r3, [pc, #312]	@ (80042d0 <HAL_TIM_IC_CaptureCallback+0x150>)
 8004196:	681b      	ldr	r3, [r3, #0]
 8004198:	2b00      	cmp	r3, #0
 800419a:	d119      	bne.n	80041d0 <HAL_TIM_IC_CaptureCallback+0x50>
		{
			IC_Val1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	2100      	movs	r1, #0
 80041a0:	0018      	movs	r0, r3
 80041a2:	f00e fc69 	bl	8012a78 <HAL_TIM_ReadCapturedValue>
 80041a6:	0002      	movs	r2, r0
 80041a8:	4b4a      	ldr	r3, [pc, #296]	@ (80042d4 <HAL_TIM_IC_CaptureCallback+0x154>)
 80041aa:	601a      	str	r2, [r3, #0]
			Is_First_Captured = 1;
 80041ac:	4b48      	ldr	r3, [pc, #288]	@ (80042d0 <HAL_TIM_IC_CaptureCallback+0x150>)
 80041ae:	2201      	movs	r2, #1
 80041b0:	601a      	str	r2, [r3, #0]
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	681b      	ldr	r3, [r3, #0]
 80041b6:	6a1a      	ldr	r2, [r3, #32]
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	210a      	movs	r1, #10
 80041be:	438a      	bics	r2, r1
 80041c0:	621a      	str	r2, [r3, #32]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	681a      	ldr	r2, [r3, #0]
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	6a12      	ldr	r2, [r2, #32]
 80041cc:	621a      	str	r2, [r3, #32]
 80041ce:	e02f      	b.n	8004230 <HAL_TIM_IC_CaptureCallback+0xb0>
		}
		else if(Is_First_Captured == 1)
 80041d0:	4b3f      	ldr	r3, [pc, #252]	@ (80042d0 <HAL_TIM_IC_CaptureCallback+0x150>)
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	2b01      	cmp	r3, #1
 80041d6:	d12b      	bne.n	8004230 <HAL_TIM_IC_CaptureCallback+0xb0>
		{
			IC_Val2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	2100      	movs	r1, #0
 80041dc:	0018      	movs	r0, r3
 80041de:	f00e fc4b 	bl	8012a78 <HAL_TIM_ReadCapturedValue>
 80041e2:	0002      	movs	r2, r0
 80041e4:	4b3c      	ldr	r3, [pc, #240]	@ (80042d8 <HAL_TIM_IC_CaptureCallback+0x158>)
 80041e6:	601a      	str	r2, [r3, #0]
			__HAL_TIM_SET_COUNTER(htim, 0);
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	2200      	movs	r2, #0
 80041ee:	625a      	str	r2, [r3, #36]	@ 0x24

			if(IC_Val2 > IC_Val1)
 80041f0:	4b39      	ldr	r3, [pc, #228]	@ (80042d8 <HAL_TIM_IC_CaptureCallback+0x158>)
 80041f2:	681a      	ldr	r2, [r3, #0]
 80041f4:	4b37      	ldr	r3, [pc, #220]	@ (80042d4 <HAL_TIM_IC_CaptureCallback+0x154>)
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	429a      	cmp	r2, r3
 80041fa:	d906      	bls.n	800420a <HAL_TIM_IC_CaptureCallback+0x8a>
			{
				Width = IC_Val2 - IC_Val1;
 80041fc:	4b36      	ldr	r3, [pc, #216]	@ (80042d8 <HAL_TIM_IC_CaptureCallback+0x158>)
 80041fe:	681a      	ldr	r2, [r3, #0]
 8004200:	4b34      	ldr	r3, [pc, #208]	@ (80042d4 <HAL_TIM_IC_CaptureCallback+0x154>)
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	1ad2      	subs	r2, r2, r3
 8004206:	4b35      	ldr	r3, [pc, #212]	@ (80042dc <HAL_TIM_IC_CaptureCallback+0x15c>)
 8004208:	601a      	str	r2, [r3, #0]
			}

			Is_First_Captured = 0;
 800420a:	4b31      	ldr	r3, [pc, #196]	@ (80042d0 <HAL_TIM_IC_CaptureCallback+0x150>)
 800420c:	2200      	movs	r2, #0
 800420e:	601a      	str	r2, [r3, #0]
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	6a1a      	ldr	r2, [r3, #32]
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	210a      	movs	r1, #10
 800421c:	438a      	bics	r2, r1
 800421e:	621a      	str	r2, [r3, #32]
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	681b      	ldr	r3, [r3, #0]
 8004224:	6a1a      	ldr	r2, [r3, #32]
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	2102      	movs	r1, #2
 800422c:	430a      	orrs	r2, r1
 800422e:	621a      	str	r2, [r3, #32]
		}
	}

	if(htim->Instance== TIM1)
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	4a2a      	ldr	r2, [pc, #168]	@ (80042e0 <HAL_TIM_IC_CaptureCallback+0x160>)
 8004236:	4293      	cmp	r3, r2
 8004238:	d146      	bne.n	80042c8 <HAL_TIM_IC_CaptureCallback+0x148>
	{
		if(Is_First_Captured_x == 0)
 800423a:	4b2a      	ldr	r3, [pc, #168]	@ (80042e4 <HAL_TIM_IC_CaptureCallback+0x164>)
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	2b00      	cmp	r3, #0
 8004240:	d110      	bne.n	8004264 <HAL_TIM_IC_CaptureCallback+0xe4>
		{
			IC_Val3 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	2100      	movs	r1, #0
 8004246:	0018      	movs	r0, r3
 8004248:	f00e fc16 	bl	8012a78 <HAL_TIM_ReadCapturedValue>
 800424c:	0002      	movs	r2, r0
 800424e:	4b26      	ldr	r3, [pc, #152]	@ (80042e8 <HAL_TIM_IC_CaptureCallback+0x168>)
 8004250:	601a      	str	r2, [r3, #0]
			Is_First_Captured_x = 1;
 8004252:	4b24      	ldr	r3, [pc, #144]	@ (80042e4 <HAL_TIM_IC_CaptureCallback+0x164>)
 8004254:	2201      	movs	r2, #1
 8004256:	601a      	str	r2, [r3, #0]
			counter++;
 8004258:	4b24      	ldr	r3, [pc, #144]	@ (80042ec <HAL_TIM_IC_CaptureCallback+0x16c>)
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	1c5a      	adds	r2, r3, #1
 800425e:	4b23      	ldr	r3, [pc, #140]	@ (80042ec <HAL_TIM_IC_CaptureCallback+0x16c>)
 8004260:	601a      	str	r2, [r3, #0]
				Difference = ((0xFFFF - IC_Val3) + IC_Val4) + 1;
			}
			Is_First_Captured_x = 0;
		}
	}
}
 8004262:	e031      	b.n	80042c8 <HAL_TIM_IC_CaptureCallback+0x148>
		else if(Is_First_Captured_x == 1)
 8004264:	4b1f      	ldr	r3, [pc, #124]	@ (80042e4 <HAL_TIM_IC_CaptureCallback+0x164>)
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	2b01      	cmp	r3, #1
 800426a:	d12d      	bne.n	80042c8 <HAL_TIM_IC_CaptureCallback+0x148>
			IC_Val4 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	2100      	movs	r1, #0
 8004270:	0018      	movs	r0, r3
 8004272:	f00e fc01 	bl	8012a78 <HAL_TIM_ReadCapturedValue>
 8004276:	0002      	movs	r2, r0
 8004278:	4b1d      	ldr	r3, [pc, #116]	@ (80042f0 <HAL_TIM_IC_CaptureCallback+0x170>)
 800427a:	601a      	str	r2, [r3, #0]
			counter++;
 800427c:	4b1b      	ldr	r3, [pc, #108]	@ (80042ec <HAL_TIM_IC_CaptureCallback+0x16c>)
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	1c5a      	adds	r2, r3, #1
 8004282:	4b1a      	ldr	r3, [pc, #104]	@ (80042ec <HAL_TIM_IC_CaptureCallback+0x16c>)
 8004284:	601a      	str	r2, [r3, #0]
			if(IC_Val4 > IC_Val3)
 8004286:	4b1a      	ldr	r3, [pc, #104]	@ (80042f0 <HAL_TIM_IC_CaptureCallback+0x170>)
 8004288:	681a      	ldr	r2, [r3, #0]
 800428a:	4b17      	ldr	r3, [pc, #92]	@ (80042e8 <HAL_TIM_IC_CaptureCallback+0x168>)
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	429a      	cmp	r2, r3
 8004290:	d907      	bls.n	80042a2 <HAL_TIM_IC_CaptureCallback+0x122>
				Difference = IC_Val4 - IC_Val3;
 8004292:	4b17      	ldr	r3, [pc, #92]	@ (80042f0 <HAL_TIM_IC_CaptureCallback+0x170>)
 8004294:	681a      	ldr	r2, [r3, #0]
 8004296:	4b14      	ldr	r3, [pc, #80]	@ (80042e8 <HAL_TIM_IC_CaptureCallback+0x168>)
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	1ad2      	subs	r2, r2, r3
 800429c:	4b15      	ldr	r3, [pc, #84]	@ (80042f4 <HAL_TIM_IC_CaptureCallback+0x174>)
 800429e:	601a      	str	r2, [r3, #0]
 80042a0:	e00f      	b.n	80042c2 <HAL_TIM_IC_CaptureCallback+0x142>
			else if(IC_Val4 < IC_Val3)
 80042a2:	4b13      	ldr	r3, [pc, #76]	@ (80042f0 <HAL_TIM_IC_CaptureCallback+0x170>)
 80042a4:	681a      	ldr	r2, [r3, #0]
 80042a6:	4b10      	ldr	r3, [pc, #64]	@ (80042e8 <HAL_TIM_IC_CaptureCallback+0x168>)
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	429a      	cmp	r2, r3
 80042ac:	d209      	bcs.n	80042c2 <HAL_TIM_IC_CaptureCallback+0x142>
				Difference = ((0xFFFF - IC_Val3) + IC_Val4) + 1;
 80042ae:	4b10      	ldr	r3, [pc, #64]	@ (80042f0 <HAL_TIM_IC_CaptureCallback+0x170>)
 80042b0:	681a      	ldr	r2, [r3, #0]
 80042b2:	4b0d      	ldr	r3, [pc, #52]	@ (80042e8 <HAL_TIM_IC_CaptureCallback+0x168>)
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	1ad3      	subs	r3, r2, r3
 80042b8:	2280      	movs	r2, #128	@ 0x80
 80042ba:	0252      	lsls	r2, r2, #9
 80042bc:	189a      	adds	r2, r3, r2
 80042be:	4b0d      	ldr	r3, [pc, #52]	@ (80042f4 <HAL_TIM_IC_CaptureCallback+0x174>)
 80042c0:	601a      	str	r2, [r3, #0]
			Is_First_Captured_x = 0;
 80042c2:	4b08      	ldr	r3, [pc, #32]	@ (80042e4 <HAL_TIM_IC_CaptureCallback+0x164>)
 80042c4:	2200      	movs	r2, #0
 80042c6:	601a      	str	r2, [r3, #0]
}
 80042c8:	46c0      	nop			@ (mov r8, r8)
 80042ca:	46bd      	mov	sp, r7
 80042cc:	b002      	add	sp, #8
 80042ce:	bd80      	pop	{r7, pc}
 80042d0:	20000cb8 	.word	0x20000cb8
 80042d4:	20000ca0 	.word	0x20000ca0
 80042d8:	20000ca4 	.word	0x20000ca4
 80042dc:	20000cb4 	.word	0x20000cb4
 80042e0:	40012c00 	.word	0x40012c00
 80042e4:	20000cbc 	.word	0x20000cbc
 80042e8:	20000ca8 	.word	0x20000ca8
 80042ec:	20000ce8 	.word	0x20000ce8
 80042f0:	20000cac 	.word	0x20000cac
 80042f4:	20000cb0 	.word	0x20000cb0

080042f8 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80042f8:	b580      	push	{r7, lr}
 80042fa:	b082      	sub	sp, #8
 80042fc:	af00      	add	r7, sp, #0
 80042fe:	6078      	str	r0, [r7, #4]
	if(htim->Instance== TIM3)
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	4a06      	ldr	r2, [pc, #24]	@ (8004320 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8004306:	4293      	cmp	r3, r2
 8004308:	d106      	bne.n	8004318 <HAL_TIM_PeriodElapsedCallback+0x20>
	{
		if (test_f == 0)
 800430a:	4b06      	ldr	r3, [pc, #24]	@ (8004324 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 800430c:	781b      	ldrb	r3, [r3, #0]
 800430e:	2b00      	cmp	r3, #0
 8004310:	d102      	bne.n	8004318 <HAL_TIM_PeriodElapsedCallback+0x20>
		{
			test_f = 1;
 8004312:	4b04      	ldr	r3, [pc, #16]	@ (8004324 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8004314:	2201      	movs	r2, #1
 8004316:	701a      	strb	r2, [r3, #0]
		}
	}
}
 8004318:	46c0      	nop			@ (mov r8, r8)
 800431a:	46bd      	mov	sp, r7
 800431c:	b002      	add	sp, #8
 800431e:	bd80      	pop	{r7, pc}
 8004320:	40000400 	.word	0x40000400
 8004324:	200033da 	.word	0x200033da

08004328 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8004328:	b590      	push	{r4, r7, lr}
 800432a:	b093      	sub	sp, #76	@ 0x4c
 800432c:	af10      	add	r7, sp, #64	@ 0x40
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800432e:	f009 fc23 	bl	800db78 <HAL_Init>
  /* USER CODE BEGIN Init */
//  	HAL_Delay(2000); //Proposed to test the electricity.
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8004332:	f000 f939 	bl	80045a8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8004336:	f000 fce3 	bl	8004d00 <MX_GPIO_Init>
  MX_DMA_Init();
 800433a:	f000 fcc3 	bl	8004cc4 <MX_DMA_Init>
  MX_USART1_UART_Init();
 800433e:	f000 fa5d 	bl	80047fc <MX_USART1_UART_Init>
  MX_I2C1_Init();
 8004342:	f000 f98d 	bl	8004660 <MX_I2C1_Init>
  MX_I2C2_Init();
 8004346:	f000 f9cb 	bl	80046e0 <MX_I2C2_Init>
  MX_LPUART1_UART_Init();
 800434a:	f000 fa09 	bl	8004760 <MX_LPUART1_UART_Init>
  MX_USART2_UART_Init();
 800434e:	f000 faab 	bl	80048a8 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8004352:	f000 faf7 	bl	8004944 <MX_USART3_UART_Init>
  MX_USART4_UART_Init();
 8004356:	f000 fb29 	bl	80049ac <MX_USART4_UART_Init>
  MX_SPI1_Init();
 800435a:	f000 fb5b 	bl	8004a14 <MX_SPI1_Init>
  MX_TIM1_Init();
 800435e:	f000 fb97 	bl	8004a90 <MX_TIM1_Init>
  MX_TIM2_Init();
 8004362:	f000 fbfb 	bl	8004b5c <MX_TIM2_Init>
  if (MX_FATFS_Init() != APP_OK) {
 8004366:	f011 fac3 	bl	80158f0 <MX_FATFS_Init>
 800436a:	1e03      	subs	r3, r0, #0
 800436c:	d001      	beq.n	8004372 <main+0x4a>
    Error_Handler();
 800436e:	f008 fa43 	bl	800c7f8 <Error_Handler>
  }
  MX_TIM3_Init();
 8004372:	f000 fc4f 	bl	8004c14 <MX_TIM3_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 8004376:	f000 f966 	bl	8004646 <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */
  __HAL_UART_ENABLE_IT(&huart1, UART_IT_IDLE);
 800437a:	4b73      	ldr	r3, [pc, #460]	@ (8004548 <main+0x220>)
 800437c:	681b      	ldr	r3, [r3, #0]
 800437e:	681a      	ldr	r2, [r3, #0]
 8004380:	4b71      	ldr	r3, [pc, #452]	@ (8004548 <main+0x220>)
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	2110      	movs	r1, #16
 8004386:	430a      	orrs	r2, r1
 8004388:	601a      	str	r2, [r3, #0]

  /*eric*/
  //HAL_UART_Receive_DMA(&huart1, (uint8_t*)receive_buff, 64);
  HAL_UART_Receive_DMA(&huart1, receive_buff, 64);
 800438a:	4970      	ldr	r1, [pc, #448]	@ (800454c <main+0x224>)
 800438c:	4b6e      	ldr	r3, [pc, #440]	@ (8004548 <main+0x220>)
 800438e:	2240      	movs	r2, #64	@ 0x40
 8004390:	0018      	movs	r0, r3
 8004392:	f00f f813 	bl	80133bc <HAL_UART_Receive_DMA>
  /*eric*/

  HAL_UART_Receive_IT(&huart3, &rec_ch, 1);
 8004396:	496e      	ldr	r1, [pc, #440]	@ (8004550 <main+0x228>)
 8004398:	4b6e      	ldr	r3, [pc, #440]	@ (8004554 <main+0x22c>)
 800439a:	2201      	movs	r2, #1
 800439c:	0018      	movs	r0, r3
 800439e:	f00e ffa3 	bl	80132e8 <HAL_UART_Receive_IT>
  HAL_TIM_Base_Start_IT(&htim1);
 80043a2:	4b6d      	ldr	r3, [pc, #436]	@ (8004558 <main+0x230>)
 80043a4:	0018      	movs	r0, r3
 80043a6:	f00d fecf 	bl	8012148 <HAL_TIM_Base_Start_IT>
  HAL_TIM_IC_Start_IT(&htim1, TIM_CHANNEL_1);
 80043aa:	4b6b      	ldr	r3, [pc, #428]	@ (8004558 <main+0x230>)
 80043ac:	2100      	movs	r1, #0
 80043ae:	0018      	movs	r0, r3
 80043b0:	f00d ff7e 	bl	80122b0 <HAL_TIM_IC_Start_IT>
  HAL_TIM_Base_Start_IT(&htim2);
 80043b4:	4b69      	ldr	r3, [pc, #420]	@ (800455c <main+0x234>)
 80043b6:	0018      	movs	r0, r3
 80043b8:	f00d fec6 	bl	8012148 <HAL_TIM_Base_Start_IT>
  HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);
 80043bc:	4b67      	ldr	r3, [pc, #412]	@ (800455c <main+0x234>)
 80043be:	2100      	movs	r1, #0
 80043c0:	0018      	movs	r0, r3
 80043c2:	f00d ff75 	bl	80122b0 <HAL_TIM_IC_Start_IT>
  HAL_TIM_Base_Start_IT(&htim3);
 80043c6:	4b66      	ldr	r3, [pc, #408]	@ (8004560 <main+0x238>)
 80043c8:	0018      	movs	r0, r3
 80043ca:	f00d febd 	bl	8012148 <HAL_TIM_Base_Start_IT>

  HAL_Delay(200); //changed by Edwin from 200 to 10000
 80043ce:	20c8      	movs	r0, #200	@ 0xc8
 80043d0:	f009 fc58 	bl	800dc84 <HAL_Delay>

//  EEPROM_PageErase(3);
//  eeprom_w();
//  eeprom_check();
  eeprom_r();
 80043d4:	f004 fda6 	bl	8008f24 <eeprom_r>
  PCF2129_Init(hi2c1, RTC_WRITE_ADDR);
 80043d8:	4c62      	ldr	r4, [pc, #392]	@ (8004564 <main+0x23c>)
 80043da:	23a2      	movs	r3, #162	@ 0xa2
 80043dc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80043de:	466b      	mov	r3, sp
 80043e0:	0018      	movs	r0, r3
 80043e2:	0023      	movs	r3, r4
 80043e4:	3310      	adds	r3, #16
 80043e6:	223c      	movs	r2, #60	@ 0x3c
 80043e8:	0019      	movs	r1, r3
 80043ea:	f014 fcb4 	bl	8018d56 <memcpy>
 80043ee:	6820      	ldr	r0, [r4, #0]
 80043f0:	6861      	ldr	r1, [r4, #4]
 80043f2:	68a2      	ldr	r2, [r4, #8]
 80043f4:	68e3      	ldr	r3, [r4, #12]
 80043f6:	f008 fa05 	bl	800c804 <PCF2129_Init>
//  rtc_set();


  //Mounting SD card
  fresult = f_mount(&fs, "/", 1);
 80043fa:	495b      	ldr	r1, [pc, #364]	@ (8004568 <main+0x240>)
 80043fc:	4b5b      	ldr	r3, [pc, #364]	@ (800456c <main+0x244>)
 80043fe:	2201      	movs	r2, #1
 8004400:	0018      	movs	r0, r3
 8004402:	f013 f9f5 	bl	80177f0 <f_mount>
 8004406:	0003      	movs	r3, r0
 8004408:	001a      	movs	r2, r3
 800440a:	4b59      	ldr	r3, [pc, #356]	@ (8004570 <main+0x248>)
 800440c:	701a      	strb	r2, [r3, #0]
  //Create the file with read write access and open it
//  fresult = f_open(&fil, "tripDATA.txt", FA_OPEN_EXISTING | FA_READ | FA_WRITE);
  fresult = f_open(&fil, "tripDATA.txt", FA_CREATE_NEW | FA_WRITE);
 800440e:	4959      	ldr	r1, [pc, #356]	@ (8004574 <main+0x24c>)
 8004410:	4b59      	ldr	r3, [pc, #356]	@ (8004578 <main+0x250>)
 8004412:	2206      	movs	r2, #6
 8004414:	0018      	movs	r0, r3
 8004416:	f013 fa37 	bl	8017888 <f_open>
 800441a:	0003      	movs	r3, r0
 800441c:	001a      	movs	r2, r3
 800441e:	4b54      	ldr	r3, [pc, #336]	@ (8004570 <main+0x248>)
 8004420:	701a      	strb	r2, [r3, #0]
  //Writing text
  strcpy (buffer, "vehicleNo meterNo startDate startTime endDate endTime waitTime journeyTime paidKM totalKM nonBusiness amount surCharge totalCharge\n");
 8004422:	4a56      	ldr	r2, [pc, #344]	@ (800457c <main+0x254>)
 8004424:	4b56      	ldr	r3, [pc, #344]	@ (8004580 <main+0x258>)
 8004426:	0010      	movs	r0, r2
 8004428:	0019      	movs	r1, r3
 800442a:	2384      	movs	r3, #132	@ 0x84
 800442c:	001a      	movs	r2, r3
 800442e:	f014 fc92 	bl	8018d56 <memcpy>
  fresult = f_write(&fil, buffer, bufsize(buffer), &bw);
 8004432:	4b52      	ldr	r3, [pc, #328]	@ (800457c <main+0x254>)
 8004434:	0018      	movs	r0, r3
 8004436:	f7ff fd55 	bl	8003ee4 <bufsize>
 800443a:	0003      	movs	r3, r0
 800443c:	001a      	movs	r2, r3
 800443e:	4b51      	ldr	r3, [pc, #324]	@ (8004584 <main+0x25c>)
 8004440:	494e      	ldr	r1, [pc, #312]	@ (800457c <main+0x254>)
 8004442:	484d      	ldr	r0, [pc, #308]	@ (8004578 <main+0x250>)
 8004444:	f013 fc25 	bl	8017c92 <f_write>
 8004448:	0003      	movs	r3, r0
 800444a:	001a      	movs	r2, r3
 800444c:	4b48      	ldr	r3, [pc, #288]	@ (8004570 <main+0x248>)
 800444e:	701a      	strb	r2, [r3, #0]
  //Close file
  f_close(&fil);
 8004450:	4b49      	ldr	r3, [pc, #292]	@ (8004578 <main+0x250>)
 8004452:	0018      	movs	r0, r3
 8004454:	f013 fe41 	bl	80180da <f_close>
  // clearing buffer to show that result obtained is from the file
  clear_buffer();
 8004458:	f7ff fd5a 	bl	8003f10 <clear_buffer>

  Voice_init();
 800445c:	f007 f8b0 	bl	800b5c0 <Voice_init>
//0x20 space
//0x41 A
//0X30 '0'
// 0X31 '1'

  SD_buffer[0] = plate_qr[6];
 8004460:	4b49      	ldr	r3, [pc, #292]	@ (8004588 <main+0x260>)
 8004462:	799a      	ldrb	r2, [r3, #6]
 8004464:	4b49      	ldr	r3, [pc, #292]	@ (800458c <main+0x264>)
 8004466:	701a      	strb	r2, [r3, #0]
  SD_buffer[1] = plate_qr[7];
 8004468:	4b47      	ldr	r3, [pc, #284]	@ (8004588 <main+0x260>)
 800446a:	79da      	ldrb	r2, [r3, #7]
 800446c:	4b47      	ldr	r3, [pc, #284]	@ (800458c <main+0x264>)
 800446e:	705a      	strb	r2, [r3, #1]
  SD_buffer[2] = plate_qr[8];
 8004470:	4b45      	ldr	r3, [pc, #276]	@ (8004588 <main+0x260>)
 8004472:	7a1a      	ldrb	r2, [r3, #8]
 8004474:	4b45      	ldr	r3, [pc, #276]	@ (800458c <main+0x264>)
 8004476:	709a      	strb	r2, [r3, #2]
  SD_buffer[3] = plate_qr[9];
 8004478:	4b43      	ldr	r3, [pc, #268]	@ (8004588 <main+0x260>)
 800447a:	7a5a      	ldrb	r2, [r3, #9]
 800447c:	4b43      	ldr	r3, [pc, #268]	@ (800458c <main+0x264>)
 800447e:	70da      	strb	r2, [r3, #3]
  SD_buffer[4] = plate_qr[10];
 8004480:	4b41      	ldr	r3, [pc, #260]	@ (8004588 <main+0x260>)
 8004482:	7a9a      	ldrb	r2, [r3, #10]
 8004484:	4b41      	ldr	r3, [pc, #260]	@ (800458c <main+0x264>)
 8004486:	711a      	strb	r2, [r3, #4]
  SD_buffer[5] = plate_qr[11];
 8004488:	4b3f      	ldr	r3, [pc, #252]	@ (8004588 <main+0x260>)
 800448a:	7ada      	ldrb	r2, [r3, #11]
 800448c:	4b3f      	ldr	r3, [pc, #252]	@ (800458c <main+0x264>)
 800448e:	715a      	strb	r2, [r3, #5]
  SD_buffer[6] = 0x20;
 8004490:	4b3e      	ldr	r3, [pc, #248]	@ (800458c <main+0x264>)
 8004492:	2220      	movs	r2, #32
 8004494:	719a      	strb	r2, [r3, #6]

  SD_buffer[7] = 0x41;
 8004496:	4b3d      	ldr	r3, [pc, #244]	@ (800458c <main+0x264>)
 8004498:	2241      	movs	r2, #65	@ 0x41
 800449a:	71da      	strb	r2, [r3, #7]
  SD_buffer[8] = 0x30;
 800449c:	4b3b      	ldr	r3, [pc, #236]	@ (800458c <main+0x264>)
 800449e:	2230      	movs	r2, #48	@ 0x30
 80044a0:	721a      	strb	r2, [r3, #8]
  SD_buffer[9] = 0x30;
 80044a2:	4b3a      	ldr	r3, [pc, #232]	@ (800458c <main+0x264>)
 80044a4:	2230      	movs	r2, #48	@ 0x30
 80044a6:	725a      	strb	r2, [r3, #9]
  SD_buffer[10] = 0x30;
 80044a8:	4b38      	ldr	r3, [pc, #224]	@ (800458c <main+0x264>)
 80044aa:	2230      	movs	r2, #48	@ 0x30
 80044ac:	729a      	strb	r2, [r3, #10]
  SD_buffer[11] = 0x30;
 80044ae:	4b37      	ldr	r3, [pc, #220]	@ (800458c <main+0x264>)
 80044b0:	2230      	movs	r2, #48	@ 0x30
 80044b2:	72da      	strb	r2, [r3, #11]
  SD_buffer[12] = 0x31;
 80044b4:	4b35      	ldr	r3, [pc, #212]	@ (800458c <main+0x264>)
 80044b6:	2231      	movs	r2, #49	@ 0x31
 80044b8:	731a      	strb	r2, [r3, #12]
  SD_buffer[13] = 0x20;
 80044ba:	4b34      	ldr	r3, [pc, #208]	@ (800458c <main+0x264>)
 80044bc:	2220      	movs	r2, #32
 80044be:	735a      	strb	r2, [r3, #13]

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if (test_f)
 80044c0:	4b33      	ldr	r3, [pc, #204]	@ (8004590 <main+0x268>)
 80044c2:	781b      	ldrb	r3, [r3, #0]
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	d0fb      	beq.n	80044c0 <main+0x198>
	  {
		  if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1) == 0)
 80044c8:	4b32      	ldr	r3, [pc, #200]	@ (8004594 <main+0x26c>)
 80044ca:	2102      	movs	r1, #2
 80044cc:	0018      	movs	r0, r3
 80044ce:	f00a f989 	bl	800e7e4 <HAL_GPIO_ReadPin>
 80044d2:	1e03      	subs	r3, r0, #0
 80044d4:	d127      	bne.n	8004526 <main+0x1fe>
		  {
			  if(Flag_Para_W)
 80044d6:	4b30      	ldr	r3, [pc, #192]	@ (8004598 <main+0x270>)
 80044d8:	781b      	ldrb	r3, [r3, #0]
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d01a      	beq.n	8004514 <main+0x1ec>
			  {
				  Flag_Para_W = FALSE;
 80044de:	4b2e      	ldr	r3, [pc, #184]	@ (8004598 <main+0x270>)
 80044e0:	2200      	movs	r2, #0
 80044e2:	701a      	strb	r2, [r3, #0]
				  eeprom_w();
 80044e4:	f004 fcca 	bl	8008e7c <eeprom_w>
				  eeprom_check();
 80044e8:	f004 fcee 	bl	8008ec8 <eeprom_check>
				  eeprom_r();
 80044ec:	f004 fd1a 	bl	8008f24 <eeprom_r>
				  rtc_set();
 80044f0:	f004 fed0 	bl	8009294 <rtc_set>
				  memset(ReplyBuffer, 0, 16);
 80044f4:	4b29      	ldr	r3, [pc, #164]	@ (800459c <main+0x274>)
 80044f6:	2210      	movs	r2, #16
 80044f8:	2100      	movs	r1, #0
 80044fa:	0018      	movs	r0, r3
 80044fc:	f014 fba8 	bl	8018c50 <memset>
				  unsigned char ok[1] = {0xDD};
 8004500:	1d3b      	adds	r3, r7, #4
 8004502:	4a27      	ldr	r2, [pc, #156]	@ (80045a0 <main+0x278>)
 8004504:	7812      	ldrb	r2, [r2, #0]
 8004506:	701a      	strb	r2, [r3, #0]
				  HAL_UART_Transmit(&huart3, ok, 1, 0x02);
 8004508:	1d39      	adds	r1, r7, #4
 800450a:	4812      	ldr	r0, [pc, #72]	@ (8004554 <main+0x22c>)
 800450c:	2302      	movs	r3, #2
 800450e:	2201      	movs	r2, #1
 8004510:	f00e fe3e 	bl	8013190 <HAL_UART_Transmit>
			  }
			  time_update();
 8004514:	f004 fef4 	bl	8009300 <time_update>
			  HAL_UART_Transmit(&huart1, (uint8_t *) plate_qr, 14, 0x1C);
 8004518:	491b      	ldr	r1, [pc, #108]	@ (8004588 <main+0x260>)
 800451a:	480b      	ldr	r0, [pc, #44]	@ (8004548 <main+0x220>)
 800451c:	231c      	movs	r3, #28
 800451e:	220e      	movs	r2, #14
 8004520:	f00e fe36 	bl	8013190 <HAL_UART_Transmit>
 8004524:	e00c      	b.n	8004540 <main+0x218>
		  }
		  else if(Flag_Protect)
 8004526:	4b1f      	ldr	r3, [pc, #124]	@ (80045a4 <main+0x27c>)
 8004528:	781b      	ldrb	r3, [r3, #0]
 800452a:	2b00      	cmp	r3, #0
 800452c:	d004      	beq.n	8004538 <main+0x210>
		  {
			  DebugLog(); // Debug record every 3 sec
 800452e:	f005 faa9 	bl	8009a84 <DebugLog>
			  //anti-tamper process
			  Anti_Tamper_Handle();
 8004532:	f006 facd 	bl	800aad0 <Anti_Tamper_Handle>
 8004536:	e003      	b.n	8004540 <main+0x218>
		  }
		  else
		  {
			  DebugLog(); // Debug record every 3 sec
 8004538:	f005 faa4 	bl	8009a84 <DebugLog>
			  //normal process
			  Status_Check();
 800453c:	f000 fcbe 	bl	8004ebc <Status_Check>
		  }

		  test_f = 0;
 8004540:	4b13      	ldr	r3, [pc, #76]	@ (8004590 <main+0x268>)
 8004542:	2200      	movs	r2, #0
 8004544:	701a      	strb	r2, [r3, #0]
	  if (test_f)
 8004546:	e7bb      	b.n	80044c0 <main+0x198>
 8004548:	20000658 	.word	0x20000658
 800454c:	20000a80 	.word	0x20000a80
 8004550:	20000a78 	.word	0x20000a78
 8004554:	20000778 	.word	0x20000778
 8004558:	20000958 	.word	0x20000958
 800455c:	200009a4 	.word	0x200009a4
 8004560:	200009f0 	.word	0x200009f0
 8004564:	20000530 	.word	0x20000530
 8004568:	08019880 	.word	0x08019880
 800456c:	20000ed0 	.word	0x20000ed0
 8004570:	20002f34 	.word	0x20002f34
 8004574:	08019884 	.word	0x08019884
 8004578:	20001f04 	.word	0x20001f04
 800457c:	20002f3c 	.word	0x20002f3c
 8004580:	08019894 	.word	0x08019894
 8004584:	20002f38 	.word	0x20002f38
 8004588:	20000098 	.word	0x20000098
 800458c:	2000333c 	.word	0x2000333c
 8004590:	200033da 	.word	0x200033da
 8004594:	50000400 	.word	0x50000400
 8004598:	20000bfa 	.word	0x20000bfa
 800459c:	20000c00 	.word	0x20000c00
 80045a0:	08019918 	.word	0x08019918
 80045a4:	20000d3d 	.word	0x20000d3d

080045a8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80045a8:	b590      	push	{r4, r7, lr}
 80045aa:	b093      	sub	sp, #76	@ 0x4c
 80045ac:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80045ae:	2410      	movs	r4, #16
 80045b0:	193b      	adds	r3, r7, r4
 80045b2:	0018      	movs	r0, r3
 80045b4:	2338      	movs	r3, #56	@ 0x38
 80045b6:	001a      	movs	r2, r3
 80045b8:	2100      	movs	r1, #0
 80045ba:	f014 fb49 	bl	8018c50 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80045be:	003b      	movs	r3, r7
 80045c0:	0018      	movs	r0, r3
 80045c2:	2310      	movs	r3, #16
 80045c4:	001a      	movs	r2, r3
 80045c6:	2100      	movs	r1, #0
 80045c8:	f014 fb42 	bl	8018c50 <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 80045cc:	2380      	movs	r3, #128	@ 0x80
 80045ce:	009b      	lsls	r3, r3, #2
 80045d0:	0018      	movs	r0, r3
 80045d2:	f00b fff9 	bl	80105c8 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80045d6:	193b      	adds	r3, r7, r4
 80045d8:	2202      	movs	r2, #2
 80045da:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80045dc:	193b      	adds	r3, r7, r4
 80045de:	2280      	movs	r2, #128	@ 0x80
 80045e0:	0052      	lsls	r2, r2, #1
 80045e2:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 80045e4:	193b      	adds	r3, r7, r4
 80045e6:	2200      	movs	r2, #0
 80045e8:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80045ea:	193b      	adds	r3, r7, r4
 80045ec:	2240      	movs	r2, #64	@ 0x40
 80045ee:	615a      	str	r2, [r3, #20]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80045f0:	193b      	adds	r3, r7, r4
 80045f2:	2200      	movs	r2, #0
 80045f4:	61da      	str	r2, [r3, #28]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80045f6:	193b      	adds	r3, r7, r4
 80045f8:	0018      	movs	r0, r3
 80045fa:	f00c f831 	bl	8010660 <HAL_RCC_OscConfig>
 80045fe:	1e03      	subs	r3, r0, #0
 8004600:	d001      	beq.n	8004606 <SystemClock_Config+0x5e>
  {
    Error_Handler();
 8004602:	f008 f8f9 	bl	800c7f8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8004606:	003b      	movs	r3, r7
 8004608:	2207      	movs	r2, #7
 800460a:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800460c:	003b      	movs	r3, r7
 800460e:	2200      	movs	r2, #0
 8004610:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8004612:	003b      	movs	r3, r7
 8004614:	2200      	movs	r2, #0
 8004616:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8004618:	003b      	movs	r3, r7
 800461a:	2200      	movs	r2, #0
 800461c:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800461e:	003b      	movs	r3, r7
 8004620:	2100      	movs	r1, #0
 8004622:	0018      	movs	r0, r3
 8004624:	f00c fb36 	bl	8010c94 <HAL_RCC_ClockConfig>
 8004628:	1e03      	subs	r3, r0, #0
 800462a:	d001      	beq.n	8004630 <SystemClock_Config+0x88>
  {
    Error_Handler();
 800462c:	f008 f8e4 	bl	800c7f8 <Error_Handler>
  }
  HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_SYSCLK, RCC_MCODIV_1);
 8004630:	2380      	movs	r3, #128	@ 0x80
 8004632:	045b      	lsls	r3, r3, #17
 8004634:	2200      	movs	r2, #0
 8004636:	0019      	movs	r1, r3
 8004638:	2000      	movs	r0, #0
 800463a:	f00c fc33 	bl	8010ea4 <HAL_RCC_MCOConfig>
}
 800463e:	46c0      	nop			@ (mov r8, r8)
 8004640:	46bd      	mov	sp, r7
 8004642:	b013      	add	sp, #76	@ 0x4c
 8004644:	bd90      	pop	{r4, r7, pc}

08004646 <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 8004646:	b580      	push	{r7, lr}
 8004648:	af00      	add	r7, sp, #0
  /* USART1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(USART1_IRQn, 2, 0);
 800464a:	2200      	movs	r2, #0
 800464c:	2102      	movs	r1, #2
 800464e:	201b      	movs	r0, #27
 8004650:	f009 fbfe 	bl	800de50 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART1_IRQn);
 8004654:	201b      	movs	r0, #27
 8004656:	f009 fc10 	bl	800de7a <HAL_NVIC_EnableIRQ>
}
 800465a:	46c0      	nop			@ (mov r8, r8)
 800465c:	46bd      	mov	sp, r7
 800465e:	bd80      	pop	{r7, pc}

08004660 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8004660:	b580      	push	{r7, lr}
 8004662:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8004664:	4b1b      	ldr	r3, [pc, #108]	@ (80046d4 <MX_I2C1_Init+0x74>)
 8004666:	4a1c      	ldr	r2, [pc, #112]	@ (80046d8 <MX_I2C1_Init+0x78>)
 8004668:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00303D5B;
 800466a:	4b1a      	ldr	r3, [pc, #104]	@ (80046d4 <MX_I2C1_Init+0x74>)
 800466c:	4a1b      	ldr	r2, [pc, #108]	@ (80046dc <MX_I2C1_Init+0x7c>)
 800466e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8004670:	4b18      	ldr	r3, [pc, #96]	@ (80046d4 <MX_I2C1_Init+0x74>)
 8004672:	2200      	movs	r2, #0
 8004674:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8004676:	4b17      	ldr	r3, [pc, #92]	@ (80046d4 <MX_I2C1_Init+0x74>)
 8004678:	2201      	movs	r2, #1
 800467a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800467c:	4b15      	ldr	r3, [pc, #84]	@ (80046d4 <MX_I2C1_Init+0x74>)
 800467e:	2200      	movs	r2, #0
 8004680:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8004682:	4b14      	ldr	r3, [pc, #80]	@ (80046d4 <MX_I2C1_Init+0x74>)
 8004684:	2200      	movs	r2, #0
 8004686:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8004688:	4b12      	ldr	r3, [pc, #72]	@ (80046d4 <MX_I2C1_Init+0x74>)
 800468a:	2200      	movs	r2, #0
 800468c:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800468e:	4b11      	ldr	r3, [pc, #68]	@ (80046d4 <MX_I2C1_Init+0x74>)
 8004690:	2200      	movs	r2, #0
 8004692:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8004694:	4b0f      	ldr	r3, [pc, #60]	@ (80046d4 <MX_I2C1_Init+0x74>)
 8004696:	2200      	movs	r2, #0
 8004698:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800469a:	4b0e      	ldr	r3, [pc, #56]	@ (80046d4 <MX_I2C1_Init+0x74>)
 800469c:	0018      	movs	r0, r3
 800469e:	f00a f8db 	bl	800e858 <HAL_I2C_Init>
 80046a2:	1e03      	subs	r3, r0, #0
 80046a4:	d001      	beq.n	80046aa <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 80046a6:	f008 f8a7 	bl	800c7f8 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80046aa:	4b0a      	ldr	r3, [pc, #40]	@ (80046d4 <MX_I2C1_Init+0x74>)
 80046ac:	2100      	movs	r1, #0
 80046ae:	0018      	movs	r0, r3
 80046b0:	f00b fef2 	bl	8010498 <HAL_I2CEx_ConfigAnalogFilter>
 80046b4:	1e03      	subs	r3, r0, #0
 80046b6:	d001      	beq.n	80046bc <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 80046b8:	f008 f89e 	bl	800c7f8 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80046bc:	4b05      	ldr	r3, [pc, #20]	@ (80046d4 <MX_I2C1_Init+0x74>)
 80046be:	2100      	movs	r1, #0
 80046c0:	0018      	movs	r0, r3
 80046c2:	f00b ff35 	bl	8010530 <HAL_I2CEx_ConfigDigitalFilter>
 80046c6:	1e03      	subs	r3, r0, #0
 80046c8:	d001      	beq.n	80046ce <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 80046ca:	f008 f895 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80046ce:	46c0      	nop			@ (mov r8, r8)
 80046d0:	46bd      	mov	sp, r7
 80046d2:	bd80      	pop	{r7, pc}
 80046d4:	20000530 	.word	0x20000530
 80046d8:	40005400 	.word	0x40005400
 80046dc:	00303d5b 	.word	0x00303d5b

080046e0 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80046e0:	b580      	push	{r7, lr}
 80046e2:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80046e4:	4b1b      	ldr	r3, [pc, #108]	@ (8004754 <MX_I2C2_Init+0x74>)
 80046e6:	4a1c      	ldr	r2, [pc, #112]	@ (8004758 <MX_I2C2_Init+0x78>)
 80046e8:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x00303D5B;
 80046ea:	4b1a      	ldr	r3, [pc, #104]	@ (8004754 <MX_I2C2_Init+0x74>)
 80046ec:	4a1b      	ldr	r2, [pc, #108]	@ (800475c <MX_I2C2_Init+0x7c>)
 80046ee:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 80046f0:	4b18      	ldr	r3, [pc, #96]	@ (8004754 <MX_I2C2_Init+0x74>)
 80046f2:	2200      	movs	r2, #0
 80046f4:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80046f6:	4b17      	ldr	r3, [pc, #92]	@ (8004754 <MX_I2C2_Init+0x74>)
 80046f8:	2201      	movs	r2, #1
 80046fa:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80046fc:	4b15      	ldr	r3, [pc, #84]	@ (8004754 <MX_I2C2_Init+0x74>)
 80046fe:	2200      	movs	r2, #0
 8004700:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8004702:	4b14      	ldr	r3, [pc, #80]	@ (8004754 <MX_I2C2_Init+0x74>)
 8004704:	2200      	movs	r2, #0
 8004706:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8004708:	4b12      	ldr	r3, [pc, #72]	@ (8004754 <MX_I2C2_Init+0x74>)
 800470a:	2200      	movs	r2, #0
 800470c:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800470e:	4b11      	ldr	r3, [pc, #68]	@ (8004754 <MX_I2C2_Init+0x74>)
 8004710:	2200      	movs	r2, #0
 8004712:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8004714:	4b0f      	ldr	r3, [pc, #60]	@ (8004754 <MX_I2C2_Init+0x74>)
 8004716:	2200      	movs	r2, #0
 8004718:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800471a:	4b0e      	ldr	r3, [pc, #56]	@ (8004754 <MX_I2C2_Init+0x74>)
 800471c:	0018      	movs	r0, r3
 800471e:	f00a f89b 	bl	800e858 <HAL_I2C_Init>
 8004722:	1e03      	subs	r3, r0, #0
 8004724:	d001      	beq.n	800472a <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 8004726:	f008 f867 	bl	800c7f8 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800472a:	4b0a      	ldr	r3, [pc, #40]	@ (8004754 <MX_I2C2_Init+0x74>)
 800472c:	2100      	movs	r1, #0
 800472e:	0018      	movs	r0, r3
 8004730:	f00b feb2 	bl	8010498 <HAL_I2CEx_ConfigAnalogFilter>
 8004734:	1e03      	subs	r3, r0, #0
 8004736:	d001      	beq.n	800473c <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 8004738:	f008 f85e 	bl	800c7f8 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 800473c:	4b05      	ldr	r3, [pc, #20]	@ (8004754 <MX_I2C2_Init+0x74>)
 800473e:	2100      	movs	r1, #0
 8004740:	0018      	movs	r0, r3
 8004742:	f00b fef5 	bl	8010530 <HAL_I2CEx_ConfigDigitalFilter>
 8004746:	1e03      	subs	r3, r0, #0
 8004748:	d001      	beq.n	800474e <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 800474a:	f008 f855 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 800474e:	46c0      	nop			@ (mov r8, r8)
 8004750:	46bd      	mov	sp, r7
 8004752:	bd80      	pop	{r7, pc}
 8004754:	2000057c 	.word	0x2000057c
 8004758:	40005800 	.word	0x40005800
 800475c:	00303d5b 	.word	0x00303d5b

08004760 <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 8004760:	b580      	push	{r7, lr}
 8004762:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 8004764:	4b23      	ldr	r3, [pc, #140]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 8004766:	4a24      	ldr	r2, [pc, #144]	@ (80047f8 <MX_LPUART1_UART_Init+0x98>)
 8004768:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 9600;
 800476a:	4b22      	ldr	r3, [pc, #136]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 800476c:	2296      	movs	r2, #150	@ 0x96
 800476e:	0192      	lsls	r2, r2, #6
 8004770:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 8004772:	4b20      	ldr	r3, [pc, #128]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 8004774:	2200      	movs	r2, #0
 8004776:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 8004778:	4b1e      	ldr	r3, [pc, #120]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 800477a:	2200      	movs	r2, #0
 800477c:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 800477e:	4b1d      	ldr	r3, [pc, #116]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 8004780:	2200      	movs	r2, #0
 8004782:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 8004784:	4b1b      	ldr	r3, [pc, #108]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 8004786:	220c      	movs	r2, #12
 8004788:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800478a:	4b1a      	ldr	r3, [pc, #104]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 800478c:	2200      	movs	r2, #0
 800478e:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004790:	4b18      	ldr	r3, [pc, #96]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 8004792:	2200      	movs	r2, #0
 8004794:	621a      	str	r2, [r3, #32]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004796:	4b17      	ldr	r3, [pc, #92]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 8004798:	2200      	movs	r2, #0
 800479a:	625a      	str	r2, [r3, #36]	@ 0x24
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800479c:	4b15      	ldr	r3, [pc, #84]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 800479e:	2200      	movs	r2, #0
 80047a0:	629a      	str	r2, [r3, #40]	@ 0x28
  hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 80047a2:	4b14      	ldr	r3, [pc, #80]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 80047a4:	2200      	movs	r2, #0
 80047a6:	665a      	str	r2, [r3, #100]	@ 0x64
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 80047a8:	4b12      	ldr	r3, [pc, #72]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 80047aa:	0018      	movs	r0, r3
 80047ac:	f00e fc9a 	bl	80130e4 <HAL_UART_Init>
 80047b0:	1e03      	subs	r3, r0, #0
 80047b2:	d001      	beq.n	80047b8 <MX_LPUART1_UART_Init+0x58>
  {
    Error_Handler();
 80047b4:	f008 f820 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80047b8:	4b0e      	ldr	r3, [pc, #56]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 80047ba:	2100      	movs	r1, #0
 80047bc:	0018      	movs	r0, r3
 80047be:	f010 ffb7 	bl	8015730 <HAL_UARTEx_SetTxFifoThreshold>
 80047c2:	1e03      	subs	r3, r0, #0
 80047c4:	d001      	beq.n	80047ca <MX_LPUART1_UART_Init+0x6a>
  {
    Error_Handler();
 80047c6:	f008 f817 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80047ca:	4b0a      	ldr	r3, [pc, #40]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 80047cc:	2100      	movs	r1, #0
 80047ce:	0018      	movs	r0, r3
 80047d0:	f010 ffee 	bl	80157b0 <HAL_UARTEx_SetRxFifoThreshold>
 80047d4:	1e03      	subs	r3, r0, #0
 80047d6:	d001      	beq.n	80047dc <MX_LPUART1_UART_Init+0x7c>
  {
    Error_Handler();
 80047d8:	f008 f80e 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 80047dc:	4b05      	ldr	r3, [pc, #20]	@ (80047f4 <MX_LPUART1_UART_Init+0x94>)
 80047de:	0018      	movs	r0, r3
 80047e0:	f010 ff6c 	bl	80156bc <HAL_UARTEx_DisableFifoMode>
 80047e4:	1e03      	subs	r3, r0, #0
 80047e6:	d001      	beq.n	80047ec <MX_LPUART1_UART_Init+0x8c>
  {
    Error_Handler();
 80047e8:	f008 f806 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 80047ec:	46c0      	nop			@ (mov r8, r8)
 80047ee:	46bd      	mov	sp, r7
 80047f0:	bd80      	pop	{r7, pc}
 80047f2:	46c0      	nop			@ (mov r8, r8)
 80047f4:	200005c8 	.word	0x200005c8
 80047f8:	40008000 	.word	0x40008000

080047fc <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80047fc:	b580      	push	{r7, lr}
 80047fe:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8004800:	4b27      	ldr	r3, [pc, #156]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004802:	4a28      	ldr	r2, [pc, #160]	@ (80048a4 <MX_USART1_UART_Init+0xa8>)
 8004804:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8004806:	4b26      	ldr	r3, [pc, #152]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004808:	22e1      	movs	r2, #225	@ 0xe1
 800480a:	0252      	lsls	r2, r2, #9
 800480c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800480e:	4b24      	ldr	r3, [pc, #144]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004810:	2200      	movs	r2, #0
 8004812:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8004814:	4b22      	ldr	r3, [pc, #136]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004816:	2200      	movs	r2, #0
 8004818:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800481a:	4b21      	ldr	r3, [pc, #132]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 800481c:	2200      	movs	r2, #0
 800481e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8004820:	4b1f      	ldr	r3, [pc, #124]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004822:	220c      	movs	r2, #12
 8004824:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004826:	4b1e      	ldr	r3, [pc, #120]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004828:	2200      	movs	r2, #0
 800482a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800482c:	4b1c      	ldr	r3, [pc, #112]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 800482e:	2200      	movs	r2, #0
 8004830:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004832:	4b1b      	ldr	r3, [pc, #108]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004834:	2200      	movs	r2, #0
 8004836:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004838:	4b19      	ldr	r3, [pc, #100]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 800483a:	2200      	movs	r2, #0
 800483c:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT|UART_ADVFEATURE_DMADISABLEONERROR_INIT;
 800483e:	4b18      	ldr	r3, [pc, #96]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004840:	2230      	movs	r2, #48	@ 0x30
 8004842:	629a      	str	r2, [r3, #40]	@ 0x28
  huart1.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 8004844:	4b16      	ldr	r3, [pc, #88]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004846:	2280      	movs	r2, #128	@ 0x80
 8004848:	0152      	lsls	r2, r2, #5
 800484a:	63da      	str	r2, [r3, #60]	@ 0x3c
  huart1.AdvancedInit.DMADisableonRxError = UART_ADVFEATURE_DMA_DISABLEONRXERROR;
 800484c:	4b14      	ldr	r3, [pc, #80]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 800484e:	2280      	movs	r2, #128	@ 0x80
 8004850:	0192      	lsls	r2, r2, #6
 8004852:	641a      	str	r2, [r3, #64]	@ 0x40
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8004854:	4b12      	ldr	r3, [pc, #72]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004856:	0018      	movs	r0, r3
 8004858:	f00e fc44 	bl	80130e4 <HAL_UART_Init>
 800485c:	1e03      	subs	r3, r0, #0
 800485e:	d001      	beq.n	8004864 <MX_USART1_UART_Init+0x68>
  {
    Error_Handler();
 8004860:	f007 ffca 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004864:	4b0e      	ldr	r3, [pc, #56]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004866:	2100      	movs	r1, #0
 8004868:	0018      	movs	r0, r3
 800486a:	f010 ff61 	bl	8015730 <HAL_UARTEx_SetTxFifoThreshold>
 800486e:	1e03      	subs	r3, r0, #0
 8004870:	d001      	beq.n	8004876 <MX_USART1_UART_Init+0x7a>
  {
    Error_Handler();
 8004872:	f007 ffc1 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004876:	4b0a      	ldr	r3, [pc, #40]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 8004878:	2100      	movs	r1, #0
 800487a:	0018      	movs	r0, r3
 800487c:	f010 ff98 	bl	80157b0 <HAL_UARTEx_SetRxFifoThreshold>
 8004880:	1e03      	subs	r3, r0, #0
 8004882:	d001      	beq.n	8004888 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8004884:	f007 ffb8 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8004888:	4b05      	ldr	r3, [pc, #20]	@ (80048a0 <MX_USART1_UART_Init+0xa4>)
 800488a:	0018      	movs	r0, r3
 800488c:	f010 ff16 	bl	80156bc <HAL_UARTEx_DisableFifoMode>
 8004890:	1e03      	subs	r3, r0, #0
 8004892:	d001      	beq.n	8004898 <MX_USART1_UART_Init+0x9c>
  {
    Error_Handler();
 8004894:	f007 ffb0 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8004898:	46c0      	nop			@ (mov r8, r8)
 800489a:	46bd      	mov	sp, r7
 800489c:	bd80      	pop	{r7, pc}
 800489e:	46c0      	nop			@ (mov r8, r8)
 80048a0:	20000658 	.word	0x20000658
 80048a4:	40013800 	.word	0x40013800

080048a8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80048a8:	b580      	push	{r7, lr}
 80048aa:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80048ac:	4b23      	ldr	r3, [pc, #140]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048ae:	4a24      	ldr	r2, [pc, #144]	@ (8004940 <MX_USART2_UART_Init+0x98>)
 80048b0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80048b2:	4b22      	ldr	r3, [pc, #136]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048b4:	2296      	movs	r2, #150	@ 0x96
 80048b6:	0192      	lsls	r2, r2, #6
 80048b8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80048ba:	4b20      	ldr	r3, [pc, #128]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048bc:	2200      	movs	r2, #0
 80048be:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80048c0:	4b1e      	ldr	r3, [pc, #120]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048c2:	2200      	movs	r2, #0
 80048c4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80048c6:	4b1d      	ldr	r3, [pc, #116]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048c8:	2200      	movs	r2, #0
 80048ca:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80048cc:	4b1b      	ldr	r3, [pc, #108]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048ce:	220c      	movs	r2, #12
 80048d0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80048d2:	4b1a      	ldr	r3, [pc, #104]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048d4:	2200      	movs	r2, #0
 80048d6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80048d8:	4b18      	ldr	r3, [pc, #96]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048da:	2200      	movs	r2, #0
 80048dc:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80048de:	4b17      	ldr	r3, [pc, #92]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048e0:	2200      	movs	r2, #0
 80048e2:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80048e4:	4b15      	ldr	r3, [pc, #84]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048e6:	2200      	movs	r2, #0
 80048e8:	625a      	str	r2, [r3, #36]	@ 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80048ea:	4b14      	ldr	r3, [pc, #80]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048ec:	2200      	movs	r2, #0
 80048ee:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80048f0:	4b12      	ldr	r3, [pc, #72]	@ (800493c <MX_USART2_UART_Init+0x94>)
 80048f2:	0018      	movs	r0, r3
 80048f4:	f00e fbf6 	bl	80130e4 <HAL_UART_Init>
 80048f8:	1e03      	subs	r3, r0, #0
 80048fa:	d001      	beq.n	8004900 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 80048fc:	f007 ff7c 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004900:	4b0e      	ldr	r3, [pc, #56]	@ (800493c <MX_USART2_UART_Init+0x94>)
 8004902:	2100      	movs	r1, #0
 8004904:	0018      	movs	r0, r3
 8004906:	f010 ff13 	bl	8015730 <HAL_UARTEx_SetTxFifoThreshold>
 800490a:	1e03      	subs	r3, r0, #0
 800490c:	d001      	beq.n	8004912 <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 800490e:	f007 ff73 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004912:	4b0a      	ldr	r3, [pc, #40]	@ (800493c <MX_USART2_UART_Init+0x94>)
 8004914:	2100      	movs	r1, #0
 8004916:	0018      	movs	r0, r3
 8004918:	f010 ff4a 	bl	80157b0 <HAL_UARTEx_SetRxFifoThreshold>
 800491c:	1e03      	subs	r3, r0, #0
 800491e:	d001      	beq.n	8004924 <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8004920:	f007 ff6a 	bl	800c7f8 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 8004924:	4b05      	ldr	r3, [pc, #20]	@ (800493c <MX_USART2_UART_Init+0x94>)
 8004926:	0018      	movs	r0, r3
 8004928:	f010 fec8 	bl	80156bc <HAL_UARTEx_DisableFifoMode>
 800492c:	1e03      	subs	r3, r0, #0
 800492e:	d001      	beq.n	8004934 <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8004930:	f007 ff62 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8004934:	46c0      	nop			@ (mov r8, r8)
 8004936:	46bd      	mov	sp, r7
 8004938:	bd80      	pop	{r7, pc}
 800493a:	46c0      	nop			@ (mov r8, r8)
 800493c:	200006e8 	.word	0x200006e8
 8004940:	40004400 	.word	0x40004400

08004944 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8004944:	b580      	push	{r7, lr}
 8004946:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8004948:	4b16      	ldr	r3, [pc, #88]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 800494a:	4a17      	ldr	r2, [pc, #92]	@ (80049a8 <MX_USART3_UART_Init+0x64>)
 800494c:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 800494e:	4b15      	ldr	r3, [pc, #84]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 8004950:	22e1      	movs	r2, #225	@ 0xe1
 8004952:	0252      	lsls	r2, r2, #9
 8004954:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8004956:	4b13      	ldr	r3, [pc, #76]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 8004958:	2200      	movs	r2, #0
 800495a:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 800495c:	4b11      	ldr	r3, [pc, #68]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 800495e:	2200      	movs	r2, #0
 8004960:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8004962:	4b10      	ldr	r3, [pc, #64]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 8004964:	2200      	movs	r2, #0
 8004966:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8004968:	4b0e      	ldr	r3, [pc, #56]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 800496a:	220c      	movs	r2, #12
 800496c:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800496e:	4b0d      	ldr	r3, [pc, #52]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 8004970:	2200      	movs	r2, #0
 8004972:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8004974:	4b0b      	ldr	r3, [pc, #44]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 8004976:	2200      	movs	r2, #0
 8004978:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800497a:	4b0a      	ldr	r3, [pc, #40]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 800497c:	2200      	movs	r2, #0
 800497e:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004980:	4b08      	ldr	r3, [pc, #32]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 8004982:	2200      	movs	r2, #0
 8004984:	625a      	str	r2, [r3, #36]	@ 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004986:	4b07      	ldr	r3, [pc, #28]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 8004988:	2200      	movs	r2, #0
 800498a:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800498c:	4b05      	ldr	r3, [pc, #20]	@ (80049a4 <MX_USART3_UART_Init+0x60>)
 800498e:	0018      	movs	r0, r3
 8004990:	f00e fba8 	bl	80130e4 <HAL_UART_Init>
 8004994:	1e03      	subs	r3, r0, #0
 8004996:	d001      	beq.n	800499c <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 8004998:	f007 ff2e 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800499c:	46c0      	nop			@ (mov r8, r8)
 800499e:	46bd      	mov	sp, r7
 80049a0:	bd80      	pop	{r7, pc}
 80049a2:	46c0      	nop			@ (mov r8, r8)
 80049a4:	20000778 	.word	0x20000778
 80049a8:	40004800 	.word	0x40004800

080049ac <MX_USART4_UART_Init>:
  * @brief USART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART4_UART_Init(void)
{
 80049ac:	b580      	push	{r7, lr}
 80049ae:	af00      	add	r7, sp, #0
  /* USER CODE END USART4_Init 0 */

  /* USER CODE BEGIN USART4_Init 1 */

  /* USER CODE END USART4_Init 1 */
  huart4.Instance = USART4;
 80049b0:	4b16      	ldr	r3, [pc, #88]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049b2:	4a17      	ldr	r2, [pc, #92]	@ (8004a10 <MX_USART4_UART_Init+0x64>)
 80049b4:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 9600;
 80049b6:	4b15      	ldr	r3, [pc, #84]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049b8:	2296      	movs	r2, #150	@ 0x96
 80049ba:	0192      	lsls	r2, r2, #6
 80049bc:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 80049be:	4b13      	ldr	r3, [pc, #76]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049c0:	2200      	movs	r2, #0
 80049c2:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 80049c4:	4b11      	ldr	r3, [pc, #68]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049c6:	2200      	movs	r2, #0
 80049c8:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 80049ca:	4b10      	ldr	r3, [pc, #64]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049cc:	2200      	movs	r2, #0
 80049ce:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 80049d0:	4b0e      	ldr	r3, [pc, #56]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049d2:	220c      	movs	r2, #12
 80049d4:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80049d6:	4b0d      	ldr	r3, [pc, #52]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049d8:	2200      	movs	r2, #0
 80049da:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 80049dc:	4b0b      	ldr	r3, [pc, #44]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049de:	2200      	movs	r2, #0
 80049e0:	61da      	str	r2, [r3, #28]
  huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80049e2:	4b0a      	ldr	r3, [pc, #40]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049e4:	2200      	movs	r2, #0
 80049e6:	621a      	str	r2, [r3, #32]
  huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80049e8:	4b08      	ldr	r3, [pc, #32]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049ea:	2200      	movs	r2, #0
 80049ec:	625a      	str	r2, [r3, #36]	@ 0x24
  huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80049ee:	4b07      	ldr	r3, [pc, #28]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049f0:	2200      	movs	r2, #0
 80049f2:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart4) != HAL_OK)
 80049f4:	4b05      	ldr	r3, [pc, #20]	@ (8004a0c <MX_USART4_UART_Init+0x60>)
 80049f6:	0018      	movs	r0, r3
 80049f8:	f00e fb74 	bl	80130e4 <HAL_UART_Init>
 80049fc:	1e03      	subs	r3, r0, #0
 80049fe:	d001      	beq.n	8004a04 <MX_USART4_UART_Init+0x58>
  {
    Error_Handler();
 8004a00:	f007 fefa 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN USART4_Init 2 */

  /* USER CODE END USART4_Init 2 */

}
 8004a04:	46c0      	nop			@ (mov r8, r8)
 8004a06:	46bd      	mov	sp, r7
 8004a08:	bd80      	pop	{r7, pc}
 8004a0a:	46c0      	nop			@ (mov r8, r8)
 8004a0c:	20000808 	.word	0x20000808
 8004a10:	40004c00 	.word	0x40004c00

08004a14 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8004a14:	b580      	push	{r7, lr}
 8004a16:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8004a18:	4b1b      	ldr	r3, [pc, #108]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a1a:	4a1c      	ldr	r2, [pc, #112]	@ (8004a8c <MX_SPI1_Init+0x78>)
 8004a1c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004a1e:	4b1a      	ldr	r3, [pc, #104]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a20:	2282      	movs	r2, #130	@ 0x82
 8004a22:	0052      	lsls	r2, r2, #1
 8004a24:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8004a26:	4b18      	ldr	r3, [pc, #96]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a28:	2200      	movs	r2, #0
 8004a2a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8004a2c:	4b16      	ldr	r3, [pc, #88]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a2e:	22e0      	movs	r2, #224	@ 0xe0
 8004a30:	00d2      	lsls	r2, r2, #3
 8004a32:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004a34:	4b14      	ldr	r3, [pc, #80]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a36:	2200      	movs	r2, #0
 8004a38:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8004a3a:	4b13      	ldr	r3, [pc, #76]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a3c:	2200      	movs	r2, #0
 8004a3e:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8004a40:	4b11      	ldr	r3, [pc, #68]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a42:	2280      	movs	r2, #128	@ 0x80
 8004a44:	0092      	lsls	r2, r2, #2
 8004a46:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8004a48:	4b0f      	ldr	r3, [pc, #60]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a4a:	2210      	movs	r2, #16
 8004a4c:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004a4e:	4b0e      	ldr	r3, [pc, #56]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a50:	2200      	movs	r2, #0
 8004a52:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8004a54:	4b0c      	ldr	r3, [pc, #48]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a56:	2200      	movs	r2, #0
 8004a58:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004a5a:	4b0b      	ldr	r3, [pc, #44]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a5c:	2200      	movs	r2, #0
 8004a5e:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 7;
 8004a60:	4b09      	ldr	r3, [pc, #36]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a62:	2207      	movs	r2, #7
 8004a64:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8004a66:	4b08      	ldr	r3, [pc, #32]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a68:	2200      	movs	r2, #0
 8004a6a:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8004a6c:	4b06      	ldr	r3, [pc, #24]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a6e:	2208      	movs	r2, #8
 8004a70:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8004a72:	4b05      	ldr	r3, [pc, #20]	@ (8004a88 <MX_SPI1_Init+0x74>)
 8004a74:	0018      	movs	r0, r3
 8004a76:	f00c fcaf 	bl	80113d8 <HAL_SPI_Init>
 8004a7a:	1e03      	subs	r3, r0, #0
 8004a7c:	d001      	beq.n	8004a82 <MX_SPI1_Init+0x6e>
  {
    Error_Handler();
 8004a7e:	f007 febb 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8004a82:	46c0      	nop			@ (mov r8, r8)
 8004a84:	46bd      	mov	sp, r7
 8004a86:	bd80      	pop	{r7, pc}
 8004a88:	200008f4 	.word	0x200008f4
 8004a8c:	40013000 	.word	0x40013000

08004a90 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8004a90:	b580      	push	{r7, lr}
 8004a92:	b088      	sub	sp, #32
 8004a94:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004a96:	2314      	movs	r3, #20
 8004a98:	18fb      	adds	r3, r7, r3
 8004a9a:	0018      	movs	r0, r3
 8004a9c:	230c      	movs	r3, #12
 8004a9e:	001a      	movs	r2, r3
 8004aa0:	2100      	movs	r1, #0
 8004aa2:	f014 f8d5 	bl	8018c50 <memset>
  TIM_IC_InitTypeDef sConfigIC = {0};
 8004aa6:	1d3b      	adds	r3, r7, #4
 8004aa8:	0018      	movs	r0, r3
 8004aaa:	2310      	movs	r3, #16
 8004aac:	001a      	movs	r2, r3
 8004aae:	2100      	movs	r1, #0
 8004ab0:	f014 f8ce 	bl	8018c50 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8004ab4:	4b25      	ldr	r3, [pc, #148]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004ab6:	4a26      	ldr	r2, [pc, #152]	@ (8004b50 <MX_TIM1_Init+0xc0>)
 8004ab8:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 15999;
 8004aba:	4b24      	ldr	r3, [pc, #144]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004abc:	4a25      	ldr	r2, [pc, #148]	@ (8004b54 <MX_TIM1_Init+0xc4>)
 8004abe:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004ac0:	4b22      	ldr	r3, [pc, #136]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004ac2:	2200      	movs	r2, #0
 8004ac4:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8004ac6:	4b21      	ldr	r3, [pc, #132]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004ac8:	4a23      	ldr	r2, [pc, #140]	@ (8004b58 <MX_TIM1_Init+0xc8>)
 8004aca:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004acc:	4b1f      	ldr	r3, [pc, #124]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004ace:	2200      	movs	r2, #0
 8004ad0:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8004ad2:	4b1e      	ldr	r3, [pc, #120]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004ad4:	2200      	movs	r2, #0
 8004ad6:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004ad8:	4b1c      	ldr	r3, [pc, #112]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004ada:	2200      	movs	r2, #0
 8004adc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_IC_Init(&htim1) != HAL_OK)
 8004ade:	4b1b      	ldr	r3, [pc, #108]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004ae0:	0018      	movs	r0, r3
 8004ae2:	f00d fb8d 	bl	8012200 <HAL_TIM_IC_Init>
 8004ae6:	1e03      	subs	r3, r0, #0
 8004ae8:	d001      	beq.n	8004aee <MX_TIM1_Init+0x5e>
  {
    Error_Handler();
 8004aea:	f007 fe85 	bl	800c7f8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004aee:	2114      	movs	r1, #20
 8004af0:	187b      	adds	r3, r7, r1
 8004af2:	2200      	movs	r2, #0
 8004af4:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8004af6:	187b      	adds	r3, r7, r1
 8004af8:	2200      	movs	r2, #0
 8004afa:	605a      	str	r2, [r3, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004afc:	187b      	adds	r3, r7, r1
 8004afe:	2200      	movs	r2, #0
 8004b00:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8004b02:	187a      	adds	r2, r7, r1
 8004b04:	4b11      	ldr	r3, [pc, #68]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004b06:	0011      	movs	r1, r2
 8004b08:	0018      	movs	r0, r3
 8004b0a:	f00e fa65 	bl	8012fd8 <HAL_TIMEx_MasterConfigSynchronization>
 8004b0e:	1e03      	subs	r3, r0, #0
 8004b10:	d001      	beq.n	8004b16 <MX_TIM1_Init+0x86>
  {
    Error_Handler();
 8004b12:	f007 fe71 	bl	800c7f8 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8004b16:	1d3b      	adds	r3, r7, #4
 8004b18:	2200      	movs	r2, #0
 8004b1a:	601a      	str	r2, [r3, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8004b1c:	1d3b      	adds	r3, r7, #4
 8004b1e:	2201      	movs	r2, #1
 8004b20:	605a      	str	r2, [r3, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004b22:	1d3b      	adds	r3, r7, #4
 8004b24:	2200      	movs	r2, #0
 8004b26:	609a      	str	r2, [r3, #8]
  sConfigIC.ICFilter = 0;
 8004b28:	1d3b      	adds	r3, r7, #4
 8004b2a:	2200      	movs	r2, #0
 8004b2c:	60da      	str	r2, [r3, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8004b2e:	1d39      	adds	r1, r7, #4
 8004b30:	4b06      	ldr	r3, [pc, #24]	@ (8004b4c <MX_TIM1_Init+0xbc>)
 8004b32:	2200      	movs	r2, #0
 8004b34:	0018      	movs	r0, r3
 8004b36:	f00d fe25 	bl	8012784 <HAL_TIM_IC_ConfigChannel>
 8004b3a:	1e03      	subs	r3, r0, #0
 8004b3c:	d001      	beq.n	8004b42 <MX_TIM1_Init+0xb2>
  {
    Error_Handler();
 8004b3e:	f007 fe5b 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8004b42:	46c0      	nop			@ (mov r8, r8)
 8004b44:	46bd      	mov	sp, r7
 8004b46:	b008      	add	sp, #32
 8004b48:	bd80      	pop	{r7, pc}
 8004b4a:	46c0      	nop			@ (mov r8, r8)
 8004b4c:	20000958 	.word	0x20000958
 8004b50:	40012c00 	.word	0x40012c00
 8004b54:	00003e7f 	.word	0x00003e7f
 8004b58:	0000ffff 	.word	0x0000ffff

08004b5c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8004b5c:	b580      	push	{r7, lr}
 8004b5e:	b088      	sub	sp, #32
 8004b60:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004b62:	2314      	movs	r3, #20
 8004b64:	18fb      	adds	r3, r7, r3
 8004b66:	0018      	movs	r0, r3
 8004b68:	230c      	movs	r3, #12
 8004b6a:	001a      	movs	r2, r3
 8004b6c:	2100      	movs	r1, #0
 8004b6e:	f014 f86f 	bl	8018c50 <memset>
  TIM_IC_InitTypeDef sConfigIC = {0};
 8004b72:	1d3b      	adds	r3, r7, #4
 8004b74:	0018      	movs	r0, r3
 8004b76:	2310      	movs	r3, #16
 8004b78:	001a      	movs	r2, r3
 8004b7a:	2100      	movs	r1, #0
 8004b7c:	f014 f868 	bl	8018c50 <memset>

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8004b80:	4b23      	ldr	r3, [pc, #140]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004b82:	2280      	movs	r2, #128	@ 0x80
 8004b84:	05d2      	lsls	r2, r2, #23
 8004b86:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 15;
 8004b88:	4b21      	ldr	r3, [pc, #132]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004b8a:	220f      	movs	r2, #15
 8004b8c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004b8e:	4b20      	ldr	r3, [pc, #128]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004b90:	2200      	movs	r2, #0
 8004b92:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8004b94:	4b1e      	ldr	r3, [pc, #120]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004b96:	2201      	movs	r2, #1
 8004b98:	4252      	negs	r2, r2
 8004b9a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004b9c:	4b1c      	ldr	r3, [pc, #112]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004b9e:	2200      	movs	r2, #0
 8004ba0:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004ba2:	4b1b      	ldr	r3, [pc, #108]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004ba4:	2200      	movs	r2, #0
 8004ba6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 8004ba8:	4b19      	ldr	r3, [pc, #100]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004baa:	0018      	movs	r0, r3
 8004bac:	f00d fb28 	bl	8012200 <HAL_TIM_IC_Init>
 8004bb0:	1e03      	subs	r3, r0, #0
 8004bb2:	d001      	beq.n	8004bb8 <MX_TIM2_Init+0x5c>
  {
    Error_Handler();
 8004bb4:	f007 fe20 	bl	800c7f8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004bb8:	2114      	movs	r1, #20
 8004bba:	187b      	adds	r3, r7, r1
 8004bbc:	2200      	movs	r2, #0
 8004bbe:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004bc0:	187b      	adds	r3, r7, r1
 8004bc2:	2200      	movs	r2, #0
 8004bc4:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004bc6:	187a      	adds	r2, r7, r1
 8004bc8:	4b11      	ldr	r3, [pc, #68]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004bca:	0011      	movs	r1, r2
 8004bcc:	0018      	movs	r0, r3
 8004bce:	f00e fa03 	bl	8012fd8 <HAL_TIMEx_MasterConfigSynchronization>
 8004bd2:	1e03      	subs	r3, r0, #0
 8004bd4:	d001      	beq.n	8004bda <MX_TIM2_Init+0x7e>
  {
    Error_Handler();
 8004bd6:	f007 fe0f 	bl	800c7f8 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8004bda:	1d3b      	adds	r3, r7, #4
 8004bdc:	2200      	movs	r2, #0
 8004bde:	601a      	str	r2, [r3, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8004be0:	1d3b      	adds	r3, r7, #4
 8004be2:	2201      	movs	r2, #1
 8004be4:	605a      	str	r2, [r3, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004be6:	1d3b      	adds	r3, r7, #4
 8004be8:	2200      	movs	r2, #0
 8004bea:	609a      	str	r2, [r3, #8]
  sConfigIC.ICFilter = 0;
 8004bec:	1d3b      	adds	r3, r7, #4
 8004bee:	2200      	movs	r2, #0
 8004bf0:	60da      	str	r2, [r3, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8004bf2:	1d39      	adds	r1, r7, #4
 8004bf4:	4b06      	ldr	r3, [pc, #24]	@ (8004c10 <MX_TIM2_Init+0xb4>)
 8004bf6:	2200      	movs	r2, #0
 8004bf8:	0018      	movs	r0, r3
 8004bfa:	f00d fdc3 	bl	8012784 <HAL_TIM_IC_ConfigChannel>
 8004bfe:	1e03      	subs	r3, r0, #0
 8004c00:	d001      	beq.n	8004c06 <MX_TIM2_Init+0xaa>
  {
    Error_Handler();
 8004c02:	f007 fdf9 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8004c06:	46c0      	nop			@ (mov r8, r8)
 8004c08:	46bd      	mov	sp, r7
 8004c0a:	b008      	add	sp, #32
 8004c0c:	bd80      	pop	{r7, pc}
 8004c0e:	46c0      	nop			@ (mov r8, r8)
 8004c10:	200009a4 	.word	0x200009a4

08004c14 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8004c14:	b580      	push	{r7, lr}
 8004c16:	b088      	sub	sp, #32
 8004c18:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004c1a:	2310      	movs	r3, #16
 8004c1c:	18fb      	adds	r3, r7, r3
 8004c1e:	0018      	movs	r0, r3
 8004c20:	2310      	movs	r3, #16
 8004c22:	001a      	movs	r2, r3
 8004c24:	2100      	movs	r1, #0
 8004c26:	f014 f813 	bl	8018c50 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004c2a:	1d3b      	adds	r3, r7, #4
 8004c2c:	0018      	movs	r0, r3
 8004c2e:	230c      	movs	r3, #12
 8004c30:	001a      	movs	r2, r3
 8004c32:	2100      	movs	r1, #0
 8004c34:	f014 f80c 	bl	8018c50 <memset>

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8004c38:	4b1e      	ldr	r3, [pc, #120]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c3a:	4a1f      	ldr	r2, [pc, #124]	@ (8004cb8 <MX_TIM3_Init+0xa4>)
 8004c3c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 7999;
 8004c3e:	4b1d      	ldr	r3, [pc, #116]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c40:	4a1e      	ldr	r2, [pc, #120]	@ (8004cbc <MX_TIM3_Init+0xa8>)
 8004c42:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004c44:	4b1b      	ldr	r3, [pc, #108]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c46:	2200      	movs	r2, #0
 8004c48:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1999;
 8004c4a:	4b1a      	ldr	r3, [pc, #104]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c4c:	4a1c      	ldr	r2, [pc, #112]	@ (8004cc0 <MX_TIM3_Init+0xac>)
 8004c4e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004c50:	4b18      	ldr	r3, [pc, #96]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c52:	2200      	movs	r2, #0
 8004c54:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004c56:	4b17      	ldr	r3, [pc, #92]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c58:	2200      	movs	r2, #0
 8004c5a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8004c5c:	4b15      	ldr	r3, [pc, #84]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c5e:	0018      	movs	r0, r3
 8004c60:	f00d fa1a 	bl	8012098 <HAL_TIM_Base_Init>
 8004c64:	1e03      	subs	r3, r0, #0
 8004c66:	d001      	beq.n	8004c6c <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 8004c68:	f007 fdc6 	bl	800c7f8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004c6c:	2110      	movs	r1, #16
 8004c6e:	187b      	adds	r3, r7, r1
 8004c70:	2280      	movs	r2, #128	@ 0x80
 8004c72:	0152      	lsls	r2, r2, #5
 8004c74:	601a      	str	r2, [r3, #0]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8004c76:	187a      	adds	r2, r7, r1
 8004c78:	4b0e      	ldr	r3, [pc, #56]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c7a:	0011      	movs	r1, r2
 8004c7c:	0018      	movs	r0, r3
 8004c7e:	f00d fe25 	bl	80128cc <HAL_TIM_ConfigClockSource>
 8004c82:	1e03      	subs	r3, r0, #0
 8004c84:	d001      	beq.n	8004c8a <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 8004c86:	f007 fdb7 	bl	800c7f8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004c8a:	1d3b      	adds	r3, r7, #4
 8004c8c:	2200      	movs	r2, #0
 8004c8e:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004c90:	1d3b      	adds	r3, r7, #4
 8004c92:	2200      	movs	r2, #0
 8004c94:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8004c96:	1d3a      	adds	r2, r7, #4
 8004c98:	4b06      	ldr	r3, [pc, #24]	@ (8004cb4 <MX_TIM3_Init+0xa0>)
 8004c9a:	0011      	movs	r1, r2
 8004c9c:	0018      	movs	r0, r3
 8004c9e:	f00e f99b 	bl	8012fd8 <HAL_TIMEx_MasterConfigSynchronization>
 8004ca2:	1e03      	subs	r3, r0, #0
 8004ca4:	d001      	beq.n	8004caa <MX_TIM3_Init+0x96>
  {
    Error_Handler();
 8004ca6:	f007 fda7 	bl	800c7f8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8004caa:	46c0      	nop			@ (mov r8, r8)
 8004cac:	46bd      	mov	sp, r7
 8004cae:	b008      	add	sp, #32
 8004cb0:	bd80      	pop	{r7, pc}
 8004cb2:	46c0      	nop			@ (mov r8, r8)
 8004cb4:	200009f0 	.word	0x200009f0
 8004cb8:	40000400 	.word	0x40000400
 8004cbc:	00001f3f 	.word	0x00001f3f
 8004cc0:	000007cf 	.word	0x000007cf

08004cc4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8004cc4:	b580      	push	{r7, lr}
 8004cc6:	b082      	sub	sp, #8
 8004cc8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8004cca:	4b0c      	ldr	r3, [pc, #48]	@ (8004cfc <MX_DMA_Init+0x38>)
 8004ccc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004cce:	4b0b      	ldr	r3, [pc, #44]	@ (8004cfc <MX_DMA_Init+0x38>)
 8004cd0:	2101      	movs	r1, #1
 8004cd2:	430a      	orrs	r2, r1
 8004cd4:	639a      	str	r2, [r3, #56]	@ 0x38
 8004cd6:	4b09      	ldr	r3, [pc, #36]	@ (8004cfc <MX_DMA_Init+0x38>)
 8004cd8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004cda:	2201      	movs	r2, #1
 8004cdc:	4013      	ands	r3, r2
 8004cde:	607b      	str	r3, [r7, #4]
 8004ce0:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 1, 0);
 8004ce2:	2200      	movs	r2, #0
 8004ce4:	2101      	movs	r1, #1
 8004ce6:	2009      	movs	r0, #9
 8004ce8:	f009 f8b2 	bl	800de50 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8004cec:	2009      	movs	r0, #9
 8004cee:	f009 f8c4 	bl	800de7a <HAL_NVIC_EnableIRQ>

}
 8004cf2:	46c0      	nop			@ (mov r8, r8)
 8004cf4:	46bd      	mov	sp, r7
 8004cf6:	b002      	add	sp, #8
 8004cf8:	bd80      	pop	{r7, pc}
 8004cfa:	46c0      	nop			@ (mov r8, r8)
 8004cfc:	40021000 	.word	0x40021000

08004d00 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8004d00:	b590      	push	{r4, r7, lr}
 8004d02:	b08b      	sub	sp, #44	@ 0x2c
 8004d04:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004d06:	2414      	movs	r4, #20
 8004d08:	193b      	adds	r3, r7, r4
 8004d0a:	0018      	movs	r0, r3
 8004d0c:	2314      	movs	r3, #20
 8004d0e:	001a      	movs	r2, r3
 8004d10:	2100      	movs	r1, #0
 8004d12:	f013 ff9d 	bl	8018c50 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8004d16:	4b64      	ldr	r3, [pc, #400]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d18:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004d1a:	4b63      	ldr	r3, [pc, #396]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d1c:	2104      	movs	r1, #4
 8004d1e:	430a      	orrs	r2, r1
 8004d20:	635a      	str	r2, [r3, #52]	@ 0x34
 8004d22:	4b61      	ldr	r3, [pc, #388]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d24:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004d26:	2204      	movs	r2, #4
 8004d28:	4013      	ands	r3, r2
 8004d2a:	613b      	str	r3, [r7, #16]
 8004d2c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8004d2e:	4b5e      	ldr	r3, [pc, #376]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d30:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004d32:	4b5d      	ldr	r3, [pc, #372]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d34:	2120      	movs	r1, #32
 8004d36:	430a      	orrs	r2, r1
 8004d38:	635a      	str	r2, [r3, #52]	@ 0x34
 8004d3a:	4b5b      	ldr	r3, [pc, #364]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d3c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004d3e:	2220      	movs	r2, #32
 8004d40:	4013      	ands	r3, r2
 8004d42:	60fb      	str	r3, [r7, #12]
 8004d44:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8004d46:	4b58      	ldr	r3, [pc, #352]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d48:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004d4a:	4b57      	ldr	r3, [pc, #348]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d4c:	2101      	movs	r1, #1
 8004d4e:	430a      	orrs	r2, r1
 8004d50:	635a      	str	r2, [r3, #52]	@ 0x34
 8004d52:	4b55      	ldr	r3, [pc, #340]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d54:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004d56:	2201      	movs	r2, #1
 8004d58:	4013      	ands	r3, r2
 8004d5a:	60bb      	str	r3, [r7, #8]
 8004d5c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8004d5e:	4b52      	ldr	r3, [pc, #328]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d60:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004d62:	4b51      	ldr	r3, [pc, #324]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d64:	2102      	movs	r1, #2
 8004d66:	430a      	orrs	r2, r1
 8004d68:	635a      	str	r2, [r3, #52]	@ 0x34
 8004d6a:	4b4f      	ldr	r3, [pc, #316]	@ (8004ea8 <MX_GPIO_Init+0x1a8>)
 8004d6c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004d6e:	2202      	movs	r2, #2
 8004d70:	4013      	ands	r3, r2
 8004d72:	607b      	str	r3, [r7, #4]
 8004d74:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 8004d76:	23a0      	movs	r3, #160	@ 0xa0
 8004d78:	05db      	lsls	r3, r3, #23
 8004d7a:	2200      	movs	r2, #0
 8004d7c:	2110      	movs	r1, #16
 8004d7e:	0018      	movs	r0, r3
 8004d80:	f009 fd4d 	bl	800e81e <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_3
 8004d84:	4949      	ldr	r1, [pc, #292]	@ (8004eac <MX_GPIO_Init+0x1ac>)
 8004d86:	4b4a      	ldr	r3, [pc, #296]	@ (8004eb0 <MX_GPIO_Init+0x1b0>)
 8004d88:	2200      	movs	r2, #0
 8004d8a:	0018      	movs	r0, r3
 8004d8c:	f009 fd47 	bl	800e81e <HAL_GPIO_WritePin>
                          |GPIO_PIN_4|GPIO_PIN_7, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 8004d90:	2380      	movs	r3, #128	@ 0x80
 8004d92:	005b      	lsls	r3, r3, #1
 8004d94:	4846      	ldr	r0, [pc, #280]	@ (8004eb0 <MX_GPIO_Init+0x1b0>)
 8004d96:	2201      	movs	r2, #1
 8004d98:	0019      	movs	r1, r3
 8004d9a:	f009 fd40 	bl	800e81e <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PF2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8004d9e:	193b      	adds	r3, r7, r4
 8004da0:	2204      	movs	r2, #4
 8004da2:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004da4:	193b      	adds	r3, r7, r4
 8004da6:	2202      	movs	r2, #2
 8004da8:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004daa:	193b      	adds	r3, r7, r4
 8004dac:	2200      	movs	r2, #0
 8004dae:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004db0:	193b      	adds	r3, r7, r4
 8004db2:	2200      	movs	r2, #0
 8004db4:	60da      	str	r2, [r3, #12]
  GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8004db6:	193b      	adds	r3, r7, r4
 8004db8:	2200      	movs	r2, #0
 8004dba:	611a      	str	r2, [r3, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004dbc:	193b      	adds	r3, r7, r4
 8004dbe:	4a3d      	ldr	r2, [pc, #244]	@ (8004eb4 <MX_GPIO_Init+0x1b4>)
 8004dc0:	0019      	movs	r1, r3
 8004dc2:	0010      	movs	r0, r2
 8004dc4:	f009 fbaa 	bl	800e51c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 8004dc8:	193b      	adds	r3, r7, r4
 8004dca:	2210      	movs	r2, #16
 8004dcc:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004dce:	193b      	adds	r3, r7, r4
 8004dd0:	2201      	movs	r2, #1
 8004dd2:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004dd4:	193b      	adds	r3, r7, r4
 8004dd6:	2200      	movs	r2, #0
 8004dd8:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004dda:	193b      	adds	r3, r7, r4
 8004ddc:	2200      	movs	r2, #0
 8004dde:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004de0:	193a      	adds	r2, r7, r4
 8004de2:	23a0      	movs	r3, #160	@ 0xa0
 8004de4:	05db      	lsls	r3, r3, #23
 8004de6:	0011      	movs	r1, r2
 8004de8:	0018      	movs	r0, r3
 8004dea:	f009 fb97 	bl	800e51c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB1 */
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 8004dee:	193b      	adds	r3, r7, r4
 8004df0:	2202      	movs	r2, #2
 8004df2:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8004df4:	193b      	adds	r3, r7, r4
 8004df6:	2200      	movs	r2, #0
 8004df8:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004dfa:	193b      	adds	r3, r7, r4
 8004dfc:	2200      	movs	r2, #0
 8004dfe:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004e00:	193b      	adds	r3, r7, r4
 8004e02:	4a2b      	ldr	r2, [pc, #172]	@ (8004eb0 <MX_GPIO_Init+0x1b0>)
 8004e04:	0019      	movs	r1, r3
 8004e06:	0010      	movs	r0, r2
 8004e08:	f009 fb88 	bl	800e51c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB13 PB14 PB15 PB3
                           PB4 PB7 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_3
 8004e0c:	193b      	adds	r3, r7, r4
 8004e0e:	4a27      	ldr	r2, [pc, #156]	@ (8004eac <MX_GPIO_Init+0x1ac>)
 8004e10:	601a      	str	r2, [r3, #0]
                          |GPIO_PIN_4|GPIO_PIN_7;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004e12:	193b      	adds	r3, r7, r4
 8004e14:	2201      	movs	r2, #1
 8004e16:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004e18:	193b      	adds	r3, r7, r4
 8004e1a:	2200      	movs	r2, #0
 8004e1c:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004e1e:	193b      	adds	r3, r7, r4
 8004e20:	2200      	movs	r2, #0
 8004e22:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004e24:	193b      	adds	r3, r7, r4
 8004e26:	4a22      	ldr	r2, [pc, #136]	@ (8004eb0 <MX_GPIO_Init+0x1b0>)
 8004e28:	0019      	movs	r1, r3
 8004e2a:	0010      	movs	r0, r2
 8004e2c:	f009 fb76 	bl	800e51c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA11 */
  GPIO_InitStruct.Pin = GPIO_PIN_11;
 8004e30:	193b      	adds	r3, r7, r4
 8004e32:	2280      	movs	r2, #128	@ 0x80
 8004e34:	0112      	lsls	r2, r2, #4
 8004e36:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8004e38:	193b      	adds	r3, r7, r4
 8004e3a:	2200      	movs	r2, #0
 8004e3c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004e3e:	193b      	adds	r3, r7, r4
 8004e40:	2200      	movs	r2, #0
 8004e42:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004e44:	193a      	adds	r2, r7, r4
 8004e46:	23a0      	movs	r3, #160	@ 0xa0
 8004e48:	05db      	lsls	r3, r3, #23
 8004e4a:	0011      	movs	r1, r2
 8004e4c:	0018      	movs	r0, r3
 8004e4e:	f009 fb65 	bl	800e51c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC9 */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8004e52:	0021      	movs	r1, r4
 8004e54:	187b      	adds	r3, r7, r1
 8004e56:	2280      	movs	r2, #128	@ 0x80
 8004e58:	0092      	lsls	r2, r2, #2
 8004e5a:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8004e5c:	000c      	movs	r4, r1
 8004e5e:	193b      	adds	r3, r7, r4
 8004e60:	2200      	movs	r2, #0
 8004e62:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004e64:	193b      	adds	r3, r7, r4
 8004e66:	2200      	movs	r2, #0
 8004e68:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8004e6a:	193b      	adds	r3, r7, r4
 8004e6c:	4a12      	ldr	r2, [pc, #72]	@ (8004eb8 <MX_GPIO_Init+0x1b8>)
 8004e6e:	0019      	movs	r1, r3
 8004e70:	0010      	movs	r0, r2
 8004e72:	f009 fb53 	bl	800e51c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8004e76:	0021      	movs	r1, r4
 8004e78:	187b      	adds	r3, r7, r1
 8004e7a:	2280      	movs	r2, #128	@ 0x80
 8004e7c:	0052      	lsls	r2, r2, #1
 8004e7e:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004e80:	187b      	adds	r3, r7, r1
 8004e82:	2201      	movs	r2, #1
 8004e84:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8004e86:	187b      	adds	r3, r7, r1
 8004e88:	2201      	movs	r2, #1
 8004e8a:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004e8c:	187b      	adds	r3, r7, r1
 8004e8e:	2200      	movs	r2, #0
 8004e90:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004e92:	187b      	adds	r3, r7, r1
 8004e94:	4a06      	ldr	r2, [pc, #24]	@ (8004eb0 <MX_GPIO_Init+0x1b0>)
 8004e96:	0019      	movs	r1, r3
 8004e98:	0010      	movs	r0, r2
 8004e9a:	f009 fb3f 	bl	800e51c <HAL_GPIO_Init>

}
 8004e9e:	46c0      	nop			@ (mov r8, r8)
 8004ea0:	46bd      	mov	sp, r7
 8004ea2:	b00b      	add	sp, #44	@ 0x2c
 8004ea4:	bd90      	pop	{r4, r7, pc}
 8004ea6:	46c0      	nop			@ (mov r8, r8)
 8004ea8:	40021000 	.word	0x40021000
 8004eac:	0000e098 	.word	0x0000e098
 8004eb0:	50000400 	.word	0x50000400
 8004eb4:	50001400 	.word	0x50001400
 8004eb8:	50000800 	.word	0x50000800

08004ebc <Status_Check>:

/* USER CODE BEGIN 4 */
void Status_Check(void)
{
 8004ebc:	b580      	push	{r7, lr}
 8004ebe:	af00      	add	r7, sp, #0
	time_update();
 8004ec0:	f004 fa1e 	bl	8009300 <time_update>

	HAL_UART_Transmit(&huart1, (uint8_t *) plate_qr, 14, 0x1C);
 8004ec4:	49cb      	ldr	r1, [pc, #812]	@ (80051f4 <Status_Check+0x338>)
 8004ec6:	48cc      	ldr	r0, [pc, #816]	@ (80051f8 <Status_Check+0x33c>)
 8004ec8:	231c      	movs	r3, #28
 8004eca:	220e      	movs	r2, #14
 8004ecc:	f00e f960 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8004ed0:	2001      	movs	r0, #1
 8004ed2:	f008 fed7 	bl	800dc84 <HAL_Delay>

	HAL_UART_Transmit(&huart1, unlock_clear, 12, 0x20);
 8004ed6:	49c9      	ldr	r1, [pc, #804]	@ (80051fc <Status_Check+0x340>)
 8004ed8:	48c7      	ldr	r0, [pc, #796]	@ (80051f8 <Status_Check+0x33c>)
 8004eda:	2320      	movs	r3, #32
 8004edc:	220c      	movs	r2, #12
 8004ede:	f00e f957 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8004ee2:	2001      	movs	r0, #1
 8004ee4:	f008 fece 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, C_Fare_clear, 7, 0x20);
 8004ee8:	49c5      	ldr	r1, [pc, #788]	@ (8005200 <Status_Check+0x344>)
 8004eea:	48c3      	ldr	r0, [pc, #780]	@ (80051f8 <Status_Check+0x33c>)
 8004eec:	2320      	movs	r3, #32
 8004eee:	2207      	movs	r2, #7
 8004ef0:	f00e f94e 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8004ef4:	2001      	movs	r0, #1
 8004ef6:	f008 fec5 	bl	800dc84 <HAL_Delay>

	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Hired, 7, 0x0E);
 8004efa:	49c2      	ldr	r1, [pc, #776]	@ (8005204 <Status_Check+0x348>)
 8004efc:	48be      	ldr	r0, [pc, #760]	@ (80051f8 <Status_Check+0x33c>)
 8004efe:	230e      	movs	r3, #14
 8004f00:	2207      	movs	r2, #7
 8004f02:	f00e f945 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8004f06:	2002      	movs	r0, #2
 8004f08:	f008 febc 	bl	800dc84 <HAL_Delay>
	Status_Change();
 8004f0c:	f000 f9be 	bl	800528c <Status_Change>
	if(Drv_state_flag)
 8004f10:	4bbd      	ldr	r3, [pc, #756]	@ (8005208 <Status_Check+0x34c>)
 8004f12:	781b      	ldrb	r3, [r3, #0]
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d006      	beq.n	8004f26 <Status_Check+0x6a>
	{
		Flag_H = TRUE;
 8004f18:	4bbc      	ldr	r3, [pc, #752]	@ (800520c <Status_Check+0x350>)
 8004f1a:	2201      	movs	r2, #1
 8004f1c:	701a      	strb	r2, [r3, #0]
		Drv_state_flag = FALSE;
 8004f1e:	4bba      	ldr	r3, [pc, #744]	@ (8005208 <Status_Check+0x34c>)
 8004f20:	2200      	movs	r2, #0
 8004f22:	701a      	strb	r2, [r3, #0]
 8004f24:	e002      	b.n	8004f2c <Status_Check+0x70>
	}
	else
	{
		Flag_H = FALSE;
 8004f26:	4bb9      	ldr	r3, [pc, #740]	@ (800520c <Status_Check+0x350>)
 8004f28:	2200      	movs	r2, #0
 8004f2a:	701a      	strb	r2, [r3, #0]
	}
	memset(RxBuff,0,12);
 8004f2c:	4bb8      	ldr	r3, [pc, #736]	@ (8005210 <Status_Check+0x354>)
 8004f2e:	220c      	movs	r2, #12
 8004f30:	2100      	movs	r1, #0
 8004f32:	0018      	movs	r0, r3
 8004f34:	f013 fe8c 	bl	8018c50 <memset>

	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Stop, 7, 0x0E);
 8004f38:	49b6      	ldr	r1, [pc, #728]	@ (8005214 <Status_Check+0x358>)
 8004f3a:	48af      	ldr	r0, [pc, #700]	@ (80051f8 <Status_Check+0x33c>)
 8004f3c:	230e      	movs	r3, #14
 8004f3e:	2207      	movs	r2, #7
 8004f40:	f00e f926 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8004f44:	2002      	movs	r0, #2
 8004f46:	f008 fe9d 	bl	800dc84 <HAL_Delay>
	Status_Change();
 8004f4a:	f000 f99f 	bl	800528c <Status_Change>
	if(Drv_state_flag)
 8004f4e:	4bae      	ldr	r3, [pc, #696]	@ (8005208 <Status_Check+0x34c>)
 8004f50:	781b      	ldrb	r3, [r3, #0]
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d006      	beq.n	8004f64 <Status_Check+0xa8>
	{
		Flag_S = TRUE;
 8004f56:	4bb0      	ldr	r3, [pc, #704]	@ (8005218 <Status_Check+0x35c>)
 8004f58:	2201      	movs	r2, #1
 8004f5a:	701a      	strb	r2, [r3, #0]
		Drv_state_flag = FALSE;
 8004f5c:	4baa      	ldr	r3, [pc, #680]	@ (8005208 <Status_Check+0x34c>)
 8004f5e:	2200      	movs	r2, #0
 8004f60:	701a      	strb	r2, [r3, #0]
 8004f62:	e002      	b.n	8004f6a <Status_Check+0xae>
	}
	else
	{
		Flag_S = FALSE;
 8004f64:	4bac      	ldr	r3, [pc, #688]	@ (8005218 <Status_Check+0x35c>)
 8004f66:	2200      	movs	r2, #0
 8004f68:	701a      	strb	r2, [r3, #0]
	}
	memset(RxBuff,0,12);
 8004f6a:	4ba9      	ldr	r3, [pc, #676]	@ (8005210 <Status_Check+0x354>)
 8004f6c:	220c      	movs	r2, #12
 8004f6e:	2100      	movs	r1, #0
 8004f70:	0018      	movs	r0, r3
 8004f72:	f013 fe6d 	bl	8018c50 <memset>

	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Vacant, 7, 0x0E);
 8004f76:	49a9      	ldr	r1, [pc, #676]	@ (800521c <Status_Check+0x360>)
 8004f78:	489f      	ldr	r0, [pc, #636]	@ (80051f8 <Status_Check+0x33c>)
 8004f7a:	230e      	movs	r3, #14
 8004f7c:	2207      	movs	r2, #7
 8004f7e:	f00e f907 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8004f82:	2002      	movs	r0, #2
 8004f84:	f008 fe7e 	bl	800dc84 <HAL_Delay>
	Status_Change();
 8004f88:	f000 f980 	bl	800528c <Status_Change>
	if(Drv_state_flag)
 8004f8c:	4b9e      	ldr	r3, [pc, #632]	@ (8005208 <Status_Check+0x34c>)
 8004f8e:	781b      	ldrb	r3, [r3, #0]
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d006      	beq.n	8004fa2 <Status_Check+0xe6>
	{
		Flag_V = TRUE;
 8004f94:	4ba2      	ldr	r3, [pc, #648]	@ (8005220 <Status_Check+0x364>)
 8004f96:	2201      	movs	r2, #1
 8004f98:	701a      	strb	r2, [r3, #0]
		Drv_state_flag = FALSE;
 8004f9a:	4b9b      	ldr	r3, [pc, #620]	@ (8005208 <Status_Check+0x34c>)
 8004f9c:	2200      	movs	r2, #0
 8004f9e:	701a      	strb	r2, [r3, #0]
 8004fa0:	e002      	b.n	8004fa8 <Status_Check+0xec>
	}
	else
	{
		Flag_V = FALSE;
 8004fa2:	4b9f      	ldr	r3, [pc, #636]	@ (8005220 <Status_Check+0x364>)
 8004fa4:	2200      	movs	r2, #0
 8004fa6:	701a      	strb	r2, [r3, #0]
	}
	memset(RxBuff,0,12);
 8004fa8:	4b99      	ldr	r3, [pc, #612]	@ (8005210 <Status_Check+0x354>)
 8004faa:	220c      	movs	r2, #12
 8004fac:	2100      	movs	r1, #0
 8004fae:	0018      	movs	r0, r3
 8004fb0:	f013 fe4e 	bl	8018c50 <memset>

	last_btn_value = btn_value;
 8004fb4:	4b9b      	ldr	r3, [pc, #620]	@ (8005224 <Status_Check+0x368>)
 8004fb6:	781a      	ldrb	r2, [r3, #0]
 8004fb8:	4b9b      	ldr	r3, [pc, #620]	@ (8005228 <Status_Check+0x36c>)
 8004fba:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Audio, 7, 0x0E);
 8004fbc:	499b      	ldr	r1, [pc, #620]	@ (800522c <Status_Check+0x370>)
 8004fbe:	488e      	ldr	r0, [pc, #568]	@ (80051f8 <Status_Check+0x33c>)
 8004fc0:	230e      	movs	r3, #14
 8004fc2:	2207      	movs	r2, #7
 8004fc4:	f00e f8e4 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8004fc8:	2002      	movs	r0, #2
 8004fca:	f008 fe5b 	bl	800dc84 <HAL_Delay>
	if(RxFlag)
 8004fce:	4b98      	ldr	r3, [pc, #608]	@ (8005230 <Status_Check+0x374>)
 8004fd0:	781b      	ldrb	r3, [r3, #0]
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d015      	beq.n	8005002 <Status_Check+0x146>
	{
		RxFlag = FALSE;
 8004fd6:	4b96      	ldr	r3, [pc, #600]	@ (8005230 <Status_Check+0x374>)
 8004fd8:	2200      	movs	r2, #0
 8004fda:	701a      	strb	r2, [r3, #0]
		btn_value = RxBuff[8];
 8004fdc:	4b8c      	ldr	r3, [pc, #560]	@ (8005210 <Status_Check+0x354>)
 8004fde:	7a1a      	ldrb	r2, [r3, #8]
 8004fe0:	4b90      	ldr	r3, [pc, #576]	@ (8005224 <Status_Check+0x368>)
 8004fe2:	701a      	strb	r2, [r3, #0]
		if (btn_value != last_btn_value)
 8004fe4:	4b8f      	ldr	r3, [pc, #572]	@ (8005224 <Status_Check+0x368>)
 8004fe6:	781a      	ldrb	r2, [r3, #0]
 8004fe8:	4b8f      	ldr	r3, [pc, #572]	@ (8005228 <Status_Check+0x36c>)
 8004fea:	781b      	ldrb	r3, [r3, #0]
 8004fec:	429a      	cmp	r2, r3
 8004fee:	d002      	beq.n	8004ff6 <Status_Check+0x13a>
			Flag_btn_changed = true; //TRUE;
 8004ff0:	4b90      	ldr	r3, [pc, #576]	@ (8005234 <Status_Check+0x378>)
 8004ff2:	2201      	movs	r2, #1
 8004ff4:	701a      	strb	r2, [r3, #0]

		memset(RxBuff,0,12);
 8004ff6:	4b86      	ldr	r3, [pc, #536]	@ (8005210 <Status_Check+0x354>)
 8004ff8:	220c      	movs	r2, #12
 8004ffa:	2100      	movs	r1, #0
 8004ffc:	0018      	movs	r0, r3
 8004ffe:	f013 fe27 	bl	8018c50 <memset>
	}

	if (Flag_V && Flag_H)
 8005002:	4b87      	ldr	r3, [pc, #540]	@ (8005220 <Status_Check+0x364>)
 8005004:	781b      	ldrb	r3, [r3, #0]
 8005006:	2b00      	cmp	r3, #0
 8005008:	d00d      	beq.n	8005026 <Status_Check+0x16a>
 800500a:	4b80      	ldr	r3, [pc, #512]	@ (800520c <Status_Check+0x350>)
 800500c:	781b      	ldrb	r3, [r3, #0]
 800500e:	2b00      	cmp	r3, #0
 8005010:	d009      	beq.n	8005026 <Status_Check+0x16a>
	{
		Flag_V2H = TRUE;
 8005012:	4b89      	ldr	r3, [pc, #548]	@ (8005238 <Status_Check+0x37c>)
 8005014:	2201      	movs	r2, #1
 8005016:	701a      	strb	r2, [r3, #0]
		Flag_H2S = FALSE;
 8005018:	4b88      	ldr	r3, [pc, #544]	@ (800523c <Status_Check+0x380>)
 800501a:	2200      	movs	r2, #0
 800501c:	701a      	strb	r2, [r3, #0]
		Flag_S2V = FALSE;
 800501e:	4b88      	ldr	r3, [pc, #544]	@ (8005240 <Status_Check+0x384>)
 8005020:	2200      	movs	r2, #0
 8005022:	701a      	strb	r2, [r3, #0]
 8005024:	e022      	b.n	800506c <Status_Check+0x1b0>
	}
	else if (Flag_H && Flag_S)
 8005026:	4b79      	ldr	r3, [pc, #484]	@ (800520c <Status_Check+0x350>)
 8005028:	781b      	ldrb	r3, [r3, #0]
 800502a:	2b00      	cmp	r3, #0
 800502c:	d00d      	beq.n	800504a <Status_Check+0x18e>
 800502e:	4b7a      	ldr	r3, [pc, #488]	@ (8005218 <Status_Check+0x35c>)
 8005030:	781b      	ldrb	r3, [r3, #0]
 8005032:	2b00      	cmp	r3, #0
 8005034:	d009      	beq.n	800504a <Status_Check+0x18e>
	{
		Flag_V2H = FALSE;
 8005036:	4b80      	ldr	r3, [pc, #512]	@ (8005238 <Status_Check+0x37c>)
 8005038:	2200      	movs	r2, #0
 800503a:	701a      	strb	r2, [r3, #0]
		Flag_H2S = TRUE;
 800503c:	4b7f      	ldr	r3, [pc, #508]	@ (800523c <Status_Check+0x380>)
 800503e:	2201      	movs	r2, #1
 8005040:	701a      	strb	r2, [r3, #0]
		Flag_S2V = FALSE;
 8005042:	4b7f      	ldr	r3, [pc, #508]	@ (8005240 <Status_Check+0x384>)
 8005044:	2200      	movs	r2, #0
 8005046:	701a      	strb	r2, [r3, #0]
 8005048:	e010      	b.n	800506c <Status_Check+0x1b0>
	}
	else if (Flag_S && Flag_V)
 800504a:	4b73      	ldr	r3, [pc, #460]	@ (8005218 <Status_Check+0x35c>)
 800504c:	781b      	ldrb	r3, [r3, #0]
 800504e:	2b00      	cmp	r3, #0
 8005050:	d00c      	beq.n	800506c <Status_Check+0x1b0>
 8005052:	4b73      	ldr	r3, [pc, #460]	@ (8005220 <Status_Check+0x364>)
 8005054:	781b      	ldrb	r3, [r3, #0]
 8005056:	2b00      	cmp	r3, #0
 8005058:	d008      	beq.n	800506c <Status_Check+0x1b0>
	{
		Flag_V2H = FALSE;
 800505a:	4b77      	ldr	r3, [pc, #476]	@ (8005238 <Status_Check+0x37c>)
 800505c:	2200      	movs	r2, #0
 800505e:	701a      	strb	r2, [r3, #0]
		Flag_H2S = FALSE;
 8005060:	4b76      	ldr	r3, [pc, #472]	@ (800523c <Status_Check+0x380>)
 8005062:	2200      	movs	r2, #0
 8005064:	701a      	strb	r2, [r3, #0]
		Flag_S2V = TRUE;
 8005066:	4b76      	ldr	r3, [pc, #472]	@ (8005240 <Status_Check+0x384>)
 8005068:	2201      	movs	r2, #1
 800506a:	701a      	strb	r2, [r3, #0]
	}

	ex_counter = counter;
 800506c:	4b75      	ldr	r3, [pc, #468]	@ (8005244 <Status_Check+0x388>)
 800506e:	681a      	ldr	r2, [r3, #0]
 8005070:	4b75      	ldr	r3, [pc, #468]	@ (8005248 <Status_Check+0x38c>)
 8005072:	601a      	str	r2, [r3, #0]
//	cnt += 1;

	if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_9) == 1)
 8005074:	2380      	movs	r3, #128	@ 0x80
 8005076:	009b      	lsls	r3, r3, #2
 8005078:	4a74      	ldr	r2, [pc, #464]	@ (800524c <Status_Check+0x390>)
 800507a:	0019      	movs	r1, r3
 800507c:	0010      	movs	r0, r2
 800507e:	f009 fbb1 	bl	800e7e4 <HAL_GPIO_ReadPin>
 8005082:	0003      	movs	r3, r0
 8005084:	2b01      	cmp	r3, #1
 8005086:	d10c      	bne.n	80050a2 <Status_Check+0x1e6>
	{
		//pc9 = 0, encoder
		//pc9 = 1, tester/not connect
		flag_tester = 1;
 8005088:	4b71      	ldr	r3, [pc, #452]	@ (8005250 <Status_Check+0x394>)
 800508a:	2201      	movs	r2, #1
 800508c:	701a      	strb	r2, [r3, #0]
		flag_encoder = 0;
 800508e:	4b71      	ldr	r3, [pc, #452]	@ (8005254 <Status_Check+0x398>)
 8005090:	2200      	movs	r2, #0
 8005092:	701a      	strb	r2, [r3, #0]
		cnt += 1;
 8005094:	4b70      	ldr	r3, [pc, #448]	@ (8005258 <Status_Check+0x39c>)
 8005096:	781b      	ldrb	r3, [r3, #0]
 8005098:	3301      	adds	r3, #1
 800509a:	b2da      	uxtb	r2, r3
 800509c:	4b6e      	ldr	r3, [pc, #440]	@ (8005258 <Status_Check+0x39c>)
 800509e:	701a      	strb	r2, [r3, #0]
 80050a0:	e008      	b.n	80050b4 <Status_Check+0x1f8>
	}
	else
	{
		flag_tester = 0;
 80050a2:	4b6b      	ldr	r3, [pc, #428]	@ (8005250 <Status_Check+0x394>)
 80050a4:	2200      	movs	r2, #0
 80050a6:	701a      	strb	r2, [r3, #0]
		flag_encoder = 1;
 80050a8:	4b6a      	ldr	r3, [pc, #424]	@ (8005254 <Status_Check+0x398>)
 80050aa:	2201      	movs	r2, #1
 80050ac:	701a      	strb	r2, [r3, #0]
		cnt = 0;
 80050ae:	4b6a      	ldr	r3, [pc, #424]	@ (8005258 <Status_Check+0x39c>)
 80050b0:	2200      	movs	r2, #0
 80050b2:	701a      	strb	r2, [r3, #0]
	}

	if(ex_counter >= 10 && flag_tester && flag_sp)
 80050b4:	4b64      	ldr	r3, [pc, #400]	@ (8005248 <Status_Check+0x38c>)
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	2b09      	cmp	r3, #9
 80050ba:	d910      	bls.n	80050de <Status_Check+0x222>
 80050bc:	4b64      	ldr	r3, [pc, #400]	@ (8005250 <Status_Check+0x394>)
 80050be:	781b      	ldrb	r3, [r3, #0]
 80050c0:	2b00      	cmp	r3, #0
 80050c2:	d00c      	beq.n	80050de <Status_Check+0x222>
 80050c4:	4b65      	ldr	r3, [pc, #404]	@ (800525c <Status_Check+0x3a0>)
 80050c6:	781b      	ldrb	r3, [r3, #0]
 80050c8:	2b00      	cmp	r3, #0
 80050ca:	d008      	beq.n	80050de <Status_Check+0x222>
	{
//		flag_tester = 1;
		Flag_V2H = FALSE;
 80050cc:	4b5a      	ldr	r3, [pc, #360]	@ (8005238 <Status_Check+0x37c>)
 80050ce:	2200      	movs	r2, #0
 80050d0:	701a      	strb	r2, [r3, #0]
		Flag_H2S = FALSE;
 80050d2:	4b5a      	ldr	r3, [pc, #360]	@ (800523c <Status_Check+0x380>)
 80050d4:	2200      	movs	r2, #0
 80050d6:	701a      	strb	r2, [r3, #0]
		Flag_S2V = TRUE;
 80050d8:	4b59      	ldr	r3, [pc, #356]	@ (8005240 <Status_Check+0x384>)
 80050da:	2201      	movs	r2, #1
 80050dc:	701a      	strb	r2, [r3, #0]
	}

	if (Flag_V2H && (Drv_state == S_VACANT))
 80050de:	4b56      	ldr	r3, [pc, #344]	@ (8005238 <Status_Check+0x37c>)
 80050e0:	781b      	ldrb	r3, [r3, #0]
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	d00a      	beq.n	80050fc <Status_Check+0x240>
 80050e6:	4b5e      	ldr	r3, [pc, #376]	@ (8005260 <Status_Check+0x3a4>)
 80050e8:	781b      	ldrb	r3, [r3, #0]
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d106      	bne.n	80050fc <Status_Check+0x240>
	{
		Drv_state = S_HIRED;
 80050ee:	4b5c      	ldr	r3, [pc, #368]	@ (8005260 <Status_Check+0x3a4>)
 80050f0:	2201      	movs	r2, #1
 80050f2:	701a      	strb	r2, [r3, #0]
		Flag_V2H = FALSE;
 80050f4:	4b50      	ldr	r3, [pc, #320]	@ (8005238 <Status_Check+0x37c>)
 80050f6:	2200      	movs	r2, #0
 80050f8:	701a      	strb	r2, [r3, #0]
 80050fa:	e040      	b.n	800517e <Status_Check+0x2c2>
	}
	else if (Flag_H2S && (Drv_state == S_HIRED))
 80050fc:	4b4f      	ldr	r3, [pc, #316]	@ (800523c <Status_Check+0x380>)
 80050fe:	781b      	ldrb	r3, [r3, #0]
 8005100:	2b00      	cmp	r3, #0
 8005102:	d00a      	beq.n	800511a <Status_Check+0x25e>
 8005104:	4b56      	ldr	r3, [pc, #344]	@ (8005260 <Status_Check+0x3a4>)
 8005106:	781b      	ldrb	r3, [r3, #0]
 8005108:	2b01      	cmp	r3, #1
 800510a:	d106      	bne.n	800511a <Status_Check+0x25e>
	{
		Drv_state = S_STOP;
 800510c:	4b54      	ldr	r3, [pc, #336]	@ (8005260 <Status_Check+0x3a4>)
 800510e:	2202      	movs	r2, #2
 8005110:	701a      	strb	r2, [r3, #0]
		Flag_H2S = FALSE;
 8005112:	4b4a      	ldr	r3, [pc, #296]	@ (800523c <Status_Check+0x380>)
 8005114:	2200      	movs	r2, #0
 8005116:	701a      	strb	r2, [r3, #0]
 8005118:	e031      	b.n	800517e <Status_Check+0x2c2>
	}
	else if (Flag_H2S && (Drv_state == S_STOP))
 800511a:	4b48      	ldr	r3, [pc, #288]	@ (800523c <Status_Check+0x380>)
 800511c:	781b      	ldrb	r3, [r3, #0]
 800511e:	2b00      	cmp	r3, #0
 8005120:	d00a      	beq.n	8005138 <Status_Check+0x27c>
 8005122:	4b4f      	ldr	r3, [pc, #316]	@ (8005260 <Status_Check+0x3a4>)
 8005124:	781b      	ldrb	r3, [r3, #0]
 8005126:	2b02      	cmp	r3, #2
 8005128:	d106      	bne.n	8005138 <Status_Check+0x27c>
	{
		Drv_state = S_HIRED;
 800512a:	4b4d      	ldr	r3, [pc, #308]	@ (8005260 <Status_Check+0x3a4>)
 800512c:	2201      	movs	r2, #1
 800512e:	701a      	strb	r2, [r3, #0]
		Flag_H2S = FALSE;
 8005130:	4b42      	ldr	r3, [pc, #264]	@ (800523c <Status_Check+0x380>)
 8005132:	2200      	movs	r2, #0
 8005134:	701a      	strb	r2, [r3, #0]
 8005136:	e022      	b.n	800517e <Status_Check+0x2c2>
	}
	else if (Flag_S2V && (Drv_state == S_STOP))
 8005138:	4b41      	ldr	r3, [pc, #260]	@ (8005240 <Status_Check+0x384>)
 800513a:	781b      	ldrb	r3, [r3, #0]
 800513c:	2b00      	cmp	r3, #0
 800513e:	d010      	beq.n	8005162 <Status_Check+0x2a6>
 8005140:	4b47      	ldr	r3, [pc, #284]	@ (8005260 <Status_Check+0x3a4>)
 8005142:	781b      	ldrb	r3, [r3, #0]
 8005144:	2b02      	cmp	r3, #2
 8005146:	d10c      	bne.n	8005162 <Status_Check+0x2a6>
	{
		Drv_state = S_VACANT;
 8005148:	4b45      	ldr	r3, [pc, #276]	@ (8005260 <Status_Check+0x3a4>)
 800514a:	2200      	movs	r2, #0
 800514c:	701a      	strb	r2, [r3, #0]
		Flag_S2V = FALSE;
 800514e:	4b3c      	ldr	r3, [pc, #240]	@ (8005240 <Status_Check+0x384>)
 8005150:	2200      	movs	r2, #0
 8005152:	701a      	strb	r2, [r3, #0]
		counter = 0;
 8005154:	4b3b      	ldr	r3, [pc, #236]	@ (8005244 <Status_Check+0x388>)
 8005156:	2200      	movs	r2, #0
 8005158:	601a      	str	r2, [r3, #0]
		ex_counter = 0;
 800515a:	4b3b      	ldr	r3, [pc, #236]	@ (8005248 <Status_Check+0x38c>)
 800515c:	2200      	movs	r2, #0
 800515e:	601a      	str	r2, [r3, #0]
 8005160:	e00d      	b.n	800517e <Status_Check+0x2c2>
	}
	else if (Flag_S2V && (Drv_state == S_VACANT))
 8005162:	4b37      	ldr	r3, [pc, #220]	@ (8005240 <Status_Check+0x384>)
 8005164:	781b      	ldrb	r3, [r3, #0]
 8005166:	2b00      	cmp	r3, #0
 8005168:	d009      	beq.n	800517e <Status_Check+0x2c2>
 800516a:	4b3d      	ldr	r3, [pc, #244]	@ (8005260 <Status_Check+0x3a4>)
 800516c:	781b      	ldrb	r3, [r3, #0]
 800516e:	2b00      	cmp	r3, #0
 8005170:	d105      	bne.n	800517e <Status_Check+0x2c2>
	{
		Drv_state = S_STOP;
 8005172:	4b3b      	ldr	r3, [pc, #236]	@ (8005260 <Status_Check+0x3a4>)
 8005174:	2202      	movs	r2, #2
 8005176:	701a      	strb	r2, [r3, #0]
		Flag_S2V = FALSE;
 8005178:	4b31      	ldr	r3, [pc, #196]	@ (8005240 <Status_Check+0x384>)
 800517a:	2200      	movs	r2, #0
 800517c:	701a      	strb	r2, [r3, #0]
	}

	if (Drv_state == S_HIRED)
 800517e:	4b38      	ldr	r3, [pc, #224]	@ (8005260 <Status_Check+0x3a4>)
 8005180:	781b      	ldrb	r3, [r3, #0]
 8005182:	2b01      	cmp	r3, #1
 8005184:	d108      	bne.n	8005198 <Status_Check+0x2dc>
	{
		HMI_Hired_W();
 8005186:	f000 f89b 	bl	80052c0 <HMI_Hired_W>
		ttime_counter++;
 800518a:	4b36      	ldr	r3, [pc, #216]	@ (8005264 <Status_Check+0x3a8>)
 800518c:	881b      	ldrh	r3, [r3, #0]
 800518e:	3301      	adds	r3, #1
 8005190:	b29a      	uxth	r2, r3
 8005192:	4b34      	ldr	r3, [pc, #208]	@ (8005264 <Status_Check+0x3a8>)
 8005194:	801a      	strh	r2, [r3, #0]
			counter = 0;
		}
		HMI_Vacant_W();
		nbtime_counter++;
	}
}
 8005196:	e071      	b.n	800527c <Status_Check+0x3c0>
	else if (Drv_state == S_STOP)
 8005198:	4b31      	ldr	r3, [pc, #196]	@ (8005260 <Status_Check+0x3a4>)
 800519a:	781b      	ldrb	r3, [r3, #0]
 800519c:	2b02      	cmp	r3, #2
 800519e:	d108      	bne.n	80051b2 <Status_Check+0x2f6>
		HMI_Stop_W();
 80051a0:	f000 fb28 	bl	80057f4 <HMI_Stop_W>
		ttime_counter++;
 80051a4:	4b2f      	ldr	r3, [pc, #188]	@ (8005264 <Status_Check+0x3a8>)
 80051a6:	881b      	ldrh	r3, [r3, #0]
 80051a8:	3301      	adds	r3, #1
 80051aa:	b29a      	uxth	r2, r3
 80051ac:	4b2d      	ldr	r3, [pc, #180]	@ (8005264 <Status_Check+0x3a8>)
 80051ae:	801a      	strh	r2, [r3, #0]
}
 80051b0:	e064      	b.n	800527c <Status_Check+0x3c0>
	else if (Drv_state == S_VACANT)
 80051b2:	4b2b      	ldr	r3, [pc, #172]	@ (8005260 <Status_Check+0x3a4>)
 80051b4:	781b      	ldrb	r3, [r3, #0]
 80051b6:	2b00      	cmp	r3, #0
 80051b8:	d160      	bne.n	800527c <Status_Check+0x3c0>
		if (cnt != 0)
 80051ba:	4b27      	ldr	r3, [pc, #156]	@ (8005258 <Status_Check+0x39c>)
 80051bc:	781b      	ldrb	r3, [r3, #0]
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d052      	beq.n	8005268 <Status_Check+0x3ac>
			if (cnt > 3 && counter == ex_counter && ex_counter < 10)
 80051c2:	4b25      	ldr	r3, [pc, #148]	@ (8005258 <Status_Check+0x39c>)
 80051c4:	781b      	ldrb	r3, [r3, #0]
 80051c6:	2b03      	cmp	r3, #3
 80051c8:	d951      	bls.n	800526e <Status_Check+0x3b2>
 80051ca:	4b1e      	ldr	r3, [pc, #120]	@ (8005244 <Status_Check+0x388>)
 80051cc:	681a      	ldr	r2, [r3, #0]
 80051ce:	4b1e      	ldr	r3, [pc, #120]	@ (8005248 <Status_Check+0x38c>)
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	429a      	cmp	r2, r3
 80051d4:	d14b      	bne.n	800526e <Status_Check+0x3b2>
 80051d6:	4b1c      	ldr	r3, [pc, #112]	@ (8005248 <Status_Check+0x38c>)
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	2b09      	cmp	r3, #9
 80051dc:	d847      	bhi.n	800526e <Status_Check+0x3b2>
				cnt = 0;
 80051de:	4b1e      	ldr	r3, [pc, #120]	@ (8005258 <Status_Check+0x39c>)
 80051e0:	2200      	movs	r2, #0
 80051e2:	701a      	strb	r2, [r3, #0]
				ex_counter = 0;
 80051e4:	4b18      	ldr	r3, [pc, #96]	@ (8005248 <Status_Check+0x38c>)
 80051e6:	2200      	movs	r2, #0
 80051e8:	601a      	str	r2, [r3, #0]
				counter = 0;
 80051ea:	4b16      	ldr	r3, [pc, #88]	@ (8005244 <Status_Check+0x388>)
 80051ec:	2200      	movs	r2, #0
 80051ee:	601a      	str	r2, [r3, #0]
 80051f0:	e03d      	b.n	800526e <Status_Check+0x3b2>
 80051f2:	46c0      	nop			@ (mov r8, r8)
 80051f4:	20000098 	.word	0x20000098
 80051f8:	20000658 	.word	0x20000658
 80051fc:	20000248 	.word	0x20000248
 8005200:	20000254 	.word	0x20000254
 8005204:	08019ef0 	.word	0x08019ef0
 8005208:	20000a79 	.word	0x20000a79
 800520c:	20000a7b 	.word	0x20000a7b
 8005210:	20000a40 	.word	0x20000a40
 8005214:	08019ef8 	.word	0x08019ef8
 8005218:	20000a7c 	.word	0x20000a7c
 800521c:	08019f00 	.word	0x08019f00
 8005220:	20000a7a 	.word	0x20000a7a
 8005224:	200033d8 	.word	0x200033d8
 8005228:	200033d9 	.word	0x200033d9
 800522c:	08019f30 	.word	0x08019f30
 8005230:	20000a3c 	.word	0x20000a3c
 8005234:	200033d7 	.word	0x200033d7
 8005238:	20000a7d 	.word	0x20000a7d
 800523c:	20000a7e 	.word	0x20000a7e
 8005240:	20000a7f 	.word	0x20000a7f
 8005244:	20000ce8 	.word	0x20000ce8
 8005248:	20000cec 	.word	0x20000cec
 800524c:	50000800 	.word	0x50000800
 8005250:	200033db 	.word	0x200033db
 8005254:	200033dc 	.word	0x200033dc
 8005258:	20000cf4 	.word	0x20000cf4
 800525c:	20000485 	.word	0x20000485
 8005260:	20000a72 	.word	0x20000a72
 8005264:	20000e56 	.word	0x20000e56
			counter = 0;
 8005268:	4b06      	ldr	r3, [pc, #24]	@ (8005284 <Status_Check+0x3c8>)
 800526a:	2200      	movs	r2, #0
 800526c:	601a      	str	r2, [r3, #0]
		HMI_Vacant_W();
 800526e:	f001 fd89 	bl	8006d84 <HMI_Vacant_W>
		nbtime_counter++;
 8005272:	4b05      	ldr	r3, [pc, #20]	@ (8005288 <Status_Check+0x3cc>)
 8005274:	681b      	ldr	r3, [r3, #0]
 8005276:	1c5a      	adds	r2, r3, #1
 8005278:	4b03      	ldr	r3, [pc, #12]	@ (8005288 <Status_Check+0x3cc>)
 800527a:	601a      	str	r2, [r3, #0]
}
 800527c:	46c0      	nop			@ (mov r8, r8)
 800527e:	46bd      	mov	sp, r7
 8005280:	bd80      	pop	{r7, pc}
 8005282:	46c0      	nop			@ (mov r8, r8)
 8005284:	20000ce8 	.word	0x20000ce8
 8005288:	20000e58 	.word	0x20000e58

0800528c <Status_Change>:

void Status_Change(void)
{
 800528c:	b580      	push	{r7, lr}
 800528e:	af00      	add	r7, sp, #0
	if (RxFlag)
 8005290:	4b08      	ldr	r3, [pc, #32]	@ (80052b4 <Status_Change+0x28>)
 8005292:	781b      	ldrb	r3, [r3, #0]
 8005294:	2b00      	cmp	r3, #0
 8005296:	d009      	beq.n	80052ac <Status_Change+0x20>
	{
		if(RxBuff[8] == 0x01)
 8005298:	4b07      	ldr	r3, [pc, #28]	@ (80052b8 <Status_Change+0x2c>)
 800529a:	7a1b      	ldrb	r3, [r3, #8]
 800529c:	2b01      	cmp	r3, #1
 800529e:	d102      	bne.n	80052a6 <Status_Change+0x1a>
		{
			Drv_state_flag = TRUE;
 80052a0:	4b06      	ldr	r3, [pc, #24]	@ (80052bc <Status_Change+0x30>)
 80052a2:	2201      	movs	r2, #1
 80052a4:	701a      	strb	r2, [r3, #0]
		}
		RxFlag = FALSE;
 80052a6:	4b03      	ldr	r3, [pc, #12]	@ (80052b4 <Status_Change+0x28>)
 80052a8:	2200      	movs	r2, #0
 80052aa:	701a      	strb	r2, [r3, #0]
	}
}
 80052ac:	46c0      	nop			@ (mov r8, r8)
 80052ae:	46bd      	mov	sp, r7
 80052b0:	bd80      	pop	{r7, pc}
 80052b2:	46c0      	nop			@ (mov r8, r8)
 80052b4:	20000a3c 	.word	0x20000a3c
 80052b8:	20000a40 	.word	0x20000a40
 80052bc:	20000a79 	.word	0x20000a79

080052c0 <HMI_Hired_W>:

void HMI_Hired_W(void)
{
 80052c0:	b580      	push	{r7, lr}
 80052c2:	b082      	sub	sp, #8
 80052c4:	af00      	add	r7, sp, #0
	uint8_t temp_array[4];

	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Hired_On, 8, 0x10);
 80052c6:	49d6      	ldr	r1, [pc, #856]	@ (8005620 <HMI_Hired_W+0x360>)
 80052c8:	48d6      	ldr	r0, [pc, #856]	@ (8005624 <HMI_Hired_W+0x364>)
 80052ca:	2310      	movs	r3, #16
 80052cc:	2208      	movs	r2, #8
 80052ce:	f00d ff5f 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 80052d2:	2001      	movs	r0, #1
 80052d4:	f008 fcd6 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Vacant_Off, 8, 0x10);
 80052d8:	49d3      	ldr	r1, [pc, #844]	@ (8005628 <HMI_Hired_W+0x368>)
 80052da:	48d2      	ldr	r0, [pc, #840]	@ (8005624 <HMI_Hired_W+0x364>)
 80052dc:	2310      	movs	r3, #16
 80052de:	2208      	movs	r2, #8
 80052e0:	f00d ff56 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 80052e4:	2001      	movs	r0, #1
 80052e6:	f008 fccd 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Stop_Off, 8, 0x10);
 80052ea:	49d0      	ldr	r1, [pc, #832]	@ (800562c <HMI_Hired_W+0x36c>)
 80052ec:	48cd      	ldr	r0, [pc, #820]	@ (8005624 <HMI_Hired_W+0x364>)
 80052ee:	2310      	movs	r3, #16
 80052f0:	2208      	movs	r2, #8
 80052f2:	f00d ff4d 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 80052f6:	2001      	movs	r0, #1
 80052f8:	f008 fcc4 	bl	800dc84 <HAL_Delay>

	Last_Final_price = 0;
 80052fc:	4bcc      	ldr	r3, [pc, #816]	@ (8005630 <HMI_Hired_W+0x370>)
 80052fe:	2200      	movs	r2, #0
 8005300:	601a      	str	r2, [r3, #0]
	Last_Final_price_x10 = 0;
 8005302:	4bcc      	ldr	r3, [pc, #816]	@ (8005634 <HMI_Hired_W+0x374>)
 8005304:	2200      	movs	r2, #0
 8005306:	601a      	str	r2, [r3, #0]
	ex_Addition = 0;
 8005308:	4bcb      	ldr	r3, [pc, #812]	@ (8005638 <HMI_Hired_W+0x378>)
 800530a:	2200      	movs	r2, #0
 800530c:	601a      	str	r2, [r3, #0]
	Last_Dis = 0;
 800530e:	4bcb      	ldr	r3, [pc, #812]	@ (800563c <HMI_Hired_W+0x37c>)
 8005310:	2200      	movs	r2, #0
 8005312:	601a      	str	r2, [r3, #0]
	Last_fare_d_x100 = 0;
 8005314:	4bca      	ldr	r3, [pc, #808]	@ (8005640 <HMI_Hired_W+0x380>)
 8005316:	2200      	movs	r2, #0
 8005318:	601a      	str	r2, [r3, #0]

	HAL_UART_Transmit(&huart1, (uint8_t *) Print_clear, 8, 0x10);
 800531a:	49ca      	ldr	r1, [pc, #808]	@ (8005644 <HMI_Hired_W+0x384>)
 800531c:	48c1      	ldr	r0, [pc, #772]	@ (8005624 <HMI_Hired_W+0x364>)
 800531e:	2310      	movs	r3, #16
 8005320:	2208      	movs	r2, #8
 8005322:	f00d ff35 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart1,CLR_extra_btn,8,0x0E);
 8005326:	49c8      	ldr	r1, [pc, #800]	@ (8005648 <HMI_Hired_W+0x388>)
 8005328:	48be      	ldr	r0, [pc, #760]	@ (8005624 <HMI_Hired_W+0x364>)
 800532a:	230e      	movs	r3, #14
 800532c:	2208      	movs	r2, #8
 800532e:	f00d ff2f 	bl	8013190 <HAL_UART_Transmit>

	Fare_Calculation();
 8005332:	f005 f835 	bl	800a3a0 <Fare_Calculation>

	fare_d_x10 = (int)(fare_d * 10 + 0.5);
 8005336:	4bc5      	ldr	r3, [pc, #788]	@ (800564c <HMI_Hired_W+0x38c>)
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	49c5      	ldr	r1, [pc, #788]	@ (8005650 <HMI_Hired_W+0x390>)
 800533c:	1c18      	adds	r0, r3, #0
 800533e:	f7fb fd73 	bl	8000e28 <__aeabi_fmul>
 8005342:	1c03      	adds	r3, r0, #0
 8005344:	1c18      	adds	r0, r3, #0
 8005346:	f7fd ff99 	bl	800327c <__aeabi_f2d>
 800534a:	2200      	movs	r2, #0
 800534c:	4bc1      	ldr	r3, [pc, #772]	@ (8005654 <HMI_Hired_W+0x394>)
 800534e:	f7fc f8fb 	bl	8001548 <__aeabi_dadd>
 8005352:	0002      	movs	r2, r0
 8005354:	000b      	movs	r3, r1
 8005356:	0010      	movs	r0, r2
 8005358:	0019      	movs	r1, r3
 800535a:	f7fd ff01 	bl	8003160 <__aeabi_d2iz>
 800535e:	0003      	movs	r3, r0
 8005360:	001a      	movs	r2, r3
 8005362:	4bbd      	ldr	r3, [pc, #756]	@ (8005658 <HMI_Hired_W+0x398>)
 8005364:	601a      	str	r2, [r3, #0]
	//display limit - total fare 9999.9, sub 999.0, distance 999.9, duration 99:59:59
	if(fare_d_x10 >= 99999)
 8005366:	4bbc      	ldr	r3, [pc, #752]	@ (8005658 <HMI_Hired_W+0x398>)
 8005368:	681b      	ldr	r3, [r3, #0]
 800536a:	4abc      	ldr	r2, [pc, #752]	@ (800565c <HMI_Hired_W+0x39c>)
 800536c:	4293      	cmp	r3, r2
 800536e:	d902      	bls.n	8005376 <HMI_Hired_W+0xb6>
	{
		fare_d_x10 = 99999;
 8005370:	4bb9      	ldr	r3, [pc, #740]	@ (8005658 <HMI_Hired_W+0x398>)
 8005372:	4abb      	ldr	r2, [pc, #748]	@ (8005660 <HMI_Hired_W+0x3a0>)
 8005374:	601a      	str	r2, [r3, #0]
	}
	fare_d_x100 = fare_d_x10 * 10;
 8005376:	4bb8      	ldr	r3, [pc, #736]	@ (8005658 <HMI_Hired_W+0x398>)
 8005378:	681a      	ldr	r2, [r3, #0]
 800537a:	0013      	movs	r3, r2
 800537c:	009b      	lsls	r3, r3, #2
 800537e:	189b      	adds	r3, r3, r2
 8005380:	005b      	lsls	r3, r3, #1
 8005382:	001a      	movs	r2, r3
 8005384:	4bb7      	ldr	r3, [pc, #732]	@ (8005664 <HMI_Hired_W+0x3a4>)
 8005386:	601a      	str	r2, [r3, #0]
//	Long_to_byte(fare_d_x10, temp_array);
	Long_to_byte(fare_d_x100, temp_array);
 8005388:	4bb6      	ldr	r3, [pc, #728]	@ (8005664 <HMI_Hired_W+0x3a4>)
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	1d3a      	adds	r2, r7, #4
 800538e:	0011      	movs	r1, r2
 8005390:	0018      	movs	r0, r3
 8005392:	f002 fc75 	bl	8007c80 <Long_to_byte>
	HMI_Command(Fee,temp_array,10);
 8005396:	1d39      	adds	r1, r7, #4
 8005398:	4bb3      	ldr	r3, [pc, #716]	@ (8005668 <HMI_Hired_W+0x3a8>)
 800539a:	220a      	movs	r2, #10
 800539c:	0018      	movs	r0, r3
 800539e:	f002 fc8e 	bl	8007cbe <HMI_Command>
	//send fare_d_x100 to Fee_dup & Fee_total, no extra add on
//	HMI_Command(Fee_dup, temp_array, 10);
//	HMI_Command(Fee_total, temp_array, 10);

	extras_rd();
 80053a2:	f002 f9cd 	bl	8007740 <extras_rd>

	//distance display
	Dis = (int)(Distance*100); // + 0.5);
 80053a6:	4bb1      	ldr	r3, [pc, #708]	@ (800566c <HMI_Hired_W+0x3ac>)
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	49b1      	ldr	r1, [pc, #708]	@ (8005670 <HMI_Hired_W+0x3b0>)
 80053ac:	1c18      	adds	r0, r3, #0
 80053ae:	f7fb fd3b 	bl	8000e28 <__aeabi_fmul>
 80053b2:	1c03      	adds	r3, r0, #0
 80053b4:	1c18      	adds	r0, r3, #0
 80053b6:	f7fc f819 	bl	80013ec <__aeabi_f2iz>
 80053ba:	0003      	movs	r3, r0
 80053bc:	001a      	movs	r2, r3
 80053be:	4bad      	ldr	r3, [pc, #692]	@ (8005674 <HMI_Hired_W+0x3b4>)
 80053c0:	601a      	str	r2, [r3, #0]
	if(Dis >= 99999)
 80053c2:	4bac      	ldr	r3, [pc, #688]	@ (8005674 <HMI_Hired_W+0x3b4>)
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	4aa5      	ldr	r2, [pc, #660]	@ (800565c <HMI_Hired_W+0x39c>)
 80053c8:	4293      	cmp	r3, r2
 80053ca:	d902      	bls.n	80053d2 <HMI_Hired_W+0x112>
	{
		Dis = 99999;
 80053cc:	4ba9      	ldr	r3, [pc, #676]	@ (8005674 <HMI_Hired_W+0x3b4>)
 80053ce:	4aa4      	ldr	r2, [pc, #656]	@ (8005660 <HMI_Hired_W+0x3a0>)
 80053d0:	601a      	str	r2, [r3, #0]
	}
	Long_to_byte(Dis, temp_array);
 80053d2:	4ba8      	ldr	r3, [pc, #672]	@ (8005674 <HMI_Hired_W+0x3b4>)
 80053d4:	681b      	ldr	r3, [r3, #0]
 80053d6:	1d3a      	adds	r2, r7, #4
 80053d8:	0011      	movs	r1, r2
 80053da:	0018      	movs	r0, r3
 80053dc:	f002 fc50 	bl	8007c80 <Long_to_byte>
	HMI_Command(Dis_A,temp_array,10);
 80053e0:	1d39      	adds	r1, r7, #4
 80053e2:	4ba5      	ldr	r3, [pc, #660]	@ (8005678 <HMI_Hired_W+0x3b8>)
 80053e4:	220a      	movs	r2, #10
 80053e6:	0018      	movs	r0, r3
 80053e8:	f002 fc69 	bl	8007cbe <HMI_Command>

	//duration display
	Dur_hms_cal();
 80053ec:	f004 fe20 	bl	800a030 <Dur_hms_cal>

	//audio start
	if ((Flag_Audio_start==1) || (Flag_btn_changed==1))
 80053f0:	4ba2      	ldr	r3, [pc, #648]	@ (800567c <HMI_Hired_W+0x3bc>)
 80053f2:	781b      	ldrb	r3, [r3, #0]
 80053f4:	2b01      	cmp	r3, #1
 80053f6:	d003      	beq.n	8005400 <HMI_Hired_W+0x140>
 80053f8:	4ba1      	ldr	r3, [pc, #644]	@ (8005680 <HMI_Hired_W+0x3c0>)
 80053fa:	781b      	ldrb	r3, [r3, #0]
 80053fc:	2b01      	cmp	r3, #1
 80053fe:	d122      	bne.n	8005446 <HMI_Hired_W+0x186>
	{
		Flag_Audio_start = 0; //false; //FALSE;
 8005400:	4b9e      	ldr	r3, [pc, #632]	@ (800567c <HMI_Hired_W+0x3bc>)
 8005402:	2200      	movs	r2, #0
 8005404:	701a      	strb	r2, [r3, #0]
		Flag_Audio_end = 1; //true; //TRUE;
 8005406:	4b9f      	ldr	r3, [pc, #636]	@ (8005684 <HMI_Hired_W+0x3c4>)
 8005408:	2201      	movs	r2, #1
 800540a:	701a      	strb	r2, [r3, #0]
		Flag_btn_changed = 0; //false; //FALSE;
 800540c:	4b9c      	ldr	r3, [pc, #624]	@ (8005680 <HMI_Hired_W+0x3c0>)
 800540e:	2200      	movs	r2, #0
 8005410:	701a      	strb	r2, [r3, #0]

		switch (btn_value)
 8005412:	4b9d      	ldr	r3, [pc, #628]	@ (8005688 <HMI_Hired_W+0x3c8>)
 8005414:	781b      	ldrb	r3, [r3, #0]
 8005416:	2b03      	cmp	r3, #3
 8005418:	d00f      	beq.n	800543a <HMI_Hired_W+0x17a>
 800541a:	dc13      	bgt.n	8005444 <HMI_Hired_W+0x184>
 800541c:	2b01      	cmp	r3, #1
 800541e:	d002      	beq.n	8005426 <HMI_Hired_W+0x166>
 8005420:	2b02      	cmp	r3, #2
 8005422:	d005      	beq.n	8005430 <HMI_Hired_W+0x170>
			case 3:
				Voice_start(v_en_start);
				break;

			default:
				break;
 8005424:	e00e      	b.n	8005444 <HMI_Hired_W+0x184>
				Voice_start(v_can_start);
 8005426:	4b99      	ldr	r3, [pc, #612]	@ (800568c <HMI_Hired_W+0x3cc>)
 8005428:	0018      	movs	r0, r3
 800542a:	f006 f957 	bl	800b6dc <Voice_start>
				break;
 800542e:	e00a      	b.n	8005446 <HMI_Hired_W+0x186>
				Voice_start(v_cn_start);
 8005430:	4b97      	ldr	r3, [pc, #604]	@ (8005690 <HMI_Hired_W+0x3d0>)
 8005432:	0018      	movs	r0, r3
 8005434:	f006 f952 	bl	800b6dc <Voice_start>
				break;
 8005438:	e005      	b.n	8005446 <HMI_Hired_W+0x186>
				Voice_start(v_en_start);
 800543a:	4b96      	ldr	r3, [pc, #600]	@ (8005694 <HMI_Hired_W+0x3d4>)
 800543c:	0018      	movs	r0, r3
 800543e:	f006 f94d 	bl	800b6dc <Voice_start>
				break;
 8005442:	e000      	b.n	8005446 <HMI_Hired_W+0x186>
				break;
 8005444:	46c0      	nop			@ (mov r8, r8)
		}
	}

	//record printer start time
	if(Flag_Printer_Start)
 8005446:	4b94      	ldr	r3, [pc, #592]	@ (8005698 <HMI_Hired_W+0x3d8>)
 8005448:	781b      	ldrb	r3, [r3, #0]
 800544a:	2b00      	cmp	r3, #0
 800544c:	d02d      	beq.n	80054aa <HMI_Hired_W+0x1ea>
	{
		Flag_Printer_Start = FALSE;
 800544e:	4b92      	ldr	r3, [pc, #584]	@ (8005698 <HMI_Hired_W+0x3d8>)
 8005450:	2200      	movs	r2, #0
 8005452:	701a      	strb	r2, [r3, #0]
		Flag_Printer_End = TRUE;
 8005454:	4b91      	ldr	r3, [pc, #580]	@ (800569c <HMI_Hired_W+0x3dc>)
 8005456:	2201      	movs	r2, #1
 8005458:	701a      	strb	r2, [r3, #0]

		start[0] = hmi_rtc[14];
 800545a:	4b91      	ldr	r3, [pc, #580]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 800545c:	7b9a      	ldrb	r2, [r3, #14]
 800545e:	4b91      	ldr	r3, [pc, #580]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005460:	701a      	strb	r2, [r3, #0]
		start[1] = hmi_rtc[15];
 8005462:	4b8f      	ldr	r3, [pc, #572]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 8005464:	7bda      	ldrb	r2, [r3, #15]
 8005466:	4b8f      	ldr	r3, [pc, #572]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005468:	705a      	strb	r2, [r3, #1]
		start[3] = hmi_rtc[11];
 800546a:	4b8d      	ldr	r3, [pc, #564]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 800546c:	7ada      	ldrb	r2, [r3, #11]
 800546e:	4b8d      	ldr	r3, [pc, #564]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005470:	70da      	strb	r2, [r3, #3]
		start[4] = hmi_rtc[12];
 8005472:	4b8b      	ldr	r3, [pc, #556]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 8005474:	7b1a      	ldrb	r2, [r3, #12]
 8005476:	4b8b      	ldr	r3, [pc, #556]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005478:	711a      	strb	r2, [r3, #4]
		start[6] = hmi_rtc[8];
 800547a:	4b89      	ldr	r3, [pc, #548]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 800547c:	7a1a      	ldrb	r2, [r3, #8]
 800547e:	4b89      	ldr	r3, [pc, #548]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005480:	719a      	strb	r2, [r3, #6]
		start[7] = hmi_rtc[9];
 8005482:	4b87      	ldr	r3, [pc, #540]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 8005484:	7a5a      	ldrb	r2, [r3, #9]
 8005486:	4b87      	ldr	r3, [pc, #540]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005488:	71da      	strb	r2, [r3, #7]
		start[9] = hmi_rtc[17];
 800548a:	4b85      	ldr	r3, [pc, #532]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 800548c:	7c5a      	ldrb	r2, [r3, #17]
 800548e:	4b85      	ldr	r3, [pc, #532]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005490:	725a      	strb	r2, [r3, #9]
		start[10] = hmi_rtc[18];
 8005492:	4b83      	ldr	r3, [pc, #524]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 8005494:	7c9a      	ldrb	r2, [r3, #18]
 8005496:	4b83      	ldr	r3, [pc, #524]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 8005498:	729a      	strb	r2, [r3, #10]
		start[12] = hmi_rtc[20];
 800549a:	4b81      	ldr	r3, [pc, #516]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 800549c:	7d1a      	ldrb	r2, [r3, #20]
 800549e:	4b81      	ldr	r3, [pc, #516]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 80054a0:	731a      	strb	r2, [r3, #12]
		start[13] = hmi_rtc[21];
 80054a2:	4b7f      	ldr	r3, [pc, #508]	@ (80056a0 <HMI_Hired_W+0x3e0>)
 80054a4:	7d5a      	ldrb	r2, [r3, #21]
 80054a6:	4b7f      	ldr	r3, [pc, #508]	@ (80056a4 <HMI_Hired_W+0x3e4>)
 80054a8:	735a      	strb	r2, [r3, #13]
	}

	//transfer pick-up time (transfer only one time, Flag_Tbox_Start changed in S_to_V status)
	if(Flag_Tbox_Start)
 80054aa:	4b7f      	ldr	r3, [pc, #508]	@ (80056a8 <HMI_Hired_W+0x3e8>)
 80054ac:	781b      	ldrb	r3, [r3, #0]
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d100      	bne.n	80054b4 <HMI_Hired_W+0x1f4>
 80054b2:	e178      	b.n	80057a6 <HMI_Hired_W+0x4e6>
	{
		Flag_Tbox_Start = FALSE;
 80054b4:	4b7c      	ldr	r3, [pc, #496]	@ (80056a8 <HMI_Hired_W+0x3e8>)
 80054b6:	2200      	movs	r2, #0
 80054b8:	701a      	strb	r2, [r3, #0]
		Flag_Tbox_Finish = TRUE;
 80054ba:	4b7c      	ldr	r3, [pc, #496]	@ (80056ac <HMI_Hired_W+0x3ec>)
 80054bc:	2201      	movs	r2, #1
 80054be:	701a      	strb	r2, [r3, #0]
		tbox_start();
 80054c0:	f002 fd12 	bl	8007ee8 <tbox_start>
		flag_count = 1;
 80054c4:	4b7a      	ldr	r3, [pc, #488]	@ (80056b0 <HMI_Hired_W+0x3f0>)
 80054c6:	2201      	movs	r2, #1
 80054c8:	701a      	strb	r2, [r3, #0]
		E_read();
 80054ca:	f005 fc4d 	bl	800ad68 <E_read>
		//non business time
		nbtime_d = ((nbtime_counter / 60.0)* 1000) / 10; //changed
 80054ce:	4b79      	ldr	r3, [pc, #484]	@ (80056b4 <HMI_Hired_W+0x3f4>)
 80054d0:	681b      	ldr	r3, [r3, #0]
 80054d2:	0018      	movs	r0, r3
 80054d4:	f7fd feae 	bl	8003234 <__aeabi_ui2d>
 80054d8:	2200      	movs	r2, #0
 80054da:	4b77      	ldr	r3, [pc, #476]	@ (80056b8 <HMI_Hired_W+0x3f8>)
 80054dc:	f7fc fb98 	bl	8001c10 <__aeabi_ddiv>
 80054e0:	0002      	movs	r2, r0
 80054e2:	000b      	movs	r3, r1
 80054e4:	0010      	movs	r0, r2
 80054e6:	0019      	movs	r1, r3
 80054e8:	2200      	movs	r2, #0
 80054ea:	4b74      	ldr	r3, [pc, #464]	@ (80056bc <HMI_Hired_W+0x3fc>)
 80054ec:	f7fc ffd4 	bl	8002498 <__aeabi_dmul>
 80054f0:	0002      	movs	r2, r0
 80054f2:	000b      	movs	r3, r1
 80054f4:	0010      	movs	r0, r2
 80054f6:	0019      	movs	r1, r3
 80054f8:	2200      	movs	r2, #0
 80054fa:	4b71      	ldr	r3, [pc, #452]	@ (80056c0 <HMI_Hired_W+0x400>)
 80054fc:	f7fc fb88 	bl	8001c10 <__aeabi_ddiv>
 8005500:	0002      	movs	r2, r0
 8005502:	000b      	movs	r3, r1
 8005504:	0010      	movs	r0, r2
 8005506:	0019      	movs	r1, r3
 8005508:	f7fb f834 	bl	8000574 <__aeabi_d2uiz>
 800550c:	0002      	movs	r2, r0
 800550e:	4b6d      	ldr	r3, [pc, #436]	@ (80056c4 <HMI_Hired_W+0x404>)
 8005510:	601a      	str	r2, [r3, #0]
		nbtime[7] = (nbtime_d /1) % 10 + 0x30;
 8005512:	4b6c      	ldr	r3, [pc, #432]	@ (80056c4 <HMI_Hired_W+0x404>)
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	210a      	movs	r1, #10
 8005518:	0018      	movs	r0, r3
 800551a:	f7fa fe8b 	bl	8000234 <__aeabi_uidivmod>
 800551e:	000b      	movs	r3, r1
 8005520:	b2db      	uxtb	r3, r3
 8005522:	3330      	adds	r3, #48	@ 0x30
 8005524:	b2da      	uxtb	r2, r3
 8005526:	4b68      	ldr	r3, [pc, #416]	@ (80056c8 <HMI_Hired_W+0x408>)
 8005528:	71da      	strb	r2, [r3, #7]
		nbtime[6] = (nbtime_d /10) % 10 + 0x30;
 800552a:	4b66      	ldr	r3, [pc, #408]	@ (80056c4 <HMI_Hired_W+0x404>)
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	210a      	movs	r1, #10
 8005530:	0018      	movs	r0, r3
 8005532:	f7fa fdf9 	bl	8000128 <__udivsi3>
 8005536:	0003      	movs	r3, r0
 8005538:	210a      	movs	r1, #10
 800553a:	0018      	movs	r0, r3
 800553c:	f7fa fe7a 	bl	8000234 <__aeabi_uidivmod>
 8005540:	000b      	movs	r3, r1
 8005542:	b2db      	uxtb	r3, r3
 8005544:	3330      	adds	r3, #48	@ 0x30
 8005546:	b2da      	uxtb	r2, r3
 8005548:	4b5f      	ldr	r3, [pc, #380]	@ (80056c8 <HMI_Hired_W+0x408>)
 800554a:	719a      	strb	r2, [r3, #6]
		nbtime[5] = (nbtime_d /100) % 10 + 0x30;
 800554c:	4b5d      	ldr	r3, [pc, #372]	@ (80056c4 <HMI_Hired_W+0x404>)
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	2164      	movs	r1, #100	@ 0x64
 8005552:	0018      	movs	r0, r3
 8005554:	f7fa fde8 	bl	8000128 <__udivsi3>
 8005558:	0003      	movs	r3, r0
 800555a:	210a      	movs	r1, #10
 800555c:	0018      	movs	r0, r3
 800555e:	f7fa fe69 	bl	8000234 <__aeabi_uidivmod>
 8005562:	000b      	movs	r3, r1
 8005564:	b2db      	uxtb	r3, r3
 8005566:	3330      	adds	r3, #48	@ 0x30
 8005568:	b2da      	uxtb	r2, r3
 800556a:	4b57      	ldr	r3, [pc, #348]	@ (80056c8 <HMI_Hired_W+0x408>)
 800556c:	715a      	strb	r2, [r3, #5]
		nbtime[4] = (nbtime_d /1000) % 10 + 0x30;
 800556e:	4b55      	ldr	r3, [pc, #340]	@ (80056c4 <HMI_Hired_W+0x404>)
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	22fa      	movs	r2, #250	@ 0xfa
 8005574:	0091      	lsls	r1, r2, #2
 8005576:	0018      	movs	r0, r3
 8005578:	f7fa fdd6 	bl	8000128 <__udivsi3>
 800557c:	0003      	movs	r3, r0
 800557e:	210a      	movs	r1, #10
 8005580:	0018      	movs	r0, r3
 8005582:	f7fa fe57 	bl	8000234 <__aeabi_uidivmod>
 8005586:	000b      	movs	r3, r1
 8005588:	b2db      	uxtb	r3, r3
 800558a:	3330      	adds	r3, #48	@ 0x30
 800558c:	b2da      	uxtb	r2, r3
 800558e:	4b4e      	ldr	r3, [pc, #312]	@ (80056c8 <HMI_Hired_W+0x408>)
 8005590:	711a      	strb	r2, [r3, #4]
		nbtime[3] = (nbtime_d /10000) % 10 + 0x30;
 8005592:	4b4c      	ldr	r3, [pc, #304]	@ (80056c4 <HMI_Hired_W+0x404>)
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	494d      	ldr	r1, [pc, #308]	@ (80056cc <HMI_Hired_W+0x40c>)
 8005598:	0018      	movs	r0, r3
 800559a:	f7fa fdc5 	bl	8000128 <__udivsi3>
 800559e:	0003      	movs	r3, r0
 80055a0:	210a      	movs	r1, #10
 80055a2:	0018      	movs	r0, r3
 80055a4:	f7fa fe46 	bl	8000234 <__aeabi_uidivmod>
 80055a8:	000b      	movs	r3, r1
 80055aa:	b2db      	uxtb	r3, r3
 80055ac:	3330      	adds	r3, #48	@ 0x30
 80055ae:	b2da      	uxtb	r2, r3
 80055b0:	4b45      	ldr	r3, [pc, #276]	@ (80056c8 <HMI_Hired_W+0x408>)
 80055b2:	70da      	strb	r2, [r3, #3]
		nbtime[2] = (nbtime_d /10000) % 10 + 0x30;
 80055b4:	4b43      	ldr	r3, [pc, #268]	@ (80056c4 <HMI_Hired_W+0x404>)
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	4944      	ldr	r1, [pc, #272]	@ (80056cc <HMI_Hired_W+0x40c>)
 80055ba:	0018      	movs	r0, r3
 80055bc:	f7fa fdb4 	bl	8000128 <__udivsi3>
 80055c0:	0003      	movs	r3, r0
 80055c2:	210a      	movs	r1, #10
 80055c4:	0018      	movs	r0, r3
 80055c6:	f7fa fe35 	bl	8000234 <__aeabi_uidivmod>
 80055ca:	000b      	movs	r3, r1
 80055cc:	b2db      	uxtb	r3, r3
 80055ce:	3330      	adds	r3, #48	@ 0x30
 80055d0:	b2da      	uxtb	r2, r3
 80055d2:	4b3d      	ldr	r3, [pc, #244]	@ (80056c8 <HMI_Hired_W+0x408>)
 80055d4:	709a      	strb	r2, [r3, #2]

		if (nbtime[2] == 0x30)
 80055d6:	4b3c      	ldr	r3, [pc, #240]	@ (80056c8 <HMI_Hired_W+0x408>)
 80055d8:	789b      	ldrb	r3, [r3, #2]
 80055da:	2b30      	cmp	r3, #48	@ 0x30
 80055dc:	d104      	bne.n	80055e8 <HMI_Hired_W+0x328>
			SD_buffer[82] = 0x20;
 80055de:	4b3c      	ldr	r3, [pc, #240]	@ (80056d0 <HMI_Hired_W+0x410>)
 80055e0:	2252      	movs	r2, #82	@ 0x52
 80055e2:	2120      	movs	r1, #32
 80055e4:	5499      	strb	r1, [r3, r2]
 80055e6:	e004      	b.n	80055f2 <HMI_Hired_W+0x332>
		else
			SD_buffer[82] = nbtime[2];
 80055e8:	4b37      	ldr	r3, [pc, #220]	@ (80056c8 <HMI_Hired_W+0x408>)
 80055ea:	7899      	ldrb	r1, [r3, #2]
 80055ec:	4b38      	ldr	r3, [pc, #224]	@ (80056d0 <HMI_Hired_W+0x410>)
 80055ee:	2252      	movs	r2, #82	@ 0x52
 80055f0:	5499      	strb	r1, [r3, r2]
		if (nbtime[3] == 0x30)
 80055f2:	4b35      	ldr	r3, [pc, #212]	@ (80056c8 <HMI_Hired_W+0x408>)
 80055f4:	78db      	ldrb	r3, [r3, #3]
 80055f6:	2b30      	cmp	r3, #48	@ 0x30
 80055f8:	d104      	bne.n	8005604 <HMI_Hired_W+0x344>
			SD_buffer[83] = 0x20;
 80055fa:	4b35      	ldr	r3, [pc, #212]	@ (80056d0 <HMI_Hired_W+0x410>)
 80055fc:	2253      	movs	r2, #83	@ 0x53
 80055fe:	2120      	movs	r1, #32
 8005600:	5499      	strb	r1, [r3, r2]
 8005602:	e004      	b.n	800560e <HMI_Hired_W+0x34e>
		else
			SD_buffer[83] = nbtime[3];
 8005604:	4b30      	ldr	r3, [pc, #192]	@ (80056c8 <HMI_Hired_W+0x408>)
 8005606:	78d9      	ldrb	r1, [r3, #3]
 8005608:	4b31      	ldr	r3, [pc, #196]	@ (80056d0 <HMI_Hired_W+0x410>)
 800560a:	2253      	movs	r2, #83	@ 0x53
 800560c:	5499      	strb	r1, [r3, r2]
		if (nbtime[4] == 0x30)
 800560e:	4b2e      	ldr	r3, [pc, #184]	@ (80056c8 <HMI_Hired_W+0x408>)
 8005610:	791b      	ldrb	r3, [r3, #4]
 8005612:	2b30      	cmp	r3, #48	@ 0x30
 8005614:	d15e      	bne.n	80056d4 <HMI_Hired_W+0x414>
			SD_buffer[84] = 0x20;
 8005616:	4b2e      	ldr	r3, [pc, #184]	@ (80056d0 <HMI_Hired_W+0x410>)
 8005618:	2254      	movs	r2, #84	@ 0x54
 800561a:	2120      	movs	r1, #32
 800561c:	5499      	strb	r1, [r3, r2]
 800561e:	e05e      	b.n	80056de <HMI_Hired_W+0x41e>
 8005620:	20000004 	.word	0x20000004
 8005624:	20000658 	.word	0x20000658
 8005628:	2000002c 	.word	0x2000002c
 800562c:	2000001c 	.word	0x2000001c
 8005630:	20000a50 	.word	0x20000a50
 8005634:	20000a54 	.word	0x20000a54
 8005638:	20000a58 	.word	0x20000a58
 800563c:	20000a64 	.word	0x20000a64
 8005640:	20000d28 	.word	0x20000d28
 8005644:	20000044 	.word	0x20000044
 8005648:	20000054 	.word	0x20000054
 800564c:	20000d18 	.word	0x20000d18
 8005650:	41200000 	.word	0x41200000
 8005654:	3fe00000 	.word	0x3fe00000
 8005658:	20000d20 	.word	0x20000d20
 800565c:	0001869e 	.word	0x0001869e
 8005660:	0001869f 	.word	0x0001869f
 8005664:	20000d24 	.word	0x20000d24
 8005668:	08019ed8 	.word	0x08019ed8
 800566c:	20000ce0 	.word	0x20000ce0
 8005670:	42c80000 	.word	0x42c80000
 8005674:	20000a60 	.word	0x20000a60
 8005678:	08019f38 	.word	0x08019f38
 800567c:	20000484 	.word	0x20000484
 8005680:	200033d7 	.word	0x200033d7
 8005684:	200033d6 	.word	0x200033d6
 8005688:	200033d8 	.word	0x200033d8
 800568c:	200003e8 	.word	0x200003e8
 8005690:	200003fc 	.word	0x200003fc
 8005694:	20000410 	.word	0x20000410
 8005698:	20000229 	.word	0x20000229
 800569c:	20000b20 	.word	0x20000b20
 80056a0:	2000007c 	.word	0x2000007c
 80056a4:	200001ac 	.word	0x200001ac
 80056a8:	2000022b 	.word	0x2000022b
 80056ac:	20000b3c 	.word	0x20000b3c
 80056b0:	20000e54 	.word	0x20000e54
 80056b4:	20000e58 	.word	0x20000e58
 80056b8:	404e0000 	.word	0x404e0000
 80056bc:	408f4000 	.word	0x408f4000
 80056c0:	40240000 	.word	0x40240000
 80056c4:	20000e4c 	.word	0x20000e4c
 80056c8:	20000eac 	.word	0x20000eac
 80056cc:	00002710 	.word	0x00002710
 80056d0:	2000333c 	.word	0x2000333c
		else
			SD_buffer[84] = nbtime[4];
 80056d4:	4b3e      	ldr	r3, [pc, #248]	@ (80057d0 <HMI_Hired_W+0x510>)
 80056d6:	7919      	ldrb	r1, [r3, #4]
 80056d8:	4b3e      	ldr	r3, [pc, #248]	@ (80057d4 <HMI_Hired_W+0x514>)
 80056da:	2254      	movs	r2, #84	@ 0x54
 80056dc:	5499      	strb	r1, [r3, r2]

		SD_buffer[85] = nbtime[5];
 80056de:	4b3c      	ldr	r3, [pc, #240]	@ (80057d0 <HMI_Hired_W+0x510>)
 80056e0:	7959      	ldrb	r1, [r3, #5]
 80056e2:	4b3c      	ldr	r3, [pc, #240]	@ (80057d4 <HMI_Hired_W+0x514>)
 80056e4:	2255      	movs	r2, #85	@ 0x55
 80056e6:	5499      	strb	r1, [r3, r2]
		SD_buffer[86] = 0x2E;
 80056e8:	4b3a      	ldr	r3, [pc, #232]	@ (80057d4 <HMI_Hired_W+0x514>)
 80056ea:	2256      	movs	r2, #86	@ 0x56
 80056ec:	212e      	movs	r1, #46	@ 0x2e
 80056ee:	5499      	strb	r1, [r3, r2]
		SD_buffer[87] = nbtime[6];
 80056f0:	4b37      	ldr	r3, [pc, #220]	@ (80057d0 <HMI_Hired_W+0x510>)
 80056f2:	7999      	ldrb	r1, [r3, #6]
 80056f4:	4b37      	ldr	r3, [pc, #220]	@ (80057d4 <HMI_Hired_W+0x514>)
 80056f6:	2257      	movs	r2, #87	@ 0x57
 80056f8:	5499      	strb	r1, [r3, r2]
		SD_buffer[88] = nbtime[7];
 80056fa:	4b35      	ldr	r3, [pc, #212]	@ (80057d0 <HMI_Hired_W+0x510>)
 80056fc:	79d9      	ldrb	r1, [r3, #7]
 80056fe:	4b35      	ldr	r3, [pc, #212]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005700:	2258      	movs	r2, #88	@ 0x58
 8005702:	5499      	strb	r1, [r3, r2]
		SD_buffer[89] = 0x20;
 8005704:	4b33      	ldr	r3, [pc, #204]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005706:	2259      	movs	r2, #89	@ 0x59
 8005708:	2120      	movs	r1, #32
 800570a:	5499      	strb	r1, [r3, r2]
		nbtime_counter = 0;
 800570c:	4b32      	ldr	r3, [pc, #200]	@ (80057d8 <HMI_Hired_W+0x518>)
 800570e:	2200      	movs	r2, #0
 8005710:	601a      	str	r2, [r3, #0]
		//start date time
		SD_buffer[14] = 0x32;
 8005712:	4b30      	ldr	r3, [pc, #192]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005714:	2232      	movs	r2, #50	@ 0x32
 8005716:	739a      	strb	r2, [r3, #14]
		SD_buffer[15] = 0x30;
 8005718:	4b2e      	ldr	r3, [pc, #184]	@ (80057d4 <HMI_Hired_W+0x514>)
 800571a:	2230      	movs	r2, #48	@ 0x30
 800571c:	73da      	strb	r2, [r3, #15]
		SD_buffer[16] = hmi_rtc[8];
 800571e:	4b2f      	ldr	r3, [pc, #188]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005720:	7a1a      	ldrb	r2, [r3, #8]
 8005722:	4b2c      	ldr	r3, [pc, #176]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005724:	741a      	strb	r2, [r3, #16]
		SD_buffer[17] = hmi_rtc[9];
 8005726:	4b2d      	ldr	r3, [pc, #180]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005728:	7a5a      	ldrb	r2, [r3, #9]
 800572a:	4b2a      	ldr	r3, [pc, #168]	@ (80057d4 <HMI_Hired_W+0x514>)
 800572c:	745a      	strb	r2, [r3, #17]
		SD_buffer[18] = 0x2D;
 800572e:	4b29      	ldr	r3, [pc, #164]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005730:	222d      	movs	r2, #45	@ 0x2d
 8005732:	749a      	strb	r2, [r3, #18]
		SD_buffer[19] = hmi_rtc[11];
 8005734:	4b29      	ldr	r3, [pc, #164]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005736:	7ada      	ldrb	r2, [r3, #11]
 8005738:	4b26      	ldr	r3, [pc, #152]	@ (80057d4 <HMI_Hired_W+0x514>)
 800573a:	74da      	strb	r2, [r3, #19]
		SD_buffer[20] = hmi_rtc[12];
 800573c:	4b27      	ldr	r3, [pc, #156]	@ (80057dc <HMI_Hired_W+0x51c>)
 800573e:	7b1a      	ldrb	r2, [r3, #12]
 8005740:	4b24      	ldr	r3, [pc, #144]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005742:	751a      	strb	r2, [r3, #20]
		SD_buffer[21] = 0x2D;
 8005744:	4b23      	ldr	r3, [pc, #140]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005746:	222d      	movs	r2, #45	@ 0x2d
 8005748:	755a      	strb	r2, [r3, #21]
		SD_buffer[22] = hmi_rtc[14];
 800574a:	4b24      	ldr	r3, [pc, #144]	@ (80057dc <HMI_Hired_W+0x51c>)
 800574c:	7b9a      	ldrb	r2, [r3, #14]
 800574e:	4b21      	ldr	r3, [pc, #132]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005750:	759a      	strb	r2, [r3, #22]
		SD_buffer[23] = hmi_rtc[15];
 8005752:	4b22      	ldr	r3, [pc, #136]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005754:	7bda      	ldrb	r2, [r3, #15]
 8005756:	4b1f      	ldr	r3, [pc, #124]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005758:	75da      	strb	r2, [r3, #23]
		SD_buffer[24] = 0x20;
 800575a:	4b1e      	ldr	r3, [pc, #120]	@ (80057d4 <HMI_Hired_W+0x514>)
 800575c:	2220      	movs	r2, #32
 800575e:	761a      	strb	r2, [r3, #24]

		SD_buffer[25] = hmi_rtc[17];
 8005760:	4b1e      	ldr	r3, [pc, #120]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005762:	7c5a      	ldrb	r2, [r3, #17]
 8005764:	4b1b      	ldr	r3, [pc, #108]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005766:	765a      	strb	r2, [r3, #25]
		SD_buffer[26] = hmi_rtc[18];
 8005768:	4b1c      	ldr	r3, [pc, #112]	@ (80057dc <HMI_Hired_W+0x51c>)
 800576a:	7c9a      	ldrb	r2, [r3, #18]
 800576c:	4b19      	ldr	r3, [pc, #100]	@ (80057d4 <HMI_Hired_W+0x514>)
 800576e:	769a      	strb	r2, [r3, #26]
		SD_buffer[27] = 0x3A;
 8005770:	4b18      	ldr	r3, [pc, #96]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005772:	223a      	movs	r2, #58	@ 0x3a
 8005774:	76da      	strb	r2, [r3, #27]
		SD_buffer[28] = hmi_rtc[20];
 8005776:	4b19      	ldr	r3, [pc, #100]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005778:	7d1a      	ldrb	r2, [r3, #20]
 800577a:	4b16      	ldr	r3, [pc, #88]	@ (80057d4 <HMI_Hired_W+0x514>)
 800577c:	771a      	strb	r2, [r3, #28]
		SD_buffer[29] = hmi_rtc[21];
 800577e:	4b17      	ldr	r3, [pc, #92]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005780:	7d5a      	ldrb	r2, [r3, #21]
 8005782:	4b14      	ldr	r3, [pc, #80]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005784:	775a      	strb	r2, [r3, #29]
		SD_buffer[30] = 0x3A;
 8005786:	4b13      	ldr	r3, [pc, #76]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005788:	223a      	movs	r2, #58	@ 0x3a
 800578a:	779a      	strb	r2, [r3, #30]
		SD_buffer[31] = hmi_rtc[23];
 800578c:	4b13      	ldr	r3, [pc, #76]	@ (80057dc <HMI_Hired_W+0x51c>)
 800578e:	7dda      	ldrb	r2, [r3, #23]
 8005790:	4b10      	ldr	r3, [pc, #64]	@ (80057d4 <HMI_Hired_W+0x514>)
 8005792:	77da      	strb	r2, [r3, #31]
		SD_buffer[32] = hmi_rtc[24];
 8005794:	4b11      	ldr	r3, [pc, #68]	@ (80057dc <HMI_Hired_W+0x51c>)
 8005796:	7e19      	ldrb	r1, [r3, #24]
 8005798:	4b0e      	ldr	r3, [pc, #56]	@ (80057d4 <HMI_Hired_W+0x514>)
 800579a:	2220      	movs	r2, #32
 800579c:	5499      	strb	r1, [r3, r2]
		SD_buffer[33] = 0x20;
 800579e:	4b0d      	ldr	r3, [pc, #52]	@ (80057d4 <HMI_Hired_W+0x514>)
 80057a0:	2221      	movs	r2, #33	@ 0x21
 80057a2:	2120      	movs	r1, #32
 80057a4:	5499      	strb	r1, [r3, r2]
	}
	Flag_Control_Down();
 80057a6:	f005 f977 	bl	800aa98 <Flag_Control_Down>
	flag_sp = 0;
 80057aa:	4b0d      	ldr	r3, [pc, #52]	@ (80057e0 <HMI_Hired_W+0x520>)
 80057ac:	2200      	movs	r2, #0
 80057ae:	701a      	strb	r2, [r3, #0]
	flag_vs = 1;
 80057b0:	4b0c      	ldr	r3, [pc, #48]	@ (80057e4 <HMI_Hired_W+0x524>)
 80057b2:	2201      	movs	r2, #1
 80057b4:	701a      	strb	r2, [r3, #0]
	Flag_End_Record = TRUE;
 80057b6:	4b0c      	ldr	r3, [pc, #48]	@ (80057e8 <HMI_Hired_W+0x528>)
 80057b8:	2201      	movs	r2, #1
 80057ba:	701a      	strb	r2, [r3, #0]
	flag_vs_first = 0;
 80057bc:	4b0b      	ldr	r3, [pc, #44]	@ (80057ec <HMI_Hired_W+0x52c>)
 80057be:	2200      	movs	r2, #0
 80057c0:	701a      	strb	r2, [r3, #0]
	cnt = 0;
 80057c2:	4b0b      	ldr	r3, [pc, #44]	@ (80057f0 <HMI_Hired_W+0x530>)
 80057c4:	2200      	movs	r2, #0
 80057c6:	701a      	strb	r2, [r3, #0]
}
 80057c8:	46c0      	nop			@ (mov r8, r8)
 80057ca:	46bd      	mov	sp, r7
 80057cc:	b002      	add	sp, #8
 80057ce:	bd80      	pop	{r7, pc}
 80057d0:	20000eac 	.word	0x20000eac
 80057d4:	2000333c 	.word	0x2000333c
 80057d8:	20000e58 	.word	0x20000e58
 80057dc:	2000007c 	.word	0x2000007c
 80057e0:	20000485 	.word	0x20000485
 80057e4:	20000b22 	.word	0x20000b22
 80057e8:	2000022a 	.word	0x2000022a
 80057ec:	20000b23 	.word	0x20000b23
 80057f0:	20000cf4 	.word	0x20000cf4

080057f4 <HMI_Stop_W>:

void HMI_Stop_W(void)
{
 80057f4:	b590      	push	{r4, r7, lr}
 80057f6:	b0a1      	sub	sp, #132	@ 0x84
 80057f8:	af00      	add	r7, sp, #0
	uint8_t temp_array[4];

	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Hired_Off, 8, 0x10);
 80057fa:	49c5      	ldr	r1, [pc, #788]	@ (8005b10 <HMI_Stop_W+0x31c>)
 80057fc:	48c5      	ldr	r0, [pc, #788]	@ (8005b14 <HMI_Stop_W+0x320>)
 80057fe:	2310      	movs	r3, #16
 8005800:	2208      	movs	r2, #8
 8005802:	f00d fcc5 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8005806:	2001      	movs	r0, #1
 8005808:	f008 fa3c 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Stop_On, 8, 0x10);
 800580c:	49c2      	ldr	r1, [pc, #776]	@ (8005b18 <HMI_Stop_W+0x324>)
 800580e:	48c1      	ldr	r0, [pc, #772]	@ (8005b14 <HMI_Stop_W+0x320>)
 8005810:	2310      	movs	r3, #16
 8005812:	2208      	movs	r2, #8
 8005814:	f00d fcbc 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8005818:	2001      	movs	r0, #1
 800581a:	f008 fa33 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Vacant_Off, 8, 0x10);
 800581e:	49bf      	ldr	r1, [pc, #764]	@ (8005b1c <HMI_Stop_W+0x328>)
 8005820:	48bc      	ldr	r0, [pc, #752]	@ (8005b14 <HMI_Stop_W+0x320>)
 8005822:	2310      	movs	r3, #16
 8005824:	2208      	movs	r2, #8
 8005826:	f00d fcb3 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 800582a:	2001      	movs	r0, #1
 800582c:	f008 fa2a 	bl	800dc84 <HAL_Delay>

	Fare_Calculation();
 8005830:	f004 fdb6 	bl	800a3a0 <Fare_Calculation>

	fare_d_x10 = (int)(fare_d * 10 + 0.5);
 8005834:	4bba      	ldr	r3, [pc, #744]	@ (8005b20 <HMI_Stop_W+0x32c>)
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	49ba      	ldr	r1, [pc, #744]	@ (8005b24 <HMI_Stop_W+0x330>)
 800583a:	1c18      	adds	r0, r3, #0
 800583c:	f7fb faf4 	bl	8000e28 <__aeabi_fmul>
 8005840:	1c03      	adds	r3, r0, #0
 8005842:	1c18      	adds	r0, r3, #0
 8005844:	f7fd fd1a 	bl	800327c <__aeabi_f2d>
 8005848:	2200      	movs	r2, #0
 800584a:	4bb7      	ldr	r3, [pc, #732]	@ (8005b28 <HMI_Stop_W+0x334>)
 800584c:	f7fb fe7c 	bl	8001548 <__aeabi_dadd>
 8005850:	0002      	movs	r2, r0
 8005852:	000b      	movs	r3, r1
 8005854:	0010      	movs	r0, r2
 8005856:	0019      	movs	r1, r3
 8005858:	f7fd fc82 	bl	8003160 <__aeabi_d2iz>
 800585c:	0003      	movs	r3, r0
 800585e:	001a      	movs	r2, r3
 8005860:	4bb2      	ldr	r3, [pc, #712]	@ (8005b2c <HMI_Stop_W+0x338>)
 8005862:	601a      	str	r2, [r3, #0]
	//display limit - total fare 9999.9, sub 999.0, distance 999.9, duration 99:59:59
	if(fare_d_x10 >= 99999)
 8005864:	4bb1      	ldr	r3, [pc, #708]	@ (8005b2c <HMI_Stop_W+0x338>)
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	4ab1      	ldr	r2, [pc, #708]	@ (8005b30 <HMI_Stop_W+0x33c>)
 800586a:	4293      	cmp	r3, r2
 800586c:	d902      	bls.n	8005874 <HMI_Stop_W+0x80>
	{
		fare_d_x10 = 99999;
 800586e:	4baf      	ldr	r3, [pc, #700]	@ (8005b2c <HMI_Stop_W+0x338>)
 8005870:	4ab0      	ldr	r2, [pc, #704]	@ (8005b34 <HMI_Stop_W+0x340>)
 8005872:	601a      	str	r2, [r3, #0]
	}
	fare_d_x100 = fare_d_x10 * 10;
 8005874:	4bad      	ldr	r3, [pc, #692]	@ (8005b2c <HMI_Stop_W+0x338>)
 8005876:	681a      	ldr	r2, [r3, #0]
 8005878:	0013      	movs	r3, r2
 800587a:	009b      	lsls	r3, r3, #2
 800587c:	189b      	adds	r3, r3, r2
 800587e:	005b      	lsls	r3, r3, #1
 8005880:	001a      	movs	r2, r3
 8005882:	4bad      	ldr	r3, [pc, #692]	@ (8005b38 <HMI_Stop_W+0x344>)
 8005884:	601a      	str	r2, [r3, #0]
	Long_to_byte(fare_d_x100, temp_array);
 8005886:	4bac      	ldr	r3, [pc, #688]	@ (8005b38 <HMI_Stop_W+0x344>)
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	2278      	movs	r2, #120	@ 0x78
 800588c:	18ba      	adds	r2, r7, r2
 800588e:	0011      	movs	r1, r2
 8005890:	0018      	movs	r0, r3
 8005892:	f002 f9f5 	bl	8007c80 <Long_to_byte>
//	{
//		HMI_Command(Fee,temp_array,10);
//		HMI_Command(Fee_dup,temp_array,10);
//	}

	Dis = (int)(Distance*100); // + 0.5);
 8005896:	4ba9      	ldr	r3, [pc, #676]	@ (8005b3c <HMI_Stop_W+0x348>)
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	49a9      	ldr	r1, [pc, #676]	@ (8005b40 <HMI_Stop_W+0x34c>)
 800589c:	1c18      	adds	r0, r3, #0
 800589e:	f7fb fac3 	bl	8000e28 <__aeabi_fmul>
 80058a2:	1c03      	adds	r3, r0, #0
 80058a4:	1c18      	adds	r0, r3, #0
 80058a6:	f7fb fda1 	bl	80013ec <__aeabi_f2iz>
 80058aa:	0003      	movs	r3, r0
 80058ac:	001a      	movs	r2, r3
 80058ae:	4ba5      	ldr	r3, [pc, #660]	@ (8005b44 <HMI_Stop_W+0x350>)
 80058b0:	601a      	str	r2, [r3, #0]
	if(Dis >= 99999)
 80058b2:	4ba4      	ldr	r3, [pc, #656]	@ (8005b44 <HMI_Stop_W+0x350>)
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	4a9e      	ldr	r2, [pc, #632]	@ (8005b30 <HMI_Stop_W+0x33c>)
 80058b8:	4293      	cmp	r3, r2
 80058ba:	d902      	bls.n	80058c2 <HMI_Stop_W+0xce>
	{
		Dis = 99999;
 80058bc:	4ba1      	ldr	r3, [pc, #644]	@ (8005b44 <HMI_Stop_W+0x350>)
 80058be:	4a9d      	ldr	r2, [pc, #628]	@ (8005b34 <HMI_Stop_W+0x340>)
 80058c0:	601a      	str	r2, [r3, #0]
	}
	Long_to_byte(Dis, temp_array);
 80058c2:	4ba0      	ldr	r3, [pc, #640]	@ (8005b44 <HMI_Stop_W+0x350>)
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	2478      	movs	r4, #120	@ 0x78
 80058c8:	193a      	adds	r2, r7, r4
 80058ca:	0011      	movs	r1, r2
 80058cc:	0018      	movs	r0, r3
 80058ce:	f002 f9d7 	bl	8007c80 <Long_to_byte>
	HMI_Command(Dis_A,temp_array,10);
 80058d2:	1939      	adds	r1, r7, r4
 80058d4:	4b9c      	ldr	r3, [pc, #624]	@ (8005b48 <HMI_Stop_W+0x354>)
 80058d6:	220a      	movs	r2, #10
 80058d8:	0018      	movs	r0, r3
 80058da:	f002 f9f0 	bl	8007cbe <HMI_Command>

	Dur_hms_cal();
 80058de:	f004 fba7 	bl	800a030 <Dur_hms_cal>

	//record printer start time
	if(Flag_Printer_Start)
 80058e2:	4b9a      	ldr	r3, [pc, #616]	@ (8005b4c <HMI_Stop_W+0x358>)
 80058e4:	781b      	ldrb	r3, [r3, #0]
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d02d      	beq.n	8005946 <HMI_Stop_W+0x152>
	{
		Flag_Printer_Start = FALSE;
 80058ea:	4b98      	ldr	r3, [pc, #608]	@ (8005b4c <HMI_Stop_W+0x358>)
 80058ec:	2200      	movs	r2, #0
 80058ee:	701a      	strb	r2, [r3, #0]
		Flag_Printer_End = TRUE;
 80058f0:	4b97      	ldr	r3, [pc, #604]	@ (8005b50 <HMI_Stop_W+0x35c>)
 80058f2:	2201      	movs	r2, #1
 80058f4:	701a      	strb	r2, [r3, #0]

		start[0] = hmi_rtc[14];
 80058f6:	4b97      	ldr	r3, [pc, #604]	@ (8005b54 <HMI_Stop_W+0x360>)
 80058f8:	7b9a      	ldrb	r2, [r3, #14]
 80058fa:	4b97      	ldr	r3, [pc, #604]	@ (8005b58 <HMI_Stop_W+0x364>)
 80058fc:	701a      	strb	r2, [r3, #0]
		start[1] = hmi_rtc[15];
 80058fe:	4b95      	ldr	r3, [pc, #596]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005900:	7bda      	ldrb	r2, [r3, #15]
 8005902:	4b95      	ldr	r3, [pc, #596]	@ (8005b58 <HMI_Stop_W+0x364>)
 8005904:	705a      	strb	r2, [r3, #1]
		start[3] = hmi_rtc[11];
 8005906:	4b93      	ldr	r3, [pc, #588]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005908:	7ada      	ldrb	r2, [r3, #11]
 800590a:	4b93      	ldr	r3, [pc, #588]	@ (8005b58 <HMI_Stop_W+0x364>)
 800590c:	70da      	strb	r2, [r3, #3]
		start[4] = hmi_rtc[12];
 800590e:	4b91      	ldr	r3, [pc, #580]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005910:	7b1a      	ldrb	r2, [r3, #12]
 8005912:	4b91      	ldr	r3, [pc, #580]	@ (8005b58 <HMI_Stop_W+0x364>)
 8005914:	711a      	strb	r2, [r3, #4]
		start[6] = hmi_rtc[8];
 8005916:	4b8f      	ldr	r3, [pc, #572]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005918:	7a1a      	ldrb	r2, [r3, #8]
 800591a:	4b8f      	ldr	r3, [pc, #572]	@ (8005b58 <HMI_Stop_W+0x364>)
 800591c:	719a      	strb	r2, [r3, #6]
		start[7] = hmi_rtc[9];
 800591e:	4b8d      	ldr	r3, [pc, #564]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005920:	7a5a      	ldrb	r2, [r3, #9]
 8005922:	4b8d      	ldr	r3, [pc, #564]	@ (8005b58 <HMI_Stop_W+0x364>)
 8005924:	71da      	strb	r2, [r3, #7]
		start[9] = hmi_rtc[17];
 8005926:	4b8b      	ldr	r3, [pc, #556]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005928:	7c5a      	ldrb	r2, [r3, #17]
 800592a:	4b8b      	ldr	r3, [pc, #556]	@ (8005b58 <HMI_Stop_W+0x364>)
 800592c:	725a      	strb	r2, [r3, #9]
		start[10] = hmi_rtc[18];
 800592e:	4b89      	ldr	r3, [pc, #548]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005930:	7c9a      	ldrb	r2, [r3, #18]
 8005932:	4b89      	ldr	r3, [pc, #548]	@ (8005b58 <HMI_Stop_W+0x364>)
 8005934:	729a      	strb	r2, [r3, #10]
		start[12] = hmi_rtc[20];
 8005936:	4b87      	ldr	r3, [pc, #540]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005938:	7d1a      	ldrb	r2, [r3, #20]
 800593a:	4b87      	ldr	r3, [pc, #540]	@ (8005b58 <HMI_Stop_W+0x364>)
 800593c:	731a      	strb	r2, [r3, #12]
		start[13] = hmi_rtc[21];
 800593e:	4b85      	ldr	r3, [pc, #532]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005940:	7d5a      	ldrb	r2, [r3, #21]
 8005942:	4b85      	ldr	r3, [pc, #532]	@ (8005b58 <HMI_Stop_W+0x364>)
 8005944:	735a      	strb	r2, [r3, #13]
	}

	if(flag_vs)
 8005946:	4b85      	ldr	r3, [pc, #532]	@ (8005b5c <HMI_Stop_W+0x368>)
 8005948:	781b      	ldrb	r3, [r3, #0]
 800594a:	2b00      	cmp	r3, #0
 800594c:	d02a      	beq.n	80059a4 <HMI_Stop_W+0x1b0>
	{
		flag_vs = 0;
 800594e:	4b83      	ldr	r3, [pc, #524]	@ (8005b5c <HMI_Stop_W+0x368>)
 8005950:	2200      	movs	r2, #0
 8005952:	701a      	strb	r2, [r3, #0]
		re_stop[0] = hmi_rtc[14];
 8005954:	4b7f      	ldr	r3, [pc, #508]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005956:	7b9a      	ldrb	r2, [r3, #14]
 8005958:	4b81      	ldr	r3, [pc, #516]	@ (8005b60 <HMI_Stop_W+0x36c>)
 800595a:	701a      	strb	r2, [r3, #0]
		re_stop[1] = hmi_rtc[15];
 800595c:	4b7d      	ldr	r3, [pc, #500]	@ (8005b54 <HMI_Stop_W+0x360>)
 800595e:	7bda      	ldrb	r2, [r3, #15]
 8005960:	4b7f      	ldr	r3, [pc, #508]	@ (8005b60 <HMI_Stop_W+0x36c>)
 8005962:	705a      	strb	r2, [r3, #1]
		re_stop[3] = hmi_rtc[11];
 8005964:	4b7b      	ldr	r3, [pc, #492]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005966:	7ada      	ldrb	r2, [r3, #11]
 8005968:	4b7d      	ldr	r3, [pc, #500]	@ (8005b60 <HMI_Stop_W+0x36c>)
 800596a:	70da      	strb	r2, [r3, #3]
		re_stop[4] = hmi_rtc[12];
 800596c:	4b79      	ldr	r3, [pc, #484]	@ (8005b54 <HMI_Stop_W+0x360>)
 800596e:	7b1a      	ldrb	r2, [r3, #12]
 8005970:	4b7b      	ldr	r3, [pc, #492]	@ (8005b60 <HMI_Stop_W+0x36c>)
 8005972:	711a      	strb	r2, [r3, #4]
		re_stop[6] = hmi_rtc[8];
 8005974:	4b77      	ldr	r3, [pc, #476]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005976:	7a1a      	ldrb	r2, [r3, #8]
 8005978:	4b79      	ldr	r3, [pc, #484]	@ (8005b60 <HMI_Stop_W+0x36c>)
 800597a:	719a      	strb	r2, [r3, #6]
		re_stop[7] = hmi_rtc[9];
 800597c:	4b75      	ldr	r3, [pc, #468]	@ (8005b54 <HMI_Stop_W+0x360>)
 800597e:	7a5a      	ldrb	r2, [r3, #9]
 8005980:	4b77      	ldr	r3, [pc, #476]	@ (8005b60 <HMI_Stop_W+0x36c>)
 8005982:	71da      	strb	r2, [r3, #7]
		re_stop[9] = hmi_rtc[17];
 8005984:	4b73      	ldr	r3, [pc, #460]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005986:	7c5a      	ldrb	r2, [r3, #17]
 8005988:	4b75      	ldr	r3, [pc, #468]	@ (8005b60 <HMI_Stop_W+0x36c>)
 800598a:	725a      	strb	r2, [r3, #9]
		re_stop[10] = hmi_rtc[18];
 800598c:	4b71      	ldr	r3, [pc, #452]	@ (8005b54 <HMI_Stop_W+0x360>)
 800598e:	7c9a      	ldrb	r2, [r3, #18]
 8005990:	4b73      	ldr	r3, [pc, #460]	@ (8005b60 <HMI_Stop_W+0x36c>)
 8005992:	729a      	strb	r2, [r3, #10]
		re_stop[12] = hmi_rtc[20];
 8005994:	4b6f      	ldr	r3, [pc, #444]	@ (8005b54 <HMI_Stop_W+0x360>)
 8005996:	7d1a      	ldrb	r2, [r3, #20]
 8005998:	4b71      	ldr	r3, [pc, #452]	@ (8005b60 <HMI_Stop_W+0x36c>)
 800599a:	731a      	strb	r2, [r3, #12]
		re_stop[13] = hmi_rtc[21];
 800599c:	4b6d      	ldr	r3, [pc, #436]	@ (8005b54 <HMI_Stop_W+0x360>)
 800599e:	7d5a      	ldrb	r2, [r3, #21]
 80059a0:	4b6f      	ldr	r3, [pc, #444]	@ (8005b60 <HMI_Stop_W+0x36c>)
 80059a2:	735a      	strb	r2, [r3, #13]
	}

	//sub read and add on, prepare receipt message
	if (!Flag_added)
 80059a4:	4b6f      	ldr	r3, [pc, #444]	@ (8005b64 <HMI_Stop_W+0x370>)
 80059a6:	781b      	ldrb	r3, [r3, #0]
 80059a8:	2b00      	cmp	r3, #0
 80059aa:	d101      	bne.n	80059b0 <HMI_Stop_W+0x1bc>
	{
		extras_rd();
 80059ac:	f001 fec8 	bl	8007740 <extras_rd>
	}

	if(Flag_Addition_Add)
 80059b0:	4b6d      	ldr	r3, [pc, #436]	@ (8005b68 <HMI_Stop_W+0x374>)
 80059b2:	781b      	ldrb	r3, [r3, #0]
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d01a      	beq.n	80059ee <HMI_Stop_W+0x1fa>
	{
		Final_price = fare_d_x10 + Addition;
 80059b8:	4b5c      	ldr	r3, [pc, #368]	@ (8005b2c <HMI_Stop_W+0x338>)
 80059ba:	681a      	ldr	r2, [r3, #0]
 80059bc:	4b6b      	ldr	r3, [pc, #428]	@ (8005b6c <HMI_Stop_W+0x378>)
 80059be:	681b      	ldr	r3, [r3, #0]
 80059c0:	18d2      	adds	r2, r2, r3
 80059c2:	4b6b      	ldr	r3, [pc, #428]	@ (8005b70 <HMI_Stop_W+0x37c>)
 80059c4:	601a      	str	r2, [r3, #0]
		uint8_t temp_array[4];
		Final_price_x10 = Final_price * 10; //for display (4 decimal+2 digits)
 80059c6:	4b6a      	ldr	r3, [pc, #424]	@ (8005b70 <HMI_Stop_W+0x37c>)
 80059c8:	681a      	ldr	r2, [r3, #0]
 80059ca:	0013      	movs	r3, r2
 80059cc:	009b      	lsls	r3, r3, #2
 80059ce:	189b      	adds	r3, r3, r2
 80059d0:	005b      	lsls	r3, r3, #1
 80059d2:	001a      	movs	r2, r3
 80059d4:	4b67      	ldr	r3, [pc, #412]	@ (8005b74 <HMI_Stop_W+0x380>)
 80059d6:	601a      	str	r2, [r3, #0]
		Long_to_byte(Final_price_x10,temp_array);
 80059d8:	4b66      	ldr	r3, [pc, #408]	@ (8005b74 <HMI_Stop_W+0x380>)
 80059da:	681b      	ldr	r3, [r3, #0]
 80059dc:	2260      	movs	r2, #96	@ 0x60
 80059de:	18ba      	adds	r2, r7, r2
 80059e0:	0011      	movs	r1, r2
 80059e2:	0018      	movs	r0, r3
 80059e4:	f002 f94c 	bl	8007c80 <Long_to_byte>
//		HMI_Command(Fee,temp_array,10);
		//send Fee (Final_price_x100) to 0x4000 for holding preview
//		HMI_Command(Fee_total,temp_array,10);
		Flag_Addition_Add = FALSE;
 80059e8:	4b5f      	ldr	r3, [pc, #380]	@ (8005b68 <HMI_Stop_W+0x374>)
 80059ea:	2200      	movs	r2, #0
 80059ec:	701a      	strb	r2, [r3, #0]
	}

	if(Flag_Addition_F)
 80059ee:	4b62      	ldr	r3, [pc, #392]	@ (8005b78 <HMI_Stop_W+0x384>)
 80059f0:	781b      	ldrb	r3, [r3, #0]
 80059f2:	2b00      	cmp	r3, #0
 80059f4:	d01a      	beq.n	8005a2c <HMI_Stop_W+0x238>
	{
		Final_price = fare_d_x10 + Addition;
 80059f6:	4b4d      	ldr	r3, [pc, #308]	@ (8005b2c <HMI_Stop_W+0x338>)
 80059f8:	681a      	ldr	r2, [r3, #0]
 80059fa:	4b5c      	ldr	r3, [pc, #368]	@ (8005b6c <HMI_Stop_W+0x378>)
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	18d2      	adds	r2, r2, r3
 8005a00:	4b5b      	ldr	r3, [pc, #364]	@ (8005b70 <HMI_Stop_W+0x37c>)
 8005a02:	601a      	str	r2, [r3, #0]
		uint8_t temp_array[4];
		Final_price_x10 = Final_price * 10; //for display (4 decimal+2 digits)
 8005a04:	4b5a      	ldr	r3, [pc, #360]	@ (8005b70 <HMI_Stop_W+0x37c>)
 8005a06:	681a      	ldr	r2, [r3, #0]
 8005a08:	0013      	movs	r3, r2
 8005a0a:	009b      	lsls	r3, r3, #2
 8005a0c:	189b      	adds	r3, r3, r2
 8005a0e:	005b      	lsls	r3, r3, #1
 8005a10:	001a      	movs	r2, r3
 8005a12:	4b58      	ldr	r3, [pc, #352]	@ (8005b74 <HMI_Stop_W+0x380>)
 8005a14:	601a      	str	r2, [r3, #0]
		Long_to_byte(Final_price_x10,temp_array);
 8005a16:	4b57      	ldr	r3, [pc, #348]	@ (8005b74 <HMI_Stop_W+0x380>)
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	225c      	movs	r2, #92	@ 0x5c
 8005a1c:	18ba      	adds	r2, r7, r2
 8005a1e:	0011      	movs	r1, r2
 8005a20:	0018      	movs	r0, r3
 8005a22:	f002 f92d 	bl	8007c80 <Long_to_byte>
//		HMI_Command(Fee,temp_array,10);
		//send Fee (Final_price_x100) to 0x4000 for holding preview
//		HMI_Command(Fee_total,temp_array,10);
		Flag_Addition_F = FALSE;
 8005a26:	4b54      	ldr	r3, [pc, #336]	@ (8005b78 <HMI_Stop_W+0x384>)
 8005a28:	2200      	movs	r2, #0
 8005a2a:	701a      	strb	r2, [r3, #0]
	}

	//Flag_Display check:
	HAL_UART_Transmit(&huart1, (uint8_t *) RD_extra_btn, 7, 0x0E);
 8005a2c:	4953      	ldr	r1, [pc, #332]	@ (8005b7c <HMI_Stop_W+0x388>)
 8005a2e:	4839      	ldr	r0, [pc, #228]	@ (8005b14 <HMI_Stop_W+0x320>)
 8005a30:	230e      	movs	r3, #14
 8005a32:	2207      	movs	r2, #7
 8005a34:	f00d fbac 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8005a38:	2002      	movs	r0, #2
 8005a3a:	f008 f923 	bl	800dc84 <HAL_Delay>
	if(RxFlag)
 8005a3e:	4b50      	ldr	r3, [pc, #320]	@ (8005b80 <HMI_Stop_W+0x38c>)
 8005a40:	781b      	ldrb	r3, [r3, #0]
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	d02b      	beq.n	8005a9e <HMI_Stop_W+0x2aa>
	{
		RxFlag = FALSE;
 8005a46:	4b4e      	ldr	r3, [pc, #312]	@ (8005b80 <HMI_Stop_W+0x38c>)
 8005a48:	2200      	movs	r2, #0
 8005a4a:	701a      	strb	r2, [r3, #0]
		if (RxBuff[8] == 0x01 && Flag_added == TRUE)
 8005a4c:	4b4d      	ldr	r3, [pc, #308]	@ (8005b84 <HMI_Stop_W+0x390>)
 8005a4e:	7a1b      	ldrb	r3, [r3, #8]
 8005a50:	2b01      	cmp	r3, #1
 8005a52:	d110      	bne.n	8005a76 <HMI_Stop_W+0x282>
 8005a54:	4b43      	ldr	r3, [pc, #268]	@ (8005b64 <HMI_Stop_W+0x370>)
 8005a56:	781b      	ldrb	r3, [r3, #0]
 8005a58:	2b01      	cmp	r3, #1
 8005a5a:	d10c      	bne.n	8005a76 <HMI_Stop_W+0x282>
		{
			added_wait = 0;
 8005a5c:	4b4a      	ldr	r3, [pc, #296]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005a5e:	2200      	movs	r2, #0
 8005a60:	701a      	strb	r2, [r3, #0]
			Flag_added = FALSE;
 8005a62:	4b40      	ldr	r3, [pc, #256]	@ (8005b64 <HMI_Stop_W+0x370>)
 8005a64:	2200      	movs	r2, #0
 8005a66:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1,CLR_extra_btn,8,0x0E);
 8005a68:	4948      	ldr	r1, [pc, #288]	@ (8005b8c <HMI_Stop_W+0x398>)
 8005a6a:	482a      	ldr	r0, [pc, #168]	@ (8005b14 <HMI_Stop_W+0x320>)
 8005a6c:	230e      	movs	r3, #14
 8005a6e:	2208      	movs	r2, #8
 8005a70:	f00d fb8e 	bl	8013190 <HAL_UART_Transmit>
 8005a74:	e016      	b.n	8005aa4 <HMI_Stop_W+0x2b0>
		}
		else if(RxBuff[8] == 0x01)
 8005a76:	4b43      	ldr	r3, [pc, #268]	@ (8005b84 <HMI_Stop_W+0x390>)
 8005a78:	7a1b      	ldrb	r3, [r3, #8]
 8005a7a:	2b01      	cmp	r3, #1
 8005a7c:	d112      	bne.n	8005aa4 <HMI_Stop_W+0x2b0>
		{
			added_wait++;
 8005a7e:	4b42      	ldr	r3, [pc, #264]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005a80:	781b      	ldrb	r3, [r3, #0]
 8005a82:	3301      	adds	r3, #1
 8005a84:	b2da      	uxtb	r2, r3
 8005a86:	4b40      	ldr	r3, [pc, #256]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005a88:	701a      	strb	r2, [r3, #0]
			Flag_added = TRUE;
 8005a8a:	4b36      	ldr	r3, [pc, #216]	@ (8005b64 <HMI_Stop_W+0x370>)
 8005a8c:	2201      	movs	r2, #1
 8005a8e:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1,CLR_extra_btn,8,0x0E);
 8005a90:	493e      	ldr	r1, [pc, #248]	@ (8005b8c <HMI_Stop_W+0x398>)
 8005a92:	4820      	ldr	r0, [pc, #128]	@ (8005b14 <HMI_Stop_W+0x320>)
 8005a94:	230e      	movs	r3, #14
 8005a96:	2208      	movs	r2, #8
 8005a98:	f00d fb7a 	bl	8013190 <HAL_UART_Transmit>
 8005a9c:	e002      	b.n	8005aa4 <HMI_Stop_W+0x2b0>
		}
	}
	else
	{
		Flag_added = FALSE;
 8005a9e:	4b31      	ldr	r3, [pc, #196]	@ (8005b64 <HMI_Stop_W+0x370>)
 8005aa0:	2200      	movs	r2, #0
 8005aa2:	701a      	strb	r2, [r3, #0]
	}

	if(Flag_added)
 8005aa4:	4b2f      	ldr	r3, [pc, #188]	@ (8005b64 <HMI_Stop_W+0x370>)
 8005aa6:	781b      	ldrb	r3, [r3, #0]
 8005aa8:	2b00      	cmp	r3, #0
 8005aaa:	d075      	beq.n	8005b98 <HMI_Stop_W+0x3a4>
	{
		uint32_t add_clr = 0;
 8005aac:	2300      	movs	r3, #0
 8005aae:	67fb      	str	r3, [r7, #124]	@ 0x7c

		Long_to_byte(Final_price_x10, temp_array);
 8005ab0:	4b30      	ldr	r3, [pc, #192]	@ (8005b74 <HMI_Stop_W+0x380>)
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	2478      	movs	r4, #120	@ 0x78
 8005ab6:	193a      	adds	r2, r7, r4
 8005ab8:	0011      	movs	r1, r2
 8005aba:	0018      	movs	r0, r3
 8005abc:	f002 f8e0 	bl	8007c80 <Long_to_byte>
		HMI_Command(Fee, temp_array, 10);
 8005ac0:	1939      	adds	r1, r7, r4
 8005ac2:	4b33      	ldr	r3, [pc, #204]	@ (8005b90 <HMI_Stop_W+0x39c>)
 8005ac4:	220a      	movs	r2, #10
 8005ac6:	0018      	movs	r0, r3
 8005ac8:	f002 f8f9 	bl	8007cbe <HMI_Command>

		Long_to_byte(add_clr, temp_array);
 8005acc:	193a      	adds	r2, r7, r4
 8005ace:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8005ad0:	0011      	movs	r1, r2
 8005ad2:	0018      	movs	r0, r3
 8005ad4:	f002 f8d4 	bl	8007c80 <Long_to_byte>
		HMI_Command(Add_Charge, temp_array, 10);
 8005ad8:	1939      	adds	r1, r7, r4
 8005ada:	4b2e      	ldr	r3, [pc, #184]	@ (8005b94 <HMI_Stop_W+0x3a0>)
 8005adc:	220a      	movs	r2, #10
 8005ade:	0018      	movs	r0, r3
 8005ae0:	f002 f8ed 	bl	8007cbe <HMI_Command>

		if(added_wait != 0)
 8005ae4:	4b28      	ldr	r3, [pc, #160]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005ae6:	781b      	ldrb	r3, [r3, #0]
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	d070      	beq.n	8005bce <HMI_Stop_W+0x3da>
		{
			added_wait++;
 8005aec:	4b26      	ldr	r3, [pc, #152]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005aee:	781b      	ldrb	r3, [r3, #0]
 8005af0:	3301      	adds	r3, #1
 8005af2:	b2da      	uxtb	r2, r3
 8005af4:	4b24      	ldr	r3, [pc, #144]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005af6:	701a      	strb	r2, [r3, #0]
			//added 10s
			if(added_wait >= 5)
 8005af8:	4b23      	ldr	r3, [pc, #140]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005afa:	781b      	ldrb	r3, [r3, #0]
 8005afc:	2b04      	cmp	r3, #4
 8005afe:	d966      	bls.n	8005bce <HMI_Stop_W+0x3da>
			{
				Flag_added = FALSE;
 8005b00:	4b18      	ldr	r3, [pc, #96]	@ (8005b64 <HMI_Stop_W+0x370>)
 8005b02:	2200      	movs	r2, #0
 8005b04:	701a      	strb	r2, [r3, #0]
				added_wait = 0;
 8005b06:	4b20      	ldr	r3, [pc, #128]	@ (8005b88 <HMI_Stop_W+0x394>)
 8005b08:	2200      	movs	r2, #0
 8005b0a:	701a      	strb	r2, [r3, #0]
 8005b0c:	e05f      	b.n	8005bce <HMI_Stop_W+0x3da>
 8005b0e:	46c0      	nop			@ (mov r8, r8)
 8005b10:	2000000c 	.word	0x2000000c
 8005b14:	20000658 	.word	0x20000658
 8005b18:	20000014 	.word	0x20000014
 8005b1c:	2000002c 	.word	0x2000002c
 8005b20:	20000d18 	.word	0x20000d18
 8005b24:	41200000 	.word	0x41200000
 8005b28:	3fe00000 	.word	0x3fe00000
 8005b2c:	20000d20 	.word	0x20000d20
 8005b30:	0001869e 	.word	0x0001869e
 8005b34:	0001869f 	.word	0x0001869f
 8005b38:	20000d24 	.word	0x20000d24
 8005b3c:	20000ce0 	.word	0x20000ce0
 8005b40:	42c80000 	.word	0x42c80000
 8005b44:	20000a60 	.word	0x20000a60
 8005b48:	08019f38 	.word	0x08019f38
 8005b4c:	20000229 	.word	0x20000229
 8005b50:	20000b20 	.word	0x20000b20
 8005b54:	2000007c 	.word	0x2000007c
 8005b58:	200001ac 	.word	0x200001ac
 8005b5c:	20000b22 	.word	0x20000b22
 8005b60:	200001cc 	.word	0x200001cc
 8005b64:	20000a5e 	.word	0x20000a5e
 8005b68:	20000a70 	.word	0x20000a70
 8005b6c:	20000a6c 	.word	0x20000a6c
 8005b70:	20000a4c 	.word	0x20000a4c
 8005b74:	20000b2c 	.word	0x20000b2c
 8005b78:	20000a71 	.word	0x20000a71
 8005b7c:	08019f28 	.word	0x08019f28
 8005b80:	20000a3c 	.word	0x20000a3c
 8005b84:	20000a40 	.word	0x20000a40
 8005b88:	20000a5f 	.word	0x20000a5f
 8005b8c:	20000054 	.word	0x20000054
 8005b90:	08019ed8 	.word	0x08019ed8
 8005b94:	08019ee4 	.word	0x08019ee4
			}
		}
	}
	else
	{
		Long_to_byte(fare_d_x100, temp_array);
 8005b98:	4bec      	ldr	r3, [pc, #944]	@ (8005f4c <HMI_Stop_W+0x758>)
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	2478      	movs	r4, #120	@ 0x78
 8005b9e:	193a      	adds	r2, r7, r4
 8005ba0:	0011      	movs	r1, r2
 8005ba2:	0018      	movs	r0, r3
 8005ba4:	f002 f86c 	bl	8007c80 <Long_to_byte>
		HMI_Command(Fee,temp_array,10);
 8005ba8:	1939      	adds	r1, r7, r4
 8005baa:	4be9      	ldr	r3, [pc, #932]	@ (8005f50 <HMI_Stop_W+0x75c>)
 8005bac:	220a      	movs	r2, #10
 8005bae:	0018      	movs	r0, r3
 8005bb0:	f002 f885 	bl	8007cbe <HMI_Command>

		Long_to_byte(Addition,temp_array);
 8005bb4:	4be7      	ldr	r3, [pc, #924]	@ (8005f54 <HMI_Stop_W+0x760>)
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	193a      	adds	r2, r7, r4
 8005bba:	0011      	movs	r1, r2
 8005bbc:	0018      	movs	r0, r3
 8005bbe:	f002 f85f 	bl	8007c80 <Long_to_byte>
		HMI_Command(Add_Charge,temp_array,10);
 8005bc2:	1939      	adds	r1, r7, r4
 8005bc4:	4be4      	ldr	r3, [pc, #912]	@ (8005f58 <HMI_Stop_W+0x764>)
 8005bc6:	220a      	movs	r2, #10
 8005bc8:	0018      	movs	r0, r3
 8005bca:	f002 f878 	bl	8007cbe <HMI_Command>
	}

	//cpy total_km
	//123.45 - default 0.00
	total_km[13] = (Dis / 1) % 10 + 0x30;
 8005bce:	4be3      	ldr	r3, [pc, #908]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	210a      	movs	r1, #10
 8005bd4:	0018      	movs	r0, r3
 8005bd6:	f7fa fb2d 	bl	8000234 <__aeabi_uidivmod>
 8005bda:	000b      	movs	r3, r1
 8005bdc:	b2db      	uxtb	r3, r3
 8005bde:	3330      	adds	r3, #48	@ 0x30
 8005be0:	b2da      	uxtb	r2, r3
 8005be2:	4bdf      	ldr	r3, [pc, #892]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005be4:	735a      	strb	r2, [r3, #13]
	total_km[12] = (Dis / 10) % 10 + 0x30;
 8005be6:	4bdd      	ldr	r3, [pc, #884]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	210a      	movs	r1, #10
 8005bec:	0018      	movs	r0, r3
 8005bee:	f7fa fa9b 	bl	8000128 <__udivsi3>
 8005bf2:	0003      	movs	r3, r0
 8005bf4:	210a      	movs	r1, #10
 8005bf6:	0018      	movs	r0, r3
 8005bf8:	f7fa fb1c 	bl	8000234 <__aeabi_uidivmod>
 8005bfc:	000b      	movs	r3, r1
 8005bfe:	b2db      	uxtb	r3, r3
 8005c00:	3330      	adds	r3, #48	@ 0x30
 8005c02:	b2da      	uxtb	r2, r3
 8005c04:	4bd6      	ldr	r3, [pc, #856]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005c06:	731a      	strb	r2, [r3, #12]
	total_km[10] = (Dis / 100) % 10 + 0x30;
 8005c08:	4bd4      	ldr	r3, [pc, #848]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	2164      	movs	r1, #100	@ 0x64
 8005c0e:	0018      	movs	r0, r3
 8005c10:	f7fa fa8a 	bl	8000128 <__udivsi3>
 8005c14:	0003      	movs	r3, r0
 8005c16:	210a      	movs	r1, #10
 8005c18:	0018      	movs	r0, r3
 8005c1a:	f7fa fb0b 	bl	8000234 <__aeabi_uidivmod>
 8005c1e:	000b      	movs	r3, r1
 8005c20:	b2db      	uxtb	r3, r3
 8005c22:	3330      	adds	r3, #48	@ 0x30
 8005c24:	b2da      	uxtb	r2, r3
 8005c26:	4bce      	ldr	r3, [pc, #824]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005c28:	729a      	strb	r2, [r3, #10]

	if ((Dis / 10000) % 10 == 0 && (Dis / 1000) % 10 == 0)
 8005c2a:	4bcc      	ldr	r3, [pc, #816]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005c2c:	681b      	ldr	r3, [r3, #0]
 8005c2e:	49cd      	ldr	r1, [pc, #820]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005c30:	0018      	movs	r0, r3
 8005c32:	f7fa fa79 	bl	8000128 <__udivsi3>
 8005c36:	0003      	movs	r3, r0
 8005c38:	210a      	movs	r1, #10
 8005c3a:	0018      	movs	r0, r3
 8005c3c:	f7fa fafa 	bl	8000234 <__aeabi_uidivmod>
 8005c40:	1e0b      	subs	r3, r1, #0
 8005c42:	d114      	bne.n	8005c6e <HMI_Stop_W+0x47a>
 8005c44:	4bc5      	ldr	r3, [pc, #788]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	22fa      	movs	r2, #250	@ 0xfa
 8005c4a:	0091      	lsls	r1, r2, #2
 8005c4c:	0018      	movs	r0, r3
 8005c4e:	f7fa fa6b 	bl	8000128 <__udivsi3>
 8005c52:	0003      	movs	r3, r0
 8005c54:	210a      	movs	r1, #10
 8005c56:	0018      	movs	r0, r3
 8005c58:	f7fa faec 	bl	8000234 <__aeabi_uidivmod>
 8005c5c:	1e0b      	subs	r3, r1, #0
 8005c5e:	d106      	bne.n	8005c6e <HMI_Stop_W+0x47a>
	{
		total_km[9] = 0x20;
 8005c60:	4bbf      	ldr	r3, [pc, #764]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005c62:	2220      	movs	r2, #32
 8005c64:	725a      	strb	r2, [r3, #9]
		total_km[8] = 0x20;
 8005c66:	4bbe      	ldr	r3, [pc, #760]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005c68:	2220      	movs	r2, #32
 8005c6a:	721a      	strb	r2, [r3, #8]
 8005c6c:	e045      	b.n	8005cfa <HMI_Stop_W+0x506>
	}
	else if ((Dis / 10000) % 10 == 0)
 8005c6e:	4bbb      	ldr	r3, [pc, #748]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005c70:	681b      	ldr	r3, [r3, #0]
 8005c72:	49bc      	ldr	r1, [pc, #752]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005c74:	0018      	movs	r0, r3
 8005c76:	f7fa fa57 	bl	8000128 <__udivsi3>
 8005c7a:	0003      	movs	r3, r0
 8005c7c:	210a      	movs	r1, #10
 8005c7e:	0018      	movs	r0, r3
 8005c80:	f7fa fad8 	bl	8000234 <__aeabi_uidivmod>
 8005c84:	1e0b      	subs	r3, r1, #0
 8005c86:	d115      	bne.n	8005cb4 <HMI_Stop_W+0x4c0>
	{
		total_km[9] = (Dis / 1000 % 10) + 0x30;
 8005c88:	4bb4      	ldr	r3, [pc, #720]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	22fa      	movs	r2, #250	@ 0xfa
 8005c8e:	0091      	lsls	r1, r2, #2
 8005c90:	0018      	movs	r0, r3
 8005c92:	f7fa fa49 	bl	8000128 <__udivsi3>
 8005c96:	0003      	movs	r3, r0
 8005c98:	210a      	movs	r1, #10
 8005c9a:	0018      	movs	r0, r3
 8005c9c:	f7fa faca 	bl	8000234 <__aeabi_uidivmod>
 8005ca0:	000b      	movs	r3, r1
 8005ca2:	b2db      	uxtb	r3, r3
 8005ca4:	3330      	adds	r3, #48	@ 0x30
 8005ca6:	b2da      	uxtb	r2, r3
 8005ca8:	4bad      	ldr	r3, [pc, #692]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005caa:	725a      	strb	r2, [r3, #9]
		total_km[8] = 0x20;
 8005cac:	4bac      	ldr	r3, [pc, #688]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005cae:	2220      	movs	r2, #32
 8005cb0:	721a      	strb	r2, [r3, #8]
 8005cb2:	e022      	b.n	8005cfa <HMI_Stop_W+0x506>
	}
	else
	{
		total_km[9] =  (Dis / 1000 % 10) + 0x30;
 8005cb4:	4ba9      	ldr	r3, [pc, #676]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	22fa      	movs	r2, #250	@ 0xfa
 8005cba:	0091      	lsls	r1, r2, #2
 8005cbc:	0018      	movs	r0, r3
 8005cbe:	f7fa fa33 	bl	8000128 <__udivsi3>
 8005cc2:	0003      	movs	r3, r0
 8005cc4:	210a      	movs	r1, #10
 8005cc6:	0018      	movs	r0, r3
 8005cc8:	f7fa fab4 	bl	8000234 <__aeabi_uidivmod>
 8005ccc:	000b      	movs	r3, r1
 8005cce:	b2db      	uxtb	r3, r3
 8005cd0:	3330      	adds	r3, #48	@ 0x30
 8005cd2:	b2da      	uxtb	r2, r3
 8005cd4:	4ba2      	ldr	r3, [pc, #648]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005cd6:	725a      	strb	r2, [r3, #9]
		total_km[8] =  (Dis / 10000 % 10) + 0x30;
 8005cd8:	4ba0      	ldr	r3, [pc, #640]	@ (8005f5c <HMI_Stop_W+0x768>)
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	49a1      	ldr	r1, [pc, #644]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005cde:	0018      	movs	r0, r3
 8005ce0:	f7fa fa22 	bl	8000128 <__udivsi3>
 8005ce4:	0003      	movs	r3, r0
 8005ce6:	210a      	movs	r1, #10
 8005ce8:	0018      	movs	r0, r3
 8005cea:	f7fa faa3 	bl	8000234 <__aeabi_uidivmod>
 8005cee:	000b      	movs	r3, r1
 8005cf0:	b2db      	uxtb	r3, r3
 8005cf2:	3330      	adds	r3, #48	@ 0x30
 8005cf4:	b2da      	uxtb	r2, r3
 8005cf6:	4b9a      	ldr	r3, [pc, #616]	@ (8005f60 <HMI_Stop_W+0x76c>)
 8005cf8:	721a      	strb	r2, [r3, #8]
	}

	//cpy paid_km 9, 10, 11, 13
	//default: paid_km 123.45 (8,9,10,12,13)
	fare_km_x = (int)(fare_km*100);
 8005cfa:	4b9b      	ldr	r3, [pc, #620]	@ (8005f68 <HMI_Stop_W+0x774>)
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	499b      	ldr	r1, [pc, #620]	@ (8005f6c <HMI_Stop_W+0x778>)
 8005d00:	1c18      	adds	r0, r3, #0
 8005d02:	f7fb f891 	bl	8000e28 <__aeabi_fmul>
 8005d06:	1c03      	adds	r3, r0, #0
 8005d08:	1c18      	adds	r0, r3, #0
 8005d0a:	f7fb fb6f 	bl	80013ec <__aeabi_f2iz>
 8005d0e:	0003      	movs	r3, r0
 8005d10:	001a      	movs	r2, r3
 8005d12:	4b97      	ldr	r3, [pc, #604]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005d14:	601a      	str	r2, [r3, #0]
	paid_km[13] = (fare_km_x /1) % 10 + 0x30;
 8005d16:	4b96      	ldr	r3, [pc, #600]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	210a      	movs	r1, #10
 8005d1c:	0018      	movs	r0, r3
 8005d1e:	f7fa fa89 	bl	8000234 <__aeabi_uidivmod>
 8005d22:	000b      	movs	r3, r1
 8005d24:	b2db      	uxtb	r3, r3
 8005d26:	3330      	adds	r3, #48	@ 0x30
 8005d28:	b2da      	uxtb	r2, r3
 8005d2a:	4b92      	ldr	r3, [pc, #584]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005d2c:	735a      	strb	r2, [r3, #13]
	paid_km[12] = (fare_km_x /10) % 10 + 0x30;
 8005d2e:	4b90      	ldr	r3, [pc, #576]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	210a      	movs	r1, #10
 8005d34:	0018      	movs	r0, r3
 8005d36:	f7fa f9f7 	bl	8000128 <__udivsi3>
 8005d3a:	0003      	movs	r3, r0
 8005d3c:	210a      	movs	r1, #10
 8005d3e:	0018      	movs	r0, r3
 8005d40:	f7fa fa78 	bl	8000234 <__aeabi_uidivmod>
 8005d44:	000b      	movs	r3, r1
 8005d46:	b2db      	uxtb	r3, r3
 8005d48:	3330      	adds	r3, #48	@ 0x30
 8005d4a:	b2da      	uxtb	r2, r3
 8005d4c:	4b89      	ldr	r3, [pc, #548]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005d4e:	731a      	strb	r2, [r3, #12]
	paid_km[10] = (fare_km_x /100) % 10 + 0x30;
 8005d50:	4b87      	ldr	r3, [pc, #540]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005d52:	681b      	ldr	r3, [r3, #0]
 8005d54:	2164      	movs	r1, #100	@ 0x64
 8005d56:	0018      	movs	r0, r3
 8005d58:	f7fa f9e6 	bl	8000128 <__udivsi3>
 8005d5c:	0003      	movs	r3, r0
 8005d5e:	210a      	movs	r1, #10
 8005d60:	0018      	movs	r0, r3
 8005d62:	f7fa fa67 	bl	8000234 <__aeabi_uidivmod>
 8005d66:	000b      	movs	r3, r1
 8005d68:	b2db      	uxtb	r3, r3
 8005d6a:	3330      	adds	r3, #48	@ 0x30
 8005d6c:	b2da      	uxtb	r2, r3
 8005d6e:	4b81      	ldr	r3, [pc, #516]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005d70:	729a      	strb	r2, [r3, #10]

	if((fare_km_x / 10000) % 10 == 0 && (fare_km_x / 1000) % 10 == 0)
 8005d72:	4b7f      	ldr	r3, [pc, #508]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	497b      	ldr	r1, [pc, #492]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005d78:	0018      	movs	r0, r3
 8005d7a:	f7fa f9d5 	bl	8000128 <__udivsi3>
 8005d7e:	0003      	movs	r3, r0
 8005d80:	210a      	movs	r1, #10
 8005d82:	0018      	movs	r0, r3
 8005d84:	f7fa fa56 	bl	8000234 <__aeabi_uidivmod>
 8005d88:	1e0b      	subs	r3, r1, #0
 8005d8a:	d114      	bne.n	8005db6 <HMI_Stop_W+0x5c2>
 8005d8c:	4b78      	ldr	r3, [pc, #480]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	22fa      	movs	r2, #250	@ 0xfa
 8005d92:	0091      	lsls	r1, r2, #2
 8005d94:	0018      	movs	r0, r3
 8005d96:	f7fa f9c7 	bl	8000128 <__udivsi3>
 8005d9a:	0003      	movs	r3, r0
 8005d9c:	210a      	movs	r1, #10
 8005d9e:	0018      	movs	r0, r3
 8005da0:	f7fa fa48 	bl	8000234 <__aeabi_uidivmod>
 8005da4:	1e0b      	subs	r3, r1, #0
 8005da6:	d106      	bne.n	8005db6 <HMI_Stop_W+0x5c2>
	{
		paid_km[9] = 0x20;
 8005da8:	4b72      	ldr	r3, [pc, #456]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005daa:	2220      	movs	r2, #32
 8005dac:	725a      	strb	r2, [r3, #9]
		paid_km[8] = 0x20;
 8005dae:	4b71      	ldr	r3, [pc, #452]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005db0:	2220      	movs	r2, #32
 8005db2:	721a      	strb	r2, [r3, #8]
 8005db4:	e045      	b.n	8005e42 <HMI_Stop_W+0x64e>
	}
	else if((fare_km_x / 10000) % 10 == 0)
 8005db6:	4b6e      	ldr	r3, [pc, #440]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	496a      	ldr	r1, [pc, #424]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005dbc:	0018      	movs	r0, r3
 8005dbe:	f7fa f9b3 	bl	8000128 <__udivsi3>
 8005dc2:	0003      	movs	r3, r0
 8005dc4:	210a      	movs	r1, #10
 8005dc6:	0018      	movs	r0, r3
 8005dc8:	f7fa fa34 	bl	8000234 <__aeabi_uidivmod>
 8005dcc:	1e0b      	subs	r3, r1, #0
 8005dce:	d115      	bne.n	8005dfc <HMI_Stop_W+0x608>
	{
		paid_km[9] =  (fare_km_x / 1000) % 10 + 0x30;
 8005dd0:	4b67      	ldr	r3, [pc, #412]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	22fa      	movs	r2, #250	@ 0xfa
 8005dd6:	0091      	lsls	r1, r2, #2
 8005dd8:	0018      	movs	r0, r3
 8005dda:	f7fa f9a5 	bl	8000128 <__udivsi3>
 8005dde:	0003      	movs	r3, r0
 8005de0:	210a      	movs	r1, #10
 8005de2:	0018      	movs	r0, r3
 8005de4:	f7fa fa26 	bl	8000234 <__aeabi_uidivmod>
 8005de8:	000b      	movs	r3, r1
 8005dea:	b2db      	uxtb	r3, r3
 8005dec:	3330      	adds	r3, #48	@ 0x30
 8005dee:	b2da      	uxtb	r2, r3
 8005df0:	4b60      	ldr	r3, [pc, #384]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005df2:	725a      	strb	r2, [r3, #9]
		paid_km[8] = 0x20;
 8005df4:	4b5f      	ldr	r3, [pc, #380]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005df6:	2220      	movs	r2, #32
 8005df8:	721a      	strb	r2, [r3, #8]
 8005dfa:	e022      	b.n	8005e42 <HMI_Stop_W+0x64e>
	}
	else
	{
		paid_km[9] =  (fare_km_x / 1000) % 10 + 0x30;
 8005dfc:	4b5c      	ldr	r3, [pc, #368]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	22fa      	movs	r2, #250	@ 0xfa
 8005e02:	0091      	lsls	r1, r2, #2
 8005e04:	0018      	movs	r0, r3
 8005e06:	f7fa f98f 	bl	8000128 <__udivsi3>
 8005e0a:	0003      	movs	r3, r0
 8005e0c:	210a      	movs	r1, #10
 8005e0e:	0018      	movs	r0, r3
 8005e10:	f7fa fa10 	bl	8000234 <__aeabi_uidivmod>
 8005e14:	000b      	movs	r3, r1
 8005e16:	b2db      	uxtb	r3, r3
 8005e18:	3330      	adds	r3, #48	@ 0x30
 8005e1a:	b2da      	uxtb	r2, r3
 8005e1c:	4b55      	ldr	r3, [pc, #340]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005e1e:	725a      	strb	r2, [r3, #9]
		paid_km[8] =  (fare_km_x / 10000) % 10 + 0x30;
 8005e20:	4b53      	ldr	r3, [pc, #332]	@ (8005f70 <HMI_Stop_W+0x77c>)
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	494f      	ldr	r1, [pc, #316]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005e26:	0018      	movs	r0, r3
 8005e28:	f7fa f97e 	bl	8000128 <__udivsi3>
 8005e2c:	0003      	movs	r3, r0
 8005e2e:	210a      	movs	r1, #10
 8005e30:	0018      	movs	r0, r3
 8005e32:	f7fa f9ff 	bl	8000234 <__aeabi_uidivmod>
 8005e36:	000b      	movs	r3, r1
 8005e38:	b2db      	uxtb	r3, r3
 8005e3a:	3330      	adds	r3, #48	@ 0x30
 8005e3c:	b2da      	uxtb	r2, r3
 8005e3e:	4b4d      	ldr	r3, [pc, #308]	@ (8005f74 <HMI_Stop_W+0x780>)
 8005e40:	721a      	strb	r2, [r3, #8]
	}

	//cpy paid_min 9, 10, 11, 13
	//default: paid_min 123.45 (8,9,10,12,13)
	fare_min_x = (fare_min * 1000) / 10;
 8005e42:	4b4d      	ldr	r3, [pc, #308]	@ (8005f78 <HMI_Stop_W+0x784>)
 8005e44:	681b      	ldr	r3, [r3, #0]
 8005e46:	494d      	ldr	r1, [pc, #308]	@ (8005f7c <HMI_Stop_W+0x788>)
 8005e48:	1c18      	adds	r0, r3, #0
 8005e4a:	f7fa ffed 	bl	8000e28 <__aeabi_fmul>
 8005e4e:	1c03      	adds	r3, r0, #0
 8005e50:	494b      	ldr	r1, [pc, #300]	@ (8005f80 <HMI_Stop_W+0x78c>)
 8005e52:	1c18      	adds	r0, r3, #0
 8005e54:	f7fa fe02 	bl	8000a5c <__aeabi_fdiv>
 8005e58:	1c03      	adds	r3, r0, #0
 8005e5a:	1c18      	adds	r0, r3, #0
 8005e5c:	f7fa fb72 	bl	8000544 <__aeabi_f2uiz>
 8005e60:	0002      	movs	r2, r0
 8005e62:	4b48      	ldr	r3, [pc, #288]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005e64:	601a      	str	r2, [r3, #0]
	paid_min[13] = (fare_min_x /1) % 10 + 0x30;
 8005e66:	4b47      	ldr	r3, [pc, #284]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	210a      	movs	r1, #10
 8005e6c:	0018      	movs	r0, r3
 8005e6e:	f7fa f9e1 	bl	8000234 <__aeabi_uidivmod>
 8005e72:	000b      	movs	r3, r1
 8005e74:	b2db      	uxtb	r3, r3
 8005e76:	3330      	adds	r3, #48	@ 0x30
 8005e78:	b2da      	uxtb	r2, r3
 8005e7a:	4b43      	ldr	r3, [pc, #268]	@ (8005f88 <HMI_Stop_W+0x794>)
 8005e7c:	735a      	strb	r2, [r3, #13]
	paid_min[12] = (fare_min_x /10) % 10 + 0x30;
 8005e7e:	4b41      	ldr	r3, [pc, #260]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005e80:	681b      	ldr	r3, [r3, #0]
 8005e82:	210a      	movs	r1, #10
 8005e84:	0018      	movs	r0, r3
 8005e86:	f7fa f94f 	bl	8000128 <__udivsi3>
 8005e8a:	0003      	movs	r3, r0
 8005e8c:	210a      	movs	r1, #10
 8005e8e:	0018      	movs	r0, r3
 8005e90:	f7fa f9d0 	bl	8000234 <__aeabi_uidivmod>
 8005e94:	000b      	movs	r3, r1
 8005e96:	b2db      	uxtb	r3, r3
 8005e98:	3330      	adds	r3, #48	@ 0x30
 8005e9a:	b2da      	uxtb	r2, r3
 8005e9c:	4b3a      	ldr	r3, [pc, #232]	@ (8005f88 <HMI_Stop_W+0x794>)
 8005e9e:	731a      	strb	r2, [r3, #12]
	paid_min[10] = (fare_min_x /100) % 10 + 0x30;
 8005ea0:	4b38      	ldr	r3, [pc, #224]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	2164      	movs	r1, #100	@ 0x64
 8005ea6:	0018      	movs	r0, r3
 8005ea8:	f7fa f93e 	bl	8000128 <__udivsi3>
 8005eac:	0003      	movs	r3, r0
 8005eae:	210a      	movs	r1, #10
 8005eb0:	0018      	movs	r0, r3
 8005eb2:	f7fa f9bf 	bl	8000234 <__aeabi_uidivmod>
 8005eb6:	000b      	movs	r3, r1
 8005eb8:	b2db      	uxtb	r3, r3
 8005eba:	3330      	adds	r3, #48	@ 0x30
 8005ebc:	b2da      	uxtb	r2, r3
 8005ebe:	4b32      	ldr	r3, [pc, #200]	@ (8005f88 <HMI_Stop_W+0x794>)
 8005ec0:	729a      	strb	r2, [r3, #10]

	if((fare_min_x / 10000) % 10 == 0 && (fare_min_x / 1000) % 10 == 0)
 8005ec2:	4b30      	ldr	r3, [pc, #192]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005ec4:	681b      	ldr	r3, [r3, #0]
 8005ec6:	4927      	ldr	r1, [pc, #156]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005ec8:	0018      	movs	r0, r3
 8005eca:	f7fa f92d 	bl	8000128 <__udivsi3>
 8005ece:	0003      	movs	r3, r0
 8005ed0:	210a      	movs	r1, #10
 8005ed2:	0018      	movs	r0, r3
 8005ed4:	f7fa f9ae 	bl	8000234 <__aeabi_uidivmod>
 8005ed8:	1e0b      	subs	r3, r1, #0
 8005eda:	d114      	bne.n	8005f06 <HMI_Stop_W+0x712>
 8005edc:	4b29      	ldr	r3, [pc, #164]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	22fa      	movs	r2, #250	@ 0xfa
 8005ee2:	0091      	lsls	r1, r2, #2
 8005ee4:	0018      	movs	r0, r3
 8005ee6:	f7fa f91f 	bl	8000128 <__udivsi3>
 8005eea:	0003      	movs	r3, r0
 8005eec:	210a      	movs	r1, #10
 8005eee:	0018      	movs	r0, r3
 8005ef0:	f7fa f9a0 	bl	8000234 <__aeabi_uidivmod>
 8005ef4:	1e0b      	subs	r3, r1, #0
 8005ef6:	d106      	bne.n	8005f06 <HMI_Stop_W+0x712>
	{
		paid_min[9] = 0x20;
 8005ef8:	4b23      	ldr	r3, [pc, #140]	@ (8005f88 <HMI_Stop_W+0x794>)
 8005efa:	2220      	movs	r2, #32
 8005efc:	725a      	strb	r2, [r3, #9]
		paid_min[8] = 0x20;
 8005efe:	4b22      	ldr	r3, [pc, #136]	@ (8005f88 <HMI_Stop_W+0x794>)
 8005f00:	2220      	movs	r2, #32
 8005f02:	721a      	strb	r2, [r3, #8]
 8005f04:	e065      	b.n	8005fd2 <HMI_Stop_W+0x7de>
	}
	else if((fare_min_x / 10000) % 10 == 0)
 8005f06:	4b1f      	ldr	r3, [pc, #124]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	4916      	ldr	r1, [pc, #88]	@ (8005f64 <HMI_Stop_W+0x770>)
 8005f0c:	0018      	movs	r0, r3
 8005f0e:	f7fa f90b 	bl	8000128 <__udivsi3>
 8005f12:	0003      	movs	r3, r0
 8005f14:	210a      	movs	r1, #10
 8005f16:	0018      	movs	r0, r3
 8005f18:	f7fa f98c 	bl	8000234 <__aeabi_uidivmod>
 8005f1c:	1e0b      	subs	r3, r1, #0
 8005f1e:	d135      	bne.n	8005f8c <HMI_Stop_W+0x798>
	{
		paid_min[9] =  (fare_min_x / 1000) % 10 + 0x30;
 8005f20:	4b18      	ldr	r3, [pc, #96]	@ (8005f84 <HMI_Stop_W+0x790>)
 8005f22:	681b      	ldr	r3, [r3, #0]
 8005f24:	22fa      	movs	r2, #250	@ 0xfa
 8005f26:	0091      	lsls	r1, r2, #2
 8005f28:	0018      	movs	r0, r3
 8005f2a:	f7fa f8fd 	bl	8000128 <__udivsi3>
 8005f2e:	0003      	movs	r3, r0
 8005f30:	210a      	movs	r1, #10
 8005f32:	0018      	movs	r0, r3
 8005f34:	f7fa f97e 	bl	8000234 <__aeabi_uidivmod>
 8005f38:	000b      	movs	r3, r1
 8005f3a:	b2db      	uxtb	r3, r3
 8005f3c:	3330      	adds	r3, #48	@ 0x30
 8005f3e:	b2da      	uxtb	r2, r3
 8005f40:	4b11      	ldr	r3, [pc, #68]	@ (8005f88 <HMI_Stop_W+0x794>)
 8005f42:	725a      	strb	r2, [r3, #9]
		paid_min[8] = 0x20;
 8005f44:	4b10      	ldr	r3, [pc, #64]	@ (8005f88 <HMI_Stop_W+0x794>)
 8005f46:	2220      	movs	r2, #32
 8005f48:	721a      	strb	r2, [r3, #8]
 8005f4a:	e042      	b.n	8005fd2 <HMI_Stop_W+0x7de>
 8005f4c:	20000d24 	.word	0x20000d24
 8005f50:	08019ed8 	.word	0x08019ed8
 8005f54:	20000a6c 	.word	0x20000a6c
 8005f58:	08019ee4 	.word	0x08019ee4
 8005f5c:	20000a60 	.word	0x20000a60
 8005f60:	200001dc 	.word	0x200001dc
 8005f64:	00002710 	.word	0x00002710
 8005f68:	20000d2c 	.word	0x20000d2c
 8005f6c:	42c80000 	.word	0x42c80000
 8005f70:	20000d34 	.word	0x20000d34
 8005f74:	200001ec 	.word	0x200001ec
 8005f78:	20000d30 	.word	0x20000d30
 8005f7c:	447a0000 	.word	0x447a0000
 8005f80:	41200000 	.word	0x41200000
 8005f84:	20000d38 	.word	0x20000d38
 8005f88:	200001fc 	.word	0x200001fc
	}
	else
	{
		paid_min[9] =  (fare_min_x / 1000) % 10 + 0x30;
 8005f8c:	4bc3      	ldr	r3, [pc, #780]	@ (800629c <HMI_Stop_W+0xaa8>)
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	22fa      	movs	r2, #250	@ 0xfa
 8005f92:	0091      	lsls	r1, r2, #2
 8005f94:	0018      	movs	r0, r3
 8005f96:	f7fa f8c7 	bl	8000128 <__udivsi3>
 8005f9a:	0003      	movs	r3, r0
 8005f9c:	210a      	movs	r1, #10
 8005f9e:	0018      	movs	r0, r3
 8005fa0:	f7fa f948 	bl	8000234 <__aeabi_uidivmod>
 8005fa4:	000b      	movs	r3, r1
 8005fa6:	b2db      	uxtb	r3, r3
 8005fa8:	3330      	adds	r3, #48	@ 0x30
 8005faa:	b2da      	uxtb	r2, r3
 8005fac:	4bbc      	ldr	r3, [pc, #752]	@ (80062a0 <HMI_Stop_W+0xaac>)
 8005fae:	725a      	strb	r2, [r3, #9]
		paid_min[8] =  (fare_min_x / 10000) % 10 + 0x30;
 8005fb0:	4bba      	ldr	r3, [pc, #744]	@ (800629c <HMI_Stop_W+0xaa8>)
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	49bb      	ldr	r1, [pc, #748]	@ (80062a4 <HMI_Stop_W+0xab0>)
 8005fb6:	0018      	movs	r0, r3
 8005fb8:	f7fa f8b6 	bl	8000128 <__udivsi3>
 8005fbc:	0003      	movs	r3, r0
 8005fbe:	210a      	movs	r1, #10
 8005fc0:	0018      	movs	r0, r3
 8005fc2:	f7fa f937 	bl	8000234 <__aeabi_uidivmod>
 8005fc6:	000b      	movs	r3, r1
 8005fc8:	b2db      	uxtb	r3, r3
 8005fca:	3330      	adds	r3, #48	@ 0x30
 8005fcc:	b2da      	uxtb	r2, r3
 8005fce:	4bb4      	ldr	r3, [pc, #720]	@ (80062a0 <HMI_Stop_W+0xaac>)
 8005fd0:	721a      	strb	r2, [r3, #8]
	}

	if (Addition == 0)
 8005fd2:	4bb5      	ldr	r3, [pc, #724]	@ (80062a8 <HMI_Stop_W+0xab4>)
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	2b00      	cmp	r3, #0
 8005fd8:	d127      	bne.n	800602a <HMI_Stop_W+0x836>
	{
		//8,9,10-HK$0.0; 11,12,13 default 0.0
		//7,8,9-HK$, 10,11,12,13-0.00, default HK$0.00
		SD_buffer[98] = 0x20;
 8005fda:	4bb4      	ldr	r3, [pc, #720]	@ (80062ac <HMI_Stop_W+0xab8>)
 8005fdc:	2262      	movs	r2, #98	@ 0x62
 8005fde:	2120      	movs	r1, #32
 8005fe0:	5499      	strb	r1, [r3, r2]
		SD_buffer[99] = 0x20;
 8005fe2:	4bb2      	ldr	r3, [pc, #712]	@ (80062ac <HMI_Stop_W+0xab8>)
 8005fe4:	2263      	movs	r2, #99	@ 0x63
 8005fe6:	2120      	movs	r1, #32
 8005fe8:	5499      	strb	r1, [r3, r2]
		SD_buffer[100] = 0x30;
 8005fea:	4bb0      	ldr	r3, [pc, #704]	@ (80062ac <HMI_Stop_W+0xab8>)
 8005fec:	2264      	movs	r2, #100	@ 0x64
 8005fee:	2130      	movs	r1, #48	@ 0x30
 8005ff0:	5499      	strb	r1, [r3, r2]
		sub[13] = 0x30;
 8005ff2:	4baf      	ldr	r3, [pc, #700]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8005ff4:	2230      	movs	r2, #48	@ 0x30
 8005ff6:	735a      	strb	r2, [r3, #13]
		sub[12] = 0x30;
 8005ff8:	4bad      	ldr	r3, [pc, #692]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8005ffa:	2230      	movs	r2, #48	@ 0x30
 8005ffc:	731a      	strb	r2, [r3, #12]
		sub[11] = 0x2e;
 8005ffe:	4bac      	ldr	r3, [pc, #688]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006000:	222e      	movs	r2, #46	@ 0x2e
 8006002:	72da      	strb	r2, [r3, #11]
		sub[10] = 0x30;
 8006004:	4baa      	ldr	r3, [pc, #680]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006006:	2230      	movs	r2, #48	@ 0x30
 8006008:	729a      	strb	r2, [r3, #10]
		sub[9] = 0x24;
 800600a:	4ba9      	ldr	r3, [pc, #676]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800600c:	2224      	movs	r2, #36	@ 0x24
 800600e:	725a      	strb	r2, [r3, #9]
		sub[8] = 0x4b;
 8006010:	4ba7      	ldr	r3, [pc, #668]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006012:	224b      	movs	r2, #75	@ 0x4b
 8006014:	721a      	strb	r2, [r3, #8]
		sub[7] = 0x48;
 8006016:	4ba6      	ldr	r3, [pc, #664]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006018:	2248      	movs	r2, #72	@ 0x48
 800601a:	71da      	strb	r2, [r3, #7]
		sub[6] = 0x20;
 800601c:	4ba4      	ldr	r3, [pc, #656]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800601e:	2220      	movs	r2, #32
 8006020:	719a      	strb	r2, [r3, #6]
		sub[5] = 0x20;
 8006022:	4ba3      	ldr	r3, [pc, #652]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006024:	2220      	movs	r2, #32
 8006026:	715a      	strb	r2, [r3, #5]
 8006028:	e0df      	b.n	80061ea <HMI_Stop_W+0x9f6>
	}
	else
	{
		if(((Addition/10) / 100 % 10) == 0 && ((Addition/10) / 10 % 10) == 0)
 800602a:	4b9f      	ldr	r3, [pc, #636]	@ (80062a8 <HMI_Stop_W+0xab4>)
 800602c:	681b      	ldr	r3, [r3, #0]
 800602e:	22fa      	movs	r2, #250	@ 0xfa
 8006030:	0091      	lsls	r1, r2, #2
 8006032:	0018      	movs	r0, r3
 8006034:	f7fa f878 	bl	8000128 <__udivsi3>
 8006038:	0003      	movs	r3, r0
 800603a:	210a      	movs	r1, #10
 800603c:	0018      	movs	r0, r3
 800603e:	f7fa f8f9 	bl	8000234 <__aeabi_uidivmod>
 8006042:	1e0b      	subs	r3, r1, #0
 8006044:	d13a      	bne.n	80060bc <HMI_Stop_W+0x8c8>
 8006046:	4b98      	ldr	r3, [pc, #608]	@ (80062a8 <HMI_Stop_W+0xab4>)
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	2164      	movs	r1, #100	@ 0x64
 800604c:	0018      	movs	r0, r3
 800604e:	f7fa f86b 	bl	8000128 <__udivsi3>
 8006052:	0003      	movs	r3, r0
 8006054:	210a      	movs	r1, #10
 8006056:	0018      	movs	r0, r3
 8006058:	f7fa f8ec 	bl	8000234 <__aeabi_uidivmod>
 800605c:	1e0b      	subs	r3, r1, #0
 800605e:	d12d      	bne.n	80060bc <HMI_Stop_W+0x8c8>
		{
			sub[10] = ((Addition/10) / 1 % 10) + 0x30;
 8006060:	4b91      	ldr	r3, [pc, #580]	@ (80062a8 <HMI_Stop_W+0xab4>)
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	210a      	movs	r1, #10
 8006066:	0018      	movs	r0, r3
 8006068:	f7fa f85e 	bl	8000128 <__udivsi3>
 800606c:	0003      	movs	r3, r0
 800606e:	210a      	movs	r1, #10
 8006070:	0018      	movs	r0, r3
 8006072:	f7fa f8df 	bl	8000234 <__aeabi_uidivmod>
 8006076:	000b      	movs	r3, r1
 8006078:	b2db      	uxtb	r3, r3
 800607a:	3330      	adds	r3, #48	@ 0x30
 800607c:	b2da      	uxtb	r2, r3
 800607e:	4b8c      	ldr	r3, [pc, #560]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006080:	729a      	strb	r2, [r3, #10]
			sub[9] = 0x24;
 8006082:	4b8b      	ldr	r3, [pc, #556]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006084:	2224      	movs	r2, #36	@ 0x24
 8006086:	725a      	strb	r2, [r3, #9]
			sub[8] = 0x4b;
 8006088:	4b89      	ldr	r3, [pc, #548]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800608a:	224b      	movs	r2, #75	@ 0x4b
 800608c:	721a      	strb	r2, [r3, #8]
			sub[7] = 0x48;
 800608e:	4b88      	ldr	r3, [pc, #544]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006090:	2248      	movs	r2, #72	@ 0x48
 8006092:	71da      	strb	r2, [r3, #7]
			sub[6] = 0x20;
 8006094:	4b86      	ldr	r3, [pc, #536]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006096:	2220      	movs	r2, #32
 8006098:	719a      	strb	r2, [r3, #6]
			sub[5] = 0x20;
 800609a:	4b85      	ldr	r3, [pc, #532]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800609c:	2220      	movs	r2, #32
 800609e:	715a      	strb	r2, [r3, #5]
			SD_buffer[98] = 0x20;
 80060a0:	4b82      	ldr	r3, [pc, #520]	@ (80062ac <HMI_Stop_W+0xab8>)
 80060a2:	2262      	movs	r2, #98	@ 0x62
 80060a4:	2120      	movs	r1, #32
 80060a6:	5499      	strb	r1, [r3, r2]
			SD_buffer[99] = 0x20;
 80060a8:	4b80      	ldr	r3, [pc, #512]	@ (80062ac <HMI_Stop_W+0xab8>)
 80060aa:	2263      	movs	r2, #99	@ 0x63
 80060ac:	2120      	movs	r1, #32
 80060ae:	5499      	strb	r1, [r3, r2]
			SD_buffer[100] = sub[10]; //sub[11];
 80060b0:	4b7f      	ldr	r3, [pc, #508]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80060b2:	7a99      	ldrb	r1, [r3, #10]
 80060b4:	4b7d      	ldr	r3, [pc, #500]	@ (80062ac <HMI_Stop_W+0xab8>)
 80060b6:	2264      	movs	r2, #100	@ 0x64
 80060b8:	5499      	strb	r1, [r3, r2]
 80060ba:	e096      	b.n	80061ea <HMI_Stop_W+0x9f6>
		}
		else if(((Addition/10) / 100 % 10) == 0)
 80060bc:	4b7a      	ldr	r3, [pc, #488]	@ (80062a8 <HMI_Stop_W+0xab4>)
 80060be:	681b      	ldr	r3, [r3, #0]
 80060c0:	22fa      	movs	r2, #250	@ 0xfa
 80060c2:	0091      	lsls	r1, r2, #2
 80060c4:	0018      	movs	r0, r3
 80060c6:	f7fa f82f 	bl	8000128 <__udivsi3>
 80060ca:	0003      	movs	r3, r0
 80060cc:	210a      	movs	r1, #10
 80060ce:	0018      	movs	r0, r3
 80060d0:	f7fa f8b0 	bl	8000234 <__aeabi_uidivmod>
 80060d4:	1e0b      	subs	r3, r1, #0
 80060d6:	d13c      	bne.n	8006152 <HMI_Stop_W+0x95e>
		{
			sub[10] = ((Addition/10) / 1 % 10) + 0x30;
 80060d8:	4b73      	ldr	r3, [pc, #460]	@ (80062a8 <HMI_Stop_W+0xab4>)
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	210a      	movs	r1, #10
 80060de:	0018      	movs	r0, r3
 80060e0:	f7fa f822 	bl	8000128 <__udivsi3>
 80060e4:	0003      	movs	r3, r0
 80060e6:	210a      	movs	r1, #10
 80060e8:	0018      	movs	r0, r3
 80060ea:	f7fa f8a3 	bl	8000234 <__aeabi_uidivmod>
 80060ee:	000b      	movs	r3, r1
 80060f0:	b2db      	uxtb	r3, r3
 80060f2:	3330      	adds	r3, #48	@ 0x30
 80060f4:	b2da      	uxtb	r2, r3
 80060f6:	4b6e      	ldr	r3, [pc, #440]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80060f8:	729a      	strb	r2, [r3, #10]
			sub[9]= ((Addition/10) / 10 % 10) + 0x30;
 80060fa:	4b6b      	ldr	r3, [pc, #428]	@ (80062a8 <HMI_Stop_W+0xab4>)
 80060fc:	681b      	ldr	r3, [r3, #0]
 80060fe:	2164      	movs	r1, #100	@ 0x64
 8006100:	0018      	movs	r0, r3
 8006102:	f7fa f811 	bl	8000128 <__udivsi3>
 8006106:	0003      	movs	r3, r0
 8006108:	210a      	movs	r1, #10
 800610a:	0018      	movs	r0, r3
 800610c:	f7fa f892 	bl	8000234 <__aeabi_uidivmod>
 8006110:	000b      	movs	r3, r1
 8006112:	b2db      	uxtb	r3, r3
 8006114:	3330      	adds	r3, #48	@ 0x30
 8006116:	b2da      	uxtb	r2, r3
 8006118:	4b65      	ldr	r3, [pc, #404]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800611a:	725a      	strb	r2, [r3, #9]
			sub[8] = 0x24;
 800611c:	4b64      	ldr	r3, [pc, #400]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800611e:	2224      	movs	r2, #36	@ 0x24
 8006120:	721a      	strb	r2, [r3, #8]
			sub[7] = 0x4b;
 8006122:	4b63      	ldr	r3, [pc, #396]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006124:	224b      	movs	r2, #75	@ 0x4b
 8006126:	71da      	strb	r2, [r3, #7]
			sub[6] = 0x48;
 8006128:	4b61      	ldr	r3, [pc, #388]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800612a:	2248      	movs	r2, #72	@ 0x48
 800612c:	719a      	strb	r2, [r3, #6]
			sub[5] = 0x20;
 800612e:	4b60      	ldr	r3, [pc, #384]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006130:	2220      	movs	r2, #32
 8006132:	715a      	strb	r2, [r3, #5]
			SD_buffer[98] = 0x20;
 8006134:	4b5d      	ldr	r3, [pc, #372]	@ (80062ac <HMI_Stop_W+0xab8>)
 8006136:	2262      	movs	r2, #98	@ 0x62
 8006138:	2120      	movs	r1, #32
 800613a:	5499      	strb	r1, [r3, r2]
			SD_buffer[99] = sub[9]; //sub[10];
 800613c:	4b5c      	ldr	r3, [pc, #368]	@ (80062b0 <HMI_Stop_W+0xabc>)
 800613e:	7a59      	ldrb	r1, [r3, #9]
 8006140:	4b5a      	ldr	r3, [pc, #360]	@ (80062ac <HMI_Stop_W+0xab8>)
 8006142:	2263      	movs	r2, #99	@ 0x63
 8006144:	5499      	strb	r1, [r3, r2]
			SD_buffer[100] = sub[10]; //sub[11];
 8006146:	4b5a      	ldr	r3, [pc, #360]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006148:	7a99      	ldrb	r1, [r3, #10]
 800614a:	4b58      	ldr	r3, [pc, #352]	@ (80062ac <HMI_Stop_W+0xab8>)
 800614c:	2264      	movs	r2, #100	@ 0x64
 800614e:	5499      	strb	r1, [r3, r2]
 8006150:	e04b      	b.n	80061ea <HMI_Stop_W+0x9f6>
		}
		else
		{
			sub[10] = ((Addition/10) / 1 % 10) + 0x30;
 8006152:	4b55      	ldr	r3, [pc, #340]	@ (80062a8 <HMI_Stop_W+0xab4>)
 8006154:	681b      	ldr	r3, [r3, #0]
 8006156:	210a      	movs	r1, #10
 8006158:	0018      	movs	r0, r3
 800615a:	f7f9 ffe5 	bl	8000128 <__udivsi3>
 800615e:	0003      	movs	r3, r0
 8006160:	210a      	movs	r1, #10
 8006162:	0018      	movs	r0, r3
 8006164:	f7fa f866 	bl	8000234 <__aeabi_uidivmod>
 8006168:	000b      	movs	r3, r1
 800616a:	b2db      	uxtb	r3, r3
 800616c:	3330      	adds	r3, #48	@ 0x30
 800616e:	b2da      	uxtb	r2, r3
 8006170:	4b4f      	ldr	r3, [pc, #316]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006172:	729a      	strb	r2, [r3, #10]
			sub[9] = ((Addition/10) / 10 % 10) + 0x30;
 8006174:	4b4c      	ldr	r3, [pc, #304]	@ (80062a8 <HMI_Stop_W+0xab4>)
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	2164      	movs	r1, #100	@ 0x64
 800617a:	0018      	movs	r0, r3
 800617c:	f7f9 ffd4 	bl	8000128 <__udivsi3>
 8006180:	0003      	movs	r3, r0
 8006182:	210a      	movs	r1, #10
 8006184:	0018      	movs	r0, r3
 8006186:	f7fa f855 	bl	8000234 <__aeabi_uidivmod>
 800618a:	000b      	movs	r3, r1
 800618c:	b2db      	uxtb	r3, r3
 800618e:	3330      	adds	r3, #48	@ 0x30
 8006190:	b2da      	uxtb	r2, r3
 8006192:	4b47      	ldr	r3, [pc, #284]	@ (80062b0 <HMI_Stop_W+0xabc>)
 8006194:	725a      	strb	r2, [r3, #9]
			sub[8] = ((Addition/10) / 100 % 10) + 0x30;
 8006196:	4b44      	ldr	r3, [pc, #272]	@ (80062a8 <HMI_Stop_W+0xab4>)
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	22fa      	movs	r2, #250	@ 0xfa
 800619c:	0091      	lsls	r1, r2, #2
 800619e:	0018      	movs	r0, r3
 80061a0:	f7f9 ffc2 	bl	8000128 <__udivsi3>
 80061a4:	0003      	movs	r3, r0
 80061a6:	210a      	movs	r1, #10
 80061a8:	0018      	movs	r0, r3
 80061aa:	f7fa f843 	bl	8000234 <__aeabi_uidivmod>
 80061ae:	000b      	movs	r3, r1
 80061b0:	b2db      	uxtb	r3, r3
 80061b2:	3330      	adds	r3, #48	@ 0x30
 80061b4:	b2da      	uxtb	r2, r3
 80061b6:	4b3e      	ldr	r3, [pc, #248]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80061b8:	721a      	strb	r2, [r3, #8]
			sub[7] = 0x24;
 80061ba:	4b3d      	ldr	r3, [pc, #244]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80061bc:	2224      	movs	r2, #36	@ 0x24
 80061be:	71da      	strb	r2, [r3, #7]
			sub[6] = 0x4b;
 80061c0:	4b3b      	ldr	r3, [pc, #236]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80061c2:	224b      	movs	r2, #75	@ 0x4b
 80061c4:	719a      	strb	r2, [r3, #6]
			sub[5] = 0x48;
 80061c6:	4b3a      	ldr	r3, [pc, #232]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80061c8:	2248      	movs	r2, #72	@ 0x48
 80061ca:	715a      	strb	r2, [r3, #5]
			SD_buffer[98] = sub[8]; //sub[9];
 80061cc:	4b38      	ldr	r3, [pc, #224]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80061ce:	7a19      	ldrb	r1, [r3, #8]
 80061d0:	4b36      	ldr	r3, [pc, #216]	@ (80062ac <HMI_Stop_W+0xab8>)
 80061d2:	2262      	movs	r2, #98	@ 0x62
 80061d4:	5499      	strb	r1, [r3, r2]
			SD_buffer[99] = sub[9]; //sub[10];
 80061d6:	4b36      	ldr	r3, [pc, #216]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80061d8:	7a59      	ldrb	r1, [r3, #9]
 80061da:	4b34      	ldr	r3, [pc, #208]	@ (80062ac <HMI_Stop_W+0xab8>)
 80061dc:	2263      	movs	r2, #99	@ 0x63
 80061de:	5499      	strb	r1, [r3, r2]
			SD_buffer[100] = sub[10]; //sub[11];
 80061e0:	4b33      	ldr	r3, [pc, #204]	@ (80062b0 <HMI_Stop_W+0xabc>)
 80061e2:	7a99      	ldrb	r1, [r3, #10]
 80061e4:	4b31      	ldr	r3, [pc, #196]	@ (80062ac <HMI_Stop_W+0xab8>)
 80061e6:	2264      	movs	r2, #100	@ 0x64
 80061e8:	5499      	strb	r1, [r3, r2]
		}
	}
	SD_buffer[101] = 0x2E;
 80061ea:	4b30      	ldr	r3, [pc, #192]	@ (80062ac <HMI_Stop_W+0xab8>)
 80061ec:	2265      	movs	r2, #101	@ 0x65
 80061ee:	212e      	movs	r1, #46	@ 0x2e
 80061f0:	5499      	strb	r1, [r3, r2]
	SD_buffer[102] = 0x30;
 80061f2:	4b2e      	ldr	r3, [pc, #184]	@ (80062ac <HMI_Stop_W+0xab8>)
 80061f4:	2266      	movs	r2, #102	@ 0x66
 80061f6:	2130      	movs	r1, #48	@ 0x30
 80061f8:	5499      	strb	r1, [r3, r2]
	SD_buffer[103] = 0x30;
 80061fa:	4b2c      	ldr	r3, [pc, #176]	@ (80062ac <HMI_Stop_W+0xab8>)
 80061fc:	2267      	movs	r2, #103	@ 0x67
 80061fe:	2130      	movs	r1, #48	@ 0x30
 8006200:	5499      	strb	r1, [r3, r2]
	SD_buffer[104] = 0x20;
 8006202:	4b2a      	ldr	r3, [pc, #168]	@ (80062ac <HMI_Stop_W+0xab8>)
 8006204:	2268      	movs	r2, #104	@ 0x68
 8006206:	2120      	movs	r1, #32
 8006208:	5499      	strb	r1, [r3, r2]

	//cpy fare(without sub) //new add for sd_card
	if ((fare_d_x10 /10000) % 10 == 0 && (fare_d_x10 /1000) % 10 == 0)
 800620a:	4b2a      	ldr	r3, [pc, #168]	@ (80062b4 <HMI_Stop_W+0xac0>)
 800620c:	681b      	ldr	r3, [r3, #0]
 800620e:	4925      	ldr	r1, [pc, #148]	@ (80062a4 <HMI_Stop_W+0xab0>)
 8006210:	0018      	movs	r0, r3
 8006212:	f7f9 ff89 	bl	8000128 <__udivsi3>
 8006216:	0003      	movs	r3, r0
 8006218:	210a      	movs	r1, #10
 800621a:	0018      	movs	r0, r3
 800621c:	f7fa f80a 	bl	8000234 <__aeabi_uidivmod>
 8006220:	1e0b      	subs	r3, r1, #0
 8006222:	d116      	bne.n	8006252 <HMI_Stop_W+0xa5e>
 8006224:	4b23      	ldr	r3, [pc, #140]	@ (80062b4 <HMI_Stop_W+0xac0>)
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	22fa      	movs	r2, #250	@ 0xfa
 800622a:	0091      	lsls	r1, r2, #2
 800622c:	0018      	movs	r0, r3
 800622e:	f7f9 ff7b 	bl	8000128 <__udivsi3>
 8006232:	0003      	movs	r3, r0
 8006234:	210a      	movs	r1, #10
 8006236:	0018      	movs	r0, r3
 8006238:	f7f9 fffc 	bl	8000234 <__aeabi_uidivmod>
 800623c:	1e0b      	subs	r3, r1, #0
 800623e:	d108      	bne.n	8006252 <HMI_Stop_W+0xa5e>
	{
		SD_buffer[90] = 0x20;
 8006240:	4b1a      	ldr	r3, [pc, #104]	@ (80062ac <HMI_Stop_W+0xab8>)
 8006242:	225a      	movs	r2, #90	@ 0x5a
 8006244:	2120      	movs	r1, #32
 8006246:	5499      	strb	r1, [r3, r2]
		SD_buffer[91] = 0x20;
 8006248:	4b18      	ldr	r3, [pc, #96]	@ (80062ac <HMI_Stop_W+0xab8>)
 800624a:	225b      	movs	r2, #91	@ 0x5b
 800624c:	2120      	movs	r1, #32
 800624e:	5499      	strb	r1, [r3, r2]
 8006250:	e057      	b.n	8006302 <HMI_Stop_W+0xb0e>
	}
	else if((fare_d_x10 /10000) % 10 == 0)
 8006252:	4b18      	ldr	r3, [pc, #96]	@ (80062b4 <HMI_Stop_W+0xac0>)
 8006254:	681b      	ldr	r3, [r3, #0]
 8006256:	4913      	ldr	r1, [pc, #76]	@ (80062a4 <HMI_Stop_W+0xab0>)
 8006258:	0018      	movs	r0, r3
 800625a:	f7f9 ff65 	bl	8000128 <__udivsi3>
 800625e:	0003      	movs	r3, r0
 8006260:	210a      	movs	r1, #10
 8006262:	0018      	movs	r0, r3
 8006264:	f7f9 ffe6 	bl	8000234 <__aeabi_uidivmod>
 8006268:	1e0b      	subs	r3, r1, #0
 800626a:	d125      	bne.n	80062b8 <HMI_Stop_W+0xac4>
	{
		SD_buffer[90] = 0x20;
 800626c:	4b0f      	ldr	r3, [pc, #60]	@ (80062ac <HMI_Stop_W+0xab8>)
 800626e:	225a      	movs	r2, #90	@ 0x5a
 8006270:	2120      	movs	r1, #32
 8006272:	5499      	strb	r1, [r3, r2]
		SD_buffer[91] = (fare_d_x10 /1000) % 10 + 0x30;
 8006274:	4b0f      	ldr	r3, [pc, #60]	@ (80062b4 <HMI_Stop_W+0xac0>)
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	22fa      	movs	r2, #250	@ 0xfa
 800627a:	0091      	lsls	r1, r2, #2
 800627c:	0018      	movs	r0, r3
 800627e:	f7f9 ff53 	bl	8000128 <__udivsi3>
 8006282:	0003      	movs	r3, r0
 8006284:	210a      	movs	r1, #10
 8006286:	0018      	movs	r0, r3
 8006288:	f7f9 ffd4 	bl	8000234 <__aeabi_uidivmod>
 800628c:	000b      	movs	r3, r1
 800628e:	b2db      	uxtb	r3, r3
 8006290:	3330      	adds	r3, #48	@ 0x30
 8006292:	b2d9      	uxtb	r1, r3
 8006294:	4b05      	ldr	r3, [pc, #20]	@ (80062ac <HMI_Stop_W+0xab8>)
 8006296:	225b      	movs	r2, #91	@ 0x5b
 8006298:	5499      	strb	r1, [r3, r2]
 800629a:	e032      	b.n	8006302 <HMI_Stop_W+0xb0e>
 800629c:	20000d38 	.word	0x20000d38
 80062a0:	200001fc 	.word	0x200001fc
 80062a4:	00002710 	.word	0x00002710
 80062a8:	20000a6c 	.word	0x20000a6c
 80062ac:	2000333c 	.word	0x2000333c
 80062b0:	2000020c 	.word	0x2000020c
 80062b4:	20000d20 	.word	0x20000d20
	}
	else
	{
		SD_buffer[90] = (fare_d_x10 /10000) % 10 + 0x30;
 80062b8:	4bda      	ldr	r3, [pc, #872]	@ (8006624 <HMI_Stop_W+0xe30>)
 80062ba:	681b      	ldr	r3, [r3, #0]
 80062bc:	49da      	ldr	r1, [pc, #872]	@ (8006628 <HMI_Stop_W+0xe34>)
 80062be:	0018      	movs	r0, r3
 80062c0:	f7f9 ff32 	bl	8000128 <__udivsi3>
 80062c4:	0003      	movs	r3, r0
 80062c6:	210a      	movs	r1, #10
 80062c8:	0018      	movs	r0, r3
 80062ca:	f7f9 ffb3 	bl	8000234 <__aeabi_uidivmod>
 80062ce:	000b      	movs	r3, r1
 80062d0:	b2db      	uxtb	r3, r3
 80062d2:	3330      	adds	r3, #48	@ 0x30
 80062d4:	b2d9      	uxtb	r1, r3
 80062d6:	4bd5      	ldr	r3, [pc, #852]	@ (800662c <HMI_Stop_W+0xe38>)
 80062d8:	225a      	movs	r2, #90	@ 0x5a
 80062da:	5499      	strb	r1, [r3, r2]
		SD_buffer[91] = (fare_d_x10 /1000) % 10 + 0x30;
 80062dc:	4bd1      	ldr	r3, [pc, #836]	@ (8006624 <HMI_Stop_W+0xe30>)
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	22fa      	movs	r2, #250	@ 0xfa
 80062e2:	0091      	lsls	r1, r2, #2
 80062e4:	0018      	movs	r0, r3
 80062e6:	f7f9 ff1f 	bl	8000128 <__udivsi3>
 80062ea:	0003      	movs	r3, r0
 80062ec:	210a      	movs	r1, #10
 80062ee:	0018      	movs	r0, r3
 80062f0:	f7f9 ffa0 	bl	8000234 <__aeabi_uidivmod>
 80062f4:	000b      	movs	r3, r1
 80062f6:	b2db      	uxtb	r3, r3
 80062f8:	3330      	adds	r3, #48	@ 0x30
 80062fa:	b2d9      	uxtb	r1, r3
 80062fc:	4bcb      	ldr	r3, [pc, #812]	@ (800662c <HMI_Stop_W+0xe38>)
 80062fe:	225b      	movs	r2, #91	@ 0x5b
 8006300:	5499      	strb	r1, [r3, r2]
	}
	SD_buffer[92] = (fare_d_x10 /100) % 10 + 0x30;
 8006302:	4bc8      	ldr	r3, [pc, #800]	@ (8006624 <HMI_Stop_W+0xe30>)
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	2164      	movs	r1, #100	@ 0x64
 8006308:	0018      	movs	r0, r3
 800630a:	f7f9 ff0d 	bl	8000128 <__udivsi3>
 800630e:	0003      	movs	r3, r0
 8006310:	210a      	movs	r1, #10
 8006312:	0018      	movs	r0, r3
 8006314:	f7f9 ff8e 	bl	8000234 <__aeabi_uidivmod>
 8006318:	000b      	movs	r3, r1
 800631a:	b2db      	uxtb	r3, r3
 800631c:	3330      	adds	r3, #48	@ 0x30
 800631e:	b2d9      	uxtb	r1, r3
 8006320:	4bc2      	ldr	r3, [pc, #776]	@ (800662c <HMI_Stop_W+0xe38>)
 8006322:	225c      	movs	r2, #92	@ 0x5c
 8006324:	5499      	strb	r1, [r3, r2]
	SD_buffer[93] = (fare_d_x10 /10) % 10 + 0x30;
 8006326:	4bbf      	ldr	r3, [pc, #764]	@ (8006624 <HMI_Stop_W+0xe30>)
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	210a      	movs	r1, #10
 800632c:	0018      	movs	r0, r3
 800632e:	f7f9 fefb 	bl	8000128 <__udivsi3>
 8006332:	0003      	movs	r3, r0
 8006334:	210a      	movs	r1, #10
 8006336:	0018      	movs	r0, r3
 8006338:	f7f9 ff7c 	bl	8000234 <__aeabi_uidivmod>
 800633c:	000b      	movs	r3, r1
 800633e:	b2db      	uxtb	r3, r3
 8006340:	3330      	adds	r3, #48	@ 0x30
 8006342:	b2d9      	uxtb	r1, r3
 8006344:	4bb9      	ldr	r3, [pc, #740]	@ (800662c <HMI_Stop_W+0xe38>)
 8006346:	225d      	movs	r2, #93	@ 0x5d
 8006348:	5499      	strb	r1, [r3, r2]
	SD_buffer[94] = 0x2E;
 800634a:	4bb8      	ldr	r3, [pc, #736]	@ (800662c <HMI_Stop_W+0xe38>)
 800634c:	225e      	movs	r2, #94	@ 0x5e
 800634e:	212e      	movs	r1, #46	@ 0x2e
 8006350:	5499      	strb	r1, [r3, r2]
	SD_buffer[95] = (fare_d_x10 /1) % 10 + 0x30;
 8006352:	4bb4      	ldr	r3, [pc, #720]	@ (8006624 <HMI_Stop_W+0xe30>)
 8006354:	681b      	ldr	r3, [r3, #0]
 8006356:	210a      	movs	r1, #10
 8006358:	0018      	movs	r0, r3
 800635a:	f7f9 ff6b 	bl	8000234 <__aeabi_uidivmod>
 800635e:	000b      	movs	r3, r1
 8006360:	b2db      	uxtb	r3, r3
 8006362:	3330      	adds	r3, #48	@ 0x30
 8006364:	b2d9      	uxtb	r1, r3
 8006366:	4bb1      	ldr	r3, [pc, #708]	@ (800662c <HMI_Stop_W+0xe38>)
 8006368:	225f      	movs	r2, #95	@ 0x5f
 800636a:	5499      	strb	r1, [r3, r2]
	SD_buffer[96] = 0x30;
 800636c:	4baf      	ldr	r3, [pc, #700]	@ (800662c <HMI_Stop_W+0xe38>)
 800636e:	2260      	movs	r2, #96	@ 0x60
 8006370:	2130      	movs	r1, #48	@ 0x30
 8006372:	5499      	strb	r1, [r3, r2]
	SD_buffer[97] = 0x20;
 8006374:	4bad      	ldr	r3, [pc, #692]	@ (800662c <HMI_Stop_W+0xe38>)
 8006376:	2261      	movs	r2, #97	@ 0x61
 8006378:	2120      	movs	r1, #32
 800637a:	5499      	strb	r1, [r3, r2]

	//cpy total_fare
	//default 00.0 - [9][10][11][12] - 0x30 0x30 0x2e 0x30
	//default 00.00 - [8][9][10][11][12]
	if(Addition == 0)
 800637c:	4bac      	ldr	r3, [pc, #688]	@ (8006630 <HMI_Stop_W+0xe3c>)
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	2b00      	cmp	r3, #0
 8006382:	d103      	bne.n	800638c <HMI_Stop_W+0xb98>
	{
		Final_price = fare_d_x10;
 8006384:	4ba7      	ldr	r3, [pc, #668]	@ (8006624 <HMI_Stop_W+0xe30>)
 8006386:	681a      	ldr	r2, [r3, #0]
 8006388:	4baa      	ldr	r3, [pc, #680]	@ (8006634 <HMI_Stop_W+0xe40>)
 800638a:	601a      	str	r2, [r3, #0]
	}

	t_fare[12] = 0x30;
 800638c:	4baa      	ldr	r3, [pc, #680]	@ (8006638 <HMI_Stop_W+0xe44>)
 800638e:	2230      	movs	r2, #48	@ 0x30
 8006390:	731a      	strb	r2, [r3, #12]
	t_fare[11] = (Final_price /1) % 10 + 0x30;
 8006392:	4ba8      	ldr	r3, [pc, #672]	@ (8006634 <HMI_Stop_W+0xe40>)
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	210a      	movs	r1, #10
 8006398:	0018      	movs	r0, r3
 800639a:	f7f9 ff4b 	bl	8000234 <__aeabi_uidivmod>
 800639e:	000b      	movs	r3, r1
 80063a0:	b2db      	uxtb	r3, r3
 80063a2:	3330      	adds	r3, #48	@ 0x30
 80063a4:	b2da      	uxtb	r2, r3
 80063a6:	4ba4      	ldr	r3, [pc, #656]	@ (8006638 <HMI_Stop_W+0xe44>)
 80063a8:	72da      	strb	r2, [r3, #11]
	t_fare[9] = (Final_price /10) % 10 + 0x30;
 80063aa:	4ba2      	ldr	r3, [pc, #648]	@ (8006634 <HMI_Stop_W+0xe40>)
 80063ac:	681b      	ldr	r3, [r3, #0]
 80063ae:	210a      	movs	r1, #10
 80063b0:	0018      	movs	r0, r3
 80063b2:	f7f9 feb9 	bl	8000128 <__udivsi3>
 80063b6:	0003      	movs	r3, r0
 80063b8:	210a      	movs	r1, #10
 80063ba:	0018      	movs	r0, r3
 80063bc:	f7f9 ff3a 	bl	8000234 <__aeabi_uidivmod>
 80063c0:	000b      	movs	r3, r1
 80063c2:	b2db      	uxtb	r3, r3
 80063c4:	3330      	adds	r3, #48	@ 0x30
 80063c6:	b2da      	uxtb	r2, r3
 80063c8:	4b9b      	ldr	r3, [pc, #620]	@ (8006638 <HMI_Stop_W+0xe44>)
 80063ca:	725a      	strb	r2, [r3, #9]
	t_fare[8] = (Final_price /100) % 10 + 0x30;
 80063cc:	4b99      	ldr	r3, [pc, #612]	@ (8006634 <HMI_Stop_W+0xe40>)
 80063ce:	681b      	ldr	r3, [r3, #0]
 80063d0:	2164      	movs	r1, #100	@ 0x64
 80063d2:	0018      	movs	r0, r3
 80063d4:	f7f9 fea8 	bl	8000128 <__udivsi3>
 80063d8:	0003      	movs	r3, r0
 80063da:	210a      	movs	r1, #10
 80063dc:	0018      	movs	r0, r3
 80063de:	f7f9 ff29 	bl	8000234 <__aeabi_uidivmod>
 80063e2:	000b      	movs	r3, r1
 80063e4:	b2db      	uxtb	r3, r3
 80063e6:	3330      	adds	r3, #48	@ 0x30
 80063e8:	b2da      	uxtb	r2, r3
 80063ea:	4b93      	ldr	r3, [pc, #588]	@ (8006638 <HMI_Stop_W+0xe44>)
 80063ec:	721a      	strb	r2, [r3, #8]

	if ((Final_price /10000) % 10 == 0 && (Final_price /1000) % 10 == 0)
 80063ee:	4b91      	ldr	r3, [pc, #580]	@ (8006634 <HMI_Stop_W+0xe40>)
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	498d      	ldr	r1, [pc, #564]	@ (8006628 <HMI_Stop_W+0xe34>)
 80063f4:	0018      	movs	r0, r3
 80063f6:	f7f9 fe97 	bl	8000128 <__udivsi3>
 80063fa:	0003      	movs	r3, r0
 80063fc:	210a      	movs	r1, #10
 80063fe:	0018      	movs	r0, r3
 8006400:	f7f9 ff18 	bl	8000234 <__aeabi_uidivmod>
 8006404:	1e0b      	subs	r3, r1, #0
 8006406:	d125      	bne.n	8006454 <HMI_Stop_W+0xc60>
 8006408:	4b8a      	ldr	r3, [pc, #552]	@ (8006634 <HMI_Stop_W+0xe40>)
 800640a:	681b      	ldr	r3, [r3, #0]
 800640c:	22fa      	movs	r2, #250	@ 0xfa
 800640e:	0091      	lsls	r1, r2, #2
 8006410:	0018      	movs	r0, r3
 8006412:	f7f9 fe89 	bl	8000128 <__udivsi3>
 8006416:	0003      	movs	r3, r0
 8006418:	210a      	movs	r1, #10
 800641a:	0018      	movs	r0, r3
 800641c:	f7f9 ff0a 	bl	8000234 <__aeabi_uidivmod>
 8006420:	1e0b      	subs	r3, r1, #0
 8006422:	d117      	bne.n	8006454 <HMI_Stop_W+0xc60>
	{
//		t_fare[8] = 0x24;
//		t_fare[7] = 0x4b;
//		t_fare[6] = 0x48;
		t_fare[7] = 0x24;
 8006424:	4b84      	ldr	r3, [pc, #528]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006426:	2224      	movs	r2, #36	@ 0x24
 8006428:	71da      	strb	r2, [r3, #7]
		t_fare[6] = 0x4b;
 800642a:	4b83      	ldr	r3, [pc, #524]	@ (8006638 <HMI_Stop_W+0xe44>)
 800642c:	224b      	movs	r2, #75	@ 0x4b
 800642e:	719a      	strb	r2, [r3, #6]
		t_fare[5] = 0x48;
 8006430:	4b81      	ldr	r3, [pc, #516]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006432:	2248      	movs	r2, #72	@ 0x48
 8006434:	715a      	strb	r2, [r3, #5]
		t_fare[4] = 0x20;
 8006436:	4b80      	ldr	r3, [pc, #512]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006438:	2220      	movs	r2, #32
 800643a:	711a      	strb	r2, [r3, #4]
		t_fare[3] = 0x20;
 800643c:	4b7e      	ldr	r3, [pc, #504]	@ (8006638 <HMI_Stop_W+0xe44>)
 800643e:	2220      	movs	r2, #32
 8006440:	70da      	strb	r2, [r3, #3]
		SD_buffer[105] = 0x20;
 8006442:	4b7a      	ldr	r3, [pc, #488]	@ (800662c <HMI_Stop_W+0xe38>)
 8006444:	2269      	movs	r2, #105	@ 0x69
 8006446:	2120      	movs	r1, #32
 8006448:	5499      	strb	r1, [r3, r2]
		SD_buffer[106] = 0x20;
 800644a:	4b78      	ldr	r3, [pc, #480]	@ (800662c <HMI_Stop_W+0xe38>)
 800644c:	226a      	movs	r2, #106	@ 0x6a
 800644e:	2120      	movs	r1, #32
 8006450:	5499      	strb	r1, [r3, r2]
 8006452:	e06a      	b.n	800652a <HMI_Stop_W+0xd36>
	}
	else if((Final_price /10000) % 10 == 0)
 8006454:	4b77      	ldr	r3, [pc, #476]	@ (8006634 <HMI_Stop_W+0xe40>)
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	4973      	ldr	r1, [pc, #460]	@ (8006628 <HMI_Stop_W+0xe34>)
 800645a:	0018      	movs	r0, r3
 800645c:	f7f9 fe64 	bl	8000128 <__udivsi3>
 8006460:	0003      	movs	r3, r0
 8006462:	210a      	movs	r1, #10
 8006464:	0018      	movs	r0, r3
 8006466:	f7f9 fee5 	bl	8000234 <__aeabi_uidivmod>
 800646a:	1e0b      	subs	r3, r1, #0
 800646c:	d127      	bne.n	80064be <HMI_Stop_W+0xcca>
	{
//		t_fare[8] = (Final_price /1000 % 10) + 0x30;
//		t_fare[7] = 0x24;
//		t_fare[6] = 0x4b;
//		t_fare[5] = 0x48;
		t_fare[7] = (Final_price /1000) % 10 + 0x30;
 800646e:	4b71      	ldr	r3, [pc, #452]	@ (8006634 <HMI_Stop_W+0xe40>)
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	22fa      	movs	r2, #250	@ 0xfa
 8006474:	0091      	lsls	r1, r2, #2
 8006476:	0018      	movs	r0, r3
 8006478:	f7f9 fe56 	bl	8000128 <__udivsi3>
 800647c:	0003      	movs	r3, r0
 800647e:	210a      	movs	r1, #10
 8006480:	0018      	movs	r0, r3
 8006482:	f7f9 fed7 	bl	8000234 <__aeabi_uidivmod>
 8006486:	000b      	movs	r3, r1
 8006488:	b2db      	uxtb	r3, r3
 800648a:	3330      	adds	r3, #48	@ 0x30
 800648c:	b2da      	uxtb	r2, r3
 800648e:	4b6a      	ldr	r3, [pc, #424]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006490:	71da      	strb	r2, [r3, #7]
		t_fare[6] = 0x24;
 8006492:	4b69      	ldr	r3, [pc, #420]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006494:	2224      	movs	r2, #36	@ 0x24
 8006496:	719a      	strb	r2, [r3, #6]
		t_fare[5] = 0x4b;
 8006498:	4b67      	ldr	r3, [pc, #412]	@ (8006638 <HMI_Stop_W+0xe44>)
 800649a:	224b      	movs	r2, #75	@ 0x4b
 800649c:	715a      	strb	r2, [r3, #5]
		t_fare[4] = 0x48;
 800649e:	4b66      	ldr	r3, [pc, #408]	@ (8006638 <HMI_Stop_W+0xe44>)
 80064a0:	2248      	movs	r2, #72	@ 0x48
 80064a2:	711a      	strb	r2, [r3, #4]
		t_fare[3] = 0x20;
 80064a4:	4b64      	ldr	r3, [pc, #400]	@ (8006638 <HMI_Stop_W+0xe44>)
 80064a6:	2220      	movs	r2, #32
 80064a8:	70da      	strb	r2, [r3, #3]
		SD_buffer[105] = 0x20;
 80064aa:	4b60      	ldr	r3, [pc, #384]	@ (800662c <HMI_Stop_W+0xe38>)
 80064ac:	2269      	movs	r2, #105	@ 0x69
 80064ae:	2120      	movs	r1, #32
 80064b0:	5499      	strb	r1, [r3, r2]
		SD_buffer[106] = t_fare[7]; //t_fare[8];
 80064b2:	4b61      	ldr	r3, [pc, #388]	@ (8006638 <HMI_Stop_W+0xe44>)
 80064b4:	79d9      	ldrb	r1, [r3, #7]
 80064b6:	4b5d      	ldr	r3, [pc, #372]	@ (800662c <HMI_Stop_W+0xe38>)
 80064b8:	226a      	movs	r2, #106	@ 0x6a
 80064ba:	5499      	strb	r1, [r3, r2]
 80064bc:	e035      	b.n	800652a <HMI_Stop_W+0xd36>
//		t_fare[8] = (Final_price /1000 % 10) + 0x30;
//		t_fare[7] = (Final_price /10000 % 10) + 0x30;
//		t_fare[6] = 0x24;
//		t_fare[5] = 0x4b;
//		t_fare[4] = 0x48;
		t_fare[7] = (Final_price /1000) % 10 + 0x30;
 80064be:	4b5d      	ldr	r3, [pc, #372]	@ (8006634 <HMI_Stop_W+0xe40>)
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	22fa      	movs	r2, #250	@ 0xfa
 80064c4:	0091      	lsls	r1, r2, #2
 80064c6:	0018      	movs	r0, r3
 80064c8:	f7f9 fe2e 	bl	8000128 <__udivsi3>
 80064cc:	0003      	movs	r3, r0
 80064ce:	210a      	movs	r1, #10
 80064d0:	0018      	movs	r0, r3
 80064d2:	f7f9 feaf 	bl	8000234 <__aeabi_uidivmod>
 80064d6:	000b      	movs	r3, r1
 80064d8:	b2db      	uxtb	r3, r3
 80064da:	3330      	adds	r3, #48	@ 0x30
 80064dc:	b2da      	uxtb	r2, r3
 80064de:	4b56      	ldr	r3, [pc, #344]	@ (8006638 <HMI_Stop_W+0xe44>)
 80064e0:	71da      	strb	r2, [r3, #7]
		t_fare[6] = (Final_price /10000) % 10 + 0x30;
 80064e2:	4b54      	ldr	r3, [pc, #336]	@ (8006634 <HMI_Stop_W+0xe40>)
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	4950      	ldr	r1, [pc, #320]	@ (8006628 <HMI_Stop_W+0xe34>)
 80064e8:	0018      	movs	r0, r3
 80064ea:	f7f9 fe1d 	bl	8000128 <__udivsi3>
 80064ee:	0003      	movs	r3, r0
 80064f0:	210a      	movs	r1, #10
 80064f2:	0018      	movs	r0, r3
 80064f4:	f7f9 fe9e 	bl	8000234 <__aeabi_uidivmod>
 80064f8:	000b      	movs	r3, r1
 80064fa:	b2db      	uxtb	r3, r3
 80064fc:	3330      	adds	r3, #48	@ 0x30
 80064fe:	b2da      	uxtb	r2, r3
 8006500:	4b4d      	ldr	r3, [pc, #308]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006502:	719a      	strb	r2, [r3, #6]
		t_fare[5] = 0x24;
 8006504:	4b4c      	ldr	r3, [pc, #304]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006506:	2224      	movs	r2, #36	@ 0x24
 8006508:	715a      	strb	r2, [r3, #5]
		t_fare[4] = 0x4b;
 800650a:	4b4b      	ldr	r3, [pc, #300]	@ (8006638 <HMI_Stop_W+0xe44>)
 800650c:	224b      	movs	r2, #75	@ 0x4b
 800650e:	711a      	strb	r2, [r3, #4]
		t_fare[3] = 0x48;
 8006510:	4b49      	ldr	r3, [pc, #292]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006512:	2248      	movs	r2, #72	@ 0x48
 8006514:	70da      	strb	r2, [r3, #3]
		SD_buffer[105] = t_fare[6]; //t_fare[7];
 8006516:	4b48      	ldr	r3, [pc, #288]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006518:	7999      	ldrb	r1, [r3, #6]
 800651a:	4b44      	ldr	r3, [pc, #272]	@ (800662c <HMI_Stop_W+0xe38>)
 800651c:	2269      	movs	r2, #105	@ 0x69
 800651e:	5499      	strb	r1, [r3, r2]
		SD_buffer[106] = t_fare[7]; //t_fare[8];
 8006520:	4b45      	ldr	r3, [pc, #276]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006522:	79d9      	ldrb	r1, [r3, #7]
 8006524:	4b41      	ldr	r3, [pc, #260]	@ (800662c <HMI_Stop_W+0xe38>)
 8006526:	226a      	movs	r2, #106	@ 0x6a
 8006528:	5499      	strb	r1, [r3, r2]
	}
	SD_buffer[107] = t_fare[8]; //t_fare[9];
 800652a:	4b43      	ldr	r3, [pc, #268]	@ (8006638 <HMI_Stop_W+0xe44>)
 800652c:	7a19      	ldrb	r1, [r3, #8]
 800652e:	4b3f      	ldr	r3, [pc, #252]	@ (800662c <HMI_Stop_W+0xe38>)
 8006530:	226b      	movs	r2, #107	@ 0x6b
 8006532:	5499      	strb	r1, [r3, r2]
	SD_buffer[108] = t_fare[9]; //t_fare[10];
 8006534:	4b40      	ldr	r3, [pc, #256]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006536:	7a59      	ldrb	r1, [r3, #9]
 8006538:	4b3c      	ldr	r3, [pc, #240]	@ (800662c <HMI_Stop_W+0xe38>)
 800653a:	226c      	movs	r2, #108	@ 0x6c
 800653c:	5499      	strb	r1, [r3, r2]
	SD_buffer[109] = 0x2E;
 800653e:	4b3b      	ldr	r3, [pc, #236]	@ (800662c <HMI_Stop_W+0xe38>)
 8006540:	226d      	movs	r2, #109	@ 0x6d
 8006542:	212e      	movs	r1, #46	@ 0x2e
 8006544:	5499      	strb	r1, [r3, r2]
	SD_buffer[110] = t_fare[11];
 8006546:	4b3c      	ldr	r3, [pc, #240]	@ (8006638 <HMI_Stop_W+0xe44>)
 8006548:	7ad9      	ldrb	r1, [r3, #11]
 800654a:	4b38      	ldr	r3, [pc, #224]	@ (800662c <HMI_Stop_W+0xe38>)
 800654c:	226e      	movs	r2, #110	@ 0x6e
 800654e:	5499      	strb	r1, [r3, r2]
	SD_buffer[111] = 0x30;
 8006550:	4b36      	ldr	r3, [pc, #216]	@ (800662c <HMI_Stop_W+0xe38>)
 8006552:	226f      	movs	r2, #111	@ 0x6f
 8006554:	2130      	movs	r1, #48	@ 0x30
 8006556:	5499      	strb	r1, [r3, r2]
	SD_buffer[112] = 0x20;
 8006558:	4b34      	ldr	r3, [pc, #208]	@ (800662c <HMI_Stop_W+0xe38>)
 800655a:	2270      	movs	r2, #112	@ 0x70
 800655c:	2120      	movs	r1, #32
 800655e:	5499      	strb	r1, [r3, r2]

	//v_can_end
	v_value[1] = (Final_price /10000) % 10 + 0x30;
 8006560:	4b34      	ldr	r3, [pc, #208]	@ (8006634 <HMI_Stop_W+0xe40>)
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	4930      	ldr	r1, [pc, #192]	@ (8006628 <HMI_Stop_W+0xe34>)
 8006566:	0018      	movs	r0, r3
 8006568:	f7f9 fdde 	bl	8000128 <__udivsi3>
 800656c:	0003      	movs	r3, r0
 800656e:	210a      	movs	r1, #10
 8006570:	0018      	movs	r0, r3
 8006572:	f7f9 fe5f 	bl	8000234 <__aeabi_uidivmod>
 8006576:	000b      	movs	r3, r1
 8006578:	b2db      	uxtb	r3, r3
 800657a:	3330      	adds	r3, #48	@ 0x30
 800657c:	b2da      	uxtb	r2, r3
 800657e:	4b2f      	ldr	r3, [pc, #188]	@ (800663c <HMI_Stop_W+0xe48>)
 8006580:	705a      	strb	r2, [r3, #1]
	v_value[2] = (Final_price /1000) % 10 + 0x30;
 8006582:	4b2c      	ldr	r3, [pc, #176]	@ (8006634 <HMI_Stop_W+0xe40>)
 8006584:	681b      	ldr	r3, [r3, #0]
 8006586:	22fa      	movs	r2, #250	@ 0xfa
 8006588:	0091      	lsls	r1, r2, #2
 800658a:	0018      	movs	r0, r3
 800658c:	f7f9 fdcc 	bl	8000128 <__udivsi3>
 8006590:	0003      	movs	r3, r0
 8006592:	210a      	movs	r1, #10
 8006594:	0018      	movs	r0, r3
 8006596:	f7f9 fe4d 	bl	8000234 <__aeabi_uidivmod>
 800659a:	000b      	movs	r3, r1
 800659c:	b2db      	uxtb	r3, r3
 800659e:	3330      	adds	r3, #48	@ 0x30
 80065a0:	b2da      	uxtb	r2, r3
 80065a2:	4b26      	ldr	r3, [pc, #152]	@ (800663c <HMI_Stop_W+0xe48>)
 80065a4:	709a      	strb	r2, [r3, #2]
	v_value[3] = (Final_price /100) % 10 + 0x30;
 80065a6:	4b23      	ldr	r3, [pc, #140]	@ (8006634 <HMI_Stop_W+0xe40>)
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	2164      	movs	r1, #100	@ 0x64
 80065ac:	0018      	movs	r0, r3
 80065ae:	f7f9 fdbb 	bl	8000128 <__udivsi3>
 80065b2:	0003      	movs	r3, r0
 80065b4:	210a      	movs	r1, #10
 80065b6:	0018      	movs	r0, r3
 80065b8:	f7f9 fe3c 	bl	8000234 <__aeabi_uidivmod>
 80065bc:	000b      	movs	r3, r1
 80065be:	b2db      	uxtb	r3, r3
 80065c0:	3330      	adds	r3, #48	@ 0x30
 80065c2:	b2da      	uxtb	r2, r3
 80065c4:	4b1d      	ldr	r3, [pc, #116]	@ (800663c <HMI_Stop_W+0xe48>)
 80065c6:	70da      	strb	r2, [r3, #3]
	v_value[4] = (Final_price /10) % 10 + 0x30;
 80065c8:	4b1a      	ldr	r3, [pc, #104]	@ (8006634 <HMI_Stop_W+0xe40>)
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	210a      	movs	r1, #10
 80065ce:	0018      	movs	r0, r3
 80065d0:	f7f9 fdaa 	bl	8000128 <__udivsi3>
 80065d4:	0003      	movs	r3, r0
 80065d6:	210a      	movs	r1, #10
 80065d8:	0018      	movs	r0, r3
 80065da:	f7f9 fe2b 	bl	8000234 <__aeabi_uidivmod>
 80065de:	000b      	movs	r3, r1
 80065e0:	b2db      	uxtb	r3, r3
 80065e2:	3330      	adds	r3, #48	@ 0x30
 80065e4:	b2da      	uxtb	r2, r3
 80065e6:	4b15      	ldr	r3, [pc, #84]	@ (800663c <HMI_Stop_W+0xe48>)
 80065e8:	711a      	strb	r2, [r3, #4]
	v_value[5] = (Final_price /1) % 10 + 0x30;
 80065ea:	4b12      	ldr	r3, [pc, #72]	@ (8006634 <HMI_Stop_W+0xe40>)
 80065ec:	681b      	ldr	r3, [r3, #0]
 80065ee:	210a      	movs	r1, #10
 80065f0:	0018      	movs	r0, r3
 80065f2:	f7f9 fe1f 	bl	8000234 <__aeabi_uidivmod>
 80065f6:	000b      	movs	r3, r1
 80065f8:	b2db      	uxtb	r3, r3
 80065fa:	3330      	adds	r3, #48	@ 0x30
 80065fc:	b2da      	uxtb	r2, r3
 80065fe:	4b0f      	ldr	r3, [pc, #60]	@ (800663c <HMI_Stop_W+0xe48>)
 8006600:	715a      	strb	r2, [r3, #5]
	if(Addition == 0)
 8006602:	4b0b      	ldr	r3, [pc, #44]	@ (8006630 <HMI_Stop_W+0xe3c>)
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	2b00      	cmp	r3, #0
 8006608:	d11a      	bne.n	8006640 <HMI_Stop_W+0xe4c>
	{
		v_value[0] = 0;
 800660a:	4b0c      	ldr	r3, [pc, #48]	@ (800663c <HMI_Stop_W+0xe48>)
 800660c:	2200      	movs	r2, #0
 800660e:	701a      	strb	r2, [r3, #0]
		v_value[6] = 0;
 8006610:	4b0a      	ldr	r3, [pc, #40]	@ (800663c <HMI_Stop_W+0xe48>)
 8006612:	2200      	movs	r2, #0
 8006614:	719a      	strb	r2, [r3, #6]
		v_value[7] = 0;
 8006616:	4b09      	ldr	r3, [pc, #36]	@ (800663c <HMI_Stop_W+0xe48>)
 8006618:	2200      	movs	r2, #0
 800661a:	71da      	strb	r2, [r3, #7]
		v_value[8] = 0;
 800661c:	4b07      	ldr	r3, [pc, #28]	@ (800663c <HMI_Stop_W+0xe48>)
 800661e:	2200      	movs	r2, #0
 8006620:	721a      	strb	r2, [r3, #8]
 8006622:	e044      	b.n	80066ae <HMI_Stop_W+0xeba>
 8006624:	20000d20 	.word	0x20000d20
 8006628:	00002710 	.word	0x00002710
 800662c:	2000333c 	.word	0x2000333c
 8006630:	20000a6c 	.word	0x20000a6c
 8006634:	20000a4c 	.word	0x20000a4c
 8006638:	2000021c 	.word	0x2000021c
 800663c:	200033b0 	.word	0x200033b0
	}
	else
	{
		v_value[0] = 1;
 8006640:	4bcf      	ldr	r3, [pc, #828]	@ (8006980 <HMI_Stop_W+0x118c>)
 8006642:	2201      	movs	r2, #1
 8006644:	701a      	strb	r2, [r3, #0]
		v_value[6] = (Addition /1000) % 10 + 0x30;
 8006646:	4bcf      	ldr	r3, [pc, #828]	@ (8006984 <HMI_Stop_W+0x1190>)
 8006648:	681b      	ldr	r3, [r3, #0]
 800664a:	22fa      	movs	r2, #250	@ 0xfa
 800664c:	0091      	lsls	r1, r2, #2
 800664e:	0018      	movs	r0, r3
 8006650:	f7f9 fd6a 	bl	8000128 <__udivsi3>
 8006654:	0003      	movs	r3, r0
 8006656:	210a      	movs	r1, #10
 8006658:	0018      	movs	r0, r3
 800665a:	f7f9 fdeb 	bl	8000234 <__aeabi_uidivmod>
 800665e:	000b      	movs	r3, r1
 8006660:	b2db      	uxtb	r3, r3
 8006662:	3330      	adds	r3, #48	@ 0x30
 8006664:	b2da      	uxtb	r2, r3
 8006666:	4bc6      	ldr	r3, [pc, #792]	@ (8006980 <HMI_Stop_W+0x118c>)
 8006668:	719a      	strb	r2, [r3, #6]
		v_value[7] = (Addition /100) % 10 + 0x30;
 800666a:	4bc6      	ldr	r3, [pc, #792]	@ (8006984 <HMI_Stop_W+0x1190>)
 800666c:	681b      	ldr	r3, [r3, #0]
 800666e:	2164      	movs	r1, #100	@ 0x64
 8006670:	0018      	movs	r0, r3
 8006672:	f7f9 fd59 	bl	8000128 <__udivsi3>
 8006676:	0003      	movs	r3, r0
 8006678:	210a      	movs	r1, #10
 800667a:	0018      	movs	r0, r3
 800667c:	f7f9 fdda 	bl	8000234 <__aeabi_uidivmod>
 8006680:	000b      	movs	r3, r1
 8006682:	b2db      	uxtb	r3, r3
 8006684:	3330      	adds	r3, #48	@ 0x30
 8006686:	b2da      	uxtb	r2, r3
 8006688:	4bbd      	ldr	r3, [pc, #756]	@ (8006980 <HMI_Stop_W+0x118c>)
 800668a:	71da      	strb	r2, [r3, #7]
		v_value[8] = (Addition /10) % 10 + 0x30;
 800668c:	4bbd      	ldr	r3, [pc, #756]	@ (8006984 <HMI_Stop_W+0x1190>)
 800668e:	681b      	ldr	r3, [r3, #0]
 8006690:	210a      	movs	r1, #10
 8006692:	0018      	movs	r0, r3
 8006694:	f7f9 fd48 	bl	8000128 <__udivsi3>
 8006698:	0003      	movs	r3, r0
 800669a:	210a      	movs	r1, #10
 800669c:	0018      	movs	r0, r3
 800669e:	f7f9 fdc9 	bl	8000234 <__aeabi_uidivmod>
 80066a2:	000b      	movs	r3, r1
 80066a4:	b2db      	uxtb	r3, r3
 80066a6:	3330      	adds	r3, #48	@ 0x30
 80066a8:	b2da      	uxtb	r2, r3
 80066aa:	4bb5      	ldr	r3, [pc, #724]	@ (8006980 <HMI_Stop_W+0x118c>)
 80066ac:	721a      	strb	r2, [r3, #8]
	}
	//audio end
	if (((Flag_Audio_end==1) || (Flag_btn_changed==1)) && (Flag_Audio_end!=48))
 80066ae:	4bb6      	ldr	r3, [pc, #728]	@ (8006988 <HMI_Stop_W+0x1194>)
 80066b0:	781b      	ldrb	r3, [r3, #0]
 80066b2:	2b01      	cmp	r3, #1
 80066b4:	d004      	beq.n	80066c0 <HMI_Stop_W+0xecc>
 80066b6:	4bb5      	ldr	r3, [pc, #724]	@ (800698c <HMI_Stop_W+0x1198>)
 80066b8:	781b      	ldrb	r3, [r3, #0]
 80066ba:	2b01      	cmp	r3, #1
 80066bc:	d000      	beq.n	80066c0 <HMI_Stop_W+0xecc>
 80066be:	e0ea      	b.n	8006896 <HMI_Stop_W+0x10a2>
 80066c0:	4bb1      	ldr	r3, [pc, #708]	@ (8006988 <HMI_Stop_W+0x1194>)
 80066c2:	781b      	ldrb	r3, [r3, #0]
 80066c4:	2b30      	cmp	r3, #48	@ 0x30
 80066c6:	d100      	bne.n	80066ca <HMI_Stop_W+0xed6>
 80066c8:	e0e5      	b.n	8006896 <HMI_Stop_W+0x10a2>
	{
		Flag_Audio_end = 0; //false; //FALSE;
 80066ca:	4baf      	ldr	r3, [pc, #700]	@ (8006988 <HMI_Stop_W+0x1194>)
 80066cc:	2200      	movs	r2, #0
 80066ce:	701a      	strb	r2, [r3, #0]
		Flag_Audio_start = 1; //true; //TRUE;
 80066d0:	4baf      	ldr	r3, [pc, #700]	@ (8006990 <HMI_Stop_W+0x119c>)
 80066d2:	2201      	movs	r2, #1
 80066d4:	701a      	strb	r2, [r3, #0]
		Flag_btn_changed = 0; //false; //FALSE;
 80066d6:	4bad      	ldr	r3, [pc, #692]	@ (800698c <HMI_Stop_W+0x1198>)
 80066d8:	2200      	movs	r2, #0
 80066da:	701a      	strb	r2, [r3, #0]

		if (btn_value == 1)
 80066dc:	4bad      	ldr	r3, [pc, #692]	@ (8006994 <HMI_Stop_W+0x11a0>)
 80066de:	781b      	ldrb	r3, [r3, #0]
 80066e0:	2b01      	cmp	r3, #1
 80066e2:	d140      	bne.n	8006766 <HMI_Stop_W+0xf72>
		{
			cal_vcan(v_value, result);
 80066e4:	4aac      	ldr	r2, [pc, #688]	@ (8006998 <HMI_Stop_W+0x11a4>)
 80066e6:	4ba6      	ldr	r3, [pc, #664]	@ (8006980 <HMI_Stop_W+0x118c>)
 80066e8:	0011      	movs	r1, r2
 80066ea:	0018      	movs	r0, r3
 80066ec:	f005 f81a 	bl	800b724 <cal_vcan>
			v_can_end[2] = result[0] + 2;
 80066f0:	4ba9      	ldr	r3, [pc, #676]	@ (8006998 <HMI_Stop_W+0x11a4>)
 80066f2:	781b      	ldrb	r3, [r3, #0]
 80066f4:	3302      	adds	r3, #2
 80066f6:	b2da      	uxtb	r2, r3
 80066f8:	4ba8      	ldr	r3, [pc, #672]	@ (800699c <HMI_Stop_W+0x11a8>)
 80066fa:	709a      	strb	r2, [r3, #2]
			for (i=0; i<result[0]; i++)
 80066fc:	4ba8      	ldr	r3, [pc, #672]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 80066fe:	2200      	movs	r2, #0
 8006700:	801a      	strh	r2, [r3, #0]
 8006702:	e00f      	b.n	8006724 <HMI_Stop_W+0xf30>
			{
				v_can_end[i+5] = result[i+1];
 8006704:	4ba6      	ldr	r3, [pc, #664]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006706:	881b      	ldrh	r3, [r3, #0]
 8006708:	1c5a      	adds	r2, r3, #1
 800670a:	4ba5      	ldr	r3, [pc, #660]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 800670c:	881b      	ldrh	r3, [r3, #0]
 800670e:	3305      	adds	r3, #5
 8006710:	49a1      	ldr	r1, [pc, #644]	@ (8006998 <HMI_Stop_W+0x11a4>)
 8006712:	5c89      	ldrb	r1, [r1, r2]
 8006714:	4aa1      	ldr	r2, [pc, #644]	@ (800699c <HMI_Stop_W+0x11a8>)
 8006716:	54d1      	strb	r1, [r2, r3]
			for (i=0; i<result[0]; i++)
 8006718:	4ba1      	ldr	r3, [pc, #644]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 800671a:	881b      	ldrh	r3, [r3, #0]
 800671c:	3301      	adds	r3, #1
 800671e:	b29a      	uxth	r2, r3
 8006720:	4b9f      	ldr	r3, [pc, #636]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006722:	801a      	strh	r2, [r3, #0]
 8006724:	4b9c      	ldr	r3, [pc, #624]	@ (8006998 <HMI_Stop_W+0x11a4>)
 8006726:	781b      	ldrb	r3, [r3, #0]
 8006728:	001a      	movs	r2, r3
 800672a:	4b9d      	ldr	r3, [pc, #628]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 800672c:	881b      	ldrh	r3, [r3, #0]
 800672e:	429a      	cmp	r2, r3
 8006730:	d8e8      	bhi.n	8006704 <HMI_Stop_W+0xf10>
			}
			v_can_end[v_can_end[2] + 3] = checksum_8bit(v_can_end, (v_can_end[2] + 3));
 8006732:	4b9a      	ldr	r3, [pc, #616]	@ (800699c <HMI_Stop_W+0x11a8>)
 8006734:	789b      	ldrb	r3, [r3, #2]
 8006736:	1cda      	adds	r2, r3, #3
 8006738:	4b98      	ldr	r3, [pc, #608]	@ (800699c <HMI_Stop_W+0x11a8>)
 800673a:	789b      	ldrb	r3, [r3, #2]
 800673c:	1cdc      	adds	r4, r3, #3
 800673e:	4b97      	ldr	r3, [pc, #604]	@ (800699c <HMI_Stop_W+0x11a8>)
 8006740:	0011      	movs	r1, r2
 8006742:	0018      	movs	r0, r3
 8006744:	f001 fb64 	bl	8007e10 <checksum_8bit>
 8006748:	0003      	movs	r3, r0
 800674a:	001a      	movs	r2, r3
 800674c:	4b93      	ldr	r3, [pc, #588]	@ (800699c <HMI_Stop_W+0x11a8>)
 800674e:	551a      	strb	r2, [r3, r4]
			Voice_end(v_can_end);
 8006750:	4b92      	ldr	r3, [pc, #584]	@ (800699c <HMI_Stop_W+0x11a8>)
 8006752:	0018      	movs	r0, r3
 8006754:	f004 ffd4 	bl	800b700 <Voice_end>
			memset(v_can_end+5,0,sizeof(unsigned char)*27);
 8006758:	4b92      	ldr	r3, [pc, #584]	@ (80069a4 <HMI_Stop_W+0x11b0>)
 800675a:	221b      	movs	r2, #27
 800675c:	2100      	movs	r1, #0
 800675e:	0018      	movs	r0, r3
 8006760:	f012 fa76 	bl	8018c50 <memset>
 8006764:	e088      	b.n	8006878 <HMI_Stop_W+0x1084>
		}
		else if (btn_value == 2)
 8006766:	4b8b      	ldr	r3, [pc, #556]	@ (8006994 <HMI_Stop_W+0x11a0>)
 8006768:	781b      	ldrb	r3, [r3, #0]
 800676a:	2b02      	cmp	r3, #2
 800676c:	d140      	bne.n	80067f0 <HMI_Stop_W+0xffc>
		{
			cal_vcn(v_value, result);
 800676e:	4a8a      	ldr	r2, [pc, #552]	@ (8006998 <HMI_Stop_W+0x11a4>)
 8006770:	4b83      	ldr	r3, [pc, #524]	@ (8006980 <HMI_Stop_W+0x118c>)
 8006772:	0011      	movs	r1, r2
 8006774:	0018      	movs	r0, r3
 8006776:	f005 fa91 	bl	800bc9c <cal_vcn>
			v_cn_end[2] = result[0] + 2;
 800677a:	4b87      	ldr	r3, [pc, #540]	@ (8006998 <HMI_Stop_W+0x11a4>)
 800677c:	781b      	ldrb	r3, [r3, #0]
 800677e:	3302      	adds	r3, #2
 8006780:	b2da      	uxtb	r2, r3
 8006782:	4b89      	ldr	r3, [pc, #548]	@ (80069a8 <HMI_Stop_W+0x11b4>)
 8006784:	709a      	strb	r2, [r3, #2]
			for (i=0; i<result[0]; i++)
 8006786:	4b86      	ldr	r3, [pc, #536]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006788:	2200      	movs	r2, #0
 800678a:	801a      	strh	r2, [r3, #0]
 800678c:	e00f      	b.n	80067ae <HMI_Stop_W+0xfba>
			{
				v_cn_end[i+5] = result[i+1];
 800678e:	4b84      	ldr	r3, [pc, #528]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006790:	881b      	ldrh	r3, [r3, #0]
 8006792:	1c5a      	adds	r2, r3, #1
 8006794:	4b82      	ldr	r3, [pc, #520]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006796:	881b      	ldrh	r3, [r3, #0]
 8006798:	3305      	adds	r3, #5
 800679a:	497f      	ldr	r1, [pc, #508]	@ (8006998 <HMI_Stop_W+0x11a4>)
 800679c:	5c89      	ldrb	r1, [r1, r2]
 800679e:	4a82      	ldr	r2, [pc, #520]	@ (80069a8 <HMI_Stop_W+0x11b4>)
 80067a0:	54d1      	strb	r1, [r2, r3]
			for (i=0; i<result[0]; i++)
 80067a2:	4b7f      	ldr	r3, [pc, #508]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 80067a4:	881b      	ldrh	r3, [r3, #0]
 80067a6:	3301      	adds	r3, #1
 80067a8:	b29a      	uxth	r2, r3
 80067aa:	4b7d      	ldr	r3, [pc, #500]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 80067ac:	801a      	strh	r2, [r3, #0]
 80067ae:	4b7a      	ldr	r3, [pc, #488]	@ (8006998 <HMI_Stop_W+0x11a4>)
 80067b0:	781b      	ldrb	r3, [r3, #0]
 80067b2:	001a      	movs	r2, r3
 80067b4:	4b7a      	ldr	r3, [pc, #488]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 80067b6:	881b      	ldrh	r3, [r3, #0]
 80067b8:	429a      	cmp	r2, r3
 80067ba:	d8e8      	bhi.n	800678e <HMI_Stop_W+0xf9a>
			}
			v_cn_end[v_cn_end[2] + 3] = checksum_8bit(v_cn_end, (v_cn_end[2] + 3));
 80067bc:	4b7a      	ldr	r3, [pc, #488]	@ (80069a8 <HMI_Stop_W+0x11b4>)
 80067be:	789b      	ldrb	r3, [r3, #2]
 80067c0:	1cda      	adds	r2, r3, #3
 80067c2:	4b79      	ldr	r3, [pc, #484]	@ (80069a8 <HMI_Stop_W+0x11b4>)
 80067c4:	789b      	ldrb	r3, [r3, #2]
 80067c6:	1cdc      	adds	r4, r3, #3
 80067c8:	4b77      	ldr	r3, [pc, #476]	@ (80069a8 <HMI_Stop_W+0x11b4>)
 80067ca:	0011      	movs	r1, r2
 80067cc:	0018      	movs	r0, r3
 80067ce:	f001 fb1f 	bl	8007e10 <checksum_8bit>
 80067d2:	0003      	movs	r3, r0
 80067d4:	001a      	movs	r2, r3
 80067d6:	4b74      	ldr	r3, [pc, #464]	@ (80069a8 <HMI_Stop_W+0x11b4>)
 80067d8:	551a      	strb	r2, [r3, r4]
			Voice_end(v_cn_end);
 80067da:	4b73      	ldr	r3, [pc, #460]	@ (80069a8 <HMI_Stop_W+0x11b4>)
 80067dc:	0018      	movs	r0, r3
 80067de:	f004 ff8f 	bl	800b700 <Voice_end>
			memset(v_cn_end+5,0,sizeof(unsigned char)*27);
 80067e2:	4b72      	ldr	r3, [pc, #456]	@ (80069ac <HMI_Stop_W+0x11b8>)
 80067e4:	221b      	movs	r2, #27
 80067e6:	2100      	movs	r1, #0
 80067e8:	0018      	movs	r0, r3
 80067ea:	f012 fa31 	bl	8018c50 <memset>
 80067ee:	e043      	b.n	8006878 <HMI_Stop_W+0x1084>
		}
		else if (btn_value == 3)
 80067f0:	4b68      	ldr	r3, [pc, #416]	@ (8006994 <HMI_Stop_W+0x11a0>)
 80067f2:	781b      	ldrb	r3, [r3, #0]
 80067f4:	2b03      	cmp	r3, #3
 80067f6:	d13f      	bne.n	8006878 <HMI_Stop_W+0x1084>
		{
			cal_ven(v_value, result);
 80067f8:	4a67      	ldr	r2, [pc, #412]	@ (8006998 <HMI_Stop_W+0x11a4>)
 80067fa:	4b61      	ldr	r3, [pc, #388]	@ (8006980 <HMI_Stop_W+0x118c>)
 80067fc:	0011      	movs	r1, r2
 80067fe:	0018      	movs	r0, r3
 8006800:	f005 fd08 	bl	800c214 <cal_ven>
			v_en_end[2] = result[0] + 2;
 8006804:	4b64      	ldr	r3, [pc, #400]	@ (8006998 <HMI_Stop_W+0x11a4>)
 8006806:	781b      	ldrb	r3, [r3, #0]
 8006808:	3302      	adds	r3, #2
 800680a:	b2da      	uxtb	r2, r3
 800680c:	4b68      	ldr	r3, [pc, #416]	@ (80069b0 <HMI_Stop_W+0x11bc>)
 800680e:	709a      	strb	r2, [r3, #2]
			for (i=0; i<result[0]; i++)
 8006810:	4b63      	ldr	r3, [pc, #396]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006812:	2200      	movs	r2, #0
 8006814:	801a      	strh	r2, [r3, #0]
 8006816:	e00f      	b.n	8006838 <HMI_Stop_W+0x1044>
			{
				v_en_end[i+5] = result[i+1];
 8006818:	4b61      	ldr	r3, [pc, #388]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 800681a:	881b      	ldrh	r3, [r3, #0]
 800681c:	1c5a      	adds	r2, r3, #1
 800681e:	4b60      	ldr	r3, [pc, #384]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006820:	881b      	ldrh	r3, [r3, #0]
 8006822:	3305      	adds	r3, #5
 8006824:	495c      	ldr	r1, [pc, #368]	@ (8006998 <HMI_Stop_W+0x11a4>)
 8006826:	5c89      	ldrb	r1, [r1, r2]
 8006828:	4a61      	ldr	r2, [pc, #388]	@ (80069b0 <HMI_Stop_W+0x11bc>)
 800682a:	54d1      	strb	r1, [r2, r3]
			for (i=0; i<result[0]; i++)
 800682c:	4b5c      	ldr	r3, [pc, #368]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 800682e:	881b      	ldrh	r3, [r3, #0]
 8006830:	3301      	adds	r3, #1
 8006832:	b29a      	uxth	r2, r3
 8006834:	4b5a      	ldr	r3, [pc, #360]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006836:	801a      	strh	r2, [r3, #0]
 8006838:	4b57      	ldr	r3, [pc, #348]	@ (8006998 <HMI_Stop_W+0x11a4>)
 800683a:	781b      	ldrb	r3, [r3, #0]
 800683c:	001a      	movs	r2, r3
 800683e:	4b58      	ldr	r3, [pc, #352]	@ (80069a0 <HMI_Stop_W+0x11ac>)
 8006840:	881b      	ldrh	r3, [r3, #0]
 8006842:	429a      	cmp	r2, r3
 8006844:	d8e8      	bhi.n	8006818 <HMI_Stop_W+0x1024>
			}
			v_en_end[v_en_end[2] + 3] = checksum_8bit(v_en_end, (v_en_end[2] + 3));
 8006846:	4b5a      	ldr	r3, [pc, #360]	@ (80069b0 <HMI_Stop_W+0x11bc>)
 8006848:	789b      	ldrb	r3, [r3, #2]
 800684a:	1cda      	adds	r2, r3, #3
 800684c:	4b58      	ldr	r3, [pc, #352]	@ (80069b0 <HMI_Stop_W+0x11bc>)
 800684e:	789b      	ldrb	r3, [r3, #2]
 8006850:	1cdc      	adds	r4, r3, #3
 8006852:	4b57      	ldr	r3, [pc, #348]	@ (80069b0 <HMI_Stop_W+0x11bc>)
 8006854:	0011      	movs	r1, r2
 8006856:	0018      	movs	r0, r3
 8006858:	f001 fada 	bl	8007e10 <checksum_8bit>
 800685c:	0003      	movs	r3, r0
 800685e:	001a      	movs	r2, r3
 8006860:	4b53      	ldr	r3, [pc, #332]	@ (80069b0 <HMI_Stop_W+0x11bc>)
 8006862:	551a      	strb	r2, [r3, r4]
			Voice_end(v_en_end);
 8006864:	4b52      	ldr	r3, [pc, #328]	@ (80069b0 <HMI_Stop_W+0x11bc>)
 8006866:	0018      	movs	r0, r3
 8006868:	f004 ff4a 	bl	800b700 <Voice_end>
			memset(v_en_end+5,0,sizeof(unsigned char)*27);
 800686c:	4b51      	ldr	r3, [pc, #324]	@ (80069b4 <HMI_Stop_W+0x11c0>)
 800686e:	221b      	movs	r2, #27
 8006870:	2100      	movs	r1, #0
 8006872:	0018      	movs	r0, r3
 8006874:	f012 f9ec 	bl	8018c50 <memset>
		}
		memset(v_value, 0, sizeof(unsigned char)*9);
 8006878:	4b41      	ldr	r3, [pc, #260]	@ (8006980 <HMI_Stop_W+0x118c>)
 800687a:	2209      	movs	r2, #9
 800687c:	2100      	movs	r1, #0
 800687e:	0018      	movs	r0, r3
 8006880:	f012 f9e6 	bl	8018c50 <memset>
		memset(result, 0, sizeof(unsigned char)*26);
 8006884:	4b44      	ldr	r3, [pc, #272]	@ (8006998 <HMI_Stop_W+0x11a4>)
 8006886:	221a      	movs	r2, #26
 8006888:	2100      	movs	r1, #0
 800688a:	0018      	movs	r0, r3
 800688c:	f012 f9e0 	bl	8018c50 <memset>
		Flag_Audio_end = 0;
 8006890:	4b3d      	ldr	r3, [pc, #244]	@ (8006988 <HMI_Stop_W+0x1194>)
 8006892:	2200      	movs	r2, #0
 8006894:	701a      	strb	r2, [r3, #0]
	}

	//record last final price
	Last_Final_price = Final_price;
 8006896:	4b48      	ldr	r3, [pc, #288]	@ (80069b8 <HMI_Stop_W+0x11c4>)
 8006898:	681a      	ldr	r2, [r3, #0]
 800689a:	4b48      	ldr	r3, [pc, #288]	@ (80069bc <HMI_Stop_W+0x11c8>)
 800689c:	601a      	str	r2, [r3, #0]
	Last_Final_price_x10 = Final_price_x10;
 800689e:	4b48      	ldr	r3, [pc, #288]	@ (80069c0 <HMI_Stop_W+0x11cc>)
 80068a0:	681a      	ldr	r2, [r3, #0]
 80068a2:	4b48      	ldr	r3, [pc, #288]	@ (80069c4 <HMI_Stop_W+0x11d0>)
 80068a4:	601a      	str	r2, [r3, #0]
	//change
	Last_fare_d_x100 = fare_d_x100;
 80068a6:	4b48      	ldr	r3, [pc, #288]	@ (80069c8 <HMI_Stop_W+0x11d4>)
 80068a8:	681a      	ldr	r2, [r3, #0]
 80068aa:	4b48      	ldr	r3, [pc, #288]	@ (80069cc <HMI_Stop_W+0x11d8>)
 80068ac:	601a      	str	r2, [r3, #0]
	ex_Addition = Addition;
 80068ae:	4b35      	ldr	r3, [pc, #212]	@ (8006984 <HMI_Stop_W+0x1190>)
 80068b0:	681a      	ldr	r2, [r3, #0]
 80068b2:	4b47      	ldr	r3, [pc, #284]	@ (80069d0 <HMI_Stop_W+0x11dc>)
 80068b4:	601a      	str	r2, [r3, #0]
	Last_Dis = Dis;
 80068b6:	4b47      	ldr	r3, [pc, #284]	@ (80069d4 <HMI_Stop_W+0x11e0>)
 80068b8:	681a      	ldr	r2, [r3, #0]
 80068ba:	4b47      	ldr	r3, [pc, #284]	@ (80069d8 <HMI_Stop_W+0x11e4>)
 80068bc:	601a      	str	r2, [r3, #0]

	//transfer pick-up time (transfer only one time, Flag_Tbox_Start changed in S_to_V status)
	if(Flag_Tbox_Start)
 80068be:	4b47      	ldr	r3, [pc, #284]	@ (80069dc <HMI_Stop_W+0x11e8>)
 80068c0:	781b      	ldrb	r3, [r3, #0]
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	d100      	bne.n	80068c8 <HMI_Stop_W+0x10d4>
 80068c6:	e106      	b.n	8006ad6 <HMI_Stop_W+0x12e2>
	{
		Flag_Tbox_Start = FALSE;
 80068c8:	4b44      	ldr	r3, [pc, #272]	@ (80069dc <HMI_Stop_W+0x11e8>)
 80068ca:	2200      	movs	r2, #0
 80068cc:	701a      	strb	r2, [r3, #0]
		Flag_Tbox_Finish = TRUE;
 80068ce:	4b44      	ldr	r3, [pc, #272]	@ (80069e0 <HMI_Stop_W+0x11ec>)
 80068d0:	2201      	movs	r2, #1
 80068d2:	701a      	strb	r2, [r3, #0]
		tbox_start();
 80068d4:	f001 fb08 	bl	8007ee8 <tbox_start>
		flag_count = 1;
 80068d8:	4b42      	ldr	r3, [pc, #264]	@ (80069e4 <HMI_Stop_W+0x11f0>)
 80068da:	2201      	movs	r2, #1
 80068dc:	701a      	strb	r2, [r3, #0]
		E_read();
 80068de:	f004 fa43 	bl	800ad68 <E_read>
		//non business time
		nbtime_d = ((nbtime_counter / 60.0)* 1000) / 10; //changed
 80068e2:	4b41      	ldr	r3, [pc, #260]	@ (80069e8 <HMI_Stop_W+0x11f4>)
 80068e4:	681b      	ldr	r3, [r3, #0]
 80068e6:	0018      	movs	r0, r3
 80068e8:	f7fc fca4 	bl	8003234 <__aeabi_ui2d>
 80068ec:	2200      	movs	r2, #0
 80068ee:	4b3f      	ldr	r3, [pc, #252]	@ (80069ec <HMI_Stop_W+0x11f8>)
 80068f0:	f7fb f98e 	bl	8001c10 <__aeabi_ddiv>
 80068f4:	0002      	movs	r2, r0
 80068f6:	000b      	movs	r3, r1
 80068f8:	0010      	movs	r0, r2
 80068fa:	0019      	movs	r1, r3
 80068fc:	2200      	movs	r2, #0
 80068fe:	4b3c      	ldr	r3, [pc, #240]	@ (80069f0 <HMI_Stop_W+0x11fc>)
 8006900:	f7fb fdca 	bl	8002498 <__aeabi_dmul>
 8006904:	0002      	movs	r2, r0
 8006906:	000b      	movs	r3, r1
 8006908:	0010      	movs	r0, r2
 800690a:	0019      	movs	r1, r3
 800690c:	2200      	movs	r2, #0
 800690e:	4b39      	ldr	r3, [pc, #228]	@ (80069f4 <HMI_Stop_W+0x1200>)
 8006910:	f7fb f97e 	bl	8001c10 <__aeabi_ddiv>
 8006914:	0002      	movs	r2, r0
 8006916:	000b      	movs	r3, r1
 8006918:	0010      	movs	r0, r2
 800691a:	0019      	movs	r1, r3
 800691c:	f7f9 fe2a 	bl	8000574 <__aeabi_d2uiz>
 8006920:	0002      	movs	r2, r0
 8006922:	4b35      	ldr	r3, [pc, #212]	@ (80069f8 <HMI_Stop_W+0x1204>)
 8006924:	601a      	str	r2, [r3, #0]
		Dec2ASC(nbtime_d, nbtime);
 8006926:	4b34      	ldr	r3, [pc, #208]	@ (80069f8 <HMI_Stop_W+0x1204>)
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	4a34      	ldr	r2, [pc, #208]	@ (80069fc <HMI_Stop_W+0x1208>)
 800692c:	0011      	movs	r1, r2
 800692e:	0018      	movs	r0, r3
 8006930:	f004 f9a2 	bl	800ac78 <Dec2ASC>
		if (nbtime[2] == 0x30)
 8006934:	4b31      	ldr	r3, [pc, #196]	@ (80069fc <HMI_Stop_W+0x1208>)
 8006936:	789b      	ldrb	r3, [r3, #2]
 8006938:	2b30      	cmp	r3, #48	@ 0x30
 800693a:	d104      	bne.n	8006946 <HMI_Stop_W+0x1152>
			SD_buffer[82] = 0x20;
 800693c:	4b30      	ldr	r3, [pc, #192]	@ (8006a00 <HMI_Stop_W+0x120c>)
 800693e:	2252      	movs	r2, #82	@ 0x52
 8006940:	2120      	movs	r1, #32
 8006942:	5499      	strb	r1, [r3, r2]
 8006944:	e004      	b.n	8006950 <HMI_Stop_W+0x115c>
		else
			SD_buffer[82] = nbtime[2];
 8006946:	4b2d      	ldr	r3, [pc, #180]	@ (80069fc <HMI_Stop_W+0x1208>)
 8006948:	7899      	ldrb	r1, [r3, #2]
 800694a:	4b2d      	ldr	r3, [pc, #180]	@ (8006a00 <HMI_Stop_W+0x120c>)
 800694c:	2252      	movs	r2, #82	@ 0x52
 800694e:	5499      	strb	r1, [r3, r2]
		if (nbtime[3] == 0x30)
 8006950:	4b2a      	ldr	r3, [pc, #168]	@ (80069fc <HMI_Stop_W+0x1208>)
 8006952:	78db      	ldrb	r3, [r3, #3]
 8006954:	2b30      	cmp	r3, #48	@ 0x30
 8006956:	d104      	bne.n	8006962 <HMI_Stop_W+0x116e>
			SD_buffer[83] = 0x20;
 8006958:	4b29      	ldr	r3, [pc, #164]	@ (8006a00 <HMI_Stop_W+0x120c>)
 800695a:	2253      	movs	r2, #83	@ 0x53
 800695c:	2120      	movs	r1, #32
 800695e:	5499      	strb	r1, [r3, r2]
 8006960:	e004      	b.n	800696c <HMI_Stop_W+0x1178>
		else
			SD_buffer[83] = nbtime[3];
 8006962:	4b26      	ldr	r3, [pc, #152]	@ (80069fc <HMI_Stop_W+0x1208>)
 8006964:	78d9      	ldrb	r1, [r3, #3]
 8006966:	4b26      	ldr	r3, [pc, #152]	@ (8006a00 <HMI_Stop_W+0x120c>)
 8006968:	2253      	movs	r2, #83	@ 0x53
 800696a:	5499      	strb	r1, [r3, r2]
		if (nbtime[4] == 0x30)
 800696c:	4b23      	ldr	r3, [pc, #140]	@ (80069fc <HMI_Stop_W+0x1208>)
 800696e:	791b      	ldrb	r3, [r3, #4]
 8006970:	2b30      	cmp	r3, #48	@ 0x30
 8006972:	d147      	bne.n	8006a04 <HMI_Stop_W+0x1210>
			SD_buffer[84] = 0x20;
 8006974:	4b22      	ldr	r3, [pc, #136]	@ (8006a00 <HMI_Stop_W+0x120c>)
 8006976:	2254      	movs	r2, #84	@ 0x54
 8006978:	2120      	movs	r1, #32
 800697a:	5499      	strb	r1, [r3, r2]
 800697c:	e047      	b.n	8006a0e <HMI_Stop_W+0x121a>
 800697e:	46c0      	nop			@ (mov r8, r8)
 8006980:	200033b0 	.word	0x200033b0
 8006984:	20000a6c 	.word	0x20000a6c
 8006988:	200033d6 	.word	0x200033d6
 800698c:	200033d7 	.word	0x200033d7
 8006990:	20000484 	.word	0x20000484
 8006994:	200033d8 	.word	0x200033d8
 8006998:	200033bc 	.word	0x200033bc
 800699c:	20000424 	.word	0x20000424
 80069a0:	20000bf8 	.word	0x20000bf8
 80069a4:	20000429 	.word	0x20000429
 80069a8:	20000444 	.word	0x20000444
 80069ac:	20000449 	.word	0x20000449
 80069b0:	20000464 	.word	0x20000464
 80069b4:	20000469 	.word	0x20000469
 80069b8:	20000a4c 	.word	0x20000a4c
 80069bc:	20000a50 	.word	0x20000a50
 80069c0:	20000b2c 	.word	0x20000b2c
 80069c4:	20000a54 	.word	0x20000a54
 80069c8:	20000d24 	.word	0x20000d24
 80069cc:	20000d28 	.word	0x20000d28
 80069d0:	20000a58 	.word	0x20000a58
 80069d4:	20000a60 	.word	0x20000a60
 80069d8:	20000a64 	.word	0x20000a64
 80069dc:	2000022b 	.word	0x2000022b
 80069e0:	20000b3c 	.word	0x20000b3c
 80069e4:	20000e54 	.word	0x20000e54
 80069e8:	20000e58 	.word	0x20000e58
 80069ec:	404e0000 	.word	0x404e0000
 80069f0:	408f4000 	.word	0x408f4000
 80069f4:	40240000 	.word	0x40240000
 80069f8:	20000e4c 	.word	0x20000e4c
 80069fc:	20000eac 	.word	0x20000eac
 8006a00:	2000333c 	.word	0x2000333c
		else
			SD_buffer[84] = nbtime[4];
 8006a04:	4bc6      	ldr	r3, [pc, #792]	@ (8006d20 <HMI_Stop_W+0x152c>)
 8006a06:	7919      	ldrb	r1, [r3, #4]
 8006a08:	4bc6      	ldr	r3, [pc, #792]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a0a:	2254      	movs	r2, #84	@ 0x54
 8006a0c:	5499      	strb	r1, [r3, r2]

		SD_buffer[85] = nbtime[5];
 8006a0e:	4bc4      	ldr	r3, [pc, #784]	@ (8006d20 <HMI_Stop_W+0x152c>)
 8006a10:	7959      	ldrb	r1, [r3, #5]
 8006a12:	4bc4      	ldr	r3, [pc, #784]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a14:	2255      	movs	r2, #85	@ 0x55
 8006a16:	5499      	strb	r1, [r3, r2]
		SD_buffer[86] = 0x2E;
 8006a18:	4bc2      	ldr	r3, [pc, #776]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a1a:	2256      	movs	r2, #86	@ 0x56
 8006a1c:	212e      	movs	r1, #46	@ 0x2e
 8006a1e:	5499      	strb	r1, [r3, r2]
		SD_buffer[87] = nbtime[6];
 8006a20:	4bbf      	ldr	r3, [pc, #764]	@ (8006d20 <HMI_Stop_W+0x152c>)
 8006a22:	7999      	ldrb	r1, [r3, #6]
 8006a24:	4bbf      	ldr	r3, [pc, #764]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a26:	2257      	movs	r2, #87	@ 0x57
 8006a28:	5499      	strb	r1, [r3, r2]
		SD_buffer[88] = nbtime[7];
 8006a2a:	4bbd      	ldr	r3, [pc, #756]	@ (8006d20 <HMI_Stop_W+0x152c>)
 8006a2c:	79d9      	ldrb	r1, [r3, #7]
 8006a2e:	4bbd      	ldr	r3, [pc, #756]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a30:	2258      	movs	r2, #88	@ 0x58
 8006a32:	5499      	strb	r1, [r3, r2]
		SD_buffer[89] = 0x20;
 8006a34:	4bbb      	ldr	r3, [pc, #748]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a36:	2259      	movs	r2, #89	@ 0x59
 8006a38:	2120      	movs	r1, #32
 8006a3a:	5499      	strb	r1, [r3, r2]
		nbtime_counter = 0;
 8006a3c:	4bba      	ldr	r3, [pc, #744]	@ (8006d28 <HMI_Stop_W+0x1534>)
 8006a3e:	2200      	movs	r2, #0
 8006a40:	601a      	str	r2, [r3, #0]
		//start date time
		SD_buffer[14] = 0x32;
 8006a42:	4bb8      	ldr	r3, [pc, #736]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a44:	2232      	movs	r2, #50	@ 0x32
 8006a46:	739a      	strb	r2, [r3, #14]
		SD_buffer[15] = 0x30;
 8006a48:	4bb6      	ldr	r3, [pc, #728]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a4a:	2230      	movs	r2, #48	@ 0x30
 8006a4c:	73da      	strb	r2, [r3, #15]
		SD_buffer[16] = hmi_rtc[8];
 8006a4e:	4bb7      	ldr	r3, [pc, #732]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a50:	7a1a      	ldrb	r2, [r3, #8]
 8006a52:	4bb4      	ldr	r3, [pc, #720]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a54:	741a      	strb	r2, [r3, #16]
		SD_buffer[17] = hmi_rtc[9];
 8006a56:	4bb5      	ldr	r3, [pc, #724]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a58:	7a5a      	ldrb	r2, [r3, #9]
 8006a5a:	4bb2      	ldr	r3, [pc, #712]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a5c:	745a      	strb	r2, [r3, #17]
		SD_buffer[18] = 0x2D;
 8006a5e:	4bb1      	ldr	r3, [pc, #708]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a60:	222d      	movs	r2, #45	@ 0x2d
 8006a62:	749a      	strb	r2, [r3, #18]
		SD_buffer[19] = hmi_rtc[11];
 8006a64:	4bb1      	ldr	r3, [pc, #708]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a66:	7ada      	ldrb	r2, [r3, #11]
 8006a68:	4bae      	ldr	r3, [pc, #696]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a6a:	74da      	strb	r2, [r3, #19]
		SD_buffer[20] = hmi_rtc[12];
 8006a6c:	4baf      	ldr	r3, [pc, #700]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a6e:	7b1a      	ldrb	r2, [r3, #12]
 8006a70:	4bac      	ldr	r3, [pc, #688]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a72:	751a      	strb	r2, [r3, #20]
		SD_buffer[21] = 0x2D;
 8006a74:	4bab      	ldr	r3, [pc, #684]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a76:	222d      	movs	r2, #45	@ 0x2d
 8006a78:	755a      	strb	r2, [r3, #21]
		SD_buffer[22] = hmi_rtc[14];
 8006a7a:	4bac      	ldr	r3, [pc, #688]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a7c:	7b9a      	ldrb	r2, [r3, #14]
 8006a7e:	4ba9      	ldr	r3, [pc, #676]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a80:	759a      	strb	r2, [r3, #22]
		SD_buffer[23] = hmi_rtc[15];
 8006a82:	4baa      	ldr	r3, [pc, #680]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a84:	7bda      	ldrb	r2, [r3, #15]
 8006a86:	4ba7      	ldr	r3, [pc, #668]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a88:	75da      	strb	r2, [r3, #23]
		SD_buffer[24] = 0x20;
 8006a8a:	4ba6      	ldr	r3, [pc, #664]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a8c:	2220      	movs	r2, #32
 8006a8e:	761a      	strb	r2, [r3, #24]
		SD_buffer[25] = hmi_rtc[17];
 8006a90:	4ba6      	ldr	r3, [pc, #664]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a92:	7c5a      	ldrb	r2, [r3, #17]
 8006a94:	4ba3      	ldr	r3, [pc, #652]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a96:	765a      	strb	r2, [r3, #25]
		SD_buffer[26] = hmi_rtc[18];
 8006a98:	4ba4      	ldr	r3, [pc, #656]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006a9a:	7c9a      	ldrb	r2, [r3, #18]
 8006a9c:	4ba1      	ldr	r3, [pc, #644]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006a9e:	769a      	strb	r2, [r3, #26]
		SD_buffer[27] = 0x3A;
 8006aa0:	4ba0      	ldr	r3, [pc, #640]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006aa2:	223a      	movs	r2, #58	@ 0x3a
 8006aa4:	76da      	strb	r2, [r3, #27]
		SD_buffer[28] = hmi_rtc[20];
 8006aa6:	4ba1      	ldr	r3, [pc, #644]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006aa8:	7d1a      	ldrb	r2, [r3, #20]
 8006aaa:	4b9e      	ldr	r3, [pc, #632]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006aac:	771a      	strb	r2, [r3, #28]
		SD_buffer[29] = hmi_rtc[21];
 8006aae:	4b9f      	ldr	r3, [pc, #636]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006ab0:	7d5a      	ldrb	r2, [r3, #21]
 8006ab2:	4b9c      	ldr	r3, [pc, #624]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006ab4:	775a      	strb	r2, [r3, #29]
		SD_buffer[30] = 0x3A;
 8006ab6:	4b9b      	ldr	r3, [pc, #620]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006ab8:	223a      	movs	r2, #58	@ 0x3a
 8006aba:	779a      	strb	r2, [r3, #30]
		SD_buffer[31] = hmi_rtc[23];
 8006abc:	4b9b      	ldr	r3, [pc, #620]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006abe:	7dda      	ldrb	r2, [r3, #23]
 8006ac0:	4b98      	ldr	r3, [pc, #608]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006ac2:	77da      	strb	r2, [r3, #31]
		SD_buffer[32] = hmi_rtc[24];
 8006ac4:	4b99      	ldr	r3, [pc, #612]	@ (8006d2c <HMI_Stop_W+0x1538>)
 8006ac6:	7e19      	ldrb	r1, [r3, #24]
 8006ac8:	4b96      	ldr	r3, [pc, #600]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006aca:	2220      	movs	r2, #32
 8006acc:	5499      	strb	r1, [r3, r2]
		SD_buffer[33] = 0x20;
 8006ace:	4b95      	ldr	r3, [pc, #596]	@ (8006d24 <HMI_Stop_W+0x1530>)
 8006ad0:	2221      	movs	r2, #33	@ 0x21
 8006ad2:	2120      	movs	r1, #32
 8006ad4:	5499      	strb	r1, [r3, r2]
	}

	printer_rd();
 8006ad6:	f000 ff53 	bl	8007980 <printer_rd>

	unsigned char Dis_x10_A[4] = {0};
 8006ada:	2174      	movs	r1, #116	@ 0x74
 8006adc:	187b      	adds	r3, r7, r1
 8006ade:	2200      	movs	r2, #0
 8006ae0:	601a      	str	r2, [r3, #0]
	Dis_x10 = Dis * 10;
 8006ae2:	4b93      	ldr	r3, [pc, #588]	@ (8006d30 <HMI_Stop_W+0x153c>)
 8006ae4:	681a      	ldr	r2, [r3, #0]
 8006ae6:	0013      	movs	r3, r2
 8006ae8:	009b      	lsls	r3, r3, #2
 8006aea:	189b      	adds	r3, r3, r2
 8006aec:	005b      	lsls	r3, r3, #1
 8006aee:	001a      	movs	r2, r3
 8006af0:	4b90      	ldr	r3, [pc, #576]	@ (8006d34 <HMI_Stop_W+0x1540>)
 8006af2:	601a      	str	r2, [r3, #0]
	Long_to_byte(Dis_x10, Dis_x10_A);
 8006af4:	4b8f      	ldr	r3, [pc, #572]	@ (8006d34 <HMI_Stop_W+0x1540>)
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	000c      	movs	r4, r1
 8006afa:	187a      	adds	r2, r7, r1
 8006afc:	0011      	movs	r1, r2
 8006afe:	0018      	movs	r0, r3
 8006b00:	f001 f8be 	bl	8007c80 <Long_to_byte>
	data2[0] = Dis_x10_A[0];
 8006b04:	0021      	movs	r1, r4
 8006b06:	187b      	adds	r3, r7, r1
 8006b08:	781a      	ldrb	r2, [r3, #0]
 8006b0a:	4b8b      	ldr	r3, [pc, #556]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b0c:	701a      	strb	r2, [r3, #0]
	data2[1] = Dis_x10_A[1];
 8006b0e:	187b      	adds	r3, r7, r1
 8006b10:	785a      	ldrb	r2, [r3, #1]
 8006b12:	4b89      	ldr	r3, [pc, #548]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b14:	705a      	strb	r2, [r3, #1]
	data2[2] = Dis_x10_A[2];
 8006b16:	187b      	adds	r3, r7, r1
 8006b18:	789a      	ldrb	r2, [r3, #2]
 8006b1a:	4b87      	ldr	r3, [pc, #540]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b1c:	709a      	strb	r2, [r3, #2]
	data2[3] = Dis_x10_A[3];
 8006b1e:	187b      	adds	r3, r7, r1
 8006b20:	78da      	ldrb	r2, [r3, #3]
 8006b22:	4b85      	ldr	r3, [pc, #532]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b24:	70da      	strb	r2, [r3, #3]
	//total_fare - 4 bytes
	unsigned char Final_price_x10_A[4] = {0};
 8006b26:	2170      	movs	r1, #112	@ 0x70
 8006b28:	187b      	adds	r3, r7, r1
 8006b2a:	2200      	movs	r2, #0
 8006b2c:	601a      	str	r2, [r3, #0]
	Final_price_x10 = Final_price * 10;
 8006b2e:	4b83      	ldr	r3, [pc, #524]	@ (8006d3c <HMI_Stop_W+0x1548>)
 8006b30:	681a      	ldr	r2, [r3, #0]
 8006b32:	0013      	movs	r3, r2
 8006b34:	009b      	lsls	r3, r3, #2
 8006b36:	189b      	adds	r3, r3, r2
 8006b38:	005b      	lsls	r3, r3, #1
 8006b3a:	001a      	movs	r2, r3
 8006b3c:	4b80      	ldr	r3, [pc, #512]	@ (8006d40 <HMI_Stop_W+0x154c>)
 8006b3e:	601a      	str	r2, [r3, #0]
	Long_to_byte(Final_price_x10, Final_price_x10_A);
 8006b40:	4b7f      	ldr	r3, [pc, #508]	@ (8006d40 <HMI_Stop_W+0x154c>)
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	000c      	movs	r4, r1
 8006b46:	187a      	adds	r2, r7, r1
 8006b48:	0011      	movs	r1, r2
 8006b4a:	0018      	movs	r0, r3
 8006b4c:	f001 f898 	bl	8007c80 <Long_to_byte>
	data2[4] = Final_price_x10_A[0];
 8006b50:	0021      	movs	r1, r4
 8006b52:	187b      	adds	r3, r7, r1
 8006b54:	781a      	ldrb	r2, [r3, #0]
 8006b56:	4b78      	ldr	r3, [pc, #480]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b58:	711a      	strb	r2, [r3, #4]
	data2[5] = Final_price_x10_A[1];
 8006b5a:	187b      	adds	r3, r7, r1
 8006b5c:	785a      	ldrb	r2, [r3, #1]
 8006b5e:	4b76      	ldr	r3, [pc, #472]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b60:	715a      	strb	r2, [r3, #5]
	data2[6] = Final_price_x10_A[2];
 8006b62:	187b      	adds	r3, r7, r1
 8006b64:	789a      	ldrb	r2, [r3, #2]
 8006b66:	4b74      	ldr	r3, [pc, #464]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b68:	719a      	strb	r2, [r3, #6]
	data2[7] = Final_price_x10_A[3];
 8006b6a:	187b      	adds	r3, r7, r1
 8006b6c:	78da      	ldrb	r2, [r3, #3]
 8006b6e:	4b72      	ldr	r3, [pc, #456]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b70:	71da      	strb	r2, [r3, #7]
	//end - 6 bytes
	RTC_date = PCF2129_getDate();
 8006b72:	4c74      	ldr	r4, [pc, #464]	@ (8006d44 <HMI_Stop_W+0x1550>)
 8006b74:	003b      	movs	r3, r7
 8006b76:	0018      	movs	r0, r3
 8006b78:	f005 fe6e 	bl	800c858 <PCF2129_getDate>
 8006b7c:	003b      	movs	r3, r7
 8006b7e:	0020      	movs	r0, r4
 8006b80:	0019      	movs	r1, r3
 8006b82:	2358      	movs	r3, #88	@ 0x58
 8006b84:	001a      	movs	r2, r3
 8006b86:	f012 f8e6 	bl	8018d56 <memcpy>
	year = RTC_date.date.y;
 8006b8a:	4b6e      	ldr	r3, [pc, #440]	@ (8006d44 <HMI_Stop_W+0x1550>)
 8006b8c:	224d      	movs	r2, #77	@ 0x4d
 8006b8e:	5c9b      	ldrb	r3, [r3, r2]
 8006b90:	001a      	movs	r2, r3
 8006b92:	4b6d      	ldr	r3, [pc, #436]	@ (8006d48 <HMI_Stop_W+0x1554>)
 8006b94:	801a      	strh	r2, [r3, #0]
	data2[8] = (uint8_t)(year & 0xFF);
 8006b96:	4b6c      	ldr	r3, [pc, #432]	@ (8006d48 <HMI_Stop_W+0x1554>)
 8006b98:	881b      	ldrh	r3, [r3, #0]
 8006b9a:	b2da      	uxtb	r2, r3
 8006b9c:	4b66      	ldr	r3, [pc, #408]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006b9e:	721a      	strb	r2, [r3, #8]
	month = RTC_date.date.m;
 8006ba0:	4b68      	ldr	r3, [pc, #416]	@ (8006d44 <HMI_Stop_W+0x1550>)
 8006ba2:	224e      	movs	r2, #78	@ 0x4e
 8006ba4:	5c9b      	ldrb	r3, [r3, r2]
 8006ba6:	001a      	movs	r2, r3
 8006ba8:	4b68      	ldr	r3, [pc, #416]	@ (8006d4c <HMI_Stop_W+0x1558>)
 8006baa:	801a      	strh	r2, [r3, #0]
	data2[9] = (uint8_t)(month & 0xFF);
 8006bac:	4b67      	ldr	r3, [pc, #412]	@ (8006d4c <HMI_Stop_W+0x1558>)
 8006bae:	881b      	ldrh	r3, [r3, #0]
 8006bb0:	b2da      	uxtb	r2, r3
 8006bb2:	4b61      	ldr	r3, [pc, #388]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006bb4:	725a      	strb	r2, [r3, #9]
	day = RTC_date.date.d;
 8006bb6:	4b63      	ldr	r3, [pc, #396]	@ (8006d44 <HMI_Stop_W+0x1550>)
 8006bb8:	224f      	movs	r2, #79	@ 0x4f
 8006bba:	5c9b      	ldrb	r3, [r3, r2]
 8006bbc:	001a      	movs	r2, r3
 8006bbe:	4b64      	ldr	r3, [pc, #400]	@ (8006d50 <HMI_Stop_W+0x155c>)
 8006bc0:	801a      	strh	r2, [r3, #0]
	data2[10] = (uint8_t)(day & 0xFF);
 8006bc2:	4b63      	ldr	r3, [pc, #396]	@ (8006d50 <HMI_Stop_W+0x155c>)
 8006bc4:	881b      	ldrh	r3, [r3, #0]
 8006bc6:	b2da      	uxtb	r2, r3
 8006bc8:	4b5b      	ldr	r3, [pc, #364]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006bca:	729a      	strb	r2, [r3, #10]
	hour = RTC_date.date.hh;
 8006bcc:	4b5d      	ldr	r3, [pc, #372]	@ (8006d44 <HMI_Stop_W+0x1550>)
 8006bce:	2251      	movs	r2, #81	@ 0x51
 8006bd0:	5c9b      	ldrb	r3, [r3, r2]
 8006bd2:	001a      	movs	r2, r3
 8006bd4:	4b5f      	ldr	r3, [pc, #380]	@ (8006d54 <HMI_Stop_W+0x1560>)
 8006bd6:	801a      	strh	r2, [r3, #0]
	data2[11] = (uint8_t)(hour & 0xFF);
 8006bd8:	4b5e      	ldr	r3, [pc, #376]	@ (8006d54 <HMI_Stop_W+0x1560>)
 8006bda:	881b      	ldrh	r3, [r3, #0]
 8006bdc:	b2da      	uxtb	r2, r3
 8006bde:	4b56      	ldr	r3, [pc, #344]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006be0:	72da      	strb	r2, [r3, #11]
	minute = RTC_date.date.mm;
 8006be2:	4b58      	ldr	r3, [pc, #352]	@ (8006d44 <HMI_Stop_W+0x1550>)
 8006be4:	2252      	movs	r2, #82	@ 0x52
 8006be6:	5c9b      	ldrb	r3, [r3, r2]
 8006be8:	001a      	movs	r2, r3
 8006bea:	4b5b      	ldr	r3, [pc, #364]	@ (8006d58 <HMI_Stop_W+0x1564>)
 8006bec:	801a      	strh	r2, [r3, #0]
	data2[12] = (uint8_t)(minute & 0xFF);
 8006bee:	4b5a      	ldr	r3, [pc, #360]	@ (8006d58 <HMI_Stop_W+0x1564>)
 8006bf0:	881b      	ldrh	r3, [r3, #0]
 8006bf2:	b2da      	uxtb	r2, r3
 8006bf4:	4b50      	ldr	r3, [pc, #320]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006bf6:	731a      	strb	r2, [r3, #12]
	second = RTC_date.date.ss;
 8006bf8:	4b52      	ldr	r3, [pc, #328]	@ (8006d44 <HMI_Stop_W+0x1550>)
 8006bfa:	2253      	movs	r2, #83	@ 0x53
 8006bfc:	5c9b      	ldrb	r3, [r3, r2]
 8006bfe:	001a      	movs	r2, r3
 8006c00:	4b56      	ldr	r3, [pc, #344]	@ (8006d5c <HMI_Stop_W+0x1568>)
 8006c02:	801a      	strh	r2, [r3, #0]
	data2[13] = (uint8_t)(second & 0xFF);
 8006c04:	4b55      	ldr	r3, [pc, #340]	@ (8006d5c <HMI_Stop_W+0x1568>)
 8006c06:	881b      	ldrh	r3, [r3, #0]
 8006c08:	b2da      	uxtb	r2, r3
 8006c0a:	4b4b      	ldr	r3, [pc, #300]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006c0c:	735a      	strb	r2, [r3, #13]

	//paid_km - 4 bytes
	fare_km_x100 = (int)(fare_km * 100);
 8006c0e:	4b54      	ldr	r3, [pc, #336]	@ (8006d60 <HMI_Stop_W+0x156c>)
 8006c10:	681b      	ldr	r3, [r3, #0]
 8006c12:	4954      	ldr	r1, [pc, #336]	@ (8006d64 <HMI_Stop_W+0x1570>)
 8006c14:	1c18      	adds	r0, r3, #0
 8006c16:	f7fa f907 	bl	8000e28 <__aeabi_fmul>
 8006c1a:	1c03      	adds	r3, r0, #0
 8006c1c:	1c18      	adds	r0, r3, #0
 8006c1e:	f7fa fbe5 	bl	80013ec <__aeabi_f2iz>
 8006c22:	0003      	movs	r3, r0
 8006c24:	001a      	movs	r2, r3
 8006c26:	4b50      	ldr	r3, [pc, #320]	@ (8006d68 <HMI_Stop_W+0x1574>)
 8006c28:	601a      	str	r2, [r3, #0]
	unsigned char temp[4] = {0};
 8006c2a:	216c      	movs	r1, #108	@ 0x6c
 8006c2c:	187b      	adds	r3, r7, r1
 8006c2e:	2200      	movs	r2, #0
 8006c30:	601a      	str	r2, [r3, #0]
	Long_to_byte(fare_km_x100, temp);
 8006c32:	4b4d      	ldr	r3, [pc, #308]	@ (8006d68 <HMI_Stop_W+0x1574>)
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	000c      	movs	r4, r1
 8006c38:	187a      	adds	r2, r7, r1
 8006c3a:	0011      	movs	r1, r2
 8006c3c:	0018      	movs	r0, r3
 8006c3e:	f001 f81f 	bl	8007c80 <Long_to_byte>
	data2[14] = temp[0];
 8006c42:	0021      	movs	r1, r4
 8006c44:	187b      	adds	r3, r7, r1
 8006c46:	781a      	ldrb	r2, [r3, #0]
 8006c48:	4b3b      	ldr	r3, [pc, #236]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006c4a:	739a      	strb	r2, [r3, #14]
	data2[15] = temp[1];
 8006c4c:	187b      	adds	r3, r7, r1
 8006c4e:	785a      	ldrb	r2, [r3, #1]
 8006c50:	4b39      	ldr	r3, [pc, #228]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006c52:	73da      	strb	r2, [r3, #15]
	data2[16] = temp[2];
 8006c54:	187b      	adds	r3, r7, r1
 8006c56:	789a      	ldrb	r2, [r3, #2]
 8006c58:	4b37      	ldr	r3, [pc, #220]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006c5a:	741a      	strb	r2, [r3, #16]
	data2[17] = temp[3];
 8006c5c:	187b      	adds	r3, r7, r1
 8006c5e:	78da      	ldrb	r2, [r3, #3]
 8006c60:	4b35      	ldr	r3, [pc, #212]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006c62:	745a      	strb	r2, [r3, #17]
	//wait_time - 4 bytes
	fare_min_x100 = (int)(fare_min * 100);
 8006c64:	4b41      	ldr	r3, [pc, #260]	@ (8006d6c <HMI_Stop_W+0x1578>)
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	493e      	ldr	r1, [pc, #248]	@ (8006d64 <HMI_Stop_W+0x1570>)
 8006c6a:	1c18      	adds	r0, r3, #0
 8006c6c:	f7fa f8dc 	bl	8000e28 <__aeabi_fmul>
 8006c70:	1c03      	adds	r3, r0, #0
 8006c72:	1c18      	adds	r0, r3, #0
 8006c74:	f7fa fbba 	bl	80013ec <__aeabi_f2iz>
 8006c78:	0003      	movs	r3, r0
 8006c7a:	001a      	movs	r2, r3
 8006c7c:	4b3c      	ldr	r3, [pc, #240]	@ (8006d70 <HMI_Stop_W+0x157c>)
 8006c7e:	601a      	str	r2, [r3, #0]
	unsigned char temp2[4] = {0};
 8006c80:	2168      	movs	r1, #104	@ 0x68
 8006c82:	187b      	adds	r3, r7, r1
 8006c84:	2200      	movs	r2, #0
 8006c86:	601a      	str	r2, [r3, #0]
	Long_to_byte(fare_min_x100, temp2);
 8006c88:	4b39      	ldr	r3, [pc, #228]	@ (8006d70 <HMI_Stop_W+0x157c>)
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	000c      	movs	r4, r1
 8006c8e:	187a      	adds	r2, r7, r1
 8006c90:	0011      	movs	r1, r2
 8006c92:	0018      	movs	r0, r3
 8006c94:	f000 fff4 	bl	8007c80 <Long_to_byte>
	data2[18] = temp2[0];
 8006c98:	0021      	movs	r1, r4
 8006c9a:	187b      	adds	r3, r7, r1
 8006c9c:	781a      	ldrb	r2, [r3, #0]
 8006c9e:	4b26      	ldr	r3, [pc, #152]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006ca0:	749a      	strb	r2, [r3, #18]
	data2[19] = temp2[1];
 8006ca2:	187b      	adds	r3, r7, r1
 8006ca4:	785a      	ldrb	r2, [r3, #1]
 8006ca6:	4b24      	ldr	r3, [pc, #144]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006ca8:	74da      	strb	r2, [r3, #19]
	data2[20] = temp2[2];
 8006caa:	187b      	adds	r3, r7, r1
 8006cac:	789a      	ldrb	r2, [r3, #2]
 8006cae:	4b22      	ldr	r3, [pc, #136]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006cb0:	751a      	strb	r2, [r3, #20]
	data2[21] = temp2[3];
 8006cb2:	187b      	adds	r3, r7, r1
 8006cb4:	78da      	ldrb	r2, [r3, #3]
 8006cb6:	4b20      	ldr	r3, [pc, #128]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006cb8:	755a      	strb	r2, [r3, #21]
	//extra - 4 bytes
	Addition_x10 = Addition * 10;
 8006cba:	4b2e      	ldr	r3, [pc, #184]	@ (8006d74 <HMI_Stop_W+0x1580>)
 8006cbc:	681a      	ldr	r2, [r3, #0]
 8006cbe:	0013      	movs	r3, r2
 8006cc0:	009b      	lsls	r3, r3, #2
 8006cc2:	189b      	adds	r3, r3, r2
 8006cc4:	005b      	lsls	r3, r3, #1
 8006cc6:	001a      	movs	r2, r3
 8006cc8:	4b2b      	ldr	r3, [pc, #172]	@ (8006d78 <HMI_Stop_W+0x1584>)
 8006cca:	601a      	str	r2, [r3, #0]
	unsigned char temp3[4] = {0};
 8006ccc:	2164      	movs	r1, #100	@ 0x64
 8006cce:	187b      	adds	r3, r7, r1
 8006cd0:	2200      	movs	r2, #0
 8006cd2:	601a      	str	r2, [r3, #0]
	Long_to_byte(Addition_x10, temp3);
 8006cd4:	4b28      	ldr	r3, [pc, #160]	@ (8006d78 <HMI_Stop_W+0x1584>)
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	000c      	movs	r4, r1
 8006cda:	187a      	adds	r2, r7, r1
 8006cdc:	0011      	movs	r1, r2
 8006cde:	0018      	movs	r0, r3
 8006ce0:	f000 ffce 	bl	8007c80 <Long_to_byte>
	data2[22] = temp3[0];
 8006ce4:	0021      	movs	r1, r4
 8006ce6:	187b      	adds	r3, r7, r1
 8006ce8:	781a      	ldrb	r2, [r3, #0]
 8006cea:	4b13      	ldr	r3, [pc, #76]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006cec:	759a      	strb	r2, [r3, #22]
	data2[23] = temp3[1];
 8006cee:	187b      	adds	r3, r7, r1
 8006cf0:	785a      	ldrb	r2, [r3, #1]
 8006cf2:	4b11      	ldr	r3, [pc, #68]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006cf4:	75da      	strb	r2, [r3, #23]
	data2[24] = temp3[2];
 8006cf6:	187b      	adds	r3, r7, r1
 8006cf8:	789a      	ldrb	r2, [r3, #2]
 8006cfa:	4b0f      	ldr	r3, [pc, #60]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006cfc:	761a      	strb	r2, [r3, #24]
	data2[25] = temp3[3];
 8006cfe:	187b      	adds	r3, r7, r1
 8006d00:	78da      	ldrb	r2, [r3, #3]
 8006d02:	4b0d      	ldr	r3, [pc, #52]	@ (8006d38 <HMI_Stop_W+0x1544>)
 8006d04:	765a      	strb	r2, [r3, #25]
	//reserved - 4 bytes
	Flag_Control_Down();
 8006d06:	f003 fec7 	bl	800aa98 <Flag_Control_Down>
	flag_sp = 0;
 8006d0a:	4b1c      	ldr	r3, [pc, #112]	@ (8006d7c <HMI_Stop_W+0x1588>)
 8006d0c:	2200      	movs	r2, #0
 8006d0e:	701a      	strb	r2, [r3, #0]
	cnt = 0;
 8006d10:	4b1b      	ldr	r3, [pc, #108]	@ (8006d80 <HMI_Stop_W+0x158c>)
 8006d12:	2200      	movs	r2, #0
 8006d14:	701a      	strb	r2, [r3, #0]
}
 8006d16:	46c0      	nop			@ (mov r8, r8)
 8006d18:	46bd      	mov	sp, r7
 8006d1a:	b021      	add	sp, #132	@ 0x84
 8006d1c:	bd90      	pop	{r4, r7, pc}
 8006d1e:	46c0      	nop			@ (mov r8, r8)
 8006d20:	20000eac 	.word	0x20000eac
 8006d24:	2000333c 	.word	0x2000333c
 8006d28:	20000e58 	.word	0x20000e58
 8006d2c:	2000007c 	.word	0x2000007c
 8006d30:	20000a60 	.word	0x20000a60
 8006d34:	20000b28 	.word	0x20000b28
 8006d38:	20000b48 	.word	0x20000b48
 8006d3c:	20000a4c 	.word	0x20000a4c
 8006d40:	20000b2c 	.word	0x20000b2c
 8006d44:	20000c20 	.word	0x20000c20
 8006d48:	20000c78 	.word	0x20000c78
 8006d4c:	20000c7a 	.word	0x20000c7a
 8006d50:	20000c7c 	.word	0x20000c7c
 8006d54:	20000c7e 	.word	0x20000c7e
 8006d58:	20000c80 	.word	0x20000c80
 8006d5c:	20000c82 	.word	0x20000c82
 8006d60:	20000d2c 	.word	0x20000d2c
 8006d64:	42c80000 	.word	0x42c80000
 8006d68:	20000b30 	.word	0x20000b30
 8006d6c:	20000d30 	.word	0x20000d30
 8006d70:	20000b34 	.word	0x20000b34
 8006d74:	20000a6c 	.word	0x20000a6c
 8006d78:	20000b38 	.word	0x20000b38
 8006d7c:	20000485 	.word	0x20000485
 8006d80:	20000cf4 	.word	0x20000cf4

08006d84 <HMI_Vacant_W>:

void HMI_Vacant_W(void)
{
 8006d84:	b5b0      	push	{r4, r5, r7, lr}
 8006d86:	b082      	sub	sp, #8
 8006d88:	af00      	add	r7, sp, #0
	uint8_t temp_array[4];

	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Hired_Off, 8, 0x10);
 8006d8a:	49ee      	ldr	r1, [pc, #952]	@ (8007144 <HMI_Vacant_W+0x3c0>)
 8006d8c:	48ee      	ldr	r0, [pc, #952]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 8006d8e:	2310      	movs	r3, #16
 8006d90:	2208      	movs	r2, #8
 8006d92:	f00c f9fd 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8006d96:	2001      	movs	r0, #1
 8006d98:	f006 ff74 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Stop_Off, 8, 0x10);
 8006d9c:	49eb      	ldr	r1, [pc, #940]	@ (800714c <HMI_Vacant_W+0x3c8>)
 8006d9e:	48ea      	ldr	r0, [pc, #936]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 8006da0:	2310      	movs	r3, #16
 8006da2:	2208      	movs	r2, #8
 8006da4:	f00c f9f4 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8006da8:	2001      	movs	r0, #1
 8006daa:	f006 ff6b 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) LED_Vacant_On, 8, 0x10);
 8006dae:	49e8      	ldr	r1, [pc, #928]	@ (8007150 <HMI_Vacant_W+0x3cc>)
 8006db0:	48e5      	ldr	r0, [pc, #916]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 8006db2:	2310      	movs	r3, #16
 8006db4:	2208      	movs	r2, #8
 8006db6:	f00c f9eb 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 8006dba:	2001      	movs	r0, #1
 8006dbc:	f006 ff62 	bl	800dc84 <HAL_Delay>

	//record eeprom total
	tkm_d += Dis;
 8006dc0:	4be4      	ldr	r3, [pc, #912]	@ (8007154 <HMI_Vacant_W+0x3d0>)
 8006dc2:	681a      	ldr	r2, [r3, #0]
 8006dc4:	4be4      	ldr	r3, [pc, #912]	@ (8007158 <HMI_Vacant_W+0x3d4>)
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	18d2      	adds	r2, r2, r3
 8006dca:	4be2      	ldr	r3, [pc, #904]	@ (8007154 <HMI_Vacant_W+0x3d0>)
 8006dcc:	601a      	str	r2, [r3, #0]
	pkm_d += fare_km_x;
 8006dce:	4be3      	ldr	r3, [pc, #908]	@ (800715c <HMI_Vacant_W+0x3d8>)
 8006dd0:	681a      	ldr	r2, [r3, #0]
 8006dd2:	4be3      	ldr	r3, [pc, #908]	@ (8007160 <HMI_Vacant_W+0x3dc>)
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	18d2      	adds	r2, r2, r3
 8006dd8:	4be0      	ldr	r3, [pc, #896]	@ (800715c <HMI_Vacant_W+0x3d8>)
 8006dda:	601a      	str	r2, [r3, #0]
	tfare_d += Final_price;
 8006ddc:	4be1      	ldr	r3, [pc, #900]	@ (8007164 <HMI_Vacant_W+0x3e0>)
 8006dde:	681a      	ldr	r2, [r3, #0]
 8006de0:	4be1      	ldr	r3, [pc, #900]	@ (8007168 <HMI_Vacant_W+0x3e4>)
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	18d2      	adds	r2, r2, r3
 8006de6:	4bdf      	ldr	r3, [pc, #892]	@ (8007164 <HMI_Vacant_W+0x3e0>)
 8006de8:	601a      	str	r2, [r3, #0]
	tsub_d += Addition;
 8006dea:	4be0      	ldr	r3, [pc, #896]	@ (800716c <HMI_Vacant_W+0x3e8>)
 8006dec:	681a      	ldr	r2, [r3, #0]
 8006dee:	4be0      	ldr	r3, [pc, #896]	@ (8007170 <HMI_Vacant_W+0x3ec>)
 8006df0:	681b      	ldr	r3, [r3, #0]
 8006df2:	18d2      	adds	r2, r2, r3
 8006df4:	4bdd      	ldr	r3, [pc, #884]	@ (800716c <HMI_Vacant_W+0x3e8>)
 8006df6:	601a      	str	r2, [r3, #0]
	cfare_d += Final_price;
 8006df8:	4bde      	ldr	r3, [pc, #888]	@ (8007174 <HMI_Vacant_W+0x3f0>)
 8006dfa:	681a      	ldr	r2, [r3, #0]
 8006dfc:	4bda      	ldr	r3, [pc, #872]	@ (8007168 <HMI_Vacant_W+0x3e4>)
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	18d2      	adds	r2, r2, r3
 8006e02:	4bdc      	ldr	r3, [pc, #880]	@ (8007174 <HMI_Vacant_W+0x3f0>)
 8006e04:	601a      	str	r2, [r3, #0]
	csub_d += Addition;
 8006e06:	4bdc      	ldr	r3, [pc, #880]	@ (8007178 <HMI_Vacant_W+0x3f4>)
 8006e08:	681a      	ldr	r2, [r3, #0]
 8006e0a:	4bd9      	ldr	r3, [pc, #868]	@ (8007170 <HMI_Vacant_W+0x3ec>)
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	18d2      	adds	r2, r2, r3
 8006e10:	4bd9      	ldr	r3, [pc, #868]	@ (8007178 <HMI_Vacant_W+0x3f4>)
 8006e12:	601a      	str	r2, [r3, #0]
	tflag_d += flag_count;
 8006e14:	4bd9      	ldr	r3, [pc, #868]	@ (800717c <HMI_Vacant_W+0x3f8>)
 8006e16:	781b      	ldrb	r3, [r3, #0]
 8006e18:	001a      	movs	r2, r3
 8006e1a:	4bd9      	ldr	r3, [pc, #868]	@ (8007180 <HMI_Vacant_W+0x3fc>)
 8006e1c:	681b      	ldr	r3, [r3, #0]
 8006e1e:	18d2      	adds	r2, r2, r3
 8006e20:	4bd7      	ldr	r3, [pc, #860]	@ (8007180 <HMI_Vacant_W+0x3fc>)
 8006e22:	601a      	str	r2, [r3, #0]
	cflag_d += flag_count;
 8006e24:	4bd5      	ldr	r3, [pc, #852]	@ (800717c <HMI_Vacant_W+0x3f8>)
 8006e26:	781b      	ldrb	r3, [r3, #0]
 8006e28:	001a      	movs	r2, r3
 8006e2a:	4bd6      	ldr	r3, [pc, #856]	@ (8007184 <HMI_Vacant_W+0x400>)
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	18d2      	adds	r2, r2, r3
 8006e30:	4bd4      	ldr	r3, [pc, #848]	@ (8007184 <HMI_Vacant_W+0x400>)
 8006e32:	601a      	str	r2, [r3, #0]
	tpulse_d += change_count;
 8006e34:	4bd4      	ldr	r3, [pc, #848]	@ (8007188 <HMI_Vacant_W+0x404>)
 8006e36:	781b      	ldrb	r3, [r3, #0]
 8006e38:	001a      	movs	r2, r3
 8006e3a:	4bd4      	ldr	r3, [pc, #848]	@ (800718c <HMI_Vacant_W+0x408>)
 8006e3c:	681b      	ldr	r3, [r3, #0]
 8006e3e:	18d2      	adds	r2, r2, r3
 8006e40:	4bd2      	ldr	r3, [pc, #840]	@ (800718c <HMI_Vacant_W+0x408>)
 8006e42:	601a      	str	r2, [r3, #0]
	ttime_d += ((ttime_counter / 60.0)* 1000) / 10; //changed
 8006e44:	4bd2      	ldr	r3, [pc, #840]	@ (8007190 <HMI_Vacant_W+0x40c>)
 8006e46:	681b      	ldr	r3, [r3, #0]
 8006e48:	0018      	movs	r0, r3
 8006e4a:	f7fc f9f3 	bl	8003234 <__aeabi_ui2d>
 8006e4e:	0004      	movs	r4, r0
 8006e50:	000d      	movs	r5, r1
 8006e52:	4bd0      	ldr	r3, [pc, #832]	@ (8007194 <HMI_Vacant_W+0x410>)
 8006e54:	881b      	ldrh	r3, [r3, #0]
 8006e56:	0018      	movs	r0, r3
 8006e58:	f7fc f9be 	bl	80031d8 <__aeabi_i2d>
 8006e5c:	2200      	movs	r2, #0
 8006e5e:	4bce      	ldr	r3, [pc, #824]	@ (8007198 <HMI_Vacant_W+0x414>)
 8006e60:	f7fa fed6 	bl	8001c10 <__aeabi_ddiv>
 8006e64:	0002      	movs	r2, r0
 8006e66:	000b      	movs	r3, r1
 8006e68:	0010      	movs	r0, r2
 8006e6a:	0019      	movs	r1, r3
 8006e6c:	2200      	movs	r2, #0
 8006e6e:	4bcb      	ldr	r3, [pc, #812]	@ (800719c <HMI_Vacant_W+0x418>)
 8006e70:	f7fb fb12 	bl	8002498 <__aeabi_dmul>
 8006e74:	0002      	movs	r2, r0
 8006e76:	000b      	movs	r3, r1
 8006e78:	0010      	movs	r0, r2
 8006e7a:	0019      	movs	r1, r3
 8006e7c:	2200      	movs	r2, #0
 8006e7e:	4bc8      	ldr	r3, [pc, #800]	@ (80071a0 <HMI_Vacant_W+0x41c>)
 8006e80:	f7fa fec6 	bl	8001c10 <__aeabi_ddiv>
 8006e84:	0002      	movs	r2, r0
 8006e86:	000b      	movs	r3, r1
 8006e88:	0020      	movs	r0, r4
 8006e8a:	0029      	movs	r1, r5
 8006e8c:	f7fa fb5c 	bl	8001548 <__aeabi_dadd>
 8006e90:	0002      	movs	r2, r0
 8006e92:	000b      	movs	r3, r1
 8006e94:	0010      	movs	r0, r2
 8006e96:	0019      	movs	r1, r3
 8006e98:	f7f9 fb6c 	bl	8000574 <__aeabi_d2uiz>
 8006e9c:	0002      	movs	r2, r0
 8006e9e:	4bbc      	ldr	r3, [pc, #752]	@ (8007190 <HMI_Vacant_W+0x40c>)
 8006ea0:	601a      	str	r2, [r3, #0]

	Dec2ASC(tkm_d, tkm);
 8006ea2:	4bac      	ldr	r3, [pc, #688]	@ (8007154 <HMI_Vacant_W+0x3d0>)
 8006ea4:	681b      	ldr	r3, [r3, #0]
 8006ea6:	4abf      	ldr	r2, [pc, #764]	@ (80071a4 <HMI_Vacant_W+0x420>)
 8006ea8:	0011      	movs	r1, r2
 8006eaa:	0018      	movs	r0, r3
 8006eac:	f003 fee4 	bl	800ac78 <Dec2ASC>
	Dec2ASC(pkm_d, pkm);
 8006eb0:	4baa      	ldr	r3, [pc, #680]	@ (800715c <HMI_Vacant_W+0x3d8>)
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	4abc      	ldr	r2, [pc, #752]	@ (80071a8 <HMI_Vacant_W+0x424>)
 8006eb6:	0011      	movs	r1, r2
 8006eb8:	0018      	movs	r0, r3
 8006eba:	f003 fedd 	bl	800ac78 <Dec2ASC>
	Dec2ASC(tfare_d, tfare);
 8006ebe:	4ba9      	ldr	r3, [pc, #676]	@ (8007164 <HMI_Vacant_W+0x3e0>)
 8006ec0:	681b      	ldr	r3, [r3, #0]
 8006ec2:	4aba      	ldr	r2, [pc, #744]	@ (80071ac <HMI_Vacant_W+0x428>)
 8006ec4:	0011      	movs	r1, r2
 8006ec6:	0018      	movs	r0, r3
 8006ec8:	f003 fed6 	bl	800ac78 <Dec2ASC>
	Dec2ASC(tsub_d, tsub);
 8006ecc:	4ba7      	ldr	r3, [pc, #668]	@ (800716c <HMI_Vacant_W+0x3e8>)
 8006ece:	681b      	ldr	r3, [r3, #0]
 8006ed0:	4ab7      	ldr	r2, [pc, #732]	@ (80071b0 <HMI_Vacant_W+0x42c>)
 8006ed2:	0011      	movs	r1, r2
 8006ed4:	0018      	movs	r0, r3
 8006ed6:	f003 fecf 	bl	800ac78 <Dec2ASC>
	Dec2ASC(tflag_d, tflag);
 8006eda:	4ba9      	ldr	r3, [pc, #676]	@ (8007180 <HMI_Vacant_W+0x3fc>)
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	4ab5      	ldr	r2, [pc, #724]	@ (80071b4 <HMI_Vacant_W+0x430>)
 8006ee0:	0011      	movs	r1, r2
 8006ee2:	0018      	movs	r0, r3
 8006ee4:	f003 fec8 	bl	800ac78 <Dec2ASC>
	Dec2ASC(cflag_d, cflag);
 8006ee8:	4ba6      	ldr	r3, [pc, #664]	@ (8007184 <HMI_Vacant_W+0x400>)
 8006eea:	681b      	ldr	r3, [r3, #0]
 8006eec:	4ab2      	ldr	r2, [pc, #712]	@ (80071b8 <HMI_Vacant_W+0x434>)
 8006eee:	0011      	movs	r1, r2
 8006ef0:	0018      	movs	r0, r3
 8006ef2:	f003 fec1 	bl	800ac78 <Dec2ASC>
	Dec2ASC(cfare_d, cfare);
 8006ef6:	4b9f      	ldr	r3, [pc, #636]	@ (8007174 <HMI_Vacant_W+0x3f0>)
 8006ef8:	681b      	ldr	r3, [r3, #0]
 8006efa:	4ab0      	ldr	r2, [pc, #704]	@ (80071bc <HMI_Vacant_W+0x438>)
 8006efc:	0011      	movs	r1, r2
 8006efe:	0018      	movs	r0, r3
 8006f00:	f003 feba 	bl	800ac78 <Dec2ASC>
	Dec2ASC(csub_d, csub);
 8006f04:	4b9c      	ldr	r3, [pc, #624]	@ (8007178 <HMI_Vacant_W+0x3f4>)
 8006f06:	681b      	ldr	r3, [r3, #0]
 8006f08:	4aad      	ldr	r2, [pc, #692]	@ (80071c0 <HMI_Vacant_W+0x43c>)
 8006f0a:	0011      	movs	r1, r2
 8006f0c:	0018      	movs	r0, r3
 8006f0e:	f003 feb3 	bl	800ac78 <Dec2ASC>
	Dec2ASC(tpulse_d, tpulse);
 8006f12:	4b9e      	ldr	r3, [pc, #632]	@ (800718c <HMI_Vacant_W+0x408>)
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	4aab      	ldr	r2, [pc, #684]	@ (80071c4 <HMI_Vacant_W+0x440>)
 8006f18:	0011      	movs	r1, r2
 8006f1a:	0018      	movs	r0, r3
 8006f1c:	f003 feac 	bl	800ac78 <Dec2ASC>
	Dec2ASC(ttime_d, ttime);
 8006f20:	4b9b      	ldr	r3, [pc, #620]	@ (8007190 <HMI_Vacant_W+0x40c>)
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	4aa8      	ldr	r2, [pc, #672]	@ (80071c8 <HMI_Vacant_W+0x444>)
 8006f26:	0011      	movs	r1, r2
 8006f28:	0018      	movs	r0, r3
 8006f2a:	f003 fea5 	bl	800ac78 <Dec2ASC>
//	Dis = 0;
//	Distance = 0;
//	distance = 0;

	//Flag_Display check:
	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Clear, 7, 0x0E);
 8006f2e:	49a7      	ldr	r1, [pc, #668]	@ (80071cc <HMI_Vacant_W+0x448>)
 8006f30:	4885      	ldr	r0, [pc, #532]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 8006f32:	230e      	movs	r3, #14
 8006f34:	2207      	movs	r2, #7
 8006f36:	f00c f92b 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8006f3a:	2002      	movs	r0, #2
 8006f3c:	f006 fea2 	bl	800dc84 <HAL_Delay>
	if(RxFlag)
 8006f40:	4ba3      	ldr	r3, [pc, #652]	@ (80071d0 <HMI_Vacant_W+0x44c>)
 8006f42:	781b      	ldrb	r3, [r3, #0]
 8006f44:	2b00      	cmp	r3, #0
 8006f46:	d02b      	beq.n	8006fa0 <HMI_Vacant_W+0x21c>
	{
		RxFlag = FALSE;
 8006f48:	4ba1      	ldr	r3, [pc, #644]	@ (80071d0 <HMI_Vacant_W+0x44c>)
 8006f4a:	2200      	movs	r2, #0
 8006f4c:	701a      	strb	r2, [r3, #0]
		if (RxBuff[8] == 0x01 && Flag_Display == TRUE)
 8006f4e:	4ba1      	ldr	r3, [pc, #644]	@ (80071d4 <HMI_Vacant_W+0x450>)
 8006f50:	7a1b      	ldrb	r3, [r3, #8]
 8006f52:	2b01      	cmp	r3, #1
 8006f54:	d110      	bne.n	8006f78 <HMI_Vacant_W+0x1f4>
 8006f56:	4ba0      	ldr	r3, [pc, #640]	@ (80071d8 <HMI_Vacant_W+0x454>)
 8006f58:	781b      	ldrb	r3, [r3, #0]
 8006f5a:	2b01      	cmp	r3, #1
 8006f5c:	d10c      	bne.n	8006f78 <HMI_Vacant_W+0x1f4>
		{
			display_wait = 0;
 8006f5e:	4b9f      	ldr	r3, [pc, #636]	@ (80071dc <HMI_Vacant_W+0x458>)
 8006f60:	2200      	movs	r2, #0
 8006f62:	701a      	strb	r2, [r3, #0]
			Flag_Display = FALSE;
 8006f64:	4b9c      	ldr	r3, [pc, #624]	@ (80071d8 <HMI_Vacant_W+0x454>)
 8006f66:	2200      	movs	r2, #0
 8006f68:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1,Clear_clear,8,0x0E);
 8006f6a:	499d      	ldr	r1, [pc, #628]	@ (80071e0 <HMI_Vacant_W+0x45c>)
 8006f6c:	4876      	ldr	r0, [pc, #472]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 8006f6e:	230e      	movs	r3, #14
 8006f70:	2208      	movs	r2, #8
 8006f72:	f00c f90d 	bl	8013190 <HAL_UART_Transmit>
 8006f76:	e016      	b.n	8006fa6 <HMI_Vacant_W+0x222>
		}
		else if(RxBuff[8] == 0x01)
 8006f78:	4b96      	ldr	r3, [pc, #600]	@ (80071d4 <HMI_Vacant_W+0x450>)
 8006f7a:	7a1b      	ldrb	r3, [r3, #8]
 8006f7c:	2b01      	cmp	r3, #1
 8006f7e:	d112      	bne.n	8006fa6 <HMI_Vacant_W+0x222>
		{
			display_wait++;
 8006f80:	4b96      	ldr	r3, [pc, #600]	@ (80071dc <HMI_Vacant_W+0x458>)
 8006f82:	781b      	ldrb	r3, [r3, #0]
 8006f84:	3301      	adds	r3, #1
 8006f86:	b2da      	uxtb	r2, r3
 8006f88:	4b94      	ldr	r3, [pc, #592]	@ (80071dc <HMI_Vacant_W+0x458>)
 8006f8a:	701a      	strb	r2, [r3, #0]
			Flag_Display = TRUE;
 8006f8c:	4b92      	ldr	r3, [pc, #584]	@ (80071d8 <HMI_Vacant_W+0x454>)
 8006f8e:	2201      	movs	r2, #1
 8006f90:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(&huart1,Clear_clear,8,0x0E);
 8006f92:	4993      	ldr	r1, [pc, #588]	@ (80071e0 <HMI_Vacant_W+0x45c>)
 8006f94:	486c      	ldr	r0, [pc, #432]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 8006f96:	230e      	movs	r3, #14
 8006f98:	2208      	movs	r2, #8
 8006f9a:	f00c f8f9 	bl	8013190 <HAL_UART_Transmit>
 8006f9e:	e002      	b.n	8006fa6 <HMI_Vacant_W+0x222>
		}
	}
	else
	{
		Flag_Display = FALSE;
 8006fa0:	4b8d      	ldr	r3, [pc, #564]	@ (80071d8 <HMI_Vacant_W+0x454>)
 8006fa2:	2200      	movs	r2, #0
 8006fa4:	701a      	strb	r2, [r3, #0]
	}

	if(Flag_Display)
 8006fa6:	4b8c      	ldr	r3, [pc, #560]	@ (80071d8 <HMI_Vacant_W+0x454>)
 8006fa8:	781b      	ldrb	r3, [r3, #0]
 8006faa:	2b00      	cmp	r3, #0
 8006fac:	d047      	beq.n	800703e <HMI_Vacant_W+0x2ba>
	{
		//change
//		Long_to_byte(Last_Final_price_x10,temp_array);
		Long_to_byte(Last_fare_d_x100, temp_array);
 8006fae:	4b8d      	ldr	r3, [pc, #564]	@ (80071e4 <HMI_Vacant_W+0x460>)
 8006fb0:	681b      	ldr	r3, [r3, #0]
 8006fb2:	003a      	movs	r2, r7
 8006fb4:	0011      	movs	r1, r2
 8006fb6:	0018      	movs	r0, r3
 8006fb8:	f000 fe62 	bl	8007c80 <Long_to_byte>
		HMI_Command(Fee,temp_array,10);
 8006fbc:	0039      	movs	r1, r7
 8006fbe:	4b8a      	ldr	r3, [pc, #552]	@ (80071e8 <HMI_Vacant_W+0x464>)
 8006fc0:	220a      	movs	r2, #10
 8006fc2:	0018      	movs	r0, r3
 8006fc4:	f000 fe7b 	bl	8007cbe <HMI_Command>

		Long_to_byte(ex_Addition,temp_array);
 8006fc8:	4b88      	ldr	r3, [pc, #544]	@ (80071ec <HMI_Vacant_W+0x468>)
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	003a      	movs	r2, r7
 8006fce:	0011      	movs	r1, r2
 8006fd0:	0018      	movs	r0, r3
 8006fd2:	f000 fe55 	bl	8007c80 <Long_to_byte>
		HMI_Command(Add_Charge,temp_array,10);
 8006fd6:	0039      	movs	r1, r7
 8006fd8:	4b85      	ldr	r3, [pc, #532]	@ (80071f0 <HMI_Vacant_W+0x46c>)
 8006fda:	220a      	movs	r2, #10
 8006fdc:	0018      	movs	r0, r3
 8006fde:	f000 fe6e 	bl	8007cbe <HMI_Command>

		Long_to_byte(Last_Dis,temp_array);
 8006fe2:	4b84      	ldr	r3, [pc, #528]	@ (80071f4 <HMI_Vacant_W+0x470>)
 8006fe4:	681b      	ldr	r3, [r3, #0]
 8006fe6:	003a      	movs	r2, r7
 8006fe8:	0011      	movs	r1, r2
 8006fea:	0018      	movs	r0, r3
 8006fec:	f000 fe48 	bl	8007c80 <Long_to_byte>
		HMI_Command(Dis_A,temp_array,10);
 8006ff0:	0039      	movs	r1, r7
 8006ff2:	4b81      	ldr	r3, [pc, #516]	@ (80071f8 <HMI_Vacant_W+0x474>)
 8006ff4:	220a      	movs	r2, #10
 8006ff6:	0018      	movs	r0, r3
 8006ff8:	f000 fe61 	bl	8007cbe <HMI_Command>

		HAL_UART_Transmit(&huart1, Dur_HMS, 14, 0x1C);
 8006ffc:	497f      	ldr	r1, [pc, #508]	@ (80071fc <HMI_Vacant_W+0x478>)
 8006ffe:	4852      	ldr	r0, [pc, #328]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 8007000:	231c      	movs	r3, #28
 8007002:	220e      	movs	r2, #14
 8007004:	f00c f8c4 	bl	8013190 <HAL_UART_Transmit>

		printer_rd();
 8007008:	f000 fcba 	bl	8007980 <printer_rd>
		check_rd();
 800700c:	f000 fd94 	bl	8007b38 <check_rd>
		clear_rd();
 8007010:	f000 fdb6 	bl	8007b80 <clear_rd>

		if(display_wait != 0)
 8007014:	4b71      	ldr	r3, [pc, #452]	@ (80071dc <HMI_Vacant_W+0x458>)
 8007016:	781b      	ldrb	r3, [r3, #0]
 8007018:	2b00      	cmp	r3, #0
 800701a:	d049      	beq.n	80070b0 <HMI_Vacant_W+0x32c>
		{
			display_wait++;
 800701c:	4b6f      	ldr	r3, [pc, #444]	@ (80071dc <HMI_Vacant_W+0x458>)
 800701e:	781b      	ldrb	r3, [r3, #0]
 8007020:	3301      	adds	r3, #1
 8007022:	b2da      	uxtb	r2, r3
 8007024:	4b6d      	ldr	r3, [pc, #436]	@ (80071dc <HMI_Vacant_W+0x458>)
 8007026:	701a      	strb	r2, [r3, #0]
			//display 5s
			if(display_wait >= 6)
 8007028:	4b6c      	ldr	r3, [pc, #432]	@ (80071dc <HMI_Vacant_W+0x458>)
 800702a:	781b      	ldrb	r3, [r3, #0]
 800702c:	2b05      	cmp	r3, #5
 800702e:	d93f      	bls.n	80070b0 <HMI_Vacant_W+0x32c>
			{
				Flag_Display = FALSE;
 8007030:	4b69      	ldr	r3, [pc, #420]	@ (80071d8 <HMI_Vacant_W+0x454>)
 8007032:	2200      	movs	r2, #0
 8007034:	701a      	strb	r2, [r3, #0]
				display_wait = 0;
 8007036:	4b69      	ldr	r3, [pc, #420]	@ (80071dc <HMI_Vacant_W+0x458>)
 8007038:	2200      	movs	r2, #0
 800703a:	701a      	strb	r2, [r3, #0]
 800703c:	e038      	b.n	80070b0 <HMI_Vacant_W+0x32c>
		}
	}
	else
	{
//		Long_to_byte(Final_price_x10,temp_array);
		Long_to_byte(fare_d_x100, temp_array);
 800703e:	4b70      	ldr	r3, [pc, #448]	@ (8007200 <HMI_Vacant_W+0x47c>)
 8007040:	681b      	ldr	r3, [r3, #0]
 8007042:	003a      	movs	r2, r7
 8007044:	0011      	movs	r1, r2
 8007046:	0018      	movs	r0, r3
 8007048:	f000 fe1a 	bl	8007c80 <Long_to_byte>
		HMI_Command(Fee,temp_array,10);
 800704c:	0039      	movs	r1, r7
 800704e:	4b66      	ldr	r3, [pc, #408]	@ (80071e8 <HMI_Vacant_W+0x464>)
 8007050:	220a      	movs	r2, #10
 8007052:	0018      	movs	r0, r3
 8007054:	f000 fe33 	bl	8007cbe <HMI_Command>

		Long_to_byte(Addition,temp_array);
 8007058:	4b45      	ldr	r3, [pc, #276]	@ (8007170 <HMI_Vacant_W+0x3ec>)
 800705a:	681b      	ldr	r3, [r3, #0]
 800705c:	003a      	movs	r2, r7
 800705e:	0011      	movs	r1, r2
 8007060:	0018      	movs	r0, r3
 8007062:	f000 fe0d 	bl	8007c80 <Long_to_byte>
		HMI_Command(Add_Charge,temp_array,10);
 8007066:	0039      	movs	r1, r7
 8007068:	4b61      	ldr	r3, [pc, #388]	@ (80071f0 <HMI_Vacant_W+0x46c>)
 800706a:	220a      	movs	r2, #10
 800706c:	0018      	movs	r0, r3
 800706e:	f000 fe26 	bl	8007cbe <HMI_Command>
//		last_counter = 0; //pull to start of the function as T-box has no signal
//		Dis = 0;
//		Distance = 0;
//		distance = 0;

		Long_to_byte(Dis,temp_array);
 8007072:	4b39      	ldr	r3, [pc, #228]	@ (8007158 <HMI_Vacant_W+0x3d4>)
 8007074:	681b      	ldr	r3, [r3, #0]
 8007076:	003a      	movs	r2, r7
 8007078:	0011      	movs	r1, r2
 800707a:	0018      	movs	r0, r3
 800707c:	f000 fe00 	bl	8007c80 <Long_to_byte>
		HMI_Command(Dis_A,temp_array,10);
 8007080:	0039      	movs	r1, r7
 8007082:	4b5d      	ldr	r3, [pc, #372]	@ (80071f8 <HMI_Vacant_W+0x474>)
 8007084:	220a      	movs	r2, #10
 8007086:	0018      	movs	r0, r3
 8007088:	f000 fe19 	bl	8007cbe <HMI_Command>

		sec = 0;
 800708c:	4b5d      	ldr	r3, [pc, #372]	@ (8007204 <HMI_Vacant_W+0x480>)
 800708e:	2200      	movs	r2, #0
 8007090:	701a      	strb	r2, [r3, #0]
		min = 0;
 8007092:	4b5d      	ldr	r3, [pc, #372]	@ (8007208 <HMI_Vacant_W+0x484>)
 8007094:	2200      	movs	r2, #0
 8007096:	701a      	strb	r2, [r3, #0]
		hou = 0;
 8007098:	4b5c      	ldr	r3, [pc, #368]	@ (800720c <HMI_Vacant_W+0x488>)
 800709a:	2200      	movs	r2, #0
 800709c:	701a      	strb	r2, [r3, #0]
		HAL_UART_Transmit(&huart1, (uint8_t *) Dur_HMS_clear, 14, 0x1C);
 800709e:	495c      	ldr	r1, [pc, #368]	@ (8007210 <HMI_Vacant_W+0x48c>)
 80070a0:	4829      	ldr	r0, [pc, #164]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 80070a2:	231c      	movs	r3, #28
 80070a4:	220e      	movs	r2, #14
 80070a6:	f00c f873 	bl	8013190 <HAL_UART_Transmit>

		HAL_Delay(2);
 80070aa:	2002      	movs	r0, #2
 80070ac:	f006 fdea 	bl	800dc84 <HAL_Delay>
	}

	HAL_UART_Transmit(&huart1, (uint8_t *) Plus10_clear, 8, 0x10);
 80070b0:	4958      	ldr	r1, [pc, #352]	@ (8007214 <HMI_Vacant_W+0x490>)
 80070b2:	4825      	ldr	r0, [pc, #148]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 80070b4:	2310      	movs	r3, #16
 80070b6:	2208      	movs	r2, #8
 80070b8:	f00c f86a 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 80070bc:	2001      	movs	r0, #1
 80070be:	f006 fde1 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) Plus1_clear, 8, 0x10);
 80070c2:	4955      	ldr	r1, [pc, #340]	@ (8007218 <HMI_Vacant_W+0x494>)
 80070c4:	4820      	ldr	r0, [pc, #128]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 80070c6:	2310      	movs	r3, #16
 80070c8:	2208      	movs	r2, #8
 80070ca:	f00c f861 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(1);
 80070ce:	2001      	movs	r0, #1
 80070d0:	f006 fdd8 	bl	800dc84 <HAL_Delay>
	HAL_UART_Transmit(&huart1, (uint8_t *) Print_clear, 8, 0x10);
 80070d4:	4951      	ldr	r1, [pc, #324]	@ (800721c <HMI_Vacant_W+0x498>)
 80070d6:	481c      	ldr	r0, [pc, #112]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 80070d8:	2310      	movs	r3, #16
 80070da:	2208      	movs	r2, #8
 80070dc:	f00c f858 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart1,CLR_extra_btn,8,0x0E);
 80070e0:	494f      	ldr	r1, [pc, #316]	@ (8007220 <HMI_Vacant_W+0x49c>)
 80070e2:	4819      	ldr	r0, [pc, #100]	@ (8007148 <HMI_Vacant_W+0x3c4>)
 80070e4:	230e      	movs	r3, #14
 80070e6:	2208      	movs	r2, #8
 80070e8:	f00c f852 	bl	8013190 <HAL_UART_Transmit>

	IC_Val1 = 0;
 80070ec:	4b4d      	ldr	r3, [pc, #308]	@ (8007224 <HMI_Vacant_W+0x4a0>)
 80070ee:	2200      	movs	r2, #0
 80070f0:	601a      	str	r2, [r3, #0]
	IC_Val2 = 0;
 80070f2:	4b4d      	ldr	r3, [pc, #308]	@ (8007228 <HMI_Vacant_W+0x4a4>)
 80070f4:	2200      	movs	r2, #0
 80070f6:	601a      	str	r2, [r3, #0]
	IC_Val3 = 0;
 80070f8:	4b4c      	ldr	r3, [pc, #304]	@ (800722c <HMI_Vacant_W+0x4a8>)
 80070fa:	2200      	movs	r2, #0
 80070fc:	601a      	str	r2, [r3, #0]
	IC_Val4 = 0;
 80070fe:	4b4c      	ldr	r3, [pc, #304]	@ (8007230 <HMI_Vacant_W+0x4ac>)
 8007100:	2200      	movs	r2, #0
 8007102:	601a      	str	r2, [r3, #0]
	Width = 0;
 8007104:	4b4b      	ldr	r3, [pc, #300]	@ (8007234 <HMI_Vacant_W+0x4b0>)
 8007106:	2200      	movs	r2, #0
 8007108:	601a      	str	r2, [r3, #0]
	Difference = 0;
 800710a:	4b4b      	ldr	r3, [pc, #300]	@ (8007238 <HMI_Vacant_W+0x4b4>)
 800710c:	2200      	movs	r2, #0
 800710e:	601a      	str	r2, [r3, #0]
	//counter = 0;
	//last_counter = 0;
	//Dis = 0;
	//Distance = 0;

	if (Flag_Tbox_Finish)
 8007110:	4b4a      	ldr	r3, [pc, #296]	@ (800723c <HMI_Vacant_W+0x4b8>)
 8007112:	781b      	ldrb	r3, [r3, #0]
 8007114:	2b00      	cmp	r3, #0
 8007116:	d100      	bne.n	800711a <HMI_Vacant_W+0x396>
 8007118:	e274      	b.n	8007604 <HMI_Vacant_W+0x880>
	{
		Flag_Tbox_Start = TRUE;
 800711a:	4b49      	ldr	r3, [pc, #292]	@ (8007240 <HMI_Vacant_W+0x4bc>)
 800711c:	2201      	movs	r2, #1
 800711e:	701a      	strb	r2, [r3, #0]
		Flag_Tbox_Finish = FALSE;
 8007120:	4b46      	ldr	r3, [pc, #280]	@ (800723c <HMI_Vacant_W+0x4b8>)
 8007122:	2200      	movs	r2, #0
 8007124:	701a      	strb	r2, [r3, #0]

		Flag_Printer_Start = TRUE;
 8007126:	4b47      	ldr	r3, [pc, #284]	@ (8007244 <HMI_Vacant_W+0x4c0>)
 8007128:	2201      	movs	r2, #1
 800712a:	701a      	strb	r2, [r3, #0]
		Flag_Printer_End = FALSE;
 800712c:	4b46      	ldr	r3, [pc, #280]	@ (8007248 <HMI_Vacant_W+0x4c4>)
 800712e:	2200      	movs	r2, #0
 8007130:	701a      	strb	r2, [r3, #0]

		if(!Flag_End_Record)
 8007132:	4b46      	ldr	r3, [pc, #280]	@ (800724c <HMI_Vacant_W+0x4c8>)
 8007134:	781b      	ldrb	r3, [r3, #0]
 8007136:	2b00      	cmp	r3, #0
 8007138:	d000      	beq.n	800713c <HMI_Vacant_W+0x3b8>
 800713a:	e089      	b.n	8007250 <HMI_Vacant_W+0x4cc>
		{
			//printed on stop mode,already record the end time
			tbox_finish();
 800713c:	f000 ffc0 	bl	80080c0 <tbox_finish>
 8007140:	e0b0      	b.n	80072a4 <HMI_Vacant_W+0x520>
 8007142:	46c0      	nop			@ (mov r8, r8)
 8007144:	2000000c 	.word	0x2000000c
 8007148:	20000658 	.word	0x20000658
 800714c:	2000001c 	.word	0x2000001c
 8007150:	20000024 	.word	0x20000024
 8007154:	20000e20 	.word	0x20000e20
 8007158:	20000a60 	.word	0x20000a60
 800715c:	20000e24 	.word	0x20000e24
 8007160:	20000d34 	.word	0x20000d34
 8007164:	20000e34 	.word	0x20000e34
 8007168:	20000a4c 	.word	0x20000a4c
 800716c:	20000e38 	.word	0x20000e38
 8007170:	20000a6c 	.word	0x20000a6c
 8007174:	20000e3c 	.word	0x20000e3c
 8007178:	20000e40 	.word	0x20000e40
 800717c:	20000e54 	.word	0x20000e54
 8007180:	20000e28 	.word	0x20000e28
 8007184:	20000e2c 	.word	0x20000e2c
 8007188:	20000e55 	.word	0x20000e55
 800718c:	20000e30 	.word	0x20000e30
 8007190:	20000e44 	.word	0x20000e44
 8007194:	20000e56 	.word	0x20000e56
 8007198:	404e0000 	.word	0x404e0000
 800719c:	408f4000 	.word	0x408f4000
 80071a0:	40240000 	.word	0x40240000
 80071a4:	20000e5c 	.word	0x20000e5c
 80071a8:	20000e64 	.word	0x20000e64
 80071ac:	20000e84 	.word	0x20000e84
 80071b0:	20000e8c 	.word	0x20000e8c
 80071b4:	20000e6c 	.word	0x20000e6c
 80071b8:	20000e74 	.word	0x20000e74
 80071bc:	20000e94 	.word	0x20000e94
 80071c0:	20000e9c 	.word	0x20000e9c
 80071c4:	20000e7c 	.word	0x20000e7c
 80071c8:	20000ea4 	.word	0x20000ea4
 80071cc:	08019f18 	.word	0x08019f18
 80071d0:	20000a3c 	.word	0x20000a3c
 80071d4:	20000a40 	.word	0x20000a40
 80071d8:	20000a5c 	.word	0x20000a5c
 80071dc:	20000a5d 	.word	0x20000a5d
 80071e0:	2000004c 	.word	0x2000004c
 80071e4:	20000d28 	.word	0x20000d28
 80071e8:	08019ed8 	.word	0x08019ed8
 80071ec:	20000a58 	.word	0x20000a58
 80071f0:	08019ee4 	.word	0x08019ee4
 80071f4:	20000a64 	.word	0x20000a64
 80071f8:	08019f38 	.word	0x08019f38
 80071fc:	2000005c 	.word	0x2000005c
 8007200:	20000d24 	.word	0x20000d24
 8007204:	20000ac0 	.word	0x20000ac0
 8007208:	20000ac1 	.word	0x20000ac1
 800720c:	20000ac2 	.word	0x20000ac2
 8007210:	2000006c 	.word	0x2000006c
 8007214:	20000034 	.word	0x20000034
 8007218:	2000003c 	.word	0x2000003c
 800721c:	20000044 	.word	0x20000044
 8007220:	20000054 	.word	0x20000054
 8007224:	20000ca0 	.word	0x20000ca0
 8007228:	20000ca4 	.word	0x20000ca4
 800722c:	20000ca8 	.word	0x20000ca8
 8007230:	20000cac 	.word	0x20000cac
 8007234:	20000cb4 	.word	0x20000cb4
 8007238:	20000cb0 	.word	0x20000cb0
 800723c:	20000b3c 	.word	0x20000b3c
 8007240:	2000022b 	.word	0x2000022b
 8007244:	20000229 	.word	0x20000229
 8007248:	20000b20 	.word	0x20000b20
 800724c:	2000022a 	.word	0x2000022a
		else
		{
			//get end time
			//end - dd/mm/yy hh:mm
			//hmi_rtc - yy-mm-dd hh:mm:ss
			end[0] = hmi_rtc[14];
 8007250:	4b9a      	ldr	r3, [pc, #616]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007252:	7b9a      	ldrb	r2, [r3, #14]
 8007254:	4b9a      	ldr	r3, [pc, #616]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 8007256:	701a      	strb	r2, [r3, #0]
			end[1] = hmi_rtc[15];
 8007258:	4b98      	ldr	r3, [pc, #608]	@ (80074bc <HMI_Vacant_W+0x738>)
 800725a:	7bda      	ldrb	r2, [r3, #15]
 800725c:	4b98      	ldr	r3, [pc, #608]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 800725e:	705a      	strb	r2, [r3, #1]
			end[3] = hmi_rtc[11];
 8007260:	4b96      	ldr	r3, [pc, #600]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007262:	7ada      	ldrb	r2, [r3, #11]
 8007264:	4b96      	ldr	r3, [pc, #600]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 8007266:	70da      	strb	r2, [r3, #3]
			end[4] = hmi_rtc[12];
 8007268:	4b94      	ldr	r3, [pc, #592]	@ (80074bc <HMI_Vacant_W+0x738>)
 800726a:	7b1a      	ldrb	r2, [r3, #12]
 800726c:	4b94      	ldr	r3, [pc, #592]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 800726e:	711a      	strb	r2, [r3, #4]
			end[6] = hmi_rtc[8];
 8007270:	4b92      	ldr	r3, [pc, #584]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007272:	7a1a      	ldrb	r2, [r3, #8]
 8007274:	4b92      	ldr	r3, [pc, #584]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 8007276:	719a      	strb	r2, [r3, #6]
			end[7] = hmi_rtc[9];
 8007278:	4b90      	ldr	r3, [pc, #576]	@ (80074bc <HMI_Vacant_W+0x738>)
 800727a:	7a5a      	ldrb	r2, [r3, #9]
 800727c:	4b90      	ldr	r3, [pc, #576]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 800727e:	71da      	strb	r2, [r3, #7]
			end[9] = hmi_rtc[17];
 8007280:	4b8e      	ldr	r3, [pc, #568]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007282:	7c5a      	ldrb	r2, [r3, #17]
 8007284:	4b8e      	ldr	r3, [pc, #568]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 8007286:	725a      	strb	r2, [r3, #9]
			end[10] = hmi_rtc[18];
 8007288:	4b8c      	ldr	r3, [pc, #560]	@ (80074bc <HMI_Vacant_W+0x738>)
 800728a:	7c9a      	ldrb	r2, [r3, #18]
 800728c:	4b8c      	ldr	r3, [pc, #560]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 800728e:	729a      	strb	r2, [r3, #10]
			end[12] = hmi_rtc[20];
 8007290:	4b8a      	ldr	r3, [pc, #552]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007292:	7d1a      	ldrb	r2, [r3, #20]
 8007294:	4b8a      	ldr	r3, [pc, #552]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 8007296:	731a      	strb	r2, [r3, #12]
			end[13] = hmi_rtc[21];
 8007298:	4b88      	ldr	r3, [pc, #544]	@ (80074bc <HMI_Vacant_W+0x738>)
 800729a:	7d5a      	ldrb	r2, [r3, #21]
 800729c:	4b88      	ldr	r3, [pc, #544]	@ (80074c0 <HMI_Vacant_W+0x73c>)
 800729e:	735a      	strb	r2, [r3, #13]
			tbox_finish();
 80072a0:	f000 ff0e 	bl	80080c0 <tbox_finish>
		}
		Flag_End_Record = TRUE;
 80072a4:	4b87      	ldr	r3, [pc, #540]	@ (80074c4 <HMI_Vacant_W+0x740>)
 80072a6:	2201      	movs	r2, #1
 80072a8:	701a      	strb	r2, [r3, #0]
		//calculate trip time (end time - start time)
		E_write();
 80072aa:	f003 ff7f 	bl	800b1ac <E_write>
		//trip data write to sd card
		SD_buffer[34] = 0x32;
 80072ae:	4b86      	ldr	r3, [pc, #536]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072b0:	2222      	movs	r2, #34	@ 0x22
 80072b2:	2132      	movs	r1, #50	@ 0x32
 80072b4:	5499      	strb	r1, [r3, r2]
		SD_buffer[35] = 0x30;
 80072b6:	4b84      	ldr	r3, [pc, #528]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072b8:	2223      	movs	r2, #35	@ 0x23
 80072ba:	2130      	movs	r1, #48	@ 0x30
 80072bc:	5499      	strb	r1, [r3, r2]
		SD_buffer[36] = hmi_rtc[8];
 80072be:	4b7f      	ldr	r3, [pc, #508]	@ (80074bc <HMI_Vacant_W+0x738>)
 80072c0:	7a19      	ldrb	r1, [r3, #8]
 80072c2:	4b81      	ldr	r3, [pc, #516]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072c4:	2224      	movs	r2, #36	@ 0x24
 80072c6:	5499      	strb	r1, [r3, r2]
		SD_buffer[37] = hmi_rtc[9];
 80072c8:	4b7c      	ldr	r3, [pc, #496]	@ (80074bc <HMI_Vacant_W+0x738>)
 80072ca:	7a59      	ldrb	r1, [r3, #9]
 80072cc:	4b7e      	ldr	r3, [pc, #504]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072ce:	2225      	movs	r2, #37	@ 0x25
 80072d0:	5499      	strb	r1, [r3, r2]
		SD_buffer[38] = 0x2D;
 80072d2:	4b7d      	ldr	r3, [pc, #500]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072d4:	2226      	movs	r2, #38	@ 0x26
 80072d6:	212d      	movs	r1, #45	@ 0x2d
 80072d8:	5499      	strb	r1, [r3, r2]
		SD_buffer[39] = hmi_rtc[11];
 80072da:	4b78      	ldr	r3, [pc, #480]	@ (80074bc <HMI_Vacant_W+0x738>)
 80072dc:	7ad9      	ldrb	r1, [r3, #11]
 80072de:	4b7a      	ldr	r3, [pc, #488]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072e0:	2227      	movs	r2, #39	@ 0x27
 80072e2:	5499      	strb	r1, [r3, r2]
		SD_buffer[40] = hmi_rtc[12];
 80072e4:	4b75      	ldr	r3, [pc, #468]	@ (80074bc <HMI_Vacant_W+0x738>)
 80072e6:	7b19      	ldrb	r1, [r3, #12]
 80072e8:	4b77      	ldr	r3, [pc, #476]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072ea:	2228      	movs	r2, #40	@ 0x28
 80072ec:	5499      	strb	r1, [r3, r2]
		SD_buffer[41] = 0x2D;
 80072ee:	4b76      	ldr	r3, [pc, #472]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072f0:	2229      	movs	r2, #41	@ 0x29
 80072f2:	212d      	movs	r1, #45	@ 0x2d
 80072f4:	5499      	strb	r1, [r3, r2]
		SD_buffer[42] = hmi_rtc[14];
 80072f6:	4b71      	ldr	r3, [pc, #452]	@ (80074bc <HMI_Vacant_W+0x738>)
 80072f8:	7b99      	ldrb	r1, [r3, #14]
 80072fa:	4b73      	ldr	r3, [pc, #460]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80072fc:	222a      	movs	r2, #42	@ 0x2a
 80072fe:	5499      	strb	r1, [r3, r2]
		SD_buffer[43] = hmi_rtc[15];
 8007300:	4b6e      	ldr	r3, [pc, #440]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007302:	7bd9      	ldrb	r1, [r3, #15]
 8007304:	4b70      	ldr	r3, [pc, #448]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007306:	222b      	movs	r2, #43	@ 0x2b
 8007308:	5499      	strb	r1, [r3, r2]
		SD_buffer[44] = 0x20;
 800730a:	4b6f      	ldr	r3, [pc, #444]	@ (80074c8 <HMI_Vacant_W+0x744>)
 800730c:	222c      	movs	r2, #44	@ 0x2c
 800730e:	2120      	movs	r1, #32
 8007310:	5499      	strb	r1, [r3, r2]
		SD_buffer[45] = hmi_rtc[17];
 8007312:	4b6a      	ldr	r3, [pc, #424]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007314:	7c59      	ldrb	r1, [r3, #17]
 8007316:	4b6c      	ldr	r3, [pc, #432]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007318:	222d      	movs	r2, #45	@ 0x2d
 800731a:	5499      	strb	r1, [r3, r2]
		SD_buffer[46] = hmi_rtc[18];
 800731c:	4b67      	ldr	r3, [pc, #412]	@ (80074bc <HMI_Vacant_W+0x738>)
 800731e:	7c99      	ldrb	r1, [r3, #18]
 8007320:	4b69      	ldr	r3, [pc, #420]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007322:	222e      	movs	r2, #46	@ 0x2e
 8007324:	5499      	strb	r1, [r3, r2]
		SD_buffer[47] = 0x3A;
 8007326:	4b68      	ldr	r3, [pc, #416]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007328:	222f      	movs	r2, #47	@ 0x2f
 800732a:	213a      	movs	r1, #58	@ 0x3a
 800732c:	5499      	strb	r1, [r3, r2]
		SD_buffer[48] = hmi_rtc[20];
 800732e:	4b63      	ldr	r3, [pc, #396]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007330:	7d19      	ldrb	r1, [r3, #20]
 8007332:	4b65      	ldr	r3, [pc, #404]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007334:	2230      	movs	r2, #48	@ 0x30
 8007336:	5499      	strb	r1, [r3, r2]
		SD_buffer[49] = hmi_rtc[21];
 8007338:	4b60      	ldr	r3, [pc, #384]	@ (80074bc <HMI_Vacant_W+0x738>)
 800733a:	7d59      	ldrb	r1, [r3, #21]
 800733c:	4b62      	ldr	r3, [pc, #392]	@ (80074c8 <HMI_Vacant_W+0x744>)
 800733e:	2231      	movs	r2, #49	@ 0x31
 8007340:	5499      	strb	r1, [r3, r2]
		SD_buffer[50] = 0x3A;
 8007342:	4b61      	ldr	r3, [pc, #388]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007344:	2232      	movs	r2, #50	@ 0x32
 8007346:	213a      	movs	r1, #58	@ 0x3a
 8007348:	5499      	strb	r1, [r3, r2]
		SD_buffer[51] = hmi_rtc[23];
 800734a:	4b5c      	ldr	r3, [pc, #368]	@ (80074bc <HMI_Vacant_W+0x738>)
 800734c:	7dd9      	ldrb	r1, [r3, #23]
 800734e:	4b5e      	ldr	r3, [pc, #376]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007350:	2233      	movs	r2, #51	@ 0x33
 8007352:	5499      	strb	r1, [r3, r2]
		SD_buffer[52] = hmi_rtc[24];
 8007354:	4b59      	ldr	r3, [pc, #356]	@ (80074bc <HMI_Vacant_W+0x738>)
 8007356:	7e19      	ldrb	r1, [r3, #24]
 8007358:	4b5b      	ldr	r3, [pc, #364]	@ (80074c8 <HMI_Vacant_W+0x744>)
 800735a:	2234      	movs	r2, #52	@ 0x34
 800735c:	5499      	strb	r1, [r3, r2]
		SD_buffer[53] = 0x20;
 800735e:	4b5a      	ldr	r3, [pc, #360]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007360:	2235      	movs	r2, #53	@ 0x35
 8007362:	2120      	movs	r1, #32
 8007364:	5499      	strb	r1, [r3, r2]

		SD_buffer[54] = paid_min[8];
 8007366:	4b59      	ldr	r3, [pc, #356]	@ (80074cc <HMI_Vacant_W+0x748>)
 8007368:	7a19      	ldrb	r1, [r3, #8]
 800736a:	4b57      	ldr	r3, [pc, #348]	@ (80074c8 <HMI_Vacant_W+0x744>)
 800736c:	2236      	movs	r2, #54	@ 0x36
 800736e:	5499      	strb	r1, [r3, r2]
		SD_buffer[55] = paid_min[9];
 8007370:	4b56      	ldr	r3, [pc, #344]	@ (80074cc <HMI_Vacant_W+0x748>)
 8007372:	7a59      	ldrb	r1, [r3, #9]
 8007374:	4b54      	ldr	r3, [pc, #336]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007376:	2237      	movs	r2, #55	@ 0x37
 8007378:	5499      	strb	r1, [r3, r2]
		SD_buffer[56] = paid_min[10];
 800737a:	4b54      	ldr	r3, [pc, #336]	@ (80074cc <HMI_Vacant_W+0x748>)
 800737c:	7a99      	ldrb	r1, [r3, #10]
 800737e:	4b52      	ldr	r3, [pc, #328]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007380:	2238      	movs	r2, #56	@ 0x38
 8007382:	5499      	strb	r1, [r3, r2]
		SD_buffer[57] = 0x2E;
 8007384:	4b50      	ldr	r3, [pc, #320]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007386:	2239      	movs	r2, #57	@ 0x39
 8007388:	212e      	movs	r1, #46	@ 0x2e
 800738a:	5499      	strb	r1, [r3, r2]
		SD_buffer[58] = paid_min[12];
 800738c:	4b4f      	ldr	r3, [pc, #316]	@ (80074cc <HMI_Vacant_W+0x748>)
 800738e:	7b19      	ldrb	r1, [r3, #12]
 8007390:	4b4d      	ldr	r3, [pc, #308]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007392:	223a      	movs	r2, #58	@ 0x3a
 8007394:	5499      	strb	r1, [r3, r2]
		SD_buffer[59] = paid_min[13];
 8007396:	4b4d      	ldr	r3, [pc, #308]	@ (80074cc <HMI_Vacant_W+0x748>)
 8007398:	7b59      	ldrb	r1, [r3, #13]
 800739a:	4b4b      	ldr	r3, [pc, #300]	@ (80074c8 <HMI_Vacant_W+0x744>)
 800739c:	223b      	movs	r2, #59	@ 0x3b
 800739e:	5499      	strb	r1, [r3, r2]
		SD_buffer[60] = 0x20;
 80073a0:	4b49      	ldr	r3, [pc, #292]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80073a2:	223c      	movs	r2, #60	@ 0x3c
 80073a4:	2120      	movs	r1, #32
 80073a6:	5499      	strb	r1, [r3, r2]

		//journey time
		jtime_d = ((ttime_counter / 60.0)* 1000) / 10; //changed
 80073a8:	4b49      	ldr	r3, [pc, #292]	@ (80074d0 <HMI_Vacant_W+0x74c>)
 80073aa:	881b      	ldrh	r3, [r3, #0]
 80073ac:	0018      	movs	r0, r3
 80073ae:	f7fb ff13 	bl	80031d8 <__aeabi_i2d>
 80073b2:	2200      	movs	r2, #0
 80073b4:	4b47      	ldr	r3, [pc, #284]	@ (80074d4 <HMI_Vacant_W+0x750>)
 80073b6:	f7fa fc2b 	bl	8001c10 <__aeabi_ddiv>
 80073ba:	0002      	movs	r2, r0
 80073bc:	000b      	movs	r3, r1
 80073be:	0010      	movs	r0, r2
 80073c0:	0019      	movs	r1, r3
 80073c2:	2200      	movs	r2, #0
 80073c4:	4b44      	ldr	r3, [pc, #272]	@ (80074d8 <HMI_Vacant_W+0x754>)
 80073c6:	f7fb f867 	bl	8002498 <__aeabi_dmul>
 80073ca:	0002      	movs	r2, r0
 80073cc:	000b      	movs	r3, r1
 80073ce:	0010      	movs	r0, r2
 80073d0:	0019      	movs	r1, r3
 80073d2:	2200      	movs	r2, #0
 80073d4:	4b41      	ldr	r3, [pc, #260]	@ (80074dc <HMI_Vacant_W+0x758>)
 80073d6:	f7fa fc1b 	bl	8001c10 <__aeabi_ddiv>
 80073da:	0002      	movs	r2, r0
 80073dc:	000b      	movs	r3, r1
 80073de:	0010      	movs	r0, r2
 80073e0:	0019      	movs	r1, r3
 80073e2:	f7f9 f8c7 	bl	8000574 <__aeabi_d2uiz>
 80073e6:	0002      	movs	r2, r0
 80073e8:	4b3d      	ldr	r3, [pc, #244]	@ (80074e0 <HMI_Vacant_W+0x75c>)
 80073ea:	601a      	str	r2, [r3, #0]
		jtime[7] = (jtime_d /1 % 10) + 0x30;
 80073ec:	4b3c      	ldr	r3, [pc, #240]	@ (80074e0 <HMI_Vacant_W+0x75c>)
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	210a      	movs	r1, #10
 80073f2:	0018      	movs	r0, r3
 80073f4:	f7f8 ff1e 	bl	8000234 <__aeabi_uidivmod>
 80073f8:	000b      	movs	r3, r1
 80073fa:	b2db      	uxtb	r3, r3
 80073fc:	3330      	adds	r3, #48	@ 0x30
 80073fe:	b2da      	uxtb	r2, r3
 8007400:	4b38      	ldr	r3, [pc, #224]	@ (80074e4 <HMI_Vacant_W+0x760>)
 8007402:	71da      	strb	r2, [r3, #7]
		jtime[6] = (jtime_d /10 % 10) + 0x30;
 8007404:	4b36      	ldr	r3, [pc, #216]	@ (80074e0 <HMI_Vacant_W+0x75c>)
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	210a      	movs	r1, #10
 800740a:	0018      	movs	r0, r3
 800740c:	f7f8 fe8c 	bl	8000128 <__udivsi3>
 8007410:	0003      	movs	r3, r0
 8007412:	210a      	movs	r1, #10
 8007414:	0018      	movs	r0, r3
 8007416:	f7f8 ff0d 	bl	8000234 <__aeabi_uidivmod>
 800741a:	000b      	movs	r3, r1
 800741c:	b2db      	uxtb	r3, r3
 800741e:	3330      	adds	r3, #48	@ 0x30
 8007420:	b2da      	uxtb	r2, r3
 8007422:	4b30      	ldr	r3, [pc, #192]	@ (80074e4 <HMI_Vacant_W+0x760>)
 8007424:	719a      	strb	r2, [r3, #6]
		jtime[5] = (jtime_d /100 % 10) + 0x30;
 8007426:	4b2e      	ldr	r3, [pc, #184]	@ (80074e0 <HMI_Vacant_W+0x75c>)
 8007428:	681b      	ldr	r3, [r3, #0]
 800742a:	2164      	movs	r1, #100	@ 0x64
 800742c:	0018      	movs	r0, r3
 800742e:	f7f8 fe7b 	bl	8000128 <__udivsi3>
 8007432:	0003      	movs	r3, r0
 8007434:	210a      	movs	r1, #10
 8007436:	0018      	movs	r0, r3
 8007438:	f7f8 fefc 	bl	8000234 <__aeabi_uidivmod>
 800743c:	000b      	movs	r3, r1
 800743e:	b2db      	uxtb	r3, r3
 8007440:	3330      	adds	r3, #48	@ 0x30
 8007442:	b2da      	uxtb	r2, r3
 8007444:	4b27      	ldr	r3, [pc, #156]	@ (80074e4 <HMI_Vacant_W+0x760>)
 8007446:	715a      	strb	r2, [r3, #5]
		jtime[4] = (jtime_d /1000 % 10) + 0x30;
 8007448:	4b25      	ldr	r3, [pc, #148]	@ (80074e0 <HMI_Vacant_W+0x75c>)
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	22fa      	movs	r2, #250	@ 0xfa
 800744e:	0091      	lsls	r1, r2, #2
 8007450:	0018      	movs	r0, r3
 8007452:	f7f8 fe69 	bl	8000128 <__udivsi3>
 8007456:	0003      	movs	r3, r0
 8007458:	210a      	movs	r1, #10
 800745a:	0018      	movs	r0, r3
 800745c:	f7f8 feea 	bl	8000234 <__aeabi_uidivmod>
 8007460:	000b      	movs	r3, r1
 8007462:	b2db      	uxtb	r3, r3
 8007464:	3330      	adds	r3, #48	@ 0x30
 8007466:	b2da      	uxtb	r2, r3
 8007468:	4b1e      	ldr	r3, [pc, #120]	@ (80074e4 <HMI_Vacant_W+0x760>)
 800746a:	711a      	strb	r2, [r3, #4]
		jtime[3] = (jtime_d /10000 % 10) + 0x30;
 800746c:	4b1c      	ldr	r3, [pc, #112]	@ (80074e0 <HMI_Vacant_W+0x75c>)
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	491d      	ldr	r1, [pc, #116]	@ (80074e8 <HMI_Vacant_W+0x764>)
 8007472:	0018      	movs	r0, r3
 8007474:	f7f8 fe58 	bl	8000128 <__udivsi3>
 8007478:	0003      	movs	r3, r0
 800747a:	210a      	movs	r1, #10
 800747c:	0018      	movs	r0, r3
 800747e:	f7f8 fed9 	bl	8000234 <__aeabi_uidivmod>
 8007482:	000b      	movs	r3, r1
 8007484:	b2db      	uxtb	r3, r3
 8007486:	3330      	adds	r3, #48	@ 0x30
 8007488:	b2da      	uxtb	r2, r3
 800748a:	4b16      	ldr	r3, [pc, #88]	@ (80074e4 <HMI_Vacant_W+0x760>)
 800748c:	70da      	strb	r2, [r3, #3]

		if (jtime[3] == 0x30)
 800748e:	4b15      	ldr	r3, [pc, #84]	@ (80074e4 <HMI_Vacant_W+0x760>)
 8007490:	78db      	ldrb	r3, [r3, #3]
 8007492:	2b30      	cmp	r3, #48	@ 0x30
 8007494:	d104      	bne.n	80074a0 <HMI_Vacant_W+0x71c>
			SD_buffer[61] = 0x20;
 8007496:	4b0c      	ldr	r3, [pc, #48]	@ (80074c8 <HMI_Vacant_W+0x744>)
 8007498:	223d      	movs	r2, #61	@ 0x3d
 800749a:	2120      	movs	r1, #32
 800749c:	5499      	strb	r1, [r3, r2]
 800749e:	e004      	b.n	80074aa <HMI_Vacant_W+0x726>
		else
			SD_buffer[61] = jtime[3];
 80074a0:	4b10      	ldr	r3, [pc, #64]	@ (80074e4 <HMI_Vacant_W+0x760>)
 80074a2:	78d9      	ldrb	r1, [r3, #3]
 80074a4:	4b08      	ldr	r3, [pc, #32]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80074a6:	223d      	movs	r2, #61	@ 0x3d
 80074a8:	5499      	strb	r1, [r3, r2]
		if (jtime[4] == 0x30)
 80074aa:	4b0e      	ldr	r3, [pc, #56]	@ (80074e4 <HMI_Vacant_W+0x760>)
 80074ac:	791b      	ldrb	r3, [r3, #4]
 80074ae:	2b30      	cmp	r3, #48	@ 0x30
 80074b0:	d11c      	bne.n	80074ec <HMI_Vacant_W+0x768>
			SD_buffer[62] = 0x20;
 80074b2:	4b05      	ldr	r3, [pc, #20]	@ (80074c8 <HMI_Vacant_W+0x744>)
 80074b4:	223e      	movs	r2, #62	@ 0x3e
 80074b6:	2120      	movs	r1, #32
 80074b8:	5499      	strb	r1, [r3, r2]
 80074ba:	e01c      	b.n	80074f6 <HMI_Vacant_W+0x772>
 80074bc:	2000007c 	.word	0x2000007c
 80074c0:	200001bc 	.word	0x200001bc
 80074c4:	2000022a 	.word	0x2000022a
 80074c8:	2000333c 	.word	0x2000333c
 80074cc:	200001fc 	.word	0x200001fc
 80074d0:	20000e56 	.word	0x20000e56
 80074d4:	404e0000 	.word	0x404e0000
 80074d8:	408f4000 	.word	0x408f4000
 80074dc:	40240000 	.word	0x40240000
 80074e0:	20000e50 	.word	0x20000e50
 80074e4:	20000eb4 	.word	0x20000eb4
 80074e8:	00002710 	.word	0x00002710
		else
			SD_buffer[62] = jtime[4];
 80074ec:	4b71      	ldr	r3, [pc, #452]	@ (80076b4 <HMI_Vacant_W+0x930>)
 80074ee:	7919      	ldrb	r1, [r3, #4]
 80074f0:	4b71      	ldr	r3, [pc, #452]	@ (80076b8 <HMI_Vacant_W+0x934>)
 80074f2:	223e      	movs	r2, #62	@ 0x3e
 80074f4:	5499      	strb	r1, [r3, r2]

		SD_buffer[63] = jtime[5];
 80074f6:	4b6f      	ldr	r3, [pc, #444]	@ (80076b4 <HMI_Vacant_W+0x930>)
 80074f8:	7959      	ldrb	r1, [r3, #5]
 80074fa:	4b6f      	ldr	r3, [pc, #444]	@ (80076b8 <HMI_Vacant_W+0x934>)
 80074fc:	223f      	movs	r2, #63	@ 0x3f
 80074fe:	5499      	strb	r1, [r3, r2]
		SD_buffer[64] = 0x2E;
 8007500:	4b6d      	ldr	r3, [pc, #436]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007502:	2240      	movs	r2, #64	@ 0x40
 8007504:	212e      	movs	r1, #46	@ 0x2e
 8007506:	5499      	strb	r1, [r3, r2]
		SD_buffer[65] = jtime[6];
 8007508:	4b6a      	ldr	r3, [pc, #424]	@ (80076b4 <HMI_Vacant_W+0x930>)
 800750a:	7999      	ldrb	r1, [r3, #6]
 800750c:	4b6a      	ldr	r3, [pc, #424]	@ (80076b8 <HMI_Vacant_W+0x934>)
 800750e:	2241      	movs	r2, #65	@ 0x41
 8007510:	5499      	strb	r1, [r3, r2]
		SD_buffer[66] = jtime[7];
 8007512:	4b68      	ldr	r3, [pc, #416]	@ (80076b4 <HMI_Vacant_W+0x930>)
 8007514:	79d9      	ldrb	r1, [r3, #7]
 8007516:	4b68      	ldr	r3, [pc, #416]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007518:	2242      	movs	r2, #66	@ 0x42
 800751a:	5499      	strb	r1, [r3, r2]
		SD_buffer[67] = 0x20;
 800751c:	4b66      	ldr	r3, [pc, #408]	@ (80076b8 <HMI_Vacant_W+0x934>)
 800751e:	2243      	movs	r2, #67	@ 0x43
 8007520:	2120      	movs	r1, #32
 8007522:	5499      	strb	r1, [r3, r2]
		ttime_counter = 0;
 8007524:	4b65      	ldr	r3, [pc, #404]	@ (80076bc <HMI_Vacant_W+0x938>)
 8007526:	2200      	movs	r2, #0
 8007528:	801a      	strh	r2, [r3, #0]

		SD_buffer[68] = paid_km[8];
 800752a:	4b65      	ldr	r3, [pc, #404]	@ (80076c0 <HMI_Vacant_W+0x93c>)
 800752c:	7a19      	ldrb	r1, [r3, #8]
 800752e:	4b62      	ldr	r3, [pc, #392]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007530:	2244      	movs	r2, #68	@ 0x44
 8007532:	5499      	strb	r1, [r3, r2]
		SD_buffer[69] = paid_km[9];
 8007534:	4b62      	ldr	r3, [pc, #392]	@ (80076c0 <HMI_Vacant_W+0x93c>)
 8007536:	7a59      	ldrb	r1, [r3, #9]
 8007538:	4b5f      	ldr	r3, [pc, #380]	@ (80076b8 <HMI_Vacant_W+0x934>)
 800753a:	2245      	movs	r2, #69	@ 0x45
 800753c:	5499      	strb	r1, [r3, r2]
		SD_buffer[70] = paid_km[10];
 800753e:	4b60      	ldr	r3, [pc, #384]	@ (80076c0 <HMI_Vacant_W+0x93c>)
 8007540:	7a99      	ldrb	r1, [r3, #10]
 8007542:	4b5d      	ldr	r3, [pc, #372]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007544:	2246      	movs	r2, #70	@ 0x46
 8007546:	5499      	strb	r1, [r3, r2]
		SD_buffer[71] = 0x2E;
 8007548:	4b5b      	ldr	r3, [pc, #364]	@ (80076b8 <HMI_Vacant_W+0x934>)
 800754a:	2247      	movs	r2, #71	@ 0x47
 800754c:	212e      	movs	r1, #46	@ 0x2e
 800754e:	5499      	strb	r1, [r3, r2]
		SD_buffer[72] = paid_km[12];
 8007550:	4b5b      	ldr	r3, [pc, #364]	@ (80076c0 <HMI_Vacant_W+0x93c>)
 8007552:	7b19      	ldrb	r1, [r3, #12]
 8007554:	4b58      	ldr	r3, [pc, #352]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007556:	2248      	movs	r2, #72	@ 0x48
 8007558:	5499      	strb	r1, [r3, r2]
		SD_buffer[73] = paid_km[13];
 800755a:	4b59      	ldr	r3, [pc, #356]	@ (80076c0 <HMI_Vacant_W+0x93c>)
 800755c:	7b59      	ldrb	r1, [r3, #13]
 800755e:	4b56      	ldr	r3, [pc, #344]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007560:	2249      	movs	r2, #73	@ 0x49
 8007562:	5499      	strb	r1, [r3, r2]
		SD_buffer[74] = 0x20;
 8007564:	4b54      	ldr	r3, [pc, #336]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007566:	224a      	movs	r2, #74	@ 0x4a
 8007568:	2120      	movs	r1, #32
 800756a:	5499      	strb	r1, [r3, r2]

		SD_buffer[75] = total_km[8];
 800756c:	4b55      	ldr	r3, [pc, #340]	@ (80076c4 <HMI_Vacant_W+0x940>)
 800756e:	7a19      	ldrb	r1, [r3, #8]
 8007570:	4b51      	ldr	r3, [pc, #324]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007572:	224b      	movs	r2, #75	@ 0x4b
 8007574:	5499      	strb	r1, [r3, r2]
		SD_buffer[76] = total_km[9];
 8007576:	4b53      	ldr	r3, [pc, #332]	@ (80076c4 <HMI_Vacant_W+0x940>)
 8007578:	7a59      	ldrb	r1, [r3, #9]
 800757a:	4b4f      	ldr	r3, [pc, #316]	@ (80076b8 <HMI_Vacant_W+0x934>)
 800757c:	224c      	movs	r2, #76	@ 0x4c
 800757e:	5499      	strb	r1, [r3, r2]
		SD_buffer[77] = total_km[10];
 8007580:	4b50      	ldr	r3, [pc, #320]	@ (80076c4 <HMI_Vacant_W+0x940>)
 8007582:	7a99      	ldrb	r1, [r3, #10]
 8007584:	4b4c      	ldr	r3, [pc, #304]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007586:	224d      	movs	r2, #77	@ 0x4d
 8007588:	5499      	strb	r1, [r3, r2]
		SD_buffer[78] = 0x2E;
 800758a:	4b4b      	ldr	r3, [pc, #300]	@ (80076b8 <HMI_Vacant_W+0x934>)
 800758c:	224e      	movs	r2, #78	@ 0x4e
 800758e:	212e      	movs	r1, #46	@ 0x2e
 8007590:	5499      	strb	r1, [r3, r2]
		SD_buffer[79] = total_km[12];
 8007592:	4b4c      	ldr	r3, [pc, #304]	@ (80076c4 <HMI_Vacant_W+0x940>)
 8007594:	7b19      	ldrb	r1, [r3, #12]
 8007596:	4b48      	ldr	r3, [pc, #288]	@ (80076b8 <HMI_Vacant_W+0x934>)
 8007598:	224f      	movs	r2, #79	@ 0x4f
 800759a:	5499      	strb	r1, [r3, r2]
		SD_buffer[80] = total_km[13];
 800759c:	4b49      	ldr	r3, [pc, #292]	@ (80076c4 <HMI_Vacant_W+0x940>)
 800759e:	7b59      	ldrb	r1, [r3, #13]
 80075a0:	4b45      	ldr	r3, [pc, #276]	@ (80076b8 <HMI_Vacant_W+0x934>)
 80075a2:	2250      	movs	r2, #80	@ 0x50
 80075a4:	5499      	strb	r1, [r3, r2]
		SD_buffer[81] = 0x20;
 80075a6:	4b44      	ldr	r3, [pc, #272]	@ (80076b8 <HMI_Vacant_W+0x934>)
 80075a8:	2251      	movs	r2, #81	@ 0x51
 80075aa:	2120      	movs	r1, #32
 80075ac:	5499      	strb	r1, [r3, r2]

		SD_buffer[113] = 0x0A;
 80075ae:	4b42      	ldr	r3, [pc, #264]	@ (80076b8 <HMI_Vacant_W+0x934>)
 80075b0:	2271      	movs	r2, #113	@ 0x71
 80075b2:	210a      	movs	r1, #10
 80075b4:	5499      	strb	r1, [r3, r2]
		fresult = f_open(&fil, "tripDATA.txt", FA_OPEN_EXISTING | FA_READ | FA_WRITE);
 80075b6:	4944      	ldr	r1, [pc, #272]	@ (80076c8 <HMI_Vacant_W+0x944>)
 80075b8:	4b44      	ldr	r3, [pc, #272]	@ (80076cc <HMI_Vacant_W+0x948>)
 80075ba:	2203      	movs	r2, #3
 80075bc:	0018      	movs	r0, r3
 80075be:	f010 f963 	bl	8017888 <f_open>
 80075c2:	0003      	movs	r3, r0
 80075c4:	001a      	movs	r2, r3
 80075c6:	4b42      	ldr	r3, [pc, #264]	@ (80076d0 <HMI_Vacant_W+0x94c>)
 80075c8:	701a      	strb	r2, [r3, #0]
		fresult = f_lseek(&fil, f_size(&fil));
 80075ca:	4b40      	ldr	r3, [pc, #256]	@ (80076cc <HMI_Vacant_W+0x948>)
 80075cc:	68da      	ldr	r2, [r3, #12]
 80075ce:	4b3f      	ldr	r3, [pc, #252]	@ (80076cc <HMI_Vacant_W+0x948>)
 80075d0:	0011      	movs	r1, r2
 80075d2:	0018      	movs	r0, r3
 80075d4:	f010 fdb5 	bl	8018142 <f_lseek>
 80075d8:	0003      	movs	r3, r0
 80075da:	001a      	movs	r2, r3
 80075dc:	4b3c      	ldr	r3, [pc, #240]	@ (80076d0 <HMI_Vacant_W+0x94c>)
 80075de:	701a      	strb	r2, [r3, #0]
//		fresult = f_puts("AB1234 A000001 2023-07-18 18:18:30 2023-07-18 18:35:54 4.3 17.4 10.3 10.8 5.6 107.8 5 112.8\n", &fil);
		char const * ch = (const char*)&SD_buffer;
 80075e0:	4b35      	ldr	r3, [pc, #212]	@ (80076b8 <HMI_Vacant_W+0x934>)
 80075e2:	607b      	str	r3, [r7, #4]
		fresult = f_puts(ch, &fil);
 80075e4:	4a39      	ldr	r2, [pc, #228]	@ (80076cc <HMI_Vacant_W+0x948>)
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	0011      	movs	r1, r2
 80075ea:	0018      	movs	r0, r3
 80075ec:	f011 f854 	bl	8018698 <f_puts>
 80075f0:	0003      	movs	r3, r0
 80075f2:	b2da      	uxtb	r2, r3
 80075f4:	4b36      	ldr	r3, [pc, #216]	@ (80076d0 <HMI_Vacant_W+0x94c>)
 80075f6:	701a      	strb	r2, [r3, #0]
		f_close (&fil);
 80075f8:	4b34      	ldr	r3, [pc, #208]	@ (80076cc <HMI_Vacant_W+0x948>)
 80075fa:	0018      	movs	r0, r3
 80075fc:	f010 fd6d 	bl	80180da <f_close>
		clear_buffer();
 8007600:	f7fc fc86 	bl	8003f10 <clear_buffer>
	}
	Flag_Control_Up();
 8007604:	f003 fa2c 	bl	800aa60 <Flag_Control_Up>
	flag_sp = 1;
 8007608:	4b32      	ldr	r3, [pc, #200]	@ (80076d4 <HMI_Vacant_W+0x950>)
 800760a:	2201      	movs	r2, #1
 800760c:	701a      	strb	r2, [r3, #0]
	flag_vs_first = 1;
 800760e:	4b32      	ldr	r3, [pc, #200]	@ (80076d8 <HMI_Vacant_W+0x954>)
 8007610:	2201      	movs	r2, #1
 8007612:	701a      	strb	r2, [r3, #0]
	Fu = 0;                       //moved to end start to solve T-box clear problem
 8007614:	4b31      	ldr	r3, [pc, #196]	@ (80076dc <HMI_Vacant_W+0x958>)
 8007616:	2200      	movs	r2, #0
 8007618:	601a      	str	r2, [r3, #0]
	Ft = 0;
 800761a:	4b31      	ldr	r3, [pc, #196]	@ (80076e0 <HMI_Vacant_W+0x95c>)
 800761c:	2200      	movs	r2, #0
 800761e:	601a      	str	r2, [r3, #0]
	Fd = 0;
 8007620:	4b30      	ldr	r3, [pc, #192]	@ (80076e4 <HMI_Vacant_W+0x960>)
 8007622:	2200      	movs	r2, #0
 8007624:	601a      	str	r2, [r3, #0]
	Dt = 0;
 8007626:	4b30      	ldr	r3, [pc, #192]	@ (80076e8 <HMI_Vacant_W+0x964>)
 8007628:	2200      	movs	r2, #0
 800762a:	601a      	str	r2, [r3, #0]
	DtX = 0;
 800762c:	4b2f      	ldr	r3, [pc, #188]	@ (80076ec <HMI_Vacant_W+0x968>)
 800762e:	2200      	movs	r2, #0
 8007630:	601a      	str	r2, [r3, #0]
	Fi = 0; //2.35;
 8007632:	4b2f      	ldr	r3, [pc, #188]	@ (80076f0 <HMI_Vacant_W+0x96c>)
 8007634:	2200      	movs	r2, #0
 8007636:	601a      	str	r2, [r3, #0]
	fare_d_x10 = 0;
 8007638:	4b2e      	ldr	r3, [pc, #184]	@ (80076f4 <HMI_Vacant_W+0x970>)
 800763a:	2200      	movs	r2, #0
 800763c:	601a      	str	r2, [r3, #0]
	fare_d_x100 = 0;
 800763e:	4b2e      	ldr	r3, [pc, #184]	@ (80076f8 <HMI_Vacant_W+0x974>)
 8007640:	2200      	movs	r2, #0
 8007642:	601a      	str	r2, [r3, #0]
	fare_d = 0;
 8007644:	4b2d      	ldr	r3, [pc, #180]	@ (80076fc <HMI_Vacant_W+0x978>)
 8007646:	2200      	movs	r2, #0
 8007648:	601a      	str	r2, [r3, #0]
	Last_fare_d = 0;
 800764a:	4b2d      	ldr	r3, [pc, #180]	@ (8007700 <HMI_Vacant_W+0x97c>)
 800764c:	2200      	movs	r2, #0
 800764e:	601a      	str	r2, [r3, #0]
	fare = 0;
 8007650:	4b2c      	ldr	r3, [pc, #176]	@ (8007704 <HMI_Vacant_W+0x980>)
 8007652:	2200      	movs	r2, #0
 8007654:	601a      	str	r2, [r3, #0]
	fare_km = 0;
 8007656:	4b2c      	ldr	r3, [pc, #176]	@ (8007708 <HMI_Vacant_W+0x984>)
 8007658:	2200      	movs	r2, #0
 800765a:	601a      	str	r2, [r3, #0]
	fare_min = 0;
 800765c:	4b2b      	ldr	r3, [pc, #172]	@ (800770c <HMI_Vacant_W+0x988>)
 800765e:	2200      	movs	r2, #0
 8007660:	601a      	str	r2, [r3, #0]
	Flag_2km = FALSE;
 8007662:	4b2b      	ldr	r3, [pc, #172]	@ (8007710 <HMI_Vacant_W+0x98c>)
 8007664:	2200      	movs	r2, #0
 8007666:	701a      	strb	r2, [r3, #0]
	flag_fare_r = FALSE;
 8007668:	4b2a      	ldr	r3, [pc, #168]	@ (8007714 <HMI_Vacant_W+0x990>)
 800766a:	2200      	movs	r2, #0
 800766c:	701a      	strb	r2, [r3, #0]
	Final_price = 0;
 800766e:	4b2a      	ldr	r3, [pc, #168]	@ (8007718 <HMI_Vacant_W+0x994>)
 8007670:	2200      	movs	r2, #0
 8007672:	601a      	str	r2, [r3, #0]
	Final_price_x10 = 0;
 8007674:	4b29      	ldr	r3, [pc, #164]	@ (800771c <HMI_Vacant_W+0x998>)
 8007676:	2200      	movs	r2, #0
 8007678:	601a      	str	r2, [r3, #0]
	Addition = 0;
 800767a:	4b29      	ldr	r3, [pc, #164]	@ (8007720 <HMI_Vacant_W+0x99c>)
 800767c:	2200      	movs	r2, #0
 800767e:	601a      	str	r2, [r3, #0]
	flag_count = 0;
 8007680:	4b28      	ldr	r3, [pc, #160]	@ (8007724 <HMI_Vacant_W+0x9a0>)
 8007682:	2200      	movs	r2, #0
 8007684:	701a      	strb	r2, [r3, #0]
	change_count = 0;
 8007686:	4b28      	ldr	r3, [pc, #160]	@ (8007728 <HMI_Vacant_W+0x9a4>)
 8007688:	2200      	movs	r2, #0
 800768a:	701a      	strb	r2, [r3, #0]
	fare_km_x = 0;
 800768c:	4b27      	ldr	r3, [pc, #156]	@ (800772c <HMI_Vacant_W+0x9a8>)
 800768e:	2200      	movs	r2, #0
 8007690:	601a      	str	r2, [r3, #0]
//	ttime_counter = 0; //move to end
	last_counter = 0;
 8007692:	4b27      	ldr	r3, [pc, #156]	@ (8007730 <HMI_Vacant_W+0x9ac>)
 8007694:	2200      	movs	r2, #0
 8007696:	601a      	str	r2, [r3, #0]
	Dis = 0;
 8007698:	4b26      	ldr	r3, [pc, #152]	@ (8007734 <HMI_Vacant_W+0x9b0>)
 800769a:	2200      	movs	r2, #0
 800769c:	601a      	str	r2, [r3, #0]
	Distance = 0;
 800769e:	4b26      	ldr	r3, [pc, #152]	@ (8007738 <HMI_Vacant_W+0x9b4>)
 80076a0:	2200      	movs	r2, #0
 80076a2:	601a      	str	r2, [r3, #0]
	distance = 0;				//moved to end start to solve T-box clear problem
 80076a4:	4b25      	ldr	r3, [pc, #148]	@ (800773c <HMI_Vacant_W+0x9b8>)
 80076a6:	2200      	movs	r2, #0
 80076a8:	601a      	str	r2, [r3, #0]
}
 80076aa:	46c0      	nop			@ (mov r8, r8)
 80076ac:	46bd      	mov	sp, r7
 80076ae:	b002      	add	sp, #8
 80076b0:	bdb0      	pop	{r4, r5, r7, pc}
 80076b2:	46c0      	nop			@ (mov r8, r8)
 80076b4:	20000eb4 	.word	0x20000eb4
 80076b8:	2000333c 	.word	0x2000333c
 80076bc:	20000e56 	.word	0x20000e56
 80076c0:	200001ec 	.word	0x200001ec
 80076c4:	200001dc 	.word	0x200001dc
 80076c8:	08019884 	.word	0x08019884
 80076cc:	20001f04 	.word	0x20001f04
 80076d0:	20002f34 	.word	0x20002f34
 80076d4:	20000485 	.word	0x20000485
 80076d8:	20000b23 	.word	0x20000b23
 80076dc:	20000d04 	.word	0x20000d04
 80076e0:	20000d08 	.word	0x20000d08
 80076e4:	20000d0c 	.word	0x20000d0c
 80076e8:	20000cfc 	.word	0x20000cfc
 80076ec:	20000d00 	.word	0x20000d00
 80076f0:	20000cf8 	.word	0x20000cf8
 80076f4:	20000d20 	.word	0x20000d20
 80076f8:	20000d24 	.word	0x20000d24
 80076fc:	20000d18 	.word	0x20000d18
 8007700:	20000d1c 	.word	0x20000d1c
 8007704:	20000d14 	.word	0x20000d14
 8007708:	20000d2c 	.word	0x20000d2c
 800770c:	20000d30 	.word	0x20000d30
 8007710:	20000d10 	.word	0x20000d10
 8007714:	20000d3c 	.word	0x20000d3c
 8007718:	20000a4c 	.word	0x20000a4c
 800771c:	20000b2c 	.word	0x20000b2c
 8007720:	20000a6c 	.word	0x20000a6c
 8007724:	20000e54 	.word	0x20000e54
 8007728:	20000e55 	.word	0x20000e55
 800772c:	20000d34 	.word	0x20000d34
 8007730:	20000cf0 	.word	0x20000cf0
 8007734:	20000a60 	.word	0x20000a60
 8007738:	20000ce0 	.word	0x20000ce0
 800773c:	20000ce4 	.word	0x20000ce4

08007740 <extras_rd>:

void extras_rd(void)
{
 8007740:	b590      	push	{r4, r7, lr}
 8007742:	b085      	sub	sp, #20
 8007744:	af00      	add	r7, sp, #0
	Last_Addition = Addition;
 8007746:	4b7c      	ldr	r3, [pc, #496]	@ (8007938 <extras_rd+0x1f8>)
 8007748:	681a      	ldr	r2, [r3, #0]
 800774a:	4b7c      	ldr	r3, [pc, #496]	@ (800793c <extras_rd+0x1fc>)
 800774c:	601a      	str	r2, [r3, #0]

	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Plus10, 7, 0x0E);
 800774e:	497c      	ldr	r1, [pc, #496]	@ (8007940 <extras_rd+0x200>)
 8007750:	487c      	ldr	r0, [pc, #496]	@ (8007944 <extras_rd+0x204>)
 8007752:	230e      	movs	r3, #14
 8007754:	2207      	movs	r2, #7
 8007756:	f00b fd1b 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 800775a:	2002      	movs	r0, #2
 800775c:	f006 fa92 	bl	800dc84 <HAL_Delay>
//	HAL_UART_Transmit(&huart3,RxBuff,12,0x20);
	if(RxFlag)
 8007760:	4b79      	ldr	r3, [pc, #484]	@ (8007948 <extras_rd+0x208>)
 8007762:	781b      	ldrb	r3, [r3, #0]
 8007764:	2b00      	cmp	r3, #0
 8007766:	d022      	beq.n	80077ae <extras_rd+0x6e>
	{
		RxFlag = FALSE;
 8007768:	4b77      	ldr	r3, [pc, #476]	@ (8007948 <extras_rd+0x208>)
 800776a:	2200      	movs	r2, #0
 800776c:	701a      	strb	r2, [r3, #0]
		unsigned char buffer1[2] = {0};
 800776e:	2408      	movs	r4, #8
 8007770:	193b      	adds	r3, r7, r4
 8007772:	2200      	movs	r2, #0
 8007774:	801a      	strh	r2, [r3, #0]
		buffer1[0] = RxBuff[7];
 8007776:	4b75      	ldr	r3, [pc, #468]	@ (800794c <extras_rd+0x20c>)
 8007778:	79da      	ldrb	r2, [r3, #7]
 800777a:	193b      	adds	r3, r7, r4
 800777c:	701a      	strb	r2, [r3, #0]
		buffer1[1] = RxBuff[8];
 800777e:	4b73      	ldr	r3, [pc, #460]	@ (800794c <extras_rd+0x20c>)
 8007780:	7a1a      	ldrb	r2, [r3, #8]
 8007782:	193b      	adds	r3, r7, r4
 8007784:	705a      	strb	r2, [r3, #1]
		Plus_10 = byte_to_long(buffer1);
 8007786:	193b      	adds	r3, r7, r4
 8007788:	0018      	movs	r0, r3
 800778a:	f000 fb7f 	bl	8007e8c <byte_to_long>
 800778e:	0003      	movs	r3, r0
 8007790:	b29a      	uxth	r2, r3
 8007792:	4b6f      	ldr	r3, [pc, #444]	@ (8007950 <extras_rd+0x210>)
 8007794:	801a      	strh	r2, [r3, #0]
		memset(RxBuff,0,12);
 8007796:	4b6d      	ldr	r3, [pc, #436]	@ (800794c <extras_rd+0x20c>)
 8007798:	220c      	movs	r2, #12
 800779a:	2100      	movs	r1, #0
 800779c:	0018      	movs	r0, r3
 800779e:	f011 fa57 	bl	8018c50 <memset>
		memset(buffer1,0,2);
 80077a2:	193b      	adds	r3, r7, r4
 80077a4:	2202      	movs	r2, #2
 80077a6:	2100      	movs	r1, #0
 80077a8:	0018      	movs	r0, r3
 80077aa:	f011 fa51 	bl	8018c50 <memset>
	}

	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Plus1, 7, 0x0E);
 80077ae:	4969      	ldr	r1, [pc, #420]	@ (8007954 <extras_rd+0x214>)
 80077b0:	4864      	ldr	r0, [pc, #400]	@ (8007944 <extras_rd+0x204>)
 80077b2:	230e      	movs	r3, #14
 80077b4:	2207      	movs	r2, #7
 80077b6:	f00b fceb 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 80077ba:	2002      	movs	r0, #2
 80077bc:	f006 fa62 	bl	800dc84 <HAL_Delay>
//	HAL_UART_Transmit(&huart3,RxBuff,12,0x20);
	if(RxFlag)
 80077c0:	4b61      	ldr	r3, [pc, #388]	@ (8007948 <extras_rd+0x208>)
 80077c2:	781b      	ldrb	r3, [r3, #0]
 80077c4:	2b00      	cmp	r3, #0
 80077c6:	d021      	beq.n	800780c <extras_rd+0xcc>
	{
		RxFlag = FALSE;
 80077c8:	4b5f      	ldr	r3, [pc, #380]	@ (8007948 <extras_rd+0x208>)
 80077ca:	2200      	movs	r2, #0
 80077cc:	701a      	strb	r2, [r3, #0]
		unsigned char buffer2[2] = {0};
 80077ce:	1d3b      	adds	r3, r7, #4
 80077d0:	2200      	movs	r2, #0
 80077d2:	801a      	strh	r2, [r3, #0]
		buffer2[0] = RxBuff[7];
 80077d4:	4b5d      	ldr	r3, [pc, #372]	@ (800794c <extras_rd+0x20c>)
 80077d6:	79da      	ldrb	r2, [r3, #7]
 80077d8:	1d3b      	adds	r3, r7, #4
 80077da:	701a      	strb	r2, [r3, #0]
		buffer2[1] = RxBuff[8];
 80077dc:	4b5b      	ldr	r3, [pc, #364]	@ (800794c <extras_rd+0x20c>)
 80077de:	7a1a      	ldrb	r2, [r3, #8]
 80077e0:	1d3b      	adds	r3, r7, #4
 80077e2:	705a      	strb	r2, [r3, #1]
		Plus_1 = byte_to_long(buffer2);
 80077e4:	1d3b      	adds	r3, r7, #4
 80077e6:	0018      	movs	r0, r3
 80077e8:	f000 fb50 	bl	8007e8c <byte_to_long>
 80077ec:	0003      	movs	r3, r0
 80077ee:	b29a      	uxth	r2, r3
 80077f0:	4b59      	ldr	r3, [pc, #356]	@ (8007958 <extras_rd+0x218>)
 80077f2:	801a      	strh	r2, [r3, #0]
		memset(RxBuff,0,12);
 80077f4:	4b55      	ldr	r3, [pc, #340]	@ (800794c <extras_rd+0x20c>)
 80077f6:	220c      	movs	r2, #12
 80077f8:	2100      	movs	r1, #0
 80077fa:	0018      	movs	r0, r3
 80077fc:	f011 fa28 	bl	8018c50 <memset>
		memset(buffer2,0,2);
 8007800:	1d3b      	adds	r3, r7, #4
 8007802:	2202      	movs	r2, #2
 8007804:	2100      	movs	r1, #0
 8007806:	0018      	movs	r0, r3
 8007808:	f011 fa22 	bl	8018c50 <memset>
	}

	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Clear, 7, 0x0E);
 800780c:	4953      	ldr	r1, [pc, #332]	@ (800795c <extras_rd+0x21c>)
 800780e:	484d      	ldr	r0, [pc, #308]	@ (8007944 <extras_rd+0x204>)
 8007810:	230e      	movs	r3, #14
 8007812:	2207      	movs	r2, #7
 8007814:	f00b fcbc 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8007818:	2002      	movs	r0, #2
 800781a:	f006 fa33 	bl	800dc84 <HAL_Delay>
//	HAL_UART_Transmit(&huart3,RxBuff,12,0x20);
	if(RxFlag)
 800781e:	4b4a      	ldr	r3, [pc, #296]	@ (8007948 <extras_rd+0x208>)
 8007820:	781b      	ldrb	r3, [r3, #0]
 8007822:	2b00      	cmp	r3, #0
 8007824:	d04f      	beq.n	80078c6 <extras_rd+0x186>
	{
		RxFlag = FALSE;
 8007826:	4b48      	ldr	r3, [pc, #288]	@ (8007948 <extras_rd+0x208>)
 8007828:	2200      	movs	r2, #0
 800782a:	701a      	strb	r2, [r3, #0]
		if(RxBuff[8] == 0x01)
 800782c:	4b47      	ldr	r3, [pc, #284]	@ (800794c <extras_rd+0x20c>)
 800782e:	7a1b      	ldrb	r3, [r3, #8]
 8007830:	2b01      	cmp	r3, #1
 8007832:	d148      	bne.n	80078c6 <extras_rd+0x186>
		{
//			HAL_UART_Transmit(&huart3,RxBuff,12,0x20);
			HAL_UART_Transmit(&huart1,Clear_clear,8,0x10);
 8007834:	494a      	ldr	r1, [pc, #296]	@ (8007960 <extras_rd+0x220>)
 8007836:	4843      	ldr	r0, [pc, #268]	@ (8007944 <extras_rd+0x204>)
 8007838:	2310      	movs	r3, #16
 800783a:	2208      	movs	r2, #8
 800783c:	f00b fca8 	bl	8013190 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart1, Plus10_clear, 8, 0x10);
 8007840:	4948      	ldr	r1, [pc, #288]	@ (8007964 <extras_rd+0x224>)
 8007842:	4840      	ldr	r0, [pc, #256]	@ (8007944 <extras_rd+0x204>)
 8007844:	2310      	movs	r3, #16
 8007846:	2208      	movs	r2, #8
 8007848:	f00b fca2 	bl	8013190 <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart1, Plus1_clear, 8, 0x10);
 800784c:	4946      	ldr	r1, [pc, #280]	@ (8007968 <extras_rd+0x228>)
 800784e:	483d      	ldr	r0, [pc, #244]	@ (8007944 <extras_rd+0x204>)
 8007850:	2310      	movs	r3, #16
 8007852:	2208      	movs	r2, #8
 8007854:	f00b fc9c 	bl	8013190 <HAL_UART_Transmit>
			Addition = 0;
 8007858:	4b37      	ldr	r3, [pc, #220]	@ (8007938 <extras_rd+0x1f8>)
 800785a:	2200      	movs	r2, #0
 800785c:	601a      	str	r2, [r3, #0]
			Plus_10 = 0;
 800785e:	4b3c      	ldr	r3, [pc, #240]	@ (8007950 <extras_rd+0x210>)
 8007860:	2200      	movs	r2, #0
 8007862:	801a      	strh	r2, [r3, #0]
			Plus_1 = 0;
 8007864:	4b3c      	ldr	r3, [pc, #240]	@ (8007958 <extras_rd+0x218>)
 8007866:	2200      	movs	r2, #0
 8007868:	801a      	strh	r2, [r3, #0]
			//clear print sub[6]-[11]
			sub[6] = 0x20;
 800786a:	4b40      	ldr	r3, [pc, #256]	@ (800796c <extras_rd+0x22c>)
 800786c:	2220      	movs	r2, #32
 800786e:	719a      	strb	r2, [r3, #6]
			sub[7] = 0x20;
 8007870:	4b3e      	ldr	r3, [pc, #248]	@ (800796c <extras_rd+0x22c>)
 8007872:	2220      	movs	r2, #32
 8007874:	71da      	strb	r2, [r3, #7]
			sub[8] = 0x20;
 8007876:	4b3d      	ldr	r3, [pc, #244]	@ (800796c <extras_rd+0x22c>)
 8007878:	2220      	movs	r2, #32
 800787a:	721a      	strb	r2, [r3, #8]
			sub[9] = 0x20;
 800787c:	4b3b      	ldr	r3, [pc, #236]	@ (800796c <extras_rd+0x22c>)
 800787e:	2220      	movs	r2, #32
 8007880:	725a      	strb	r2, [r3, #9]
			sub[10] = 0x20;
 8007882:	4b3a      	ldr	r3, [pc, #232]	@ (800796c <extras_rd+0x22c>)
 8007884:	2220      	movs	r2, #32
 8007886:	729a      	strb	r2, [r3, #10]
			sub[11] = 0x30;
 8007888:	4b38      	ldr	r3, [pc, #224]	@ (800796c <extras_rd+0x22c>)
 800788a:	2230      	movs	r2, #48	@ 0x30
 800788c:	72da      	strb	r2, [r3, #11]
			//clear print total[4]-[8]
			t_fare[4] = 0x20;
 800788e:	4b38      	ldr	r3, [pc, #224]	@ (8007970 <extras_rd+0x230>)
 8007890:	2220      	movs	r2, #32
 8007892:	711a      	strb	r2, [r3, #4]
			t_fare[5] = 0x20;
 8007894:	4b36      	ldr	r3, [pc, #216]	@ (8007970 <extras_rd+0x230>)
 8007896:	2220      	movs	r2, #32
 8007898:	715a      	strb	r2, [r3, #5]
			t_fare[6] = 0x20;
 800789a:	4b35      	ldr	r3, [pc, #212]	@ (8007970 <extras_rd+0x230>)
 800789c:	2220      	movs	r2, #32
 800789e:	719a      	strb	r2, [r3, #6]
			t_fare[7] = 0x20;
 80078a0:	4b33      	ldr	r3, [pc, #204]	@ (8007970 <extras_rd+0x230>)
 80078a2:	2220      	movs	r2, #32
 80078a4:	71da      	strb	r2, [r3, #7]
			t_fare[8] = 0x20;
 80078a6:	4b32      	ldr	r3, [pc, #200]	@ (8007970 <extras_rd+0x230>)
 80078a8:	2220      	movs	r2, #32
 80078aa:	721a      	strb	r2, [r3, #8]
			uint8_t temp_array[4];
			Long_to_byte(Addition,temp_array);
 80078ac:	4b22      	ldr	r3, [pc, #136]	@ (8007938 <extras_rd+0x1f8>)
 80078ae:	681b      	ldr	r3, [r3, #0]
 80078b0:	003a      	movs	r2, r7
 80078b2:	0011      	movs	r1, r2
 80078b4:	0018      	movs	r0, r3
 80078b6:	f000 f9e3 	bl	8007c80 <Long_to_byte>
			HMI_Command(Add_Charge,temp_array,10);
 80078ba:	0039      	movs	r1, r7
 80078bc:	4b2d      	ldr	r3, [pc, #180]	@ (8007974 <extras_rd+0x234>)
 80078be:	220a      	movs	r2, #10
 80078c0:	0018      	movs	r0, r3
 80078c2:	f000 f9fc 	bl	8007cbe <HMI_Command>
		}
	}

	Addition = 10 * (10 * Plus_10 + Plus_1);
 80078c6:	4b22      	ldr	r3, [pc, #136]	@ (8007950 <extras_rd+0x210>)
 80078c8:	881b      	ldrh	r3, [r3, #0]
 80078ca:	001a      	movs	r2, r3
 80078cc:	0013      	movs	r3, r2
 80078ce:	009b      	lsls	r3, r3, #2
 80078d0:	189b      	adds	r3, r3, r2
 80078d2:	005b      	lsls	r3, r3, #1
 80078d4:	001a      	movs	r2, r3
 80078d6:	4b20      	ldr	r3, [pc, #128]	@ (8007958 <extras_rd+0x218>)
 80078d8:	881b      	ldrh	r3, [r3, #0]
 80078da:	18d2      	adds	r2, r2, r3
 80078dc:	0013      	movs	r3, r2
 80078de:	009b      	lsls	r3, r3, #2
 80078e0:	189b      	adds	r3, r3, r2
 80078e2:	005b      	lsls	r3, r3, #1
 80078e4:	001a      	movs	r2, r3
 80078e6:	4b14      	ldr	r3, [pc, #80]	@ (8007938 <extras_rd+0x1f8>)
 80078e8:	601a      	str	r2, [r3, #0]
	uint8_t temp_array[4];
	Long_to_byte(Addition,temp_array);
 80078ea:	4b13      	ldr	r3, [pc, #76]	@ (8007938 <extras_rd+0x1f8>)
 80078ec:	681b      	ldr	r3, [r3, #0]
 80078ee:	240c      	movs	r4, #12
 80078f0:	193a      	adds	r2, r7, r4
 80078f2:	0011      	movs	r1, r2
 80078f4:	0018      	movs	r0, r3
 80078f6:	f000 f9c3 	bl	8007c80 <Long_to_byte>
	HMI_Command(Add_Charge,temp_array,10);
 80078fa:	1939      	adds	r1, r7, r4
 80078fc:	4b1d      	ldr	r3, [pc, #116]	@ (8007974 <extras_rd+0x234>)
 80078fe:	220a      	movs	r2, #10
 8007900:	0018      	movs	r0, r3
 8007902:	f000 f9dc 	bl	8007cbe <HMI_Command>

	if(Last_Addition != Addition)
 8007906:	4b0d      	ldr	r3, [pc, #52]	@ (800793c <extras_rd+0x1fc>)
 8007908:	681a      	ldr	r2, [r3, #0]
 800790a:	4b0b      	ldr	r3, [pc, #44]	@ (8007938 <extras_rd+0x1f8>)
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	429a      	cmp	r2, r3
 8007910:	d002      	beq.n	8007918 <extras_rd+0x1d8>
	{
		Flag_Addition_Add = TRUE;
 8007912:	4b19      	ldr	r3, [pc, #100]	@ (8007978 <extras_rd+0x238>)
 8007914:	2201      	movs	r2, #1
 8007916:	701a      	strb	r2, [r3, #0]
	}

	if((Addition != 0) && (Flag_Addition_Add == FALSE))
 8007918:	4b07      	ldr	r3, [pc, #28]	@ (8007938 <extras_rd+0x1f8>)
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	2b00      	cmp	r3, #0
 800791e:	d006      	beq.n	800792e <extras_rd+0x1ee>
 8007920:	4b15      	ldr	r3, [pc, #84]	@ (8007978 <extras_rd+0x238>)
 8007922:	781b      	ldrb	r3, [r3, #0]
 8007924:	2b00      	cmp	r3, #0
 8007926:	d102      	bne.n	800792e <extras_rd+0x1ee>
	{
		Flag_Addition_F = TRUE;
 8007928:	4b14      	ldr	r3, [pc, #80]	@ (800797c <extras_rd+0x23c>)
 800792a:	2201      	movs	r2, #1
 800792c:	701a      	strb	r2, [r3, #0]
	}
}
 800792e:	46c0      	nop			@ (mov r8, r8)
 8007930:	46bd      	mov	sp, r7
 8007932:	b005      	add	sp, #20
 8007934:	bd90      	pop	{r4, r7, pc}
 8007936:	46c0      	nop			@ (mov r8, r8)
 8007938:	20000a6c 	.word	0x20000a6c
 800793c:	20000a68 	.word	0x20000a68
 8007940:	08019f08 	.word	0x08019f08
 8007944:	20000658 	.word	0x20000658
 8007948:	20000a3c 	.word	0x20000a3c
 800794c:	20000a40 	.word	0x20000a40
 8007950:	20000a74 	.word	0x20000a74
 8007954:	08019f10 	.word	0x08019f10
 8007958:	20000a76 	.word	0x20000a76
 800795c:	08019f18 	.word	0x08019f18
 8007960:	2000004c 	.word	0x2000004c
 8007964:	20000034 	.word	0x20000034
 8007968:	2000003c 	.word	0x2000003c
 800796c:	2000020c 	.word	0x2000020c
 8007970:	2000021c 	.word	0x2000021c
 8007974:	08019ee4 	.word	0x08019ee4
 8007978:	20000a70 	.word	0x20000a70
 800797c:	20000a71 	.word	0x20000a71

08007980 <printer_rd>:

void printer_rd(void)
{
 8007980:	b580      	push	{r7, lr}
 8007982:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Print, 7, 0x0E);
 8007984:	495e      	ldr	r1, [pc, #376]	@ (8007b00 <printer_rd+0x180>)
 8007986:	485f      	ldr	r0, [pc, #380]	@ (8007b04 <printer_rd+0x184>)
 8007988:	230e      	movs	r3, #14
 800798a:	2207      	movs	r2, #7
 800798c:	f00b fc00 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8007990:	2002      	movs	r0, #2
 8007992:	f006 f977 	bl	800dc84 <HAL_Delay>
	if(RxFlag)
 8007996:	4b5c      	ldr	r3, [pc, #368]	@ (8007b08 <printer_rd+0x188>)
 8007998:	781b      	ldrb	r3, [r3, #0]
 800799a:	2b00      	cmp	r3, #0
 800799c:	d100      	bne.n	80079a0 <printer_rd+0x20>
 800799e:	e0ac      	b.n	8007afa <printer_rd+0x17a>
	{
		RxFlag = FALSE;
 80079a0:	4b59      	ldr	r3, [pc, #356]	@ (8007b08 <printer_rd+0x188>)
 80079a2:	2200      	movs	r2, #0
 80079a4:	701a      	strb	r2, [r3, #0]
		if(RxBuff[8] == 0x01)
 80079a6:	4b59      	ldr	r3, [pc, #356]	@ (8007b0c <printer_rd+0x18c>)
 80079a8:	7a1b      	ldrb	r3, [r3, #8]
 80079aa:	2b01      	cmp	r3, #1
 80079ac:	d000      	beq.n	80079b0 <printer_rd+0x30>
 80079ae:	e0a4      	b.n	8007afa <printer_rd+0x17a>
		{
//			HAL_UART_Transmit(&huart3,RxBuff,12,0x20);
			HAL_UART_Transmit(&huart1, (uint8_t *) Print_clear, 8, 0x10);
 80079b0:	4957      	ldr	r1, [pc, #348]	@ (8007b10 <printer_rd+0x190>)
 80079b2:	4854      	ldr	r0, [pc, #336]	@ (8007b04 <printer_rd+0x184>)
 80079b4:	2310      	movs	r3, #16
 80079b6:	2208      	movs	r2, #8
 80079b8:	f00b fbea 	bl	8013190 <HAL_UART_Transmit>
			Flag_Printed = TRUE;
 80079bc:	4b55      	ldr	r3, [pc, #340]	@ (8007b14 <printer_rd+0x194>)
 80079be:	2201      	movs	r2, #1
 80079c0:	701a      	strb	r2, [r3, #0]

			//record printer end time
			if((Drv_state == S_STOP) & Flag_Printed & Flag_End_Record)
 80079c2:	4b55      	ldr	r3, [pc, #340]	@ (8007b18 <printer_rd+0x198>)
 80079c4:	781b      	ldrb	r3, [r3, #0]
 80079c6:	3b02      	subs	r3, #2
 80079c8:	425a      	negs	r2, r3
 80079ca:	4153      	adcs	r3, r2
 80079cc:	b2db      	uxtb	r3, r3
 80079ce:	001a      	movs	r2, r3
 80079d0:	4b50      	ldr	r3, [pc, #320]	@ (8007b14 <printer_rd+0x194>)
 80079d2:	781b      	ldrb	r3, [r3, #0]
 80079d4:	4013      	ands	r3, r2
 80079d6:	4a51      	ldr	r2, [pc, #324]	@ (8007b1c <printer_rd+0x19c>)
 80079d8:	7812      	ldrb	r2, [r2, #0]
 80079da:	4013      	ands	r3, r2
 80079dc:	d100      	bne.n	80079e0 <printer_rd+0x60>
 80079de:	e087      	b.n	8007af0 <printer_rd+0x170>
			{
				Flag_End_Record = FALSE;
 80079e0:	4b4e      	ldr	r3, [pc, #312]	@ (8007b1c <printer_rd+0x19c>)
 80079e2:	2200      	movs	r2, #0
 80079e4:	701a      	strb	r2, [r3, #0]
				//get end time
				//end - dd/mm/yy hh:mm
				//hmi_rtc - yy-mm-dd hh:mm:ss
				if (flag_vs_first == 1)
 80079e6:	4b4e      	ldr	r3, [pc, #312]	@ (8007b20 <printer_rd+0x1a0>)
 80079e8:	781b      	ldrb	r3, [r3, #0]
 80079ea:	2b01      	cmp	r3, #1
 80079ec:	d12b      	bne.n	8007a46 <printer_rd+0xc6>
				{
					flag_vs_first = 0;
 80079ee:	4b4c      	ldr	r3, [pc, #304]	@ (8007b20 <printer_rd+0x1a0>)
 80079f0:	2200      	movs	r2, #0
 80079f2:	701a      	strb	r2, [r3, #0]
					end[0] = start[0];
 80079f4:	4b4b      	ldr	r3, [pc, #300]	@ (8007b24 <printer_rd+0x1a4>)
 80079f6:	781a      	ldrb	r2, [r3, #0]
 80079f8:	4b4b      	ldr	r3, [pc, #300]	@ (8007b28 <printer_rd+0x1a8>)
 80079fa:	701a      	strb	r2, [r3, #0]
					end[1] = start[1];
 80079fc:	4b49      	ldr	r3, [pc, #292]	@ (8007b24 <printer_rd+0x1a4>)
 80079fe:	785a      	ldrb	r2, [r3, #1]
 8007a00:	4b49      	ldr	r3, [pc, #292]	@ (8007b28 <printer_rd+0x1a8>)
 8007a02:	705a      	strb	r2, [r3, #1]
					end[3] = start[3];
 8007a04:	4b47      	ldr	r3, [pc, #284]	@ (8007b24 <printer_rd+0x1a4>)
 8007a06:	78da      	ldrb	r2, [r3, #3]
 8007a08:	4b47      	ldr	r3, [pc, #284]	@ (8007b28 <printer_rd+0x1a8>)
 8007a0a:	70da      	strb	r2, [r3, #3]
					end[4] = start[4];
 8007a0c:	4b45      	ldr	r3, [pc, #276]	@ (8007b24 <printer_rd+0x1a4>)
 8007a0e:	791a      	ldrb	r2, [r3, #4]
 8007a10:	4b45      	ldr	r3, [pc, #276]	@ (8007b28 <printer_rd+0x1a8>)
 8007a12:	711a      	strb	r2, [r3, #4]
					end[6] = start[6];
 8007a14:	4b43      	ldr	r3, [pc, #268]	@ (8007b24 <printer_rd+0x1a4>)
 8007a16:	799a      	ldrb	r2, [r3, #6]
 8007a18:	4b43      	ldr	r3, [pc, #268]	@ (8007b28 <printer_rd+0x1a8>)
 8007a1a:	719a      	strb	r2, [r3, #6]
					end[7] = start[7];
 8007a1c:	4b41      	ldr	r3, [pc, #260]	@ (8007b24 <printer_rd+0x1a4>)
 8007a1e:	79da      	ldrb	r2, [r3, #7]
 8007a20:	4b41      	ldr	r3, [pc, #260]	@ (8007b28 <printer_rd+0x1a8>)
 8007a22:	71da      	strb	r2, [r3, #7]
					end[9] = start[9];
 8007a24:	4b3f      	ldr	r3, [pc, #252]	@ (8007b24 <printer_rd+0x1a4>)
 8007a26:	7a5a      	ldrb	r2, [r3, #9]
 8007a28:	4b3f      	ldr	r3, [pc, #252]	@ (8007b28 <printer_rd+0x1a8>)
 8007a2a:	725a      	strb	r2, [r3, #9]
					end[10] = start[10];
 8007a2c:	4b3d      	ldr	r3, [pc, #244]	@ (8007b24 <printer_rd+0x1a4>)
 8007a2e:	7a9a      	ldrb	r2, [r3, #10]
 8007a30:	4b3d      	ldr	r3, [pc, #244]	@ (8007b28 <printer_rd+0x1a8>)
 8007a32:	729a      	strb	r2, [r3, #10]
					end[12] = start[12];
 8007a34:	4b3b      	ldr	r3, [pc, #236]	@ (8007b24 <printer_rd+0x1a4>)
 8007a36:	7b1a      	ldrb	r2, [r3, #12]
 8007a38:	4b3b      	ldr	r3, [pc, #236]	@ (8007b28 <printer_rd+0x1a8>)
 8007a3a:	731a      	strb	r2, [r3, #12]
					end[13] = start[13];
 8007a3c:	4b39      	ldr	r3, [pc, #228]	@ (8007b24 <printer_rd+0x1a4>)
 8007a3e:	7b5a      	ldrb	r2, [r3, #13]
 8007a40:	4b39      	ldr	r3, [pc, #228]	@ (8007b28 <printer_rd+0x1a8>)
 8007a42:	735a      	strb	r2, [r3, #13]
 8007a44:	e054      	b.n	8007af0 <printer_rd+0x170>
				}
				else if (flag_vs == 0)
 8007a46:	4b39      	ldr	r3, [pc, #228]	@ (8007b2c <printer_rd+0x1ac>)
 8007a48:	781b      	ldrb	r3, [r3, #0]
 8007a4a:	2b00      	cmp	r3, #0
 8007a4c:	d128      	bne.n	8007aa0 <printer_rd+0x120>
				{
					//record re-stop start moment
					end[0] = re_stop[0];
 8007a4e:	4b38      	ldr	r3, [pc, #224]	@ (8007b30 <printer_rd+0x1b0>)
 8007a50:	781a      	ldrb	r2, [r3, #0]
 8007a52:	4b35      	ldr	r3, [pc, #212]	@ (8007b28 <printer_rd+0x1a8>)
 8007a54:	701a      	strb	r2, [r3, #0]
					end[1] = re_stop[1];
 8007a56:	4b36      	ldr	r3, [pc, #216]	@ (8007b30 <printer_rd+0x1b0>)
 8007a58:	785a      	ldrb	r2, [r3, #1]
 8007a5a:	4b33      	ldr	r3, [pc, #204]	@ (8007b28 <printer_rd+0x1a8>)
 8007a5c:	705a      	strb	r2, [r3, #1]
					end[3] = re_stop[3];
 8007a5e:	4b34      	ldr	r3, [pc, #208]	@ (8007b30 <printer_rd+0x1b0>)
 8007a60:	78da      	ldrb	r2, [r3, #3]
 8007a62:	4b31      	ldr	r3, [pc, #196]	@ (8007b28 <printer_rd+0x1a8>)
 8007a64:	70da      	strb	r2, [r3, #3]
					end[4] = re_stop[4];
 8007a66:	4b32      	ldr	r3, [pc, #200]	@ (8007b30 <printer_rd+0x1b0>)
 8007a68:	791a      	ldrb	r2, [r3, #4]
 8007a6a:	4b2f      	ldr	r3, [pc, #188]	@ (8007b28 <printer_rd+0x1a8>)
 8007a6c:	711a      	strb	r2, [r3, #4]
					end[6] = re_stop[6];
 8007a6e:	4b30      	ldr	r3, [pc, #192]	@ (8007b30 <printer_rd+0x1b0>)
 8007a70:	799a      	ldrb	r2, [r3, #6]
 8007a72:	4b2d      	ldr	r3, [pc, #180]	@ (8007b28 <printer_rd+0x1a8>)
 8007a74:	719a      	strb	r2, [r3, #6]
					end[7] = re_stop[7];
 8007a76:	4b2e      	ldr	r3, [pc, #184]	@ (8007b30 <printer_rd+0x1b0>)
 8007a78:	79da      	ldrb	r2, [r3, #7]
 8007a7a:	4b2b      	ldr	r3, [pc, #172]	@ (8007b28 <printer_rd+0x1a8>)
 8007a7c:	71da      	strb	r2, [r3, #7]
					end[9] = re_stop[9];
 8007a7e:	4b2c      	ldr	r3, [pc, #176]	@ (8007b30 <printer_rd+0x1b0>)
 8007a80:	7a5a      	ldrb	r2, [r3, #9]
 8007a82:	4b29      	ldr	r3, [pc, #164]	@ (8007b28 <printer_rd+0x1a8>)
 8007a84:	725a      	strb	r2, [r3, #9]
					end[10] = re_stop[10];
 8007a86:	4b2a      	ldr	r3, [pc, #168]	@ (8007b30 <printer_rd+0x1b0>)
 8007a88:	7a9a      	ldrb	r2, [r3, #10]
 8007a8a:	4b27      	ldr	r3, [pc, #156]	@ (8007b28 <printer_rd+0x1a8>)
 8007a8c:	729a      	strb	r2, [r3, #10]
					end[12] = re_stop[12];
 8007a8e:	4b28      	ldr	r3, [pc, #160]	@ (8007b30 <printer_rd+0x1b0>)
 8007a90:	7b1a      	ldrb	r2, [r3, #12]
 8007a92:	4b25      	ldr	r3, [pc, #148]	@ (8007b28 <printer_rd+0x1a8>)
 8007a94:	731a      	strb	r2, [r3, #12]
					end[13] = re_stop[13];
 8007a96:	4b26      	ldr	r3, [pc, #152]	@ (8007b30 <printer_rd+0x1b0>)
 8007a98:	7b5a      	ldrb	r2, [r3, #13]
 8007a9a:	4b23      	ldr	r3, [pc, #140]	@ (8007b28 <printer_rd+0x1a8>)
 8007a9c:	735a      	strb	r2, [r3, #13]
 8007a9e:	e027      	b.n	8007af0 <printer_rd+0x170>
				}
				else
				{
					end[0] = hmi_rtc[14];
 8007aa0:	4b24      	ldr	r3, [pc, #144]	@ (8007b34 <printer_rd+0x1b4>)
 8007aa2:	7b9a      	ldrb	r2, [r3, #14]
 8007aa4:	4b20      	ldr	r3, [pc, #128]	@ (8007b28 <printer_rd+0x1a8>)
 8007aa6:	701a      	strb	r2, [r3, #0]
					end[1] = hmi_rtc[15];
 8007aa8:	4b22      	ldr	r3, [pc, #136]	@ (8007b34 <printer_rd+0x1b4>)
 8007aaa:	7bda      	ldrb	r2, [r3, #15]
 8007aac:	4b1e      	ldr	r3, [pc, #120]	@ (8007b28 <printer_rd+0x1a8>)
 8007aae:	705a      	strb	r2, [r3, #1]
					end[3] = hmi_rtc[11];
 8007ab0:	4b20      	ldr	r3, [pc, #128]	@ (8007b34 <printer_rd+0x1b4>)
 8007ab2:	7ada      	ldrb	r2, [r3, #11]
 8007ab4:	4b1c      	ldr	r3, [pc, #112]	@ (8007b28 <printer_rd+0x1a8>)
 8007ab6:	70da      	strb	r2, [r3, #3]
					end[4] = hmi_rtc[12];
 8007ab8:	4b1e      	ldr	r3, [pc, #120]	@ (8007b34 <printer_rd+0x1b4>)
 8007aba:	7b1a      	ldrb	r2, [r3, #12]
 8007abc:	4b1a      	ldr	r3, [pc, #104]	@ (8007b28 <printer_rd+0x1a8>)
 8007abe:	711a      	strb	r2, [r3, #4]
					end[6] = hmi_rtc[8];
 8007ac0:	4b1c      	ldr	r3, [pc, #112]	@ (8007b34 <printer_rd+0x1b4>)
 8007ac2:	7a1a      	ldrb	r2, [r3, #8]
 8007ac4:	4b18      	ldr	r3, [pc, #96]	@ (8007b28 <printer_rd+0x1a8>)
 8007ac6:	719a      	strb	r2, [r3, #6]
					end[7] = hmi_rtc[9];
 8007ac8:	4b1a      	ldr	r3, [pc, #104]	@ (8007b34 <printer_rd+0x1b4>)
 8007aca:	7a5a      	ldrb	r2, [r3, #9]
 8007acc:	4b16      	ldr	r3, [pc, #88]	@ (8007b28 <printer_rd+0x1a8>)
 8007ace:	71da      	strb	r2, [r3, #7]
					end[9] = hmi_rtc[17];
 8007ad0:	4b18      	ldr	r3, [pc, #96]	@ (8007b34 <printer_rd+0x1b4>)
 8007ad2:	7c5a      	ldrb	r2, [r3, #17]
 8007ad4:	4b14      	ldr	r3, [pc, #80]	@ (8007b28 <printer_rd+0x1a8>)
 8007ad6:	725a      	strb	r2, [r3, #9]
					end[10] = hmi_rtc[18];
 8007ad8:	4b16      	ldr	r3, [pc, #88]	@ (8007b34 <printer_rd+0x1b4>)
 8007ada:	7c9a      	ldrb	r2, [r3, #18]
 8007adc:	4b12      	ldr	r3, [pc, #72]	@ (8007b28 <printer_rd+0x1a8>)
 8007ade:	729a      	strb	r2, [r3, #10]
					end[12] = hmi_rtc[20];
 8007ae0:	4b14      	ldr	r3, [pc, #80]	@ (8007b34 <printer_rd+0x1b4>)
 8007ae2:	7d1a      	ldrb	r2, [r3, #20]
 8007ae4:	4b10      	ldr	r3, [pc, #64]	@ (8007b28 <printer_rd+0x1a8>)
 8007ae6:	731a      	strb	r2, [r3, #12]
					end[13] = hmi_rtc[21];
 8007ae8:	4b12      	ldr	r3, [pc, #72]	@ (8007b34 <printer_rd+0x1b4>)
 8007aea:	7d5a      	ldrb	r2, [r3, #21]
 8007aec:	4b0e      	ldr	r3, [pc, #56]	@ (8007b28 <printer_rd+0x1a8>)
 8007aee:	735a      	strb	r2, [r3, #13]
				}
			}

			printer_process();
 8007af0:	f000 fbd4 	bl	800829c <printer_process>
			//printer_e(); //test
			Flag_Printed = FALSE;
 8007af4:	4b07      	ldr	r3, [pc, #28]	@ (8007b14 <printer_rd+0x194>)
 8007af6:	2200      	movs	r2, #0
 8007af8:	701a      	strb	r2, [r3, #0]
		}
	}
}
 8007afa:	46c0      	nop			@ (mov r8, r8)
 8007afc:	46bd      	mov	sp, r7
 8007afe:	bd80      	pop	{r7, pc}
 8007b00:	08019f20 	.word	0x08019f20
 8007b04:	20000658 	.word	0x20000658
 8007b08:	20000a3c 	.word	0x20000a3c
 8007b0c:	20000a40 	.word	0x20000a40
 8007b10:	20000044 	.word	0x20000044
 8007b14:	20000b21 	.word	0x20000b21
 8007b18:	20000a72 	.word	0x20000a72
 8007b1c:	2000022a 	.word	0x2000022a
 8007b20:	20000b23 	.word	0x20000b23
 8007b24:	200001ac 	.word	0x200001ac
 8007b28:	200001bc 	.word	0x200001bc
 8007b2c:	20000b22 	.word	0x20000b22
 8007b30:	200001cc 	.word	0x200001cc
 8007b34:	2000007c 	.word	0x2000007c

08007b38 <check_rd>:

void check_rd(void)
{
 8007b38:	b580      	push	{r7, lr}
 8007b3a:	af00      	add	r7, sp, #0
	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Plus10, 7, 0x0E);
 8007b3c:	490c      	ldr	r1, [pc, #48]	@ (8007b70 <check_rd+0x38>)
 8007b3e:	480d      	ldr	r0, [pc, #52]	@ (8007b74 <check_rd+0x3c>)
 8007b40:	230e      	movs	r3, #14
 8007b42:	2207      	movs	r2, #7
 8007b44:	f00b fb24 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8007b48:	2002      	movs	r0, #2
 8007b4a:	f006 f89b 	bl	800dc84 <HAL_Delay>
	if(RxFlag)
 8007b4e:	4b0a      	ldr	r3, [pc, #40]	@ (8007b78 <check_rd+0x40>)
 8007b50:	781b      	ldrb	r3, [r3, #0]
 8007b52:	2b00      	cmp	r3, #0
 8007b54:	d008      	beq.n	8007b68 <check_rd+0x30>
	{
		RxFlag = FALSE;
 8007b56:	4b08      	ldr	r3, [pc, #32]	@ (8007b78 <check_rd+0x40>)
 8007b58:	2200      	movs	r2, #0
 8007b5a:	701a      	strb	r2, [r3, #0]
		if(RxBuff[8] == 0x01)
 8007b5c:	4b07      	ldr	r3, [pc, #28]	@ (8007b7c <check_rd+0x44>)
 8007b5e:	7a1b      	ldrb	r3, [r3, #8]
 8007b60:	2b01      	cmp	r3, #1
 8007b62:	d101      	bne.n	8007b68 <check_rd+0x30>
		{
			printer_e(); //test
 8007b64:	f000 fd3e 	bl	80085e4 <printer_e>
		}
	}
}
 8007b68:	46c0      	nop			@ (mov r8, r8)
 8007b6a:	46bd      	mov	sp, r7
 8007b6c:	bd80      	pop	{r7, pc}
 8007b6e:	46c0      	nop			@ (mov r8, r8)
 8007b70:	08019f08 	.word	0x08019f08
 8007b74:	20000658 	.word	0x20000658
 8007b78:	20000a3c 	.word	0x20000a3c
 8007b7c:	20000a40 	.word	0x20000a40

08007b80 <clear_rd>:

void clear_rd(void)
{
 8007b80:	b580      	push	{r7, lr}
 8007b82:	af00      	add	r7, sp, #0
	// clear everyday info
	HAL_UART_Transmit(&huart1, (uint8_t *) RD_Plus1, 7, 0x0E);
 8007b84:	4934      	ldr	r1, [pc, #208]	@ (8007c58 <clear_rd+0xd8>)
 8007b86:	4835      	ldr	r0, [pc, #212]	@ (8007c5c <clear_rd+0xdc>)
 8007b88:	230e      	movs	r3, #14
 8007b8a:	2207      	movs	r2, #7
 8007b8c:	f00b fb00 	bl	8013190 <HAL_UART_Transmit>
	HAL_Delay(2);
 8007b90:	2002      	movs	r0, #2
 8007b92:	f006 f877 	bl	800dc84 <HAL_Delay>
	if(RxFlag)
 8007b96:	4b32      	ldr	r3, [pc, #200]	@ (8007c60 <clear_rd+0xe0>)
 8007b98:	781b      	ldrb	r3, [r3, #0]
 8007b9a:	2b00      	cmp	r3, #0
 8007b9c:	d059      	beq.n	8007c52 <clear_rd+0xd2>
	{
		RxFlag = FALSE;
 8007b9e:	4b30      	ldr	r3, [pc, #192]	@ (8007c60 <clear_rd+0xe0>)
 8007ba0:	2200      	movs	r2, #0
 8007ba2:	701a      	strb	r2, [r3, #0]
		if(RxBuff[8] == 0x01)
 8007ba4:	4b2f      	ldr	r3, [pc, #188]	@ (8007c64 <clear_rd+0xe4>)
 8007ba6:	7a1b      	ldrb	r3, [r3, #8]
 8007ba8:	2b01      	cmp	r3, #1
 8007baa:	d152      	bne.n	8007c52 <clear_rd+0xd2>
		{
			cflag_d = 0;
 8007bac:	4b2e      	ldr	r3, [pc, #184]	@ (8007c68 <clear_rd+0xe8>)
 8007bae:	2200      	movs	r2, #0
 8007bb0:	601a      	str	r2, [r3, #0]
			cfare_d = 0;
 8007bb2:	4b2e      	ldr	r3, [pc, #184]	@ (8007c6c <clear_rd+0xec>)
 8007bb4:	2200      	movs	r2, #0
 8007bb6:	601a      	str	r2, [r3, #0]
			csub_d = 0;
 8007bb8:	4b2d      	ldr	r3, [pc, #180]	@ (8007c70 <clear_rd+0xf0>)
 8007bba:	2200      	movs	r2, #0
 8007bbc:	601a      	str	r2, [r3, #0]

			cflag[0] = 0x30;
 8007bbe:	4b2d      	ldr	r3, [pc, #180]	@ (8007c74 <clear_rd+0xf4>)
 8007bc0:	2230      	movs	r2, #48	@ 0x30
 8007bc2:	701a      	strb	r2, [r3, #0]
			cflag[1] = 0x30;
 8007bc4:	4b2b      	ldr	r3, [pc, #172]	@ (8007c74 <clear_rd+0xf4>)
 8007bc6:	2230      	movs	r2, #48	@ 0x30
 8007bc8:	705a      	strb	r2, [r3, #1]
			cflag[2] = 0x30;
 8007bca:	4b2a      	ldr	r3, [pc, #168]	@ (8007c74 <clear_rd+0xf4>)
 8007bcc:	2230      	movs	r2, #48	@ 0x30
 8007bce:	709a      	strb	r2, [r3, #2]
			cflag[3] = 0x30;
 8007bd0:	4b28      	ldr	r3, [pc, #160]	@ (8007c74 <clear_rd+0xf4>)
 8007bd2:	2230      	movs	r2, #48	@ 0x30
 8007bd4:	70da      	strb	r2, [r3, #3]
			cflag[4] = 0x30;
 8007bd6:	4b27      	ldr	r3, [pc, #156]	@ (8007c74 <clear_rd+0xf4>)
 8007bd8:	2230      	movs	r2, #48	@ 0x30
 8007bda:	711a      	strb	r2, [r3, #4]
			cflag[5] = 0x30;
 8007bdc:	4b25      	ldr	r3, [pc, #148]	@ (8007c74 <clear_rd+0xf4>)
 8007bde:	2230      	movs	r2, #48	@ 0x30
 8007be0:	715a      	strb	r2, [r3, #5]
			cflag[6] = 0x30;
 8007be2:	4b24      	ldr	r3, [pc, #144]	@ (8007c74 <clear_rd+0xf4>)
 8007be4:	2230      	movs	r2, #48	@ 0x30
 8007be6:	719a      	strb	r2, [r3, #6]
			cflag[7] = 0x30;
 8007be8:	4b22      	ldr	r3, [pc, #136]	@ (8007c74 <clear_rd+0xf4>)
 8007bea:	2230      	movs	r2, #48	@ 0x30
 8007bec:	71da      	strb	r2, [r3, #7]

			cfare[0] = 0x30;
 8007bee:	4b22      	ldr	r3, [pc, #136]	@ (8007c78 <clear_rd+0xf8>)
 8007bf0:	2230      	movs	r2, #48	@ 0x30
 8007bf2:	701a      	strb	r2, [r3, #0]
			cfare[1] = 0x30;
 8007bf4:	4b20      	ldr	r3, [pc, #128]	@ (8007c78 <clear_rd+0xf8>)
 8007bf6:	2230      	movs	r2, #48	@ 0x30
 8007bf8:	705a      	strb	r2, [r3, #1]
			cfare[2] = 0x30;
 8007bfa:	4b1f      	ldr	r3, [pc, #124]	@ (8007c78 <clear_rd+0xf8>)
 8007bfc:	2230      	movs	r2, #48	@ 0x30
 8007bfe:	709a      	strb	r2, [r3, #2]
			cfare[3] = 0x30;
 8007c00:	4b1d      	ldr	r3, [pc, #116]	@ (8007c78 <clear_rd+0xf8>)
 8007c02:	2230      	movs	r2, #48	@ 0x30
 8007c04:	70da      	strb	r2, [r3, #3]
			cfare[4] = 0x30;
 8007c06:	4b1c      	ldr	r3, [pc, #112]	@ (8007c78 <clear_rd+0xf8>)
 8007c08:	2230      	movs	r2, #48	@ 0x30
 8007c0a:	711a      	strb	r2, [r3, #4]
			cfare[5] = 0x30;
 8007c0c:	4b1a      	ldr	r3, [pc, #104]	@ (8007c78 <clear_rd+0xf8>)
 8007c0e:	2230      	movs	r2, #48	@ 0x30
 8007c10:	715a      	strb	r2, [r3, #5]
			cfare[6] = 0x30;
 8007c12:	4b19      	ldr	r3, [pc, #100]	@ (8007c78 <clear_rd+0xf8>)
 8007c14:	2230      	movs	r2, #48	@ 0x30
 8007c16:	719a      	strb	r2, [r3, #6]
			cfare[7] = 0x30;
 8007c18:	4b17      	ldr	r3, [pc, #92]	@ (8007c78 <clear_rd+0xf8>)
 8007c1a:	2230      	movs	r2, #48	@ 0x30
 8007c1c:	71da      	strb	r2, [r3, #7]

			csub[0] = 0x30;
 8007c1e:	4b17      	ldr	r3, [pc, #92]	@ (8007c7c <clear_rd+0xfc>)
 8007c20:	2230      	movs	r2, #48	@ 0x30
 8007c22:	701a      	strb	r2, [r3, #0]
			csub[1] = 0x30;
 8007c24:	4b15      	ldr	r3, [pc, #84]	@ (8007c7c <clear_rd+0xfc>)
 8007c26:	2230      	movs	r2, #48	@ 0x30
 8007c28:	705a      	strb	r2, [r3, #1]
			csub[2] = 0x30;
 8007c2a:	4b14      	ldr	r3, [pc, #80]	@ (8007c7c <clear_rd+0xfc>)
 8007c2c:	2230      	movs	r2, #48	@ 0x30
 8007c2e:	709a      	strb	r2, [r3, #2]
			csub[3] = 0x30;
 8007c30:	4b12      	ldr	r3, [pc, #72]	@ (8007c7c <clear_rd+0xfc>)
 8007c32:	2230      	movs	r2, #48	@ 0x30
 8007c34:	70da      	strb	r2, [r3, #3]
			csub[4] = 0x30;
 8007c36:	4b11      	ldr	r3, [pc, #68]	@ (8007c7c <clear_rd+0xfc>)
 8007c38:	2230      	movs	r2, #48	@ 0x30
 8007c3a:	711a      	strb	r2, [r3, #4]
			csub[5] = 0x30;
 8007c3c:	4b0f      	ldr	r3, [pc, #60]	@ (8007c7c <clear_rd+0xfc>)
 8007c3e:	2230      	movs	r2, #48	@ 0x30
 8007c40:	715a      	strb	r2, [r3, #5]
			csub[6] = 0x30;
 8007c42:	4b0e      	ldr	r3, [pc, #56]	@ (8007c7c <clear_rd+0xfc>)
 8007c44:	2230      	movs	r2, #48	@ 0x30
 8007c46:	719a      	strb	r2, [r3, #6]
			csub[7] = 0x30;
 8007c48:	4b0c      	ldr	r3, [pc, #48]	@ (8007c7c <clear_rd+0xfc>)
 8007c4a:	2230      	movs	r2, #48	@ 0x30
 8007c4c:	71da      	strb	r2, [r3, #7]

			E_write();
 8007c4e:	f003 faad 	bl	800b1ac <E_write>
		}
	}
}
 8007c52:	46c0      	nop			@ (mov r8, r8)
 8007c54:	46bd      	mov	sp, r7
 8007c56:	bd80      	pop	{r7, pc}
 8007c58:	08019f10 	.word	0x08019f10
 8007c5c:	20000658 	.word	0x20000658
 8007c60:	20000a3c 	.word	0x20000a3c
 8007c64:	20000a40 	.word	0x20000a40
 8007c68:	20000e2c 	.word	0x20000e2c
 8007c6c:	20000e3c 	.word	0x20000e3c
 8007c70:	20000e40 	.word	0x20000e40
 8007c74:	20000e74 	.word	0x20000e74
 8007c78:	20000e94 	.word	0x20000e94
 8007c7c:	20000e9c 	.word	0x20000e9c

08007c80 <Long_to_byte>:

void Long_to_byte(uint32_t longInt, uint8_t* byteArray)
{
 8007c80:	b580      	push	{r7, lr}
 8007c82:	b082      	sub	sp, #8
 8007c84:	af00      	add	r7, sp, #0
 8007c86:	6078      	str	r0, [r7, #4]
 8007c88:	6039      	str	r1, [r7, #0]
	byteArray[0] = (uint8_t)((longInt & 0xFF000000) >> 24 );
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	0e1b      	lsrs	r3, r3, #24
 8007c8e:	b2da      	uxtb	r2, r3
 8007c90:	683b      	ldr	r3, [r7, #0]
 8007c92:	701a      	strb	r2, [r3, #0]
	byteArray[1] = (uint8_t)((longInt & 0x00FF0000) >> 16 );
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	0c1a      	lsrs	r2, r3, #16
 8007c98:	683b      	ldr	r3, [r7, #0]
 8007c9a:	3301      	adds	r3, #1
 8007c9c:	b2d2      	uxtb	r2, r2
 8007c9e:	701a      	strb	r2, [r3, #0]
	byteArray[2] = (uint8_t)((longInt & 0x0000FF00) >> 8 );
 8007ca0:	687b      	ldr	r3, [r7, #4]
 8007ca2:	0a1a      	lsrs	r2, r3, #8
 8007ca4:	683b      	ldr	r3, [r7, #0]
 8007ca6:	3302      	adds	r3, #2
 8007ca8:	b2d2      	uxtb	r2, r2
 8007caa:	701a      	strb	r2, [r3, #0]
	byteArray[3] = (uint8_t)((longInt & 0X000000FF));
 8007cac:	683b      	ldr	r3, [r7, #0]
 8007cae:	3303      	adds	r3, #3
 8007cb0:	687a      	ldr	r2, [r7, #4]
 8007cb2:	b2d2      	uxtb	r2, r2
 8007cb4:	701a      	strb	r2, [r3, #0]
}
 8007cb6:	46c0      	nop			@ (mov r8, r8)
 8007cb8:	46bd      	mov	sp, r7
 8007cba:	b002      	add	sp, #8
 8007cbc:	bd80      	pop	{r7, pc}

08007cbe <HMI_Command>:

	return LongInt;
}

void HMI_Command(const uint8_t* command, uint8_t* data, uint8_t NOB)
{
 8007cbe:	b590      	push	{r4, r7, lr}
 8007cc0:	b089      	sub	sp, #36	@ 0x24
 8007cc2:	af00      	add	r7, sp, #0
 8007cc4:	60f8      	str	r0, [r7, #12]
 8007cc6:	60b9      	str	r1, [r7, #8]
 8007cc8:	1dfb      	adds	r3, r7, #7
 8007cca:	701a      	strb	r2, [r3, #0]
	char string[15] = {0};
 8007ccc:	2410      	movs	r4, #16
 8007cce:	193b      	adds	r3, r7, r4
 8007cd0:	2200      	movs	r2, #0
 8007cd2:	601a      	str	r2, [r3, #0]
 8007cd4:	3304      	adds	r3, #4
 8007cd6:	220b      	movs	r2, #11
 8007cd8:	2100      	movs	r1, #0
 8007cda:	0018      	movs	r0, r3
 8007cdc:	f010 ffb8 	bl	8018c50 <memset>

	memset(string,0,15);
 8007ce0:	193b      	adds	r3, r7, r4
 8007ce2:	220f      	movs	r2, #15
 8007ce4:	2100      	movs	r1, #0
 8007ce6:	0018      	movs	r0, r3
 8007ce8:	f010 ffb2 	bl	8018c50 <memset>
	memcpy(string, command, NOB);	// Fee 10 byte
 8007cec:	1dfb      	adds	r3, r7, #7
 8007cee:	781a      	ldrb	r2, [r3, #0]
 8007cf0:	68f9      	ldr	r1, [r7, #12]
 8007cf2:	193b      	adds	r3, r7, r4
 8007cf4:	0018      	movs	r0, r3
 8007cf6:	f011 f82e 	bl	8018d56 <memcpy>
	memcpy(string+6,data,4);
 8007cfa:	193b      	adds	r3, r7, r4
 8007cfc:	3306      	adds	r3, #6
 8007cfe:	68b9      	ldr	r1, [r7, #8]
 8007d00:	2204      	movs	r2, #4
 8007d02:	0018      	movs	r0, r3
 8007d04:	f011 f827 	bl	8018d56 <memcpy>
	HMI_Transmit(string,NOB);
 8007d08:	1dfb      	adds	r3, r7, #7
 8007d0a:	781a      	ldrb	r2, [r3, #0]
 8007d0c:	193b      	adds	r3, r7, r4
 8007d0e:	0011      	movs	r1, r2
 8007d10:	0018      	movs	r0, r3
 8007d12:	f000 f805 	bl	8007d20 <HMI_Transmit>
}
 8007d16:	46c0      	nop			@ (mov r8, r8)
 8007d18:	46bd      	mov	sp, r7
 8007d1a:	b009      	add	sp, #36	@ 0x24
 8007d1c:	bd90      	pop	{r4, r7, pc}
	...

08007d20 <HMI_Transmit>:

void HMI_Transmit(char out[], uint8_t nob)
{
 8007d20:	b590      	push	{r4, r7, lr}
 8007d22:	b089      	sub	sp, #36	@ 0x24
 8007d24:	af00      	add	r7, sp, #0
 8007d26:	6078      	str	r0, [r7, #4]
 8007d28:	000a      	movs	r2, r1
 8007d2a:	1cfb      	adds	r3, r7, #3
 8007d2c:	701a      	strb	r2, [r3, #0]
	uint8_t temp[20]  = {0};
 8007d2e:	240c      	movs	r4, #12
 8007d30:	193b      	adds	r3, r7, r4
 8007d32:	2200      	movs	r2, #0
 8007d34:	601a      	str	r2, [r3, #0]
 8007d36:	3304      	adds	r3, #4
 8007d38:	2210      	movs	r2, #16
 8007d3a:	2100      	movs	r1, #0
 8007d3c:	0018      	movs	r0, r3
 8007d3e:	f010 ff87 	bl	8018c50 <memset>
//	uint16_t length = 0;

	memcpy(temp,out,11);	// debug brake point
 8007d42:	6879      	ldr	r1, [r7, #4]
 8007d44:	193b      	adds	r3, r7, r4
 8007d46:	220b      	movs	r2, #11
 8007d48:	0018      	movs	r0, r3
 8007d4a:	f011 f804 	bl	8018d56 <memcpy>
//	length = strlen(out);

	HAL_UART_Transmit(&huart1, (uint8_t *) out, nob, 10);
 8007d4e:	1cfb      	adds	r3, r7, #3
 8007d50:	781b      	ldrb	r3, [r3, #0]
 8007d52:	b29a      	uxth	r2, r3
 8007d54:	6879      	ldr	r1, [r7, #4]
 8007d56:	4804      	ldr	r0, [pc, #16]	@ (8007d68 <HMI_Transmit+0x48>)
 8007d58:	230a      	movs	r3, #10
 8007d5a:	f00b fa19 	bl	8013190 <HAL_UART_Transmit>
}
 8007d5e:	46c0      	nop			@ (mov r8, r8)
 8007d60:	46bd      	mov	sp, r7
 8007d62:	b009      	add	sp, #36	@ 0x24
 8007d64:	bd90      	pop	{r4, r7, pc}
 8007d66:	46c0      	nop			@ (mov r8, r8)
 8007d68:	20000658 	.word	0x20000658

08007d6c <CRC16>:

uint16_t CRC16(unsigned char *cal, uint16_t len)
{
 8007d6c:	b580      	push	{r7, lr}
 8007d6e:	b084      	sub	sp, #16
 8007d70:	af00      	add	r7, sp, #0
 8007d72:	6078      	str	r0, [r7, #4]
 8007d74:	000a      	movs	r2, r1
 8007d76:	1cbb      	adds	r3, r7, #2
 8007d78:	801a      	strh	r2, [r3, #0]
    int i;
    unsigned short crc = 0xFFFF;
 8007d7a:	230a      	movs	r3, #10
 8007d7c:	18fb      	adds	r3, r7, r3
 8007d7e:	2201      	movs	r2, #1
 8007d80:	4252      	negs	r2, r2
 8007d82:	801a      	strh	r2, [r3, #0]
    if (len == 0)
 8007d84:	1cbb      	adds	r3, r7, #2
 8007d86:	881b      	ldrh	r3, [r3, #0]
 8007d88:	2b00      	cmp	r3, #0
 8007d8a:	d130      	bne.n	8007dee <CRC16+0x82>
        len = 1;
 8007d8c:	1cbb      	adds	r3, r7, #2
 8007d8e:	2201      	movs	r2, #1
 8007d90:	801a      	strh	r2, [r3, #0]

    while (len--)
 8007d92:	e02c      	b.n	8007dee <CRC16+0x82>
    {
        crc ^= *cal;
 8007d94:	687b      	ldr	r3, [r7, #4]
 8007d96:	781b      	ldrb	r3, [r3, #0]
 8007d98:	0019      	movs	r1, r3
 8007d9a:	220a      	movs	r2, #10
 8007d9c:	18bb      	adds	r3, r7, r2
 8007d9e:	18ba      	adds	r2, r7, r2
 8007da0:	8812      	ldrh	r2, [r2, #0]
 8007da2:	404a      	eors	r2, r1
 8007da4:	801a      	strh	r2, [r3, #0]
        for (i = 0; i<8; i++)
 8007da6:	2300      	movs	r3, #0
 8007da8:	60fb      	str	r3, [r7, #12]
 8007daa:	e01a      	b.n	8007de2 <CRC16+0x76>
        {
            if (crc & 1)
 8007dac:	210a      	movs	r1, #10
 8007dae:	187b      	adds	r3, r7, r1
 8007db0:	881b      	ldrh	r3, [r3, #0]
 8007db2:	2201      	movs	r2, #1
 8007db4:	4013      	ands	r3, r2
 8007db6:	d00b      	beq.n	8007dd0 <CRC16+0x64>
            {
                crc >>= 1;
 8007db8:	187b      	adds	r3, r7, r1
 8007dba:	187a      	adds	r2, r7, r1
 8007dbc:	8812      	ldrh	r2, [r2, #0]
 8007dbe:	0852      	lsrs	r2, r2, #1
 8007dc0:	801a      	strh	r2, [r3, #0]
                crc ^= 0xA001;
 8007dc2:	187b      	adds	r3, r7, r1
 8007dc4:	187a      	adds	r2, r7, r1
 8007dc6:	8812      	ldrh	r2, [r2, #0]
 8007dc8:	4910      	ldr	r1, [pc, #64]	@ (8007e0c <CRC16+0xa0>)
 8007dca:	404a      	eors	r2, r1
 8007dcc:	801a      	strh	r2, [r3, #0]
 8007dce:	e005      	b.n	8007ddc <CRC16+0x70>
            }
            else
                crc >>= 1;
 8007dd0:	220a      	movs	r2, #10
 8007dd2:	18bb      	adds	r3, r7, r2
 8007dd4:	18ba      	adds	r2, r7, r2
 8007dd6:	8812      	ldrh	r2, [r2, #0]
 8007dd8:	0852      	lsrs	r2, r2, #1
 8007dda:	801a      	strh	r2, [r3, #0]
        for (i = 0; i<8; i++)
 8007ddc:	68fb      	ldr	r3, [r7, #12]
 8007dde:	3301      	adds	r3, #1
 8007de0:	60fb      	str	r3, [r7, #12]
 8007de2:	68fb      	ldr	r3, [r7, #12]
 8007de4:	2b07      	cmp	r3, #7
 8007de6:	dde1      	ble.n	8007dac <CRC16+0x40>
        }
        cal++;
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	3301      	adds	r3, #1
 8007dec:	607b      	str	r3, [r7, #4]
    while (len--)
 8007dee:	1cbb      	adds	r3, r7, #2
 8007df0:	881b      	ldrh	r3, [r3, #0]
 8007df2:	1cba      	adds	r2, r7, #2
 8007df4:	1e59      	subs	r1, r3, #1
 8007df6:	8011      	strh	r1, [r2, #0]
 8007df8:	2b00      	cmp	r3, #0
 8007dfa:	d1cb      	bne.n	8007d94 <CRC16+0x28>
    }
    return(crc);
 8007dfc:	230a      	movs	r3, #10
 8007dfe:	18fb      	adds	r3, r7, r3
 8007e00:	881b      	ldrh	r3, [r3, #0]
}
 8007e02:	0018      	movs	r0, r3
 8007e04:	46bd      	mov	sp, r7
 8007e06:	b004      	add	sp, #16
 8007e08:	bd80      	pop	{r7, pc}
 8007e0a:	46c0      	nop			@ (mov r8, r8)
 8007e0c:	ffffa001 	.word	0xffffa001

08007e10 <checksum_8bit>:

unsigned char checksum_8bit(unsigned char *data, int len)
{
 8007e10:	b580      	push	{r7, lr}
 8007e12:	b084      	sub	sp, #16
 8007e14:	af00      	add	r7, sp, #0
 8007e16:	6078      	str	r0, [r7, #4]
 8007e18:	6039      	str	r1, [r7, #0]
	int i;
	unsigned short sum = 0x00;
 8007e1a:	230a      	movs	r3, #10
 8007e1c:	18fb      	adds	r3, r7, r3
 8007e1e:	2200      	movs	r2, #0
 8007e20:	801a      	strh	r2, [r3, #0]
	for (i=0; i<len; i++)
 8007e22:	2300      	movs	r3, #0
 8007e24:	60fb      	str	r3, [r7, #12]
 8007e26:	e00d      	b.n	8007e44 <checksum_8bit+0x34>
	{
		sum += data[i];
 8007e28:	68fb      	ldr	r3, [r7, #12]
 8007e2a:	687a      	ldr	r2, [r7, #4]
 8007e2c:	18d3      	adds	r3, r2, r3
 8007e2e:	781b      	ldrb	r3, [r3, #0]
 8007e30:	0019      	movs	r1, r3
 8007e32:	220a      	movs	r2, #10
 8007e34:	18bb      	adds	r3, r7, r2
 8007e36:	18ba      	adds	r2, r7, r2
 8007e38:	8812      	ldrh	r2, [r2, #0]
 8007e3a:	188a      	adds	r2, r1, r2
 8007e3c:	801a      	strh	r2, [r3, #0]
	for (i=0; i<len; i++)
 8007e3e:	68fb      	ldr	r3, [r7, #12]
 8007e40:	3301      	adds	r3, #1
 8007e42:	60fb      	str	r3, [r7, #12]
 8007e44:	68fa      	ldr	r2, [r7, #12]
 8007e46:	683b      	ldr	r3, [r7, #0]
 8007e48:	429a      	cmp	r2, r3
 8007e4a:	dbed      	blt.n	8007e28 <checksum_8bit+0x18>
	}
//	sum &= 0xFF
	return (unsigned char)sum;
 8007e4c:	230a      	movs	r3, #10
 8007e4e:	18fb      	adds	r3, r7, r3
 8007e50:	881b      	ldrh	r3, [r3, #0]
 8007e52:	b2db      	uxtb	r3, r3
}
 8007e54:	0018      	movs	r0, r3
 8007e56:	46bd      	mov	sp, r7
 8007e58:	b004      	add	sp, #16
 8007e5a:	bd80      	pop	{r7, pc}

08007e5c <long_to_byte>:

void long_to_byte(uint16_t longInt, unsigned char* byteArray)
{
 8007e5c:	b580      	push	{r7, lr}
 8007e5e:	b082      	sub	sp, #8
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	0002      	movs	r2, r0
 8007e64:	6039      	str	r1, [r7, #0]
 8007e66:	1dbb      	adds	r3, r7, #6
 8007e68:	801a      	strh	r2, [r3, #0]
	byteArray[0] = (uint8_t)((longInt & 0xFF00) >> 8 );
 8007e6a:	1dbb      	adds	r3, r7, #6
 8007e6c:	881b      	ldrh	r3, [r3, #0]
 8007e6e:	0a1b      	lsrs	r3, r3, #8
 8007e70:	b29b      	uxth	r3, r3
 8007e72:	b2da      	uxtb	r2, r3
 8007e74:	683b      	ldr	r3, [r7, #0]
 8007e76:	701a      	strb	r2, [r3, #0]
	byteArray[1] = (uint8_t)((longInt & 0X00FF));
 8007e78:	683b      	ldr	r3, [r7, #0]
 8007e7a:	3301      	adds	r3, #1
 8007e7c:	1dba      	adds	r2, r7, #6
 8007e7e:	8812      	ldrh	r2, [r2, #0]
 8007e80:	b2d2      	uxtb	r2, r2
 8007e82:	701a      	strb	r2, [r3, #0]
}
 8007e84:	46c0      	nop			@ (mov r8, r8)
 8007e86:	46bd      	mov	sp, r7
 8007e88:	b002      	add	sp, #8
 8007e8a:	bd80      	pop	{r7, pc}

08007e8c <byte_to_long>:

uint32_t byte_to_long(uint8_t* byteArray)
{
 8007e8c:	b580      	push	{r7, lr}
 8007e8e:	b084      	sub	sp, #16
 8007e90:	af00      	add	r7, sp, #0
 8007e92:	6078      	str	r0, [r7, #4]
	long LongInt = 0;
 8007e94:	2300      	movs	r3, #0
 8007e96:	60fb      	str	r3, [r7, #12]

	LongInt  = ((unsigned int) byteArray[0]) << 8;
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	781b      	ldrb	r3, [r3, #0]
 8007e9c:	021b      	lsls	r3, r3, #8
 8007e9e:	60fb      	str	r3, [r7, #12]
	LongInt |= ((unsigned int) byteArray[1]);
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	3301      	adds	r3, #1
 8007ea4:	781b      	ldrb	r3, [r3, #0]
 8007ea6:	001a      	movs	r2, r3
 8007ea8:	68fb      	ldr	r3, [r7, #12]
 8007eaa:	4313      	orrs	r3, r2
 8007eac:	60fb      	str	r3, [r7, #12]

	return LongInt;
 8007eae:	68fb      	ldr	r3, [r7, #12]
}
 8007eb0:	0018      	movs	r0, r3
 8007eb2:	46bd      	mov	sp, r7
 8007eb4:	b004      	add	sp, #16
 8007eb6:	bd80      	pop	{r7, pc}

08007eb8 <long_to_byte_crc>:

void long_to_byte_crc(uint16_t longInt, unsigned char* byteArray)
{
 8007eb8:	b580      	push	{r7, lr}
 8007eba:	b082      	sub	sp, #8
 8007ebc:	af00      	add	r7, sp, #0
 8007ebe:	0002      	movs	r2, r0
 8007ec0:	6039      	str	r1, [r7, #0]
 8007ec2:	1dbb      	adds	r3, r7, #6
 8007ec4:	801a      	strh	r2, [r3, #0]
	byteArray[0] = (uint8_t)(longInt & 0x00FF);
 8007ec6:	1dbb      	adds	r3, r7, #6
 8007ec8:	881b      	ldrh	r3, [r3, #0]
 8007eca:	b2da      	uxtb	r2, r3
 8007ecc:	683b      	ldr	r3, [r7, #0]
 8007ece:	701a      	strb	r2, [r3, #0]
	byteArray[1] = (uint8_t)((longInt & 0XFF00) >> 8 );
 8007ed0:	1dbb      	adds	r3, r7, #6
 8007ed2:	881b      	ldrh	r3, [r3, #0]
 8007ed4:	0a1b      	lsrs	r3, r3, #8
 8007ed6:	b29a      	uxth	r2, r3
 8007ed8:	683b      	ldr	r3, [r7, #0]
 8007eda:	3301      	adds	r3, #1
 8007edc:	b2d2      	uxtb	r2, r2
 8007ede:	701a      	strb	r2, [r3, #0]
}
 8007ee0:	46c0      	nop			@ (mov r8, r8)
 8007ee2:	46bd      	mov	sp, r7
 8007ee4:	b002      	add	sp, #8
 8007ee6:	bd80      	pop	{r7, pc}

08007ee8 <tbox_start>:

void tbox_start(void)
{
 8007ee8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007eea:	b0a1      	sub	sp, #132	@ 0x84
 8007eec:	af00      	add	r7, sp, #0
	unsigned char sn[2] = {0};
 8007eee:	247c      	movs	r4, #124	@ 0x7c
 8007ef0:	193b      	adds	r3, r7, r4
 8007ef2:	2200      	movs	r2, #0
 8007ef4:	801a      	strh	r2, [r3, #0]
//	unsigned char data1[6];
	unsigned char cal_s[12] = {0};
 8007ef6:	2570      	movs	r5, #112	@ 0x70
 8007ef8:	197b      	adds	r3, r7, r5
 8007efa:	2200      	movs	r2, #0
 8007efc:	601a      	str	r2, [r3, #0]
 8007efe:	3304      	adds	r3, #4
 8007f00:	2208      	movs	r2, #8
 8007f02:	2100      	movs	r1, #0
 8007f04:	0018      	movs	r0, r3
 8007f06:	f010 fea3 	bl	8018c50 <memset>
	uint16_t crc1_value = 0;
 8007f0a:	267e      	movs	r6, #126	@ 0x7e
 8007f0c:	19bb      	adds	r3, r7, r6
 8007f0e:	2200      	movs	r2, #0
 8007f10:	801a      	strh	r2, [r3, #0]
	unsigned char crc1[2] = {0};
 8007f12:	236c      	movs	r3, #108	@ 0x6c
 8007f14:	18fb      	adds	r3, r7, r3
 8007f16:	2200      	movs	r2, #0
 8007f18:	801a      	strh	r2, [r3, #0]
//	unsigned char t_start[16];

	//sn
	serial = serial + 1;
 8007f1a:	4b58      	ldr	r3, [pc, #352]	@ (800807c <tbox_start+0x194>)
 8007f1c:	881b      	ldrh	r3, [r3, #0]
 8007f1e:	3301      	adds	r3, #1
 8007f20:	b29a      	uxth	r2, r3
 8007f22:	4b56      	ldr	r3, [pc, #344]	@ (800807c <tbox_start+0x194>)
 8007f24:	801a      	strh	r2, [r3, #0]
	long_to_byte(serial, sn);
 8007f26:	4b55      	ldr	r3, [pc, #340]	@ (800807c <tbox_start+0x194>)
 8007f28:	881b      	ldrh	r3, [r3, #0]
 8007f2a:	193a      	adds	r2, r7, r4
 8007f2c:	0011      	movs	r1, r2
 8007f2e:	0018      	movs	r0, r3
 8007f30:	f7ff ff94 	bl	8007e5c <long_to_byte>
	memcpy(hd1, sn, sizeof(unsigned char)*2);
 8007f34:	4b52      	ldr	r3, [pc, #328]	@ (8008080 <tbox_start+0x198>)
 8007f36:	193a      	adds	r2, r7, r4
 8007f38:	8812      	ldrh	r2, [r2, #0]
 8007f3a:	801a      	strh	r2, [r3, #0]

	//data
	RTC_date = PCF2129_getDate();
 8007f3c:	4c51      	ldr	r4, [pc, #324]	@ (8008084 <tbox_start+0x19c>)
 8007f3e:	003b      	movs	r3, r7
 8007f40:	0018      	movs	r0, r3
 8007f42:	f004 fc89 	bl	800c858 <PCF2129_getDate>
 8007f46:	003b      	movs	r3, r7
 8007f48:	0020      	movs	r0, r4
 8007f4a:	0019      	movs	r1, r3
 8007f4c:	2358      	movs	r3, #88	@ 0x58
 8007f4e:	001a      	movs	r2, r3
 8007f50:	f010 ff01 	bl	8018d56 <memcpy>
	year = RTC_date.date.y;
 8007f54:	4b4b      	ldr	r3, [pc, #300]	@ (8008084 <tbox_start+0x19c>)
 8007f56:	224d      	movs	r2, #77	@ 0x4d
 8007f58:	5c9b      	ldrb	r3, [r3, r2]
 8007f5a:	001a      	movs	r2, r3
 8007f5c:	4b4a      	ldr	r3, [pc, #296]	@ (8008088 <tbox_start+0x1a0>)
 8007f5e:	801a      	strh	r2, [r3, #0]
	data1[0] = (uint8_t)(year & 0xFF);
 8007f60:	4b49      	ldr	r3, [pc, #292]	@ (8008088 <tbox_start+0x1a0>)
 8007f62:	881b      	ldrh	r3, [r3, #0]
 8007f64:	b2da      	uxtb	r2, r3
 8007f66:	4b49      	ldr	r3, [pc, #292]	@ (800808c <tbox_start+0x1a4>)
 8007f68:	701a      	strb	r2, [r3, #0]
	month = RTC_date.date.m;
 8007f6a:	4b46      	ldr	r3, [pc, #280]	@ (8008084 <tbox_start+0x19c>)
 8007f6c:	224e      	movs	r2, #78	@ 0x4e
 8007f6e:	5c9b      	ldrb	r3, [r3, r2]
 8007f70:	001a      	movs	r2, r3
 8007f72:	4b47      	ldr	r3, [pc, #284]	@ (8008090 <tbox_start+0x1a8>)
 8007f74:	801a      	strh	r2, [r3, #0]
	data1[1] = (uint8_t)(month & 0xFF);
 8007f76:	4b46      	ldr	r3, [pc, #280]	@ (8008090 <tbox_start+0x1a8>)
 8007f78:	881b      	ldrh	r3, [r3, #0]
 8007f7a:	b2da      	uxtb	r2, r3
 8007f7c:	4b43      	ldr	r3, [pc, #268]	@ (800808c <tbox_start+0x1a4>)
 8007f7e:	705a      	strb	r2, [r3, #1]
	day = RTC_date.date.d;
 8007f80:	4b40      	ldr	r3, [pc, #256]	@ (8008084 <tbox_start+0x19c>)
 8007f82:	224f      	movs	r2, #79	@ 0x4f
 8007f84:	5c9b      	ldrb	r3, [r3, r2]
 8007f86:	001a      	movs	r2, r3
 8007f88:	4b42      	ldr	r3, [pc, #264]	@ (8008094 <tbox_start+0x1ac>)
 8007f8a:	801a      	strh	r2, [r3, #0]
	data1[2] = (uint8_t)(day & 0xFF);
 8007f8c:	4b41      	ldr	r3, [pc, #260]	@ (8008094 <tbox_start+0x1ac>)
 8007f8e:	881b      	ldrh	r3, [r3, #0]
 8007f90:	b2da      	uxtb	r2, r3
 8007f92:	4b3e      	ldr	r3, [pc, #248]	@ (800808c <tbox_start+0x1a4>)
 8007f94:	709a      	strb	r2, [r3, #2]
	hour = RTC_date.date.hh;
 8007f96:	4b3b      	ldr	r3, [pc, #236]	@ (8008084 <tbox_start+0x19c>)
 8007f98:	2251      	movs	r2, #81	@ 0x51
 8007f9a:	5c9b      	ldrb	r3, [r3, r2]
 8007f9c:	001a      	movs	r2, r3
 8007f9e:	4b3e      	ldr	r3, [pc, #248]	@ (8008098 <tbox_start+0x1b0>)
 8007fa0:	801a      	strh	r2, [r3, #0]
	data1[3] = (uint8_t)(hour & 0xFF);
 8007fa2:	4b3d      	ldr	r3, [pc, #244]	@ (8008098 <tbox_start+0x1b0>)
 8007fa4:	881b      	ldrh	r3, [r3, #0]
 8007fa6:	b2da      	uxtb	r2, r3
 8007fa8:	4b38      	ldr	r3, [pc, #224]	@ (800808c <tbox_start+0x1a4>)
 8007faa:	70da      	strb	r2, [r3, #3]
	minute = RTC_date.date.mm;
 8007fac:	4b35      	ldr	r3, [pc, #212]	@ (8008084 <tbox_start+0x19c>)
 8007fae:	2252      	movs	r2, #82	@ 0x52
 8007fb0:	5c9b      	ldrb	r3, [r3, r2]
 8007fb2:	001a      	movs	r2, r3
 8007fb4:	4b39      	ldr	r3, [pc, #228]	@ (800809c <tbox_start+0x1b4>)
 8007fb6:	801a      	strh	r2, [r3, #0]
	data1[4] = (uint8_t)(minute & 0xFF);
 8007fb8:	4b38      	ldr	r3, [pc, #224]	@ (800809c <tbox_start+0x1b4>)
 8007fba:	881b      	ldrh	r3, [r3, #0]
 8007fbc:	b2da      	uxtb	r2, r3
 8007fbe:	4b33      	ldr	r3, [pc, #204]	@ (800808c <tbox_start+0x1a4>)
 8007fc0:	711a      	strb	r2, [r3, #4]
	second = RTC_date.date.ss;
 8007fc2:	4b30      	ldr	r3, [pc, #192]	@ (8008084 <tbox_start+0x19c>)
 8007fc4:	2253      	movs	r2, #83	@ 0x53
 8007fc6:	5c9b      	ldrb	r3, [r3, r2]
 8007fc8:	001a      	movs	r2, r3
 8007fca:	4b35      	ldr	r3, [pc, #212]	@ (80080a0 <tbox_start+0x1b8>)
 8007fcc:	801a      	strh	r2, [r3, #0]
	data1[5] = (uint8_t)(second & 0xFF);
 8007fce:	4b34      	ldr	r3, [pc, #208]	@ (80080a0 <tbox_start+0x1b8>)
 8007fd0:	881b      	ldrh	r3, [r3, #0]
 8007fd2:	b2da      	uxtb	r2, r3
 8007fd4:	4b2d      	ldr	r3, [pc, #180]	@ (800808c <tbox_start+0x1a4>)
 8007fd6:	715a      	strb	r2, [r3, #5]
	//for crc calculate, cal_s = (header + data)
	memcpy(cal_s, hd1, sizeof(unsigned char)*6);
 8007fd8:	197b      	adds	r3, r7, r5
 8007fda:	4a29      	ldr	r2, [pc, #164]	@ (8008080 <tbox_start+0x198>)
 8007fdc:	6811      	ldr	r1, [r2, #0]
 8007fde:	6019      	str	r1, [r3, #0]
 8007fe0:	8892      	ldrh	r2, [r2, #4]
 8007fe2:	809a      	strh	r2, [r3, #4]
	memcpy(cal_s+6, data1, sizeof(unsigned char)*6);
 8007fe4:	197b      	adds	r3, r7, r5
 8007fe6:	3306      	adds	r3, #6
 8007fe8:	4a28      	ldr	r2, [pc, #160]	@ (800808c <tbox_start+0x1a4>)
 8007fea:	0018      	movs	r0, r3
 8007fec:	0011      	movs	r1, r2
 8007fee:	2306      	movs	r3, #6
 8007ff0:	001a      	movs	r2, r3
 8007ff2:	f010 feb0 	bl	8018d56 <memcpy>
	crc1_value = CRC16(cal_s, 12);
 8007ff6:	19bc      	adds	r4, r7, r6
 8007ff8:	197b      	adds	r3, r7, r5
 8007ffa:	210c      	movs	r1, #12
 8007ffc:	0018      	movs	r0, r3
 8007ffe:	f7ff feb5 	bl	8007d6c <CRC16>
 8008002:	0003      	movs	r3, r0
 8008004:	8023      	strh	r3, [r4, #0]
	long_to_byte_crc(crc1_value, crc1);
 8008006:	246c      	movs	r4, #108	@ 0x6c
 8008008:	193a      	adds	r2, r7, r4
 800800a:	19bb      	adds	r3, r7, r6
 800800c:	881b      	ldrh	r3, [r3, #0]
 800800e:	0011      	movs	r1, r2
 8008010:	0018      	movs	r0, r3
 8008012:	f7ff ff51 	bl	8007eb8 <long_to_byte_crc>

	//update msg
	memcpy(t_start, zone, sizeof(unsigned char)*2);
 8008016:	4b23      	ldr	r3, [pc, #140]	@ (80080a4 <tbox_start+0x1bc>)
 8008018:	881a      	ldrh	r2, [r3, #0]
 800801a:	4b23      	ldr	r3, [pc, #140]	@ (80080a8 <tbox_start+0x1c0>)
 800801c:	801a      	strh	r2, [r3, #0]
	memcpy(t_start+2, crc1, sizeof(unsigned char)*2);
 800801e:	4a23      	ldr	r2, [pc, #140]	@ (80080ac <tbox_start+0x1c4>)
 8008020:	193b      	adds	r3, r7, r4
 8008022:	0010      	movs	r0, r2
 8008024:	0019      	movs	r1, r3
 8008026:	2302      	movs	r3, #2
 8008028:	001a      	movs	r2, r3
 800802a:	f010 fe94 	bl	8018d56 <memcpy>
	memcpy(t_start+4, hd1, sizeof(unsigned char)*6);
 800802e:	4a20      	ldr	r2, [pc, #128]	@ (80080b0 <tbox_start+0x1c8>)
 8008030:	4b13      	ldr	r3, [pc, #76]	@ (8008080 <tbox_start+0x198>)
 8008032:	0010      	movs	r0, r2
 8008034:	0019      	movs	r1, r3
 8008036:	2306      	movs	r3, #6
 8008038:	001a      	movs	r2, r3
 800803a:	f010 fe8c 	bl	8018d56 <memcpy>
	memcpy(t_start+10, data1, sizeof(unsigned char)*6);
 800803e:	4a1d      	ldr	r2, [pc, #116]	@ (80080b4 <tbox_start+0x1cc>)
 8008040:	4b12      	ldr	r3, [pc, #72]	@ (800808c <tbox_start+0x1a4>)
 8008042:	0010      	movs	r0, r2
 8008044:	0019      	movs	r1, r3
 8008046:	2306      	movs	r3, #6
 8008048:	001a      	movs	r2, r3
 800804a:	f010 fe84 	bl	8018d56 <memcpy>

	//transmit
	unsigned char buffer[sizeof(t_start)];
	memset(buffer, 0, sizeof(t_start));
 800804e:	255c      	movs	r5, #92	@ 0x5c
 8008050:	197b      	adds	r3, r7, r5
 8008052:	2210      	movs	r2, #16
 8008054:	2100      	movs	r1, #0
 8008056:	0018      	movs	r0, r3
 8008058:	f010 fdfa 	bl	8018c50 <memset>
	memcpy(buffer, &t_start, sizeof(t_start));
 800805c:	197b      	adds	r3, r7, r5
 800805e:	4a12      	ldr	r2, [pc, #72]	@ (80080a8 <tbox_start+0x1c0>)
 8008060:	ca13      	ldmia	r2!, {r0, r1, r4}
 8008062:	c313      	stmia	r3!, {r0, r1, r4}
 8008064:	6812      	ldr	r2, [r2, #0]
 8008066:	601a      	str	r2, [r3, #0]
	HAL_UART_Transmit(&huart4, (uint8_t *)buffer, sizeof(buffer),0xffff);
 8008068:	4b13      	ldr	r3, [pc, #76]	@ (80080b8 <tbox_start+0x1d0>)
 800806a:	1979      	adds	r1, r7, r5
 800806c:	4813      	ldr	r0, [pc, #76]	@ (80080bc <tbox_start+0x1d4>)
 800806e:	2210      	movs	r2, #16
 8008070:	f00b f88e 	bl	8013190 <HAL_UART_Transmit>

	//clear
//	memset(t_start, 0, 16);
}
 8008074:	46c0      	nop			@ (mov r8, r8)
 8008076:	46bd      	mov	sp, r7
 8008078:	b021      	add	sp, #132	@ 0x84
 800807a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800807c:	20000b24 	.word	0x20000b24
 8008080:	20000230 	.word	0x20000230
 8008084:	20000c20 	.word	0x20000c20
 8008088:	20000c78 	.word	0x20000c78
 800808c:	20000b40 	.word	0x20000b40
 8008090:	20000c7a 	.word	0x20000c7a
 8008094:	20000c7c 	.word	0x20000c7c
 8008098:	20000c7e 	.word	0x20000c7e
 800809c:	20000c80 	.word	0x20000c80
 80080a0:	20000c82 	.word	0x20000c82
 80080a4:	2000022c 	.word	0x2000022c
 80080a8:	20000b64 	.word	0x20000b64
 80080ac:	20000b66 	.word	0x20000b66
 80080b0:	20000b68 	.word	0x20000b68
 80080b4:	20000b6e 	.word	0x20000b6e
 80080b8:	0000ffff 	.word	0x0000ffff
 80080bc:	20000808 	.word	0x20000808

080080c0 <tbox_finish>:

void tbox_finish(void)
{
 80080c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80080c2:	b0ab      	sub	sp, #172	@ 0xac
 80080c4:	af00      	add	r7, sp, #0
	unsigned char sn[2] = {0};
 80080c6:	24a4      	movs	r4, #164	@ 0xa4
 80080c8:	193b      	adds	r3, r7, r4
 80080ca:	2200      	movs	r2, #0
 80080cc:	801a      	strh	r2, [r3, #0]
//	unsigned char data2[26];
	unsigned char cal_f[32] = {0};
 80080ce:	2584      	movs	r5, #132	@ 0x84
 80080d0:	197b      	adds	r3, r7, r5
 80080d2:	2200      	movs	r2, #0
 80080d4:	601a      	str	r2, [r3, #0]
 80080d6:	3304      	adds	r3, #4
 80080d8:	221c      	movs	r2, #28
 80080da:	2100      	movs	r1, #0
 80080dc:	0018      	movs	r0, r3
 80080de:	f010 fdb7 	bl	8018c50 <memset>
	uint16_t crc2_value = 0;
 80080e2:	26a6      	movs	r6, #166	@ 0xa6
 80080e4:	19bb      	adds	r3, r7, r6
 80080e6:	2200      	movs	r2, #0
 80080e8:	801a      	strh	r2, [r3, #0]
	unsigned char crc2[2] = {0};
 80080ea:	2380      	movs	r3, #128	@ 0x80
 80080ec:	18fb      	adds	r3, r7, r3
 80080ee:	2200      	movs	r2, #0
 80080f0:	801a      	strh	r2, [r3, #0]
//	unsigned char t_finish[36];

	//sn
	serial = serial + 1;
 80080f2:	4b59      	ldr	r3, [pc, #356]	@ (8008258 <tbox_finish+0x198>)
 80080f4:	881b      	ldrh	r3, [r3, #0]
 80080f6:	3301      	adds	r3, #1
 80080f8:	b29a      	uxth	r2, r3
 80080fa:	4b57      	ldr	r3, [pc, #348]	@ (8008258 <tbox_finish+0x198>)
 80080fc:	801a      	strh	r2, [r3, #0]
	long_to_byte(serial, sn);
 80080fe:	4b56      	ldr	r3, [pc, #344]	@ (8008258 <tbox_finish+0x198>)
 8008100:	881b      	ldrh	r3, [r3, #0]
 8008102:	193a      	adds	r2, r7, r4
 8008104:	0011      	movs	r1, r2
 8008106:	0018      	movs	r0, r3
 8008108:	f7ff fea8 	bl	8007e5c <long_to_byte>
	memcpy(hd2, sn, sizeof(unsigned char)*2);
 800810c:	4b53      	ldr	r3, [pc, #332]	@ (800825c <tbox_finish+0x19c>)
 800810e:	193a      	adds	r2, r7, r4
 8008110:	8812      	ldrh	r2, [r2, #0]
 8008112:	801a      	strh	r2, [r3, #0]

	//data
	RTC_date = PCF2129_getDate();
 8008114:	4c52      	ldr	r4, [pc, #328]	@ (8008260 <tbox_finish+0x1a0>)
 8008116:	003b      	movs	r3, r7
 8008118:	0018      	movs	r0, r3
 800811a:	f004 fb9d 	bl	800c858 <PCF2129_getDate>
 800811e:	003b      	movs	r3, r7
 8008120:	0020      	movs	r0, r4
 8008122:	0019      	movs	r1, r3
 8008124:	2358      	movs	r3, #88	@ 0x58
 8008126:	001a      	movs	r2, r3
 8008128:	f010 fe15 	bl	8018d56 <memcpy>
	year = RTC_date.date.y;
 800812c:	4b4c      	ldr	r3, [pc, #304]	@ (8008260 <tbox_finish+0x1a0>)
 800812e:	224d      	movs	r2, #77	@ 0x4d
 8008130:	5c9b      	ldrb	r3, [r3, r2]
 8008132:	001a      	movs	r2, r3
 8008134:	4b4b      	ldr	r3, [pc, #300]	@ (8008264 <tbox_finish+0x1a4>)
 8008136:	801a      	strh	r2, [r3, #0]
	data2[8] = (uint8_t)(year & 0xFF);
 8008138:	4b4a      	ldr	r3, [pc, #296]	@ (8008264 <tbox_finish+0x1a4>)
 800813a:	881b      	ldrh	r3, [r3, #0]
 800813c:	b2da      	uxtb	r2, r3
 800813e:	4b4a      	ldr	r3, [pc, #296]	@ (8008268 <tbox_finish+0x1a8>)
 8008140:	721a      	strb	r2, [r3, #8]
	month = RTC_date.date.m;
 8008142:	4b47      	ldr	r3, [pc, #284]	@ (8008260 <tbox_finish+0x1a0>)
 8008144:	224e      	movs	r2, #78	@ 0x4e
 8008146:	5c9b      	ldrb	r3, [r3, r2]
 8008148:	001a      	movs	r2, r3
 800814a:	4b48      	ldr	r3, [pc, #288]	@ (800826c <tbox_finish+0x1ac>)
 800814c:	801a      	strh	r2, [r3, #0]
	data2[9] = (uint8_t)(month & 0xFF);
 800814e:	4b47      	ldr	r3, [pc, #284]	@ (800826c <tbox_finish+0x1ac>)
 8008150:	881b      	ldrh	r3, [r3, #0]
 8008152:	b2da      	uxtb	r2, r3
 8008154:	4b44      	ldr	r3, [pc, #272]	@ (8008268 <tbox_finish+0x1a8>)
 8008156:	725a      	strb	r2, [r3, #9]
	day = RTC_date.date.d;
 8008158:	4b41      	ldr	r3, [pc, #260]	@ (8008260 <tbox_finish+0x1a0>)
 800815a:	224f      	movs	r2, #79	@ 0x4f
 800815c:	5c9b      	ldrb	r3, [r3, r2]
 800815e:	001a      	movs	r2, r3
 8008160:	4b43      	ldr	r3, [pc, #268]	@ (8008270 <tbox_finish+0x1b0>)
 8008162:	801a      	strh	r2, [r3, #0]
	data2[10] = (uint8_t)(day & 0xFF);
 8008164:	4b42      	ldr	r3, [pc, #264]	@ (8008270 <tbox_finish+0x1b0>)
 8008166:	881b      	ldrh	r3, [r3, #0]
 8008168:	b2da      	uxtb	r2, r3
 800816a:	4b3f      	ldr	r3, [pc, #252]	@ (8008268 <tbox_finish+0x1a8>)
 800816c:	729a      	strb	r2, [r3, #10]
	hour = RTC_date.date.hh;
 800816e:	4b3c      	ldr	r3, [pc, #240]	@ (8008260 <tbox_finish+0x1a0>)
 8008170:	2251      	movs	r2, #81	@ 0x51
 8008172:	5c9b      	ldrb	r3, [r3, r2]
 8008174:	001a      	movs	r2, r3
 8008176:	4b3f      	ldr	r3, [pc, #252]	@ (8008274 <tbox_finish+0x1b4>)
 8008178:	801a      	strh	r2, [r3, #0]
	data2[11] = (uint8_t)(hour & 0xFF);
 800817a:	4b3e      	ldr	r3, [pc, #248]	@ (8008274 <tbox_finish+0x1b4>)
 800817c:	881b      	ldrh	r3, [r3, #0]
 800817e:	b2da      	uxtb	r2, r3
 8008180:	4b39      	ldr	r3, [pc, #228]	@ (8008268 <tbox_finish+0x1a8>)
 8008182:	72da      	strb	r2, [r3, #11]
	minute = RTC_date.date.mm;
 8008184:	4b36      	ldr	r3, [pc, #216]	@ (8008260 <tbox_finish+0x1a0>)
 8008186:	2252      	movs	r2, #82	@ 0x52
 8008188:	5c9b      	ldrb	r3, [r3, r2]
 800818a:	001a      	movs	r2, r3
 800818c:	4b3a      	ldr	r3, [pc, #232]	@ (8008278 <tbox_finish+0x1b8>)
 800818e:	801a      	strh	r2, [r3, #0]
	data2[12] = (uint8_t)(minute & 0xFF);
 8008190:	4b39      	ldr	r3, [pc, #228]	@ (8008278 <tbox_finish+0x1b8>)
 8008192:	881b      	ldrh	r3, [r3, #0]
 8008194:	b2da      	uxtb	r2, r3
 8008196:	4b34      	ldr	r3, [pc, #208]	@ (8008268 <tbox_finish+0x1a8>)
 8008198:	731a      	strb	r2, [r3, #12]
	second = RTC_date.date.ss;
 800819a:	4b31      	ldr	r3, [pc, #196]	@ (8008260 <tbox_finish+0x1a0>)
 800819c:	2253      	movs	r2, #83	@ 0x53
 800819e:	5c9b      	ldrb	r3, [r3, r2]
 80081a0:	001a      	movs	r2, r3
 80081a2:	4b36      	ldr	r3, [pc, #216]	@ (800827c <tbox_finish+0x1bc>)
 80081a4:	801a      	strh	r2, [r3, #0]
	data2[13] = (uint8_t)(second & 0xFF);
 80081a6:	4b35      	ldr	r3, [pc, #212]	@ (800827c <tbox_finish+0x1bc>)
 80081a8:	881b      	ldrh	r3, [r3, #0]
 80081aa:	b2da      	uxtb	r2, r3
 80081ac:	4b2e      	ldr	r3, [pc, #184]	@ (8008268 <tbox_finish+0x1a8>)
 80081ae:	735a      	strb	r2, [r3, #13]

	//for crc calculate, cal_f = (header + data)
	memcpy(cal_f, hd2, sizeof(unsigned char)*6);
 80081b0:	197b      	adds	r3, r7, r5
 80081b2:	4a2a      	ldr	r2, [pc, #168]	@ (800825c <tbox_finish+0x19c>)
 80081b4:	6811      	ldr	r1, [r2, #0]
 80081b6:	6019      	str	r1, [r3, #0]
 80081b8:	8892      	ldrh	r2, [r2, #4]
 80081ba:	809a      	strh	r2, [r3, #4]
	memcpy(cal_f+6, data2, sizeof(unsigned char)*26);
 80081bc:	197b      	adds	r3, r7, r5
 80081be:	3306      	adds	r3, #6
 80081c0:	4a29      	ldr	r2, [pc, #164]	@ (8008268 <tbox_finish+0x1a8>)
 80081c2:	0018      	movs	r0, r3
 80081c4:	0011      	movs	r1, r2
 80081c6:	231a      	movs	r3, #26
 80081c8:	001a      	movs	r2, r3
 80081ca:	f010 fdc4 	bl	8018d56 <memcpy>
	crc2_value = CRC16(cal_f, 32);
 80081ce:	19bc      	adds	r4, r7, r6
 80081d0:	197b      	adds	r3, r7, r5
 80081d2:	2120      	movs	r1, #32
 80081d4:	0018      	movs	r0, r3
 80081d6:	f7ff fdc9 	bl	8007d6c <CRC16>
 80081da:	0003      	movs	r3, r0
 80081dc:	8023      	strh	r3, [r4, #0]
	long_to_byte_crc(crc2_value, crc2);
 80081de:	2480      	movs	r4, #128	@ 0x80
 80081e0:	193a      	adds	r2, r7, r4
 80081e2:	19bb      	adds	r3, r7, r6
 80081e4:	881b      	ldrh	r3, [r3, #0]
 80081e6:	0011      	movs	r1, r2
 80081e8:	0018      	movs	r0, r3
 80081ea:	f7ff fe65 	bl	8007eb8 <long_to_byte_crc>

	//update msg
	memcpy(t_finish, zone, sizeof(unsigned char)*2);
 80081ee:	4b24      	ldr	r3, [pc, #144]	@ (8008280 <tbox_finish+0x1c0>)
 80081f0:	881a      	ldrh	r2, [r3, #0]
 80081f2:	4b24      	ldr	r3, [pc, #144]	@ (8008284 <tbox_finish+0x1c4>)
 80081f4:	801a      	strh	r2, [r3, #0]
	memcpy(t_finish+2, crc2, sizeof(unsigned char)*2);
 80081f6:	4a24      	ldr	r2, [pc, #144]	@ (8008288 <tbox_finish+0x1c8>)
 80081f8:	193b      	adds	r3, r7, r4
 80081fa:	0010      	movs	r0, r2
 80081fc:	0019      	movs	r1, r3
 80081fe:	2302      	movs	r3, #2
 8008200:	001a      	movs	r2, r3
 8008202:	f010 fda8 	bl	8018d56 <memcpy>
	memcpy(t_finish+4, hd2, sizeof(unsigned char)*6);
 8008206:	4a21      	ldr	r2, [pc, #132]	@ (800828c <tbox_finish+0x1cc>)
 8008208:	4b14      	ldr	r3, [pc, #80]	@ (800825c <tbox_finish+0x19c>)
 800820a:	0010      	movs	r0, r2
 800820c:	0019      	movs	r1, r3
 800820e:	2306      	movs	r3, #6
 8008210:	001a      	movs	r2, r3
 8008212:	f010 fda0 	bl	8018d56 <memcpy>
	memcpy(t_finish+10, data2, sizeof(unsigned char)*26);
 8008216:	4a1e      	ldr	r2, [pc, #120]	@ (8008290 <tbox_finish+0x1d0>)
 8008218:	4b13      	ldr	r3, [pc, #76]	@ (8008268 <tbox_finish+0x1a8>)
 800821a:	0010      	movs	r0, r2
 800821c:	0019      	movs	r1, r3
 800821e:	231a      	movs	r3, #26
 8008220:	001a      	movs	r2, r3
 8008222:	f010 fd98 	bl	8018d56 <memcpy>

	//transmit
	unsigned char buffer[sizeof(t_finish)];
	memset(buffer, 0, sizeof(t_finish));
 8008226:	255c      	movs	r5, #92	@ 0x5c
 8008228:	197b      	adds	r3, r7, r5
 800822a:	2224      	movs	r2, #36	@ 0x24
 800822c:	2100      	movs	r1, #0
 800822e:	0018      	movs	r0, r3
 8008230:	f010 fd0e 	bl	8018c50 <memset>
	memcpy(buffer, &t_finish, sizeof(t_finish));
 8008234:	197b      	adds	r3, r7, r5
 8008236:	4a13      	ldr	r2, [pc, #76]	@ (8008284 <tbox_finish+0x1c4>)
 8008238:	ca13      	ldmia	r2!, {r0, r1, r4}
 800823a:	c313      	stmia	r3!, {r0, r1, r4}
 800823c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800823e:	c313      	stmia	r3!, {r0, r1, r4}
 8008240:	ca13      	ldmia	r2!, {r0, r1, r4}
 8008242:	c313      	stmia	r3!, {r0, r1, r4}
	HAL_UART_Transmit(&huart4, (uint8_t *)buffer, sizeof(buffer),0xffff);
 8008244:	4b13      	ldr	r3, [pc, #76]	@ (8008294 <tbox_finish+0x1d4>)
 8008246:	1979      	adds	r1, r7, r5
 8008248:	4813      	ldr	r0, [pc, #76]	@ (8008298 <tbox_finish+0x1d8>)
 800824a:	2224      	movs	r2, #36	@ 0x24
 800824c:	f00a ffa0 	bl	8013190 <HAL_UART_Transmit>

	//clear
//	memset(t_finish, 0, 36);
}
 8008250:	46c0      	nop			@ (mov r8, r8)
 8008252:	46bd      	mov	sp, r7
 8008254:	b02b      	add	sp, #172	@ 0xac
 8008256:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008258:	20000b24 	.word	0x20000b24
 800825c:	20000238 	.word	0x20000238
 8008260:	20000c20 	.word	0x20000c20
 8008264:	20000c78 	.word	0x20000c78
 8008268:	20000b48 	.word	0x20000b48
 800826c:	20000c7a 	.word	0x20000c7a
 8008270:	20000c7c 	.word	0x20000c7c
 8008274:	20000c7e 	.word	0x20000c7e
 8008278:	20000c80 	.word	0x20000c80
 800827c:	20000c82 	.word	0x20000c82
 8008280:	2000022c 	.word	0x2000022c
 8008284:	20000b74 	.word	0x20000b74
 8008288:	20000b76 	.word	0x20000b76
 800828c:	20000b78 	.word	0x20000b78
 8008290:	20000b7e 	.word	0x20000b7e
 8008294:	0000ffff 	.word	0x0000ffff
 8008298:	20000808 	.word	0x20000808

0800829c <printer_process>:

void printer_process(void)
{
 800829c:	b5b0      	push	{r4, r5, r7, lr}
 800829e:	af00      	add	r7, sp, #0
	//row_init: space + enter
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) uTx_Data, sizeof(uTx_Data), 0xffff);
 80082a0:	4baf      	ldr	r3, [pc, #700]	@ (8008560 <printer_process+0x2c4>)
 80082a2:	49b0      	ldr	r1, [pc, #704]	@ (8008564 <printer_process+0x2c8>)
 80082a4:	48b0      	ldr	r0, [pc, #704]	@ (8008568 <printer_process+0x2cc>)
 80082a6:	2206      	movs	r2, #6
 80082a8:	f00a ff72 	bl	8013190 <HAL_UART_Transmit>
	//row1: taxi no.
	memcpy(receipt1.sp, cmd, 6);
 80082ac:	4baf      	ldr	r3, [pc, #700]	@ (800856c <printer_process+0x2d0>)
 80082ae:	4ab0      	ldr	r2, [pc, #704]	@ (8008570 <printer_process+0x2d4>)
 80082b0:	6811      	ldr	r1, [r2, #0]
 80082b2:	6019      	str	r1, [r3, #0]
 80082b4:	8892      	ldrh	r2, [r2, #4]
 80082b6:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg01, 9);
 80082b8:	4bac      	ldr	r3, [pc, #688]	@ (800856c <printer_process+0x2d0>)
 80082ba:	2206      	movs	r2, #6
 80082bc:	49ad      	ldr	r1, [pc, #692]	@ (8008574 <printer_process+0x2d8>)
 80082be:	189b      	adds	r3, r3, r2
 80082c0:	2209      	movs	r2, #9
 80082c2:	0018      	movs	r0, r3
 80082c4:	f010 fd47 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg02, 9);
 80082c8:	4ba8      	ldr	r3, [pc, #672]	@ (800856c <printer_process+0x2d0>)
 80082ca:	220f      	movs	r2, #15
 80082cc:	49aa      	ldr	r1, [pc, #680]	@ (8008578 <printer_process+0x2dc>)
 80082ce:	189b      	adds	r3, r3, r2
 80082d0:	2209      	movs	r2, #9
 80082d2:	0018      	movs	r0, r3
 80082d4:	f010 fd3f 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, plate, 14);
 80082d8:	4ba4      	ldr	r3, [pc, #656]	@ (800856c <printer_process+0x2d0>)
 80082da:	4aa8      	ldr	r2, [pc, #672]	@ (800857c <printer_process+0x2e0>)
 80082dc:	3318      	adds	r3, #24
 80082de:	ca13      	ldmia	r2!, {r0, r1, r4}
 80082e0:	c313      	stmia	r3!, {r0, r1, r4}
 80082e2:	8812      	ldrh	r2, [r2, #0]
 80082e4:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 80082e6:	4ba6      	ldr	r3, [pc, #664]	@ (8008580 <printer_process+0x2e4>)
 80082e8:	881a      	ldrh	r2, [r3, #0]
 80082ea:	4ba0      	ldr	r3, [pc, #640]	@ (800856c <printer_process+0x2d0>)
 80082ec:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 80082ee:	4a9e      	ldr	r2, [pc, #632]	@ (8008568 <printer_process+0x2cc>)
 80082f0:	4b9e      	ldr	r3, [pc, #632]	@ (800856c <printer_process+0x2d0>)
 80082f2:	0011      	movs	r1, r2
 80082f4:	0018      	movs	r0, r3
 80082f6:	f000 fd7d 	bl	8008df4 <printer_transmit>
	//row2: start
	memcpy(receipt1.sp, cmd, 6);
 80082fa:	4b9c      	ldr	r3, [pc, #624]	@ (800856c <printer_process+0x2d0>)
 80082fc:	4a9c      	ldr	r2, [pc, #624]	@ (8008570 <printer_process+0x2d4>)
 80082fe:	6811      	ldr	r1, [r2, #0]
 8008300:	6019      	str	r1, [r3, #0]
 8008302:	8892      	ldrh	r2, [r2, #4]
 8008304:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg03, 9);
 8008306:	4b99      	ldr	r3, [pc, #612]	@ (800856c <printer_process+0x2d0>)
 8008308:	2206      	movs	r2, #6
 800830a:	499e      	ldr	r1, [pc, #632]	@ (8008584 <printer_process+0x2e8>)
 800830c:	189b      	adds	r3, r3, r2
 800830e:	2209      	movs	r2, #9
 8008310:	0018      	movs	r0, r3
 8008312:	f010 fd20 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg04, 9);
 8008316:	4b95      	ldr	r3, [pc, #596]	@ (800856c <printer_process+0x2d0>)
 8008318:	220f      	movs	r2, #15
 800831a:	499b      	ldr	r1, [pc, #620]	@ (8008588 <printer_process+0x2ec>)
 800831c:	189b      	adds	r3, r3, r2
 800831e:	2209      	movs	r2, #9
 8008320:	0018      	movs	r0, r3
 8008322:	f010 fd18 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, start, 14);
 8008326:	4b91      	ldr	r3, [pc, #580]	@ (800856c <printer_process+0x2d0>)
 8008328:	4a98      	ldr	r2, [pc, #608]	@ (800858c <printer_process+0x2f0>)
 800832a:	3318      	adds	r3, #24
 800832c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800832e:	c313      	stmia	r3!, {r0, r1, r4}
 8008330:	8812      	ldrh	r2, [r2, #0]
 8008332:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 8008334:	4b92      	ldr	r3, [pc, #584]	@ (8008580 <printer_process+0x2e4>)
 8008336:	881a      	ldrh	r2, [r3, #0]
 8008338:	4b8c      	ldr	r3, [pc, #560]	@ (800856c <printer_process+0x2d0>)
 800833a:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 800833c:	4a8a      	ldr	r2, [pc, #552]	@ (8008568 <printer_process+0x2cc>)
 800833e:	4b8b      	ldr	r3, [pc, #556]	@ (800856c <printer_process+0x2d0>)
 8008340:	0011      	movs	r1, r2
 8008342:	0018      	movs	r0, r3
 8008344:	f000 fd56 	bl	8008df4 <printer_transmit>
	//row3: end
	memcpy(receipt1.sp, cmd, 6);
 8008348:	4b88      	ldr	r3, [pc, #544]	@ (800856c <printer_process+0x2d0>)
 800834a:	4a89      	ldr	r2, [pc, #548]	@ (8008570 <printer_process+0x2d4>)
 800834c:	6811      	ldr	r1, [r2, #0]
 800834e:	6019      	str	r1, [r3, #0]
 8008350:	8892      	ldrh	r2, [r2, #4]
 8008352:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg05, 9);
 8008354:	4b85      	ldr	r3, [pc, #532]	@ (800856c <printer_process+0x2d0>)
 8008356:	2206      	movs	r2, #6
 8008358:	498d      	ldr	r1, [pc, #564]	@ (8008590 <printer_process+0x2f4>)
 800835a:	189b      	adds	r3, r3, r2
 800835c:	2209      	movs	r2, #9
 800835e:	0018      	movs	r0, r3
 8008360:	f010 fcf9 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg06, 9);
 8008364:	4b81      	ldr	r3, [pc, #516]	@ (800856c <printer_process+0x2d0>)
 8008366:	220f      	movs	r2, #15
 8008368:	498a      	ldr	r1, [pc, #552]	@ (8008594 <printer_process+0x2f8>)
 800836a:	189b      	adds	r3, r3, r2
 800836c:	2209      	movs	r2, #9
 800836e:	0018      	movs	r0, r3
 8008370:	f010 fcf1 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, end, 14);
 8008374:	4b7d      	ldr	r3, [pc, #500]	@ (800856c <printer_process+0x2d0>)
 8008376:	4a88      	ldr	r2, [pc, #544]	@ (8008598 <printer_process+0x2fc>)
 8008378:	3318      	adds	r3, #24
 800837a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800837c:	c313      	stmia	r3!, {r0, r1, r4}
 800837e:	8812      	ldrh	r2, [r2, #0]
 8008380:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 8008382:	4b7f      	ldr	r3, [pc, #508]	@ (8008580 <printer_process+0x2e4>)
 8008384:	881a      	ldrh	r2, [r3, #0]
 8008386:	4b79      	ldr	r3, [pc, #484]	@ (800856c <printer_process+0x2d0>)
 8008388:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 800838a:	4a77      	ldr	r2, [pc, #476]	@ (8008568 <printer_process+0x2cc>)
 800838c:	4b77      	ldr	r3, [pc, #476]	@ (800856c <printer_process+0x2d0>)
 800838e:	0011      	movs	r1, r2
 8008390:	0018      	movs	r0, r3
 8008392:	f000 fd2f 	bl	8008df4 <printer_transmit>
	//row4: total_km
	memcpy(receipt1.sp, cmd, 6);
 8008396:	4b75      	ldr	r3, [pc, #468]	@ (800856c <printer_process+0x2d0>)
 8008398:	4a75      	ldr	r2, [pc, #468]	@ (8008570 <printer_process+0x2d4>)
 800839a:	6811      	ldr	r1, [r2, #0]
 800839c:	6019      	str	r1, [r3, #0]
 800839e:	8892      	ldrh	r2, [r2, #4]
 80083a0:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg07, 9);
 80083a2:	4b72      	ldr	r3, [pc, #456]	@ (800856c <printer_process+0x2d0>)
 80083a4:	2206      	movs	r2, #6
 80083a6:	497d      	ldr	r1, [pc, #500]	@ (800859c <printer_process+0x300>)
 80083a8:	189b      	adds	r3, r3, r2
 80083aa:	2209      	movs	r2, #9
 80083ac:	0018      	movs	r0, r3
 80083ae:	f010 fcd2 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg08, 9);
 80083b2:	4b6e      	ldr	r3, [pc, #440]	@ (800856c <printer_process+0x2d0>)
 80083b4:	220f      	movs	r2, #15
 80083b6:	497a      	ldr	r1, [pc, #488]	@ (80085a0 <printer_process+0x304>)
 80083b8:	189b      	adds	r3, r3, r2
 80083ba:	2209      	movs	r2, #9
 80083bc:	0018      	movs	r0, r3
 80083be:	f010 fcca 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, total_km, 14);
 80083c2:	4b6a      	ldr	r3, [pc, #424]	@ (800856c <printer_process+0x2d0>)
 80083c4:	4a77      	ldr	r2, [pc, #476]	@ (80085a4 <printer_process+0x308>)
 80083c6:	3318      	adds	r3, #24
 80083c8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80083ca:	c313      	stmia	r3!, {r0, r1, r4}
 80083cc:	8812      	ldrh	r2, [r2, #0]
 80083ce:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 80083d0:	4b6b      	ldr	r3, [pc, #428]	@ (8008580 <printer_process+0x2e4>)
 80083d2:	881a      	ldrh	r2, [r3, #0]
 80083d4:	4b65      	ldr	r3, [pc, #404]	@ (800856c <printer_process+0x2d0>)
 80083d6:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 80083d8:	4a63      	ldr	r2, [pc, #396]	@ (8008568 <printer_process+0x2cc>)
 80083da:	4b64      	ldr	r3, [pc, #400]	@ (800856c <printer_process+0x2d0>)
 80083dc:	0011      	movs	r1, r2
 80083de:	0018      	movs	r0, r3
 80083e0:	f000 fd08 	bl	8008df4 <printer_transmit>
	//row5: paid_km
	memcpy(receipt1.sp, cmd, 6);
 80083e4:	4b61      	ldr	r3, [pc, #388]	@ (800856c <printer_process+0x2d0>)
 80083e6:	4a62      	ldr	r2, [pc, #392]	@ (8008570 <printer_process+0x2d4>)
 80083e8:	6811      	ldr	r1, [r2, #0]
 80083ea:	6019      	str	r1, [r3, #0]
 80083ec:	8892      	ldrh	r2, [r2, #4]
 80083ee:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg09, 9);
 80083f0:	4b5e      	ldr	r3, [pc, #376]	@ (800856c <printer_process+0x2d0>)
 80083f2:	2206      	movs	r2, #6
 80083f4:	496c      	ldr	r1, [pc, #432]	@ (80085a8 <printer_process+0x30c>)
 80083f6:	189b      	adds	r3, r3, r2
 80083f8:	2209      	movs	r2, #9
 80083fa:	0018      	movs	r0, r3
 80083fc:	f010 fcab 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg10, 9);
 8008400:	4b5a      	ldr	r3, [pc, #360]	@ (800856c <printer_process+0x2d0>)
 8008402:	220f      	movs	r2, #15
 8008404:	4969      	ldr	r1, [pc, #420]	@ (80085ac <printer_process+0x310>)
 8008406:	189b      	adds	r3, r3, r2
 8008408:	2209      	movs	r2, #9
 800840a:	0018      	movs	r0, r3
 800840c:	f010 fca3 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, paid_km, 14);
 8008410:	4b56      	ldr	r3, [pc, #344]	@ (800856c <printer_process+0x2d0>)
 8008412:	4a67      	ldr	r2, [pc, #412]	@ (80085b0 <printer_process+0x314>)
 8008414:	3318      	adds	r3, #24
 8008416:	ca13      	ldmia	r2!, {r0, r1, r4}
 8008418:	c313      	stmia	r3!, {r0, r1, r4}
 800841a:	8812      	ldrh	r2, [r2, #0]
 800841c:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 800841e:	4b58      	ldr	r3, [pc, #352]	@ (8008580 <printer_process+0x2e4>)
 8008420:	881a      	ldrh	r2, [r3, #0]
 8008422:	4b52      	ldr	r3, [pc, #328]	@ (800856c <printer_process+0x2d0>)
 8008424:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 8008426:	4a50      	ldr	r2, [pc, #320]	@ (8008568 <printer_process+0x2cc>)
 8008428:	4b50      	ldr	r3, [pc, #320]	@ (800856c <printer_process+0x2d0>)
 800842a:	0011      	movs	r1, r2
 800842c:	0018      	movs	r0, r3
 800842e:	f000 fce1 	bl	8008df4 <printer_transmit>
	//row6: paid_min
	memcpy(receipt1.sp, cmd, 6);
 8008432:	4b4e      	ldr	r3, [pc, #312]	@ (800856c <printer_process+0x2d0>)
 8008434:	4a4e      	ldr	r2, [pc, #312]	@ (8008570 <printer_process+0x2d4>)
 8008436:	6811      	ldr	r1, [r2, #0]
 8008438:	6019      	str	r1, [r3, #0]
 800843a:	8892      	ldrh	r2, [r2, #4]
 800843c:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg11, 9);
 800843e:	4b4b      	ldr	r3, [pc, #300]	@ (800856c <printer_process+0x2d0>)
 8008440:	2206      	movs	r2, #6
 8008442:	495c      	ldr	r1, [pc, #368]	@ (80085b4 <printer_process+0x318>)
 8008444:	189b      	adds	r3, r3, r2
 8008446:	2209      	movs	r2, #9
 8008448:	0018      	movs	r0, r3
 800844a:	f010 fc84 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg12, 9);
 800844e:	4b47      	ldr	r3, [pc, #284]	@ (800856c <printer_process+0x2d0>)
 8008450:	220f      	movs	r2, #15
 8008452:	4959      	ldr	r1, [pc, #356]	@ (80085b8 <printer_process+0x31c>)
 8008454:	189b      	adds	r3, r3, r2
 8008456:	2209      	movs	r2, #9
 8008458:	0018      	movs	r0, r3
 800845a:	f010 fc7c 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, paid_min, 14);
 800845e:	4b43      	ldr	r3, [pc, #268]	@ (800856c <printer_process+0x2d0>)
 8008460:	4a56      	ldr	r2, [pc, #344]	@ (80085bc <printer_process+0x320>)
 8008462:	3318      	adds	r3, #24
 8008464:	ca13      	ldmia	r2!, {r0, r1, r4}
 8008466:	c313      	stmia	r3!, {r0, r1, r4}
 8008468:	8812      	ldrh	r2, [r2, #0]
 800846a:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 800846c:	4b44      	ldr	r3, [pc, #272]	@ (8008580 <printer_process+0x2e4>)
 800846e:	881a      	ldrh	r2, [r3, #0]
 8008470:	4b3e      	ldr	r3, [pc, #248]	@ (800856c <printer_process+0x2d0>)
 8008472:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 8008474:	4a3c      	ldr	r2, [pc, #240]	@ (8008568 <printer_process+0x2cc>)
 8008476:	4b3d      	ldr	r3, [pc, #244]	@ (800856c <printer_process+0x2d0>)
 8008478:	0011      	movs	r1, r2
 800847a:	0018      	movs	r0, r3
 800847c:	f000 fcba 	bl	8008df4 <printer_transmit>
	//row7: surcharge
	memcpy(receipt1.sp, cmd, 6);
 8008480:	4b3a      	ldr	r3, [pc, #232]	@ (800856c <printer_process+0x2d0>)
 8008482:	4a3b      	ldr	r2, [pc, #236]	@ (8008570 <printer_process+0x2d4>)
 8008484:	6811      	ldr	r1, [r2, #0]
 8008486:	6019      	str	r1, [r3, #0]
 8008488:	8892      	ldrh	r2, [r2, #4]
 800848a:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg13, 9);
 800848c:	4b37      	ldr	r3, [pc, #220]	@ (800856c <printer_process+0x2d0>)
 800848e:	2206      	movs	r2, #6
 8008490:	494b      	ldr	r1, [pc, #300]	@ (80085c0 <printer_process+0x324>)
 8008492:	189b      	adds	r3, r3, r2
 8008494:	2209      	movs	r2, #9
 8008496:	0018      	movs	r0, r3
 8008498:	f010 fc5d 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg14, 9);
 800849c:	4b33      	ldr	r3, [pc, #204]	@ (800856c <printer_process+0x2d0>)
 800849e:	220f      	movs	r2, #15
 80084a0:	4948      	ldr	r1, [pc, #288]	@ (80085c4 <printer_process+0x328>)
 80084a2:	189b      	adds	r3, r3, r2
 80084a4:	2209      	movs	r2, #9
 80084a6:	0018      	movs	r0, r3
 80084a8:	f010 fc55 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, sub, 14);
 80084ac:	4b2f      	ldr	r3, [pc, #188]	@ (800856c <printer_process+0x2d0>)
 80084ae:	4a46      	ldr	r2, [pc, #280]	@ (80085c8 <printer_process+0x32c>)
 80084b0:	3318      	adds	r3, #24
 80084b2:	ca13      	ldmia	r2!, {r0, r1, r4}
 80084b4:	c313      	stmia	r3!, {r0, r1, r4}
 80084b6:	8812      	ldrh	r2, [r2, #0]
 80084b8:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 80084ba:	4b31      	ldr	r3, [pc, #196]	@ (8008580 <printer_process+0x2e4>)
 80084bc:	881a      	ldrh	r2, [r3, #0]
 80084be:	4b2b      	ldr	r3, [pc, #172]	@ (800856c <printer_process+0x2d0>)
 80084c0:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 80084c2:	4a29      	ldr	r2, [pc, #164]	@ (8008568 <printer_process+0x2cc>)
 80084c4:	4b29      	ldr	r3, [pc, #164]	@ (800856c <printer_process+0x2d0>)
 80084c6:	0011      	movs	r1, r2
 80084c8:	0018      	movs	r0, r3
 80084ca:	f000 fc93 	bl	8008df4 <printer_transmit>
	//row8: total_fare
	memcpy(receipt2.sp, cmd, 6);
 80084ce:	4b3f      	ldr	r3, [pc, #252]	@ (80085cc <printer_process+0x330>)
 80084d0:	4a27      	ldr	r2, [pc, #156]	@ (8008570 <printer_process+0x2d4>)
 80084d2:	6811      	ldr	r1, [r2, #0]
 80084d4:	6019      	str	r1, [r3, #0]
 80084d6:	8892      	ldrh	r2, [r2, #4]
 80084d8:	809a      	strh	r2, [r3, #4]
	memcpy(receipt2.ch, msg15, 9);
 80084da:	4b3c      	ldr	r3, [pc, #240]	@ (80085cc <printer_process+0x330>)
 80084dc:	2206      	movs	r2, #6
 80084de:	493c      	ldr	r1, [pc, #240]	@ (80085d0 <printer_process+0x334>)
 80084e0:	189b      	adds	r3, r3, r2
 80084e2:	2209      	movs	r2, #9
 80084e4:	0018      	movs	r0, r3
 80084e6:	f010 fc36 	bl	8018d56 <memcpy>
	memcpy(receipt2.en, msg16, 10);
 80084ea:	4b38      	ldr	r3, [pc, #224]	@ (80085cc <printer_process+0x330>)
 80084ec:	220f      	movs	r2, #15
 80084ee:	4939      	ldr	r1, [pc, #228]	@ (80085d4 <printer_process+0x338>)
 80084f0:	189b      	adds	r3, r3, r2
 80084f2:	220a      	movs	r2, #10
 80084f4:	0018      	movs	r0, r3
 80084f6:	f010 fc2e 	bl	8018d56 <memcpy>
	memcpy(receipt2.va, t_fare, 13);
 80084fa:	4b34      	ldr	r3, [pc, #208]	@ (80085cc <printer_process+0x330>)
 80084fc:	2219      	movs	r2, #25
 80084fe:	4936      	ldr	r1, [pc, #216]	@ (80085d8 <printer_process+0x33c>)
 8008500:	189b      	adds	r3, r3, r2
 8008502:	220d      	movs	r2, #13
 8008504:	0018      	movs	r0, r3
 8008506:	f010 fc26 	bl	8018d56 <memcpy>
	memcpy(receipt2.cmd, enter,2);
 800850a:	4b1d      	ldr	r3, [pc, #116]	@ (8008580 <printer_process+0x2e4>)
 800850c:	881a      	ldrh	r2, [r3, #0]
 800850e:	4b2f      	ldr	r3, [pc, #188]	@ (80085cc <printer_process+0x330>)
 8008510:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit2(&receipt2, &hlpuart1);
 8008512:	4a15      	ldr	r2, [pc, #84]	@ (8008568 <printer_process+0x2cc>)
 8008514:	4b2d      	ldr	r3, [pc, #180]	@ (80085cc <printer_process+0x330>)
 8008516:	0011      	movs	r1, r2
 8008518:	0018      	movs	r0, r3
 800851a:	f000 fc8d 	bl	8008e38 <printer_transmit2>
	//row_end: thank you
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) enter, sizeof(enter), 0xffff);
 800851e:	4b10      	ldr	r3, [pc, #64]	@ (8008560 <printer_process+0x2c4>)
 8008520:	4917      	ldr	r1, [pc, #92]	@ (8008580 <printer_process+0x2e4>)
 8008522:	4811      	ldr	r0, [pc, #68]	@ (8008568 <printer_process+0x2cc>)
 8008524:	2202      	movs	r2, #2
 8008526:	f00a fe33 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) msg17, sizeof(msg17), 0xffff);
 800852a:	4b0d      	ldr	r3, [pc, #52]	@ (8008560 <printer_process+0x2c4>)
 800852c:	492b      	ldr	r1, [pc, #172]	@ (80085dc <printer_process+0x340>)
 800852e:	480e      	ldr	r0, [pc, #56]	@ (8008568 <printer_process+0x2cc>)
 8008530:	2210      	movs	r2, #16
 8008532:	f00a fe2d 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) msg18, sizeof(msg18), 0xffff);
 8008536:	4b0a      	ldr	r3, [pc, #40]	@ (8008560 <printer_process+0x2c4>)
 8008538:	4929      	ldr	r1, [pc, #164]	@ (80085e0 <printer_process+0x344>)
 800853a:	480b      	ldr	r0, [pc, #44]	@ (8008568 <printer_process+0x2cc>)
 800853c:	2210      	movs	r2, #16
 800853e:	f00a fe27 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) uTx_Data, sizeof(uTx_Data), 0xffff);
 8008542:	4b07      	ldr	r3, [pc, #28]	@ (8008560 <printer_process+0x2c4>)
 8008544:	4907      	ldr	r1, [pc, #28]	@ (8008564 <printer_process+0x2c8>)
 8008546:	4808      	ldr	r0, [pc, #32]	@ (8008568 <printer_process+0x2cc>)
 8008548:	2206      	movs	r2, #6
 800854a:	f00a fe21 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) uTx_Data, sizeof(uTx_Data), 0xffff);
 800854e:	4b04      	ldr	r3, [pc, #16]	@ (8008560 <printer_process+0x2c4>)
 8008550:	4904      	ldr	r1, [pc, #16]	@ (8008564 <printer_process+0x2c8>)
 8008552:	4805      	ldr	r0, [pc, #20]	@ (8008568 <printer_process+0x2cc>)
 8008554:	2206      	movs	r2, #6
 8008556:	f00a fe1b 	bl	8013190 <HAL_UART_Transmit>
}
 800855a:	46c0      	nop			@ (mov r8, r8)
 800855c:	46bd      	mov	sp, r7
 800855e:	bdb0      	pop	{r4, r5, r7, pc}
 8008560:	0000ffff 	.word	0x0000ffff
 8008564:	2000018c 	.word	0x2000018c
 8008568:	200005c8 	.word	0x200005c8
 800856c:	20000ad0 	.word	0x20000ad0
 8008570:	20000194 	.word	0x20000194
 8008574:	200000a8 	.word	0x200000a8
 8008578:	20000108 	.word	0x20000108
 800857c:	2000019c 	.word	0x2000019c
 8008580:	20000188 	.word	0x20000188
 8008584:	200000b4 	.word	0x200000b4
 8008588:	20000114 	.word	0x20000114
 800858c:	200001ac 	.word	0x200001ac
 8008590:	200000c0 	.word	0x200000c0
 8008594:	20000120 	.word	0x20000120
 8008598:	200001bc 	.word	0x200001bc
 800859c:	200000cc 	.word	0x200000cc
 80085a0:	2000012c 	.word	0x2000012c
 80085a4:	200001dc 	.word	0x200001dc
 80085a8:	200000d8 	.word	0x200000d8
 80085ac:	20000138 	.word	0x20000138
 80085b0:	200001ec 	.word	0x200001ec
 80085b4:	200000e4 	.word	0x200000e4
 80085b8:	20000144 	.word	0x20000144
 80085bc:	200001fc 	.word	0x200001fc
 80085c0:	200000f0 	.word	0x200000f0
 80085c4:	20000150 	.word	0x20000150
 80085c8:	2000020c 	.word	0x2000020c
 80085cc:	20000af8 	.word	0x20000af8
 80085d0:	200000fc 	.word	0x200000fc
 80085d4:	2000015c 	.word	0x2000015c
 80085d8:	2000021c 	.word	0x2000021c
 80085dc:	20000168 	.word	0x20000168
 80085e0:	20000178 	.word	0x20000178

080085e4 <printer_e>:

void printer_e(void)
{
 80085e4:	b590      	push	{r4, r7, lr}
 80085e6:	b087      	sub	sp, #28
 80085e8:	af00      	add	r7, sp, #0
	E_read();
 80085ea:	f002 fbbd 	bl	800ad68 <E_read>
	//row_init: space + enter
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) uTx_Data, sizeof(uTx_Data), 0xffff);
 80085ee:	4bc6      	ldr	r3, [pc, #792]	@ (8008908 <printer_e+0x324>)
 80085f0:	49c6      	ldr	r1, [pc, #792]	@ (800890c <printer_e+0x328>)
 80085f2:	48c7      	ldr	r0, [pc, #796]	@ (8008910 <printer_e+0x32c>)
 80085f4:	2206      	movs	r2, #6
 80085f6:	f00a fdcb 	bl	8013190 <HAL_UART_Transmit>
	//row1: taxi no.
	memcpy(receipt1.sp, cmd, 6);
 80085fa:	4bc6      	ldr	r3, [pc, #792]	@ (8008914 <printer_e+0x330>)
 80085fc:	4ac6      	ldr	r2, [pc, #792]	@ (8008918 <printer_e+0x334>)
 80085fe:	6811      	ldr	r1, [r2, #0]
 8008600:	6019      	str	r1, [r3, #0]
 8008602:	8892      	ldrh	r2, [r2, #4]
 8008604:	809a      	strh	r2, [r3, #4]
	memcpy(receipt1.ch, msg01, 9);
 8008606:	4bc3      	ldr	r3, [pc, #780]	@ (8008914 <printer_e+0x330>)
 8008608:	2206      	movs	r2, #6
 800860a:	49c4      	ldr	r1, [pc, #784]	@ (800891c <printer_e+0x338>)
 800860c:	189b      	adds	r3, r3, r2
 800860e:	2209      	movs	r2, #9
 8008610:	0018      	movs	r0, r3
 8008612:	f010 fba0 	bl	8018d56 <memcpy>
	memcpy(receipt1.en, msg02, 9);
 8008616:	4bbf      	ldr	r3, [pc, #764]	@ (8008914 <printer_e+0x330>)
 8008618:	220f      	movs	r2, #15
 800861a:	49c1      	ldr	r1, [pc, #772]	@ (8008920 <printer_e+0x33c>)
 800861c:	189b      	adds	r3, r3, r2
 800861e:	2209      	movs	r2, #9
 8008620:	0018      	movs	r0, r3
 8008622:	f010 fb98 	bl	8018d56 <memcpy>
	memcpy(receipt1.va, plate, 14);
 8008626:	4bbb      	ldr	r3, [pc, #748]	@ (8008914 <printer_e+0x330>)
 8008628:	4abe      	ldr	r2, [pc, #760]	@ (8008924 <printer_e+0x340>)
 800862a:	3318      	adds	r3, #24
 800862c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800862e:	c313      	stmia	r3!, {r0, r1, r4}
 8008630:	8812      	ldrh	r2, [r2, #0]
 8008632:	801a      	strh	r2, [r3, #0]
	memcpy(receipt1.cmd, enter,2);
 8008634:	4bbc      	ldr	r3, [pc, #752]	@ (8008928 <printer_e+0x344>)
 8008636:	881a      	ldrh	r2, [r3, #0]
 8008638:	4bb6      	ldr	r3, [pc, #728]	@ (8008914 <printer_e+0x330>)
 800863a:	84da      	strh	r2, [r3, #38]	@ 0x26
	printer_transmit(&receipt1, &hlpuart1);
 800863c:	4ab4      	ldr	r2, [pc, #720]	@ (8008910 <printer_e+0x32c>)
 800863e:	4bb5      	ldr	r3, [pc, #724]	@ (8008914 <printer_e+0x330>)
 8008640:	0011      	movs	r1, r2
 8008642:	0018      	movs	r0, r3
 8008644:	f000 fbd6 	bl	8008df4 <printer_transmit>
	//row2: total km
	if (tkm[0] == 0x30)
 8008648:	4bb8      	ldr	r3, [pc, #736]	@ (800892c <printer_e+0x348>)
 800864a:	781b      	ldrb	r3, [r3, #0]
 800864c:	2b30      	cmp	r3, #48	@ 0x30
 800864e:	d103      	bne.n	8008658 <printer_e+0x74>
		data01[0] = 0x20;
 8008650:	4bb7      	ldr	r3, [pc, #732]	@ (8008930 <printer_e+0x34c>)
 8008652:	2220      	movs	r2, #32
 8008654:	701a      	strb	r2, [r3, #0]
 8008656:	e003      	b.n	8008660 <printer_e+0x7c>
	else
		data01[0] = tkm[0];
 8008658:	4bb4      	ldr	r3, [pc, #720]	@ (800892c <printer_e+0x348>)
 800865a:	781a      	ldrb	r2, [r3, #0]
 800865c:	4bb4      	ldr	r3, [pc, #720]	@ (8008930 <printer_e+0x34c>)
 800865e:	701a      	strb	r2, [r3, #0]

	for (int i=1; i<=4; i++)
 8008660:	2301      	movs	r3, #1
 8008662:	617b      	str	r3, [r7, #20]
 8008664:	e01d      	b.n	80086a2 <printer_e+0xbe>
	{
		if (tkm[i] == 0x30 && tkm[i-1] == 0x30)
 8008666:	4ab1      	ldr	r2, [pc, #708]	@ (800892c <printer_e+0x348>)
 8008668:	697b      	ldr	r3, [r7, #20]
 800866a:	18d3      	adds	r3, r2, r3
 800866c:	781b      	ldrb	r3, [r3, #0]
 800866e:	2b30      	cmp	r3, #48	@ 0x30
 8008670:	d10b      	bne.n	800868a <printer_e+0xa6>
 8008672:	697b      	ldr	r3, [r7, #20]
 8008674:	3b01      	subs	r3, #1
 8008676:	4aad      	ldr	r2, [pc, #692]	@ (800892c <printer_e+0x348>)
 8008678:	5cd3      	ldrb	r3, [r2, r3]
 800867a:	2b30      	cmp	r3, #48	@ 0x30
 800867c:	d105      	bne.n	800868a <printer_e+0xa6>
			data01[i] = 0x20;
 800867e:	4aac      	ldr	r2, [pc, #688]	@ (8008930 <printer_e+0x34c>)
 8008680:	697b      	ldr	r3, [r7, #20]
 8008682:	18d3      	adds	r3, r2, r3
 8008684:	2220      	movs	r2, #32
 8008686:	701a      	strb	r2, [r3, #0]
 8008688:	e008      	b.n	800869c <printer_e+0xb8>
		else
			data01[i] = tkm[i];
 800868a:	4aa8      	ldr	r2, [pc, #672]	@ (800892c <printer_e+0x348>)
 800868c:	697b      	ldr	r3, [r7, #20]
 800868e:	18d3      	adds	r3, r2, r3
 8008690:	7819      	ldrb	r1, [r3, #0]
 8008692:	4aa7      	ldr	r2, [pc, #668]	@ (8008930 <printer_e+0x34c>)
 8008694:	697b      	ldr	r3, [r7, #20]
 8008696:	18d3      	adds	r3, r2, r3
 8008698:	1c0a      	adds	r2, r1, #0
 800869a:	701a      	strb	r2, [r3, #0]
	for (int i=1; i<=4; i++)
 800869c:	697b      	ldr	r3, [r7, #20]
 800869e:	3301      	adds	r3, #1
 80086a0:	617b      	str	r3, [r7, #20]
 80086a2:	697b      	ldr	r3, [r7, #20]
 80086a4:	2b04      	cmp	r3, #4
 80086a6:	ddde      	ble.n	8008666 <printer_e+0x82>
	}
	data01[5] = tkm[5];
 80086a8:	4ba0      	ldr	r3, [pc, #640]	@ (800892c <printer_e+0x348>)
 80086aa:	795a      	ldrb	r2, [r3, #5]
 80086ac:	4ba0      	ldr	r3, [pc, #640]	@ (8008930 <printer_e+0x34c>)
 80086ae:	715a      	strb	r2, [r3, #5]
	data01[7] = tkm[6];
 80086b0:	4b9e      	ldr	r3, [pc, #632]	@ (800892c <printer_e+0x348>)
 80086b2:	799a      	ldrb	r2, [r3, #6]
 80086b4:	4b9e      	ldr	r3, [pc, #632]	@ (8008930 <printer_e+0x34c>)
 80086b6:	71da      	strb	r2, [r3, #7]
	data01[8] = tkm[7];
 80086b8:	4b9c      	ldr	r3, [pc, #624]	@ (800892c <printer_e+0x348>)
 80086ba:	79da      	ldrb	r2, [r3, #7]
 80086bc:	4b9c      	ldr	r3, [pc, #624]	@ (8008930 <printer_e+0x34c>)
 80086be:	721a      	strb	r2, [r3, #8]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 80086c0:	4b91      	ldr	r3, [pc, #580]	@ (8008908 <printer_e+0x324>)
 80086c2:	4995      	ldr	r1, [pc, #596]	@ (8008918 <printer_e+0x334>)
 80086c4:	4892      	ldr	r0, [pc, #584]	@ (8008910 <printer_e+0x32c>)
 80086c6:	2206      	movs	r2, #6
 80086c8:	f00a fd62 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg01, 23, 0xffff);
 80086cc:	4b8e      	ldr	r3, [pc, #568]	@ (8008908 <printer_e+0x324>)
 80086ce:	4999      	ldr	r1, [pc, #612]	@ (8008934 <printer_e+0x350>)
 80086d0:	488f      	ldr	r0, [pc, #572]	@ (8008910 <printer_e+0x32c>)
 80086d2:	2217      	movs	r2, #23
 80086d4:	f00a fd5c 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data01, 9, 0xffff);
 80086d8:	4b8b      	ldr	r3, [pc, #556]	@ (8008908 <printer_e+0x324>)
 80086da:	4995      	ldr	r1, [pc, #596]	@ (8008930 <printer_e+0x34c>)
 80086dc:	488c      	ldr	r0, [pc, #560]	@ (8008910 <printer_e+0x32c>)
 80086de:	2209      	movs	r2, #9
 80086e0:	f00a fd56 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 80086e4:	4b88      	ldr	r3, [pc, #544]	@ (8008908 <printer_e+0x324>)
 80086e6:	4990      	ldr	r1, [pc, #576]	@ (8008928 <printer_e+0x344>)
 80086e8:	4889      	ldr	r0, [pc, #548]	@ (8008910 <printer_e+0x32c>)
 80086ea:	2202      	movs	r2, #2
 80086ec:	f00a fd50 	bl	8013190 <HAL_UART_Transmit>
	//row3: paid km
	if (pkm[0] == 0x30)
 80086f0:	4b91      	ldr	r3, [pc, #580]	@ (8008938 <printer_e+0x354>)
 80086f2:	781b      	ldrb	r3, [r3, #0]
 80086f4:	2b30      	cmp	r3, #48	@ 0x30
 80086f6:	d103      	bne.n	8008700 <printer_e+0x11c>
		data02[0] = 0x20;
 80086f8:	4b90      	ldr	r3, [pc, #576]	@ (800893c <printer_e+0x358>)
 80086fa:	2220      	movs	r2, #32
 80086fc:	701a      	strb	r2, [r3, #0]
 80086fe:	e003      	b.n	8008708 <printer_e+0x124>
	else
		data02[0] = pkm[0];
 8008700:	4b8d      	ldr	r3, [pc, #564]	@ (8008938 <printer_e+0x354>)
 8008702:	781a      	ldrb	r2, [r3, #0]
 8008704:	4b8d      	ldr	r3, [pc, #564]	@ (800893c <printer_e+0x358>)
 8008706:	701a      	strb	r2, [r3, #0]

	for (int i=1; i<=4; i++)
 8008708:	2301      	movs	r3, #1
 800870a:	613b      	str	r3, [r7, #16]
 800870c:	e01d      	b.n	800874a <printer_e+0x166>
	{
		if (pkm[i] == 0x30 && pkm[i-1] == 0x30)
 800870e:	4a8a      	ldr	r2, [pc, #552]	@ (8008938 <printer_e+0x354>)
 8008710:	693b      	ldr	r3, [r7, #16]
 8008712:	18d3      	adds	r3, r2, r3
 8008714:	781b      	ldrb	r3, [r3, #0]
 8008716:	2b30      	cmp	r3, #48	@ 0x30
 8008718:	d10b      	bne.n	8008732 <printer_e+0x14e>
 800871a:	693b      	ldr	r3, [r7, #16]
 800871c:	3b01      	subs	r3, #1
 800871e:	4a86      	ldr	r2, [pc, #536]	@ (8008938 <printer_e+0x354>)
 8008720:	5cd3      	ldrb	r3, [r2, r3]
 8008722:	2b30      	cmp	r3, #48	@ 0x30
 8008724:	d105      	bne.n	8008732 <printer_e+0x14e>
			data02[i] = 0x20;
 8008726:	4a85      	ldr	r2, [pc, #532]	@ (800893c <printer_e+0x358>)
 8008728:	693b      	ldr	r3, [r7, #16]
 800872a:	18d3      	adds	r3, r2, r3
 800872c:	2220      	movs	r2, #32
 800872e:	701a      	strb	r2, [r3, #0]
 8008730:	e008      	b.n	8008744 <printer_e+0x160>
		else
			data02[i] = pkm[i];
 8008732:	4a81      	ldr	r2, [pc, #516]	@ (8008938 <printer_e+0x354>)
 8008734:	693b      	ldr	r3, [r7, #16]
 8008736:	18d3      	adds	r3, r2, r3
 8008738:	7819      	ldrb	r1, [r3, #0]
 800873a:	4a80      	ldr	r2, [pc, #512]	@ (800893c <printer_e+0x358>)
 800873c:	693b      	ldr	r3, [r7, #16]
 800873e:	18d3      	adds	r3, r2, r3
 8008740:	1c0a      	adds	r2, r1, #0
 8008742:	701a      	strb	r2, [r3, #0]
	for (int i=1; i<=4; i++)
 8008744:	693b      	ldr	r3, [r7, #16]
 8008746:	3301      	adds	r3, #1
 8008748:	613b      	str	r3, [r7, #16]
 800874a:	693b      	ldr	r3, [r7, #16]
 800874c:	2b04      	cmp	r3, #4
 800874e:	ddde      	ble.n	800870e <printer_e+0x12a>
	}
	data02[5] = pkm[5];
 8008750:	4b79      	ldr	r3, [pc, #484]	@ (8008938 <printer_e+0x354>)
 8008752:	795a      	ldrb	r2, [r3, #5]
 8008754:	4b79      	ldr	r3, [pc, #484]	@ (800893c <printer_e+0x358>)
 8008756:	715a      	strb	r2, [r3, #5]
	data02[7] = pkm[6];
 8008758:	4b77      	ldr	r3, [pc, #476]	@ (8008938 <printer_e+0x354>)
 800875a:	799a      	ldrb	r2, [r3, #6]
 800875c:	4b77      	ldr	r3, [pc, #476]	@ (800893c <printer_e+0x358>)
 800875e:	71da      	strb	r2, [r3, #7]
	data02[8] = pkm[7];
 8008760:	4b75      	ldr	r3, [pc, #468]	@ (8008938 <printer_e+0x354>)
 8008762:	79da      	ldrb	r2, [r3, #7]
 8008764:	4b75      	ldr	r3, [pc, #468]	@ (800893c <printer_e+0x358>)
 8008766:	721a      	strb	r2, [r3, #8]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008768:	4b67      	ldr	r3, [pc, #412]	@ (8008908 <printer_e+0x324>)
 800876a:	496b      	ldr	r1, [pc, #428]	@ (8008918 <printer_e+0x334>)
 800876c:	4868      	ldr	r0, [pc, #416]	@ (8008910 <printer_e+0x32c>)
 800876e:	2206      	movs	r2, #6
 8008770:	f00a fd0e 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg02, 23, 0xffff);
 8008774:	4b64      	ldr	r3, [pc, #400]	@ (8008908 <printer_e+0x324>)
 8008776:	4972      	ldr	r1, [pc, #456]	@ (8008940 <printer_e+0x35c>)
 8008778:	4865      	ldr	r0, [pc, #404]	@ (8008910 <printer_e+0x32c>)
 800877a:	2217      	movs	r2, #23
 800877c:	f00a fd08 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data02, 9, 0xffff);
 8008780:	4b61      	ldr	r3, [pc, #388]	@ (8008908 <printer_e+0x324>)
 8008782:	496e      	ldr	r1, [pc, #440]	@ (800893c <printer_e+0x358>)
 8008784:	4862      	ldr	r0, [pc, #392]	@ (8008910 <printer_e+0x32c>)
 8008786:	2209      	movs	r2, #9
 8008788:	f00a fd02 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 800878c:	4b5e      	ldr	r3, [pc, #376]	@ (8008908 <printer_e+0x324>)
 800878e:	4966      	ldr	r1, [pc, #408]	@ (8008928 <printer_e+0x344>)
 8008790:	485f      	ldr	r0, [pc, #380]	@ (8008910 <printer_e+0x32c>)
 8008792:	2202      	movs	r2, #2
 8008794:	f00a fcfc 	bl	8013190 <HAL_UART_Transmit>
	//row4: total flags
	if (tflag[2] == 0x30)
 8008798:	4b6a      	ldr	r3, [pc, #424]	@ (8008944 <printer_e+0x360>)
 800879a:	789b      	ldrb	r3, [r3, #2]
 800879c:	2b30      	cmp	r3, #48	@ 0x30
 800879e:	d103      	bne.n	80087a8 <printer_e+0x1c4>
		data03[3] = 0x20;
 80087a0:	4b69      	ldr	r3, [pc, #420]	@ (8008948 <printer_e+0x364>)
 80087a2:	2220      	movs	r2, #32
 80087a4:	70da      	strb	r2, [r3, #3]
 80087a6:	e003      	b.n	80087b0 <printer_e+0x1cc>
	else
		data03[3] = tflag[2];
 80087a8:	4b66      	ldr	r3, [pc, #408]	@ (8008944 <printer_e+0x360>)
 80087aa:	789a      	ldrb	r2, [r3, #2]
 80087ac:	4b66      	ldr	r3, [pc, #408]	@ (8008948 <printer_e+0x364>)
 80087ae:	70da      	strb	r2, [r3, #3]

	for (int i=3; i<=6; i++)
 80087b0:	2303      	movs	r3, #3
 80087b2:	60fb      	str	r3, [r7, #12]
 80087b4:	e01c      	b.n	80087f0 <printer_e+0x20c>
	{
		if (tflag[i] == 0x30 && tflag[i-1] == 0x30)
 80087b6:	4a63      	ldr	r2, [pc, #396]	@ (8008944 <printer_e+0x360>)
 80087b8:	68fb      	ldr	r3, [r7, #12]
 80087ba:	18d3      	adds	r3, r2, r3
 80087bc:	781b      	ldrb	r3, [r3, #0]
 80087be:	2b30      	cmp	r3, #48	@ 0x30
 80087c0:	d10b      	bne.n	80087da <printer_e+0x1f6>
 80087c2:	68fb      	ldr	r3, [r7, #12]
 80087c4:	3b01      	subs	r3, #1
 80087c6:	4a5f      	ldr	r2, [pc, #380]	@ (8008944 <printer_e+0x360>)
 80087c8:	5cd3      	ldrb	r3, [r2, r3]
 80087ca:	2b30      	cmp	r3, #48	@ 0x30
 80087cc:	d105      	bne.n	80087da <printer_e+0x1f6>
			data03[i+1] = 0x20;
 80087ce:	68fb      	ldr	r3, [r7, #12]
 80087d0:	3301      	adds	r3, #1
 80087d2:	4a5d      	ldr	r2, [pc, #372]	@ (8008948 <printer_e+0x364>)
 80087d4:	2120      	movs	r1, #32
 80087d6:	54d1      	strb	r1, [r2, r3]
 80087d8:	e007      	b.n	80087ea <printer_e+0x206>
		else
			data03[i+1] = tflag[i];
 80087da:	68fb      	ldr	r3, [r7, #12]
 80087dc:	3301      	adds	r3, #1
 80087de:	4959      	ldr	r1, [pc, #356]	@ (8008944 <printer_e+0x360>)
 80087e0:	68fa      	ldr	r2, [r7, #12]
 80087e2:	188a      	adds	r2, r1, r2
 80087e4:	7811      	ldrb	r1, [r2, #0]
 80087e6:	4a58      	ldr	r2, [pc, #352]	@ (8008948 <printer_e+0x364>)
 80087e8:	54d1      	strb	r1, [r2, r3]
	for (int i=3; i<=6; i++)
 80087ea:	68fb      	ldr	r3, [r7, #12]
 80087ec:	3301      	adds	r3, #1
 80087ee:	60fb      	str	r3, [r7, #12]
 80087f0:	68fb      	ldr	r3, [r7, #12]
 80087f2:	2b06      	cmp	r3, #6
 80087f4:	dddf      	ble.n	80087b6 <printer_e+0x1d2>
	}
	data03[8] = tflag[7];
 80087f6:	4b53      	ldr	r3, [pc, #332]	@ (8008944 <printer_e+0x360>)
 80087f8:	79da      	ldrb	r2, [r3, #7]
 80087fa:	4b53      	ldr	r3, [pc, #332]	@ (8008948 <printer_e+0x364>)
 80087fc:	721a      	strb	r2, [r3, #8]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 80087fe:	4b42      	ldr	r3, [pc, #264]	@ (8008908 <printer_e+0x324>)
 8008800:	4945      	ldr	r1, [pc, #276]	@ (8008918 <printer_e+0x334>)
 8008802:	4843      	ldr	r0, [pc, #268]	@ (8008910 <printer_e+0x32c>)
 8008804:	2206      	movs	r2, #6
 8008806:	f00a fcc3 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg03, 23, 0xffff);
 800880a:	4b3f      	ldr	r3, [pc, #252]	@ (8008908 <printer_e+0x324>)
 800880c:	494f      	ldr	r1, [pc, #316]	@ (800894c <printer_e+0x368>)
 800880e:	4840      	ldr	r0, [pc, #256]	@ (8008910 <printer_e+0x32c>)
 8008810:	2217      	movs	r2, #23
 8008812:	f00a fcbd 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data03, 9, 0xffff);
 8008816:	4b3c      	ldr	r3, [pc, #240]	@ (8008908 <printer_e+0x324>)
 8008818:	494b      	ldr	r1, [pc, #300]	@ (8008948 <printer_e+0x364>)
 800881a:	483d      	ldr	r0, [pc, #244]	@ (8008910 <printer_e+0x32c>)
 800881c:	2209      	movs	r2, #9
 800881e:	f00a fcb7 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008822:	4b39      	ldr	r3, [pc, #228]	@ (8008908 <printer_e+0x324>)
 8008824:	4940      	ldr	r1, [pc, #256]	@ (8008928 <printer_e+0x344>)
 8008826:	483a      	ldr	r0, [pc, #232]	@ (8008910 <printer_e+0x32c>)
 8008828:	2202      	movs	r2, #2
 800882a:	f00a fcb1 	bl	8013190 <HAL_UART_Transmit>
	//row5: current flags
	if (cflag[2] == 0x30)
 800882e:	4b48      	ldr	r3, [pc, #288]	@ (8008950 <printer_e+0x36c>)
 8008830:	789b      	ldrb	r3, [r3, #2]
 8008832:	2b30      	cmp	r3, #48	@ 0x30
 8008834:	d103      	bne.n	800883e <printer_e+0x25a>
		data04[3] = 0x20;
 8008836:	4b47      	ldr	r3, [pc, #284]	@ (8008954 <printer_e+0x370>)
 8008838:	2220      	movs	r2, #32
 800883a:	70da      	strb	r2, [r3, #3]
 800883c:	e003      	b.n	8008846 <printer_e+0x262>
	else
		data04[3] = cflag[2];
 800883e:	4b44      	ldr	r3, [pc, #272]	@ (8008950 <printer_e+0x36c>)
 8008840:	789a      	ldrb	r2, [r3, #2]
 8008842:	4b44      	ldr	r3, [pc, #272]	@ (8008954 <printer_e+0x370>)
 8008844:	70da      	strb	r2, [r3, #3]

	for (int i=3; i<=6; i++)
 8008846:	2303      	movs	r3, #3
 8008848:	60bb      	str	r3, [r7, #8]
 800884a:	e01c      	b.n	8008886 <printer_e+0x2a2>
	{
		if (cflag[i] == 0x30 && cflag[i-1] == 0x30)
 800884c:	4a40      	ldr	r2, [pc, #256]	@ (8008950 <printer_e+0x36c>)
 800884e:	68bb      	ldr	r3, [r7, #8]
 8008850:	18d3      	adds	r3, r2, r3
 8008852:	781b      	ldrb	r3, [r3, #0]
 8008854:	2b30      	cmp	r3, #48	@ 0x30
 8008856:	d10b      	bne.n	8008870 <printer_e+0x28c>
 8008858:	68bb      	ldr	r3, [r7, #8]
 800885a:	3b01      	subs	r3, #1
 800885c:	4a3c      	ldr	r2, [pc, #240]	@ (8008950 <printer_e+0x36c>)
 800885e:	5cd3      	ldrb	r3, [r2, r3]
 8008860:	2b30      	cmp	r3, #48	@ 0x30
 8008862:	d105      	bne.n	8008870 <printer_e+0x28c>
			data04[i+1] = 0x20;
 8008864:	68bb      	ldr	r3, [r7, #8]
 8008866:	3301      	adds	r3, #1
 8008868:	4a3a      	ldr	r2, [pc, #232]	@ (8008954 <printer_e+0x370>)
 800886a:	2120      	movs	r1, #32
 800886c:	54d1      	strb	r1, [r2, r3]
 800886e:	e007      	b.n	8008880 <printer_e+0x29c>
		else
			data04[i+1] = cflag[i];
 8008870:	68bb      	ldr	r3, [r7, #8]
 8008872:	3301      	adds	r3, #1
 8008874:	4936      	ldr	r1, [pc, #216]	@ (8008950 <printer_e+0x36c>)
 8008876:	68ba      	ldr	r2, [r7, #8]
 8008878:	188a      	adds	r2, r1, r2
 800887a:	7811      	ldrb	r1, [r2, #0]
 800887c:	4a35      	ldr	r2, [pc, #212]	@ (8008954 <printer_e+0x370>)
 800887e:	54d1      	strb	r1, [r2, r3]
	for (int i=3; i<=6; i++)
 8008880:	68bb      	ldr	r3, [r7, #8]
 8008882:	3301      	adds	r3, #1
 8008884:	60bb      	str	r3, [r7, #8]
 8008886:	68bb      	ldr	r3, [r7, #8]
 8008888:	2b06      	cmp	r3, #6
 800888a:	dddf      	ble.n	800884c <printer_e+0x268>
	}
	data04[8] = cflag[7];
 800888c:	4b30      	ldr	r3, [pc, #192]	@ (8008950 <printer_e+0x36c>)
 800888e:	79da      	ldrb	r2, [r3, #7]
 8008890:	4b30      	ldr	r3, [pc, #192]	@ (8008954 <printer_e+0x370>)
 8008892:	721a      	strb	r2, [r3, #8]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008894:	4b1c      	ldr	r3, [pc, #112]	@ (8008908 <printer_e+0x324>)
 8008896:	4920      	ldr	r1, [pc, #128]	@ (8008918 <printer_e+0x334>)
 8008898:	481d      	ldr	r0, [pc, #116]	@ (8008910 <printer_e+0x32c>)
 800889a:	2206      	movs	r2, #6
 800889c:	f00a fc78 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg04, 23, 0xffff);
 80088a0:	4b19      	ldr	r3, [pc, #100]	@ (8008908 <printer_e+0x324>)
 80088a2:	492d      	ldr	r1, [pc, #180]	@ (8008958 <printer_e+0x374>)
 80088a4:	481a      	ldr	r0, [pc, #104]	@ (8008910 <printer_e+0x32c>)
 80088a6:	2217      	movs	r2, #23
 80088a8:	f00a fc72 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data04, 9, 0xffff);
 80088ac:	4b16      	ldr	r3, [pc, #88]	@ (8008908 <printer_e+0x324>)
 80088ae:	4929      	ldr	r1, [pc, #164]	@ (8008954 <printer_e+0x370>)
 80088b0:	4817      	ldr	r0, [pc, #92]	@ (8008910 <printer_e+0x32c>)
 80088b2:	2209      	movs	r2, #9
 80088b4:	f00a fc6c 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 80088b8:	4b13      	ldr	r3, [pc, #76]	@ (8008908 <printer_e+0x324>)
 80088ba:	491b      	ldr	r1, [pc, #108]	@ (8008928 <printer_e+0x344>)
 80088bc:	4814      	ldr	r0, [pc, #80]	@ (8008910 <printer_e+0x32c>)
 80088be:	2202      	movs	r2, #2
 80088c0:	f00a fc66 	bl	8013190 <HAL_UART_Transmit>
	//row6: fare changes
	if (tpulse[2] == 0x30)
 80088c4:	4b25      	ldr	r3, [pc, #148]	@ (800895c <printer_e+0x378>)
 80088c6:	789b      	ldrb	r3, [r3, #2]
 80088c8:	2b30      	cmp	r3, #48	@ 0x30
 80088ca:	d103      	bne.n	80088d4 <printer_e+0x2f0>
		data05[3] = 0x20;
 80088cc:	4b24      	ldr	r3, [pc, #144]	@ (8008960 <printer_e+0x37c>)
 80088ce:	2220      	movs	r2, #32
 80088d0:	70da      	strb	r2, [r3, #3]
 80088d2:	e003      	b.n	80088dc <printer_e+0x2f8>
	else
		data05[3] = tpulse[2];
 80088d4:	4b21      	ldr	r3, [pc, #132]	@ (800895c <printer_e+0x378>)
 80088d6:	789a      	ldrb	r2, [r3, #2]
 80088d8:	4b21      	ldr	r3, [pc, #132]	@ (8008960 <printer_e+0x37c>)
 80088da:	70da      	strb	r2, [r3, #3]

	for (int i=3; i<=6; i++)
 80088dc:	2303      	movs	r3, #3
 80088de:	607b      	str	r3, [r7, #4]
 80088e0:	e04b      	b.n	800897a <printer_e+0x396>
	{
		if (tpulse[i] == 0x30 && tpulse[i-1] == 0x30)
 80088e2:	4a1e      	ldr	r2, [pc, #120]	@ (800895c <printer_e+0x378>)
 80088e4:	687b      	ldr	r3, [r7, #4]
 80088e6:	18d3      	adds	r3, r2, r3
 80088e8:	781b      	ldrb	r3, [r3, #0]
 80088ea:	2b30      	cmp	r3, #48	@ 0x30
 80088ec:	d13a      	bne.n	8008964 <printer_e+0x380>
 80088ee:	687b      	ldr	r3, [r7, #4]
 80088f0:	3b01      	subs	r3, #1
 80088f2:	4a1a      	ldr	r2, [pc, #104]	@ (800895c <printer_e+0x378>)
 80088f4:	5cd3      	ldrb	r3, [r2, r3]
 80088f6:	2b30      	cmp	r3, #48	@ 0x30
 80088f8:	d134      	bne.n	8008964 <printer_e+0x380>
			data05[i+1] = 0x20;
 80088fa:	687b      	ldr	r3, [r7, #4]
 80088fc:	3301      	adds	r3, #1
 80088fe:	4a18      	ldr	r2, [pc, #96]	@ (8008960 <printer_e+0x37c>)
 8008900:	2120      	movs	r1, #32
 8008902:	54d1      	strb	r1, [r2, r3]
 8008904:	e036      	b.n	8008974 <printer_e+0x390>
 8008906:	46c0      	nop			@ (mov r8, r8)
 8008908:	0000ffff 	.word	0x0000ffff
 800890c:	2000018c 	.word	0x2000018c
 8008910:	200005c8 	.word	0x200005c8
 8008914:	20000ad0 	.word	0x20000ad0
 8008918:	20000194 	.word	0x20000194
 800891c:	200000a8 	.word	0x200000a8
 8008920:	20000108 	.word	0x20000108
 8008924:	2000019c 	.word	0x2000019c
 8008928:	20000188 	.word	0x20000188
 800892c:	20000e5c 	.word	0x20000e5c
 8008930:	20000358 	.word	0x20000358
 8008934:	20000268 	.word	0x20000268
 8008938:	20000e64 	.word	0x20000e64
 800893c:	20000364 	.word	0x20000364
 8008940:	20000280 	.word	0x20000280
 8008944:	20000e6c 	.word	0x20000e6c
 8008948:	20000370 	.word	0x20000370
 800894c:	20000298 	.word	0x20000298
 8008950:	20000e74 	.word	0x20000e74
 8008954:	2000037c 	.word	0x2000037c
 8008958:	200002b0 	.word	0x200002b0
 800895c:	20000e7c 	.word	0x20000e7c
 8008960:	20000388 	.word	0x20000388
		else
			data05[i+1] = tpulse[i];
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	3301      	adds	r3, #1
 8008968:	49c7      	ldr	r1, [pc, #796]	@ (8008c88 <printer_e+0x6a4>)
 800896a:	687a      	ldr	r2, [r7, #4]
 800896c:	188a      	adds	r2, r1, r2
 800896e:	7811      	ldrb	r1, [r2, #0]
 8008970:	4ac6      	ldr	r2, [pc, #792]	@ (8008c8c <printer_e+0x6a8>)
 8008972:	54d1      	strb	r1, [r2, r3]
	for (int i=3; i<=6; i++)
 8008974:	687b      	ldr	r3, [r7, #4]
 8008976:	3301      	adds	r3, #1
 8008978:	607b      	str	r3, [r7, #4]
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	2b06      	cmp	r3, #6
 800897e:	ddb0      	ble.n	80088e2 <printer_e+0x2fe>
	}
	data05[8] = tpulse[7];
 8008980:	4bc1      	ldr	r3, [pc, #772]	@ (8008c88 <printer_e+0x6a4>)
 8008982:	79da      	ldrb	r2, [r3, #7]
 8008984:	4bc1      	ldr	r3, [pc, #772]	@ (8008c8c <printer_e+0x6a8>)
 8008986:	721a      	strb	r2, [r3, #8]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008988:	4bc1      	ldr	r3, [pc, #772]	@ (8008c90 <printer_e+0x6ac>)
 800898a:	49c2      	ldr	r1, [pc, #776]	@ (8008c94 <printer_e+0x6b0>)
 800898c:	48c2      	ldr	r0, [pc, #776]	@ (8008c98 <printer_e+0x6b4>)
 800898e:	2206      	movs	r2, #6
 8008990:	f00a fbfe 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg05, 23, 0xffff);
 8008994:	4bbe      	ldr	r3, [pc, #760]	@ (8008c90 <printer_e+0x6ac>)
 8008996:	49c1      	ldr	r1, [pc, #772]	@ (8008c9c <printer_e+0x6b8>)
 8008998:	48bf      	ldr	r0, [pc, #764]	@ (8008c98 <printer_e+0x6b4>)
 800899a:	2217      	movs	r2, #23
 800899c:	f00a fbf8 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data05, 9, 0xffff);
 80089a0:	4bbb      	ldr	r3, [pc, #748]	@ (8008c90 <printer_e+0x6ac>)
 80089a2:	49ba      	ldr	r1, [pc, #744]	@ (8008c8c <printer_e+0x6a8>)
 80089a4:	48bc      	ldr	r0, [pc, #752]	@ (8008c98 <printer_e+0x6b4>)
 80089a6:	2209      	movs	r2, #9
 80089a8:	f00a fbf2 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 80089ac:	4bb8      	ldr	r3, [pc, #736]	@ (8008c90 <printer_e+0x6ac>)
 80089ae:	49bc      	ldr	r1, [pc, #752]	@ (8008ca0 <printer_e+0x6bc>)
 80089b0:	48b9      	ldr	r0, [pc, #740]	@ (8008c98 <printer_e+0x6b4>)
 80089b2:	2202      	movs	r2, #2
 80089b4:	f00a fbec 	bl	8013190 <HAL_UART_Transmit>
	//row7: total fare
	if (tfare[1] == 0x30)
 80089b8:	4bba      	ldr	r3, [pc, #744]	@ (8008ca4 <printer_e+0x6c0>)
 80089ba:	785b      	ldrb	r3, [r3, #1]
 80089bc:	2b30      	cmp	r3, #48	@ 0x30
 80089be:	d103      	bne.n	80089c8 <printer_e+0x3e4>
		data06[0] = 0x20;
 80089c0:	4bb9      	ldr	r3, [pc, #740]	@ (8008ca8 <printer_e+0x6c4>)
 80089c2:	2220      	movs	r2, #32
 80089c4:	701a      	strb	r2, [r3, #0]
 80089c6:	e003      	b.n	80089d0 <printer_e+0x3ec>
	else
		data06[0] = tfare[1];
 80089c8:	4bb6      	ldr	r3, [pc, #728]	@ (8008ca4 <printer_e+0x6c0>)
 80089ca:	785a      	ldrb	r2, [r3, #1]
 80089cc:	4bb6      	ldr	r3, [pc, #728]	@ (8008ca8 <printer_e+0x6c4>)
 80089ce:	701a      	strb	r2, [r3, #0]

	if (tfare[2] == 0x30 && tfare[1] == 0x30)
 80089d0:	4bb4      	ldr	r3, [pc, #720]	@ (8008ca4 <printer_e+0x6c0>)
 80089d2:	789b      	ldrb	r3, [r3, #2]
 80089d4:	2b30      	cmp	r3, #48	@ 0x30
 80089d6:	d107      	bne.n	80089e8 <printer_e+0x404>
 80089d8:	4bb2      	ldr	r3, [pc, #712]	@ (8008ca4 <printer_e+0x6c0>)
 80089da:	785b      	ldrb	r3, [r3, #1]
 80089dc:	2b30      	cmp	r3, #48	@ 0x30
 80089de:	d103      	bne.n	80089e8 <printer_e+0x404>
		data06[1] = 0x20;
 80089e0:	4bb1      	ldr	r3, [pc, #708]	@ (8008ca8 <printer_e+0x6c4>)
 80089e2:	2220      	movs	r2, #32
 80089e4:	705a      	strb	r2, [r3, #1]
 80089e6:	e003      	b.n	80089f0 <printer_e+0x40c>
	else
		data06[1] = tfare[2];
 80089e8:	4bae      	ldr	r3, [pc, #696]	@ (8008ca4 <printer_e+0x6c0>)
 80089ea:	789a      	ldrb	r2, [r3, #2]
 80089ec:	4bae      	ldr	r3, [pc, #696]	@ (8008ca8 <printer_e+0x6c4>)
 80089ee:	705a      	strb	r2, [r3, #1]

	if (tfare[3] == 0x30 && tfare[2] == 0x30)
 80089f0:	4bac      	ldr	r3, [pc, #688]	@ (8008ca4 <printer_e+0x6c0>)
 80089f2:	78db      	ldrb	r3, [r3, #3]
 80089f4:	2b30      	cmp	r3, #48	@ 0x30
 80089f6:	d107      	bne.n	8008a08 <printer_e+0x424>
 80089f8:	4baa      	ldr	r3, [pc, #680]	@ (8008ca4 <printer_e+0x6c0>)
 80089fa:	789b      	ldrb	r3, [r3, #2]
 80089fc:	2b30      	cmp	r3, #48	@ 0x30
 80089fe:	d103      	bne.n	8008a08 <printer_e+0x424>
		data06[2] = 0x20;
 8008a00:	4ba9      	ldr	r3, [pc, #676]	@ (8008ca8 <printer_e+0x6c4>)
 8008a02:	2220      	movs	r2, #32
 8008a04:	709a      	strb	r2, [r3, #2]
 8008a06:	e003      	b.n	8008a10 <printer_e+0x42c>
	else
		data06[2] = tfare[3];
 8008a08:	4ba6      	ldr	r3, [pc, #664]	@ (8008ca4 <printer_e+0x6c0>)
 8008a0a:	78da      	ldrb	r2, [r3, #3]
 8008a0c:	4ba6      	ldr	r3, [pc, #664]	@ (8008ca8 <printer_e+0x6c4>)
 8008a0e:	709a      	strb	r2, [r3, #2]

	if (tfare[4] == 0x30 && tfare[3] == 0x30)
 8008a10:	4ba4      	ldr	r3, [pc, #656]	@ (8008ca4 <printer_e+0x6c0>)
 8008a12:	791b      	ldrb	r3, [r3, #4]
 8008a14:	2b30      	cmp	r3, #48	@ 0x30
 8008a16:	d107      	bne.n	8008a28 <printer_e+0x444>
 8008a18:	4ba2      	ldr	r3, [pc, #648]	@ (8008ca4 <printer_e+0x6c0>)
 8008a1a:	78db      	ldrb	r3, [r3, #3]
 8008a1c:	2b30      	cmp	r3, #48	@ 0x30
 8008a1e:	d103      	bne.n	8008a28 <printer_e+0x444>
		data06[3] = 0x20;
 8008a20:	4ba1      	ldr	r3, [pc, #644]	@ (8008ca8 <printer_e+0x6c4>)
 8008a22:	2220      	movs	r2, #32
 8008a24:	70da      	strb	r2, [r3, #3]
 8008a26:	e003      	b.n	8008a30 <printer_e+0x44c>
	else
		data06[3] = tfare[4];
 8008a28:	4b9e      	ldr	r3, [pc, #632]	@ (8008ca4 <printer_e+0x6c0>)
 8008a2a:	791a      	ldrb	r2, [r3, #4]
 8008a2c:	4b9e      	ldr	r3, [pc, #632]	@ (8008ca8 <printer_e+0x6c4>)
 8008a2e:	70da      	strb	r2, [r3, #3]

	data06[4] = tfare[5];
 8008a30:	4b9c      	ldr	r3, [pc, #624]	@ (8008ca4 <printer_e+0x6c0>)
 8008a32:	795a      	ldrb	r2, [r3, #5]
 8008a34:	4b9c      	ldr	r3, [pc, #624]	@ (8008ca8 <printer_e+0x6c4>)
 8008a36:	711a      	strb	r2, [r3, #4]
	data06[5] = tfare[6];
 8008a38:	4b9a      	ldr	r3, [pc, #616]	@ (8008ca4 <printer_e+0x6c0>)
 8008a3a:	799a      	ldrb	r2, [r3, #6]
 8008a3c:	4b9a      	ldr	r3, [pc, #616]	@ (8008ca8 <printer_e+0x6c4>)
 8008a3e:	715a      	strb	r2, [r3, #5]
	data06[7] = tfare[7];
 8008a40:	4b98      	ldr	r3, [pc, #608]	@ (8008ca4 <printer_e+0x6c0>)
 8008a42:	79da      	ldrb	r2, [r3, #7]
 8008a44:	4b98      	ldr	r3, [pc, #608]	@ (8008ca8 <printer_e+0x6c4>)
 8008a46:	71da      	strb	r2, [r3, #7]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008a48:	4b91      	ldr	r3, [pc, #580]	@ (8008c90 <printer_e+0x6ac>)
 8008a4a:	4992      	ldr	r1, [pc, #584]	@ (8008c94 <printer_e+0x6b0>)
 8008a4c:	4892      	ldr	r0, [pc, #584]	@ (8008c98 <printer_e+0x6b4>)
 8008a4e:	2206      	movs	r2, #6
 8008a50:	f00a fb9e 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg06, 23, 0xffff);
 8008a54:	4b8e      	ldr	r3, [pc, #568]	@ (8008c90 <printer_e+0x6ac>)
 8008a56:	4995      	ldr	r1, [pc, #596]	@ (8008cac <printer_e+0x6c8>)
 8008a58:	488f      	ldr	r0, [pc, #572]	@ (8008c98 <printer_e+0x6b4>)
 8008a5a:	2217      	movs	r2, #23
 8008a5c:	f00a fb98 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data06, 9, 0xffff);
 8008a60:	4b8b      	ldr	r3, [pc, #556]	@ (8008c90 <printer_e+0x6ac>)
 8008a62:	4991      	ldr	r1, [pc, #580]	@ (8008ca8 <printer_e+0x6c4>)
 8008a64:	488c      	ldr	r0, [pc, #560]	@ (8008c98 <printer_e+0x6b4>)
 8008a66:	2209      	movs	r2, #9
 8008a68:	f00a fb92 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008a6c:	4b88      	ldr	r3, [pc, #544]	@ (8008c90 <printer_e+0x6ac>)
 8008a6e:	498c      	ldr	r1, [pc, #560]	@ (8008ca0 <printer_e+0x6bc>)
 8008a70:	4889      	ldr	r0, [pc, #548]	@ (8008c98 <printer_e+0x6b4>)
 8008a72:	2202      	movs	r2, #2
 8008a74:	f00a fb8c 	bl	8013190 <HAL_UART_Transmit>
	//row8: total sub
	if (tsub[1] == 0x30)
 8008a78:	4b8d      	ldr	r3, [pc, #564]	@ (8008cb0 <printer_e+0x6cc>)
 8008a7a:	785b      	ldrb	r3, [r3, #1]
 8008a7c:	2b30      	cmp	r3, #48	@ 0x30
 8008a7e:	d103      	bne.n	8008a88 <printer_e+0x4a4>
		data07[0] = 0x20;
 8008a80:	4b8c      	ldr	r3, [pc, #560]	@ (8008cb4 <printer_e+0x6d0>)
 8008a82:	2220      	movs	r2, #32
 8008a84:	701a      	strb	r2, [r3, #0]
 8008a86:	e003      	b.n	8008a90 <printer_e+0x4ac>
	else
		data07[0] = tsub[1];
 8008a88:	4b89      	ldr	r3, [pc, #548]	@ (8008cb0 <printer_e+0x6cc>)
 8008a8a:	785a      	ldrb	r2, [r3, #1]
 8008a8c:	4b89      	ldr	r3, [pc, #548]	@ (8008cb4 <printer_e+0x6d0>)
 8008a8e:	701a      	strb	r2, [r3, #0]

	if (tsub[2] == 0x30 && tsub[1] == 0x30)
 8008a90:	4b87      	ldr	r3, [pc, #540]	@ (8008cb0 <printer_e+0x6cc>)
 8008a92:	789b      	ldrb	r3, [r3, #2]
 8008a94:	2b30      	cmp	r3, #48	@ 0x30
 8008a96:	d107      	bne.n	8008aa8 <printer_e+0x4c4>
 8008a98:	4b85      	ldr	r3, [pc, #532]	@ (8008cb0 <printer_e+0x6cc>)
 8008a9a:	785b      	ldrb	r3, [r3, #1]
 8008a9c:	2b30      	cmp	r3, #48	@ 0x30
 8008a9e:	d103      	bne.n	8008aa8 <printer_e+0x4c4>
		data07[1] = 0x20;
 8008aa0:	4b84      	ldr	r3, [pc, #528]	@ (8008cb4 <printer_e+0x6d0>)
 8008aa2:	2220      	movs	r2, #32
 8008aa4:	705a      	strb	r2, [r3, #1]
 8008aa6:	e003      	b.n	8008ab0 <printer_e+0x4cc>
	else
		data07[1] = tsub[2];
 8008aa8:	4b81      	ldr	r3, [pc, #516]	@ (8008cb0 <printer_e+0x6cc>)
 8008aaa:	789a      	ldrb	r2, [r3, #2]
 8008aac:	4b81      	ldr	r3, [pc, #516]	@ (8008cb4 <printer_e+0x6d0>)
 8008aae:	705a      	strb	r2, [r3, #1]

	if (tsub[3] == 0x30 && tsub[2] == 0x30)
 8008ab0:	4b7f      	ldr	r3, [pc, #508]	@ (8008cb0 <printer_e+0x6cc>)
 8008ab2:	78db      	ldrb	r3, [r3, #3]
 8008ab4:	2b30      	cmp	r3, #48	@ 0x30
 8008ab6:	d107      	bne.n	8008ac8 <printer_e+0x4e4>
 8008ab8:	4b7d      	ldr	r3, [pc, #500]	@ (8008cb0 <printer_e+0x6cc>)
 8008aba:	789b      	ldrb	r3, [r3, #2]
 8008abc:	2b30      	cmp	r3, #48	@ 0x30
 8008abe:	d103      	bne.n	8008ac8 <printer_e+0x4e4>
		data07[2] = 0x20;
 8008ac0:	4b7c      	ldr	r3, [pc, #496]	@ (8008cb4 <printer_e+0x6d0>)
 8008ac2:	2220      	movs	r2, #32
 8008ac4:	709a      	strb	r2, [r3, #2]
 8008ac6:	e003      	b.n	8008ad0 <printer_e+0x4ec>
	else
		data07[2] = tsub[3];
 8008ac8:	4b79      	ldr	r3, [pc, #484]	@ (8008cb0 <printer_e+0x6cc>)
 8008aca:	78da      	ldrb	r2, [r3, #3]
 8008acc:	4b79      	ldr	r3, [pc, #484]	@ (8008cb4 <printer_e+0x6d0>)
 8008ace:	709a      	strb	r2, [r3, #2]

	if (tsub[4] == 0x30 && tsub[3] == 0x30)
 8008ad0:	4b77      	ldr	r3, [pc, #476]	@ (8008cb0 <printer_e+0x6cc>)
 8008ad2:	791b      	ldrb	r3, [r3, #4]
 8008ad4:	2b30      	cmp	r3, #48	@ 0x30
 8008ad6:	d107      	bne.n	8008ae8 <printer_e+0x504>
 8008ad8:	4b75      	ldr	r3, [pc, #468]	@ (8008cb0 <printer_e+0x6cc>)
 8008ada:	78db      	ldrb	r3, [r3, #3]
 8008adc:	2b30      	cmp	r3, #48	@ 0x30
 8008ade:	d103      	bne.n	8008ae8 <printer_e+0x504>
		data07[3] = 0x20;
 8008ae0:	4b74      	ldr	r3, [pc, #464]	@ (8008cb4 <printer_e+0x6d0>)
 8008ae2:	2220      	movs	r2, #32
 8008ae4:	70da      	strb	r2, [r3, #3]
 8008ae6:	e003      	b.n	8008af0 <printer_e+0x50c>
	else
		data07[3] = tsub[4];
 8008ae8:	4b71      	ldr	r3, [pc, #452]	@ (8008cb0 <printer_e+0x6cc>)
 8008aea:	791a      	ldrb	r2, [r3, #4]
 8008aec:	4b71      	ldr	r3, [pc, #452]	@ (8008cb4 <printer_e+0x6d0>)
 8008aee:	70da      	strb	r2, [r3, #3]

	data07[4] = tsub[5];
 8008af0:	4b6f      	ldr	r3, [pc, #444]	@ (8008cb0 <printer_e+0x6cc>)
 8008af2:	795a      	ldrb	r2, [r3, #5]
 8008af4:	4b6f      	ldr	r3, [pc, #444]	@ (8008cb4 <printer_e+0x6d0>)
 8008af6:	711a      	strb	r2, [r3, #4]
	data07[5] = tsub[6];
 8008af8:	4b6d      	ldr	r3, [pc, #436]	@ (8008cb0 <printer_e+0x6cc>)
 8008afa:	799a      	ldrb	r2, [r3, #6]
 8008afc:	4b6d      	ldr	r3, [pc, #436]	@ (8008cb4 <printer_e+0x6d0>)
 8008afe:	715a      	strb	r2, [r3, #5]
	data07[7] = tsub[7];
 8008b00:	4b6b      	ldr	r3, [pc, #428]	@ (8008cb0 <printer_e+0x6cc>)
 8008b02:	79da      	ldrb	r2, [r3, #7]
 8008b04:	4b6b      	ldr	r3, [pc, #428]	@ (8008cb4 <printer_e+0x6d0>)
 8008b06:	71da      	strb	r2, [r3, #7]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008b08:	4b61      	ldr	r3, [pc, #388]	@ (8008c90 <printer_e+0x6ac>)
 8008b0a:	4962      	ldr	r1, [pc, #392]	@ (8008c94 <printer_e+0x6b0>)
 8008b0c:	4862      	ldr	r0, [pc, #392]	@ (8008c98 <printer_e+0x6b4>)
 8008b0e:	2206      	movs	r2, #6
 8008b10:	f00a fb3e 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg07, 23, 0xffff);
 8008b14:	4b5e      	ldr	r3, [pc, #376]	@ (8008c90 <printer_e+0x6ac>)
 8008b16:	4968      	ldr	r1, [pc, #416]	@ (8008cb8 <printer_e+0x6d4>)
 8008b18:	485f      	ldr	r0, [pc, #380]	@ (8008c98 <printer_e+0x6b4>)
 8008b1a:	2217      	movs	r2, #23
 8008b1c:	f00a fb38 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data07, 9, 0xffff);
 8008b20:	4b5b      	ldr	r3, [pc, #364]	@ (8008c90 <printer_e+0x6ac>)
 8008b22:	4964      	ldr	r1, [pc, #400]	@ (8008cb4 <printer_e+0x6d0>)
 8008b24:	485c      	ldr	r0, [pc, #368]	@ (8008c98 <printer_e+0x6b4>)
 8008b26:	2209      	movs	r2, #9
 8008b28:	f00a fb32 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008b2c:	4b58      	ldr	r3, [pc, #352]	@ (8008c90 <printer_e+0x6ac>)
 8008b2e:	495c      	ldr	r1, [pc, #368]	@ (8008ca0 <printer_e+0x6bc>)
 8008b30:	4859      	ldr	r0, [pc, #356]	@ (8008c98 <printer_e+0x6b4>)
 8008b32:	2202      	movs	r2, #2
 8008b34:	f00a fb2c 	bl	8013190 <HAL_UART_Transmit>
	//row9: current total fare
	if (cfare[3] == 0x30)
 8008b38:	4b60      	ldr	r3, [pc, #384]	@ (8008cbc <printer_e+0x6d8>)
 8008b3a:	78db      	ldrb	r3, [r3, #3]
 8008b3c:	2b30      	cmp	r3, #48	@ 0x30
 8008b3e:	d103      	bne.n	8008b48 <printer_e+0x564>
		data08[2] = 0x20;
 8008b40:	4b5f      	ldr	r3, [pc, #380]	@ (8008cc0 <printer_e+0x6dc>)
 8008b42:	2220      	movs	r2, #32
 8008b44:	709a      	strb	r2, [r3, #2]
 8008b46:	e003      	b.n	8008b50 <printer_e+0x56c>
	else
		data08[2] = cfare[3];
 8008b48:	4b5c      	ldr	r3, [pc, #368]	@ (8008cbc <printer_e+0x6d8>)
 8008b4a:	78da      	ldrb	r2, [r3, #3]
 8008b4c:	4b5c      	ldr	r3, [pc, #368]	@ (8008cc0 <printer_e+0x6dc>)
 8008b4e:	709a      	strb	r2, [r3, #2]

	if (cfare[4] == 0x30 && cfare[3] == 0x30)
 8008b50:	4b5a      	ldr	r3, [pc, #360]	@ (8008cbc <printer_e+0x6d8>)
 8008b52:	791b      	ldrb	r3, [r3, #4]
 8008b54:	2b30      	cmp	r3, #48	@ 0x30
 8008b56:	d107      	bne.n	8008b68 <printer_e+0x584>
 8008b58:	4b58      	ldr	r3, [pc, #352]	@ (8008cbc <printer_e+0x6d8>)
 8008b5a:	78db      	ldrb	r3, [r3, #3]
 8008b5c:	2b30      	cmp	r3, #48	@ 0x30
 8008b5e:	d103      	bne.n	8008b68 <printer_e+0x584>
		data08[3] = 0x20;
 8008b60:	4b57      	ldr	r3, [pc, #348]	@ (8008cc0 <printer_e+0x6dc>)
 8008b62:	2220      	movs	r2, #32
 8008b64:	70da      	strb	r2, [r3, #3]
 8008b66:	e003      	b.n	8008b70 <printer_e+0x58c>
	else
		data08[3] = cfare[4];
 8008b68:	4b54      	ldr	r3, [pc, #336]	@ (8008cbc <printer_e+0x6d8>)
 8008b6a:	791a      	ldrb	r2, [r3, #4]
 8008b6c:	4b54      	ldr	r3, [pc, #336]	@ (8008cc0 <printer_e+0x6dc>)
 8008b6e:	70da      	strb	r2, [r3, #3]

	data08[4] = cfare[5];
 8008b70:	4b52      	ldr	r3, [pc, #328]	@ (8008cbc <printer_e+0x6d8>)
 8008b72:	795a      	ldrb	r2, [r3, #5]
 8008b74:	4b52      	ldr	r3, [pc, #328]	@ (8008cc0 <printer_e+0x6dc>)
 8008b76:	711a      	strb	r2, [r3, #4]
	data08[5] = cfare[6];
 8008b78:	4b50      	ldr	r3, [pc, #320]	@ (8008cbc <printer_e+0x6d8>)
 8008b7a:	799a      	ldrb	r2, [r3, #6]
 8008b7c:	4b50      	ldr	r3, [pc, #320]	@ (8008cc0 <printer_e+0x6dc>)
 8008b7e:	715a      	strb	r2, [r3, #5]
	data08[7] = cfare[7];
 8008b80:	4b4e      	ldr	r3, [pc, #312]	@ (8008cbc <printer_e+0x6d8>)
 8008b82:	79da      	ldrb	r2, [r3, #7]
 8008b84:	4b4e      	ldr	r3, [pc, #312]	@ (8008cc0 <printer_e+0x6dc>)
 8008b86:	71da      	strb	r2, [r3, #7]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008b88:	4b41      	ldr	r3, [pc, #260]	@ (8008c90 <printer_e+0x6ac>)
 8008b8a:	4942      	ldr	r1, [pc, #264]	@ (8008c94 <printer_e+0x6b0>)
 8008b8c:	4842      	ldr	r0, [pc, #264]	@ (8008c98 <printer_e+0x6b4>)
 8008b8e:	2206      	movs	r2, #6
 8008b90:	f00a fafe 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg08, 23, 0xffff);
 8008b94:	4b3e      	ldr	r3, [pc, #248]	@ (8008c90 <printer_e+0x6ac>)
 8008b96:	494b      	ldr	r1, [pc, #300]	@ (8008cc4 <printer_e+0x6e0>)
 8008b98:	483f      	ldr	r0, [pc, #252]	@ (8008c98 <printer_e+0x6b4>)
 8008b9a:	2217      	movs	r2, #23
 8008b9c:	f00a faf8 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data08, 9, 0xffff);
 8008ba0:	4b3b      	ldr	r3, [pc, #236]	@ (8008c90 <printer_e+0x6ac>)
 8008ba2:	4947      	ldr	r1, [pc, #284]	@ (8008cc0 <printer_e+0x6dc>)
 8008ba4:	483c      	ldr	r0, [pc, #240]	@ (8008c98 <printer_e+0x6b4>)
 8008ba6:	2209      	movs	r2, #9
 8008ba8:	f00a faf2 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008bac:	4b38      	ldr	r3, [pc, #224]	@ (8008c90 <printer_e+0x6ac>)
 8008bae:	493c      	ldr	r1, [pc, #240]	@ (8008ca0 <printer_e+0x6bc>)
 8008bb0:	4839      	ldr	r0, [pc, #228]	@ (8008c98 <printer_e+0x6b4>)
 8008bb2:	2202      	movs	r2, #2
 8008bb4:	f00a faec 	bl	8013190 <HAL_UART_Transmit>
	//row10: current total sub
	if (csub[3] == 0x30)
 8008bb8:	4b43      	ldr	r3, [pc, #268]	@ (8008cc8 <printer_e+0x6e4>)
 8008bba:	78db      	ldrb	r3, [r3, #3]
 8008bbc:	2b30      	cmp	r3, #48	@ 0x30
 8008bbe:	d103      	bne.n	8008bc8 <printer_e+0x5e4>
		data09[2] = 0x20;
 8008bc0:	4b42      	ldr	r3, [pc, #264]	@ (8008ccc <printer_e+0x6e8>)
 8008bc2:	2220      	movs	r2, #32
 8008bc4:	709a      	strb	r2, [r3, #2]
 8008bc6:	e003      	b.n	8008bd0 <printer_e+0x5ec>
	else
		data09[2] = csub[3];
 8008bc8:	4b3f      	ldr	r3, [pc, #252]	@ (8008cc8 <printer_e+0x6e4>)
 8008bca:	78da      	ldrb	r2, [r3, #3]
 8008bcc:	4b3f      	ldr	r3, [pc, #252]	@ (8008ccc <printer_e+0x6e8>)
 8008bce:	709a      	strb	r2, [r3, #2]

	if (csub[4] == 0x30 && csub[3] == 0x30)
 8008bd0:	4b3d      	ldr	r3, [pc, #244]	@ (8008cc8 <printer_e+0x6e4>)
 8008bd2:	791b      	ldrb	r3, [r3, #4]
 8008bd4:	2b30      	cmp	r3, #48	@ 0x30
 8008bd6:	d107      	bne.n	8008be8 <printer_e+0x604>
 8008bd8:	4b3b      	ldr	r3, [pc, #236]	@ (8008cc8 <printer_e+0x6e4>)
 8008bda:	78db      	ldrb	r3, [r3, #3]
 8008bdc:	2b30      	cmp	r3, #48	@ 0x30
 8008bde:	d103      	bne.n	8008be8 <printer_e+0x604>
		data09[3] = 0x20;
 8008be0:	4b3a      	ldr	r3, [pc, #232]	@ (8008ccc <printer_e+0x6e8>)
 8008be2:	2220      	movs	r2, #32
 8008be4:	70da      	strb	r2, [r3, #3]
 8008be6:	e003      	b.n	8008bf0 <printer_e+0x60c>
	else
		data09[3] = csub[4];
 8008be8:	4b37      	ldr	r3, [pc, #220]	@ (8008cc8 <printer_e+0x6e4>)
 8008bea:	791a      	ldrb	r2, [r3, #4]
 8008bec:	4b37      	ldr	r3, [pc, #220]	@ (8008ccc <printer_e+0x6e8>)
 8008bee:	70da      	strb	r2, [r3, #3]

	data09[4] = csub[5];
 8008bf0:	4b35      	ldr	r3, [pc, #212]	@ (8008cc8 <printer_e+0x6e4>)
 8008bf2:	795a      	ldrb	r2, [r3, #5]
 8008bf4:	4b35      	ldr	r3, [pc, #212]	@ (8008ccc <printer_e+0x6e8>)
 8008bf6:	711a      	strb	r2, [r3, #4]
	data09[5] = csub[6];
 8008bf8:	4b33      	ldr	r3, [pc, #204]	@ (8008cc8 <printer_e+0x6e4>)
 8008bfa:	799a      	ldrb	r2, [r3, #6]
 8008bfc:	4b33      	ldr	r3, [pc, #204]	@ (8008ccc <printer_e+0x6e8>)
 8008bfe:	715a      	strb	r2, [r3, #5]
	data09[7] = csub[7];
 8008c00:	4b31      	ldr	r3, [pc, #196]	@ (8008cc8 <printer_e+0x6e4>)
 8008c02:	79da      	ldrb	r2, [r3, #7]
 8008c04:	4b31      	ldr	r3, [pc, #196]	@ (8008ccc <printer_e+0x6e8>)
 8008c06:	71da      	strb	r2, [r3, #7]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008c08:	4b21      	ldr	r3, [pc, #132]	@ (8008c90 <printer_e+0x6ac>)
 8008c0a:	4922      	ldr	r1, [pc, #136]	@ (8008c94 <printer_e+0x6b0>)
 8008c0c:	4822      	ldr	r0, [pc, #136]	@ (8008c98 <printer_e+0x6b4>)
 8008c0e:	2206      	movs	r2, #6
 8008c10:	f00a fabe 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg09, 23, 0xffff);
 8008c14:	4b1e      	ldr	r3, [pc, #120]	@ (8008c90 <printer_e+0x6ac>)
 8008c16:	492e      	ldr	r1, [pc, #184]	@ (8008cd0 <printer_e+0x6ec>)
 8008c18:	481f      	ldr	r0, [pc, #124]	@ (8008c98 <printer_e+0x6b4>)
 8008c1a:	2217      	movs	r2, #23
 8008c1c:	f00a fab8 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data09, 9, 0xffff);
 8008c20:	4b1b      	ldr	r3, [pc, #108]	@ (8008c90 <printer_e+0x6ac>)
 8008c22:	492a      	ldr	r1, [pc, #168]	@ (8008ccc <printer_e+0x6e8>)
 8008c24:	481c      	ldr	r0, [pc, #112]	@ (8008c98 <printer_e+0x6b4>)
 8008c26:	2209      	movs	r2, #9
 8008c28:	f00a fab2 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008c2c:	4b18      	ldr	r3, [pc, #96]	@ (8008c90 <printer_e+0x6ac>)
 8008c2e:	491c      	ldr	r1, [pc, #112]	@ (8008ca0 <printer_e+0x6bc>)
 8008c30:	4819      	ldr	r0, [pc, #100]	@ (8008c98 <printer_e+0x6b4>)
 8008c32:	2202      	movs	r2, #2
 8008c34:	f00a faac 	bl	8013190 <HAL_UART_Transmit>
	//row11: total time
	if (ttime[2] == 0x30)
 8008c38:	4b26      	ldr	r3, [pc, #152]	@ (8008cd4 <printer_e+0x6f0>)
 8008c3a:	789b      	ldrb	r3, [r3, #2]
 8008c3c:	2b30      	cmp	r3, #48	@ 0x30
 8008c3e:	d103      	bne.n	8008c48 <printer_e+0x664>
		data10[2] = 0x20;
 8008c40:	4b25      	ldr	r3, [pc, #148]	@ (8008cd8 <printer_e+0x6f4>)
 8008c42:	2220      	movs	r2, #32
 8008c44:	709a      	strb	r2, [r3, #2]
 8008c46:	e003      	b.n	8008c50 <printer_e+0x66c>
	else
		data10[2] = ttime[2];
 8008c48:	4b22      	ldr	r3, [pc, #136]	@ (8008cd4 <printer_e+0x6f0>)
 8008c4a:	789a      	ldrb	r2, [r3, #2]
 8008c4c:	4b22      	ldr	r3, [pc, #136]	@ (8008cd8 <printer_e+0x6f4>)
 8008c4e:	709a      	strb	r2, [r3, #2]

	if (ttime[3] == 0x30 && ttime[2] == 0x30)
 8008c50:	4b20      	ldr	r3, [pc, #128]	@ (8008cd4 <printer_e+0x6f0>)
 8008c52:	78db      	ldrb	r3, [r3, #3]
 8008c54:	2b30      	cmp	r3, #48	@ 0x30
 8008c56:	d107      	bne.n	8008c68 <printer_e+0x684>
 8008c58:	4b1e      	ldr	r3, [pc, #120]	@ (8008cd4 <printer_e+0x6f0>)
 8008c5a:	789b      	ldrb	r3, [r3, #2]
 8008c5c:	2b30      	cmp	r3, #48	@ 0x30
 8008c5e:	d103      	bne.n	8008c68 <printer_e+0x684>
		data10[3] = 0x20;
 8008c60:	4b1d      	ldr	r3, [pc, #116]	@ (8008cd8 <printer_e+0x6f4>)
 8008c62:	2220      	movs	r2, #32
 8008c64:	70da      	strb	r2, [r3, #3]
 8008c66:	e003      	b.n	8008c70 <printer_e+0x68c>
	else
		data10[3] = ttime[3];
 8008c68:	4b1a      	ldr	r3, [pc, #104]	@ (8008cd4 <printer_e+0x6f0>)
 8008c6a:	78da      	ldrb	r2, [r3, #3]
 8008c6c:	4b1a      	ldr	r3, [pc, #104]	@ (8008cd8 <printer_e+0x6f4>)
 8008c6e:	70da      	strb	r2, [r3, #3]

	if (ttime[4] == 0x30 && ttime[3] == 0x30)
 8008c70:	4b18      	ldr	r3, [pc, #96]	@ (8008cd4 <printer_e+0x6f0>)
 8008c72:	791b      	ldrb	r3, [r3, #4]
 8008c74:	2b30      	cmp	r3, #48	@ 0x30
 8008c76:	d131      	bne.n	8008cdc <printer_e+0x6f8>
 8008c78:	4b16      	ldr	r3, [pc, #88]	@ (8008cd4 <printer_e+0x6f0>)
 8008c7a:	78db      	ldrb	r3, [r3, #3]
 8008c7c:	2b30      	cmp	r3, #48	@ 0x30
 8008c7e:	d12d      	bne.n	8008cdc <printer_e+0x6f8>
		data10[4] = 0x20;
 8008c80:	4b15      	ldr	r3, [pc, #84]	@ (8008cd8 <printer_e+0x6f4>)
 8008c82:	2220      	movs	r2, #32
 8008c84:	711a      	strb	r2, [r3, #4]
 8008c86:	e02d      	b.n	8008ce4 <printer_e+0x700>
 8008c88:	20000e7c 	.word	0x20000e7c
 8008c8c:	20000388 	.word	0x20000388
 8008c90:	0000ffff 	.word	0x0000ffff
 8008c94:	20000194 	.word	0x20000194
 8008c98:	200005c8 	.word	0x200005c8
 8008c9c:	200002c8 	.word	0x200002c8
 8008ca0:	20000188 	.word	0x20000188
 8008ca4:	20000e84 	.word	0x20000e84
 8008ca8:	20000394 	.word	0x20000394
 8008cac:	200002e0 	.word	0x200002e0
 8008cb0:	20000e8c 	.word	0x20000e8c
 8008cb4:	200003a0 	.word	0x200003a0
 8008cb8:	200002f8 	.word	0x200002f8
 8008cbc:	20000e94 	.word	0x20000e94
 8008cc0:	200003ac 	.word	0x200003ac
 8008cc4:	20000310 	.word	0x20000310
 8008cc8:	20000e9c 	.word	0x20000e9c
 8008ccc:	200003b8 	.word	0x200003b8
 8008cd0:	20000328 	.word	0x20000328
 8008cd4:	20000ea4 	.word	0x20000ea4
 8008cd8:	200003c4 	.word	0x200003c4
	else
		data10[4] = ttime[4];
 8008cdc:	4b3b      	ldr	r3, [pc, #236]	@ (8008dcc <printer_e+0x7e8>)
 8008cde:	791a      	ldrb	r2, [r3, #4]
 8008ce0:	4b3b      	ldr	r3, [pc, #236]	@ (8008dd0 <printer_e+0x7ec>)
 8008ce2:	711a      	strb	r2, [r3, #4]

	data10[5] = ttime[5];
 8008ce4:	4b39      	ldr	r3, [pc, #228]	@ (8008dcc <printer_e+0x7e8>)
 8008ce6:	795a      	ldrb	r2, [r3, #5]
 8008ce8:	4b39      	ldr	r3, [pc, #228]	@ (8008dd0 <printer_e+0x7ec>)
 8008cea:	715a      	strb	r2, [r3, #5]
	data10[7] = ttime[6];
 8008cec:	4b37      	ldr	r3, [pc, #220]	@ (8008dcc <printer_e+0x7e8>)
 8008cee:	799a      	ldrb	r2, [r3, #6]
 8008cf0:	4b37      	ldr	r3, [pc, #220]	@ (8008dd0 <printer_e+0x7ec>)
 8008cf2:	71da      	strb	r2, [r3, #7]
	data10[8] = ttime[7];
 8008cf4:	4b35      	ldr	r3, [pc, #212]	@ (8008dcc <printer_e+0x7e8>)
 8008cf6:	79da      	ldrb	r2, [r3, #7]
 8008cf8:	4b35      	ldr	r3, [pc, #212]	@ (8008dd0 <printer_e+0x7ec>)
 8008cfa:	721a      	strb	r2, [r3, #8]
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008cfc:	4b35      	ldr	r3, [pc, #212]	@ (8008dd4 <printer_e+0x7f0>)
 8008cfe:	4936      	ldr	r1, [pc, #216]	@ (8008dd8 <printer_e+0x7f4>)
 8008d00:	4836      	ldr	r0, [pc, #216]	@ (8008ddc <printer_e+0x7f8>)
 8008d02:	2206      	movs	r2, #6
 8008d04:	f00a fa44 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, tmsg10, 23, 0xffff);
 8008d08:	4b32      	ldr	r3, [pc, #200]	@ (8008dd4 <printer_e+0x7f0>)
 8008d0a:	4935      	ldr	r1, [pc, #212]	@ (8008de0 <printer_e+0x7fc>)
 8008d0c:	4833      	ldr	r0, [pc, #204]	@ (8008ddc <printer_e+0x7f8>)
 8008d0e:	2217      	movs	r2, #23
 8008d10:	f00a fa3e 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, data10, 9, 0xffff);
 8008d14:	4b2f      	ldr	r3, [pc, #188]	@ (8008dd4 <printer_e+0x7f0>)
 8008d16:	492e      	ldr	r1, [pc, #184]	@ (8008dd0 <printer_e+0x7ec>)
 8008d18:	4830      	ldr	r0, [pc, #192]	@ (8008ddc <printer_e+0x7f8>)
 8008d1a:	2209      	movs	r2, #9
 8008d1c:	f00a fa38 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008d20:	4b2c      	ldr	r3, [pc, #176]	@ (8008dd4 <printer_e+0x7f0>)
 8008d22:	4930      	ldr	r1, [pc, #192]	@ (8008de4 <printer_e+0x800>)
 8008d24:	482d      	ldr	r0, [pc, #180]	@ (8008ddc <printer_e+0x7f8>)
 8008d26:	2202      	movs	r2, #2
 8008d28:	f00a fa32 	bl	8013190 <HAL_UART_Transmit>
//	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
//	HAL_UART_Transmit(&hlpuart1, tmsg11, 23, 0xffff);
//	HAL_UART_Transmit(&hlpuart1, data11, 9, 0xffff);
//	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
	//row13: (chi)print time: 04/05/23 11:15
	dtdata[10] = hmi_rtc[14];
 8008d2c:	4b2e      	ldr	r3, [pc, #184]	@ (8008de8 <printer_e+0x804>)
 8008d2e:	7b9a      	ldrb	r2, [r3, #14]
 8008d30:	4b2e      	ldr	r3, [pc, #184]	@ (8008dec <printer_e+0x808>)
 8008d32:	729a      	strb	r2, [r3, #10]
	dtdata[11] = hmi_rtc[15];
 8008d34:	4b2c      	ldr	r3, [pc, #176]	@ (8008de8 <printer_e+0x804>)
 8008d36:	7bda      	ldrb	r2, [r3, #15]
 8008d38:	4b2c      	ldr	r3, [pc, #176]	@ (8008dec <printer_e+0x808>)
 8008d3a:	72da      	strb	r2, [r3, #11]
	dtdata[13] = hmi_rtc[11];
 8008d3c:	4b2a      	ldr	r3, [pc, #168]	@ (8008de8 <printer_e+0x804>)
 8008d3e:	7ada      	ldrb	r2, [r3, #11]
 8008d40:	4b2a      	ldr	r3, [pc, #168]	@ (8008dec <printer_e+0x808>)
 8008d42:	735a      	strb	r2, [r3, #13]
	dtdata[14] = hmi_rtc[12];
 8008d44:	4b28      	ldr	r3, [pc, #160]	@ (8008de8 <printer_e+0x804>)
 8008d46:	7b1a      	ldrb	r2, [r3, #12]
 8008d48:	4b28      	ldr	r3, [pc, #160]	@ (8008dec <printer_e+0x808>)
 8008d4a:	739a      	strb	r2, [r3, #14]
	dtdata[16] = hmi_rtc[8];
 8008d4c:	4b26      	ldr	r3, [pc, #152]	@ (8008de8 <printer_e+0x804>)
 8008d4e:	7a1a      	ldrb	r2, [r3, #8]
 8008d50:	4b26      	ldr	r3, [pc, #152]	@ (8008dec <printer_e+0x808>)
 8008d52:	741a      	strb	r2, [r3, #16]
	dtdata[17] = hmi_rtc[9];
 8008d54:	4b24      	ldr	r3, [pc, #144]	@ (8008de8 <printer_e+0x804>)
 8008d56:	7a5a      	ldrb	r2, [r3, #9]
 8008d58:	4b24      	ldr	r3, [pc, #144]	@ (8008dec <printer_e+0x808>)
 8008d5a:	745a      	strb	r2, [r3, #17]
	dtdata[19] = hmi_rtc[17];
 8008d5c:	4b22      	ldr	r3, [pc, #136]	@ (8008de8 <printer_e+0x804>)
 8008d5e:	7c5a      	ldrb	r2, [r3, #17]
 8008d60:	4b22      	ldr	r3, [pc, #136]	@ (8008dec <printer_e+0x808>)
 8008d62:	74da      	strb	r2, [r3, #19]
	dtdata[20] = hmi_rtc[18];
 8008d64:	4b20      	ldr	r3, [pc, #128]	@ (8008de8 <printer_e+0x804>)
 8008d66:	7c9a      	ldrb	r2, [r3, #18]
 8008d68:	4b20      	ldr	r3, [pc, #128]	@ (8008dec <printer_e+0x808>)
 8008d6a:	751a      	strb	r2, [r3, #20]
	dtdata[22] = hmi_rtc[20];
 8008d6c:	4b1e      	ldr	r3, [pc, #120]	@ (8008de8 <printer_e+0x804>)
 8008d6e:	7d1a      	ldrb	r2, [r3, #20]
 8008d70:	4b1e      	ldr	r3, [pc, #120]	@ (8008dec <printer_e+0x808>)
 8008d72:	759a      	strb	r2, [r3, #22]
	dtdata[23] = hmi_rtc[21];
 8008d74:	4b1c      	ldr	r3, [pc, #112]	@ (8008de8 <printer_e+0x804>)
 8008d76:	7d5a      	ldrb	r2, [r3, #21]
 8008d78:	4b1c      	ldr	r3, [pc, #112]	@ (8008dec <printer_e+0x808>)
 8008d7a:	75da      	strb	r2, [r3, #23]

	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008d7c:	4b15      	ldr	r3, [pc, #84]	@ (8008dd4 <printer_e+0x7f0>)
 8008d7e:	4919      	ldr	r1, [pc, #100]	@ (8008de4 <printer_e+0x800>)
 8008d80:	4816      	ldr	r0, [pc, #88]	@ (8008ddc <printer_e+0x7f8>)
 8008d82:	2202      	movs	r2, #2
 8008d84:	f00a fa04 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, cmd, 6, 0xffff);
 8008d88:	4b12      	ldr	r3, [pc, #72]	@ (8008dd4 <printer_e+0x7f0>)
 8008d8a:	4913      	ldr	r1, [pc, #76]	@ (8008dd8 <printer_e+0x7f4>)
 8008d8c:	4813      	ldr	r0, [pc, #76]	@ (8008ddc <printer_e+0x7f8>)
 8008d8e:	2206      	movs	r2, #6
 8008d90:	f00a f9fe 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, dtdata, 24, 0xffff);
 8008d94:	4b0f      	ldr	r3, [pc, #60]	@ (8008dd4 <printer_e+0x7f0>)
 8008d96:	4915      	ldr	r1, [pc, #84]	@ (8008dec <printer_e+0x808>)
 8008d98:	4810      	ldr	r0, [pc, #64]	@ (8008ddc <printer_e+0x7f8>)
 8008d9a:	2218      	movs	r2, #24
 8008d9c:	f00a f9f8 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, enter, 2, 0xffff);
 8008da0:	4b0c      	ldr	r3, [pc, #48]	@ (8008dd4 <printer_e+0x7f0>)
 8008da2:	4910      	ldr	r1, [pc, #64]	@ (8008de4 <printer_e+0x800>)
 8008da4:	480d      	ldr	r0, [pc, #52]	@ (8008ddc <printer_e+0x7f8>)
 8008da6:	2202      	movs	r2, #2
 8008da8:	f00a f9f2 	bl	8013190 <HAL_UART_Transmit>

	HAL_UART_Transmit(&hlpuart1, (uint8_t *) uTx_Data, sizeof(uTx_Data), 0xffff);
 8008dac:	4b09      	ldr	r3, [pc, #36]	@ (8008dd4 <printer_e+0x7f0>)
 8008dae:	4910      	ldr	r1, [pc, #64]	@ (8008df0 <printer_e+0x80c>)
 8008db0:	480a      	ldr	r0, [pc, #40]	@ (8008ddc <printer_e+0x7f8>)
 8008db2:	2206      	movs	r2, #6
 8008db4:	f00a f9ec 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&hlpuart1, (uint8_t *) uTx_Data, sizeof(uTx_Data), 0xffff);
 8008db8:	4b06      	ldr	r3, [pc, #24]	@ (8008dd4 <printer_e+0x7f0>)
 8008dba:	490d      	ldr	r1, [pc, #52]	@ (8008df0 <printer_e+0x80c>)
 8008dbc:	4807      	ldr	r0, [pc, #28]	@ (8008ddc <printer_e+0x7f8>)
 8008dbe:	2206      	movs	r2, #6
 8008dc0:	f00a f9e6 	bl	8013190 <HAL_UART_Transmit>
}
 8008dc4:	46c0      	nop			@ (mov r8, r8)
 8008dc6:	46bd      	mov	sp, r7
 8008dc8:	b007      	add	sp, #28
 8008dca:	bd90      	pop	{r4, r7, pc}
 8008dcc:	20000ea4 	.word	0x20000ea4
 8008dd0:	200003c4 	.word	0x200003c4
 8008dd4:	0000ffff 	.word	0x0000ffff
 8008dd8:	20000194 	.word	0x20000194
 8008ddc:	200005c8 	.word	0x200005c8
 8008de0:	20000340 	.word	0x20000340
 8008de4:	20000188 	.word	0x20000188
 8008de8:	2000007c 	.word	0x2000007c
 8008dec:	200003d0 	.word	0x200003d0
 8008df0:	2000018c 	.word	0x2000018c

08008df4 <printer_transmit>:

void printer_transmit(struct print1 *data, UART_HandleTypeDef *huart)
{
 8008df4:	b590      	push	{r4, r7, lr}
 8008df6:	b08d      	sub	sp, #52	@ 0x34
 8008df8:	af00      	add	r7, sp, #0
 8008dfa:	6078      	str	r0, [r7, #4]
 8008dfc:	6039      	str	r1, [r7, #0]
	unsigned char buffer[sizeof(struct print1)];
	memset(buffer, 0, sizeof(struct print1));
 8008dfe:	2408      	movs	r4, #8
 8008e00:	193b      	adds	r3, r7, r4
 8008e02:	2228      	movs	r2, #40	@ 0x28
 8008e04:	2100      	movs	r1, #0
 8008e06:	0018      	movs	r0, r3
 8008e08:	f00f ff22 	bl	8018c50 <memset>
	memcpy(buffer, data, sizeof(struct print1));
 8008e0c:	193a      	adds	r2, r7, r4
 8008e0e:	687b      	ldr	r3, [r7, #4]
 8008e10:	0010      	movs	r0, r2
 8008e12:	0019      	movs	r1, r3
 8008e14:	2328      	movs	r3, #40	@ 0x28
 8008e16:	001a      	movs	r2, r3
 8008e18:	f00f ff9d 	bl	8018d56 <memcpy>

//	memcpy(buffer, &data, sizeof data);

	HAL_UART_Transmit(&hlpuart1, (uint8_t *) buffer, sizeof(buffer), 0xffff);
 8008e1c:	4b04      	ldr	r3, [pc, #16]	@ (8008e30 <printer_transmit+0x3c>)
 8008e1e:	1939      	adds	r1, r7, r4
 8008e20:	4804      	ldr	r0, [pc, #16]	@ (8008e34 <printer_transmit+0x40>)
 8008e22:	2228      	movs	r2, #40	@ 0x28
 8008e24:	f00a f9b4 	bl	8013190 <HAL_UART_Transmit>
}
 8008e28:	46c0      	nop			@ (mov r8, r8)
 8008e2a:	46bd      	mov	sp, r7
 8008e2c:	b00d      	add	sp, #52	@ 0x34
 8008e2e:	bd90      	pop	{r4, r7, pc}
 8008e30:	0000ffff 	.word	0x0000ffff
 8008e34:	200005c8 	.word	0x200005c8

08008e38 <printer_transmit2>:

void printer_transmit2(struct print2 *data, UART_HandleTypeDef *huart)
{
 8008e38:	b590      	push	{r4, r7, lr}
 8008e3a:	b08d      	sub	sp, #52	@ 0x34
 8008e3c:	af00      	add	r7, sp, #0
 8008e3e:	6078      	str	r0, [r7, #4]
 8008e40:	6039      	str	r1, [r7, #0]
	unsigned char buffer[sizeof(struct print2)];
	memset(buffer, 0, sizeof(struct print2));
 8008e42:	2408      	movs	r4, #8
 8008e44:	193b      	adds	r3, r7, r4
 8008e46:	2228      	movs	r2, #40	@ 0x28
 8008e48:	2100      	movs	r1, #0
 8008e4a:	0018      	movs	r0, r3
 8008e4c:	f00f ff00 	bl	8018c50 <memset>
	memcpy(buffer, data, sizeof(struct print2));
 8008e50:	193a      	adds	r2, r7, r4
 8008e52:	687b      	ldr	r3, [r7, #4]
 8008e54:	0010      	movs	r0, r2
 8008e56:	0019      	movs	r1, r3
 8008e58:	2328      	movs	r3, #40	@ 0x28
 8008e5a:	001a      	movs	r2, r3
 8008e5c:	f00f ff7b 	bl	8018d56 <memcpy>

//	memcpy(buffer, &data, sizeof data);

	HAL_UART_Transmit(&hlpuart1, (uint8_t *) buffer, sizeof(buffer), 0xffff);
 8008e60:	4b04      	ldr	r3, [pc, #16]	@ (8008e74 <printer_transmit2+0x3c>)
 8008e62:	1939      	adds	r1, r7, r4
 8008e64:	4804      	ldr	r0, [pc, #16]	@ (8008e78 <printer_transmit2+0x40>)
 8008e66:	2228      	movs	r2, #40	@ 0x28
 8008e68:	f00a f992 	bl	8013190 <HAL_UART_Transmit>
}
 8008e6c:	46c0      	nop			@ (mov r8, r8)
 8008e6e:	46bd      	mov	sp, r7
 8008e70:	b00d      	add	sp, #52	@ 0x34
 8008e72:	bd90      	pop	{r4, r7, pc}
 8008e74:	0000ffff 	.word	0x0000ffff
 8008e78:	200005c8 	.word	0x200005c8

08008e7c <eeprom_w>:

//write data to EEPROM

void eeprom_w(void)
{
 8008e7c:	b580      	push	{r7, lr}
 8008e7e:	b084      	sub	sp, #16
 8008e80:	af04      	add	r7, sp, #16
	if(HAL_I2C_Mem_Write(&hi2c2, ADDR_EEPROM_Write, 0, I2C_MEMADD_SIZE_16BIT,&(WriteBuffer[0]),BufferSize, 1000) == HAL_OK)
 8008e82:	480e      	ldr	r0, [pc, #56]	@ (8008ebc <eeprom_w+0x40>)
 8008e84:	23fa      	movs	r3, #250	@ 0xfa
 8008e86:	009b      	lsls	r3, r3, #2
 8008e88:	9302      	str	r3, [sp, #8]
 8008e8a:	2330      	movs	r3, #48	@ 0x30
 8008e8c:	9301      	str	r3, [sp, #4]
 8008e8e:	4b0c      	ldr	r3, [pc, #48]	@ (8008ec0 <eeprom_w+0x44>)
 8008e90:	9300      	str	r3, [sp, #0]
 8008e92:	2302      	movs	r3, #2
 8008e94:	2200      	movs	r2, #0
 8008e96:	21a0      	movs	r1, #160	@ 0xa0
 8008e98:	f005 ff84 	bl	800eda4 <HAL_I2C_Mem_Write>
 8008e9c:	1e03      	subs	r3, r0, #0
 8008e9e:	d103      	bne.n	8008ea8 <eeprom_w+0x2c>
	{
		HAL_Delay(10);
 8008ea0:	200a      	movs	r0, #10
 8008ea2:	f004 feef 	bl	800dc84 <HAL_Delay>
		//test - return eeprom write data
		//HAL_UART_Transmit(&huart2,WriteBuffer,BufferSize,0x200);
		Flag_test1 = TRUE;
		HAL_Delay(10);
	}
}
 8008ea6:	e005      	b.n	8008eb4 <eeprom_w+0x38>
		Flag_test1 = TRUE;
 8008ea8:	4b06      	ldr	r3, [pc, #24]	@ (8008ec4 <eeprom_w+0x48>)
 8008eaa:	2201      	movs	r2, #1
 8008eac:	701a      	strb	r2, [r3, #0]
		HAL_Delay(10);
 8008eae:	200a      	movs	r0, #10
 8008eb0:	f004 fee8 	bl	800dc84 <HAL_Delay>
}
 8008eb4:	46c0      	nop			@ (mov r8, r8)
 8008eb6:	46bd      	mov	sp, r7
 8008eb8:	bd80      	pop	{r7, pc}
 8008eba:	46c0      	nop			@ (mov r8, r8)
 8008ebc:	2000057c 	.word	0x2000057c
 8008ec0:	20000bc8 	.word	0x20000bc8
 8008ec4:	20000c1e 	.word	0x20000c1e

08008ec8 <eeprom_check>:

//read data from EEPROM & check
void eeprom_check(void)
{
 8008ec8:	b580      	push	{r7, lr}
 8008eca:	b084      	sub	sp, #16
 8008ecc:	af04      	add	r7, sp, #16
	HAL_I2C_Mem_Read(&hi2c2, ADDR_EEPROM_Read, 0, I2C_MEMADD_SIZE_16BIT,ReadBuffer,BufferSize, 1000);
 8008ece:	4811      	ldr	r0, [pc, #68]	@ (8008f14 <eeprom_check+0x4c>)
 8008ed0:	23fa      	movs	r3, #250	@ 0xfa
 8008ed2:	009b      	lsls	r3, r3, #2
 8008ed4:	9302      	str	r3, [sp, #8]
 8008ed6:	2330      	movs	r3, #48	@ 0x30
 8008ed8:	9301      	str	r3, [sp, #4]
 8008eda:	4b0f      	ldr	r3, [pc, #60]	@ (8008f18 <eeprom_check+0x50>)
 8008edc:	9300      	str	r3, [sp, #0]
 8008ede:	2302      	movs	r3, #2
 8008ee0:	2200      	movs	r2, #0
 8008ee2:	21a1      	movs	r1, #161	@ 0xa1
 8008ee4:	f006 f88c 	bl	800f000 <HAL_I2C_Mem_Read>
	if(memcmp(WriteBuffer,ReadBuffer,BufferSize) == 0 )
 8008ee8:	490b      	ldr	r1, [pc, #44]	@ (8008f18 <eeprom_check+0x50>)
 8008eea:	4b0c      	ldr	r3, [pc, #48]	@ (8008f1c <eeprom_check+0x54>)
 8008eec:	2230      	movs	r2, #48	@ 0x30
 8008eee:	0018      	movs	r0, r3
 8008ef0:	f00f fea0 	bl	8018c34 <memcmp>
 8008ef4:	1e03      	subs	r3, r0, #0
 8008ef6:	d103      	bne.n	8008f00 <eeprom_check+0x38>
	{
		HAL_Delay(10);
 8008ef8:	200a      	movs	r0, #10
 8008efa:	f004 fec3 	bl	800dc84 <HAL_Delay>
		//test - return read buffer
		//HAL_UART_Transmit(&huart2,ReadBuffer,BufferSize,0x200);
		Flag_test2 = TRUE;
		HAL_Delay(10);
	}
}
 8008efe:	e005      	b.n	8008f0c <eeprom_check+0x44>
		Flag_test2 = TRUE;
 8008f00:	4b07      	ldr	r3, [pc, #28]	@ (8008f20 <eeprom_check+0x58>)
 8008f02:	2201      	movs	r2, #1
 8008f04:	701a      	strb	r2, [r3, #0]
		HAL_Delay(10);
 8008f06:	200a      	movs	r0, #10
 8008f08:	f004 febc 	bl	800dc84 <HAL_Delay>
}
 8008f0c:	46c0      	nop			@ (mov r8, r8)
 8008f0e:	46bd      	mov	sp, r7
 8008f10:	bd80      	pop	{r7, pc}
 8008f12:	46c0      	nop			@ (mov r8, r8)
 8008f14:	2000057c 	.word	0x2000057c
 8008f18:	20000b98 	.word	0x20000b98
 8008f1c:	20000bc8 	.word	0x20000bc8
 8008f20:	20000c1f 	.word	0x20000c1f

08008f24 <eeprom_r>:

void eeprom_r(void)
{
 8008f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f26:	b08d      	sub	sp, #52	@ 0x34
 8008f28:	af04      	add	r7, sp, #16
	HAL_I2C_Mem_Read(&hi2c2, ADDR_EEPROM_Read, 0, I2C_MEMADD_SIZE_16BIT,ReadBuffer,BufferSize, 1000);
 8008f2a:	48c9      	ldr	r0, [pc, #804]	@ (8009250 <eeprom_r+0x32c>)
 8008f2c:	23fa      	movs	r3, #250	@ 0xfa
 8008f2e:	009b      	lsls	r3, r3, #2
 8008f30:	9302      	str	r3, [sp, #8]
 8008f32:	2330      	movs	r3, #48	@ 0x30
 8008f34:	9301      	str	r3, [sp, #4]
 8008f36:	4bc7      	ldr	r3, [pc, #796]	@ (8009254 <eeprom_r+0x330>)
 8008f38:	9300      	str	r3, [sp, #0]
 8008f3a:	2302      	movs	r3, #2
 8008f3c:	2200      	movs	r2, #0
 8008f3e:	21a1      	movs	r1, #161	@ 0xa1
 8008f40:	f006 f85e 	bl	800f000 <HAL_I2C_Mem_Read>

	unsigned char Dist_Fkm[4] = {0};
 8008f44:	211c      	movs	r1, #28
 8008f46:	187b      	adds	r3, r7, r1
 8008f48:	2200      	movs	r2, #0
 8008f4a:	601a      	str	r2, [r3, #0]
	unsigned char Fa_amt[2] = {0};
 8008f4c:	2518      	movs	r5, #24
 8008f4e:	197b      	adds	r3, r7, r5
 8008f50:	2200      	movs	r2, #0
 8008f52:	801a      	strh	r2, [r3, #0]
	unsigned char Fa_2km[2] = {0};
 8008f54:	2414      	movs	r4, #20
 8008f56:	193b      	adds	r3, r7, r4
 8008f58:	2200      	movs	r2, #0
 8008f5a:	801a      	strh	r2, [r3, #0]
	unsigned char Fa_200m1[2] = {0};
 8008f5c:	2610      	movs	r6, #16
 8008f5e:	19bb      	adds	r3, r7, r6
 8008f60:	2200      	movs	r2, #0
 8008f62:	801a      	strh	r2, [r3, #0]
	unsigned char Fa_200m2[2] = {0};
 8008f64:	230c      	movs	r3, #12
 8008f66:	18fb      	adds	r3, r7, r3
 8008f68:	2200      	movs	r2, #0
 8008f6a:	801a      	strh	r2, [r3, #0]
//	unsigned char i_constant_k[2];
	unsigned char constant_k[2] = {0};
 8008f6c:	2208      	movs	r2, #8
 8008f6e:	18bb      	adds	r3, r7, r2
 8008f70:	2200      	movs	r2, #0
 8008f72:	801a      	strh	r2, [r3, #0]
	unsigned char Sp_Co[2] = {0};
 8008f74:	1d3b      	adds	r3, r7, #4
 8008f76:	2200      	movs	r2, #0
 8008f78:	801a      	strh	r2, [r3, #0]
	unsigned char Sp_Max[2] = {0};
 8008f7a:	003b      	movs	r3, r7
 8008f7c:	2200      	movs	r2, #0
 8008f7e:	801a      	strh	r2, [r3, #0]
	*/

	//0 - header AA BB

	//1 - ReadBuffer[0][1][2][3] - 2km
	Dist_Fkm[0] = ReadBuffer[0];
 8008f80:	4bb4      	ldr	r3, [pc, #720]	@ (8009254 <eeprom_r+0x330>)
 8008f82:	781a      	ldrb	r2, [r3, #0]
 8008f84:	187b      	adds	r3, r7, r1
 8008f86:	701a      	strb	r2, [r3, #0]
	Dist_Fkm[1] = ReadBuffer[1];
 8008f88:	4bb2      	ldr	r3, [pc, #712]	@ (8009254 <eeprom_r+0x330>)
 8008f8a:	785a      	ldrb	r2, [r3, #1]
 8008f8c:	187b      	adds	r3, r7, r1
 8008f8e:	705a      	strb	r2, [r3, #1]
	Dist_Fkm[2] = ReadBuffer[2];
 8008f90:	4bb0      	ldr	r3, [pc, #704]	@ (8009254 <eeprom_r+0x330>)
 8008f92:	789a      	ldrb	r2, [r3, #2]
 8008f94:	187b      	adds	r3, r7, r1
 8008f96:	709a      	strb	r2, [r3, #2]
	Dist_Fkm[3] = ReadBuffer[3];
 8008f98:	4bae      	ldr	r3, [pc, #696]	@ (8009254 <eeprom_r+0x330>)
 8008f9a:	78da      	ldrb	r2, [r3, #3]
 8008f9c:	187b      	adds	r3, r7, r1
 8008f9e:	70da      	strb	r2, [r3, #3]
	//first 2km, not used yet
	memset(Dist_Fkm, 0, 4);
 8008fa0:	187b      	adds	r3, r7, r1
 8008fa2:	2204      	movs	r2, #4
 8008fa4:	2100      	movs	r1, #0
 8008fa6:	0018      	movs	r0, r3
 8008fa8:	f00f fe52 	bl	8018c50 <memset>

	//2 - ReadBuffer[4][5] - Fa_amt, 935, 745, 1750
	Fa_amt[0] = ReadBuffer[4];
 8008fac:	4ba9      	ldr	r3, [pc, #676]	@ (8009254 <eeprom_r+0x330>)
 8008fae:	791a      	ldrb	r2, [r3, #4]
 8008fb0:	197b      	adds	r3, r7, r5
 8008fb2:	701a      	strb	r2, [r3, #0]
	Fa_amt[1] = ReadBuffer[5];
 8008fb4:	4ba7      	ldr	r3, [pc, #668]	@ (8009254 <eeprom_r+0x330>)
 8008fb6:	795a      	ldrb	r2, [r3, #5]
 8008fb8:	197b      	adds	r3, r7, r5
 8008fba:	705a      	strb	r2, [r3, #1]
	Fare_reached = (float) byte_to_long(Fa_amt) / 10;
 8008fbc:	197b      	adds	r3, r7, r5
 8008fbe:	0018      	movs	r0, r3
 8008fc0:	f7fe ff64 	bl	8007e8c <byte_to_long>
 8008fc4:	0003      	movs	r3, r0
 8008fc6:	0018      	movs	r0, r3
 8008fc8:	f7f8 fa7c 	bl	80014c4 <__aeabi_ui2f>
 8008fcc:	1c03      	adds	r3, r0, #0
 8008fce:	49a2      	ldr	r1, [pc, #648]	@ (8009258 <eeprom_r+0x334>)
 8008fd0:	1c18      	adds	r0, r3, #0
 8008fd2:	f7f7 fd43 	bl	8000a5c <__aeabi_fdiv>
 8008fd6:	1c03      	adds	r3, r0, #0
 8008fd8:	1c1a      	adds	r2, r3, #0
 8008fda:	4ba0      	ldr	r3, [pc, #640]	@ (800925c <eeprom_r+0x338>)
 8008fdc:	601a      	str	r2, [r3, #0]
	memset(Fa_amt, 0, 2);
 8008fde:	197b      	adds	r3, r7, r5
 8008fe0:	2202      	movs	r2, #2
 8008fe2:	2100      	movs	r1, #0
 8008fe4:	0018      	movs	r0, r3
 8008fe6:	f00f fe33 	bl	8018c50 <memset>

	//3 - ReadBuffer[6][7] - Fa_2km, 270, 235, 220
	Fa_2km[0] = ReadBuffer[6];
 8008fea:	4b9a      	ldr	r3, [pc, #616]	@ (8009254 <eeprom_r+0x330>)
 8008fec:	799a      	ldrb	r2, [r3, #6]
 8008fee:	193b      	adds	r3, r7, r4
 8008ff0:	701a      	strb	r2, [r3, #0]
	Fa_2km[1] = ReadBuffer[7];
 8008ff2:	4b98      	ldr	r3, [pc, #608]	@ (8009254 <eeprom_r+0x330>)
 8008ff4:	79da      	ldrb	r2, [r3, #7]
 8008ff6:	193b      	adds	r3, r7, r4
 8008ff8:	705a      	strb	r2, [r3, #1]
	Fare_2km = (float) byte_to_long(Fa_2km) / 10;
 8008ffa:	193b      	adds	r3, r7, r4
 8008ffc:	0018      	movs	r0, r3
 8008ffe:	f7fe ff45 	bl	8007e8c <byte_to_long>
 8009002:	0003      	movs	r3, r0
 8009004:	0018      	movs	r0, r3
 8009006:	f7f8 fa5d 	bl	80014c4 <__aeabi_ui2f>
 800900a:	1c03      	adds	r3, r0, #0
 800900c:	4992      	ldr	r1, [pc, #584]	@ (8009258 <eeprom_r+0x334>)
 800900e:	1c18      	adds	r0, r3, #0
 8009010:	f7f7 fd24 	bl	8000a5c <__aeabi_fdiv>
 8009014:	1c03      	adds	r3, r0, #0
 8009016:	1c1a      	adds	r2, r3, #0
 8009018:	4b91      	ldr	r3, [pc, #580]	@ (8009260 <eeprom_r+0x33c>)
 800901a:	601a      	str	r2, [r3, #0]
	//Fare_200m0 = Fare_2km / 10 (2.7, 2.35, 2.2), C_Fare_Min = Fare_2km * 10 (2700, 2350, 2200)
	Fare_200m0 = (float) byte_to_long(Fa_2km) / 100;
 800901c:	193b      	adds	r3, r7, r4
 800901e:	0018      	movs	r0, r3
 8009020:	f7fe ff34 	bl	8007e8c <byte_to_long>
 8009024:	0003      	movs	r3, r0
 8009026:	0018      	movs	r0, r3
 8009028:	f7f8 fa4c 	bl	80014c4 <__aeabi_ui2f>
 800902c:	1c03      	adds	r3, r0, #0
 800902e:	498d      	ldr	r1, [pc, #564]	@ (8009264 <eeprom_r+0x340>)
 8009030:	1c18      	adds	r0, r3, #0
 8009032:	f7f7 fd13 	bl	8000a5c <__aeabi_fdiv>
 8009036:	1c03      	adds	r3, r0, #0
 8009038:	1c1a      	adds	r2, r3, #0
 800903a:	4b8b      	ldr	r3, [pc, #556]	@ (8009268 <eeprom_r+0x344>)
 800903c:	601a      	str	r2, [r3, #0]
	Fare_min = byte_to_long(Fa_2km) * 10;
 800903e:	193b      	adds	r3, r7, r4
 8009040:	0018      	movs	r0, r3
 8009042:	f7fe ff23 	bl	8007e8c <byte_to_long>
 8009046:	0002      	movs	r2, r0
 8009048:	0013      	movs	r3, r2
 800904a:	009b      	lsls	r3, r3, #2
 800904c:	189b      	adds	r3, r3, r2
 800904e:	005b      	lsls	r3, r3, #1
 8009050:	001a      	movs	r2, r3
 8009052:	4b86      	ldr	r3, [pc, #536]	@ (800926c <eeprom_r+0x348>)
 8009054:	601a      	str	r2, [r3, #0]
	memset(Fa_2km, 0, 2);
 8009056:	193b      	adds	r3, r7, r4
 8009058:	2202      	movs	r2, #2
 800905a:	2100      	movs	r1, #0
 800905c:	0018      	movs	r0, r3
 800905e:	f00f fdf7 	bl	8018c50 <memset>

	//4 - ReadBuffer[8][9] - Fa_200m1, 19, 17, 17
	Fa_200m1[0] = ReadBuffer[8];
 8009062:	4b7c      	ldr	r3, [pc, #496]	@ (8009254 <eeprom_r+0x330>)
 8009064:	7a1a      	ldrb	r2, [r3, #8]
 8009066:	19bb      	adds	r3, r7, r6
 8009068:	701a      	strb	r2, [r3, #0]
	Fa_200m1[1] = ReadBuffer[9];
 800906a:	4b7a      	ldr	r3, [pc, #488]	@ (8009254 <eeprom_r+0x330>)
 800906c:	7a5a      	ldrb	r2, [r3, #9]
 800906e:	19bb      	adds	r3, r7, r6
 8009070:	705a      	strb	r2, [r3, #1]
	Fare_200m1 = (float) byte_to_long(Fa_200m1) / 10;
 8009072:	19bb      	adds	r3, r7, r6
 8009074:	0018      	movs	r0, r3
 8009076:	f7fe ff09 	bl	8007e8c <byte_to_long>
 800907a:	0003      	movs	r3, r0
 800907c:	0018      	movs	r0, r3
 800907e:	f7f8 fa21 	bl	80014c4 <__aeabi_ui2f>
 8009082:	1c03      	adds	r3, r0, #0
 8009084:	4974      	ldr	r1, [pc, #464]	@ (8009258 <eeprom_r+0x334>)
 8009086:	1c18      	adds	r0, r3, #0
 8009088:	f7f7 fce8 	bl	8000a5c <__aeabi_fdiv>
 800908c:	1c03      	adds	r3, r0, #0
 800908e:	1c1a      	adds	r2, r3, #0
 8009090:	4b77      	ldr	r3, [pc, #476]	@ (8009270 <eeprom_r+0x34c>)
 8009092:	601a      	str	r2, [r3, #0]
	//Fare_200m1 -> T1
	memset(Fa_200m1, 0, 2);
 8009094:	19bb      	adds	r3, r7, r6
 8009096:	2202      	movs	r2, #2
 8009098:	2100      	movs	r1, #0
 800909a:	0018      	movs	r0, r3
 800909c:	f00f fdd8 	bl	8018c50 <memset>

	//5 - ReadBuffer[10][11] - Fa_200m2, 13, 13, 15
	Fa_200m2[0] = ReadBuffer[10];
 80090a0:	4b6c      	ldr	r3, [pc, #432]	@ (8009254 <eeprom_r+0x330>)
 80090a2:	7a9a      	ldrb	r2, [r3, #10]
 80090a4:	240c      	movs	r4, #12
 80090a6:	193b      	adds	r3, r7, r4
 80090a8:	701a      	strb	r2, [r3, #0]
	Fa_200m2[1] = ReadBuffer[11];
 80090aa:	4b6a      	ldr	r3, [pc, #424]	@ (8009254 <eeprom_r+0x330>)
 80090ac:	7ada      	ldrb	r2, [r3, #11]
 80090ae:	193b      	adds	r3, r7, r4
 80090b0:	705a      	strb	r2, [r3, #1]
	Fare_200m2 = (float) byte_to_long(Fa_200m2) / 10;
 80090b2:	193b      	adds	r3, r7, r4
 80090b4:	0018      	movs	r0, r3
 80090b6:	f7fe fee9 	bl	8007e8c <byte_to_long>
 80090ba:	0003      	movs	r3, r0
 80090bc:	0018      	movs	r0, r3
 80090be:	f7f8 fa01 	bl	80014c4 <__aeabi_ui2f>
 80090c2:	1c03      	adds	r3, r0, #0
 80090c4:	4964      	ldr	r1, [pc, #400]	@ (8009258 <eeprom_r+0x334>)
 80090c6:	1c18      	adds	r0, r3, #0
 80090c8:	f7f7 fcc8 	bl	8000a5c <__aeabi_fdiv>
 80090cc:	1c03      	adds	r3, r0, #0
 80090ce:	1c1a      	adds	r2, r3, #0
 80090d0:	4b68      	ldr	r3, [pc, #416]	@ (8009274 <eeprom_r+0x350>)
 80090d2:	601a      	str	r2, [r3, #0]
	//Fare_200m2 -> T2
	memset(Fa_200m2, 0, 2);
 80090d4:	193b      	adds	r3, r7, r4
 80090d6:	2202      	movs	r2, #2
 80090d8:	2100      	movs	r1, #0
 80090da:	0018      	movs	r0, r3
 80090dc:	f00f fdb8 	bl	8018c50 <memset>

	//6 - ReadBuffer[12][13] - k, 1000
	constant_k[0] = ReadBuffer[12];
 80090e0:	4b5c      	ldr	r3, [pc, #368]	@ (8009254 <eeprom_r+0x330>)
 80090e2:	7b1a      	ldrb	r2, [r3, #12]
 80090e4:	2408      	movs	r4, #8
 80090e6:	193b      	adds	r3, r7, r4
 80090e8:	701a      	strb	r2, [r3, #0]
	constant_k[1] = ReadBuffer[13];
 80090ea:	4b5a      	ldr	r3, [pc, #360]	@ (8009254 <eeprom_r+0x330>)
 80090ec:	7b5a      	ldrb	r2, [r3, #13]
 80090ee:	193b      	adds	r3, r7, r4
 80090f0:	705a      	strb	r2, [r3, #1]
	ck_r = byte_to_long(constant_k);
 80090f2:	193b      	adds	r3, r7, r4
 80090f4:	0018      	movs	r0, r3
 80090f6:	f7fe fec9 	bl	8007e8c <byte_to_long>
 80090fa:	0003      	movs	r3, r0
 80090fc:	b29a      	uxth	r2, r3
 80090fe:	4b5e      	ldr	r3, [pc, #376]	@ (8009278 <eeprom_r+0x354>)
 8009100:	801a      	strh	r2, [r3, #0]
	memset(constant_k, 0, 2);
 8009102:	193b      	adds	r3, r7, r4
 8009104:	2202      	movs	r2, #2
 8009106:	2100      	movs	r1, #0
 8009108:	0018      	movs	r0, r3
 800910a:	f00f fda1 	bl	8018c50 <memset>

	//7 - ReadBuffer[14][15] - Sp_Co
	Sp_Co[0] = ReadBuffer[14];
 800910e:	4b51      	ldr	r3, [pc, #324]	@ (8009254 <eeprom_r+0x330>)
 8009110:	7b9a      	ldrb	r2, [r3, #14]
 8009112:	1d3b      	adds	r3, r7, #4
 8009114:	701a      	strb	r2, [r3, #0]
	Sp_Co[1] = ReadBuffer[15];
 8009116:	4b4f      	ldr	r3, [pc, #316]	@ (8009254 <eeprom_r+0x330>)
 8009118:	7bda      	ldrb	r2, [r3, #15]
 800911a:	1d3b      	adds	r3, r7, #4
 800911c:	705a      	strb	r2, [r3, #1]
	Speed_co = byte_to_long(Sp_Co);
 800911e:	1d3b      	adds	r3, r7, #4
 8009120:	0018      	movs	r0, r3
 8009122:	f7fe feb3 	bl	8007e8c <byte_to_long>
 8009126:	0003      	movs	r3, r0
 8009128:	b29a      	uxth	r2, r3
 800912a:	4b54      	ldr	r3, [pc, #336]	@ (800927c <eeprom_r+0x358>)
 800912c:	801a      	strh	r2, [r3, #0]
	//Speed_co -> 12km/h
	memset(Sp_Co, 0, 2);
 800912e:	1d3b      	adds	r3, r7, #4
 8009130:	2202      	movs	r2, #2
 8009132:	2100      	movs	r1, #0
 8009134:	0018      	movs	r0, r3
 8009136:	f00f fd8b 	bl	8018c50 <memset>

	//8 - ReadBuffer[16][17] - Sp_Max
	Sp_Max[0] = ReadBuffer[16];
 800913a:	4b46      	ldr	r3, [pc, #280]	@ (8009254 <eeprom_r+0x330>)
 800913c:	7c1a      	ldrb	r2, [r3, #16]
 800913e:	003b      	movs	r3, r7
 8009140:	701a      	strb	r2, [r3, #0]
	Sp_Max[1] = ReadBuffer[17];
 8009142:	4b44      	ldr	r3, [pc, #272]	@ (8009254 <eeprom_r+0x330>)
 8009144:	7c5a      	ldrb	r2, [r3, #17]
 8009146:	003b      	movs	r3, r7
 8009148:	705a      	strb	r2, [r3, #1]
	Speed_max = byte_to_long(Sp_Max);
 800914a:	003b      	movs	r3, r7
 800914c:	0018      	movs	r0, r3
 800914e:	f7fe fe9d 	bl	8007e8c <byte_to_long>
 8009152:	0003      	movs	r3, r0
 8009154:	b29a      	uxth	r2, r3
 8009156:	4b4a      	ldr	r3, [pc, #296]	@ (8009280 <eeprom_r+0x35c>)
 8009158:	801a      	strh	r2, [r3, #0]
	//Speed_max -> 150km/h
	memset(Sp_Max, 0, 2);
 800915a:	003b      	movs	r3, r7
 800915c:	2202      	movs	r2, #2
 800915e:	2100      	movs	r1, #0
 8009160:	0018      	movs	r0, r3
 8009162:	f00f fd75 	bl	8018c50 <memset>

	//9 - ReadBuffer[18][19] - Type of Taxi
	Type[0] = ReadBuffer[18];
 8009166:	4b3b      	ldr	r3, [pc, #236]	@ (8009254 <eeprom_r+0x330>)
 8009168:	7c9a      	ldrb	r2, [r3, #18]
 800916a:	4b46      	ldr	r3, [pc, #280]	@ (8009284 <eeprom_r+0x360>)
 800916c:	701a      	strb	r2, [r3, #0]
	Type[1] = ReadBuffer[19];
 800916e:	4b39      	ldr	r3, [pc, #228]	@ (8009254 <eeprom_r+0x330>)
 8009170:	7cda      	ldrb	r2, [r3, #19]
 8009172:	4b44      	ldr	r3, [pc, #272]	@ (8009284 <eeprom_r+0x360>)
 8009174:	705a      	strb	r2, [r3, #1]
	//taxiType -> 00 01 02 03 -> init urban nt lantau
	//no need to transfer, will use in parameter reply
	//memset(Type, 0, 2);

	//10 - ReadBuffer[20][21][22][23]24][25][26][27][28][29] - plate no.
	plate_no[0] = ReadBuffer[20];
 8009176:	4b37      	ldr	r3, [pc, #220]	@ (8009254 <eeprom_r+0x330>)
 8009178:	7d1a      	ldrb	r2, [r3, #20]
 800917a:	4b43      	ldr	r3, [pc, #268]	@ (8009288 <eeprom_r+0x364>)
 800917c:	701a      	strb	r2, [r3, #0]
	plate_no[1] = ReadBuffer[21];
 800917e:	4b35      	ldr	r3, [pc, #212]	@ (8009254 <eeprom_r+0x330>)
 8009180:	7d5a      	ldrb	r2, [r3, #21]
 8009182:	4b41      	ldr	r3, [pc, #260]	@ (8009288 <eeprom_r+0x364>)
 8009184:	705a      	strb	r2, [r3, #1]
	plate_no[2] = ReadBuffer[22];
 8009186:	4b33      	ldr	r3, [pc, #204]	@ (8009254 <eeprom_r+0x330>)
 8009188:	7d9a      	ldrb	r2, [r3, #22]
 800918a:	4b3f      	ldr	r3, [pc, #252]	@ (8009288 <eeprom_r+0x364>)
 800918c:	709a      	strb	r2, [r3, #2]
	plate_no[3] = ReadBuffer[23];
 800918e:	4b31      	ldr	r3, [pc, #196]	@ (8009254 <eeprom_r+0x330>)
 8009190:	7dda      	ldrb	r2, [r3, #23]
 8009192:	4b3d      	ldr	r3, [pc, #244]	@ (8009288 <eeprom_r+0x364>)
 8009194:	70da      	strb	r2, [r3, #3]
	plate_no[4] = ReadBuffer[24];
 8009196:	4b2f      	ldr	r3, [pc, #188]	@ (8009254 <eeprom_r+0x330>)
 8009198:	7e1a      	ldrb	r2, [r3, #24]
 800919a:	4b3b      	ldr	r3, [pc, #236]	@ (8009288 <eeprom_r+0x364>)
 800919c:	711a      	strb	r2, [r3, #4]
	plate_no[5] = ReadBuffer[25];
 800919e:	4b2d      	ldr	r3, [pc, #180]	@ (8009254 <eeprom_r+0x330>)
 80091a0:	7e5a      	ldrb	r2, [r3, #25]
 80091a2:	4b39      	ldr	r3, [pc, #228]	@ (8009288 <eeprom_r+0x364>)
 80091a4:	715a      	strb	r2, [r3, #5]
	plate_no[6] = ReadBuffer[26];
 80091a6:	4b2b      	ldr	r3, [pc, #172]	@ (8009254 <eeprom_r+0x330>)
 80091a8:	7e9a      	ldrb	r2, [r3, #26]
 80091aa:	4b37      	ldr	r3, [pc, #220]	@ (8009288 <eeprom_r+0x364>)
 80091ac:	719a      	strb	r2, [r3, #6]
	plate_no[7] = ReadBuffer[27];
 80091ae:	4b29      	ldr	r3, [pc, #164]	@ (8009254 <eeprom_r+0x330>)
 80091b0:	7eda      	ldrb	r2, [r3, #27]
 80091b2:	4b35      	ldr	r3, [pc, #212]	@ (8009288 <eeprom_r+0x364>)
 80091b4:	71da      	strb	r2, [r3, #7]
	plate_no[8] = ReadBuffer[28];
 80091b6:	4b27      	ldr	r3, [pc, #156]	@ (8009254 <eeprom_r+0x330>)
 80091b8:	7f1a      	ldrb	r2, [r3, #28]
 80091ba:	4b33      	ldr	r3, [pc, #204]	@ (8009288 <eeprom_r+0x364>)
 80091bc:	721a      	strb	r2, [r3, #8]
	plate_no[9] = ReadBuffer[29];
 80091be:	4b25      	ldr	r3, [pc, #148]	@ (8009254 <eeprom_r+0x330>)
 80091c0:	7f5a      	ldrb	r2, [r3, #29]
 80091c2:	4b31      	ldr	r3, [pc, #196]	@ (8009288 <eeprom_r+0x364>)
 80091c4:	725a      	strb	r2, [r3, #9]
	//QR code
	//need to remove space - 0x20 for QR CODE use
	//new variable plate_qr[] = {0x5A, 0xA5, length, 0x82, 0x10, 0x80, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0xFF, 0xFF};
	//check if 0x20
	//then calculate length
	plate_qr[6] = ReadBuffer[24];
 80091c6:	4b23      	ldr	r3, [pc, #140]	@ (8009254 <eeprom_r+0x330>)
 80091c8:	7e1a      	ldrb	r2, [r3, #24]
 80091ca:	4b30      	ldr	r3, [pc, #192]	@ (800928c <eeprom_r+0x368>)
 80091cc:	719a      	strb	r2, [r3, #6]
	plate_qr[7] = ReadBuffer[25];
 80091ce:	4b21      	ldr	r3, [pc, #132]	@ (8009254 <eeprom_r+0x330>)
 80091d0:	7e5a      	ldrb	r2, [r3, #25]
 80091d2:	4b2e      	ldr	r3, [pc, #184]	@ (800928c <eeprom_r+0x368>)
 80091d4:	71da      	strb	r2, [r3, #7]
	plate_qr[8] = ReadBuffer[26];
 80091d6:	4b1f      	ldr	r3, [pc, #124]	@ (8009254 <eeprom_r+0x330>)
 80091d8:	7e9a      	ldrb	r2, [r3, #26]
 80091da:	4b2c      	ldr	r3, [pc, #176]	@ (800928c <eeprom_r+0x368>)
 80091dc:	721a      	strb	r2, [r3, #8]
	plate_qr[9] = ReadBuffer[27];
 80091de:	4b1d      	ldr	r3, [pc, #116]	@ (8009254 <eeprom_r+0x330>)
 80091e0:	7eda      	ldrb	r2, [r3, #27]
 80091e2:	4b2a      	ldr	r3, [pc, #168]	@ (800928c <eeprom_r+0x368>)
 80091e4:	725a      	strb	r2, [r3, #9]
	plate_qr[10] = ReadBuffer[28];
 80091e6:	4b1b      	ldr	r3, [pc, #108]	@ (8009254 <eeprom_r+0x330>)
 80091e8:	7f1a      	ldrb	r2, [r3, #28]
 80091ea:	4b28      	ldr	r3, [pc, #160]	@ (800928c <eeprom_r+0x368>)
 80091ec:	729a      	strb	r2, [r3, #10]
	plate_qr[11] = ReadBuffer[29];
 80091ee:	4b19      	ldr	r3, [pc, #100]	@ (8009254 <eeprom_r+0x330>)
 80091f0:	7f5a      	ldrb	r2, [r3, #29]
 80091f2:	4b26      	ldr	r3, [pc, #152]	@ (800928c <eeprom_r+0x368>)
 80091f4:	72da      	strb	r2, [r3, #11]

	//printer -> print the receipt / tbox will use set plate no. in web config
	plate[13] = plate_no[9];
 80091f6:	4b24      	ldr	r3, [pc, #144]	@ (8009288 <eeprom_r+0x364>)
 80091f8:	7a5a      	ldrb	r2, [r3, #9]
 80091fa:	4b25      	ldr	r3, [pc, #148]	@ (8009290 <eeprom_r+0x36c>)
 80091fc:	735a      	strb	r2, [r3, #13]
	plate[12] = plate_no[8];
 80091fe:	4b22      	ldr	r3, [pc, #136]	@ (8009288 <eeprom_r+0x364>)
 8009200:	7a1a      	ldrb	r2, [r3, #8]
 8009202:	4b23      	ldr	r3, [pc, #140]	@ (8009290 <eeprom_r+0x36c>)
 8009204:	731a      	strb	r2, [r3, #12]
	plate[11] = plate_no[7];
 8009206:	4b20      	ldr	r3, [pc, #128]	@ (8009288 <eeprom_r+0x364>)
 8009208:	79da      	ldrb	r2, [r3, #7]
 800920a:	4b21      	ldr	r3, [pc, #132]	@ (8009290 <eeprom_r+0x36c>)
 800920c:	72da      	strb	r2, [r3, #11]
	plate[10] = plate_no[6];
 800920e:	4b1e      	ldr	r3, [pc, #120]	@ (8009288 <eeprom_r+0x364>)
 8009210:	799a      	ldrb	r2, [r3, #6]
 8009212:	4b1f      	ldr	r3, [pc, #124]	@ (8009290 <eeprom_r+0x36c>)
 8009214:	729a      	strb	r2, [r3, #10]
	plate[9] = plate_no[5];
 8009216:	4b1c      	ldr	r3, [pc, #112]	@ (8009288 <eeprom_r+0x364>)
 8009218:	795a      	ldrb	r2, [r3, #5]
 800921a:	4b1d      	ldr	r3, [pc, #116]	@ (8009290 <eeprom_r+0x36c>)
 800921c:	725a      	strb	r2, [r3, #9]
	plate[8] = plate_no[4];
 800921e:	4b1a      	ldr	r3, [pc, #104]	@ (8009288 <eeprom_r+0x364>)
 8009220:	791a      	ldrb	r2, [r3, #4]
 8009222:	4b1b      	ldr	r3, [pc, #108]	@ (8009290 <eeprom_r+0x36c>)
 8009224:	721a      	strb	r2, [r3, #8]
	plate[7] = plate_no[3];
 8009226:	4b18      	ldr	r3, [pc, #96]	@ (8009288 <eeprom_r+0x364>)
 8009228:	78da      	ldrb	r2, [r3, #3]
 800922a:	4b19      	ldr	r3, [pc, #100]	@ (8009290 <eeprom_r+0x36c>)
 800922c:	71da      	strb	r2, [r3, #7]
	plate[6] = plate_no[2];
 800922e:	4b16      	ldr	r3, [pc, #88]	@ (8009288 <eeprom_r+0x364>)
 8009230:	789a      	ldrb	r2, [r3, #2]
 8009232:	4b17      	ldr	r3, [pc, #92]	@ (8009290 <eeprom_r+0x36c>)
 8009234:	719a      	strb	r2, [r3, #6]
	plate[5] = plate_no[1];
 8009236:	4b14      	ldr	r3, [pc, #80]	@ (8009288 <eeprom_r+0x364>)
 8009238:	785a      	ldrb	r2, [r3, #1]
 800923a:	4b15      	ldr	r3, [pc, #84]	@ (8009290 <eeprom_r+0x36c>)
 800923c:	715a      	strb	r2, [r3, #5]
	plate[4] = plate_no[0];
 800923e:	4b12      	ldr	r3, [pc, #72]	@ (8009288 <eeprom_r+0x364>)
 8009240:	781a      	ldrb	r2, [r3, #0]
 8009242:	4b13      	ldr	r3, [pc, #76]	@ (8009290 <eeprom_r+0x36c>)
 8009244:	711a      	strb	r2, [r3, #4]
	//parameter reply -> directly reply plate_no[] in Replybuffer[]
	//memset(plate_no, 0, 10);

	//16 - stop bytes FF
}
 8009246:	46c0      	nop			@ (mov r8, r8)
 8009248:	46bd      	mov	sp, r7
 800924a:	b009      	add	sp, #36	@ 0x24
 800924c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800924e:	46c0      	nop			@ (mov r8, r8)
 8009250:	2000057c 	.word	0x2000057c
 8009254:	20000b98 	.word	0x20000b98
 8009258:	41200000 	.word	0x41200000
 800925c:	20000cc0 	.word	0x20000cc0
 8009260:	20000cc4 	.word	0x20000cc4
 8009264:	42c80000 	.word	0x42c80000
 8009268:	20000cc8 	.word	0x20000cc8
 800926c:	20000cd4 	.word	0x20000cd4
 8009270:	20000ccc 	.word	0x20000ccc
 8009274:	20000cd0 	.word	0x20000cd0
 8009278:	20000cd8 	.word	0x20000cd8
 800927c:	20000240 	.word	0x20000240
 8009280:	20000242 	.word	0x20000242
 8009284:	20000c10 	.word	0x20000c10
 8009288:	20000c14 	.word	0x20000c14
 800928c:	20000098 	.word	0x20000098
 8009290:	2000019c 	.word	0x2000019c

08009294 <rtc_set>:

//set time & date
void rtc_set(void)
{
 8009294:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009296:	b091      	sub	sp, #68	@ 0x44
 8009298:	af10      	add	r7, sp, #64	@ 0x40
	//read from eeprom for first time set

	PCF2129_Init(hi2c1, RTC_WRITE_ADDR);
 800929a:	4c17      	ldr	r4, [pc, #92]	@ (80092f8 <rtc_set+0x64>)
 800929c:	23a2      	movs	r3, #162	@ 0xa2
 800929e:	930f      	str	r3, [sp, #60]	@ 0x3c
 80092a0:	466b      	mov	r3, sp
 80092a2:	0018      	movs	r0, r3
 80092a4:	0023      	movs	r3, r4
 80092a6:	3310      	adds	r3, #16
 80092a8:	223c      	movs	r2, #60	@ 0x3c
 80092aa:	0019      	movs	r1, r3
 80092ac:	f00f fd53 	bl	8018d56 <memcpy>
 80092b0:	6820      	ldr	r0, [r4, #0]
 80092b2:	6861      	ldr	r1, [r4, #4]
 80092b4:	68a2      	ldr	r2, [r4, #8]
 80092b6:	68e3      	ldr	r3, [r4, #12]
 80092b8:	f003 faa4 	bl	800c804 <PCF2129_Init>
	PCF2129_configure();                         ///Set 24hr Format
 80092bc:	f003 fac4 	bl	800c848 <PCF2129_configure>

	PCF2129_setDate(ReadBuffer[30], ReadBuffer[31], ReadBuffer[32], ReadBuffer[33], ReadBuffer[34], ReadBuffer[35]);
 80092c0:	4b0e      	ldr	r3, [pc, #56]	@ (80092fc <rtc_set+0x68>)
 80092c2:	7f9b      	ldrb	r3, [r3, #30]
 80092c4:	001e      	movs	r6, r3
 80092c6:	4b0d      	ldr	r3, [pc, #52]	@ (80092fc <rtc_set+0x68>)
 80092c8:	7fd9      	ldrb	r1, [r3, #31]
 80092ca:	4b0c      	ldr	r3, [pc, #48]	@ (80092fc <rtc_set+0x68>)
 80092cc:	2220      	movs	r2, #32
 80092ce:	5c98      	ldrb	r0, [r3, r2]
 80092d0:	4b0a      	ldr	r3, [pc, #40]	@ (80092fc <rtc_set+0x68>)
 80092d2:	2221      	movs	r2, #33	@ 0x21
 80092d4:	5c9c      	ldrb	r4, [r3, r2]
 80092d6:	4b09      	ldr	r3, [pc, #36]	@ (80092fc <rtc_set+0x68>)
 80092d8:	2222      	movs	r2, #34	@ 0x22
 80092da:	5c9b      	ldrb	r3, [r3, r2]
 80092dc:	4a07      	ldr	r2, [pc, #28]	@ (80092fc <rtc_set+0x68>)
 80092de:	2523      	movs	r5, #35	@ 0x23
 80092e0:	5d52      	ldrb	r2, [r2, r5]
 80092e2:	9201      	str	r2, [sp, #4]
 80092e4:	9300      	str	r3, [sp, #0]
 80092e6:	0023      	movs	r3, r4
 80092e8:	0002      	movs	r2, r0
 80092ea:	0030      	movs	r0, r6
 80092ec:	f003 fb7a 	bl	800c9e4 <PCF2129_setDate>
}
 80092f0:	46c0      	nop			@ (mov r8, r8)
 80092f2:	46bd      	mov	sp, r7
 80092f4:	b001      	add	sp, #4
 80092f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80092f8:	20000530 	.word	0x20000530
 80092fc:	20000b98 	.word	0x20000b98

08009300 <time_update>:

//read time & date
//transfer to uart
void time_update(void)
{
 8009300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009302:	46de      	mov	lr, fp
 8009304:	4657      	mov	r7, sl
 8009306:	464e      	mov	r6, r9
 8009308:	4645      	mov	r5, r8
 800930a:	b5e0      	push	{r5, r6, r7, lr}
 800930c:	4cf6      	ldr	r4, [pc, #984]	@ (80096e8 <time_update+0x3e8>)
 800930e:	44a5      	add	sp, r4
 8009310:	af0a      	add	r7, sp, #40	@ 0x28
	unsigned char r_buffer[9] = {0};
 8009312:	2582      	movs	r5, #130	@ 0x82
 8009314:	00ad      	lsls	r5, r5, #2
 8009316:	2610      	movs	r6, #16
 8009318:	19ab      	adds	r3, r5, r6
 800931a:	19db      	adds	r3, r3, r7
 800931c:	2200      	movs	r2, #0
 800931e:	601a      	str	r2, [r3, #0]
 8009320:	3304      	adds	r3, #4
 8009322:	2205      	movs	r2, #5
 8009324:	2100      	movs	r1, #0
 8009326:	0018      	movs	r0, r3
 8009328:	f00f fc92 	bl	8018c50 <memset>
	unsigned char u_buffer[6] = {0};
 800932c:	2380      	movs	r3, #128	@ 0x80
 800932e:	009b      	lsls	r3, r3, #2
 8009330:	199b      	adds	r3, r3, r6
 8009332:	19db      	adds	r3, r3, r7
 8009334:	2200      	movs	r2, #0
 8009336:	601a      	str	r2, [r3, #0]
 8009338:	2200      	movs	r2, #0
 800933a:	809a      	strh	r2, [r3, #4]

	RTC_date = PCF2129_getDate();
 800933c:	4ceb      	ldr	r4, [pc, #940]	@ (80096ec <time_update+0x3ec>)
 800933e:	19bb      	adds	r3, r7, r6
 8009340:	0018      	movs	r0, r3
 8009342:	f003 fa89 	bl	800c858 <PCF2129_getDate>
 8009346:	4bea      	ldr	r3, [pc, #936]	@ (80096f0 <time_update+0x3f0>)
 8009348:	2286      	movs	r2, #134	@ 0x86
 800934a:	0092      	lsls	r2, r2, #2
 800934c:	189b      	adds	r3, r3, r2
 800934e:	2210      	movs	r2, #16
 8009350:	4694      	mov	ip, r2
 8009352:	44bc      	add	ip, r7
 8009354:	4463      	add	r3, ip
 8009356:	0020      	movs	r0, r4
 8009358:	0019      	movs	r1, r3
 800935a:	2358      	movs	r3, #88	@ 0x58
 800935c:	001a      	movs	r2, r3
 800935e:	f00f fcfa 	bl	8018d56 <memcpy>

	year = RTC_date.date.y;
 8009362:	4be2      	ldr	r3, [pc, #904]	@ (80096ec <time_update+0x3ec>)
 8009364:	224d      	movs	r2, #77	@ 0x4d
 8009366:	5c9b      	ldrb	r3, [r3, r2]
 8009368:	001a      	movs	r2, r3
 800936a:	4be2      	ldr	r3, [pc, #904]	@ (80096f4 <time_update+0x3f4>)
 800936c:	801a      	strh	r2, [r3, #0]
	r_buffer[0] = (uint8_t)(year & 0xFF);
 800936e:	4be1      	ldr	r3, [pc, #900]	@ (80096f4 <time_update+0x3f4>)
 8009370:	881b      	ldrh	r3, [r3, #0]
 8009372:	b2da      	uxtb	r2, r3
 8009374:	0029      	movs	r1, r5
 8009376:	0030      	movs	r0, r6
 8009378:	180b      	adds	r3, r1, r0
 800937a:	19db      	adds	r3, r3, r7
 800937c:	701a      	strb	r2, [r3, #0]

	month = RTC_date.date.m;
 800937e:	4bdb      	ldr	r3, [pc, #876]	@ (80096ec <time_update+0x3ec>)
 8009380:	224e      	movs	r2, #78	@ 0x4e
 8009382:	5c9b      	ldrb	r3, [r3, r2]
 8009384:	001a      	movs	r2, r3
 8009386:	4bdc      	ldr	r3, [pc, #880]	@ (80096f8 <time_update+0x3f8>)
 8009388:	801a      	strh	r2, [r3, #0]
	r_buffer[1] = (uint8_t)(month & 0xFF);
 800938a:	4bdb      	ldr	r3, [pc, #876]	@ (80096f8 <time_update+0x3f8>)
 800938c:	881b      	ldrh	r3, [r3, #0]
 800938e:	b2da      	uxtb	r2, r3
 8009390:	180b      	adds	r3, r1, r0
 8009392:	19db      	adds	r3, r3, r7
 8009394:	705a      	strb	r2, [r3, #1]

	day = RTC_date.date.d;
 8009396:	4bd5      	ldr	r3, [pc, #852]	@ (80096ec <time_update+0x3ec>)
 8009398:	224f      	movs	r2, #79	@ 0x4f
 800939a:	5c9b      	ldrb	r3, [r3, r2]
 800939c:	001a      	movs	r2, r3
 800939e:	4bd7      	ldr	r3, [pc, #860]	@ (80096fc <time_update+0x3fc>)
 80093a0:	801a      	strh	r2, [r3, #0]
	r_buffer[2] = (uint8_t)(day & 0xFF);
 80093a2:	4bd6      	ldr	r3, [pc, #856]	@ (80096fc <time_update+0x3fc>)
 80093a4:	881b      	ldrh	r3, [r3, #0]
 80093a6:	b2da      	uxtb	r2, r3
 80093a8:	180b      	adds	r3, r1, r0
 80093aa:	19db      	adds	r3, r3, r7
 80093ac:	709a      	strb	r2, [r3, #2]

//	weekday = RTC_date.date.w;
//	buffer[3] = (uint8_t)(weekday & 0xFF);

	hour = RTC_date.date.hh;
 80093ae:	4bcf      	ldr	r3, [pc, #828]	@ (80096ec <time_update+0x3ec>)
 80093b0:	2251      	movs	r2, #81	@ 0x51
 80093b2:	5c9b      	ldrb	r3, [r3, r2]
 80093b4:	001a      	movs	r2, r3
 80093b6:	4bd2      	ldr	r3, [pc, #840]	@ (8009700 <time_update+0x400>)
 80093b8:	801a      	strh	r2, [r3, #0]
	r_buffer[3] = (uint8_t)(hour & 0xFF);
 80093ba:	4bd1      	ldr	r3, [pc, #836]	@ (8009700 <time_update+0x400>)
 80093bc:	881b      	ldrh	r3, [r3, #0]
 80093be:	b2da      	uxtb	r2, r3
 80093c0:	180b      	adds	r3, r1, r0
 80093c2:	19db      	adds	r3, r3, r7
 80093c4:	70da      	strb	r2, [r3, #3]

	minute = RTC_date.date.mm;
 80093c6:	4bc9      	ldr	r3, [pc, #804]	@ (80096ec <time_update+0x3ec>)
 80093c8:	2252      	movs	r2, #82	@ 0x52
 80093ca:	5c9b      	ldrb	r3, [r3, r2]
 80093cc:	001a      	movs	r2, r3
 80093ce:	4bcd      	ldr	r3, [pc, #820]	@ (8009704 <time_update+0x404>)
 80093d0:	801a      	strh	r2, [r3, #0]
	r_buffer[4] = (uint8_t)(minute & 0xFF);
 80093d2:	4bcc      	ldr	r3, [pc, #816]	@ (8009704 <time_update+0x404>)
 80093d4:	881b      	ldrh	r3, [r3, #0]
 80093d6:	b2da      	uxtb	r2, r3
 80093d8:	180b      	adds	r3, r1, r0
 80093da:	19db      	adds	r3, r3, r7
 80093dc:	711a      	strb	r2, [r3, #4]

	second = RTC_date.date.ss;
 80093de:	4bc3      	ldr	r3, [pc, #780]	@ (80096ec <time_update+0x3ec>)
 80093e0:	2253      	movs	r2, #83	@ 0x53
 80093e2:	5c9b      	ldrb	r3, [r3, r2]
 80093e4:	001a      	movs	r2, r3
 80093e6:	4bc8      	ldr	r3, [pc, #800]	@ (8009708 <time_update+0x408>)
 80093e8:	801a      	strh	r2, [r3, #0]
	r_buffer[5] = (uint8_t)(second & 0xFF);
 80093ea:	4bc7      	ldr	r3, [pc, #796]	@ (8009708 <time_update+0x408>)
 80093ec:	881b      	ldrh	r3, [r3, #0]
 80093ee:	b2da      	uxtb	r2, r3
 80093f0:	180b      	adds	r3, r1, r0
 80093f2:	19db      	adds	r3, r3, r7
 80093f4:	715a      	strb	r2, [r3, #5]

	ctrl_1 = PCF2129_read(PCF2129_REG_CONTROL1);
 80093f6:	2000      	movs	r0, #0
 80093f8:	f003 fb50 	bl	800ca9c <PCF2129_read>
 80093fc:	0003      	movs	r3, r0
 80093fe:	001a      	movs	r2, r3
 8009400:	4bc2      	ldr	r3, [pc, #776]	@ (800970c <time_update+0x40c>)
 8009402:	701a      	strb	r2, [r3, #0]
	ctrl_2 = PCF2129_read(PCF2129_REG_CONTROL2);
 8009404:	2001      	movs	r0, #1
 8009406:	f003 fb49 	bl	800ca9c <PCF2129_read>
 800940a:	0003      	movs	r3, r0
 800940c:	001a      	movs	r2, r3
 800940e:	4bc0      	ldr	r3, [pc, #768]	@ (8009710 <time_update+0x410>)
 8009410:	701a      	strb	r2, [r3, #0]
	ctrl_3 = PCF2129_read(PCF2129_REG_CONTROL3);
 8009412:	2002      	movs	r0, #2
 8009414:	f003 fb42 	bl	800ca9c <PCF2129_read>
 8009418:	0003      	movs	r3, r0
 800941a:	001a      	movs	r2, r3
 800941c:	4bbd      	ldr	r3, [pc, #756]	@ (8009714 <time_update+0x414>)
 800941e:	701a      	strb	r2, [r3, #0]

	hh = PCF2129_read(PCF2129_REG_ALARM_HOUR);
 8009420:	200c      	movs	r0, #12
 8009422:	f003 fb3b 	bl	800ca9c <PCF2129_read>
 8009426:	0003      	movs	r3, r0
 8009428:	001a      	movs	r2, r3
 800942a:	4bbb      	ldr	r3, [pc, #748]	@ (8009718 <time_update+0x418>)
 800942c:	701a      	strb	r2, [r3, #0]
	mm = PCF2129_read(PCF2129_REG_ALARM_MINUTE);
 800942e:	200b      	movs	r0, #11
 8009430:	f003 fb34 	bl	800ca9c <PCF2129_read>
 8009434:	0003      	movs	r3, r0
 8009436:	001a      	movs	r2, r3
 8009438:	4bb8      	ldr	r3, [pc, #736]	@ (800971c <time_update+0x41c>)
 800943a:	701a      	strb	r2, [r3, #0]
	ss = PCF2129_read(PCF2129_REG_ALARM_SECOND);
 800943c:	200a      	movs	r0, #10
 800943e:	f003 fb2d 	bl	800ca9c <PCF2129_read>
 8009442:	0003      	movs	r3, r0
 8009444:	001a      	movs	r2, r3
 8009446:	4bb6      	ldr	r3, [pc, #728]	@ (8009720 <time_update+0x420>)
 8009448:	701a      	strb	r2, [r3, #0]

	PCF2129_write(PCF2129_REG_CONTROL1, 0x00);
 800944a:	2100      	movs	r1, #0
 800944c:	2000      	movs	r0, #0
 800944e:	f003 fb4d 	bl	800caec <PCF2129_write>
//	PCF2129_write(PCF2129_REG_CONTROL2, 0x00);  //to unlock
	PCF2129_write(PCF2129_REG_CONTROL3, 0x00);
 8009452:	2100      	movs	r1, #0
 8009454:	2002      	movs	r0, #2
 8009456:	f003 fb49 	bl	800caec <PCF2129_write>

	//check AIE if power off reset all flags
	if ((ctrl_2 & 0x02) == 0x02)
 800945a:	4bad      	ldr	r3, [pc, #692]	@ (8009710 <time_update+0x410>)
 800945c:	781b      	ldrb	r3, [r3, #0]
 800945e:	001a      	movs	r2, r3
 8009460:	2302      	movs	r3, #2
 8009462:	4013      	ands	r3, r2
 8009464:	d00d      	beq.n	8009482 <time_update+0x182>
	{
		//if AIE set, continue anti-tamper mode, only show unlock time
		flag_alarm_clear = TRUE;
 8009466:	4baf      	ldr	r3, [pc, #700]	@ (8009724 <time_update+0x424>)
 8009468:	2201      	movs	r2, #1
 800946a:	701a      	strb	r2, [r3, #0]
		EventDebugLog("AIE if 0x02 Before Flag_Protect");
 800946c:	4bae      	ldr	r3, [pc, #696]	@ (8009728 <time_update+0x428>)
 800946e:	0018      	movs	r0, r3
 8009470:	f000 fc4a 	bl	8009d08 <EventDebugLog>
		Flag_Protect = TRUE;
 8009474:	4bad      	ldr	r3, [pc, #692]	@ (800972c <time_update+0x42c>)
 8009476:	2201      	movs	r2, #1
 8009478:	701a      	strb	r2, [r3, #0]
		EventDebugLog("AIE if 0x02 After Flag_Protect");
 800947a:	4bad      	ldr	r3, [pc, #692]	@ (8009730 <time_update+0x430>)
 800947c:	0018      	movs	r0, r3
 800947e:	f000 fc43 	bl	8009d08 <EventDebugLog>
	}

	//Flag_set_alarm_rtc - this flag will set after 30s alarm, this if will calculate 1 hour count down
	if(Flag_set_alarm_rtc)
 8009482:	4bac      	ldr	r3, [pc, #688]	@ (8009734 <time_update+0x434>)
 8009484:	781b      	ldrb	r3, [r3, #0]
 8009486:	2b00      	cmp	r3, #0
 8009488:	d100      	bne.n	800948c <time_update+0x18c>
 800948a:	e225      	b.n	80098d8 <time_update+0x5d8>
	{
		Flag_set_alarm_rtc = FALSE;
 800948c:	4ba9      	ldr	r3, [pc, #676]	@ (8009734 <time_update+0x434>)
 800948e:	2200      	movs	r2, #0
 8009490:	701a      	strb	r2, [r3, #0]
		//current time to unix TimeStamp
		stCurrentTime.year = bcdToDec(RTC_date.date.y) + 2000;
 8009492:	4b96      	ldr	r3, [pc, #600]	@ (80096ec <time_update+0x3ec>)
 8009494:	224d      	movs	r2, #77	@ 0x4d
 8009496:	5c9b      	ldrb	r3, [r3, r2]
 8009498:	0018      	movs	r0, r3
 800949a:	f003 fb68 	bl	800cb6e <bcdToDec>
 800949e:	0003      	movs	r3, r0
 80094a0:	22fa      	movs	r2, #250	@ 0xfa
 80094a2:	00d2      	lsls	r2, r2, #3
 80094a4:	4694      	mov	ip, r2
 80094a6:	4463      	add	r3, ip
 80094a8:	b29a      	uxth	r2, r3
 80094aa:	4ba3      	ldr	r3, [pc, #652]	@ (8009738 <time_update+0x438>)
 80094ac:	801a      	strh	r2, [r3, #0]
		stCurrentTime.month = bcdToDec(RTC_date.date.m);
 80094ae:	4b8f      	ldr	r3, [pc, #572]	@ (80096ec <time_update+0x3ec>)
 80094b0:	224e      	movs	r2, #78	@ 0x4e
 80094b2:	5c9b      	ldrb	r3, [r3, r2]
 80094b4:	0018      	movs	r0, r3
 80094b6:	f003 fb5a 	bl	800cb6e <bcdToDec>
 80094ba:	0003      	movs	r3, r0
 80094bc:	001a      	movs	r2, r3
 80094be:	4b9e      	ldr	r3, [pc, #632]	@ (8009738 <time_update+0x438>)
 80094c0:	709a      	strb	r2, [r3, #2]
		stCurrentTime.date = bcdToDec(RTC_date.date.d);
 80094c2:	4b8a      	ldr	r3, [pc, #552]	@ (80096ec <time_update+0x3ec>)
 80094c4:	224f      	movs	r2, #79	@ 0x4f
 80094c6:	5c9b      	ldrb	r3, [r3, r2]
 80094c8:	0018      	movs	r0, r3
 80094ca:	f003 fb50 	bl	800cb6e <bcdToDec>
 80094ce:	0003      	movs	r3, r0
 80094d0:	001a      	movs	r2, r3
 80094d2:	4b99      	ldr	r3, [pc, #612]	@ (8009738 <time_update+0x438>)
 80094d4:	70da      	strb	r2, [r3, #3]
		stCurrentTime.hour = bcdToDec(RTC_date.date.hh);
 80094d6:	4b85      	ldr	r3, [pc, #532]	@ (80096ec <time_update+0x3ec>)
 80094d8:	2251      	movs	r2, #81	@ 0x51
 80094da:	5c9b      	ldrb	r3, [r3, r2]
 80094dc:	0018      	movs	r0, r3
 80094de:	f003 fb46 	bl	800cb6e <bcdToDec>
 80094e2:	0003      	movs	r3, r0
 80094e4:	001a      	movs	r2, r3
 80094e6:	4b94      	ldr	r3, [pc, #592]	@ (8009738 <time_update+0x438>)
 80094e8:	711a      	strb	r2, [r3, #4]
		stCurrentTime.minute = bcdToDec(RTC_date.date.mm);
 80094ea:	4b80      	ldr	r3, [pc, #512]	@ (80096ec <time_update+0x3ec>)
 80094ec:	2252      	movs	r2, #82	@ 0x52
 80094ee:	5c9b      	ldrb	r3, [r3, r2]
 80094f0:	0018      	movs	r0, r3
 80094f2:	f003 fb3c 	bl	800cb6e <bcdToDec>
 80094f6:	0003      	movs	r3, r0
 80094f8:	001a      	movs	r2, r3
 80094fa:	4b8f      	ldr	r3, [pc, #572]	@ (8009738 <time_update+0x438>)
 80094fc:	715a      	strb	r2, [r3, #5]
		stCurrentTime.second = bcdToDec(RTC_date.date.ss);
 80094fe:	4b7b      	ldr	r3, [pc, #492]	@ (80096ec <time_update+0x3ec>)
 8009500:	2253      	movs	r2, #83	@ 0x53
 8009502:	5c9b      	ldrb	r3, [r3, r2]
 8009504:	0018      	movs	r0, r3
 8009506:	f003 fb32 	bl	800cb6e <bcdToDec>
 800950a:	0003      	movs	r3, r0
 800950c:	001a      	movs	r2, r3
 800950e:	4b8a      	ldr	r3, [pc, #552]	@ (8009738 <time_update+0x438>)
 8009510:	719a      	strb	r2, [r3, #6]

		u32UnixTimeStamp = utcToUnix(&stCurrentTime);
 8009512:	4b89      	ldr	r3, [pc, #548]	@ (8009738 <time_update+0x438>)
 8009514:	0018      	movs	r0, r3
 8009516:	f003 fcb1 	bl	800ce7c <utcToUnix>
 800951a:	0002      	movs	r2, r0
 800951c:	4b87      	ldr	r3, [pc, #540]	@ (800973c <time_update+0x43c>)
 800951e:	601a      	str	r2, [r3, #0]

		//calculate alarm time - TimeStamp + alarm time(1 hour)
		u32UnixTimeStamp += 3600; //test 1 min (60); //5 mins (300) //set 3600 for 1 hour
 8009520:	4b86      	ldr	r3, [pc, #536]	@ (800973c <time_update+0x43c>)
 8009522:	681b      	ldr	r3, [r3, #0]
 8009524:	22e1      	movs	r2, #225	@ 0xe1
 8009526:	0112      	lsls	r2, r2, #4
 8009528:	189a      	adds	r2, r3, r2
 800952a:	4b84      	ldr	r3, [pc, #528]	@ (800973c <time_update+0x43c>)
 800952c:	601a      	str	r2, [r3, #0]

		//write to pcf2129
		unixToUtc(u32UnixTimeStamp);
 800952e:	4b83      	ldr	r3, [pc, #524]	@ (800973c <time_update+0x43c>)
 8009530:	681a      	ldr	r2, [r3, #0]
 8009532:	2510      	movs	r5, #16
 8009534:	197b      	adds	r3, r7, r5
 8009536:	0011      	movs	r1, r2
 8009538:	0018      	movs	r0, r3
 800953a:	f003 fb51 	bl	800cbe0 <unixToUtc>

		//change to bcd format
		u_buffer[0] = decToBcd((UtcTime.year-2000));
 800953e:	4b80      	ldr	r3, [pc, #512]	@ (8009740 <time_update+0x440>)
 8009540:	781b      	ldrb	r3, [r3, #0]
 8009542:	3330      	adds	r3, #48	@ 0x30
 8009544:	b2db      	uxtb	r3, r3
 8009546:	0018      	movs	r0, r3
 8009548:	f003 fb2b 	bl	800cba2 <decToBcd>
 800954c:	0003      	movs	r3, r0
 800954e:	001a      	movs	r2, r3
 8009550:	2480      	movs	r4, #128	@ 0x80
 8009552:	00a4      	lsls	r4, r4, #2
 8009554:	1963      	adds	r3, r4, r5
 8009556:	19db      	adds	r3, r3, r7
 8009558:	701a      	strb	r2, [r3, #0]
		u_buffer[1] = decToBcd(UtcTime.month);
 800955a:	4b79      	ldr	r3, [pc, #484]	@ (8009740 <time_update+0x440>)
 800955c:	785b      	ldrb	r3, [r3, #1]
 800955e:	0018      	movs	r0, r3
 8009560:	f003 fb1f 	bl	800cba2 <decToBcd>
 8009564:	0003      	movs	r3, r0
 8009566:	001a      	movs	r2, r3
 8009568:	1963      	adds	r3, r4, r5
 800956a:	19db      	adds	r3, r3, r7
 800956c:	705a      	strb	r2, [r3, #1]
		u_buffer[2] = decToBcd(UtcTime.date);
 800956e:	4b74      	ldr	r3, [pc, #464]	@ (8009740 <time_update+0x440>)
 8009570:	789b      	ldrb	r3, [r3, #2]
 8009572:	0018      	movs	r0, r3
 8009574:	f003 fb15 	bl	800cba2 <decToBcd>
 8009578:	0003      	movs	r3, r0
 800957a:	001a      	movs	r2, r3
 800957c:	1963      	adds	r3, r4, r5
 800957e:	19db      	adds	r3, r3, r7
 8009580:	709a      	strb	r2, [r3, #2]
		u_buffer[3] = decToBcd(UtcTime.hour);
 8009582:	4b6f      	ldr	r3, [pc, #444]	@ (8009740 <time_update+0x440>)
 8009584:	78db      	ldrb	r3, [r3, #3]
 8009586:	0018      	movs	r0, r3
 8009588:	f003 fb0b 	bl	800cba2 <decToBcd>
 800958c:	0003      	movs	r3, r0
 800958e:	001a      	movs	r2, r3
 8009590:	1963      	adds	r3, r4, r5
 8009592:	19db      	adds	r3, r3, r7
 8009594:	70da      	strb	r2, [r3, #3]
		u_buffer[4] = decToBcd(UtcTime.minute);
 8009596:	4b6a      	ldr	r3, [pc, #424]	@ (8009740 <time_update+0x440>)
 8009598:	791b      	ldrb	r3, [r3, #4]
 800959a:	0018      	movs	r0, r3
 800959c:	f003 fb01 	bl	800cba2 <decToBcd>
 80095a0:	0003      	movs	r3, r0
 80095a2:	001a      	movs	r2, r3
 80095a4:	1963      	adds	r3, r4, r5
 80095a6:	19db      	adds	r3, r3, r7
 80095a8:	711a      	strb	r2, [r3, #4]
		u_buffer[5] = decToBcd(UtcTime.second);
 80095aa:	4b65      	ldr	r3, [pc, #404]	@ (8009740 <time_update+0x440>)
 80095ac:	795b      	ldrb	r3, [r3, #5]
 80095ae:	0018      	movs	r0, r3
 80095b0:	f003 faf7 	bl	800cba2 <decToBcd>
 80095b4:	0003      	movs	r3, r0
 80095b6:	001a      	movs	r2, r3
 80095b8:	1963      	adds	r3, r4, r5
 80095ba:	19db      	adds	r3, r3, r7
 80095bc:	715a      	strb	r2, [r3, #5]

		//Leo&Edwin: Add log to SD card to record down the things to write in RCF2129.
				//log==> current time+setalarm+ u_buffer[3]:u_buffer[4]:u_buffer[5]
		fresult = f_open(&fil, "LockLog.txt", FA_OPEN_EXISTING | FA_READ | FA_WRITE);
 80095be:	4961      	ldr	r1, [pc, #388]	@ (8009744 <time_update+0x444>)
 80095c0:	4b61      	ldr	r3, [pc, #388]	@ (8009748 <time_update+0x448>)
 80095c2:	2203      	movs	r2, #3
 80095c4:	0018      	movs	r0, r3
 80095c6:	f00e f95f 	bl	8017888 <f_open>
 80095ca:	0003      	movs	r3, r0
 80095cc:	001a      	movs	r2, r3
 80095ce:	4b5f      	ldr	r3, [pc, #380]	@ (800974c <time_update+0x44c>)
 80095d0:	701a      	strb	r2, [r3, #0]
		if (fresult == FR_NO_FILE) {
 80095d2:	4b5e      	ldr	r3, [pc, #376]	@ (800974c <time_update+0x44c>)
 80095d4:	781b      	ldrb	r3, [r3, #0]
 80095d6:	2b04      	cmp	r3, #4
 80095d8:	d124      	bne.n	8009624 <time_update+0x324>
		    // Create the file
		    fresult = f_open(&fil, "LockLog.txt", FA_CREATE_ALWAYS | FA_WRITE);
 80095da:	495a      	ldr	r1, [pc, #360]	@ (8009744 <time_update+0x444>)
 80095dc:	4b5a      	ldr	r3, [pc, #360]	@ (8009748 <time_update+0x448>)
 80095de:	220a      	movs	r2, #10
 80095e0:	0018      	movs	r0, r3
 80095e2:	f00e f951 	bl	8017888 <f_open>
 80095e6:	0003      	movs	r3, r0
 80095e8:	001a      	movs	r2, r3
 80095ea:	4b58      	ldr	r3, [pc, #352]	@ (800974c <time_update+0x44c>)
 80095ec:	701a      	strb	r2, [r3, #0]

		    // Check if the file was created successfully
		    if (fresult == FR_OK) {
 80095ee:	4b57      	ldr	r3, [pc, #348]	@ (800974c <time_update+0x44c>)
 80095f0:	781b      	ldrb	r3, [r3, #0]
 80095f2:	2b00      	cmp	r3, #0
 80095f4:	d116      	bne.n	8009624 <time_update+0x324>
		        // Optionally write initial data to the file
		        const char *initialData = "Smart Taximeter Lock Log \n";
 80095f6:	4b56      	ldr	r3, [pc, #344]	@ (8009750 <time_update+0x450>)
 80095f8:	2485      	movs	r4, #133	@ 0x85
 80095fa:	00a4      	lsls	r4, r4, #2
 80095fc:	1962      	adds	r2, r4, r5
 80095fe:	19d2      	adds	r2, r2, r7
 8009600:	6013      	str	r3, [r2, #0]
		        UINT bytesWritten;
		        f_write(&fil, initialData, strlen(initialData), &bytesWritten);
 8009602:	1963      	adds	r3, r4, r5
 8009604:	19db      	adds	r3, r3, r7
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	0018      	movs	r0, r3
 800960a:	f7f6 fd7b 	bl	8000104 <strlen>
 800960e:	0002      	movs	r2, r0
 8009610:	23f4      	movs	r3, #244	@ 0xf4
 8009612:	005b      	lsls	r3, r3, #1
 8009614:	195b      	adds	r3, r3, r5
 8009616:	19db      	adds	r3, r3, r7
 8009618:	1961      	adds	r1, r4, r5
 800961a:	19c9      	adds	r1, r1, r7
 800961c:	6809      	ldr	r1, [r1, #0]
 800961e:	484a      	ldr	r0, [pc, #296]	@ (8009748 <time_update+0x448>)
 8009620:	f00e fb37 	bl	8017c92 <f_write>
		    }
		}
		fresult = f_lseek(&fil, f_size(&fil));
 8009624:	4b48      	ldr	r3, [pc, #288]	@ (8009748 <time_update+0x448>)
 8009626:	68da      	ldr	r2, [r3, #12]
 8009628:	4b47      	ldr	r3, [pc, #284]	@ (8009748 <time_update+0x448>)
 800962a:	0011      	movs	r1, r2
 800962c:	0018      	movs	r0, r3
 800962e:	f00e fd88 	bl	8018142 <f_lseek>
 8009632:	0003      	movs	r3, r0
 8009634:	001a      	movs	r2, r3
 8009636:	4b45      	ldr	r3, [pc, #276]	@ (800974c <time_update+0x44c>)
 8009638:	701a      	strb	r2, [r3, #0]
		char buffer2[200]  = {0};
 800963a:	4b46      	ldr	r3, [pc, #280]	@ (8009754 <time_update+0x454>)
 800963c:	2286      	movs	r2, #134	@ 0x86
 800963e:	0092      	lsls	r2, r2, #2
 8009640:	189b      	adds	r3, r3, r2
 8009642:	2210      	movs	r2, #16
 8009644:	4694      	mov	ip, r2
 8009646:	44bc      	add	ip, r7
 8009648:	4463      	add	r3, ip
 800964a:	2200      	movs	r2, #0
 800964c:	601a      	str	r2, [r3, #0]
 800964e:	3304      	adds	r3, #4
 8009650:	22c4      	movs	r2, #196	@ 0xc4
 8009652:	2100      	movs	r1, #0
 8009654:	0018      	movs	r0, r3
 8009656:	f00f fafb 	bl	8018c50 <memset>
		snprintf(buffer2, sizeof(buffer2), "\nBefore writing Alarm :\n Locking Time(ymdhms):%d-%d-%d %d:%d:%d,\n Flag_set_alarm_rtc: %d,\n u_buffer[3](dec): %d,\n u_buffer[4](dec): %d,\n u_buffer[5](dec): %d,\n ctrl_2_before: %d,\n",stCurrentTime.year ,stCurrentTime.month,stCurrentTime.date, stCurrentTime.hour, stCurrentTime.minute, stCurrentTime.second, Flag_set_alarm_rtc, bcdToDec(u_buffer[3]), bcdToDec(u_buffer[4]),bcdToDec(u_buffer[5]),PCF2129_read(PCF2129_REG_CONTROL2));
 800965a:	4b37      	ldr	r3, [pc, #220]	@ (8009738 <time_update+0x438>)
 800965c:	881b      	ldrh	r3, [r3, #0]
 800965e:	60fb      	str	r3, [r7, #12]
 8009660:	4b35      	ldr	r3, [pc, #212]	@ (8009738 <time_update+0x438>)
 8009662:	789b      	ldrb	r3, [r3, #2]
 8009664:	001c      	movs	r4, r3
 8009666:	4b34      	ldr	r3, [pc, #208]	@ (8009738 <time_update+0x438>)
 8009668:	78db      	ldrb	r3, [r3, #3]
 800966a:	001d      	movs	r5, r3
 800966c:	4b32      	ldr	r3, [pc, #200]	@ (8009738 <time_update+0x438>)
 800966e:	791b      	ldrb	r3, [r3, #4]
 8009670:	001e      	movs	r6, r3
 8009672:	4b31      	ldr	r3, [pc, #196]	@ (8009738 <time_update+0x438>)
 8009674:	795b      	ldrb	r3, [r3, #5]
 8009676:	4698      	mov	r8, r3
 8009678:	4b2f      	ldr	r3, [pc, #188]	@ (8009738 <time_update+0x438>)
 800967a:	799b      	ldrb	r3, [r3, #6]
 800967c:	4699      	mov	r9, r3
 800967e:	4b2d      	ldr	r3, [pc, #180]	@ (8009734 <time_update+0x434>)
 8009680:	781b      	ldrb	r3, [r3, #0]
 8009682:	469a      	mov	sl, r3
 8009684:	2280      	movs	r2, #128	@ 0x80
 8009686:	0092      	lsls	r2, r2, #2
 8009688:	2010      	movs	r0, #16
 800968a:	1813      	adds	r3, r2, r0
 800968c:	19db      	adds	r3, r3, r7
 800968e:	78db      	ldrb	r3, [r3, #3]
 8009690:	0018      	movs	r0, r3
 8009692:	f003 fa6c 	bl	800cb6e <bcdToDec>
 8009696:	0003      	movs	r3, r0
 8009698:	469b      	mov	fp, r3
 800969a:	2280      	movs	r2, #128	@ 0x80
 800969c:	0092      	lsls	r2, r2, #2
 800969e:	2010      	movs	r0, #16
 80096a0:	1813      	adds	r3, r2, r0
 80096a2:	19db      	adds	r3, r3, r7
 80096a4:	791b      	ldrb	r3, [r3, #4]
 80096a6:	0018      	movs	r0, r3
 80096a8:	f003 fa61 	bl	800cb6e <bcdToDec>
 80096ac:	0003      	movs	r3, r0
 80096ae:	60bb      	str	r3, [r7, #8]
 80096b0:	2280      	movs	r2, #128	@ 0x80
 80096b2:	0092      	lsls	r2, r2, #2
 80096b4:	2010      	movs	r0, #16
 80096b6:	1813      	adds	r3, r2, r0
 80096b8:	19db      	adds	r3, r3, r7
 80096ba:	795b      	ldrb	r3, [r3, #5]
 80096bc:	0018      	movs	r0, r3
 80096be:	f003 fa56 	bl	800cb6e <bcdToDec>
 80096c2:	0003      	movs	r3, r0
 80096c4:	607b      	str	r3, [r7, #4]
 80096c6:	2001      	movs	r0, #1
 80096c8:	f003 f9e8 	bl	800ca9c <PCF2129_read>
 80096cc:	0003      	movs	r3, r0
 80096ce:	4a22      	ldr	r2, [pc, #136]	@ (8009758 <time_update+0x458>)
 80096d0:	2158      	movs	r1, #88	@ 0x58
 80096d2:	2010      	movs	r0, #16
 80096d4:	1809      	adds	r1, r1, r0
 80096d6:	19c8      	adds	r0, r1, r7
 80096d8:	9309      	str	r3, [sp, #36]	@ 0x24
 80096da:	6879      	ldr	r1, [r7, #4]
 80096dc:	9108      	str	r1, [sp, #32]
 80096de:	68bb      	ldr	r3, [r7, #8]
 80096e0:	9307      	str	r3, [sp, #28]
 80096e2:	465b      	mov	r3, fp
 80096e4:	9306      	str	r3, [sp, #24]
 80096e6:	e039      	b.n	800975c <time_update+0x45c>
 80096e8:	fffffdac 	.word	0xfffffdac
 80096ec:	20000c20 	.word	0x20000c20
 80096f0:	fffffde8 	.word	0xfffffde8
 80096f4:	20000c78 	.word	0x20000c78
 80096f8:	20000c7a 	.word	0x20000c7a
 80096fc:	20000c7c 	.word	0x20000c7c
 8009700:	20000c7e 	.word	0x20000c7e
 8009704:	20000c80 	.word	0x20000c80
 8009708:	20000c82 	.word	0x20000c82
 800970c:	20000c98 	.word	0x20000c98
 8009710:	20000c99 	.word	0x20000c99
 8009714:	20000c9a 	.word	0x20000c9a
 8009718:	20000c9c 	.word	0x20000c9c
 800971c:	20000c9d 	.word	0x20000c9d
 8009720:	20000c9e 	.word	0x20000c9e
 8009724:	20000c9b 	.word	0x20000c9b
 8009728:	0801991c 	.word	0x0801991c
 800972c:	20000d3d 	.word	0x20000d3d
 8009730:	0801993c 	.word	0x0801993c
 8009734:	20000d3e 	.word	0x20000d3e
 8009738:	20000c90 	.word	0x20000c90
 800973c:	20000c8c 	.word	0x20000c8c
 8009740:	20000c84 	.word	0x20000c84
 8009744:	0801995c 	.word	0x0801995c
 8009748:	20001f04 	.word	0x20001f04
 800974c:	20002f34 	.word	0x20002f34
 8009750:	08019968 	.word	0x08019968
 8009754:	fffffe40 	.word	0xfffffe40
 8009758:	08019984 	.word	0x08019984
 800975c:	4653      	mov	r3, sl
 800975e:	9305      	str	r3, [sp, #20]
 8009760:	464b      	mov	r3, r9
 8009762:	9304      	str	r3, [sp, #16]
 8009764:	4643      	mov	r3, r8
 8009766:	9303      	str	r3, [sp, #12]
 8009768:	9602      	str	r6, [sp, #8]
 800976a:	9501      	str	r5, [sp, #4]
 800976c:	9400      	str	r4, [sp, #0]
 800976e:	68fb      	ldr	r3, [r7, #12]
 8009770:	21c8      	movs	r1, #200	@ 0xc8
 8009772:	f00f f93f 	bl	80189f4 <sniprintf>
		fresult = f_puts(buffer2, &fil);
 8009776:	4aae      	ldr	r2, [pc, #696]	@ (8009a30 <time_update+0x730>)
 8009778:	2158      	movs	r1, #88	@ 0x58
 800977a:	2510      	movs	r5, #16
 800977c:	194b      	adds	r3, r1, r5
 800977e:	19db      	adds	r3, r3, r7
 8009780:	0011      	movs	r1, r2
 8009782:	0018      	movs	r0, r3
 8009784:	f00e ff88 	bl	8018698 <f_puts>
 8009788:	0003      	movs	r3, r0
 800978a:	b2da      	uxtb	r2, r3
 800978c:	4ba9      	ldr	r3, [pc, #676]	@ (8009a34 <time_update+0x734>)
 800978e:	701a      	strb	r2, [r3, #0]
		f_close (&fil);
 8009790:	4ba7      	ldr	r3, [pc, #668]	@ (8009a30 <time_update+0x730>)
 8009792:	0018      	movs	r0, r3
 8009794:	f00e fca1 	bl	80180da <f_close>
		clear_buffer();
 8009798:	f7fa fbba 	bl	8003f10 <clear_buffer>

		//write to alarm registers
		PCF2129_write(PCF2129_REG_ALARM_SECOND, u_buffer[5]);
 800979c:	2480      	movs	r4, #128	@ 0x80
 800979e:	00a4      	lsls	r4, r4, #2
 80097a0:	1963      	adds	r3, r4, r5
 80097a2:	19db      	adds	r3, r3, r7
 80097a4:	795b      	ldrb	r3, [r3, #5]
 80097a6:	0019      	movs	r1, r3
 80097a8:	200a      	movs	r0, #10
 80097aa:	f003 f99f 	bl	800caec <PCF2129_write>
		PCF2129_write(PCF2129_REG_ALARM_MINUTE, u_buffer[4]);
 80097ae:	1963      	adds	r3, r4, r5
 80097b0:	19db      	adds	r3, r3, r7
 80097b2:	791b      	ldrb	r3, [r3, #4]
 80097b4:	0019      	movs	r1, r3
 80097b6:	200b      	movs	r0, #11
 80097b8:	f003 f998 	bl	800caec <PCF2129_write>
		PCF2129_write(PCF2129_REG_ALARM_HOUR, u_buffer[3]);
 80097bc:	1963      	adds	r3, r4, r5
 80097be:	19db      	adds	r3, r3, r7
 80097c0:	78db      	ldrb	r3, [r3, #3]
 80097c2:	0019      	movs	r1, r3
 80097c4:	200c      	movs	r0, #12
 80097c6:	f003 f991 	bl	800caec <PCF2129_write>

		//AIE
		PCF2129_write(PCF2129_REG_CONTROL2, 0x02);
 80097ca:	2102      	movs	r1, #2
 80097cc:	2001      	movs	r0, #1
 80097ce:	f003 f98d 	bl	800caec <PCF2129_write>

		//PCF2129_read    // Add by Leo & Edwin
		//log==> current time+ reread alarm+ hh_read[3]:mm_read[4]:ss_read[5]
		fresult = f_open(&fil, "LockLog.txt", FA_OPEN_EXISTING | FA_READ | FA_WRITE);//open
 80097d2:	4999      	ldr	r1, [pc, #612]	@ (8009a38 <time_update+0x738>)
 80097d4:	4b96      	ldr	r3, [pc, #600]	@ (8009a30 <time_update+0x730>)
 80097d6:	2203      	movs	r2, #3
 80097d8:	0018      	movs	r0, r3
 80097da:	f00e f855 	bl	8017888 <f_open>
 80097de:	0003      	movs	r3, r0
 80097e0:	001a      	movs	r2, r3
 80097e2:	4b94      	ldr	r3, [pc, #592]	@ (8009a34 <time_update+0x734>)
 80097e4:	701a      	strb	r2, [r3, #0]
		fresult = f_lseek(&fil, f_size(&fil));
 80097e6:	4b92      	ldr	r3, [pc, #584]	@ (8009a30 <time_update+0x730>)
 80097e8:	68da      	ldr	r2, [r3, #12]
 80097ea:	4b91      	ldr	r3, [pc, #580]	@ (8009a30 <time_update+0x730>)
 80097ec:	0011      	movs	r1, r2
 80097ee:	0018      	movs	r0, r3
 80097f0:	f00e fca7 	bl	8018142 <f_lseek>
 80097f4:	0003      	movs	r3, r0
 80097f6:	001a      	movs	r2, r3
 80097f8:	4b8e      	ldr	r3, [pc, #568]	@ (8009a34 <time_update+0x734>)
 80097fa:	701a      	strb	r2, [r3, #0]
		char buffer1[200]  = {0};
 80097fc:	2390      	movs	r3, #144	@ 0x90
 80097fe:	005b      	lsls	r3, r3, #1
 8009800:	195b      	adds	r3, r3, r5
 8009802:	19db      	adds	r3, r3, r7
 8009804:	2200      	movs	r2, #0
 8009806:	601a      	str	r2, [r3, #0]
 8009808:	3304      	adds	r3, #4
 800980a:	22c4      	movs	r2, #196	@ 0xc4
 800980c:	2100      	movs	r1, #0
 800980e:	0018      	movs	r0, r3
 8009810:	f00f fa1e 	bl	8018c50 <memset>
		snprintf(buffer1, sizeof(buffer1), "\nAfter writing Alarm :\n Written Time(ymdhms):%d-%d-%d %d:%d:%d,\n Flag_set_alarm_rtc: %d,\n Alarm_hr: %d,\n Alarm_min: %d,\n Alarm_sec: %d,\n ctrl_2_after: %d,\n ",stCurrentTime.year ,stCurrentTime.month,stCurrentTime.date, stCurrentTime.hour, stCurrentTime.minute, stCurrentTime.second, Flag_set_alarm_rtc, bcdToDec(PCF2129_read(PCF2129_REG_ALARM_HOUR)), bcdToDec(PCF2129_read(PCF2129_REG_ALARM_MINUTE)),bcdToDec(PCF2129_read(PCF2129_REG_ALARM_SECOND)),PCF2129_read(PCF2129_REG_CONTROL2));
 8009814:	4b89      	ldr	r3, [pc, #548]	@ (8009a3c <time_update+0x73c>)
 8009816:	881b      	ldrh	r3, [r3, #0]
 8009818:	60fb      	str	r3, [r7, #12]
 800981a:	4b88      	ldr	r3, [pc, #544]	@ (8009a3c <time_update+0x73c>)
 800981c:	789b      	ldrb	r3, [r3, #2]
 800981e:	001c      	movs	r4, r3
 8009820:	4b86      	ldr	r3, [pc, #536]	@ (8009a3c <time_update+0x73c>)
 8009822:	78db      	ldrb	r3, [r3, #3]
 8009824:	001d      	movs	r5, r3
 8009826:	4b85      	ldr	r3, [pc, #532]	@ (8009a3c <time_update+0x73c>)
 8009828:	791b      	ldrb	r3, [r3, #4]
 800982a:	001e      	movs	r6, r3
 800982c:	4b83      	ldr	r3, [pc, #524]	@ (8009a3c <time_update+0x73c>)
 800982e:	795b      	ldrb	r3, [r3, #5]
 8009830:	4698      	mov	r8, r3
 8009832:	4b82      	ldr	r3, [pc, #520]	@ (8009a3c <time_update+0x73c>)
 8009834:	799b      	ldrb	r3, [r3, #6]
 8009836:	4699      	mov	r9, r3
 8009838:	4b81      	ldr	r3, [pc, #516]	@ (8009a40 <time_update+0x740>)
 800983a:	781b      	ldrb	r3, [r3, #0]
 800983c:	469a      	mov	sl, r3
 800983e:	200c      	movs	r0, #12
 8009840:	f003 f92c 	bl	800ca9c <PCF2129_read>
 8009844:	0003      	movs	r3, r0
 8009846:	0018      	movs	r0, r3
 8009848:	f003 f991 	bl	800cb6e <bcdToDec>
 800984c:	0003      	movs	r3, r0
 800984e:	469b      	mov	fp, r3
 8009850:	200b      	movs	r0, #11
 8009852:	f003 f923 	bl	800ca9c <PCF2129_read>
 8009856:	0003      	movs	r3, r0
 8009858:	0018      	movs	r0, r3
 800985a:	f003 f988 	bl	800cb6e <bcdToDec>
 800985e:	0003      	movs	r3, r0
 8009860:	60bb      	str	r3, [r7, #8]
 8009862:	200a      	movs	r0, #10
 8009864:	f003 f91a 	bl	800ca9c <PCF2129_read>
 8009868:	0003      	movs	r3, r0
 800986a:	0018      	movs	r0, r3
 800986c:	f003 f97f 	bl	800cb6e <bcdToDec>
 8009870:	0003      	movs	r3, r0
 8009872:	607b      	str	r3, [r7, #4]
 8009874:	2001      	movs	r0, #1
 8009876:	f003 f911 	bl	800ca9c <PCF2129_read>
 800987a:	0003      	movs	r3, r0
 800987c:	4a71      	ldr	r2, [pc, #452]	@ (8009a44 <time_update+0x744>)
 800987e:	2190      	movs	r1, #144	@ 0x90
 8009880:	0049      	lsls	r1, r1, #1
 8009882:	2010      	movs	r0, #16
 8009884:	1809      	adds	r1, r1, r0
 8009886:	19c8      	adds	r0, r1, r7
 8009888:	9309      	str	r3, [sp, #36]	@ 0x24
 800988a:	6879      	ldr	r1, [r7, #4]
 800988c:	9108      	str	r1, [sp, #32]
 800988e:	68b9      	ldr	r1, [r7, #8]
 8009890:	9107      	str	r1, [sp, #28]
 8009892:	4659      	mov	r1, fp
 8009894:	9106      	str	r1, [sp, #24]
 8009896:	4651      	mov	r1, sl
 8009898:	9105      	str	r1, [sp, #20]
 800989a:	4649      	mov	r1, r9
 800989c:	9104      	str	r1, [sp, #16]
 800989e:	4641      	mov	r1, r8
 80098a0:	9103      	str	r1, [sp, #12]
 80098a2:	9602      	str	r6, [sp, #8]
 80098a4:	9501      	str	r5, [sp, #4]
 80098a6:	9400      	str	r4, [sp, #0]
 80098a8:	68fb      	ldr	r3, [r7, #12]
 80098aa:	21c8      	movs	r1, #200	@ 0xc8
 80098ac:	f00f f8a2 	bl	80189f4 <sniprintf>
		fresult = f_puts(buffer1, &fil);
 80098b0:	4a5f      	ldr	r2, [pc, #380]	@ (8009a30 <time_update+0x730>)
 80098b2:	2190      	movs	r1, #144	@ 0x90
 80098b4:	0049      	lsls	r1, r1, #1
 80098b6:	2510      	movs	r5, #16
 80098b8:	194b      	adds	r3, r1, r5
 80098ba:	19db      	adds	r3, r3, r7
 80098bc:	0011      	movs	r1, r2
 80098be:	0018      	movs	r0, r3
 80098c0:	f00e feea 	bl	8018698 <f_puts>
 80098c4:	0003      	movs	r3, r0
 80098c6:	b2da      	uxtb	r2, r3
 80098c8:	4b5a      	ldr	r3, [pc, #360]	@ (8009a34 <time_update+0x734>)
 80098ca:	701a      	strb	r2, [r3, #0]
		f_close (&fil);
 80098cc:	4b58      	ldr	r3, [pc, #352]	@ (8009a30 <time_update+0x730>)
 80098ce:	0018      	movs	r0, r3
 80098d0:	f00e fc03 	bl	80180da <f_close>
		clear_buffer();
 80098d4:	f7fa fb1c 	bl	8003f10 <clear_buffer>
	}
	//trigger the alarm - ~INT = 0 (PA11)
	if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_11) == 0)
 80098d8:	2380      	movs	r3, #128	@ 0x80
 80098da:	011a      	lsls	r2, r3, #4
 80098dc:	23a0      	movs	r3, #160	@ 0xa0
 80098de:	05db      	lsls	r3, r3, #23
 80098e0:	0011      	movs	r1, r2
 80098e2:	0018      	movs	r0, r3
 80098e4:	f004 ff7e 	bl	800e7e4 <HAL_GPIO_ReadPin>
 80098e8:	1e03      	subs	r3, r0, #0
 80098ea:	d13b      	bne.n	8009964 <time_update+0x664>
	{
		flag_alarm_clear = FALSE;
 80098ec:	4b56      	ldr	r3, [pc, #344]	@ (8009a48 <time_update+0x748>)
 80098ee:	2200      	movs	r2, #0
 80098f0:	701a      	strb	r2, [r3, #0]

		EventDebugLog("Unlock Meter Before Flag_Protect modified"); //Added by Keven Recommand
 80098f2:	4b56      	ldr	r3, [pc, #344]	@ (8009a4c <time_update+0x74c>)
 80098f4:	0018      	movs	r0, r3
 80098f6:	f000 fa07 	bl	8009d08 <EventDebugLog>

		Flag_Protect = FALSE;
 80098fa:	4b55      	ldr	r3, [pc, #340]	@ (8009a50 <time_update+0x750>)
 80098fc:	2200      	movs	r2, #0
 80098fe:	701a      	strb	r2, [r3, #0]

		EventDebugLog("Unlock Meter After Flag_Protect modified");
 8009900:	4b54      	ldr	r3, [pc, #336]	@ (8009a54 <time_update+0x754>)
 8009902:	0018      	movs	r0, r3
 8009904:	f000 fa00 	bl	8009d08 <EventDebugLog>

		Flag_alarm = TRUE;
 8009908:	4b53      	ldr	r3, [pc, #332]	@ (8009a58 <time_update+0x758>)
 800990a:	2201      	movs	r2, #1
 800990c:	701a      	strb	r2, [r3, #0]
		//PCF2129_write(PCF2129_REG_CONTROL1, 0x00);
		PCF2129_write(PCF2129_REG_CONTROL2, 0x00);
 800990e:	2100      	movs	r1, #0
 8009910:	2001      	movs	r0, #1
 8009912:	f003 f8eb 	bl	800caec <PCF2129_write>

//		unsigned char unlock_clear[] = {0x5A, 0xA5, 0x09, 0x82, 0x10, 0x32, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20};
		HAL_UART_Transmit(&huart1, unlock_clear, 12, 0x20);
 8009916:	4951      	ldr	r1, [pc, #324]	@ (8009a5c <time_update+0x75c>)
 8009918:	4851      	ldr	r0, [pc, #324]	@ (8009a60 <time_update+0x760>)
 800991a:	2320      	movs	r3, #32
 800991c:	220c      	movs	r2, #12
 800991e:	f009 fc37 	bl	8013190 <HAL_UART_Transmit>
//		unsigned char C_Fare_clear[] = {0x5A, 0xA5, 0x04, 0x82, 0x10, 0x30, 0x20};
		HAL_UART_Transmit(&huart1, C_Fare_clear, 7, 0x20);
 8009922:	4950      	ldr	r1, [pc, #320]	@ (8009a64 <time_update+0x764>)
 8009924:	484e      	ldr	r0, [pc, #312]	@ (8009a60 <time_update+0x760>)
 8009926:	2320      	movs	r3, #32
 8009928:	2207      	movs	r2, #7
 800992a:	f009 fc31 	bl	8013190 <HAL_UART_Transmit>
		//Drv_state = S_VACANT;
		//HMI_Vacant_W();
		//Flag_H = FALSE;
		//Flag_S = FALSE;
		//Flag_V = TRUE;
		HAL_UART_Transmit(&huart1, (uint8_t *) LED_Hired_Off, 8, 0x10);
 800992e:	494e      	ldr	r1, [pc, #312]	@ (8009a68 <time_update+0x768>)
 8009930:	484b      	ldr	r0, [pc, #300]	@ (8009a60 <time_update+0x760>)
 8009932:	2310      	movs	r3, #16
 8009934:	2208      	movs	r2, #8
 8009936:	f009 fc2b 	bl	8013190 <HAL_UART_Transmit>
		HAL_UART_Transmit(&huart1, (uint8_t *) LED_Stop_Off, 8, 0x10);
 800993a:	494c      	ldr	r1, [pc, #304]	@ (8009a6c <time_update+0x76c>)
 800993c:	4848      	ldr	r0, [pc, #288]	@ (8009a60 <time_update+0x760>)
 800993e:	2310      	movs	r3, #16
 8009940:	2208      	movs	r2, #8
 8009942:	f009 fc25 	bl	8013190 <HAL_UART_Transmit>
		HAL_UART_Transmit(&huart1, (uint8_t *) LED_Vacant_On, 8, 0x10);
 8009946:	494a      	ldr	r1, [pc, #296]	@ (8009a70 <time_update+0x770>)
 8009948:	4845      	ldr	r0, [pc, #276]	@ (8009a60 <time_update+0x760>)
 800994a:	2310      	movs	r3, #16
 800994c:	2208      	movs	r2, #8
 800994e:	f009 fc1f 	bl	8013190 <HAL_UART_Transmit>
		Drv_state = S_VACANT;
 8009952:	4b48      	ldr	r3, [pc, #288]	@ (8009a74 <time_update+0x774>)
 8009954:	2200      	movs	r2, #0
 8009956:	701a      	strb	r2, [r3, #0]
		Width = 0;
 8009958:	4b47      	ldr	r3, [pc, #284]	@ (8009a78 <time_update+0x778>)
 800995a:	2200      	movs	r2, #0
 800995c:	601a      	str	r2, [r3, #0]
		Speed = 0;
 800995e:	4b47      	ldr	r3, [pc, #284]	@ (8009a7c <time_update+0x77c>)
 8009960:	2200      	movs	r2, #0
 8009962:	601a      	str	r2, [r3, #0]
//	{
//		flag_alarm_clear = FALSE;
//	}
	//test code - rtc alarm function

	unsigned char rtc_buffer[18] = {0};
 8009964:	24f6      	movs	r4, #246	@ 0xf6
 8009966:	0064      	lsls	r4, r4, #1
 8009968:	2510      	movs	r5, #16
 800996a:	1963      	adds	r3, r4, r5
 800996c:	19db      	adds	r3, r3, r7
 800996e:	2200      	movs	r2, #0
 8009970:	601a      	str	r2, [r3, #0]
 8009972:	3304      	adds	r3, #4
 8009974:	220e      	movs	r2, #14
 8009976:	2100      	movs	r1, #0
 8009978:	0018      	movs	r0, r3
 800997a:	f00f f969 	bl	8018c50 <memset>
	BCD2ASC(rtc_buffer, r_buffer, 18);
 800997e:	2382      	movs	r3, #130	@ 0x82
 8009980:	009b      	lsls	r3, r3, #2
 8009982:	195b      	adds	r3, r3, r5
 8009984:	19d9      	adds	r1, r3, r7
 8009986:	1963      	adds	r3, r4, r5
 8009988:	19db      	adds	r3, r3, r7
 800998a:	2212      	movs	r2, #18
 800998c:	0018      	movs	r0, r3
 800998e:	f000 fb0d 	bl	8009fac <BCD2ASC>

//	HAL_UART_Transmit(&huart2, rtc_buffer, 12, 0x20);
//	HAL_UART_Transmit(&huart2, rtc_buffer, 14, 0x20);

	hmi_rtc[8] = rtc_buffer[0];
 8009992:	0021      	movs	r1, r4
 8009994:	0028      	movs	r0, r5
 8009996:	180b      	adds	r3, r1, r0
 8009998:	19db      	adds	r3, r3, r7
 800999a:	781a      	ldrb	r2, [r3, #0]
 800999c:	4b38      	ldr	r3, [pc, #224]	@ (8009a80 <time_update+0x780>)
 800999e:	721a      	strb	r2, [r3, #8]
	hmi_rtc[9] = rtc_buffer[1];
 80099a0:	180b      	adds	r3, r1, r0
 80099a2:	19db      	adds	r3, r3, r7
 80099a4:	785a      	ldrb	r2, [r3, #1]
 80099a6:	4b36      	ldr	r3, [pc, #216]	@ (8009a80 <time_update+0x780>)
 80099a8:	725a      	strb	r2, [r3, #9]

	hmi_rtc[11] = rtc_buffer[2];
 80099aa:	180b      	adds	r3, r1, r0
 80099ac:	19db      	adds	r3, r3, r7
 80099ae:	789a      	ldrb	r2, [r3, #2]
 80099b0:	4b33      	ldr	r3, [pc, #204]	@ (8009a80 <time_update+0x780>)
 80099b2:	72da      	strb	r2, [r3, #11]
	hmi_rtc[12] = rtc_buffer[3];
 80099b4:	180b      	adds	r3, r1, r0
 80099b6:	19db      	adds	r3, r3, r7
 80099b8:	78da      	ldrb	r2, [r3, #3]
 80099ba:	4b31      	ldr	r3, [pc, #196]	@ (8009a80 <time_update+0x780>)
 80099bc:	731a      	strb	r2, [r3, #12]

	hmi_rtc[14] = rtc_buffer[4];
 80099be:	180b      	adds	r3, r1, r0
 80099c0:	19db      	adds	r3, r3, r7
 80099c2:	791a      	ldrb	r2, [r3, #4]
 80099c4:	4b2e      	ldr	r3, [pc, #184]	@ (8009a80 <time_update+0x780>)
 80099c6:	739a      	strb	r2, [r3, #14]
	hmi_rtc[15] = rtc_buffer[5];
 80099c8:	180b      	adds	r3, r1, r0
 80099ca:	19db      	adds	r3, r3, r7
 80099cc:	795a      	ldrb	r2, [r3, #5]
 80099ce:	4b2c      	ldr	r3, [pc, #176]	@ (8009a80 <time_update+0x780>)
 80099d0:	73da      	strb	r2, [r3, #15]

	hmi_rtc[17] = rtc_buffer[6];
 80099d2:	180b      	adds	r3, r1, r0
 80099d4:	19db      	adds	r3, r3, r7
 80099d6:	799a      	ldrb	r2, [r3, #6]
 80099d8:	4b29      	ldr	r3, [pc, #164]	@ (8009a80 <time_update+0x780>)
 80099da:	745a      	strb	r2, [r3, #17]
	hmi_rtc[18] = rtc_buffer[7];
 80099dc:	180b      	adds	r3, r1, r0
 80099de:	19db      	adds	r3, r3, r7
 80099e0:	79da      	ldrb	r2, [r3, #7]
 80099e2:	4b27      	ldr	r3, [pc, #156]	@ (8009a80 <time_update+0x780>)
 80099e4:	749a      	strb	r2, [r3, #18]

	hmi_rtc[20] = rtc_buffer[8];
 80099e6:	180b      	adds	r3, r1, r0
 80099e8:	19db      	adds	r3, r3, r7
 80099ea:	7a1a      	ldrb	r2, [r3, #8]
 80099ec:	4b24      	ldr	r3, [pc, #144]	@ (8009a80 <time_update+0x780>)
 80099ee:	751a      	strb	r2, [r3, #20]
	hmi_rtc[21] = rtc_buffer[9];
 80099f0:	180b      	adds	r3, r1, r0
 80099f2:	19db      	adds	r3, r3, r7
 80099f4:	7a5a      	ldrb	r2, [r3, #9]
 80099f6:	4b22      	ldr	r3, [pc, #136]	@ (8009a80 <time_update+0x780>)
 80099f8:	755a      	strb	r2, [r3, #21]

	hmi_rtc[23] = rtc_buffer[10];
 80099fa:	180b      	adds	r3, r1, r0
 80099fc:	19db      	adds	r3, r3, r7
 80099fe:	7a9a      	ldrb	r2, [r3, #10]
 8009a00:	4b1f      	ldr	r3, [pc, #124]	@ (8009a80 <time_update+0x780>)
 8009a02:	75da      	strb	r2, [r3, #23]
	hmi_rtc[24] = rtc_buffer[11];
 8009a04:	180b      	adds	r3, r1, r0
 8009a06:	19db      	adds	r3, r3, r7
 8009a08:	7ada      	ldrb	r2, [r3, #11]
 8009a0a:	4b1d      	ldr	r3, [pc, #116]	@ (8009a80 <time_update+0x780>)
 8009a0c:	761a      	strb	r2, [r3, #24]

	HAL_UART_Transmit(&huart1, hmi_rtc, 25, 0x20);
 8009a0e:	491c      	ldr	r1, [pc, #112]	@ (8009a80 <time_update+0x780>)
 8009a10:	4813      	ldr	r0, [pc, #76]	@ (8009a60 <time_update+0x760>)
 8009a12:	2320      	movs	r3, #32
 8009a14:	2219      	movs	r2, #25
 8009a16:	f009 fbbb 	bl	8013190 <HAL_UART_Transmit>
}
 8009a1a:	46c0      	nop			@ (mov r8, r8)
 8009a1c:	46bd      	mov	sp, r7
 8009a1e:	238b      	movs	r3, #139	@ 0x8b
 8009a20:	009b      	lsls	r3, r3, #2
 8009a22:	449d      	add	sp, r3
 8009a24:	bcf0      	pop	{r4, r5, r6, r7}
 8009a26:	46bb      	mov	fp, r7
 8009a28:	46b2      	mov	sl, r6
 8009a2a:	46a9      	mov	r9, r5
 8009a2c:	46a0      	mov	r8, r4
 8009a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a30:	20001f04 	.word	0x20001f04
 8009a34:	20002f34 	.word	0x20002f34
 8009a38:	0801995c 	.word	0x0801995c
 8009a3c:	20000c90 	.word	0x20000c90
 8009a40:	20000d3e 	.word	0x20000d3e
 8009a44:	08019a38 	.word	0x08019a38
 8009a48:	20000c9b 	.word	0x20000c9b
 8009a4c:	08019ad8 	.word	0x08019ad8
 8009a50:	20000d3d 	.word	0x20000d3d
 8009a54:	08019b04 	.word	0x08019b04
 8009a58:	20000244 	.word	0x20000244
 8009a5c:	20000248 	.word	0x20000248
 8009a60:	20000658 	.word	0x20000658
 8009a64:	20000254 	.word	0x20000254
 8009a68:	2000000c 	.word	0x2000000c
 8009a6c:	2000001c 	.word	0x2000001c
 8009a70:	20000024 	.word	0x20000024
 8009a74:	20000a72 	.word	0x20000a72
 8009a78:	20000cb4 	.word	0x20000cb4
 8009a7c:	20000cdc 	.word	0x20000cdc
 8009a80:	2000007c 	.word	0x2000007c

08009a84 <DebugLog>:



void DebugLog(void)
{
 8009a84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a86:	46de      	mov	lr, fp
 8009a88:	4657      	mov	r7, sl
 8009a8a:	464e      	mov	r6, r9
 8009a8c:	4645      	mov	r5, r8
 8009a8e:	b5e0      	push	{r5, r6, r7, lr}
 8009a90:	b0ef      	sub	sp, #444	@ 0x1bc
 8009a92:	af14      	add	r7, sp, #80	@ 0x50
	#ifdef DEBUG
	stCurrentTime.year = bcdToDec(RTC_date.date.y) + 2000;
 8009a94:	4b89      	ldr	r3, [pc, #548]	@ (8009cbc <DebugLog+0x238>)
 8009a96:	224d      	movs	r2, #77	@ 0x4d
 8009a98:	5c9b      	ldrb	r3, [r3, r2]
 8009a9a:	0018      	movs	r0, r3
 8009a9c:	f003 f867 	bl	800cb6e <bcdToDec>
 8009aa0:	0003      	movs	r3, r0
 8009aa2:	22fa      	movs	r2, #250	@ 0xfa
 8009aa4:	00d2      	lsls	r2, r2, #3
 8009aa6:	4694      	mov	ip, r2
 8009aa8:	4463      	add	r3, ip
 8009aaa:	b29a      	uxth	r2, r3
 8009aac:	4b84      	ldr	r3, [pc, #528]	@ (8009cc0 <DebugLog+0x23c>)
 8009aae:	801a      	strh	r2, [r3, #0]
	stCurrentTime.month = bcdToDec(RTC_date.date.m);
 8009ab0:	4b82      	ldr	r3, [pc, #520]	@ (8009cbc <DebugLog+0x238>)
 8009ab2:	224e      	movs	r2, #78	@ 0x4e
 8009ab4:	5c9b      	ldrb	r3, [r3, r2]
 8009ab6:	0018      	movs	r0, r3
 8009ab8:	f003 f859 	bl	800cb6e <bcdToDec>
 8009abc:	0003      	movs	r3, r0
 8009abe:	001a      	movs	r2, r3
 8009ac0:	4b7f      	ldr	r3, [pc, #508]	@ (8009cc0 <DebugLog+0x23c>)
 8009ac2:	709a      	strb	r2, [r3, #2]
	stCurrentTime.date = bcdToDec(RTC_date.date.d);
 8009ac4:	4b7d      	ldr	r3, [pc, #500]	@ (8009cbc <DebugLog+0x238>)
 8009ac6:	224f      	movs	r2, #79	@ 0x4f
 8009ac8:	5c9b      	ldrb	r3, [r3, r2]
 8009aca:	0018      	movs	r0, r3
 8009acc:	f003 f84f 	bl	800cb6e <bcdToDec>
 8009ad0:	0003      	movs	r3, r0
 8009ad2:	001a      	movs	r2, r3
 8009ad4:	4b7a      	ldr	r3, [pc, #488]	@ (8009cc0 <DebugLog+0x23c>)
 8009ad6:	70da      	strb	r2, [r3, #3]
	stCurrentTime.hour = bcdToDec(RTC_date.date.hh);
 8009ad8:	4b78      	ldr	r3, [pc, #480]	@ (8009cbc <DebugLog+0x238>)
 8009ada:	2251      	movs	r2, #81	@ 0x51
 8009adc:	5c9b      	ldrb	r3, [r3, r2]
 8009ade:	0018      	movs	r0, r3
 8009ae0:	f003 f845 	bl	800cb6e <bcdToDec>
 8009ae4:	0003      	movs	r3, r0
 8009ae6:	001a      	movs	r2, r3
 8009ae8:	4b75      	ldr	r3, [pc, #468]	@ (8009cc0 <DebugLog+0x23c>)
 8009aea:	711a      	strb	r2, [r3, #4]
	stCurrentTime.minute = bcdToDec(RTC_date.date.mm);
 8009aec:	4b73      	ldr	r3, [pc, #460]	@ (8009cbc <DebugLog+0x238>)
 8009aee:	2252      	movs	r2, #82	@ 0x52
 8009af0:	5c9b      	ldrb	r3, [r3, r2]
 8009af2:	0018      	movs	r0, r3
 8009af4:	f003 f83b 	bl	800cb6e <bcdToDec>
 8009af8:	0003      	movs	r3, r0
 8009afa:	001a      	movs	r2, r3
 8009afc:	4b70      	ldr	r3, [pc, #448]	@ (8009cc0 <DebugLog+0x23c>)
 8009afe:	715a      	strb	r2, [r3, #5]
	stCurrentTime.second = bcdToDec(RTC_date.date.ss);
 8009b00:	4b6e      	ldr	r3, [pc, #440]	@ (8009cbc <DebugLog+0x238>)
 8009b02:	2253      	movs	r2, #83	@ 0x53
 8009b04:	5c9b      	ldrb	r3, [r3, r2]
 8009b06:	0018      	movs	r0, r3
 8009b08:	f003 f831 	bl	800cb6e <bcdToDec>
 8009b0c:	0003      	movs	r3, r0
 8009b0e:	001a      	movs	r2, r3
 8009b10:	4b6b      	ldr	r3, [pc, #428]	@ (8009cc0 <DebugLog+0x23c>)
 8009b12:	719a      	strb	r2, [r3, #6]
	if (stCurrentTime.second%3==0){
 8009b14:	4b6a      	ldr	r3, [pc, #424]	@ (8009cc0 <DebugLog+0x23c>)
 8009b16:	799b      	ldrb	r3, [r3, #6]
 8009b18:	2103      	movs	r1, #3
 8009b1a:	0018      	movs	r0, r3
 8009b1c:	f7f6 fb8a 	bl	8000234 <__aeabi_uidivmod>
 8009b20:	000b      	movs	r3, r1
 8009b22:	b2db      	uxtb	r3, r3
 8009b24:	2b00      	cmp	r3, #0
 8009b26:	d000      	beq.n	8009b2a <DebugLog+0xa6>
 8009b28:	e0be      	b.n	8009ca8 <DebugLog+0x224>
	fresult = f_open(&fil, "DebugLog.txt", FA_OPEN_EXISTING | FA_READ | FA_WRITE);
 8009b2a:	4966      	ldr	r1, [pc, #408]	@ (8009cc4 <DebugLog+0x240>)
 8009b2c:	4b66      	ldr	r3, [pc, #408]	@ (8009cc8 <DebugLog+0x244>)
 8009b2e:	2203      	movs	r2, #3
 8009b30:	0018      	movs	r0, r3
 8009b32:	f00d fea9 	bl	8017888 <f_open>
 8009b36:	0003      	movs	r3, r0
 8009b38:	001a      	movs	r2, r3
 8009b3a:	4b64      	ldr	r3, [pc, #400]	@ (8009ccc <DebugLog+0x248>)
 8009b3c:	701a      	strb	r2, [r3, #0]
	if (fresult == FR_NO_FILE) {
 8009b3e:	4b63      	ldr	r3, [pc, #396]	@ (8009ccc <DebugLog+0x248>)
 8009b40:	781b      	ldrb	r3, [r3, #0]
 8009b42:	2b04      	cmp	r3, #4
 8009b44:	d125      	bne.n	8009b92 <DebugLog+0x10e>
	    // Create the file
	    fresult = f_open(&fil, "DebugLog.txt", FA_CREATE_ALWAYS | FA_WRITE);
 8009b46:	495f      	ldr	r1, [pc, #380]	@ (8009cc4 <DebugLog+0x240>)
 8009b48:	4b5f      	ldr	r3, [pc, #380]	@ (8009cc8 <DebugLog+0x244>)
 8009b4a:	220a      	movs	r2, #10
 8009b4c:	0018      	movs	r0, r3
 8009b4e:	f00d fe9b 	bl	8017888 <f_open>
 8009b52:	0003      	movs	r3, r0
 8009b54:	001a      	movs	r2, r3
 8009b56:	4b5d      	ldr	r3, [pc, #372]	@ (8009ccc <DebugLog+0x248>)
 8009b58:	701a      	strb	r2, [r3, #0]

	    // Check if the file was created successfully
	    if (fresult == FR_OK) {
 8009b5a:	4b5c      	ldr	r3, [pc, #368]	@ (8009ccc <DebugLog+0x248>)
 8009b5c:	781b      	ldrb	r3, [r3, #0]
 8009b5e:	2b00      	cmp	r3, #0
 8009b60:	d117      	bne.n	8009b92 <DebugLog+0x10e>
	        // Optionally write initial data to the file
	        const char *initialData = "Smart Taximeter Debug Log \n";
 8009b62:	4b5b      	ldr	r3, [pc, #364]	@ (8009cd0 <DebugLog+0x24c>)
 8009b64:	249a      	movs	r4, #154	@ 0x9a
 8009b66:	0064      	lsls	r4, r4, #1
 8009b68:	2530      	movs	r5, #48	@ 0x30
 8009b6a:	1962      	adds	r2, r4, r5
 8009b6c:	19d2      	adds	r2, r2, r7
 8009b6e:	6013      	str	r3, [r2, #0]
	        UINT bytesWritten;
	        f_write(&fil, initialData, strlen(initialData), &bytesWritten);
 8009b70:	1963      	adds	r3, r4, r5
 8009b72:	19db      	adds	r3, r3, r7
 8009b74:	681b      	ldr	r3, [r3, #0]
 8009b76:	0018      	movs	r0, r3
 8009b78:	f7f6 fac4 	bl	8000104 <strlen>
 8009b7c:	0002      	movs	r2, r0
 8009b7e:	2398      	movs	r3, #152	@ 0x98
 8009b80:	005b      	lsls	r3, r3, #1
 8009b82:	195b      	adds	r3, r3, r5
 8009b84:	19db      	adds	r3, r3, r7
 8009b86:	1961      	adds	r1, r4, r5
 8009b88:	19c9      	adds	r1, r1, r7
 8009b8a:	6809      	ldr	r1, [r1, #0]
 8009b8c:	484e      	ldr	r0, [pc, #312]	@ (8009cc8 <DebugLog+0x244>)
 8009b8e:	f00e f880 	bl	8017c92 <f_write>
	    }
	}

	fresult = f_lseek(&fil, f_size(&fil));
 8009b92:	4b4d      	ldr	r3, [pc, #308]	@ (8009cc8 <DebugLog+0x244>)
 8009b94:	68da      	ldr	r2, [r3, #12]
 8009b96:	4b4c      	ldr	r3, [pc, #304]	@ (8009cc8 <DebugLog+0x244>)
 8009b98:	0011      	movs	r1, r2
 8009b9a:	0018      	movs	r0, r3
 8009b9c:	f00e fad1 	bl	8018142 <f_lseek>
 8009ba0:	0003      	movs	r3, r0
 8009ba2:	001a      	movs	r2, r3
 8009ba4:	4b49      	ldr	r3, [pc, #292]	@ (8009ccc <DebugLog+0x248>)
 8009ba6:	701a      	strb	r2, [r3, #0]
	char buffer3[300];
	snprintf(buffer3, sizeof(buffer3), "\nLog Time(ymdhms):%d-%d-%d %d:%d:%d  Flag_set_alarm_rtc: %d  hh:mm:ss: %d:%d:%d  ctrl_2: %d  Flag_Protect: %d  Flag_Alarm: %d  Tamper_Counter: %d  counter: %d  last_counter: %d  Speed: %d  Width: %d",stCurrentTime.year ,stCurrentTime.month,stCurrentTime.date, stCurrentTime.hour, stCurrentTime.minute, stCurrentTime.second, Flag_set_alarm_rtc, bcdToDec(hh),bcdToDec(mm),bcdToDec(ss),ctrl_2,Flag_Protect,Flag_alarm,Tamper_Counter,counter,last_counter,Speed,Width);
 8009ba8:	4b45      	ldr	r3, [pc, #276]	@ (8009cc0 <DebugLog+0x23c>)
 8009baa:	881b      	ldrh	r3, [r3, #0]
 8009bac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009bae:	4b44      	ldr	r3, [pc, #272]	@ (8009cc0 <DebugLog+0x23c>)
 8009bb0:	789b      	ldrb	r3, [r3, #2]
 8009bb2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009bb4:	4b42      	ldr	r3, [pc, #264]	@ (8009cc0 <DebugLog+0x23c>)
 8009bb6:	78db      	ldrb	r3, [r3, #3]
 8009bb8:	627b      	str	r3, [r7, #36]	@ 0x24
 8009bba:	4b41      	ldr	r3, [pc, #260]	@ (8009cc0 <DebugLog+0x23c>)
 8009bbc:	791b      	ldrb	r3, [r3, #4]
 8009bbe:	623b      	str	r3, [r7, #32]
 8009bc0:	4b3f      	ldr	r3, [pc, #252]	@ (8009cc0 <DebugLog+0x23c>)
 8009bc2:	795b      	ldrb	r3, [r3, #5]
 8009bc4:	61fb      	str	r3, [r7, #28]
 8009bc6:	4b3e      	ldr	r3, [pc, #248]	@ (8009cc0 <DebugLog+0x23c>)
 8009bc8:	799b      	ldrb	r3, [r3, #6]
 8009bca:	61bb      	str	r3, [r7, #24]
 8009bcc:	4b41      	ldr	r3, [pc, #260]	@ (8009cd4 <DebugLog+0x250>)
 8009bce:	781b      	ldrb	r3, [r3, #0]
 8009bd0:	617b      	str	r3, [r7, #20]
 8009bd2:	4b41      	ldr	r3, [pc, #260]	@ (8009cd8 <DebugLog+0x254>)
 8009bd4:	781b      	ldrb	r3, [r3, #0]
 8009bd6:	0018      	movs	r0, r3
 8009bd8:	f002 ffc9 	bl	800cb6e <bcdToDec>
 8009bdc:	0003      	movs	r3, r0
 8009bde:	613b      	str	r3, [r7, #16]
 8009be0:	4b3e      	ldr	r3, [pc, #248]	@ (8009cdc <DebugLog+0x258>)
 8009be2:	781b      	ldrb	r3, [r3, #0]
 8009be4:	0018      	movs	r0, r3
 8009be6:	f002 ffc2 	bl	800cb6e <bcdToDec>
 8009bea:	0003      	movs	r3, r0
 8009bec:	60fb      	str	r3, [r7, #12]
 8009bee:	4b3c      	ldr	r3, [pc, #240]	@ (8009ce0 <DebugLog+0x25c>)
 8009bf0:	781b      	ldrb	r3, [r3, #0]
 8009bf2:	0018      	movs	r0, r3
 8009bf4:	f002 ffbb 	bl	800cb6e <bcdToDec>
 8009bf8:	0003      	movs	r3, r0
 8009bfa:	60bb      	str	r3, [r7, #8]
 8009bfc:	4b39      	ldr	r3, [pc, #228]	@ (8009ce4 <DebugLog+0x260>)
 8009bfe:	781b      	ldrb	r3, [r3, #0]
 8009c00:	607b      	str	r3, [r7, #4]
 8009c02:	4b39      	ldr	r3, [pc, #228]	@ (8009ce8 <DebugLog+0x264>)
 8009c04:	781b      	ldrb	r3, [r3, #0]
 8009c06:	603b      	str	r3, [r7, #0]
 8009c08:	4b38      	ldr	r3, [pc, #224]	@ (8009cec <DebugLog+0x268>)
 8009c0a:	781b      	ldrb	r3, [r3, #0]
 8009c0c:	469b      	mov	fp, r3
 8009c0e:	4b38      	ldr	r3, [pc, #224]	@ (8009cf0 <DebugLog+0x26c>)
 8009c10:	781b      	ldrb	r3, [r3, #0]
 8009c12:	469a      	mov	sl, r3
 8009c14:	4b37      	ldr	r3, [pc, #220]	@ (8009cf4 <DebugLog+0x270>)
 8009c16:	681a      	ldr	r2, [r3, #0]
 8009c18:	4691      	mov	r9, r2
 8009c1a:	4b37      	ldr	r3, [pc, #220]	@ (8009cf8 <DebugLog+0x274>)
 8009c1c:	681a      	ldr	r2, [r3, #0]
 8009c1e:	4690      	mov	r8, r2
 8009c20:	4b36      	ldr	r3, [pc, #216]	@ (8009cfc <DebugLog+0x278>)
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	1c18      	adds	r0, r3, #0
 8009c26:	f7f9 fb29 	bl	800327c <__aeabi_f2d>
 8009c2a:	4b35      	ldr	r3, [pc, #212]	@ (8009d00 <DebugLog+0x27c>)
 8009c2c:	681a      	ldr	r2, [r3, #0]
 8009c2e:	4e35      	ldr	r6, [pc, #212]	@ (8009d04 <DebugLog+0x280>)
 8009c30:	2396      	movs	r3, #150	@ 0x96
 8009c32:	005d      	lsls	r5, r3, #1
 8009c34:	2334      	movs	r3, #52	@ 0x34
 8009c36:	18fc      	adds	r4, r7, r3
 8009c38:	9212      	str	r2, [sp, #72]	@ 0x48
 8009c3a:	9010      	str	r0, [sp, #64]	@ 0x40
 8009c3c:	9111      	str	r1, [sp, #68]	@ 0x44
 8009c3e:	4642      	mov	r2, r8
 8009c40:	920e      	str	r2, [sp, #56]	@ 0x38
 8009c42:	464a      	mov	r2, r9
 8009c44:	920d      	str	r2, [sp, #52]	@ 0x34
 8009c46:	4652      	mov	r2, sl
 8009c48:	920c      	str	r2, [sp, #48]	@ 0x30
 8009c4a:	465a      	mov	r2, fp
 8009c4c:	920b      	str	r2, [sp, #44]	@ 0x2c
 8009c4e:	683a      	ldr	r2, [r7, #0]
 8009c50:	920a      	str	r2, [sp, #40]	@ 0x28
 8009c52:	687a      	ldr	r2, [r7, #4]
 8009c54:	9209      	str	r2, [sp, #36]	@ 0x24
 8009c56:	68ba      	ldr	r2, [r7, #8]
 8009c58:	9208      	str	r2, [sp, #32]
 8009c5a:	68fa      	ldr	r2, [r7, #12]
 8009c5c:	9207      	str	r2, [sp, #28]
 8009c5e:	693a      	ldr	r2, [r7, #16]
 8009c60:	9206      	str	r2, [sp, #24]
 8009c62:	697a      	ldr	r2, [r7, #20]
 8009c64:	9205      	str	r2, [sp, #20]
 8009c66:	69ba      	ldr	r2, [r7, #24]
 8009c68:	9204      	str	r2, [sp, #16]
 8009c6a:	69fa      	ldr	r2, [r7, #28]
 8009c6c:	9203      	str	r2, [sp, #12]
 8009c6e:	6a3a      	ldr	r2, [r7, #32]
 8009c70:	9202      	str	r2, [sp, #8]
 8009c72:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009c74:	9201      	str	r2, [sp, #4]
 8009c76:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8009c78:	9200      	str	r2, [sp, #0]
 8009c7a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009c7c:	0032      	movs	r2, r6
 8009c7e:	0029      	movs	r1, r5
 8009c80:	0020      	movs	r0, r4
 8009c82:	f00e feb7 	bl	80189f4 <sniprintf>
	fresult = f_puts(buffer3, &fil);
 8009c86:	4a10      	ldr	r2, [pc, #64]	@ (8009cc8 <DebugLog+0x244>)
 8009c88:	2334      	movs	r3, #52	@ 0x34
 8009c8a:	18fb      	adds	r3, r7, r3
 8009c8c:	0011      	movs	r1, r2
 8009c8e:	0018      	movs	r0, r3
 8009c90:	f00e fd02 	bl	8018698 <f_puts>
 8009c94:	0003      	movs	r3, r0
 8009c96:	b2da      	uxtb	r2, r3
 8009c98:	4b0c      	ldr	r3, [pc, #48]	@ (8009ccc <DebugLog+0x248>)
 8009c9a:	701a      	strb	r2, [r3, #0]
	f_close (&fil);
 8009c9c:	4b0a      	ldr	r3, [pc, #40]	@ (8009cc8 <DebugLog+0x244>)
 8009c9e:	0018      	movs	r0, r3
 8009ca0:	f00e fa1b 	bl	80180da <f_close>
	clear_buffer();
 8009ca4:	f7fa f934 	bl	8003f10 <clear_buffer>
	}
	#endif
}
 8009ca8:	46c0      	nop			@ (mov r8, r8)
 8009caa:	46bd      	mov	sp, r7
 8009cac:	b05b      	add	sp, #364	@ 0x16c
 8009cae:	bcf0      	pop	{r4, r5, r6, r7}
 8009cb0:	46bb      	mov	fp, r7
 8009cb2:	46b2      	mov	sl, r6
 8009cb4:	46a9      	mov	r9, r5
 8009cb6:	46a0      	mov	r8, r4
 8009cb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009cba:	46c0      	nop			@ (mov r8, r8)
 8009cbc:	20000c20 	.word	0x20000c20
 8009cc0:	20000c90 	.word	0x20000c90
 8009cc4:	08019b30 	.word	0x08019b30
 8009cc8:	20001f04 	.word	0x20001f04
 8009ccc:	20002f34 	.word	0x20002f34
 8009cd0:	08019b40 	.word	0x08019b40
 8009cd4:	20000d3e 	.word	0x20000d3e
 8009cd8:	20000c9c 	.word	0x20000c9c
 8009cdc:	20000c9d 	.word	0x20000c9d
 8009ce0:	20000c9e 	.word	0x20000c9e
 8009ce4:	20000c99 	.word	0x20000c99
 8009ce8:	20000d3d 	.word	0x20000d3d
 8009cec:	20000244 	.word	0x20000244
 8009cf0:	20000d3f 	.word	0x20000d3f
 8009cf4:	20000ce8 	.word	0x20000ce8
 8009cf8:	20000cf0 	.word	0x20000cf0
 8009cfc:	20000cdc 	.word	0x20000cdc
 8009d00:	20000cb4 	.word	0x20000cb4
 8009d04:	08019b5c 	.word	0x08019b5c

08009d08 <EventDebugLog>:

void EventDebugLog(char *str)
{
 8009d08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d0a:	46de      	mov	lr, fp
 8009d0c:	4657      	mov	r7, sl
 8009d0e:	464e      	mov	r6, r9
 8009d10:	4645      	mov	r5, r8
 8009d12:	b5e0      	push	{r5, r6, r7, lr}
 8009d14:	b0f1      	sub	sp, #452	@ 0x1c4
 8009d16:	af14      	add	r7, sp, #80	@ 0x50
 8009d18:	6378      	str	r0, [r7, #52]	@ 0x34
//	#ifdef DEBUG
	stCurrentTime.year = bcdToDec(RTC_date.date.y) + 2000;
 8009d1a:	4b90      	ldr	r3, [pc, #576]	@ (8009f5c <EventDebugLog+0x254>)
 8009d1c:	224d      	movs	r2, #77	@ 0x4d
 8009d1e:	5c9b      	ldrb	r3, [r3, r2]
 8009d20:	0018      	movs	r0, r3
 8009d22:	f002 ff24 	bl	800cb6e <bcdToDec>
 8009d26:	0003      	movs	r3, r0
 8009d28:	22fa      	movs	r2, #250	@ 0xfa
 8009d2a:	00d2      	lsls	r2, r2, #3
 8009d2c:	4694      	mov	ip, r2
 8009d2e:	4463      	add	r3, ip
 8009d30:	b29a      	uxth	r2, r3
 8009d32:	4b8b      	ldr	r3, [pc, #556]	@ (8009f60 <EventDebugLog+0x258>)
 8009d34:	801a      	strh	r2, [r3, #0]
	stCurrentTime.month = bcdToDec(RTC_date.date.m);
 8009d36:	4b89      	ldr	r3, [pc, #548]	@ (8009f5c <EventDebugLog+0x254>)
 8009d38:	224e      	movs	r2, #78	@ 0x4e
 8009d3a:	5c9b      	ldrb	r3, [r3, r2]
 8009d3c:	0018      	movs	r0, r3
 8009d3e:	f002 ff16 	bl	800cb6e <bcdToDec>
 8009d42:	0003      	movs	r3, r0
 8009d44:	001a      	movs	r2, r3
 8009d46:	4b86      	ldr	r3, [pc, #536]	@ (8009f60 <EventDebugLog+0x258>)
 8009d48:	709a      	strb	r2, [r3, #2]
	stCurrentTime.date = bcdToDec(RTC_date.date.d);
 8009d4a:	4b84      	ldr	r3, [pc, #528]	@ (8009f5c <EventDebugLog+0x254>)
 8009d4c:	224f      	movs	r2, #79	@ 0x4f
 8009d4e:	5c9b      	ldrb	r3, [r3, r2]
 8009d50:	0018      	movs	r0, r3
 8009d52:	f002 ff0c 	bl	800cb6e <bcdToDec>
 8009d56:	0003      	movs	r3, r0
 8009d58:	001a      	movs	r2, r3
 8009d5a:	4b81      	ldr	r3, [pc, #516]	@ (8009f60 <EventDebugLog+0x258>)
 8009d5c:	70da      	strb	r2, [r3, #3]
	stCurrentTime.hour = bcdToDec(RTC_date.date.hh);
 8009d5e:	4b7f      	ldr	r3, [pc, #508]	@ (8009f5c <EventDebugLog+0x254>)
 8009d60:	2251      	movs	r2, #81	@ 0x51
 8009d62:	5c9b      	ldrb	r3, [r3, r2]
 8009d64:	0018      	movs	r0, r3
 8009d66:	f002 ff02 	bl	800cb6e <bcdToDec>
 8009d6a:	0003      	movs	r3, r0
 8009d6c:	001a      	movs	r2, r3
 8009d6e:	4b7c      	ldr	r3, [pc, #496]	@ (8009f60 <EventDebugLog+0x258>)
 8009d70:	711a      	strb	r2, [r3, #4]
	stCurrentTime.minute = bcdToDec(RTC_date.date.mm);
 8009d72:	4b7a      	ldr	r3, [pc, #488]	@ (8009f5c <EventDebugLog+0x254>)
 8009d74:	2252      	movs	r2, #82	@ 0x52
 8009d76:	5c9b      	ldrb	r3, [r3, r2]
 8009d78:	0018      	movs	r0, r3
 8009d7a:	f002 fef8 	bl	800cb6e <bcdToDec>
 8009d7e:	0003      	movs	r3, r0
 8009d80:	001a      	movs	r2, r3
 8009d82:	4b77      	ldr	r3, [pc, #476]	@ (8009f60 <EventDebugLog+0x258>)
 8009d84:	715a      	strb	r2, [r3, #5]
	stCurrentTime.second = bcdToDec(RTC_date.date.ss);
 8009d86:	4b75      	ldr	r3, [pc, #468]	@ (8009f5c <EventDebugLog+0x254>)
 8009d88:	2253      	movs	r2, #83	@ 0x53
 8009d8a:	5c9b      	ldrb	r3, [r3, r2]
 8009d8c:	0018      	movs	r0, r3
 8009d8e:	f002 feee 	bl	800cb6e <bcdToDec>
 8009d92:	0003      	movs	r3, r0
 8009d94:	001a      	movs	r2, r3
 8009d96:	4b72      	ldr	r3, [pc, #456]	@ (8009f60 <EventDebugLog+0x258>)
 8009d98:	719a      	strb	r2, [r3, #6]
//	if (stCurrentTime.second%3==0){
	fresult = f_open(&fil, "DebugLog.txt", FA_OPEN_EXISTING | FA_READ | FA_WRITE);
 8009d9a:	4972      	ldr	r1, [pc, #456]	@ (8009f64 <EventDebugLog+0x25c>)
 8009d9c:	4b72      	ldr	r3, [pc, #456]	@ (8009f68 <EventDebugLog+0x260>)
 8009d9e:	2203      	movs	r2, #3
 8009da0:	0018      	movs	r0, r3
 8009da2:	f00d fd71 	bl	8017888 <f_open>
 8009da6:	0003      	movs	r3, r0
 8009da8:	001a      	movs	r2, r3
 8009daa:	4b70      	ldr	r3, [pc, #448]	@ (8009f6c <EventDebugLog+0x264>)
 8009dac:	701a      	strb	r2, [r3, #0]
	if (fresult == FR_NO_FILE) {
 8009dae:	4b6f      	ldr	r3, [pc, #444]	@ (8009f6c <EventDebugLog+0x264>)
 8009db0:	781b      	ldrb	r3, [r3, #0]
 8009db2:	2b04      	cmp	r3, #4
 8009db4:	d124      	bne.n	8009e00 <EventDebugLog+0xf8>
	    // Create the file
	    fresult = f_open(&fil, "DebugLog.txt", FA_CREATE_ALWAYS | FA_WRITE);
 8009db6:	496b      	ldr	r1, [pc, #428]	@ (8009f64 <EventDebugLog+0x25c>)
 8009db8:	4b6b      	ldr	r3, [pc, #428]	@ (8009f68 <EventDebugLog+0x260>)
 8009dba:	220a      	movs	r2, #10
 8009dbc:	0018      	movs	r0, r3
 8009dbe:	f00d fd63 	bl	8017888 <f_open>
 8009dc2:	0003      	movs	r3, r0
 8009dc4:	001a      	movs	r2, r3
 8009dc6:	4b69      	ldr	r3, [pc, #420]	@ (8009f6c <EventDebugLog+0x264>)
 8009dc8:	701a      	strb	r2, [r3, #0]

	    // Check if the file was created successfully
	    if (fresult == FR_OK) {
 8009dca:	4b68      	ldr	r3, [pc, #416]	@ (8009f6c <EventDebugLog+0x264>)
 8009dcc:	781b      	ldrb	r3, [r3, #0]
 8009dce:	2b00      	cmp	r3, #0
 8009dd0:	d116      	bne.n	8009e00 <EventDebugLog+0xf8>
	        // Optionally write initial data to the file
	        const char *initialData = "Smart Taximeter Debug Log \n";
 8009dd2:	4b67      	ldr	r3, [pc, #412]	@ (8009f70 <EventDebugLog+0x268>)
 8009dd4:	249e      	movs	r4, #158	@ 0x9e
 8009dd6:	0064      	lsls	r4, r4, #1
 8009dd8:	2530      	movs	r5, #48	@ 0x30
 8009dda:	1962      	adds	r2, r4, r5
 8009ddc:	19d2      	adds	r2, r2, r7
 8009dde:	6013      	str	r3, [r2, #0]
	        UINT bytesWritten;
	        f_write(&fil, initialData, strlen(initialData), &bytesWritten);
 8009de0:	1963      	adds	r3, r4, r5
 8009de2:	19db      	adds	r3, r3, r7
 8009de4:	681b      	ldr	r3, [r3, #0]
 8009de6:	0018      	movs	r0, r3
 8009de8:	f7f6 f98c 	bl	8000104 <strlen>
 8009dec:	0002      	movs	r2, r0
 8009dee:	230c      	movs	r3, #12
 8009df0:	195b      	adds	r3, r3, r5
 8009df2:	19db      	adds	r3, r3, r7
 8009df4:	1961      	adds	r1, r4, r5
 8009df6:	19c9      	adds	r1, r1, r7
 8009df8:	6809      	ldr	r1, [r1, #0]
 8009dfa:	485b      	ldr	r0, [pc, #364]	@ (8009f68 <EventDebugLog+0x260>)
 8009dfc:	f00d ff49 	bl	8017c92 <f_write>
	    }
	}

	fresult = f_lseek(&fil, f_size(&fil));
 8009e00:	4b59      	ldr	r3, [pc, #356]	@ (8009f68 <EventDebugLog+0x260>)
 8009e02:	68da      	ldr	r2, [r3, #12]
 8009e04:	4b58      	ldr	r3, [pc, #352]	@ (8009f68 <EventDebugLog+0x260>)
 8009e06:	0011      	movs	r1, r2
 8009e08:	0018      	movs	r0, r3
 8009e0a:	f00e f99a 	bl	8018142 <f_lseek>
 8009e0e:	0003      	movs	r3, r0
 8009e10:	001a      	movs	r2, r3
 8009e12:	4b56      	ldr	r3, [pc, #344]	@ (8009f6c <EventDebugLog+0x264>)
 8009e14:	701a      	strb	r2, [r3, #0]
	char buffer3[300]  = {0};
 8009e16:	4b57      	ldr	r3, [pc, #348]	@ (8009f74 <EventDebugLog+0x26c>)
 8009e18:	22a0      	movs	r2, #160	@ 0xa0
 8009e1a:	0052      	lsls	r2, r2, #1
 8009e1c:	189b      	adds	r3, r3, r2
 8009e1e:	2230      	movs	r2, #48	@ 0x30
 8009e20:	4694      	mov	ip, r2
 8009e22:	44bc      	add	ip, r7
 8009e24:	4463      	add	r3, ip
 8009e26:	2200      	movs	r2, #0
 8009e28:	601a      	str	r2, [r3, #0]
 8009e2a:	3304      	adds	r3, #4
 8009e2c:	2294      	movs	r2, #148	@ 0x94
 8009e2e:	0052      	lsls	r2, r2, #1
 8009e30:	2100      	movs	r1, #0
 8009e32:	0018      	movs	r0, r3
 8009e34:	f00e ff0c 	bl	8018c50 <memset>
	snprintf(buffer3, sizeof(buffer3), "\nEvent: %s  Log Time(ymdhms):%d-%d-%d %d:%d:%d  Flag_set_alarm_rtc: %d  hh:mm:ss: %d:%d:%d  ctrl_2: %d  Flag_Protect: %d  Flag_Alarm: %d  Tamper_Counter: %d  counter: %d  last_counter: %d  Speed: %d  Width: %d",str,stCurrentTime.year ,stCurrentTime.month,stCurrentTime.date, stCurrentTime.hour, stCurrentTime.minute, stCurrentTime.second, Flag_set_alarm_rtc, bcdToDec(hh),bcdToDec(mm),bcdToDec(ss),ctrl_2,Flag_Protect,Flag_alarm,Tamper_Counter,counter,last_counter,Speed,Width);
 8009e38:	4b49      	ldr	r3, [pc, #292]	@ (8009f60 <EventDebugLog+0x258>)
 8009e3a:	881b      	ldrh	r3, [r3, #0]
 8009e3c:	633b      	str	r3, [r7, #48]	@ 0x30
 8009e3e:	4b48      	ldr	r3, [pc, #288]	@ (8009f60 <EventDebugLog+0x258>)
 8009e40:	789b      	ldrb	r3, [r3, #2]
 8009e42:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009e44:	4b46      	ldr	r3, [pc, #280]	@ (8009f60 <EventDebugLog+0x258>)
 8009e46:	78db      	ldrb	r3, [r3, #3]
 8009e48:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009e4a:	4b45      	ldr	r3, [pc, #276]	@ (8009f60 <EventDebugLog+0x258>)
 8009e4c:	791b      	ldrb	r3, [r3, #4]
 8009e4e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009e50:	4b43      	ldr	r3, [pc, #268]	@ (8009f60 <EventDebugLog+0x258>)
 8009e52:	795b      	ldrb	r3, [r3, #5]
 8009e54:	623b      	str	r3, [r7, #32]
 8009e56:	4b42      	ldr	r3, [pc, #264]	@ (8009f60 <EventDebugLog+0x258>)
 8009e58:	799b      	ldrb	r3, [r3, #6]
 8009e5a:	61fb      	str	r3, [r7, #28]
 8009e5c:	4b46      	ldr	r3, [pc, #280]	@ (8009f78 <EventDebugLog+0x270>)
 8009e5e:	781b      	ldrb	r3, [r3, #0]
 8009e60:	61bb      	str	r3, [r7, #24]
 8009e62:	4b46      	ldr	r3, [pc, #280]	@ (8009f7c <EventDebugLog+0x274>)
 8009e64:	781b      	ldrb	r3, [r3, #0]
 8009e66:	0018      	movs	r0, r3
 8009e68:	f002 fe81 	bl	800cb6e <bcdToDec>
 8009e6c:	0003      	movs	r3, r0
 8009e6e:	617b      	str	r3, [r7, #20]
 8009e70:	4b43      	ldr	r3, [pc, #268]	@ (8009f80 <EventDebugLog+0x278>)
 8009e72:	781b      	ldrb	r3, [r3, #0]
 8009e74:	0018      	movs	r0, r3
 8009e76:	f002 fe7a 	bl	800cb6e <bcdToDec>
 8009e7a:	0003      	movs	r3, r0
 8009e7c:	613b      	str	r3, [r7, #16]
 8009e7e:	4b41      	ldr	r3, [pc, #260]	@ (8009f84 <EventDebugLog+0x27c>)
 8009e80:	781b      	ldrb	r3, [r3, #0]
 8009e82:	0018      	movs	r0, r3
 8009e84:	f002 fe73 	bl	800cb6e <bcdToDec>
 8009e88:	0003      	movs	r3, r0
 8009e8a:	60fb      	str	r3, [r7, #12]
 8009e8c:	4b3e      	ldr	r3, [pc, #248]	@ (8009f88 <EventDebugLog+0x280>)
 8009e8e:	781b      	ldrb	r3, [r3, #0]
 8009e90:	60bb      	str	r3, [r7, #8]
 8009e92:	4b3e      	ldr	r3, [pc, #248]	@ (8009f8c <EventDebugLog+0x284>)
 8009e94:	781b      	ldrb	r3, [r3, #0]
 8009e96:	607b      	str	r3, [r7, #4]
 8009e98:	4b3d      	ldr	r3, [pc, #244]	@ (8009f90 <EventDebugLog+0x288>)
 8009e9a:	781b      	ldrb	r3, [r3, #0]
 8009e9c:	469b      	mov	fp, r3
 8009e9e:	4b3d      	ldr	r3, [pc, #244]	@ (8009f94 <EventDebugLog+0x28c>)
 8009ea0:	781b      	ldrb	r3, [r3, #0]
 8009ea2:	469a      	mov	sl, r3
 8009ea4:	4b3c      	ldr	r3, [pc, #240]	@ (8009f98 <EventDebugLog+0x290>)
 8009ea6:	681a      	ldr	r2, [r3, #0]
 8009ea8:	4691      	mov	r9, r2
 8009eaa:	4b3c      	ldr	r3, [pc, #240]	@ (8009f9c <EventDebugLog+0x294>)
 8009eac:	681a      	ldr	r2, [r3, #0]
 8009eae:	4690      	mov	r8, r2
 8009eb0:	4b3b      	ldr	r3, [pc, #236]	@ (8009fa0 <EventDebugLog+0x298>)
 8009eb2:	681b      	ldr	r3, [r3, #0]
 8009eb4:	1c18      	adds	r0, r3, #0
 8009eb6:	f7f9 f9e1 	bl	800327c <__aeabi_f2d>
 8009eba:	4b3a      	ldr	r3, [pc, #232]	@ (8009fa4 <EventDebugLog+0x29c>)
 8009ebc:	681a      	ldr	r2, [r3, #0]
 8009ebe:	6b7c      	ldr	r4, [r7, #52]	@ 0x34
 8009ec0:	46a4      	mov	ip, r4
 8009ec2:	4e39      	ldr	r6, [pc, #228]	@ (8009fa8 <EventDebugLog+0x2a0>)
 8009ec4:	2396      	movs	r3, #150	@ 0x96
 8009ec6:	005d      	lsls	r5, r3, #1
 8009ec8:	2410      	movs	r4, #16
 8009eca:	2330      	movs	r3, #48	@ 0x30
 8009ecc:	18e4      	adds	r4, r4, r3
 8009ece:	19e4      	adds	r4, r4, r7
 8009ed0:	9212      	str	r2, [sp, #72]	@ 0x48
 8009ed2:	9010      	str	r0, [sp, #64]	@ 0x40
 8009ed4:	9111      	str	r1, [sp, #68]	@ 0x44
 8009ed6:	4642      	mov	r2, r8
 8009ed8:	920f      	str	r2, [sp, #60]	@ 0x3c
 8009eda:	464a      	mov	r2, r9
 8009edc:	920e      	str	r2, [sp, #56]	@ 0x38
 8009ede:	4652      	mov	r2, sl
 8009ee0:	920d      	str	r2, [sp, #52]	@ 0x34
 8009ee2:	465a      	mov	r2, fp
 8009ee4:	920c      	str	r2, [sp, #48]	@ 0x30
 8009ee6:	687a      	ldr	r2, [r7, #4]
 8009ee8:	920b      	str	r2, [sp, #44]	@ 0x2c
 8009eea:	68ba      	ldr	r2, [r7, #8]
 8009eec:	920a      	str	r2, [sp, #40]	@ 0x28
 8009eee:	68fa      	ldr	r2, [r7, #12]
 8009ef0:	9209      	str	r2, [sp, #36]	@ 0x24
 8009ef2:	693a      	ldr	r2, [r7, #16]
 8009ef4:	9208      	str	r2, [sp, #32]
 8009ef6:	697a      	ldr	r2, [r7, #20]
 8009ef8:	9207      	str	r2, [sp, #28]
 8009efa:	69ba      	ldr	r2, [r7, #24]
 8009efc:	9206      	str	r2, [sp, #24]
 8009efe:	69fa      	ldr	r2, [r7, #28]
 8009f00:	9205      	str	r2, [sp, #20]
 8009f02:	6a3a      	ldr	r2, [r7, #32]
 8009f04:	9204      	str	r2, [sp, #16]
 8009f06:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009f08:	9203      	str	r2, [sp, #12]
 8009f0a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8009f0c:	9202      	str	r2, [sp, #8]
 8009f0e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009f10:	9201      	str	r2, [sp, #4]
 8009f12:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009f14:	9300      	str	r3, [sp, #0]
 8009f16:	4663      	mov	r3, ip
 8009f18:	0032      	movs	r2, r6
 8009f1a:	0029      	movs	r1, r5
 8009f1c:	0020      	movs	r0, r4
 8009f1e:	f00e fd69 	bl	80189f4 <sniprintf>
	fresult = f_puts(buffer3, &fil);
 8009f22:	4a11      	ldr	r2, [pc, #68]	@ (8009f68 <EventDebugLog+0x260>)
 8009f24:	2410      	movs	r4, #16
 8009f26:	2330      	movs	r3, #48	@ 0x30
 8009f28:	18e3      	adds	r3, r4, r3
 8009f2a:	19db      	adds	r3, r3, r7
 8009f2c:	0011      	movs	r1, r2
 8009f2e:	0018      	movs	r0, r3
 8009f30:	f00e fbb2 	bl	8018698 <f_puts>
 8009f34:	0003      	movs	r3, r0
 8009f36:	b2da      	uxtb	r2, r3
 8009f38:	4b0c      	ldr	r3, [pc, #48]	@ (8009f6c <EventDebugLog+0x264>)
 8009f3a:	701a      	strb	r2, [r3, #0]
	f_close (&fil);
 8009f3c:	4b0a      	ldr	r3, [pc, #40]	@ (8009f68 <EventDebugLog+0x260>)
 8009f3e:	0018      	movs	r0, r3
 8009f40:	f00e f8cb 	bl	80180da <f_close>
	clear_buffer();
 8009f44:	f7f9 ffe4 	bl	8003f10 <clear_buffer>
//	}
//	#endif
}
 8009f48:	46c0      	nop			@ (mov r8, r8)
 8009f4a:	46bd      	mov	sp, r7
 8009f4c:	b05d      	add	sp, #372	@ 0x174
 8009f4e:	bcf0      	pop	{r4, r5, r6, r7}
 8009f50:	46bb      	mov	fp, r7
 8009f52:	46b2      	mov	sl, r6
 8009f54:	46a9      	mov	r9, r5
 8009f56:	46a0      	mov	r8, r4
 8009f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f5a:	46c0      	nop			@ (mov r8, r8)
 8009f5c:	20000c20 	.word	0x20000c20
 8009f60:	20000c90 	.word	0x20000c90
 8009f64:	08019b30 	.word	0x08019b30
 8009f68:	20001f04 	.word	0x20001f04
 8009f6c:	20002f34 	.word	0x20002f34
 8009f70:	08019b40 	.word	0x08019b40
 8009f74:	fffffed0 	.word	0xfffffed0
 8009f78:	20000d3e 	.word	0x20000d3e
 8009f7c:	20000c9c 	.word	0x20000c9c
 8009f80:	20000c9d 	.word	0x20000c9d
 8009f84:	20000c9e 	.word	0x20000c9e
 8009f88:	20000c99 	.word	0x20000c99
 8009f8c:	20000d3d 	.word	0x20000d3d
 8009f90:	20000244 	.word	0x20000244
 8009f94:	20000d3f 	.word	0x20000d3f
 8009f98:	20000ce8 	.word	0x20000ce8
 8009f9c:	20000cf0 	.word	0x20000cf0
 8009fa0:	20000cdc 	.word	0x20000cdc
 8009fa4:	20000cb4 	.word	0x20000cb4
 8009fa8:	08019c24 	.word	0x08019c24

08009fac <BCD2ASC>:


void BCD2ASC(uint8_t *asc, const uint8_t *bcd, uint32_t len)
{
 8009fac:	b580      	push	{r7, lr}
 8009fae:	b086      	sub	sp, #24
 8009fb0:	af00      	add	r7, sp, #0
 8009fb2:	60f8      	str	r0, [r7, #12]
 8009fb4:	60b9      	str	r1, [r7, #8]
 8009fb6:	607a      	str	r2, [r7, #4]
	uint8_t c = 0;
 8009fb8:	2316      	movs	r3, #22
 8009fba:	18fb      	adds	r3, r7, r3
 8009fbc:	2200      	movs	r2, #0
 8009fbe:	701a      	strb	r2, [r3, #0]
	uint8_t i;
	static uint8_t bcd2ascii[10] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};

	for (i = 0; i < len; i++)
 8009fc0:	2317      	movs	r3, #23
 8009fc2:	18fb      	adds	r3, r7, r3
 8009fc4:	2200      	movs	r2, #0
 8009fc6:	701a      	strb	r2, [r3, #0]
 8009fc8:	e024      	b.n	800a014 <BCD2ASC+0x68>
	{
		//first bcd
		c = *bcd >> 4;
 8009fca:	68bb      	ldr	r3, [r7, #8]
 8009fcc:	781a      	ldrb	r2, [r3, #0]
 8009fce:	2016      	movs	r0, #22
 8009fd0:	183b      	adds	r3, r7, r0
 8009fd2:	0912      	lsrs	r2, r2, #4
 8009fd4:	701a      	strb	r2, [r3, #0]
		*asc++ = bcd2ascii[c];
 8009fd6:	183b      	adds	r3, r7, r0
 8009fd8:	781a      	ldrb	r2, [r3, #0]
 8009fda:	68fb      	ldr	r3, [r7, #12]
 8009fdc:	1c59      	adds	r1, r3, #1
 8009fde:	60f9      	str	r1, [r7, #12]
 8009fe0:	4912      	ldr	r1, [pc, #72]	@ (800a02c <BCD2ASC+0x80>)
 8009fe2:	5c8a      	ldrb	r2, [r1, r2]
 8009fe4:	701a      	strb	r2, [r3, #0]

		//second bcd
		c = *bcd & 0x0F;
 8009fe6:	68bb      	ldr	r3, [r7, #8]
 8009fe8:	781a      	ldrb	r2, [r3, #0]
 8009fea:	183b      	adds	r3, r7, r0
 8009fec:	210f      	movs	r1, #15
 8009fee:	400a      	ands	r2, r1
 8009ff0:	701a      	strb	r2, [r3, #0]
		*asc++ = bcd2ascii[c];
 8009ff2:	183b      	adds	r3, r7, r0
 8009ff4:	781a      	ldrb	r2, [r3, #0]
 8009ff6:	68fb      	ldr	r3, [r7, #12]
 8009ff8:	1c59      	adds	r1, r3, #1
 8009ffa:	60f9      	str	r1, [r7, #12]
 8009ffc:	490b      	ldr	r1, [pc, #44]	@ (800a02c <BCD2ASC+0x80>)
 8009ffe:	5c8a      	ldrb	r2, [r1, r2]
 800a000:	701a      	strb	r2, [r3, #0]
		bcd++;
 800a002:	68bb      	ldr	r3, [r7, #8]
 800a004:	3301      	adds	r3, #1
 800a006:	60bb      	str	r3, [r7, #8]
	for (i = 0; i < len; i++)
 800a008:	2117      	movs	r1, #23
 800a00a:	187b      	adds	r3, r7, r1
 800a00c:	781a      	ldrb	r2, [r3, #0]
 800a00e:	187b      	adds	r3, r7, r1
 800a010:	3201      	adds	r2, #1
 800a012:	701a      	strb	r2, [r3, #0]
 800a014:	2317      	movs	r3, #23
 800a016:	18fb      	adds	r3, r7, r3
 800a018:	781b      	ldrb	r3, [r3, #0]
 800a01a:	687a      	ldr	r2, [r7, #4]
 800a01c:	429a      	cmp	r2, r3
 800a01e:	d8d4      	bhi.n	8009fca <BCD2ASC+0x1e>
	}
}
 800a020:	46c0      	nop			@ (mov r8, r8)
 800a022:	46c0      	nop			@ (mov r8, r8)
 800a024:	46bd      	mov	sp, r7
 800a026:	b006      	add	sp, #24
 800a028:	bd80      	pop	{r7, pc}
 800a02a:	46c0      	nop			@ (mov r8, r8)
 800a02c:	20000488 	.word	0x20000488

0800a030 <Dur_hms_cal>:
	temp = (((data/10) << 4) + (data%10));
	return temp;
}

void Dur_hms_cal()
{
 800a030:	b580      	push	{r7, lr}
 800a032:	af00      	add	r7, sp, #0
	sec++;
 800a034:	4b56      	ldr	r3, [pc, #344]	@ (800a190 <Dur_hms_cal+0x160>)
 800a036:	781b      	ldrb	r3, [r3, #0]
 800a038:	3301      	adds	r3, #1
 800a03a:	b2da      	uxtb	r2, r3
 800a03c:	4b54      	ldr	r3, [pc, #336]	@ (800a190 <Dur_hms_cal+0x160>)
 800a03e:	701a      	strb	r2, [r3, #0]
	if(sec == 60)
 800a040:	4b53      	ldr	r3, [pc, #332]	@ (800a190 <Dur_hms_cal+0x160>)
 800a042:	781b      	ldrb	r3, [r3, #0]
 800a044:	2b3c      	cmp	r3, #60	@ 0x3c
 800a046:	d108      	bne.n	800a05a <Dur_hms_cal+0x2a>
	{
		min++;
 800a048:	4b52      	ldr	r3, [pc, #328]	@ (800a194 <Dur_hms_cal+0x164>)
 800a04a:	781b      	ldrb	r3, [r3, #0]
 800a04c:	3301      	adds	r3, #1
 800a04e:	b2da      	uxtb	r2, r3
 800a050:	4b50      	ldr	r3, [pc, #320]	@ (800a194 <Dur_hms_cal+0x164>)
 800a052:	701a      	strb	r2, [r3, #0]
		sec = 0;
 800a054:	4b4e      	ldr	r3, [pc, #312]	@ (800a190 <Dur_hms_cal+0x160>)
 800a056:	2200      	movs	r2, #0
 800a058:	701a      	strb	r2, [r3, #0]
	}
	if(min == 60)
 800a05a:	4b4e      	ldr	r3, [pc, #312]	@ (800a194 <Dur_hms_cal+0x164>)
 800a05c:	781b      	ldrb	r3, [r3, #0]
 800a05e:	2b3c      	cmp	r3, #60	@ 0x3c
 800a060:	d108      	bne.n	800a074 <Dur_hms_cal+0x44>
	{
		hou++;
 800a062:	4b4d      	ldr	r3, [pc, #308]	@ (800a198 <Dur_hms_cal+0x168>)
 800a064:	781b      	ldrb	r3, [r3, #0]
 800a066:	3301      	adds	r3, #1
 800a068:	b2da      	uxtb	r2, r3
 800a06a:	4b4b      	ldr	r3, [pc, #300]	@ (800a198 <Dur_hms_cal+0x168>)
 800a06c:	701a      	strb	r2, [r3, #0]
		min = 0;
 800a06e:	4b49      	ldr	r3, [pc, #292]	@ (800a194 <Dur_hms_cal+0x164>)
 800a070:	2200      	movs	r2, #0
 800a072:	701a      	strb	r2, [r3, #0]
//	if(hou == 24)
//	{
//		hou = 0;
//	}
	//display limit - duration 99:59:59
	if(hou >= 99)
 800a074:	4b48      	ldr	r3, [pc, #288]	@ (800a198 <Dur_hms_cal+0x168>)
 800a076:	781b      	ldrb	r3, [r3, #0]
 800a078:	2b62      	cmp	r3, #98	@ 0x62
 800a07a:	d908      	bls.n	800a08e <Dur_hms_cal+0x5e>
	{
		hou = 99;
 800a07c:	4b46      	ldr	r3, [pc, #280]	@ (800a198 <Dur_hms_cal+0x168>)
 800a07e:	2263      	movs	r2, #99	@ 0x63
 800a080:	701a      	strb	r2, [r3, #0]
		min = 59;
 800a082:	4b44      	ldr	r3, [pc, #272]	@ (800a194 <Dur_hms_cal+0x164>)
 800a084:	223b      	movs	r2, #59	@ 0x3b
 800a086:	701a      	strb	r2, [r3, #0]
		sec = 59;
 800a088:	4b41      	ldr	r3, [pc, #260]	@ (800a190 <Dur_hms_cal+0x160>)
 800a08a:	223b      	movs	r2, #59	@ 0x3b
 800a08c:	701a      	strb	r2, [r3, #0]
	}

	sec_1 = (sec / 1) % 10 + 0x30;
 800a08e:	4b40      	ldr	r3, [pc, #256]	@ (800a190 <Dur_hms_cal+0x160>)
 800a090:	781b      	ldrb	r3, [r3, #0]
 800a092:	210a      	movs	r1, #10
 800a094:	0018      	movs	r0, r3
 800a096:	f7f6 f8cd 	bl	8000234 <__aeabi_uidivmod>
 800a09a:	000b      	movs	r3, r1
 800a09c:	b2db      	uxtb	r3, r3
 800a09e:	3330      	adds	r3, #48	@ 0x30
 800a0a0:	b29a      	uxth	r2, r3
 800a0a2:	4b3e      	ldr	r3, [pc, #248]	@ (800a19c <Dur_hms_cal+0x16c>)
 800a0a4:	801a      	strh	r2, [r3, #0]
	sec_10 = (sec / 10) % 10 + 0x30;
 800a0a6:	4b3a      	ldr	r3, [pc, #232]	@ (800a190 <Dur_hms_cal+0x160>)
 800a0a8:	781b      	ldrb	r3, [r3, #0]
 800a0aa:	210a      	movs	r1, #10
 800a0ac:	0018      	movs	r0, r3
 800a0ae:	f7f6 f83b 	bl	8000128 <__udivsi3>
 800a0b2:	0003      	movs	r3, r0
 800a0b4:	b2db      	uxtb	r3, r3
 800a0b6:	210a      	movs	r1, #10
 800a0b8:	0018      	movs	r0, r3
 800a0ba:	f7f6 f8bb 	bl	8000234 <__aeabi_uidivmod>
 800a0be:	000b      	movs	r3, r1
 800a0c0:	b2db      	uxtb	r3, r3
 800a0c2:	3330      	adds	r3, #48	@ 0x30
 800a0c4:	b29a      	uxth	r2, r3
 800a0c6:	4b36      	ldr	r3, [pc, #216]	@ (800a1a0 <Dur_hms_cal+0x170>)
 800a0c8:	801a      	strh	r2, [r3, #0]
	min_1 = (min / 1) % 10 + 0x30;
 800a0ca:	4b32      	ldr	r3, [pc, #200]	@ (800a194 <Dur_hms_cal+0x164>)
 800a0cc:	781b      	ldrb	r3, [r3, #0]
 800a0ce:	210a      	movs	r1, #10
 800a0d0:	0018      	movs	r0, r3
 800a0d2:	f7f6 f8af 	bl	8000234 <__aeabi_uidivmod>
 800a0d6:	000b      	movs	r3, r1
 800a0d8:	b2db      	uxtb	r3, r3
 800a0da:	3330      	adds	r3, #48	@ 0x30
 800a0dc:	b29a      	uxth	r2, r3
 800a0de:	4b31      	ldr	r3, [pc, #196]	@ (800a1a4 <Dur_hms_cal+0x174>)
 800a0e0:	801a      	strh	r2, [r3, #0]
	min_10 = (min / 10) % 10 + 0x30;
 800a0e2:	4b2c      	ldr	r3, [pc, #176]	@ (800a194 <Dur_hms_cal+0x164>)
 800a0e4:	781b      	ldrb	r3, [r3, #0]
 800a0e6:	210a      	movs	r1, #10
 800a0e8:	0018      	movs	r0, r3
 800a0ea:	f7f6 f81d 	bl	8000128 <__udivsi3>
 800a0ee:	0003      	movs	r3, r0
 800a0f0:	b2db      	uxtb	r3, r3
 800a0f2:	210a      	movs	r1, #10
 800a0f4:	0018      	movs	r0, r3
 800a0f6:	f7f6 f89d 	bl	8000234 <__aeabi_uidivmod>
 800a0fa:	000b      	movs	r3, r1
 800a0fc:	b2db      	uxtb	r3, r3
 800a0fe:	3330      	adds	r3, #48	@ 0x30
 800a100:	b29a      	uxth	r2, r3
 800a102:	4b29      	ldr	r3, [pc, #164]	@ (800a1a8 <Dur_hms_cal+0x178>)
 800a104:	801a      	strh	r2, [r3, #0]
	hou_1 = (hou / 1) % 10 + 0x30;
 800a106:	4b24      	ldr	r3, [pc, #144]	@ (800a198 <Dur_hms_cal+0x168>)
 800a108:	781b      	ldrb	r3, [r3, #0]
 800a10a:	210a      	movs	r1, #10
 800a10c:	0018      	movs	r0, r3
 800a10e:	f7f6 f891 	bl	8000234 <__aeabi_uidivmod>
 800a112:	000b      	movs	r3, r1
 800a114:	b2db      	uxtb	r3, r3
 800a116:	3330      	adds	r3, #48	@ 0x30
 800a118:	b29a      	uxth	r2, r3
 800a11a:	4b24      	ldr	r3, [pc, #144]	@ (800a1ac <Dur_hms_cal+0x17c>)
 800a11c:	801a      	strh	r2, [r3, #0]
	hou_10 = (hou / 10) % 10 + 0x30;
 800a11e:	4b1e      	ldr	r3, [pc, #120]	@ (800a198 <Dur_hms_cal+0x168>)
 800a120:	781b      	ldrb	r3, [r3, #0]
 800a122:	210a      	movs	r1, #10
 800a124:	0018      	movs	r0, r3
 800a126:	f7f5 ffff 	bl	8000128 <__udivsi3>
 800a12a:	0003      	movs	r3, r0
 800a12c:	b2db      	uxtb	r3, r3
 800a12e:	210a      	movs	r1, #10
 800a130:	0018      	movs	r0, r3
 800a132:	f7f6 f87f 	bl	8000234 <__aeabi_uidivmod>
 800a136:	000b      	movs	r3, r1
 800a138:	b2db      	uxtb	r3, r3
 800a13a:	3330      	adds	r3, #48	@ 0x30
 800a13c:	b29a      	uxth	r2, r3
 800a13e:	4b1c      	ldr	r3, [pc, #112]	@ (800a1b0 <Dur_hms_cal+0x180>)
 800a140:	801a      	strh	r2, [r3, #0]

	Dur_HMS[13] = sec_1;
 800a142:	4b16      	ldr	r3, [pc, #88]	@ (800a19c <Dur_hms_cal+0x16c>)
 800a144:	881b      	ldrh	r3, [r3, #0]
 800a146:	b2da      	uxtb	r2, r3
 800a148:	4b1a      	ldr	r3, [pc, #104]	@ (800a1b4 <Dur_hms_cal+0x184>)
 800a14a:	735a      	strb	r2, [r3, #13]
	Dur_HMS[12] = sec_10;
 800a14c:	4b14      	ldr	r3, [pc, #80]	@ (800a1a0 <Dur_hms_cal+0x170>)
 800a14e:	881b      	ldrh	r3, [r3, #0]
 800a150:	b2da      	uxtb	r2, r3
 800a152:	4b18      	ldr	r3, [pc, #96]	@ (800a1b4 <Dur_hms_cal+0x184>)
 800a154:	731a      	strb	r2, [r3, #12]
	Dur_HMS[10] = min_1;
 800a156:	4b13      	ldr	r3, [pc, #76]	@ (800a1a4 <Dur_hms_cal+0x174>)
 800a158:	881b      	ldrh	r3, [r3, #0]
 800a15a:	b2da      	uxtb	r2, r3
 800a15c:	4b15      	ldr	r3, [pc, #84]	@ (800a1b4 <Dur_hms_cal+0x184>)
 800a15e:	729a      	strb	r2, [r3, #10]
	Dur_HMS[9] = min_10;
 800a160:	4b11      	ldr	r3, [pc, #68]	@ (800a1a8 <Dur_hms_cal+0x178>)
 800a162:	881b      	ldrh	r3, [r3, #0]
 800a164:	b2da      	uxtb	r2, r3
 800a166:	4b13      	ldr	r3, [pc, #76]	@ (800a1b4 <Dur_hms_cal+0x184>)
 800a168:	725a      	strb	r2, [r3, #9]
	Dur_HMS[7] = hou_1;
 800a16a:	4b10      	ldr	r3, [pc, #64]	@ (800a1ac <Dur_hms_cal+0x17c>)
 800a16c:	881b      	ldrh	r3, [r3, #0]
 800a16e:	b2da      	uxtb	r2, r3
 800a170:	4b10      	ldr	r3, [pc, #64]	@ (800a1b4 <Dur_hms_cal+0x184>)
 800a172:	71da      	strb	r2, [r3, #7]
	Dur_HMS[6] = hou_10;
 800a174:	4b0e      	ldr	r3, [pc, #56]	@ (800a1b0 <Dur_hms_cal+0x180>)
 800a176:	881b      	ldrh	r3, [r3, #0]
 800a178:	b2da      	uxtb	r2, r3
 800a17a:	4b0e      	ldr	r3, [pc, #56]	@ (800a1b4 <Dur_hms_cal+0x184>)
 800a17c:	719a      	strb	r2, [r3, #6]

	HAL_UART_Transmit(&huart1, Dur_HMS, 14, 0x20);
 800a17e:	490d      	ldr	r1, [pc, #52]	@ (800a1b4 <Dur_hms_cal+0x184>)
 800a180:	480d      	ldr	r0, [pc, #52]	@ (800a1b8 <Dur_hms_cal+0x188>)
 800a182:	2320      	movs	r3, #32
 800a184:	220e      	movs	r2, #14
 800a186:	f009 f803 	bl	8013190 <HAL_UART_Transmit>
}
 800a18a:	46c0      	nop			@ (mov r8, r8)
 800a18c:	46bd      	mov	sp, r7
 800a18e:	bd80      	pop	{r7, pc}
 800a190:	20000ac0 	.word	0x20000ac0
 800a194:	20000ac1 	.word	0x20000ac1
 800a198:	20000ac2 	.word	0x20000ac2
 800a19c:	20000ac4 	.word	0x20000ac4
 800a1a0:	20000ac6 	.word	0x20000ac6
 800a1a4:	20000ac8 	.word	0x20000ac8
 800a1a8:	20000aca 	.word	0x20000aca
 800a1ac:	20000acc 	.word	0x20000acc
 800a1b0:	20000ace 	.word	0x20000ace
 800a1b4:	2000005c 	.word	0x2000005c
 800a1b8:	20000658 	.word	0x20000658

0800a1bc <Read_Pulse>:

void Read_Pulse(void)
{
 800a1bc:	b580      	push	{r7, lr}
 800a1be:	af00      	add	r7, sp, #0
	//change Width_min from 6000 to 2000
	if ((Width != 0) && (Width >= 10000 || Width <= 2000))
 800a1c0:	4b2e      	ldr	r3, [pc, #184]	@ (800a27c <Read_Pulse+0xc0>)
 800a1c2:	681b      	ldr	r3, [r3, #0]
 800a1c4:	2b00      	cmp	r3, #0
 800a1c6:	d00d      	beq.n	800a1e4 <Read_Pulse+0x28>
 800a1c8:	4b2c      	ldr	r3, [pc, #176]	@ (800a27c <Read_Pulse+0xc0>)
 800a1ca:	681b      	ldr	r3, [r3, #0]
 800a1cc:	4a2c      	ldr	r2, [pc, #176]	@ (800a280 <Read_Pulse+0xc4>)
 800a1ce:	4293      	cmp	r3, r2
 800a1d0:	d805      	bhi.n	800a1de <Read_Pulse+0x22>
 800a1d2:	4b2a      	ldr	r3, [pc, #168]	@ (800a27c <Read_Pulse+0xc0>)
 800a1d4:	681a      	ldr	r2, [r3, #0]
 800a1d6:	23fa      	movs	r3, #250	@ 0xfa
 800a1d8:	00db      	lsls	r3, r3, #3
 800a1da:	429a      	cmp	r2, r3
 800a1dc:	d802      	bhi.n	800a1e4 <Read_Pulse+0x28>
	{
		last_pulse = 1;
 800a1de:	4b29      	ldr	r3, [pc, #164]	@ (800a284 <Read_Pulse+0xc8>)
 800a1e0:	2201      	movs	r2, #1
 800a1e2:	701a      	strb	r2, [r3, #0]
	}

	if ((Width != 0) && (Width >= 10000 || Width <= 2000) && (last_pulse == 1))
 800a1e4:	4b25      	ldr	r3, [pc, #148]	@ (800a27c <Read_Pulse+0xc0>)
 800a1e6:	681b      	ldr	r3, [r3, #0]
 800a1e8:	2b00      	cmp	r3, #0
 800a1ea:	d015      	beq.n	800a218 <Read_Pulse+0x5c>
 800a1ec:	4b23      	ldr	r3, [pc, #140]	@ (800a27c <Read_Pulse+0xc0>)
 800a1ee:	681b      	ldr	r3, [r3, #0]
 800a1f0:	4a23      	ldr	r2, [pc, #140]	@ (800a280 <Read_Pulse+0xc4>)
 800a1f2:	4293      	cmp	r3, r2
 800a1f4:	d805      	bhi.n	800a202 <Read_Pulse+0x46>
 800a1f6:	4b21      	ldr	r3, [pc, #132]	@ (800a27c <Read_Pulse+0xc0>)
 800a1f8:	681a      	ldr	r2, [r3, #0]
 800a1fa:	23fa      	movs	r3, #250	@ 0xfa
 800a1fc:	00db      	lsls	r3, r3, #3
 800a1fe:	429a      	cmp	r2, r3
 800a200:	d80a      	bhi.n	800a218 <Read_Pulse+0x5c>
 800a202:	4b20      	ldr	r3, [pc, #128]	@ (800a284 <Read_Pulse+0xc8>)
 800a204:	781b      	ldrb	r3, [r3, #0]
 800a206:	2b01      	cmp	r3, #1
 800a208:	d106      	bne.n	800a218 <Read_Pulse+0x5c>
	{
		Tamper_Counter++;
 800a20a:	4b1f      	ldr	r3, [pc, #124]	@ (800a288 <Read_Pulse+0xcc>)
 800a20c:	781b      	ldrb	r3, [r3, #0]
 800a20e:	3301      	adds	r3, #1
 800a210:	b2da      	uxtb	r2, r3
 800a212:	4b1d      	ldr	r3, [pc, #116]	@ (800a288 <Read_Pulse+0xcc>)
 800a214:	701a      	strb	r2, [r3, #0]
 800a216:	e02e      	b.n	800a276 <Read_Pulse+0xba>
	}
	else if (Speed >= Speed_max) //150
 800a218:	4b1c      	ldr	r3, [pc, #112]	@ (800a28c <Read_Pulse+0xd0>)
 800a21a:	881b      	ldrh	r3, [r3, #0]
 800a21c:	0018      	movs	r0, r3
 800a21e:	f7f7 f905 	bl	800142c <__aeabi_i2f>
 800a222:	1c02      	adds	r2, r0, #0
 800a224:	4b1a      	ldr	r3, [pc, #104]	@ (800a290 <Read_Pulse+0xd4>)
 800a226:	681b      	ldr	r3, [r3, #0]
 800a228:	1c19      	adds	r1, r3, #0
 800a22a:	1c10      	adds	r0, r2, #0
 800a22c:	f7f6 f94c 	bl	80004c8 <__aeabi_fcmple>
 800a230:	1e03      	subs	r3, r0, #0
 800a232:	d006      	beq.n	800a242 <Read_Pulse+0x86>
	{
		Tamper_Counter++;
 800a234:	4b14      	ldr	r3, [pc, #80]	@ (800a288 <Read_Pulse+0xcc>)
 800a236:	781b      	ldrb	r3, [r3, #0]
 800a238:	3301      	adds	r3, #1
 800a23a:	b2da      	uxtb	r2, r3
 800a23c:	4b12      	ldr	r3, [pc, #72]	@ (800a288 <Read_Pulse+0xcc>)
 800a23e:	701a      	strb	r2, [r3, #0]
	else
	{
		last_pulse = 0;
		Tamper_Counter = 0;
	}
}
 800a240:	e019      	b.n	800a276 <Read_Pulse+0xba>
	else if (flag_tester && (Speed >= 120))
 800a242:	4b14      	ldr	r3, [pc, #80]	@ (800a294 <Read_Pulse+0xd8>)
 800a244:	781b      	ldrb	r3, [r3, #0]
 800a246:	2b00      	cmp	r3, #0
 800a248:	d00e      	beq.n	800a268 <Read_Pulse+0xac>
 800a24a:	4b11      	ldr	r3, [pc, #68]	@ (800a290 <Read_Pulse+0xd4>)
 800a24c:	681b      	ldr	r3, [r3, #0]
 800a24e:	4912      	ldr	r1, [pc, #72]	@ (800a298 <Read_Pulse+0xdc>)
 800a250:	1c18      	adds	r0, r3, #0
 800a252:	f7f6 f94d 	bl	80004f0 <__aeabi_fcmpge>
 800a256:	1e03      	subs	r3, r0, #0
 800a258:	d006      	beq.n	800a268 <Read_Pulse+0xac>
		Tamper_Counter++;
 800a25a:	4b0b      	ldr	r3, [pc, #44]	@ (800a288 <Read_Pulse+0xcc>)
 800a25c:	781b      	ldrb	r3, [r3, #0]
 800a25e:	3301      	adds	r3, #1
 800a260:	b2da      	uxtb	r2, r3
 800a262:	4b09      	ldr	r3, [pc, #36]	@ (800a288 <Read_Pulse+0xcc>)
 800a264:	701a      	strb	r2, [r3, #0]
 800a266:	e006      	b.n	800a276 <Read_Pulse+0xba>
		last_pulse = 0;
 800a268:	4b06      	ldr	r3, [pc, #24]	@ (800a284 <Read_Pulse+0xc8>)
 800a26a:	2200      	movs	r2, #0
 800a26c:	701a      	strb	r2, [r3, #0]
		Tamper_Counter = 0;
 800a26e:	4b06      	ldr	r3, [pc, #24]	@ (800a288 <Read_Pulse+0xcc>)
 800a270:	2200      	movs	r2, #0
 800a272:	701a      	strb	r2, [r3, #0]
}
 800a274:	e7ff      	b.n	800a276 <Read_Pulse+0xba>
 800a276:	46c0      	nop			@ (mov r8, r8)
 800a278:	46bd      	mov	sp, r7
 800a27a:	bd80      	pop	{r7, pc}
 800a27c:	20000cb4 	.word	0x20000cb4
 800a280:	0000270f 	.word	0x0000270f
 800a284:	20000d40 	.word	0x20000d40
 800a288:	20000d3f 	.word	0x20000d3f
 800a28c:	20000242 	.word	0x20000242
 800a290:	20000cdc 	.word	0x20000cdc
 800a294:	200033db 	.word	0x200033db
 800a298:	42f00000 	.word	0x42f00000

0800a29c <Read_Distance>:

void Read_Distance(void)
{
 800a29c:	b5b0      	push	{r4, r5, r7, lr}
 800a29e:	af00      	add	r7, sp, #0
	Distance = (float) (counter * 1.0 / ck);
 800a2a0:	4b1f      	ldr	r3, [pc, #124]	@ (800a320 <Read_Distance+0x84>)
 800a2a2:	681b      	ldr	r3, [r3, #0]
 800a2a4:	0018      	movs	r0, r3
 800a2a6:	f7f8 ffc5 	bl	8003234 <__aeabi_ui2d>
 800a2aa:	0004      	movs	r4, r0
 800a2ac:	000d      	movs	r5, r1
 800a2ae:	4b1d      	ldr	r3, [pc, #116]	@ (800a324 <Read_Distance+0x88>)
 800a2b0:	881b      	ldrh	r3, [r3, #0]
 800a2b2:	0018      	movs	r0, r3
 800a2b4:	f7f8 ff90 	bl	80031d8 <__aeabi_i2d>
 800a2b8:	0002      	movs	r2, r0
 800a2ba:	000b      	movs	r3, r1
 800a2bc:	0020      	movs	r0, r4
 800a2be:	0029      	movs	r1, r5
 800a2c0:	f7f7 fca6 	bl	8001c10 <__aeabi_ddiv>
 800a2c4:	0002      	movs	r2, r0
 800a2c6:	000b      	movs	r3, r1
 800a2c8:	0010      	movs	r0, r2
 800a2ca:	0019      	movs	r1, r3
 800a2cc:	f7f9 f81e 	bl	800330c <__aeabi_d2f>
 800a2d0:	1c02      	adds	r2, r0, #0
 800a2d2:	4b15      	ldr	r3, [pc, #84]	@ (800a328 <Read_Distance+0x8c>)
 800a2d4:	601a      	str	r2, [r3, #0]
	distance = (float) (counter * 1000.0 / ck);
 800a2d6:	4b12      	ldr	r3, [pc, #72]	@ (800a320 <Read_Distance+0x84>)
 800a2d8:	681b      	ldr	r3, [r3, #0]
 800a2da:	0018      	movs	r0, r3
 800a2dc:	f7f8 ffaa 	bl	8003234 <__aeabi_ui2d>
 800a2e0:	2200      	movs	r2, #0
 800a2e2:	4b12      	ldr	r3, [pc, #72]	@ (800a32c <Read_Distance+0x90>)
 800a2e4:	f7f8 f8d8 	bl	8002498 <__aeabi_dmul>
 800a2e8:	0002      	movs	r2, r0
 800a2ea:	000b      	movs	r3, r1
 800a2ec:	0014      	movs	r4, r2
 800a2ee:	001d      	movs	r5, r3
 800a2f0:	4b0c      	ldr	r3, [pc, #48]	@ (800a324 <Read_Distance+0x88>)
 800a2f2:	881b      	ldrh	r3, [r3, #0]
 800a2f4:	0018      	movs	r0, r3
 800a2f6:	f7f8 ff6f 	bl	80031d8 <__aeabi_i2d>
 800a2fa:	0002      	movs	r2, r0
 800a2fc:	000b      	movs	r3, r1
 800a2fe:	0020      	movs	r0, r4
 800a300:	0029      	movs	r1, r5
 800a302:	f7f7 fc85 	bl	8001c10 <__aeabi_ddiv>
 800a306:	0002      	movs	r2, r0
 800a308:	000b      	movs	r3, r1
 800a30a:	0010      	movs	r0, r2
 800a30c:	0019      	movs	r1, r3
 800a30e:	f7f8 fffd 	bl	800330c <__aeabi_d2f>
 800a312:	1c02      	adds	r2, r0, #0
 800a314:	4b06      	ldr	r3, [pc, #24]	@ (800a330 <Read_Distance+0x94>)
 800a316:	601a      	str	r2, [r3, #0]
}
 800a318:	46c0      	nop			@ (mov r8, r8)
 800a31a:	46bd      	mov	sp, r7
 800a31c:	bdb0      	pop	{r4, r5, r7, pc}
 800a31e:	46c0      	nop			@ (mov r8, r8)
 800a320:	20000ce8 	.word	0x20000ce8
 800a324:	2000023e 	.word	0x2000023e
 800a328:	20000ce0 	.word	0x20000ce0
 800a32c:	408f4000 	.word	0x408f4000
 800a330:	20000ce4 	.word	0x20000ce4

0800a334 <Read_Speed>:

void Read_Speed(void)
{
 800a334:	b580      	push	{r7, lr}
 800a336:	af00      	add	r7, sp, #0
	if(Difference != 0)
 800a338:	4b13      	ldr	r3, [pc, #76]	@ (800a388 <Read_Speed+0x54>)
 800a33a:	681b      	ldr	r3, [r3, #0]
 800a33c:	2b00      	cmp	r3, #0
 800a33e:	d01c      	beq.n	800a37a <Read_Speed+0x46>
	{
//		Speed_x = ((float) (1000000 / ck) / Difference) * 3.6;
//		Difference = 0;
		Speed = ((float) (counter - last_counter) * 3.6);
 800a340:	4b12      	ldr	r3, [pc, #72]	@ (800a38c <Read_Speed+0x58>)
 800a342:	681a      	ldr	r2, [r3, #0]
 800a344:	4b12      	ldr	r3, [pc, #72]	@ (800a390 <Read_Speed+0x5c>)
 800a346:	681b      	ldr	r3, [r3, #0]
 800a348:	1ad3      	subs	r3, r2, r3
 800a34a:	0018      	movs	r0, r3
 800a34c:	f7f7 f8ba 	bl	80014c4 <__aeabi_ui2f>
 800a350:	1c03      	adds	r3, r0, #0
 800a352:	1c18      	adds	r0, r3, #0
 800a354:	f7f8 ff92 	bl	800327c <__aeabi_f2d>
 800a358:	4a0e      	ldr	r2, [pc, #56]	@ (800a394 <Read_Speed+0x60>)
 800a35a:	4b0f      	ldr	r3, [pc, #60]	@ (800a398 <Read_Speed+0x64>)
 800a35c:	f7f8 f89c 	bl	8002498 <__aeabi_dmul>
 800a360:	0002      	movs	r2, r0
 800a362:	000b      	movs	r3, r1
 800a364:	0010      	movs	r0, r2
 800a366:	0019      	movs	r1, r3
 800a368:	f7f8 ffd0 	bl	800330c <__aeabi_d2f>
 800a36c:	1c02      	adds	r2, r0, #0
 800a36e:	4b0b      	ldr	r3, [pc, #44]	@ (800a39c <Read_Speed+0x68>)
 800a370:	601a      	str	r2, [r3, #0]
		Difference = 0;
 800a372:	4b05      	ldr	r3, [pc, #20]	@ (800a388 <Read_Speed+0x54>)
 800a374:	2200      	movs	r2, #0
 800a376:	601a      	str	r2, [r3, #0]
	else
	{
		Speed = 0;
//		Speed_x = 0;
	}
}
 800a378:	e002      	b.n	800a380 <Read_Speed+0x4c>
		Speed = 0;
 800a37a:	4b08      	ldr	r3, [pc, #32]	@ (800a39c <Read_Speed+0x68>)
 800a37c:	2200      	movs	r2, #0
 800a37e:	601a      	str	r2, [r3, #0]
}
 800a380:	46c0      	nop			@ (mov r8, r8)
 800a382:	46bd      	mov	sp, r7
 800a384:	bd80      	pop	{r7, pc}
 800a386:	46c0      	nop			@ (mov r8, r8)
 800a388:	20000cb0 	.word	0x20000cb0
 800a38c:	20000ce8 	.word	0x20000ce8
 800a390:	20000cf0 	.word	0x20000cf0
 800a394:	cccccccd 	.word	0xcccccccd
 800a398:	400ccccc 	.word	0x400ccccc
 800a39c:	20000cdc 	.word	0x20000cdc

0800a3a0 <Fare_Calculation>:

void Fare_Calculation(void)
{
 800a3a0:	b590      	push	{r4, r7, lr}
 800a3a2:	b083      	sub	sp, #12
 800a3a4:	af00      	add	r7, sp, #0
	//anti-tampering check
	Read_Pulse();
 800a3a6:	f7ff ff09 	bl	800a1bc <Read_Pulse>
	Read_Distance();
 800a3aa:	f7ff ff77 	bl	800a29c <Read_Distance>
	Read_Speed();
 800a3ae:	f7ff ffc1 	bl	800a334 <Read_Speed>

	if (Tamper_Counter >= 5)
 800a3b2:	4bcc      	ldr	r3, [pc, #816]	@ (800a6e4 <Fare_Calculation+0x344>)
 800a3b4:	781b      	ldrb	r3, [r3, #0]
 800a3b6:	2b04      	cmp	r3, #4
 800a3b8:	d800      	bhi.n	800a3bc <Fare_Calculation+0x1c>
 800a3ba:	e0d7      	b.n	800a56c <Fare_Calculation+0x1cc>
	{
		//record tamper data to SD card
		//TAMPER
		SD_buffer[34] = 0x54;
 800a3bc:	4bca      	ldr	r3, [pc, #808]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a3be:	2222      	movs	r2, #34	@ 0x22
 800a3c0:	2154      	movs	r1, #84	@ 0x54
 800a3c2:	5499      	strb	r1, [r3, r2]
		SD_buffer[35] = 0x41;
 800a3c4:	4bc8      	ldr	r3, [pc, #800]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a3c6:	2223      	movs	r2, #35	@ 0x23
 800a3c8:	2141      	movs	r1, #65	@ 0x41
 800a3ca:	5499      	strb	r1, [r3, r2]
		SD_buffer[36] = 0x4D;
 800a3cc:	4bc6      	ldr	r3, [pc, #792]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a3ce:	2224      	movs	r2, #36	@ 0x24
 800a3d0:	214d      	movs	r1, #77	@ 0x4d
 800a3d2:	5499      	strb	r1, [r3, r2]
		SD_buffer[37] = 0x50;
 800a3d4:	4bc4      	ldr	r3, [pc, #784]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a3d6:	2225      	movs	r2, #37	@ 0x25
 800a3d8:	2150      	movs	r1, #80	@ 0x50
 800a3da:	5499      	strb	r1, [r3, r2]
		SD_buffer[38] = 0x45;
 800a3dc:	4bc2      	ldr	r3, [pc, #776]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a3de:	2226      	movs	r2, #38	@ 0x26
 800a3e0:	2145      	movs	r1, #69	@ 0x45
 800a3e2:	5499      	strb	r1, [r3, r2]
		SD_buffer[39] = 0x52;
 800a3e4:	4bc0      	ldr	r3, [pc, #768]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a3e6:	2227      	movs	r2, #39	@ 0x27
 800a3e8:	2152      	movs	r1, #82	@ 0x52
 800a3ea:	5499      	strb	r1, [r3, r2]
		SD_buffer[40] = 0x20;
 800a3ec:	4bbe      	ldr	r3, [pc, #760]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a3ee:	2228      	movs	r2, #40	@ 0x28
 800a3f0:	2120      	movs	r1, #32
 800a3f2:	5499      	strb	r1, [r3, r2]
		//speed & width
		speed_d = (Speed * 100) / 10;
 800a3f4:	4bbd      	ldr	r3, [pc, #756]	@ (800a6ec <Fare_Calculation+0x34c>)
 800a3f6:	681b      	ldr	r3, [r3, #0]
 800a3f8:	49bd      	ldr	r1, [pc, #756]	@ (800a6f0 <Fare_Calculation+0x350>)
 800a3fa:	1c18      	adds	r0, r3, #0
 800a3fc:	f7f6 fd14 	bl	8000e28 <__aeabi_fmul>
 800a400:	1c03      	adds	r3, r0, #0
 800a402:	49bc      	ldr	r1, [pc, #752]	@ (800a6f4 <Fare_Calculation+0x354>)
 800a404:	1c18      	adds	r0, r3, #0
 800a406:	f7f6 fb29 	bl	8000a5c <__aeabi_fdiv>
 800a40a:	1c03      	adds	r3, r0, #0
 800a40c:	1c18      	adds	r0, r3, #0
 800a40e:	f7f6 f899 	bl	8000544 <__aeabi_f2uiz>
 800a412:	0002      	movs	r2, r0
 800a414:	4bb8      	ldr	r3, [pc, #736]	@ (800a6f8 <Fare_Calculation+0x358>)
 800a416:	601a      	str	r2, [r3, #0]
		Dec2ASC(speed_d, speed_a);
 800a418:	4bb7      	ldr	r3, [pc, #732]	@ (800a6f8 <Fare_Calculation+0x358>)
 800a41a:	681b      	ldr	r3, [r3, #0]
 800a41c:	4ab7      	ldr	r2, [pc, #732]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a41e:	0011      	movs	r1, r2
 800a420:	0018      	movs	r0, r3
 800a422:	f000 fc29 	bl	800ac78 <Dec2ASC>
		if (speed_a[4] == 0)
 800a426:	4bb5      	ldr	r3, [pc, #724]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a428:	791b      	ldrb	r3, [r3, #4]
 800a42a:	2b00      	cmp	r3, #0
 800a42c:	d104      	bne.n	800a438 <Fare_Calculation+0x98>
			SD_buffer[41] = 0x20;
 800a42e:	4bae      	ldr	r3, [pc, #696]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a430:	2229      	movs	r2, #41	@ 0x29
 800a432:	2120      	movs	r1, #32
 800a434:	5499      	strb	r1, [r3, r2]
 800a436:	e004      	b.n	800a442 <Fare_Calculation+0xa2>
		else
			SD_buffer[41] = speed_a[4];
 800a438:	4bb0      	ldr	r3, [pc, #704]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a43a:	7919      	ldrb	r1, [r3, #4]
 800a43c:	4baa      	ldr	r3, [pc, #680]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a43e:	2229      	movs	r2, #41	@ 0x29
 800a440:	5499      	strb	r1, [r3, r2]
		if (speed_a[5] == 0)
 800a442:	4bae      	ldr	r3, [pc, #696]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a444:	795b      	ldrb	r3, [r3, #5]
 800a446:	2b00      	cmp	r3, #0
 800a448:	d104      	bne.n	800a454 <Fare_Calculation+0xb4>
			SD_buffer[42] = 0x20;
 800a44a:	4ba7      	ldr	r3, [pc, #668]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a44c:	222a      	movs	r2, #42	@ 0x2a
 800a44e:	2120      	movs	r1, #32
 800a450:	5499      	strb	r1, [r3, r2]
 800a452:	e004      	b.n	800a45e <Fare_Calculation+0xbe>
		else
			SD_buffer[42] = speed_a[5];
 800a454:	4ba9      	ldr	r3, [pc, #676]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a456:	7959      	ldrb	r1, [r3, #5]
 800a458:	4ba3      	ldr	r3, [pc, #652]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a45a:	222a      	movs	r2, #42	@ 0x2a
 800a45c:	5499      	strb	r1, [r3, r2]
		if (speed_a[6] == 0)
 800a45e:	4ba7      	ldr	r3, [pc, #668]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a460:	799b      	ldrb	r3, [r3, #6]
 800a462:	2b00      	cmp	r3, #0
 800a464:	d104      	bne.n	800a470 <Fare_Calculation+0xd0>
			SD_buffer[43] = 0x30;
 800a466:	4ba0      	ldr	r3, [pc, #640]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a468:	222b      	movs	r2, #43	@ 0x2b
 800a46a:	2130      	movs	r1, #48	@ 0x30
 800a46c:	5499      	strb	r1, [r3, r2]
 800a46e:	e004      	b.n	800a47a <Fare_Calculation+0xda>
		else
			SD_buffer[43] = speed_a[6];
 800a470:	4ba2      	ldr	r3, [pc, #648]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a472:	7999      	ldrb	r1, [r3, #6]
 800a474:	4b9c      	ldr	r3, [pc, #624]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a476:	222b      	movs	r2, #43	@ 0x2b
 800a478:	5499      	strb	r1, [r3, r2]
		SD_buffer[44] = 0x2E;
 800a47a:	4b9b      	ldr	r3, [pc, #620]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a47c:	222c      	movs	r2, #44	@ 0x2c
 800a47e:	212e      	movs	r1, #46	@ 0x2e
 800a480:	5499      	strb	r1, [r3, r2]
		SD_buffer[45] = speed_a[7];
 800a482:	4b9e      	ldr	r3, [pc, #632]	@ (800a6fc <Fare_Calculation+0x35c>)
 800a484:	79d9      	ldrb	r1, [r3, #7]
 800a486:	4b98      	ldr	r3, [pc, #608]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a488:	222d      	movs	r2, #45	@ 0x2d
 800a48a:	5499      	strb	r1, [r3, r2]
		SD_buffer[46] = 0x20;
 800a48c:	4b96      	ldr	r3, [pc, #600]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a48e:	222e      	movs	r2, #46	@ 0x2e
 800a490:	2120      	movs	r1, #32
 800a492:	5499      	strb	r1, [r3, r2]

		Dec2ASC(Width, width_a);
 800a494:	4b9a      	ldr	r3, [pc, #616]	@ (800a700 <Fare_Calculation+0x360>)
 800a496:	681b      	ldr	r3, [r3, #0]
 800a498:	4a9a      	ldr	r2, [pc, #616]	@ (800a704 <Fare_Calculation+0x364>)
 800a49a:	0011      	movs	r1, r2
 800a49c:	0018      	movs	r0, r3
 800a49e:	f000 fbeb 	bl	800ac78 <Dec2ASC>
		if (width_a[3] == 0)
 800a4a2:	4b98      	ldr	r3, [pc, #608]	@ (800a704 <Fare_Calculation+0x364>)
 800a4a4:	78db      	ldrb	r3, [r3, #3]
 800a4a6:	2b00      	cmp	r3, #0
 800a4a8:	d104      	bne.n	800a4b4 <Fare_Calculation+0x114>
			SD_buffer[47] = 0x20;
 800a4aa:	4b8f      	ldr	r3, [pc, #572]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4ac:	222f      	movs	r2, #47	@ 0x2f
 800a4ae:	2120      	movs	r1, #32
 800a4b0:	5499      	strb	r1, [r3, r2]
 800a4b2:	e004      	b.n	800a4be <Fare_Calculation+0x11e>
		else
			SD_buffer[47] = width_a[3];
 800a4b4:	4b93      	ldr	r3, [pc, #588]	@ (800a704 <Fare_Calculation+0x364>)
 800a4b6:	78d9      	ldrb	r1, [r3, #3]
 800a4b8:	4b8b      	ldr	r3, [pc, #556]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4ba:	222f      	movs	r2, #47	@ 0x2f
 800a4bc:	5499      	strb	r1, [r3, r2]
		SD_buffer[48] = width_a[4];
 800a4be:	4b91      	ldr	r3, [pc, #580]	@ (800a704 <Fare_Calculation+0x364>)
 800a4c0:	7919      	ldrb	r1, [r3, #4]
 800a4c2:	4b89      	ldr	r3, [pc, #548]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4c4:	2230      	movs	r2, #48	@ 0x30
 800a4c6:	5499      	strb	r1, [r3, r2]
		SD_buffer[49] = width_a[5];
 800a4c8:	4b8e      	ldr	r3, [pc, #568]	@ (800a704 <Fare_Calculation+0x364>)
 800a4ca:	7959      	ldrb	r1, [r3, #5]
 800a4cc:	4b86      	ldr	r3, [pc, #536]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4ce:	2231      	movs	r2, #49	@ 0x31
 800a4d0:	5499      	strb	r1, [r3, r2]
		SD_buffer[50] = width_a[6];
 800a4d2:	4b8c      	ldr	r3, [pc, #560]	@ (800a704 <Fare_Calculation+0x364>)
 800a4d4:	7999      	ldrb	r1, [r3, #6]
 800a4d6:	4b84      	ldr	r3, [pc, #528]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4d8:	2232      	movs	r2, #50	@ 0x32
 800a4da:	5499      	strb	r1, [r3, r2]
		SD_buffer[51] = width_a[7];
 800a4dc:	4b89      	ldr	r3, [pc, #548]	@ (800a704 <Fare_Calculation+0x364>)
 800a4de:	79d9      	ldrb	r1, [r3, #7]
 800a4e0:	4b81      	ldr	r3, [pc, #516]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4e2:	2233      	movs	r2, #51	@ 0x33
 800a4e4:	5499      	strb	r1, [r3, r2]
		SD_buffer[52] = 0x20;
 800a4e6:	4b80      	ldr	r3, [pc, #512]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4e8:	2234      	movs	r2, #52	@ 0x34
 800a4ea:	2120      	movs	r1, #32
 800a4ec:	5499      	strb	r1, [r3, r2]

		SD_buffer[53] = 0x0A;
 800a4ee:	4b7e      	ldr	r3, [pc, #504]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a4f0:	2235      	movs	r2, #53	@ 0x35
 800a4f2:	210a      	movs	r1, #10
 800a4f4:	5499      	strb	r1, [r3, r2]
		fresult = f_open(&fil, "tripDATA.txt", FA_OPEN_EXISTING | FA_READ | FA_WRITE);
 800a4f6:	4984      	ldr	r1, [pc, #528]	@ (800a708 <Fare_Calculation+0x368>)
 800a4f8:	4b84      	ldr	r3, [pc, #528]	@ (800a70c <Fare_Calculation+0x36c>)
 800a4fa:	2203      	movs	r2, #3
 800a4fc:	0018      	movs	r0, r3
 800a4fe:	f00d f9c3 	bl	8017888 <f_open>
 800a502:	0003      	movs	r3, r0
 800a504:	001a      	movs	r2, r3
 800a506:	4b82      	ldr	r3, [pc, #520]	@ (800a710 <Fare_Calculation+0x370>)
 800a508:	701a      	strb	r2, [r3, #0]
		fresult = f_lseek(&fil, f_size(&fil));
 800a50a:	4b80      	ldr	r3, [pc, #512]	@ (800a70c <Fare_Calculation+0x36c>)
 800a50c:	68da      	ldr	r2, [r3, #12]
 800a50e:	4b7f      	ldr	r3, [pc, #508]	@ (800a70c <Fare_Calculation+0x36c>)
 800a510:	0011      	movs	r1, r2
 800a512:	0018      	movs	r0, r3
 800a514:	f00d fe15 	bl	8018142 <f_lseek>
 800a518:	0003      	movs	r3, r0
 800a51a:	001a      	movs	r2, r3
 800a51c:	4b7c      	ldr	r3, [pc, #496]	@ (800a710 <Fare_Calculation+0x370>)
 800a51e:	701a      	strb	r2, [r3, #0]
//		fresult = f_puts("AB1234 A000001 2023-07-18 18:18:30 TAMPER 180.0 15000\n", &fil);
		char const * tp = (const char*)&SD_buffer;
 800a520:	4b71      	ldr	r3, [pc, #452]	@ (800a6e8 <Fare_Calculation+0x348>)
 800a522:	607b      	str	r3, [r7, #4]
		fresult = f_puts(tp, &fil);
 800a524:	4a79      	ldr	r2, [pc, #484]	@ (800a70c <Fare_Calculation+0x36c>)
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	0011      	movs	r1, r2
 800a52a:	0018      	movs	r0, r3
 800a52c:	f00e f8b4 	bl	8018698 <f_puts>
 800a530:	0003      	movs	r3, r0
 800a532:	b2da      	uxtb	r2, r3
 800a534:	4b76      	ldr	r3, [pc, #472]	@ (800a710 <Fare_Calculation+0x370>)
 800a536:	701a      	strb	r2, [r3, #0]
		f_close (&fil);
 800a538:	4b74      	ldr	r3, [pc, #464]	@ (800a70c <Fare_Calculation+0x36c>)
 800a53a:	0018      	movs	r0, r3
 800a53c:	f00d fdcd 	bl	80180da <f_close>
		clear_buffer();
 800a540:	f7f9 fce6 	bl	8003f10 <clear_buffer>

		Width = 0;
 800a544:	4b6e      	ldr	r3, [pc, #440]	@ (800a700 <Fare_Calculation+0x360>)
 800a546:	2200      	movs	r2, #0
 800a548:	601a      	str	r2, [r3, #0]
		Speed = 0;
 800a54a:	4b68      	ldr	r3, [pc, #416]	@ (800a6ec <Fare_Calculation+0x34c>)
 800a54c:	2200      	movs	r2, #0
 800a54e:	601a      	str	r2, [r3, #0]
//		Speed_x = 0;
		Tamper_Counter = 0;
 800a550:	4b64      	ldr	r3, [pc, #400]	@ (800a6e4 <Fare_Calculation+0x344>)
 800a552:	2200      	movs	r2, #0
 800a554:	701a      	strb	r2, [r3, #0]

		EventDebugLog("Before Normal Lock in Fare Calculation");
 800a556:	4b6f      	ldr	r3, [pc, #444]	@ (800a714 <Fare_Calculation+0x374>)
 800a558:	0018      	movs	r0, r3
 800a55a:	f7ff fbd5 	bl	8009d08 <EventDebugLog>
		Flag_Protect = TRUE;
 800a55e:	4b6e      	ldr	r3, [pc, #440]	@ (800a718 <Fare_Calculation+0x378>)
 800a560:	2201      	movs	r2, #1
 800a562:	701a      	strb	r2, [r3, #0]
		EventDebugLog("After Normal Lock in Fare Calculation");
 800a564:	4b6d      	ldr	r3, [pc, #436]	@ (800a71c <Fare_Calculation+0x37c>)
 800a566:	0018      	movs	r0, r3
 800a568:	f7ff fbce 	bl	8009d08 <EventDebugLog>
	}

	if (fare > Fare_reached || fabs(fare - Fare_reached) <= 1e-3)
 800a56c:	4b6c      	ldr	r3, [pc, #432]	@ (800a720 <Fare_Calculation+0x380>)
 800a56e:	681a      	ldr	r2, [r3, #0]
 800a570:	4b6c      	ldr	r3, [pc, #432]	@ (800a724 <Fare_Calculation+0x384>)
 800a572:	681b      	ldr	r3, [r3, #0]
 800a574:	1c19      	adds	r1, r3, #0
 800a576:	1c10      	adds	r0, r2, #0
 800a578:	f7f5 ffb0 	bl	80004dc <__aeabi_fcmpgt>
 800a57c:	1e03      	subs	r3, r0, #0
 800a57e:	d113      	bne.n	800a5a8 <Fare_Calculation+0x208>
 800a580:	4b67      	ldr	r3, [pc, #412]	@ (800a720 <Fare_Calculation+0x380>)
 800a582:	681a      	ldr	r2, [r3, #0]
 800a584:	4b67      	ldr	r3, [pc, #412]	@ (800a724 <Fare_Calculation+0x384>)
 800a586:	681b      	ldr	r3, [r3, #0]
 800a588:	1c19      	adds	r1, r3, #0
 800a58a:	1c10      	adds	r0, r2, #0
 800a58c:	f7f6 fd8a 	bl	80010a4 <__aeabi_fsub>
 800a590:	1c03      	adds	r3, r0, #0
 800a592:	005b      	lsls	r3, r3, #1
 800a594:	085b      	lsrs	r3, r3, #1
 800a596:	1c18      	adds	r0, r3, #0
 800a598:	f7f8 fe70 	bl	800327c <__aeabi_f2d>
 800a59c:	4a62      	ldr	r2, [pc, #392]	@ (800a728 <Fare_Calculation+0x388>)
 800a59e:	4b63      	ldr	r3, [pc, #396]	@ (800a72c <Fare_Calculation+0x38c>)
 800a5a0:	f7f5 ff58 	bl	8000454 <__aeabi_dcmple>
 800a5a4:	1e03      	subs	r3, r0, #0
 800a5a6:	d004      	beq.n	800a5b2 <Fare_Calculation+0x212>
		Fi = Fare_200m2; //T2
 800a5a8:	4b61      	ldr	r3, [pc, #388]	@ (800a730 <Fare_Calculation+0x390>)
 800a5aa:	681a      	ldr	r2, [r3, #0]
 800a5ac:	4b61      	ldr	r3, [pc, #388]	@ (800a734 <Fare_Calculation+0x394>)
 800a5ae:	601a      	str	r2, [r3, #0]
 800a5b0:	e026      	b.n	800a600 <Fare_Calculation+0x260>
	else if (fare > Fare_2km || fabs(fare - Fare_2km) <= 1e-3)
 800a5b2:	4b5b      	ldr	r3, [pc, #364]	@ (800a720 <Fare_Calculation+0x380>)
 800a5b4:	681a      	ldr	r2, [r3, #0]
 800a5b6:	4b60      	ldr	r3, [pc, #384]	@ (800a738 <Fare_Calculation+0x398>)
 800a5b8:	681b      	ldr	r3, [r3, #0]
 800a5ba:	1c19      	adds	r1, r3, #0
 800a5bc:	1c10      	adds	r0, r2, #0
 800a5be:	f7f5 ff8d 	bl	80004dc <__aeabi_fcmpgt>
 800a5c2:	1e03      	subs	r3, r0, #0
 800a5c4:	d113      	bne.n	800a5ee <Fare_Calculation+0x24e>
 800a5c6:	4b56      	ldr	r3, [pc, #344]	@ (800a720 <Fare_Calculation+0x380>)
 800a5c8:	681a      	ldr	r2, [r3, #0]
 800a5ca:	4b5b      	ldr	r3, [pc, #364]	@ (800a738 <Fare_Calculation+0x398>)
 800a5cc:	681b      	ldr	r3, [r3, #0]
 800a5ce:	1c19      	adds	r1, r3, #0
 800a5d0:	1c10      	adds	r0, r2, #0
 800a5d2:	f7f6 fd67 	bl	80010a4 <__aeabi_fsub>
 800a5d6:	1c03      	adds	r3, r0, #0
 800a5d8:	005b      	lsls	r3, r3, #1
 800a5da:	085b      	lsrs	r3, r3, #1
 800a5dc:	1c18      	adds	r0, r3, #0
 800a5de:	f7f8 fe4d 	bl	800327c <__aeabi_f2d>
 800a5e2:	4a51      	ldr	r2, [pc, #324]	@ (800a728 <Fare_Calculation+0x388>)
 800a5e4:	4b51      	ldr	r3, [pc, #324]	@ (800a72c <Fare_Calculation+0x38c>)
 800a5e6:	f7f5 ff35 	bl	8000454 <__aeabi_dcmple>
 800a5ea:	1e03      	subs	r3, r0, #0
 800a5ec:	d004      	beq.n	800a5f8 <Fare_Calculation+0x258>
		Fi = Fare_200m1; //T1;
 800a5ee:	4b53      	ldr	r3, [pc, #332]	@ (800a73c <Fare_Calculation+0x39c>)
 800a5f0:	681a      	ldr	r2, [r3, #0]
 800a5f2:	4b50      	ldr	r3, [pc, #320]	@ (800a734 <Fare_Calculation+0x394>)
 800a5f4:	601a      	str	r2, [r3, #0]
 800a5f6:	e003      	b.n	800a600 <Fare_Calculation+0x260>
	else
		Fi = Fare_200m0; //2.70; //2.35;
 800a5f8:	4b51      	ldr	r3, [pc, #324]	@ (800a740 <Fare_Calculation+0x3a0>)
 800a5fa:	681a      	ldr	r2, [r3, #0]
 800a5fc:	4b4d      	ldr	r3, [pc, #308]	@ (800a734 <Fare_Calculation+0x394>)
 800a5fe:	601a      	str	r2, [r3, #0]

	if (Speed <= Speed_co) //12
 800a600:	4b50      	ldr	r3, [pc, #320]	@ (800a744 <Fare_Calculation+0x3a4>)
 800a602:	881b      	ldrh	r3, [r3, #0]
 800a604:	0018      	movs	r0, r3
 800a606:	f7f6 ff11 	bl	800142c <__aeabi_i2f>
 800a60a:	1c02      	adds	r2, r0, #0
 800a60c:	4b37      	ldr	r3, [pc, #220]	@ (800a6ec <Fare_Calculation+0x34c>)
 800a60e:	681b      	ldr	r3, [r3, #0]
 800a610:	1c19      	adds	r1, r3, #0
 800a612:	1c10      	adds	r0, r2, #0
 800a614:	f7f5 ff6c 	bl	80004f0 <__aeabi_fcmpge>
 800a618:	1e03      	subs	r3, r0, #0
 800a61a:	d050      	beq.n	800a6be <Fare_Calculation+0x31e>
	{
		if(Drv_state == S_HIRED)
 800a61c:	4b4a      	ldr	r3, [pc, #296]	@ (800a748 <Fare_Calculation+0x3a8>)
 800a61e:	781b      	ldrb	r3, [r3, #0]
 800a620:	2b01      	cmp	r3, #1
 800a622:	d11f      	bne.n	800a664 <Fare_Calculation+0x2c4>
		{
			last_counter = counter;
 800a624:	4b49      	ldr	r3, [pc, #292]	@ (800a74c <Fare_Calculation+0x3ac>)
 800a626:	681a      	ldr	r2, [r3, #0]
 800a628:	4b49      	ldr	r3, [pc, #292]	@ (800a750 <Fare_Calculation+0x3b0>)
 800a62a:	601a      	str	r2, [r3, #0]
//			Fu+=4;
			Fu+=(float)ck/300;
 800a62c:	4b49      	ldr	r3, [pc, #292]	@ (800a754 <Fare_Calculation+0x3b4>)
 800a62e:	881b      	ldrh	r3, [r3, #0]
 800a630:	0018      	movs	r0, r3
 800a632:	f7f6 ff47 	bl	80014c4 <__aeabi_ui2f>
 800a636:	1c03      	adds	r3, r0, #0
 800a638:	4947      	ldr	r1, [pc, #284]	@ (800a758 <Fare_Calculation+0x3b8>)
 800a63a:	1c18      	adds	r0, r3, #0
 800a63c:	f7f6 fa0e 	bl	8000a5c <__aeabi_fdiv>
 800a640:	1c03      	adds	r3, r0, #0
 800a642:	1c1a      	adds	r2, r3, #0
 800a644:	4b45      	ldr	r3, [pc, #276]	@ (800a75c <Fare_Calculation+0x3bc>)
 800a646:	681b      	ldr	r3, [r3, #0]
 800a648:	1c19      	adds	r1, r3, #0
 800a64a:	1c10      	adds	r0, r2, #0
 800a64c:	f7f6 f87c 	bl	8000748 <__aeabi_fadd>
 800a650:	1c03      	adds	r3, r0, #0
 800a652:	1c1a      	adds	r2, r3, #0
 800a654:	4b41      	ldr	r3, [pc, #260]	@ (800a75c <Fare_Calculation+0x3bc>)
 800a656:	601a      	str	r2, [r3, #0]
			Ft++;
 800a658:	4b41      	ldr	r3, [pc, #260]	@ (800a760 <Fare_Calculation+0x3c0>)
 800a65a:	681b      	ldr	r3, [r3, #0]
 800a65c:	1c5a      	adds	r2, r3, #1
 800a65e:	4b40      	ldr	r3, [pc, #256]	@ (800a760 <Fare_Calculation+0x3c0>)
 800a660:	601a      	str	r2, [r3, #0]
 800a662:	e09e      	b.n	800a7a2 <Fare_Calculation+0x402>
		}
		else
		{
			Dt = counter - last_counter;
 800a664:	4b39      	ldr	r3, [pc, #228]	@ (800a74c <Fare_Calculation+0x3ac>)
 800a666:	681a      	ldr	r2, [r3, #0]
 800a668:	4b39      	ldr	r3, [pc, #228]	@ (800a750 <Fare_Calculation+0x3b0>)
 800a66a:	681b      	ldr	r3, [r3, #0]
 800a66c:	1ad2      	subs	r2, r2, r3
 800a66e:	4b3d      	ldr	r3, [pc, #244]	@ (800a764 <Fare_Calculation+0x3c4>)
 800a670:	601a      	str	r2, [r3, #0]
			DtX = Dt + DtX;
 800a672:	4b3c      	ldr	r3, [pc, #240]	@ (800a764 <Fare_Calculation+0x3c4>)
 800a674:	681a      	ldr	r2, [r3, #0]
 800a676:	4b3c      	ldr	r3, [pc, #240]	@ (800a768 <Fare_Calculation+0x3c8>)
 800a678:	681b      	ldr	r3, [r3, #0]
 800a67a:	18d2      	adds	r2, r2, r3
 800a67c:	4b3a      	ldr	r3, [pc, #232]	@ (800a768 <Fare_Calculation+0x3c8>)
 800a67e:	601a      	str	r2, [r3, #0]
			last_counter = counter;
 800a680:	4b32      	ldr	r3, [pc, #200]	@ (800a74c <Fare_Calculation+0x3ac>)
 800a682:	681a      	ldr	r2, [r3, #0]
 800a684:	4b32      	ldr	r3, [pc, #200]	@ (800a750 <Fare_Calculation+0x3b0>)
 800a686:	601a      	str	r2, [r3, #0]
			for (; DtX>0; DtX--)
 800a688:	e014      	b.n	800a6b4 <Fare_Calculation+0x314>
			{
				Fd++;
 800a68a:	4b38      	ldr	r3, [pc, #224]	@ (800a76c <Fare_Calculation+0x3cc>)
 800a68c:	681b      	ldr	r3, [r3, #0]
 800a68e:	1c5a      	adds	r2, r3, #1
 800a690:	4b36      	ldr	r3, [pc, #216]	@ (800a76c <Fare_Calculation+0x3cc>)
 800a692:	601a      	str	r2, [r3, #0]
				Fu++;
 800a694:	4b31      	ldr	r3, [pc, #196]	@ (800a75c <Fare_Calculation+0x3bc>)
 800a696:	681b      	ldr	r3, [r3, #0]
 800a698:	21fe      	movs	r1, #254	@ 0xfe
 800a69a:	0589      	lsls	r1, r1, #22
 800a69c:	1c18      	adds	r0, r3, #0
 800a69e:	f7f6 f853 	bl	8000748 <__aeabi_fadd>
 800a6a2:	1c03      	adds	r3, r0, #0
 800a6a4:	1c1a      	adds	r2, r3, #0
 800a6a6:	4b2d      	ldr	r3, [pc, #180]	@ (800a75c <Fare_Calculation+0x3bc>)
 800a6a8:	601a      	str	r2, [r3, #0]
			for (; DtX>0; DtX--)
 800a6aa:	4b2f      	ldr	r3, [pc, #188]	@ (800a768 <Fare_Calculation+0x3c8>)
 800a6ac:	681b      	ldr	r3, [r3, #0]
 800a6ae:	1e5a      	subs	r2, r3, #1
 800a6b0:	4b2d      	ldr	r3, [pc, #180]	@ (800a768 <Fare_Calculation+0x3c8>)
 800a6b2:	601a      	str	r2, [r3, #0]
 800a6b4:	4b2c      	ldr	r3, [pc, #176]	@ (800a768 <Fare_Calculation+0x3c8>)
 800a6b6:	681b      	ldr	r3, [r3, #0]
 800a6b8:	2b00      	cmp	r3, #0
 800a6ba:	d1e6      	bne.n	800a68a <Fare_Calculation+0x2ea>
 800a6bc:	e071      	b.n	800a7a2 <Fare_Calculation+0x402>
			}
		}
	}
	else
	{
		Dt = counter - last_counter;
 800a6be:	4b23      	ldr	r3, [pc, #140]	@ (800a74c <Fare_Calculation+0x3ac>)
 800a6c0:	681a      	ldr	r2, [r3, #0]
 800a6c2:	4b23      	ldr	r3, [pc, #140]	@ (800a750 <Fare_Calculation+0x3b0>)
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	1ad2      	subs	r2, r2, r3
 800a6c8:	4b26      	ldr	r3, [pc, #152]	@ (800a764 <Fare_Calculation+0x3c4>)
 800a6ca:	601a      	str	r2, [r3, #0]
		DtX = Dt + DtX;
 800a6cc:	4b25      	ldr	r3, [pc, #148]	@ (800a764 <Fare_Calculation+0x3c4>)
 800a6ce:	681a      	ldr	r2, [r3, #0]
 800a6d0:	4b25      	ldr	r3, [pc, #148]	@ (800a768 <Fare_Calculation+0x3c8>)
 800a6d2:	681b      	ldr	r3, [r3, #0]
 800a6d4:	18d2      	adds	r2, r2, r3
 800a6d6:	4b24      	ldr	r3, [pc, #144]	@ (800a768 <Fare_Calculation+0x3c8>)
 800a6d8:	601a      	str	r2, [r3, #0]
		last_counter = counter;
 800a6da:	4b1c      	ldr	r3, [pc, #112]	@ (800a74c <Fare_Calculation+0x3ac>)
 800a6dc:	681a      	ldr	r2, [r3, #0]
 800a6de:	4b1c      	ldr	r3, [pc, #112]	@ (800a750 <Fare_Calculation+0x3b0>)
 800a6e0:	601a      	str	r2, [r3, #0]
		for (; DtX>0; DtX--)
 800a6e2:	e05a      	b.n	800a79a <Fare_Calculation+0x3fa>
 800a6e4:	20000d3f 	.word	0x20000d3f
 800a6e8:	2000333c 	.word	0x2000333c
 800a6ec:	20000cdc 	.word	0x20000cdc
 800a6f0:	42c80000 	.word	0x42c80000
 800a6f4:	41200000 	.word	0x41200000
 800a6f8:	20000d44 	.word	0x20000d44
 800a6fc:	20000d48 	.word	0x20000d48
 800a700:	20000cb4 	.word	0x20000cb4
 800a704:	20000d50 	.word	0x20000d50
 800a708:	08019884 	.word	0x08019884
 800a70c:	20001f04 	.word	0x20001f04
 800a710:	20002f34 	.word	0x20002f34
 800a714:	08019cf8 	.word	0x08019cf8
 800a718:	20000d3d 	.word	0x20000d3d
 800a71c:	08019d20 	.word	0x08019d20
 800a720:	20000d14 	.word	0x20000d14
 800a724:	20000cc0 	.word	0x20000cc0
 800a728:	d2f1a9fc 	.word	0xd2f1a9fc
 800a72c:	3f50624d 	.word	0x3f50624d
 800a730:	20000cd0 	.word	0x20000cd0
 800a734:	20000cf8 	.word	0x20000cf8
 800a738:	20000cc4 	.word	0x20000cc4
 800a73c:	20000ccc 	.word	0x20000ccc
 800a740:	20000cc8 	.word	0x20000cc8
 800a744:	20000240 	.word	0x20000240
 800a748:	20000a72 	.word	0x20000a72
 800a74c:	20000ce8 	.word	0x20000ce8
 800a750:	20000cf0 	.word	0x20000cf0
 800a754:	2000023e 	.word	0x2000023e
 800a758:	43960000 	.word	0x43960000
 800a75c:	20000d04 	.word	0x20000d04
 800a760:	20000d08 	.word	0x20000d08
 800a764:	20000cfc 	.word	0x20000cfc
 800a768:	20000d00 	.word	0x20000d00
 800a76c:	20000d0c 	.word	0x20000d0c
		{
			Fd++;
 800a770:	4ba3      	ldr	r3, [pc, #652]	@ (800aa00 <Fare_Calculation+0x660>)
 800a772:	681b      	ldr	r3, [r3, #0]
 800a774:	1c5a      	adds	r2, r3, #1
 800a776:	4ba2      	ldr	r3, [pc, #648]	@ (800aa00 <Fare_Calculation+0x660>)
 800a778:	601a      	str	r2, [r3, #0]
			Fu++;
 800a77a:	4ba2      	ldr	r3, [pc, #648]	@ (800aa04 <Fare_Calculation+0x664>)
 800a77c:	681b      	ldr	r3, [r3, #0]
 800a77e:	21fe      	movs	r1, #254	@ 0xfe
 800a780:	0589      	lsls	r1, r1, #22
 800a782:	1c18      	adds	r0, r3, #0
 800a784:	f7f5 ffe0 	bl	8000748 <__aeabi_fadd>
 800a788:	1c03      	adds	r3, r0, #0
 800a78a:	1c1a      	adds	r2, r3, #0
 800a78c:	4b9d      	ldr	r3, [pc, #628]	@ (800aa04 <Fare_Calculation+0x664>)
 800a78e:	601a      	str	r2, [r3, #0]
		for (; DtX>0; DtX--)
 800a790:	4b9d      	ldr	r3, [pc, #628]	@ (800aa08 <Fare_Calculation+0x668>)
 800a792:	681b      	ldr	r3, [r3, #0]
 800a794:	1e5a      	subs	r2, r3, #1
 800a796:	4b9c      	ldr	r3, [pc, #624]	@ (800aa08 <Fare_Calculation+0x668>)
 800a798:	601a      	str	r2, [r3, #0]
 800a79a:	4b9b      	ldr	r3, [pc, #620]	@ (800aa08 <Fare_Calculation+0x668>)
 800a79c:	681b      	ldr	r3, [r3, #0]
 800a79e:	2b00      	cmp	r3, #0
 800a7a0:	d1e6      	bne.n	800a770 <Fare_Calculation+0x3d0>
		}
	}

	//check Fu
//	if (fabs(Fu - ((float)ck/5 + (float)ck/1000)) <= 1e-3 || Fu > ((float)ck/5 + (float)ck/1000))
	if (fabs(Fu - (float)ck/5) <= 1e-6 || Fu > (float)ck/5)
 800a7a2:	4b98      	ldr	r3, [pc, #608]	@ (800aa04 <Fare_Calculation+0x664>)
 800a7a4:	681c      	ldr	r4, [r3, #0]
 800a7a6:	4b99      	ldr	r3, [pc, #612]	@ (800aa0c <Fare_Calculation+0x66c>)
 800a7a8:	881b      	ldrh	r3, [r3, #0]
 800a7aa:	0018      	movs	r0, r3
 800a7ac:	f7f6 fe8a 	bl	80014c4 <__aeabi_ui2f>
 800a7b0:	1c03      	adds	r3, r0, #0
 800a7b2:	4997      	ldr	r1, [pc, #604]	@ (800aa10 <Fare_Calculation+0x670>)
 800a7b4:	1c18      	adds	r0, r3, #0
 800a7b6:	f7f6 f951 	bl	8000a5c <__aeabi_fdiv>
 800a7ba:	1c03      	adds	r3, r0, #0
 800a7bc:	1c19      	adds	r1, r3, #0
 800a7be:	1c20      	adds	r0, r4, #0
 800a7c0:	f7f6 fc70 	bl	80010a4 <__aeabi_fsub>
 800a7c4:	1c03      	adds	r3, r0, #0
 800a7c6:	005b      	lsls	r3, r3, #1
 800a7c8:	085b      	lsrs	r3, r3, #1
 800a7ca:	1c18      	adds	r0, r3, #0
 800a7cc:	f7f8 fd56 	bl	800327c <__aeabi_f2d>
 800a7d0:	4a90      	ldr	r2, [pc, #576]	@ (800aa14 <Fare_Calculation+0x674>)
 800a7d2:	4b91      	ldr	r3, [pc, #580]	@ (800aa18 <Fare_Calculation+0x678>)
 800a7d4:	f7f5 fe3e 	bl	8000454 <__aeabi_dcmple>
 800a7d8:	1e03      	subs	r3, r0, #0
 800a7da:	d113      	bne.n	800a804 <Fare_Calculation+0x464>
 800a7dc:	4b8b      	ldr	r3, [pc, #556]	@ (800aa0c <Fare_Calculation+0x66c>)
 800a7de:	881b      	ldrh	r3, [r3, #0]
 800a7e0:	0018      	movs	r0, r3
 800a7e2:	f7f6 fe6f 	bl	80014c4 <__aeabi_ui2f>
 800a7e6:	1c03      	adds	r3, r0, #0
 800a7e8:	4989      	ldr	r1, [pc, #548]	@ (800aa10 <Fare_Calculation+0x670>)
 800a7ea:	1c18      	adds	r0, r3, #0
 800a7ec:	f7f6 f936 	bl	8000a5c <__aeabi_fdiv>
 800a7f0:	1c03      	adds	r3, r0, #0
 800a7f2:	1c1a      	adds	r2, r3, #0
 800a7f4:	4b83      	ldr	r3, [pc, #524]	@ (800aa04 <Fare_Calculation+0x664>)
 800a7f6:	681b      	ldr	r3, [r3, #0]
 800a7f8:	1c19      	adds	r1, r3, #0
 800a7fa:	1c10      	adds	r0, r2, #0
 800a7fc:	f7f5 fe5a 	bl	80004b4 <__aeabi_fcmplt>
 800a800:	1e03      	subs	r3, r0, #0
 800a802:	d021      	beq.n	800a848 <Fare_Calculation+0x4a8>
	{
		fare = fare + Fi;
 800a804:	4b85      	ldr	r3, [pc, #532]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a806:	681a      	ldr	r2, [r3, #0]
 800a808:	4b85      	ldr	r3, [pc, #532]	@ (800aa20 <Fare_Calculation+0x680>)
 800a80a:	681b      	ldr	r3, [r3, #0]
 800a80c:	1c19      	adds	r1, r3, #0
 800a80e:	1c10      	adds	r0, r2, #0
 800a810:	f7f5 ff9a 	bl	8000748 <__aeabi_fadd>
 800a814:	1c03      	adds	r3, r0, #0
 800a816:	1c1a      	adds	r2, r3, #0
 800a818:	4b80      	ldr	r3, [pc, #512]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a81a:	601a      	str	r2, [r3, #0]
		Fu = Fu - ck/5;
 800a81c:	4b79      	ldr	r3, [pc, #484]	@ (800aa04 <Fare_Calculation+0x664>)
 800a81e:	681c      	ldr	r4, [r3, #0]
 800a820:	4b7a      	ldr	r3, [pc, #488]	@ (800aa0c <Fare_Calculation+0x66c>)
 800a822:	881b      	ldrh	r3, [r3, #0]
 800a824:	2105      	movs	r1, #5
 800a826:	0018      	movs	r0, r3
 800a828:	f7f5 fc7e 	bl	8000128 <__udivsi3>
 800a82c:	0003      	movs	r3, r0
 800a82e:	b29b      	uxth	r3, r3
 800a830:	0018      	movs	r0, r3
 800a832:	f7f6 fdfb 	bl	800142c <__aeabi_i2f>
 800a836:	1c03      	adds	r3, r0, #0
 800a838:	1c19      	adds	r1, r3, #0
 800a83a:	1c20      	adds	r0, r4, #0
 800a83c:	f7f6 fc32 	bl	80010a4 <__aeabi_fsub>
 800a840:	1c03      	adds	r3, r0, #0
 800a842:	1c1a      	adds	r2, r3, #0
 800a844:	4b6f      	ldr	r3, [pc, #444]	@ (800aa04 <Fare_Calculation+0x664>)
 800a846:	601a      	str	r2, [r3, #0]
	}

	fare_km = ((float)Fd / ck);
 800a848:	4b6d      	ldr	r3, [pc, #436]	@ (800aa00 <Fare_Calculation+0x660>)
 800a84a:	681b      	ldr	r3, [r3, #0]
 800a84c:	0018      	movs	r0, r3
 800a84e:	f7f6 fe39 	bl	80014c4 <__aeabi_ui2f>
 800a852:	1c04      	adds	r4, r0, #0
 800a854:	4b6d      	ldr	r3, [pc, #436]	@ (800aa0c <Fare_Calculation+0x66c>)
 800a856:	881b      	ldrh	r3, [r3, #0]
 800a858:	0018      	movs	r0, r3
 800a85a:	f7f6 fde7 	bl	800142c <__aeabi_i2f>
 800a85e:	1c03      	adds	r3, r0, #0
 800a860:	1c19      	adds	r1, r3, #0
 800a862:	1c20      	adds	r0, r4, #0
 800a864:	f7f6 f8fa 	bl	8000a5c <__aeabi_fdiv>
 800a868:	1c03      	adds	r3, r0, #0
 800a86a:	1c1a      	adds	r2, r3, #0
 800a86c:	4b6d      	ldr	r3, [pc, #436]	@ (800aa24 <Fare_Calculation+0x684>)
 800a86e:	601a      	str	r2, [r3, #0]
	fare_min = ((float)Ft / 60.0);
 800a870:	4b6d      	ldr	r3, [pc, #436]	@ (800aa28 <Fare_Calculation+0x688>)
 800a872:	681b      	ldr	r3, [r3, #0]
 800a874:	0018      	movs	r0, r3
 800a876:	f7f6 fe25 	bl	80014c4 <__aeabi_ui2f>
 800a87a:	1c03      	adds	r3, r0, #0
 800a87c:	496b      	ldr	r1, [pc, #428]	@ (800aa2c <Fare_Calculation+0x68c>)
 800a87e:	1c18      	adds	r0, r3, #0
 800a880:	f7f6 f8ec 	bl	8000a5c <__aeabi_fdiv>
 800a884:	1c03      	adds	r3, r0, #0
 800a886:	1c1a      	adds	r2, r3, #0
 800a888:	4b69      	ldr	r3, [pc, #420]	@ (800aa30 <Fare_Calculation+0x690>)
 800a88a:	601a      	str	r2, [r3, #0]

	if((Flag_2km == FALSE) && (((distance > 2000) || (fabs(distance-2000) <= 1e-3)) || ((fare>Fare_2km) || (fabs(fare-Fare_2km) <= 1e-3))))
 800a88c:	4b69      	ldr	r3, [pc, #420]	@ (800aa34 <Fare_Calculation+0x694>)
 800a88e:	781b      	ldrb	r3, [r3, #0]
 800a890:	2b00      	cmp	r3, #0
 800a892:	d14e      	bne.n	800a932 <Fare_Calculation+0x592>
 800a894:	4b68      	ldr	r3, [pc, #416]	@ (800aa38 <Fare_Calculation+0x698>)
 800a896:	681b      	ldr	r3, [r3, #0]
 800a898:	4968      	ldr	r1, [pc, #416]	@ (800aa3c <Fare_Calculation+0x69c>)
 800a89a:	1c18      	adds	r0, r3, #0
 800a89c:	f7f5 fe1e 	bl	80004dc <__aeabi_fcmpgt>
 800a8a0:	1e03      	subs	r3, r0, #0
 800a8a2:	d12f      	bne.n	800a904 <Fare_Calculation+0x564>
 800a8a4:	4b64      	ldr	r3, [pc, #400]	@ (800aa38 <Fare_Calculation+0x698>)
 800a8a6:	681b      	ldr	r3, [r3, #0]
 800a8a8:	4964      	ldr	r1, [pc, #400]	@ (800aa3c <Fare_Calculation+0x69c>)
 800a8aa:	1c18      	adds	r0, r3, #0
 800a8ac:	f7f6 fbfa 	bl	80010a4 <__aeabi_fsub>
 800a8b0:	1c03      	adds	r3, r0, #0
 800a8b2:	005b      	lsls	r3, r3, #1
 800a8b4:	085b      	lsrs	r3, r3, #1
 800a8b6:	1c18      	adds	r0, r3, #0
 800a8b8:	f7f8 fce0 	bl	800327c <__aeabi_f2d>
 800a8bc:	4a60      	ldr	r2, [pc, #384]	@ (800aa40 <Fare_Calculation+0x6a0>)
 800a8be:	4b61      	ldr	r3, [pc, #388]	@ (800aa44 <Fare_Calculation+0x6a4>)
 800a8c0:	f7f5 fdc8 	bl	8000454 <__aeabi_dcmple>
 800a8c4:	1e03      	subs	r3, r0, #0
 800a8c6:	d11d      	bne.n	800a904 <Fare_Calculation+0x564>
 800a8c8:	4b54      	ldr	r3, [pc, #336]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a8ca:	681a      	ldr	r2, [r3, #0]
 800a8cc:	4b5e      	ldr	r3, [pc, #376]	@ (800aa48 <Fare_Calculation+0x6a8>)
 800a8ce:	681b      	ldr	r3, [r3, #0]
 800a8d0:	1c19      	adds	r1, r3, #0
 800a8d2:	1c10      	adds	r0, r2, #0
 800a8d4:	f7f5 fe02 	bl	80004dc <__aeabi_fcmpgt>
 800a8d8:	1e03      	subs	r3, r0, #0
 800a8da:	d113      	bne.n	800a904 <Fare_Calculation+0x564>
 800a8dc:	4b4f      	ldr	r3, [pc, #316]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a8de:	681a      	ldr	r2, [r3, #0]
 800a8e0:	4b59      	ldr	r3, [pc, #356]	@ (800aa48 <Fare_Calculation+0x6a8>)
 800a8e2:	681b      	ldr	r3, [r3, #0]
 800a8e4:	1c19      	adds	r1, r3, #0
 800a8e6:	1c10      	adds	r0, r2, #0
 800a8e8:	f7f6 fbdc 	bl	80010a4 <__aeabi_fsub>
 800a8ec:	1c03      	adds	r3, r0, #0
 800a8ee:	005b      	lsls	r3, r3, #1
 800a8f0:	085b      	lsrs	r3, r3, #1
 800a8f2:	1c18      	adds	r0, r3, #0
 800a8f4:	f7f8 fcc2 	bl	800327c <__aeabi_f2d>
 800a8f8:	4a51      	ldr	r2, [pc, #324]	@ (800aa40 <Fare_Calculation+0x6a0>)
 800a8fa:	4b52      	ldr	r3, [pc, #328]	@ (800aa44 <Fare_Calculation+0x6a4>)
 800a8fc:	f7f5 fdaa 	bl	8000454 <__aeabi_dcmple>
 800a900:	1e03      	subs	r3, r0, #0
 800a902:	d016      	beq.n	800a932 <Fare_Calculation+0x592>
	{
		Flag_2km = TRUE;
 800a904:	4b4b      	ldr	r3, [pc, #300]	@ (800aa34 <Fare_Calculation+0x694>)
 800a906:	2201      	movs	r2, #1
 800a908:	701a      	strb	r2, [r3, #0]
		Fi = Fare_200m1; //T1
 800a90a:	4b50      	ldr	r3, [pc, #320]	@ (800aa4c <Fare_Calculation+0x6ac>)
 800a90c:	681a      	ldr	r2, [r3, #0]
 800a90e:	4b44      	ldr	r3, [pc, #272]	@ (800aa20 <Fare_Calculation+0x680>)
 800a910:	601a      	str	r2, [r3, #0]
		fare = Fare_2km;
 800a912:	4b4d      	ldr	r3, [pc, #308]	@ (800aa48 <Fare_Calculation+0x6a8>)
 800a914:	681a      	ldr	r2, [r3, #0]
 800a916:	4b41      	ldr	r3, [pc, #260]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a918:	601a      	str	r2, [r3, #0]
		fare = fare + Fi;
 800a91a:	4b40      	ldr	r3, [pc, #256]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a91c:	681a      	ldr	r2, [r3, #0]
 800a91e:	4b40      	ldr	r3, [pc, #256]	@ (800aa20 <Fare_Calculation+0x680>)
 800a920:	681b      	ldr	r3, [r3, #0]
 800a922:	1c19      	adds	r1, r3, #0
 800a924:	1c10      	adds	r0, r2, #0
 800a926:	f7f5 ff0f 	bl	8000748 <__aeabi_fadd>
 800a92a:	1c03      	adds	r3, r0, #0
 800a92c:	1c1a      	adds	r2, r3, #0
 800a92e:	4b3b      	ldr	r3, [pc, #236]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a930:	601a      	str	r2, [r3, #0]
	}

	//check fare for HMI fare display - fare_d
	if ((fare > Fare_2km) || fabs(fare-Fare_2km) <= 1e-3)
 800a932:	4b3a      	ldr	r3, [pc, #232]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a934:	681a      	ldr	r2, [r3, #0]
 800a936:	4b44      	ldr	r3, [pc, #272]	@ (800aa48 <Fare_Calculation+0x6a8>)
 800a938:	681b      	ldr	r3, [r3, #0]
 800a93a:	1c19      	adds	r1, r3, #0
 800a93c:	1c10      	adds	r0, r2, #0
 800a93e:	f7f5 fdcd 	bl	80004dc <__aeabi_fcmpgt>
 800a942:	1e03      	subs	r3, r0, #0
 800a944:	d113      	bne.n	800a96e <Fare_Calculation+0x5ce>
 800a946:	4b35      	ldr	r3, [pc, #212]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a948:	681a      	ldr	r2, [r3, #0]
 800a94a:	4b3f      	ldr	r3, [pc, #252]	@ (800aa48 <Fare_Calculation+0x6a8>)
 800a94c:	681b      	ldr	r3, [r3, #0]
 800a94e:	1c19      	adds	r1, r3, #0
 800a950:	1c10      	adds	r0, r2, #0
 800a952:	f7f6 fba7 	bl	80010a4 <__aeabi_fsub>
 800a956:	1c03      	adds	r3, r0, #0
 800a958:	005b      	lsls	r3, r3, #1
 800a95a:	085b      	lsrs	r3, r3, #1
 800a95c:	1c18      	adds	r0, r3, #0
 800a95e:	f7f8 fc8d 	bl	800327c <__aeabi_f2d>
 800a962:	4a37      	ldr	r2, [pc, #220]	@ (800aa40 <Fare_Calculation+0x6a0>)
 800a964:	4b37      	ldr	r3, [pc, #220]	@ (800aa44 <Fare_Calculation+0x6a4>)
 800a966:	f7f5 fd75 	bl	8000454 <__aeabi_dcmple>
 800a96a:	1e03      	subs	r3, r0, #0
 800a96c:	d004      	beq.n	800a978 <Fare_Calculation+0x5d8>
	{
		fare_d = fare;
 800a96e:	4b2b      	ldr	r3, [pc, #172]	@ (800aa1c <Fare_Calculation+0x67c>)
 800a970:	681a      	ldr	r2, [r3, #0]
 800a972:	4b37      	ldr	r3, [pc, #220]	@ (800aa50 <Fare_Calculation+0x6b0>)
 800a974:	601a      	str	r2, [r3, #0]
 800a976:	e003      	b.n	800a980 <Fare_Calculation+0x5e0>
	}
	else
	{
		fare_d = Fare_2km; //20.5 //24.0;
 800a978:	4b33      	ldr	r3, [pc, #204]	@ (800aa48 <Fare_Calculation+0x6a8>)
 800a97a:	681a      	ldr	r2, [r3, #0]
 800a97c:	4b34      	ldr	r3, [pc, #208]	@ (800aa50 <Fare_Calculation+0x6b0>)
 800a97e:	601a      	str	r2, [r3, #0]
	}

	if ((Last_fare_d != fare_d) && (fare_d != Fare_2km))
 800a980:	4b34      	ldr	r3, [pc, #208]	@ (800aa54 <Fare_Calculation+0x6b4>)
 800a982:	681a      	ldr	r2, [r3, #0]
 800a984:	4b32      	ldr	r3, [pc, #200]	@ (800aa50 <Fare_Calculation+0x6b0>)
 800a986:	681b      	ldr	r3, [r3, #0]
 800a988:	1c19      	adds	r1, r3, #0
 800a98a:	1c10      	adds	r0, r2, #0
 800a98c:	f7f5 fd8c 	bl	80004a8 <__aeabi_fcmpeq>
 800a990:	1e03      	subs	r3, r0, #0
 800a992:	d12d      	bne.n	800a9f0 <Fare_Calculation+0x650>
 800a994:	4b2e      	ldr	r3, [pc, #184]	@ (800aa50 <Fare_Calculation+0x6b0>)
 800a996:	681a      	ldr	r2, [r3, #0]
 800a998:	4b2b      	ldr	r3, [pc, #172]	@ (800aa48 <Fare_Calculation+0x6a8>)
 800a99a:	681b      	ldr	r3, [r3, #0]
 800a99c:	1c19      	adds	r1, r3, #0
 800a99e:	1c10      	adds	r0, r2, #0
 800a9a0:	f7f5 fd82 	bl	80004a8 <__aeabi_fcmpeq>
 800a9a4:	1e03      	subs	r3, r0, #0
 800a9a6:	d123      	bne.n	800a9f0 <Fare_Calculation+0x650>
	{
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, SET);
 800a9a8:	4b2b      	ldr	r3, [pc, #172]	@ (800aa58 <Fare_Calculation+0x6b8>)
 800a9aa:	2201      	movs	r2, #1
 800a9ac:	2180      	movs	r1, #128	@ 0x80
 800a9ae:	0018      	movs	r0, r3
 800a9b0:	f003 ff35 	bl	800e81e <HAL_GPIO_WritePin>
		HAL_Delay(1);
 800a9b4:	2001      	movs	r0, #1
 800a9b6:	f003 f965 	bl	800dc84 <HAL_Delay>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, RESET);
 800a9ba:	4b27      	ldr	r3, [pc, #156]	@ (800aa58 <Fare_Calculation+0x6b8>)
 800a9bc:	2200      	movs	r2, #0
 800a9be:	2180      	movs	r1, #128	@ 0x80
 800a9c0:	0018      	movs	r0, r3
 800a9c2:	f003 ff2c 	bl	800e81e <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, SET);
 800a9c6:	4b24      	ldr	r3, [pc, #144]	@ (800aa58 <Fare_Calculation+0x6b8>)
 800a9c8:	2201      	movs	r2, #1
 800a9ca:	2108      	movs	r1, #8
 800a9cc:	0018      	movs	r0, r3
 800a9ce:	f003 ff26 	bl	800e81e <HAL_GPIO_WritePin>
		HAL_Delay(20);
 800a9d2:	2014      	movs	r0, #20
 800a9d4:	f003 f956 	bl	800dc84 <HAL_Delay>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, RESET);
 800a9d8:	4b1f      	ldr	r3, [pc, #124]	@ (800aa58 <Fare_Calculation+0x6b8>)
 800a9da:	2200      	movs	r2, #0
 800a9dc:	2108      	movs	r1, #8
 800a9de:	0018      	movs	r0, r3
 800a9e0:	f003 ff1d 	bl	800e81e <HAL_GPIO_WritePin>
		change_count += 1;
 800a9e4:	4b1d      	ldr	r3, [pc, #116]	@ (800aa5c <Fare_Calculation+0x6bc>)
 800a9e6:	781b      	ldrb	r3, [r3, #0]
 800a9e8:	3301      	adds	r3, #1
 800a9ea:	b2da      	uxtb	r2, r3
 800a9ec:	4b1b      	ldr	r3, [pc, #108]	@ (800aa5c <Fare_Calculation+0x6bc>)
 800a9ee:	701a      	strb	r2, [r3, #0]
	}

	Last_fare_d = fare_d;
 800a9f0:	4b17      	ldr	r3, [pc, #92]	@ (800aa50 <Fare_Calculation+0x6b0>)
 800a9f2:	681a      	ldr	r2, [r3, #0]
 800a9f4:	4b17      	ldr	r3, [pc, #92]	@ (800aa54 <Fare_Calculation+0x6b4>)
 800a9f6:	601a      	str	r2, [r3, #0]
}
 800a9f8:	46c0      	nop			@ (mov r8, r8)
 800a9fa:	46bd      	mov	sp, r7
 800a9fc:	b003      	add	sp, #12
 800a9fe:	bd90      	pop	{r4, r7, pc}
 800aa00:	20000d0c 	.word	0x20000d0c
 800aa04:	20000d04 	.word	0x20000d04
 800aa08:	20000d00 	.word	0x20000d00
 800aa0c:	2000023e 	.word	0x2000023e
 800aa10:	40a00000 	.word	0x40a00000
 800aa14:	a0b5ed8d 	.word	0xa0b5ed8d
 800aa18:	3eb0c6f7 	.word	0x3eb0c6f7
 800aa1c:	20000d14 	.word	0x20000d14
 800aa20:	20000cf8 	.word	0x20000cf8
 800aa24:	20000d2c 	.word	0x20000d2c
 800aa28:	20000d08 	.word	0x20000d08
 800aa2c:	42700000 	.word	0x42700000
 800aa30:	20000d30 	.word	0x20000d30
 800aa34:	20000d10 	.word	0x20000d10
 800aa38:	20000ce4 	.word	0x20000ce4
 800aa3c:	44fa0000 	.word	0x44fa0000
 800aa40:	d2f1a9fc 	.word	0xd2f1a9fc
 800aa44:	3f50624d 	.word	0x3f50624d
 800aa48:	20000cc4 	.word	0x20000cc4
 800aa4c:	20000ccc 	.word	0x20000ccc
 800aa50:	20000d18 	.word	0x20000d18
 800aa54:	20000d1c 	.word	0x20000d1c
 800aa58:	50000400 	.word	0x50000400
 800aa5c:	20000e55 	.word	0x20000e55

0800aa60 <Flag_Control_Up>:

void Flag_Control_Up()
{
 800aa60:	b580      	push	{r7, lr}
 800aa62:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, SET);
 800aa64:	2380      	movs	r3, #128	@ 0x80
 800aa66:	019b      	lsls	r3, r3, #6
 800aa68:	480a      	ldr	r0, [pc, #40]	@ (800aa94 <Flag_Control_Up+0x34>)
 800aa6a:	2201      	movs	r2, #1
 800aa6c:	0019      	movs	r1, r3
 800aa6e:	f003 fed6 	bl	800e81e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, RESET);
 800aa72:	2380      	movs	r3, #128	@ 0x80
 800aa74:	01db      	lsls	r3, r3, #7
 800aa76:	4807      	ldr	r0, [pc, #28]	@ (800aa94 <Flag_Control_Up+0x34>)
 800aa78:	2200      	movs	r2, #0
 800aa7a:	0019      	movs	r1, r3
 800aa7c:	f003 fecf 	bl	800e81e <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, SET);
 800aa80:	2380      	movs	r3, #128	@ 0x80
 800aa82:	021b      	lsls	r3, r3, #8
 800aa84:	4803      	ldr	r0, [pc, #12]	@ (800aa94 <Flag_Control_Up+0x34>)
 800aa86:	2201      	movs	r2, #1
 800aa88:	0019      	movs	r1, r3
 800aa8a:	f003 fec8 	bl	800e81e <HAL_GPIO_WritePin>
}
 800aa8e:	46c0      	nop			@ (mov r8, r8)
 800aa90:	46bd      	mov	sp, r7
 800aa92:	bd80      	pop	{r7, pc}
 800aa94:	50000400 	.word	0x50000400

0800aa98 <Flag_Control_Down>:

void Flag_Control_Down()
{
 800aa98:	b580      	push	{r7, lr}
 800aa9a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, RESET);
 800aa9c:	2380      	movs	r3, #128	@ 0x80
 800aa9e:	019b      	lsls	r3, r3, #6
 800aaa0:	480a      	ldr	r0, [pc, #40]	@ (800aacc <Flag_Control_Down+0x34>)
 800aaa2:	2200      	movs	r2, #0
 800aaa4:	0019      	movs	r1, r3
 800aaa6:	f003 feba 	bl	800e81e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, SET);
 800aaaa:	2380      	movs	r3, #128	@ 0x80
 800aaac:	01db      	lsls	r3, r3, #7
 800aaae:	4807      	ldr	r0, [pc, #28]	@ (800aacc <Flag_Control_Down+0x34>)
 800aab0:	2201      	movs	r2, #1
 800aab2:	0019      	movs	r1, r3
 800aab4:	f003 feb3 	bl	800e81e <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, RESET);
 800aab8:	2380      	movs	r3, #128	@ 0x80
 800aaba:	021b      	lsls	r3, r3, #8
 800aabc:	4803      	ldr	r0, [pc, #12]	@ (800aacc <Flag_Control_Down+0x34>)
 800aabe:	2200      	movs	r2, #0
 800aac0:	0019      	movs	r1, r3
 800aac2:	f003 feac 	bl	800e81e <HAL_GPIO_WritePin>
}
 800aac6:	46c0      	nop			@ (mov r8, r8)
 800aac8:	46bd      	mov	sp, r7
 800aaca:	bd80      	pop	{r7, pc}
 800aacc:	50000400 	.word	0x50000400

0800aad0 <Anti_Tamper_Handle>:

void Anti_Tamper_Handle()
{
 800aad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aad2:	b08d      	sub	sp, #52	@ 0x34
 800aad4:	af00      	add	r7, sp, #0

	//set alarm in rtc & ctrl_2

	//1. alarm 30s (first time enter will alarm)
	//2. 'C' in HMI fare
	unsigned char C_Fare[] = {0x5A, 0xA5, 0x04, 0x82, 0x10, 0x30, 0x43};				// 7 byte  //min fare
 800aad6:	2528      	movs	r5, #40	@ 0x28
 800aad8:	197b      	adds	r3, r7, r5
 800aada:	4a57      	ldr	r2, [pc, #348]	@ (800ac38 <Anti_Tamper_Handle+0x168>)
 800aadc:	6811      	ldr	r1, [r2, #0]
 800aade:	6019      	str	r1, [r3, #0]
 800aae0:	8891      	ldrh	r1, [r2, #4]
 800aae2:	8099      	strh	r1, [r3, #4]
 800aae4:	7992      	ldrb	r2, [r2, #6]
 800aae6:	719a      	strb	r2, [r3, #6]
//	unsigned char C_Fare_Min[] = {0x5A, 0xA5, 0x07, 0x82, 0x10, 0x00, 0x00, 0x00, 0x09, 0x2E}; //2350 - 23.50
	//DONE：read from parameter, move to global define
//	unsigned char C_Fare_Min[] = {0x5A, 0xA5, 0x07, 0x82, 0x10, 0x00, 0x00, 0x00, 0x0A, 0x8C}; //2700 - 27.00

	uint8_t temp_array[4];
	Long_to_byte(Fare_min, temp_array);
 800aae8:	4b54      	ldr	r3, [pc, #336]	@ (800ac3c <Anti_Tamper_Handle+0x16c>)
 800aaea:	681b      	ldr	r3, [r3, #0]
 800aaec:	2424      	movs	r4, #36	@ 0x24
 800aaee:	193a      	adds	r2, r7, r4
 800aaf0:	0011      	movs	r1, r2
 800aaf2:	0018      	movs	r0, r3
 800aaf4:	f7fd f8c4 	bl	8007c80 <Long_to_byte>
	C_Fare_Min[6] = temp_array[0];
 800aaf8:	0021      	movs	r1, r4
 800aafa:	187b      	adds	r3, r7, r1
 800aafc:	781a      	ldrb	r2, [r3, #0]
 800aafe:	4b50      	ldr	r3, [pc, #320]	@ (800ac40 <Anti_Tamper_Handle+0x170>)
 800ab00:	719a      	strb	r2, [r3, #6]
	C_Fare_Min[7] = temp_array[1];
 800ab02:	187b      	adds	r3, r7, r1
 800ab04:	785a      	ldrb	r2, [r3, #1]
 800ab06:	4b4e      	ldr	r3, [pc, #312]	@ (800ac40 <Anti_Tamper_Handle+0x170>)
 800ab08:	71da      	strb	r2, [r3, #7]
	C_Fare_Min[8] = temp_array[2];
 800ab0a:	187b      	adds	r3, r7, r1
 800ab0c:	789a      	ldrb	r2, [r3, #2]
 800ab0e:	4b4c      	ldr	r3, [pc, #304]	@ (800ac40 <Anti_Tamper_Handle+0x170>)
 800ab10:	721a      	strb	r2, [r3, #8]
	C_Fare_Min[9] = temp_array[3];
 800ab12:	187b      	adds	r3, r7, r1
 800ab14:	78da      	ldrb	r2, [r3, #3]
 800ab16:	4b4a      	ldr	r3, [pc, #296]	@ (800ac40 <Anti_Tamper_Handle+0x170>)
 800ab18:	725a      	strb	r2, [r3, #9]
	HAL_UART_Transmit(&huart1, C_Fare, 7, 0x20);
 800ab1a:	1979      	adds	r1, r7, r5
 800ab1c:	4849      	ldr	r0, [pc, #292]	@ (800ac44 <Anti_Tamper_Handle+0x174>)
 800ab1e:	2320      	movs	r3, #32
 800ab20:	2207      	movs	r2, #7
 800ab22:	f008 fb35 	bl	8013190 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart1, C_Fare_Min, 10, 0x20);
 800ab26:	4946      	ldr	r1, [pc, #280]	@ (800ac40 <Anti_Tamper_Handle+0x170>)
 800ab28:	4846      	ldr	r0, [pc, #280]	@ (800ac44 <Anti_Tamper_Handle+0x174>)
 800ab2a:	2320      	movs	r3, #32
 800ab2c:	220a      	movs	r2, #10
 800ab2e:	f008 fb2f 	bl	8013190 <HAL_UART_Transmit>

	unsigned char alarm[] = {0x5A, 0xA5, 0x05, 0x82, 0x00, 0xA0, 0x00, 0x7d};
 800ab32:	231c      	movs	r3, #28
 800ab34:	18fb      	adds	r3, r7, r3
 800ab36:	4a44      	ldr	r2, [pc, #272]	@ (800ac48 <Anti_Tamper_Handle+0x178>)
 800ab38:	ca03      	ldmia	r2!, {r0, r1}
 800ab3a:	c303      	stmia	r3!, {r0, r1}
	//flag protect set again (maybe power off), no need alarm, only show unlock
	if(flag_alarm_clear)
 800ab3c:	4b43      	ldr	r3, [pc, #268]	@ (800ac4c <Anti_Tamper_Handle+0x17c>)
 800ab3e:	781b      	ldrb	r3, [r3, #0]
 800ab40:	2b00      	cmp	r3, #0
 800ab42:	d002      	beq.n	800ab4a <Anti_Tamper_Handle+0x7a>
	{
		Flag_alarm = FALSE;
 800ab44:	4b42      	ldr	r3, [pc, #264]	@ (800ac50 <Anti_Tamper_Handle+0x180>)
 800ab46:	2200      	movs	r2, #0
 800ab48:	701a      	strb	r2, [r3, #0]
	}

	if(Flag_alarm)
 800ab4a:	4b41      	ldr	r3, [pc, #260]	@ (800ac50 <Anti_Tamper_Handle+0x180>)
 800ab4c:	781b      	ldrb	r3, [r3, #0]
 800ab4e:	2b00      	cmp	r3, #0
 800ab50:	d022      	beq.n	800ab98 <Anti_Tamper_Handle+0xc8>
	{
		Flag_alarm = FALSE;
 800ab52:	4b3f      	ldr	r3, [pc, #252]	@ (800ac50 <Anti_Tamper_Handle+0x180>)
 800ab54:	2200      	movs	r2, #0
 800ab56:	701a      	strb	r2, [r3, #0]
		Flag_set_alarm_rtc = TRUE;
 800ab58:	4b3e      	ldr	r3, [pc, #248]	@ (800ac54 <Anti_Tamper_Handle+0x184>)
 800ab5a:	2201      	movs	r2, #1
 800ab5c:	701a      	strb	r2, [r3, #0]
		for(i=0; i<30; i++) //test 5s - set 30s
 800ab5e:	4b3e      	ldr	r3, [pc, #248]	@ (800ac58 <Anti_Tamper_Handle+0x188>)
 800ab60:	2200      	movs	r2, #0
 800ab62:	801a      	strh	r2, [r3, #0]
 800ab64:	e013      	b.n	800ab8e <Anti_Tamper_Handle+0xbe>
		{
			time_update();
 800ab66:	f7fe fbcb 	bl	8009300 <time_update>
			HAL_UART_Transmit(&huart1, alarm, 8, 0xffff);
 800ab6a:	4b3c      	ldr	r3, [pc, #240]	@ (800ac5c <Anti_Tamper_Handle+0x18c>)
 800ab6c:	221c      	movs	r2, #28
 800ab6e:	18b9      	adds	r1, r7, r2
 800ab70:	4834      	ldr	r0, [pc, #208]	@ (800ac44 <Anti_Tamper_Handle+0x174>)
 800ab72:	2208      	movs	r2, #8
 800ab74:	f008 fb0c 	bl	8013190 <HAL_UART_Transmit>
			HAL_Delay(1000);
 800ab78:	23fa      	movs	r3, #250	@ 0xfa
 800ab7a:	009b      	lsls	r3, r3, #2
 800ab7c:	0018      	movs	r0, r3
 800ab7e:	f003 f881 	bl	800dc84 <HAL_Delay>
		for(i=0; i<30; i++) //test 5s - set 30s
 800ab82:	4b35      	ldr	r3, [pc, #212]	@ (800ac58 <Anti_Tamper_Handle+0x188>)
 800ab84:	881b      	ldrh	r3, [r3, #0]
 800ab86:	3301      	adds	r3, #1
 800ab88:	b29a      	uxth	r2, r3
 800ab8a:	4b33      	ldr	r3, [pc, #204]	@ (800ac58 <Anti_Tamper_Handle+0x188>)
 800ab8c:	801a      	strh	r2, [r3, #0]
 800ab8e:	4b32      	ldr	r3, [pc, #200]	@ (800ac58 <Anti_Tamper_Handle+0x188>)
 800ab90:	881b      	ldrh	r3, [r3, #0]
 800ab92:	2b1d      	cmp	r3, #29
 800ab94:	d9e7      	bls.n	800ab66 <Anti_Tamper_Handle+0x96>
		HAL_UART_Transmit(&huart1, Dur_HMS, 14, 0x20);

		time_update();
//		HAL_Delay(1000);
	}
}
 800ab96:	e04a      	b.n	800ac2e <Anti_Tamper_Handle+0x15e>
		unsigned char a_buffer[3] = {0};
 800ab98:	2618      	movs	r6, #24
 800ab9a:	19bb      	adds	r3, r7, r6
 800ab9c:	4a30      	ldr	r2, [pc, #192]	@ (800ac60 <Anti_Tamper_Handle+0x190>)
 800ab9e:	8812      	ldrh	r2, [r2, #0]
 800aba0:	801a      	strh	r2, [r3, #0]
 800aba2:	2202      	movs	r2, #2
 800aba4:	2100      	movs	r1, #0
 800aba6:	5499      	strb	r1, [r3, r2]
		unsigned char d_buffer[6] = {0};
 800aba8:	2510      	movs	r5, #16
 800abaa:	197b      	adds	r3, r7, r5
 800abac:	2200      	movs	r2, #0
 800abae:	601a      	str	r2, [r3, #0]
 800abb0:	2200      	movs	r2, #0
 800abb2:	809a      	strh	r2, [r3, #4]
		unsigned char unlock[] = {0x5A, 0xA5, 0x09, 0x82, 0x10, 0x32, 0x55, 0x4E, 0x4C, 0x4F, 0x43, 0x4B};
 800abb4:	1d3b      	adds	r3, r7, #4
 800abb6:	4a2b      	ldr	r2, [pc, #172]	@ (800ac64 <Anti_Tamper_Handle+0x194>)
 800abb8:	ca13      	ldmia	r2!, {r0, r1, r4}
 800abba:	c313      	stmia	r3!, {r0, r1, r4}
		HAL_UART_Transmit(&huart1, unlock, 12, 0x20);
 800abbc:	1d39      	adds	r1, r7, #4
 800abbe:	4821      	ldr	r0, [pc, #132]	@ (800ac44 <Anti_Tamper_Handle+0x174>)
 800abc0:	2320      	movs	r3, #32
 800abc2:	220c      	movs	r2, #12
 800abc4:	f008 fae4 	bl	8013190 <HAL_UART_Transmit>
		a_buffer[0] = hh;
 800abc8:	4b27      	ldr	r3, [pc, #156]	@ (800ac68 <Anti_Tamper_Handle+0x198>)
 800abca:	781a      	ldrb	r2, [r3, #0]
 800abcc:	19bb      	adds	r3, r7, r6
 800abce:	701a      	strb	r2, [r3, #0]
		a_buffer[1] = mm;
 800abd0:	4b26      	ldr	r3, [pc, #152]	@ (800ac6c <Anti_Tamper_Handle+0x19c>)
 800abd2:	781a      	ldrb	r2, [r3, #0]
 800abd4:	19bb      	adds	r3, r7, r6
 800abd6:	705a      	strb	r2, [r3, #1]
		a_buffer[2] = ss;
 800abd8:	4b25      	ldr	r3, [pc, #148]	@ (800ac70 <Anti_Tamper_Handle+0x1a0>)
 800abda:	781a      	ldrb	r2, [r3, #0]
 800abdc:	19bb      	adds	r3, r7, r6
 800abde:	709a      	strb	r2, [r3, #2]
		BCD2ASC(d_buffer, a_buffer, 6);
 800abe0:	19b9      	adds	r1, r7, r6
 800abe2:	197b      	adds	r3, r7, r5
 800abe4:	2206      	movs	r2, #6
 800abe6:	0018      	movs	r0, r3
 800abe8:	f7ff f9e0 	bl	8009fac <BCD2ASC>
		Dur_HMS[13] = d_buffer[5];
 800abec:	0029      	movs	r1, r5
 800abee:	187b      	adds	r3, r7, r1
 800abf0:	795a      	ldrb	r2, [r3, #5]
 800abf2:	4b20      	ldr	r3, [pc, #128]	@ (800ac74 <Anti_Tamper_Handle+0x1a4>)
 800abf4:	735a      	strb	r2, [r3, #13]
		Dur_HMS[12] = d_buffer[4];
 800abf6:	187b      	adds	r3, r7, r1
 800abf8:	791a      	ldrb	r2, [r3, #4]
 800abfa:	4b1e      	ldr	r3, [pc, #120]	@ (800ac74 <Anti_Tamper_Handle+0x1a4>)
 800abfc:	731a      	strb	r2, [r3, #12]
		Dur_HMS[10] = d_buffer[3];
 800abfe:	187b      	adds	r3, r7, r1
 800ac00:	78da      	ldrb	r2, [r3, #3]
 800ac02:	4b1c      	ldr	r3, [pc, #112]	@ (800ac74 <Anti_Tamper_Handle+0x1a4>)
 800ac04:	729a      	strb	r2, [r3, #10]
		Dur_HMS[9] = d_buffer[2];
 800ac06:	187b      	adds	r3, r7, r1
 800ac08:	789a      	ldrb	r2, [r3, #2]
 800ac0a:	4b1a      	ldr	r3, [pc, #104]	@ (800ac74 <Anti_Tamper_Handle+0x1a4>)
 800ac0c:	725a      	strb	r2, [r3, #9]
		Dur_HMS[7] = d_buffer[1];
 800ac0e:	187b      	adds	r3, r7, r1
 800ac10:	785a      	ldrb	r2, [r3, #1]
 800ac12:	4b18      	ldr	r3, [pc, #96]	@ (800ac74 <Anti_Tamper_Handle+0x1a4>)
 800ac14:	71da      	strb	r2, [r3, #7]
		Dur_HMS[6] = d_buffer[0];
 800ac16:	187b      	adds	r3, r7, r1
 800ac18:	781a      	ldrb	r2, [r3, #0]
 800ac1a:	4b16      	ldr	r3, [pc, #88]	@ (800ac74 <Anti_Tamper_Handle+0x1a4>)
 800ac1c:	719a      	strb	r2, [r3, #6]
		HAL_UART_Transmit(&huart1, Dur_HMS, 14, 0x20);
 800ac1e:	4915      	ldr	r1, [pc, #84]	@ (800ac74 <Anti_Tamper_Handle+0x1a4>)
 800ac20:	4808      	ldr	r0, [pc, #32]	@ (800ac44 <Anti_Tamper_Handle+0x174>)
 800ac22:	2320      	movs	r3, #32
 800ac24:	220e      	movs	r2, #14
 800ac26:	f008 fab3 	bl	8013190 <HAL_UART_Transmit>
		time_update();
 800ac2a:	f7fe fb69 	bl	8009300 <time_update>
}
 800ac2e:	46c0      	nop			@ (mov r8, r8)
 800ac30:	46bd      	mov	sp, r7
 800ac32:	b00d      	add	sp, #52	@ 0x34
 800ac34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac36:	46c0      	nop			@ (mov r8, r8)
 800ac38:	08019d48 	.word	0x08019d48
 800ac3c:	20000cd4 	.word	0x20000cd4
 800ac40:	2000025c 	.word	0x2000025c
 800ac44:	20000658 	.word	0x20000658
 800ac48:	08019d50 	.word	0x08019d50
 800ac4c:	20000c9b 	.word	0x20000c9b
 800ac50:	20000244 	.word	0x20000244
 800ac54:	20000d3e 	.word	0x20000d3e
 800ac58:	20000bf8 	.word	0x20000bf8
 800ac5c:	0000ffff 	.word	0x0000ffff
 800ac60:	08019d58 	.word	0x08019d58
 800ac64:	08019d5c 	.word	0x08019d5c
 800ac68:	20000c9c 	.word	0x20000c9c
 800ac6c:	20000c9d 	.word	0x20000c9d
 800ac70:	20000c9e 	.word	0x20000c9e
 800ac74:	2000005c 	.word	0x2000005c

0800ac78 <Dec2ASC>:
//		Drv_state = S_VACANT;
//	}
//}

void Dec2ASC(uint32_t decimal, uint8_t* asc)
{
 800ac78:	b580      	push	{r7, lr}
 800ac7a:	b086      	sub	sp, #24
 800ac7c:	af00      	add	r7, sp, #0
 800ac7e:	6078      	str	r0, [r7, #4]
 800ac80:	6039      	str	r1, [r7, #0]
	uint8_t len = 0;
 800ac82:	2317      	movs	r3, #23
 800ac84:	18fb      	adds	r3, r7, r3
 800ac86:	2200      	movs	r2, #0
 800ac88:	701a      	strb	r2, [r3, #0]
	uint32_t tmp = decimal;
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	613b      	str	r3, [r7, #16]

	do {
		len++;
 800ac8e:	2117      	movs	r1, #23
 800ac90:	187b      	adds	r3, r7, r1
 800ac92:	781a      	ldrb	r2, [r3, #0]
 800ac94:	187b      	adds	r3, r7, r1
 800ac96:	3201      	adds	r2, #1
 800ac98:	701a      	strb	r2, [r3, #0]
		tmp /= 10;
 800ac9a:	693b      	ldr	r3, [r7, #16]
 800ac9c:	210a      	movs	r1, #10
 800ac9e:	0018      	movs	r0, r3
 800aca0:	f7f5 fa42 	bl	8000128 <__udivsi3>
 800aca4:	0003      	movs	r3, r0
 800aca6:	613b      	str	r3, [r7, #16]
	} while (tmp > 0);
 800aca8:	693b      	ldr	r3, [r7, #16]
 800acaa:	2b00      	cmp	r3, #0
 800acac:	d1ef      	bne.n	800ac8e <Dec2ASC+0x16>

	for (int i=0; i<len; i++)
 800acae:	2300      	movs	r3, #0
 800acb0:	60fb      	str	r3, [r7, #12]
 800acb2:	e019      	b.n	800ace8 <Dec2ASC+0x70>
	{
		asc[7-i] = decimal % 10 + 0x30;
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	210a      	movs	r1, #10
 800acb8:	0018      	movs	r0, r3
 800acba:	f7f5 fabb 	bl	8000234 <__aeabi_uidivmod>
 800acbe:	000b      	movs	r3, r1
 800acc0:	b2da      	uxtb	r2, r3
 800acc2:	68fb      	ldr	r3, [r7, #12]
 800acc4:	2107      	movs	r1, #7
 800acc6:	1acb      	subs	r3, r1, r3
 800acc8:	0019      	movs	r1, r3
 800acca:	683b      	ldr	r3, [r7, #0]
 800accc:	185b      	adds	r3, r3, r1
 800acce:	3230      	adds	r2, #48	@ 0x30
 800acd0:	b2d2      	uxtb	r2, r2
 800acd2:	701a      	strb	r2, [r3, #0]
		decimal /= 10;
 800acd4:	687b      	ldr	r3, [r7, #4]
 800acd6:	210a      	movs	r1, #10
 800acd8:	0018      	movs	r0, r3
 800acda:	f7f5 fa25 	bl	8000128 <__udivsi3>
 800acde:	0003      	movs	r3, r0
 800ace0:	607b      	str	r3, [r7, #4]
	for (int i=0; i<len; i++)
 800ace2:	68fb      	ldr	r3, [r7, #12]
 800ace4:	3301      	adds	r3, #1
 800ace6:	60fb      	str	r3, [r7, #12]
 800ace8:	2317      	movs	r3, #23
 800acea:	18fb      	adds	r3, r7, r3
 800acec:	781b      	ldrb	r3, [r3, #0]
 800acee:	68fa      	ldr	r2, [r7, #12]
 800acf0:	429a      	cmp	r2, r3
 800acf2:	dbdf      	blt.n	800acb4 <Dec2ASC+0x3c>
	}
}
 800acf4:	46c0      	nop			@ (mov r8, r8)
 800acf6:	46c0      	nop			@ (mov r8, r8)
 800acf8:	46bd      	mov	sp, r7
 800acfa:	b006      	add	sp, #24
 800acfc:	bd80      	pop	{r7, pc}
	...

0800ad00 <ASC2Dec>:

uint32_t ASC2Dec(uint8_t* asc)
{
 800ad00:	b580      	push	{r7, lr}
 800ad02:	b084      	sub	sp, #16
 800ad04:	af00      	add	r7, sp, #0
 800ad06:	6078      	str	r0, [r7, #4]
	printf("[debug] asc to dec : \n");
 800ad08:	4b16      	ldr	r3, [pc, #88]	@ (800ad64 <ASC2Dec+0x64>)
 800ad0a:	0018      	movs	r0, r3
 800ad0c:	f00d fe68 	bl	80189e0 <puts>
	uint32_t decimal = 0;
 800ad10:	2300      	movs	r3, #0
 800ad12:	60fb      	str	r3, [r7, #12]
	for (int i=0; i<8; i++)
 800ad14:	2300      	movs	r3, #0
 800ad16:	60bb      	str	r3, [r7, #8]
 800ad18:	e01b      	b.n	800ad52 <ASC2Dec+0x52>
	{

		if (asc[i]>=0x30 && asc[i]<=0x39)
 800ad1a:	68bb      	ldr	r3, [r7, #8]
 800ad1c:	687a      	ldr	r2, [r7, #4]
 800ad1e:	18d3      	adds	r3, r2, r3
 800ad20:	781b      	ldrb	r3, [r3, #0]
 800ad22:	2b2f      	cmp	r3, #47	@ 0x2f
 800ad24:	d912      	bls.n	800ad4c <ASC2Dec+0x4c>
 800ad26:	68bb      	ldr	r3, [r7, #8]
 800ad28:	687a      	ldr	r2, [r7, #4]
 800ad2a:	18d3      	adds	r3, r2, r3
 800ad2c:	781b      	ldrb	r3, [r3, #0]
 800ad2e:	2b39      	cmp	r3, #57	@ 0x39
 800ad30:	d80c      	bhi.n	800ad4c <ASC2Dec+0x4c>
			decimal = 10*decimal + (asc[i] - 0x30);
 800ad32:	68fa      	ldr	r2, [r7, #12]
 800ad34:	0013      	movs	r3, r2
 800ad36:	009b      	lsls	r3, r3, #2
 800ad38:	189b      	adds	r3, r3, r2
 800ad3a:	005b      	lsls	r3, r3, #1
 800ad3c:	0019      	movs	r1, r3
 800ad3e:	68bb      	ldr	r3, [r7, #8]
 800ad40:	687a      	ldr	r2, [r7, #4]
 800ad42:	18d3      	adds	r3, r2, r3
 800ad44:	781b      	ldrb	r3, [r3, #0]
 800ad46:	18cb      	adds	r3, r1, r3
 800ad48:	3b30      	subs	r3, #48	@ 0x30
 800ad4a:	60fb      	str	r3, [r7, #12]
	for (int i=0; i<8; i++)
 800ad4c:	68bb      	ldr	r3, [r7, #8]
 800ad4e:	3301      	adds	r3, #1
 800ad50:	60bb      	str	r3, [r7, #8]
 800ad52:	68bb      	ldr	r3, [r7, #8]
 800ad54:	2b07      	cmp	r3, #7
 800ad56:	dde0      	ble.n	800ad1a <ASC2Dec+0x1a>
	}
	return decimal;
 800ad58:	68fb      	ldr	r3, [r7, #12]
}
 800ad5a:	0018      	movs	r0, r3
 800ad5c:	46bd      	mov	sp, r7
 800ad5e:	b004      	add	sp, #16
 800ad60:	bd80      	pop	{r7, pc}
 800ad62:	46c0      	nop			@ (mov r8, r8)
 800ad64:	08019d68 	.word	0x08019d68

0800ad68 <E_read>:

void E_read(void)
{
 800ad68:	b580      	push	{r7, lr}
 800ad6a:	b084      	sub	sp, #16
 800ad6c:	af04      	add	r7, sp, #16
	HAL_I2C_Mem_Read(&hi2c2, 0xA1, (3<<7), 2, dataRead, 100, 1000);
 800ad6e:	23c0      	movs	r3, #192	@ 0xc0
 800ad70:	005a      	lsls	r2, r3, #1
 800ad72:	48f6      	ldr	r0, [pc, #984]	@ (800b14c <E_read+0x3e4>)
 800ad74:	23fa      	movs	r3, #250	@ 0xfa
 800ad76:	009b      	lsls	r3, r3, #2
 800ad78:	9302      	str	r3, [sp, #8]
 800ad7a:	2364      	movs	r3, #100	@ 0x64
 800ad7c:	9301      	str	r3, [sp, #4]
 800ad7e:	4bf4      	ldr	r3, [pc, #976]	@ (800b150 <E_read+0x3e8>)
 800ad80:	9300      	str	r3, [sp, #0]
 800ad82:	2302      	movs	r3, #2
 800ad84:	21a1      	movs	r1, #161	@ 0xa1
 800ad86:	f004 f93b 	bl	800f000 <HAL_I2C_Mem_Read>
	tkm[0] = dataRead[0];
 800ad8a:	4bf1      	ldr	r3, [pc, #964]	@ (800b150 <E_read+0x3e8>)
 800ad8c:	781a      	ldrb	r2, [r3, #0]
 800ad8e:	4bf1      	ldr	r3, [pc, #964]	@ (800b154 <E_read+0x3ec>)
 800ad90:	701a      	strb	r2, [r3, #0]
	tkm[1] = dataRead[1];
 800ad92:	4bef      	ldr	r3, [pc, #956]	@ (800b150 <E_read+0x3e8>)
 800ad94:	785a      	ldrb	r2, [r3, #1]
 800ad96:	4bef      	ldr	r3, [pc, #956]	@ (800b154 <E_read+0x3ec>)
 800ad98:	705a      	strb	r2, [r3, #1]
	tkm[2] = dataRead[2];
 800ad9a:	4bed      	ldr	r3, [pc, #948]	@ (800b150 <E_read+0x3e8>)
 800ad9c:	789a      	ldrb	r2, [r3, #2]
 800ad9e:	4bed      	ldr	r3, [pc, #948]	@ (800b154 <E_read+0x3ec>)
 800ada0:	709a      	strb	r2, [r3, #2]
	tkm[3] = dataRead[3];
 800ada2:	4beb      	ldr	r3, [pc, #940]	@ (800b150 <E_read+0x3e8>)
 800ada4:	78da      	ldrb	r2, [r3, #3]
 800ada6:	4beb      	ldr	r3, [pc, #940]	@ (800b154 <E_read+0x3ec>)
 800ada8:	70da      	strb	r2, [r3, #3]
	tkm[4] = dataRead[4];
 800adaa:	4be9      	ldr	r3, [pc, #932]	@ (800b150 <E_read+0x3e8>)
 800adac:	791a      	ldrb	r2, [r3, #4]
 800adae:	4be9      	ldr	r3, [pc, #932]	@ (800b154 <E_read+0x3ec>)
 800adb0:	711a      	strb	r2, [r3, #4]
	tkm[5] = dataRead[5];
 800adb2:	4be7      	ldr	r3, [pc, #924]	@ (800b150 <E_read+0x3e8>)
 800adb4:	795a      	ldrb	r2, [r3, #5]
 800adb6:	4be7      	ldr	r3, [pc, #924]	@ (800b154 <E_read+0x3ec>)
 800adb8:	715a      	strb	r2, [r3, #5]
	tkm[6] = dataRead[6];
 800adba:	4be5      	ldr	r3, [pc, #916]	@ (800b150 <E_read+0x3e8>)
 800adbc:	799a      	ldrb	r2, [r3, #6]
 800adbe:	4be5      	ldr	r3, [pc, #916]	@ (800b154 <E_read+0x3ec>)
 800adc0:	719a      	strb	r2, [r3, #6]
	tkm[7] = dataRead[7];
 800adc2:	4be3      	ldr	r3, [pc, #908]	@ (800b150 <E_read+0x3e8>)
 800adc4:	79da      	ldrb	r2, [r3, #7]
 800adc6:	4be3      	ldr	r3, [pc, #908]	@ (800b154 <E_read+0x3ec>)
 800adc8:	71da      	strb	r2, [r3, #7]

	pkm[0] = dataRead[8];
 800adca:	4be1      	ldr	r3, [pc, #900]	@ (800b150 <E_read+0x3e8>)
 800adcc:	7a1a      	ldrb	r2, [r3, #8]
 800adce:	4be2      	ldr	r3, [pc, #904]	@ (800b158 <E_read+0x3f0>)
 800add0:	701a      	strb	r2, [r3, #0]
	pkm[1] = dataRead[9];
 800add2:	4bdf      	ldr	r3, [pc, #892]	@ (800b150 <E_read+0x3e8>)
 800add4:	7a5a      	ldrb	r2, [r3, #9]
 800add6:	4be0      	ldr	r3, [pc, #896]	@ (800b158 <E_read+0x3f0>)
 800add8:	705a      	strb	r2, [r3, #1]
	pkm[2] = dataRead[10];
 800adda:	4bdd      	ldr	r3, [pc, #884]	@ (800b150 <E_read+0x3e8>)
 800addc:	7a9a      	ldrb	r2, [r3, #10]
 800adde:	4bde      	ldr	r3, [pc, #888]	@ (800b158 <E_read+0x3f0>)
 800ade0:	709a      	strb	r2, [r3, #2]
	pkm[3] = dataRead[11];
 800ade2:	4bdb      	ldr	r3, [pc, #876]	@ (800b150 <E_read+0x3e8>)
 800ade4:	7ada      	ldrb	r2, [r3, #11]
 800ade6:	4bdc      	ldr	r3, [pc, #880]	@ (800b158 <E_read+0x3f0>)
 800ade8:	70da      	strb	r2, [r3, #3]
	pkm[4] = dataRead[12];
 800adea:	4bd9      	ldr	r3, [pc, #868]	@ (800b150 <E_read+0x3e8>)
 800adec:	7b1a      	ldrb	r2, [r3, #12]
 800adee:	4bda      	ldr	r3, [pc, #872]	@ (800b158 <E_read+0x3f0>)
 800adf0:	711a      	strb	r2, [r3, #4]
	pkm[5] = dataRead[13];
 800adf2:	4bd7      	ldr	r3, [pc, #860]	@ (800b150 <E_read+0x3e8>)
 800adf4:	7b5a      	ldrb	r2, [r3, #13]
 800adf6:	4bd8      	ldr	r3, [pc, #864]	@ (800b158 <E_read+0x3f0>)
 800adf8:	715a      	strb	r2, [r3, #5]
	pkm[6] = dataRead[14];
 800adfa:	4bd5      	ldr	r3, [pc, #852]	@ (800b150 <E_read+0x3e8>)
 800adfc:	7b9a      	ldrb	r2, [r3, #14]
 800adfe:	4bd6      	ldr	r3, [pc, #856]	@ (800b158 <E_read+0x3f0>)
 800ae00:	719a      	strb	r2, [r3, #6]
	pkm[7] = dataRead[15];
 800ae02:	4bd3      	ldr	r3, [pc, #844]	@ (800b150 <E_read+0x3e8>)
 800ae04:	7bda      	ldrb	r2, [r3, #15]
 800ae06:	4bd4      	ldr	r3, [pc, #848]	@ (800b158 <E_read+0x3f0>)
 800ae08:	71da      	strb	r2, [r3, #7]

	tflag[0] = dataRead[16];
 800ae0a:	4bd1      	ldr	r3, [pc, #836]	@ (800b150 <E_read+0x3e8>)
 800ae0c:	7c1a      	ldrb	r2, [r3, #16]
 800ae0e:	4bd3      	ldr	r3, [pc, #844]	@ (800b15c <E_read+0x3f4>)
 800ae10:	701a      	strb	r2, [r3, #0]
	tflag[1] = dataRead[17];
 800ae12:	4bcf      	ldr	r3, [pc, #828]	@ (800b150 <E_read+0x3e8>)
 800ae14:	7c5a      	ldrb	r2, [r3, #17]
 800ae16:	4bd1      	ldr	r3, [pc, #836]	@ (800b15c <E_read+0x3f4>)
 800ae18:	705a      	strb	r2, [r3, #1]
	tflag[2] = dataRead[18];
 800ae1a:	4bcd      	ldr	r3, [pc, #820]	@ (800b150 <E_read+0x3e8>)
 800ae1c:	7c9a      	ldrb	r2, [r3, #18]
 800ae1e:	4bcf      	ldr	r3, [pc, #828]	@ (800b15c <E_read+0x3f4>)
 800ae20:	709a      	strb	r2, [r3, #2]
	tflag[3] = dataRead[19];
 800ae22:	4bcb      	ldr	r3, [pc, #812]	@ (800b150 <E_read+0x3e8>)
 800ae24:	7cda      	ldrb	r2, [r3, #19]
 800ae26:	4bcd      	ldr	r3, [pc, #820]	@ (800b15c <E_read+0x3f4>)
 800ae28:	70da      	strb	r2, [r3, #3]
	tflag[4] = dataRead[20];
 800ae2a:	4bc9      	ldr	r3, [pc, #804]	@ (800b150 <E_read+0x3e8>)
 800ae2c:	7d1a      	ldrb	r2, [r3, #20]
 800ae2e:	4bcb      	ldr	r3, [pc, #812]	@ (800b15c <E_read+0x3f4>)
 800ae30:	711a      	strb	r2, [r3, #4]
	tflag[5] = dataRead[21];
 800ae32:	4bc7      	ldr	r3, [pc, #796]	@ (800b150 <E_read+0x3e8>)
 800ae34:	7d5a      	ldrb	r2, [r3, #21]
 800ae36:	4bc9      	ldr	r3, [pc, #804]	@ (800b15c <E_read+0x3f4>)
 800ae38:	715a      	strb	r2, [r3, #5]
	tflag[6] = dataRead[22];
 800ae3a:	4bc5      	ldr	r3, [pc, #788]	@ (800b150 <E_read+0x3e8>)
 800ae3c:	7d9a      	ldrb	r2, [r3, #22]
 800ae3e:	4bc7      	ldr	r3, [pc, #796]	@ (800b15c <E_read+0x3f4>)
 800ae40:	719a      	strb	r2, [r3, #6]
	tflag[7] = dataRead[23];
 800ae42:	4bc3      	ldr	r3, [pc, #780]	@ (800b150 <E_read+0x3e8>)
 800ae44:	7dda      	ldrb	r2, [r3, #23]
 800ae46:	4bc5      	ldr	r3, [pc, #788]	@ (800b15c <E_read+0x3f4>)
 800ae48:	71da      	strb	r2, [r3, #7]

	cflag[0] = dataRead[24];
 800ae4a:	4bc1      	ldr	r3, [pc, #772]	@ (800b150 <E_read+0x3e8>)
 800ae4c:	7e1a      	ldrb	r2, [r3, #24]
 800ae4e:	4bc4      	ldr	r3, [pc, #784]	@ (800b160 <E_read+0x3f8>)
 800ae50:	701a      	strb	r2, [r3, #0]
	cflag[1] = dataRead[25];
 800ae52:	4bbf      	ldr	r3, [pc, #764]	@ (800b150 <E_read+0x3e8>)
 800ae54:	7e5a      	ldrb	r2, [r3, #25]
 800ae56:	4bc2      	ldr	r3, [pc, #776]	@ (800b160 <E_read+0x3f8>)
 800ae58:	705a      	strb	r2, [r3, #1]
	cflag[2] = dataRead[26];
 800ae5a:	4bbd      	ldr	r3, [pc, #756]	@ (800b150 <E_read+0x3e8>)
 800ae5c:	7e9a      	ldrb	r2, [r3, #26]
 800ae5e:	4bc0      	ldr	r3, [pc, #768]	@ (800b160 <E_read+0x3f8>)
 800ae60:	709a      	strb	r2, [r3, #2]
	cflag[3] = dataRead[27];
 800ae62:	4bbb      	ldr	r3, [pc, #748]	@ (800b150 <E_read+0x3e8>)
 800ae64:	7eda      	ldrb	r2, [r3, #27]
 800ae66:	4bbe      	ldr	r3, [pc, #760]	@ (800b160 <E_read+0x3f8>)
 800ae68:	70da      	strb	r2, [r3, #3]
	cflag[4] = dataRead[28];
 800ae6a:	4bb9      	ldr	r3, [pc, #740]	@ (800b150 <E_read+0x3e8>)
 800ae6c:	7f1a      	ldrb	r2, [r3, #28]
 800ae6e:	4bbc      	ldr	r3, [pc, #752]	@ (800b160 <E_read+0x3f8>)
 800ae70:	711a      	strb	r2, [r3, #4]
	cflag[5] = dataRead[29];
 800ae72:	4bb7      	ldr	r3, [pc, #732]	@ (800b150 <E_read+0x3e8>)
 800ae74:	7f5a      	ldrb	r2, [r3, #29]
 800ae76:	4bba      	ldr	r3, [pc, #744]	@ (800b160 <E_read+0x3f8>)
 800ae78:	715a      	strb	r2, [r3, #5]
	cflag[6] = dataRead[30];
 800ae7a:	4bb5      	ldr	r3, [pc, #724]	@ (800b150 <E_read+0x3e8>)
 800ae7c:	7f9a      	ldrb	r2, [r3, #30]
 800ae7e:	4bb8      	ldr	r3, [pc, #736]	@ (800b160 <E_read+0x3f8>)
 800ae80:	719a      	strb	r2, [r3, #6]
	cflag[7] = dataRead[31];
 800ae82:	4bb3      	ldr	r3, [pc, #716]	@ (800b150 <E_read+0x3e8>)
 800ae84:	7fda      	ldrb	r2, [r3, #31]
 800ae86:	4bb6      	ldr	r3, [pc, #728]	@ (800b160 <E_read+0x3f8>)
 800ae88:	71da      	strb	r2, [r3, #7]

	tpulse[0] = dataRead[32];
 800ae8a:	4bb1      	ldr	r3, [pc, #708]	@ (800b150 <E_read+0x3e8>)
 800ae8c:	2220      	movs	r2, #32
 800ae8e:	5c9a      	ldrb	r2, [r3, r2]
 800ae90:	4bb4      	ldr	r3, [pc, #720]	@ (800b164 <E_read+0x3fc>)
 800ae92:	701a      	strb	r2, [r3, #0]
	tpulse[1] = dataRead[33];
 800ae94:	4bae      	ldr	r3, [pc, #696]	@ (800b150 <E_read+0x3e8>)
 800ae96:	2221      	movs	r2, #33	@ 0x21
 800ae98:	5c9a      	ldrb	r2, [r3, r2]
 800ae9a:	4bb2      	ldr	r3, [pc, #712]	@ (800b164 <E_read+0x3fc>)
 800ae9c:	705a      	strb	r2, [r3, #1]
	tpulse[2] = dataRead[34];
 800ae9e:	4bac      	ldr	r3, [pc, #688]	@ (800b150 <E_read+0x3e8>)
 800aea0:	2222      	movs	r2, #34	@ 0x22
 800aea2:	5c9a      	ldrb	r2, [r3, r2]
 800aea4:	4baf      	ldr	r3, [pc, #700]	@ (800b164 <E_read+0x3fc>)
 800aea6:	709a      	strb	r2, [r3, #2]
	tpulse[3] = dataRead[35];
 800aea8:	4ba9      	ldr	r3, [pc, #676]	@ (800b150 <E_read+0x3e8>)
 800aeaa:	2223      	movs	r2, #35	@ 0x23
 800aeac:	5c9a      	ldrb	r2, [r3, r2]
 800aeae:	4bad      	ldr	r3, [pc, #692]	@ (800b164 <E_read+0x3fc>)
 800aeb0:	70da      	strb	r2, [r3, #3]
	tpulse[4] = dataRead[36];
 800aeb2:	4ba7      	ldr	r3, [pc, #668]	@ (800b150 <E_read+0x3e8>)
 800aeb4:	2224      	movs	r2, #36	@ 0x24
 800aeb6:	5c9a      	ldrb	r2, [r3, r2]
 800aeb8:	4baa      	ldr	r3, [pc, #680]	@ (800b164 <E_read+0x3fc>)
 800aeba:	711a      	strb	r2, [r3, #4]
	tpulse[5] = dataRead[37];
 800aebc:	4ba4      	ldr	r3, [pc, #656]	@ (800b150 <E_read+0x3e8>)
 800aebe:	2225      	movs	r2, #37	@ 0x25
 800aec0:	5c9a      	ldrb	r2, [r3, r2]
 800aec2:	4ba8      	ldr	r3, [pc, #672]	@ (800b164 <E_read+0x3fc>)
 800aec4:	715a      	strb	r2, [r3, #5]
	tpulse[6] = dataRead[38];
 800aec6:	4ba2      	ldr	r3, [pc, #648]	@ (800b150 <E_read+0x3e8>)
 800aec8:	2226      	movs	r2, #38	@ 0x26
 800aeca:	5c9a      	ldrb	r2, [r3, r2]
 800aecc:	4ba5      	ldr	r3, [pc, #660]	@ (800b164 <E_read+0x3fc>)
 800aece:	719a      	strb	r2, [r3, #6]
	tpulse[7] = dataRead[39];
 800aed0:	4b9f      	ldr	r3, [pc, #636]	@ (800b150 <E_read+0x3e8>)
 800aed2:	2227      	movs	r2, #39	@ 0x27
 800aed4:	5c9a      	ldrb	r2, [r3, r2]
 800aed6:	4ba3      	ldr	r3, [pc, #652]	@ (800b164 <E_read+0x3fc>)
 800aed8:	71da      	strb	r2, [r3, #7]

	tfare[0] = dataRead[40];
 800aeda:	4b9d      	ldr	r3, [pc, #628]	@ (800b150 <E_read+0x3e8>)
 800aedc:	2228      	movs	r2, #40	@ 0x28
 800aede:	5c9a      	ldrb	r2, [r3, r2]
 800aee0:	4ba1      	ldr	r3, [pc, #644]	@ (800b168 <E_read+0x400>)
 800aee2:	701a      	strb	r2, [r3, #0]
	tfare[1] = dataRead[41];
 800aee4:	4b9a      	ldr	r3, [pc, #616]	@ (800b150 <E_read+0x3e8>)
 800aee6:	2229      	movs	r2, #41	@ 0x29
 800aee8:	5c9a      	ldrb	r2, [r3, r2]
 800aeea:	4b9f      	ldr	r3, [pc, #636]	@ (800b168 <E_read+0x400>)
 800aeec:	705a      	strb	r2, [r3, #1]
	tfare[2] = dataRead[42];
 800aeee:	4b98      	ldr	r3, [pc, #608]	@ (800b150 <E_read+0x3e8>)
 800aef0:	222a      	movs	r2, #42	@ 0x2a
 800aef2:	5c9a      	ldrb	r2, [r3, r2]
 800aef4:	4b9c      	ldr	r3, [pc, #624]	@ (800b168 <E_read+0x400>)
 800aef6:	709a      	strb	r2, [r3, #2]
	tfare[3] = dataRead[43];
 800aef8:	4b95      	ldr	r3, [pc, #596]	@ (800b150 <E_read+0x3e8>)
 800aefa:	222b      	movs	r2, #43	@ 0x2b
 800aefc:	5c9a      	ldrb	r2, [r3, r2]
 800aefe:	4b9a      	ldr	r3, [pc, #616]	@ (800b168 <E_read+0x400>)
 800af00:	70da      	strb	r2, [r3, #3]
	tfare[4] = dataRead[44];
 800af02:	4b93      	ldr	r3, [pc, #588]	@ (800b150 <E_read+0x3e8>)
 800af04:	222c      	movs	r2, #44	@ 0x2c
 800af06:	5c9a      	ldrb	r2, [r3, r2]
 800af08:	4b97      	ldr	r3, [pc, #604]	@ (800b168 <E_read+0x400>)
 800af0a:	711a      	strb	r2, [r3, #4]
	tfare[5] = dataRead[45];
 800af0c:	4b90      	ldr	r3, [pc, #576]	@ (800b150 <E_read+0x3e8>)
 800af0e:	222d      	movs	r2, #45	@ 0x2d
 800af10:	5c9a      	ldrb	r2, [r3, r2]
 800af12:	4b95      	ldr	r3, [pc, #596]	@ (800b168 <E_read+0x400>)
 800af14:	715a      	strb	r2, [r3, #5]
	tfare[6] = dataRead[46];
 800af16:	4b8e      	ldr	r3, [pc, #568]	@ (800b150 <E_read+0x3e8>)
 800af18:	222e      	movs	r2, #46	@ 0x2e
 800af1a:	5c9a      	ldrb	r2, [r3, r2]
 800af1c:	4b92      	ldr	r3, [pc, #584]	@ (800b168 <E_read+0x400>)
 800af1e:	719a      	strb	r2, [r3, #6]
	tfare[7] = dataRead[47];
 800af20:	4b8b      	ldr	r3, [pc, #556]	@ (800b150 <E_read+0x3e8>)
 800af22:	222f      	movs	r2, #47	@ 0x2f
 800af24:	5c9a      	ldrb	r2, [r3, r2]
 800af26:	4b90      	ldr	r3, [pc, #576]	@ (800b168 <E_read+0x400>)
 800af28:	71da      	strb	r2, [r3, #7]

	tsub[0] = dataRead[48];
 800af2a:	4b89      	ldr	r3, [pc, #548]	@ (800b150 <E_read+0x3e8>)
 800af2c:	2230      	movs	r2, #48	@ 0x30
 800af2e:	5c9a      	ldrb	r2, [r3, r2]
 800af30:	4b8e      	ldr	r3, [pc, #568]	@ (800b16c <E_read+0x404>)
 800af32:	701a      	strb	r2, [r3, #0]
	tsub[1] = dataRead[49];
 800af34:	4b86      	ldr	r3, [pc, #536]	@ (800b150 <E_read+0x3e8>)
 800af36:	2231      	movs	r2, #49	@ 0x31
 800af38:	5c9a      	ldrb	r2, [r3, r2]
 800af3a:	4b8c      	ldr	r3, [pc, #560]	@ (800b16c <E_read+0x404>)
 800af3c:	705a      	strb	r2, [r3, #1]
	tsub[2] = dataRead[50];
 800af3e:	4b84      	ldr	r3, [pc, #528]	@ (800b150 <E_read+0x3e8>)
 800af40:	2232      	movs	r2, #50	@ 0x32
 800af42:	5c9a      	ldrb	r2, [r3, r2]
 800af44:	4b89      	ldr	r3, [pc, #548]	@ (800b16c <E_read+0x404>)
 800af46:	709a      	strb	r2, [r3, #2]
	tsub[3] = dataRead[51];
 800af48:	4b81      	ldr	r3, [pc, #516]	@ (800b150 <E_read+0x3e8>)
 800af4a:	2233      	movs	r2, #51	@ 0x33
 800af4c:	5c9a      	ldrb	r2, [r3, r2]
 800af4e:	4b87      	ldr	r3, [pc, #540]	@ (800b16c <E_read+0x404>)
 800af50:	70da      	strb	r2, [r3, #3]
	tsub[4] = dataRead[52];
 800af52:	4b7f      	ldr	r3, [pc, #508]	@ (800b150 <E_read+0x3e8>)
 800af54:	2234      	movs	r2, #52	@ 0x34
 800af56:	5c9a      	ldrb	r2, [r3, r2]
 800af58:	4b84      	ldr	r3, [pc, #528]	@ (800b16c <E_read+0x404>)
 800af5a:	711a      	strb	r2, [r3, #4]
	tsub[5] = dataRead[53];
 800af5c:	4b7c      	ldr	r3, [pc, #496]	@ (800b150 <E_read+0x3e8>)
 800af5e:	2235      	movs	r2, #53	@ 0x35
 800af60:	5c9a      	ldrb	r2, [r3, r2]
 800af62:	4b82      	ldr	r3, [pc, #520]	@ (800b16c <E_read+0x404>)
 800af64:	715a      	strb	r2, [r3, #5]
	tsub[6] = dataRead[54];
 800af66:	4b7a      	ldr	r3, [pc, #488]	@ (800b150 <E_read+0x3e8>)
 800af68:	2236      	movs	r2, #54	@ 0x36
 800af6a:	5c9a      	ldrb	r2, [r3, r2]
 800af6c:	4b7f      	ldr	r3, [pc, #508]	@ (800b16c <E_read+0x404>)
 800af6e:	719a      	strb	r2, [r3, #6]
	tsub[7] = dataRead[55];
 800af70:	4b77      	ldr	r3, [pc, #476]	@ (800b150 <E_read+0x3e8>)
 800af72:	2237      	movs	r2, #55	@ 0x37
 800af74:	5c9a      	ldrb	r2, [r3, r2]
 800af76:	4b7d      	ldr	r3, [pc, #500]	@ (800b16c <E_read+0x404>)
 800af78:	71da      	strb	r2, [r3, #7]

	cfare[0] = dataRead[56];
 800af7a:	4b75      	ldr	r3, [pc, #468]	@ (800b150 <E_read+0x3e8>)
 800af7c:	2238      	movs	r2, #56	@ 0x38
 800af7e:	5c9a      	ldrb	r2, [r3, r2]
 800af80:	4b7b      	ldr	r3, [pc, #492]	@ (800b170 <E_read+0x408>)
 800af82:	701a      	strb	r2, [r3, #0]
	cfare[1] = dataRead[57];
 800af84:	4b72      	ldr	r3, [pc, #456]	@ (800b150 <E_read+0x3e8>)
 800af86:	2239      	movs	r2, #57	@ 0x39
 800af88:	5c9a      	ldrb	r2, [r3, r2]
 800af8a:	4b79      	ldr	r3, [pc, #484]	@ (800b170 <E_read+0x408>)
 800af8c:	705a      	strb	r2, [r3, #1]
	cfare[2] = dataRead[58];
 800af8e:	4b70      	ldr	r3, [pc, #448]	@ (800b150 <E_read+0x3e8>)
 800af90:	223a      	movs	r2, #58	@ 0x3a
 800af92:	5c9a      	ldrb	r2, [r3, r2]
 800af94:	4b76      	ldr	r3, [pc, #472]	@ (800b170 <E_read+0x408>)
 800af96:	709a      	strb	r2, [r3, #2]
	cfare[3] = dataRead[59];
 800af98:	4b6d      	ldr	r3, [pc, #436]	@ (800b150 <E_read+0x3e8>)
 800af9a:	223b      	movs	r2, #59	@ 0x3b
 800af9c:	5c9a      	ldrb	r2, [r3, r2]
 800af9e:	4b74      	ldr	r3, [pc, #464]	@ (800b170 <E_read+0x408>)
 800afa0:	70da      	strb	r2, [r3, #3]
	cfare[4] = dataRead[60];
 800afa2:	4b6b      	ldr	r3, [pc, #428]	@ (800b150 <E_read+0x3e8>)
 800afa4:	223c      	movs	r2, #60	@ 0x3c
 800afa6:	5c9a      	ldrb	r2, [r3, r2]
 800afa8:	4b71      	ldr	r3, [pc, #452]	@ (800b170 <E_read+0x408>)
 800afaa:	711a      	strb	r2, [r3, #4]
	cfare[5] = dataRead[61];
 800afac:	4b68      	ldr	r3, [pc, #416]	@ (800b150 <E_read+0x3e8>)
 800afae:	223d      	movs	r2, #61	@ 0x3d
 800afb0:	5c9a      	ldrb	r2, [r3, r2]
 800afb2:	4b6f      	ldr	r3, [pc, #444]	@ (800b170 <E_read+0x408>)
 800afb4:	715a      	strb	r2, [r3, #5]
	cfare[6] = dataRead[62];
 800afb6:	4b66      	ldr	r3, [pc, #408]	@ (800b150 <E_read+0x3e8>)
 800afb8:	223e      	movs	r2, #62	@ 0x3e
 800afba:	5c9a      	ldrb	r2, [r3, r2]
 800afbc:	4b6c      	ldr	r3, [pc, #432]	@ (800b170 <E_read+0x408>)
 800afbe:	719a      	strb	r2, [r3, #6]
	cfare[7] = dataRead[63];
 800afc0:	4b63      	ldr	r3, [pc, #396]	@ (800b150 <E_read+0x3e8>)
 800afc2:	223f      	movs	r2, #63	@ 0x3f
 800afc4:	5c9a      	ldrb	r2, [r3, r2]
 800afc6:	4b6a      	ldr	r3, [pc, #424]	@ (800b170 <E_read+0x408>)
 800afc8:	71da      	strb	r2, [r3, #7]

	csub[0] = dataRead[64];
 800afca:	4b61      	ldr	r3, [pc, #388]	@ (800b150 <E_read+0x3e8>)
 800afcc:	2240      	movs	r2, #64	@ 0x40
 800afce:	5c9a      	ldrb	r2, [r3, r2]
 800afd0:	4b68      	ldr	r3, [pc, #416]	@ (800b174 <E_read+0x40c>)
 800afd2:	701a      	strb	r2, [r3, #0]
	csub[1] = dataRead[65];
 800afd4:	4b5e      	ldr	r3, [pc, #376]	@ (800b150 <E_read+0x3e8>)
 800afd6:	2241      	movs	r2, #65	@ 0x41
 800afd8:	5c9a      	ldrb	r2, [r3, r2]
 800afda:	4b66      	ldr	r3, [pc, #408]	@ (800b174 <E_read+0x40c>)
 800afdc:	705a      	strb	r2, [r3, #1]
	csub[2] = dataRead[66];
 800afde:	4b5c      	ldr	r3, [pc, #368]	@ (800b150 <E_read+0x3e8>)
 800afe0:	2242      	movs	r2, #66	@ 0x42
 800afe2:	5c9a      	ldrb	r2, [r3, r2]
 800afe4:	4b63      	ldr	r3, [pc, #396]	@ (800b174 <E_read+0x40c>)
 800afe6:	709a      	strb	r2, [r3, #2]
	csub[3] = dataRead[67];
 800afe8:	4b59      	ldr	r3, [pc, #356]	@ (800b150 <E_read+0x3e8>)
 800afea:	2243      	movs	r2, #67	@ 0x43
 800afec:	5c9a      	ldrb	r2, [r3, r2]
 800afee:	4b61      	ldr	r3, [pc, #388]	@ (800b174 <E_read+0x40c>)
 800aff0:	70da      	strb	r2, [r3, #3]
	csub[4] = dataRead[68];
 800aff2:	4b57      	ldr	r3, [pc, #348]	@ (800b150 <E_read+0x3e8>)
 800aff4:	2244      	movs	r2, #68	@ 0x44
 800aff6:	5c9a      	ldrb	r2, [r3, r2]
 800aff8:	4b5e      	ldr	r3, [pc, #376]	@ (800b174 <E_read+0x40c>)
 800affa:	711a      	strb	r2, [r3, #4]
	csub[5] = dataRead[69];
 800affc:	4b54      	ldr	r3, [pc, #336]	@ (800b150 <E_read+0x3e8>)
 800affe:	2245      	movs	r2, #69	@ 0x45
 800b000:	5c9a      	ldrb	r2, [r3, r2]
 800b002:	4b5c      	ldr	r3, [pc, #368]	@ (800b174 <E_read+0x40c>)
 800b004:	715a      	strb	r2, [r3, #5]
	csub[6] = dataRead[70];
 800b006:	4b52      	ldr	r3, [pc, #328]	@ (800b150 <E_read+0x3e8>)
 800b008:	2246      	movs	r2, #70	@ 0x46
 800b00a:	5c9a      	ldrb	r2, [r3, r2]
 800b00c:	4b59      	ldr	r3, [pc, #356]	@ (800b174 <E_read+0x40c>)
 800b00e:	719a      	strb	r2, [r3, #6]
	csub[7] = dataRead[71];
 800b010:	4b4f      	ldr	r3, [pc, #316]	@ (800b150 <E_read+0x3e8>)
 800b012:	2247      	movs	r2, #71	@ 0x47
 800b014:	5c9a      	ldrb	r2, [r3, r2]
 800b016:	4b57      	ldr	r3, [pc, #348]	@ (800b174 <E_read+0x40c>)
 800b018:	71da      	strb	r2, [r3, #7]

	ttime[0] = dataRead[72];
 800b01a:	4b4d      	ldr	r3, [pc, #308]	@ (800b150 <E_read+0x3e8>)
 800b01c:	2248      	movs	r2, #72	@ 0x48
 800b01e:	5c9a      	ldrb	r2, [r3, r2]
 800b020:	4b55      	ldr	r3, [pc, #340]	@ (800b178 <E_read+0x410>)
 800b022:	701a      	strb	r2, [r3, #0]
	ttime[1] = dataRead[73];
 800b024:	4b4a      	ldr	r3, [pc, #296]	@ (800b150 <E_read+0x3e8>)
 800b026:	2249      	movs	r2, #73	@ 0x49
 800b028:	5c9a      	ldrb	r2, [r3, r2]
 800b02a:	4b53      	ldr	r3, [pc, #332]	@ (800b178 <E_read+0x410>)
 800b02c:	705a      	strb	r2, [r3, #1]
	ttime[2] = dataRead[74];
 800b02e:	4b48      	ldr	r3, [pc, #288]	@ (800b150 <E_read+0x3e8>)
 800b030:	224a      	movs	r2, #74	@ 0x4a
 800b032:	5c9a      	ldrb	r2, [r3, r2]
 800b034:	4b50      	ldr	r3, [pc, #320]	@ (800b178 <E_read+0x410>)
 800b036:	709a      	strb	r2, [r3, #2]
	ttime[3] = dataRead[75];
 800b038:	4b45      	ldr	r3, [pc, #276]	@ (800b150 <E_read+0x3e8>)
 800b03a:	224b      	movs	r2, #75	@ 0x4b
 800b03c:	5c9a      	ldrb	r2, [r3, r2]
 800b03e:	4b4e      	ldr	r3, [pc, #312]	@ (800b178 <E_read+0x410>)
 800b040:	70da      	strb	r2, [r3, #3]
	ttime[4] = dataRead[76];
 800b042:	4b43      	ldr	r3, [pc, #268]	@ (800b150 <E_read+0x3e8>)
 800b044:	224c      	movs	r2, #76	@ 0x4c
 800b046:	5c9a      	ldrb	r2, [r3, r2]
 800b048:	4b4b      	ldr	r3, [pc, #300]	@ (800b178 <E_read+0x410>)
 800b04a:	711a      	strb	r2, [r3, #4]
	ttime[5] = dataRead[77];
 800b04c:	4b40      	ldr	r3, [pc, #256]	@ (800b150 <E_read+0x3e8>)
 800b04e:	224d      	movs	r2, #77	@ 0x4d
 800b050:	5c9a      	ldrb	r2, [r3, r2]
 800b052:	4b49      	ldr	r3, [pc, #292]	@ (800b178 <E_read+0x410>)
 800b054:	715a      	strb	r2, [r3, #5]
	ttime[6] = dataRead[78];
 800b056:	4b3e      	ldr	r3, [pc, #248]	@ (800b150 <E_read+0x3e8>)
 800b058:	224e      	movs	r2, #78	@ 0x4e
 800b05a:	5c9a      	ldrb	r2, [r3, r2]
 800b05c:	4b46      	ldr	r3, [pc, #280]	@ (800b178 <E_read+0x410>)
 800b05e:	719a      	strb	r2, [r3, #6]
	ttime[7] = dataRead[79];
 800b060:	4b3b      	ldr	r3, [pc, #236]	@ (800b150 <E_read+0x3e8>)
 800b062:	224f      	movs	r2, #79	@ 0x4f
 800b064:	5c9a      	ldrb	r2, [r3, r2]
 800b066:	4b44      	ldr	r3, [pc, #272]	@ (800b178 <E_read+0x410>)
 800b068:	71da      	strb	r2, [r3, #7]

	pulses[0] = dataRead[80];
 800b06a:	4b39      	ldr	r3, [pc, #228]	@ (800b150 <E_read+0x3e8>)
 800b06c:	2250      	movs	r2, #80	@ 0x50
 800b06e:	5c9a      	ldrb	r2, [r3, r2]
 800b070:	4b42      	ldr	r3, [pc, #264]	@ (800b17c <E_read+0x414>)
 800b072:	701a      	strb	r2, [r3, #0]
	pulses[1] = dataRead[81];
 800b074:	4b36      	ldr	r3, [pc, #216]	@ (800b150 <E_read+0x3e8>)
 800b076:	2251      	movs	r2, #81	@ 0x51
 800b078:	5c9a      	ldrb	r2, [r3, r2]
 800b07a:	4b40      	ldr	r3, [pc, #256]	@ (800b17c <E_read+0x414>)
 800b07c:	705a      	strb	r2, [r3, #1]
	pulses[2] = dataRead[82];
 800b07e:	4b34      	ldr	r3, [pc, #208]	@ (800b150 <E_read+0x3e8>)
 800b080:	2252      	movs	r2, #82	@ 0x52
 800b082:	5c9a      	ldrb	r2, [r3, r2]
 800b084:	4b3d      	ldr	r3, [pc, #244]	@ (800b17c <E_read+0x414>)
 800b086:	709a      	strb	r2, [r3, #2]
	pulses[3] = dataRead[83];
 800b088:	4b31      	ldr	r3, [pc, #196]	@ (800b150 <E_read+0x3e8>)
 800b08a:	2253      	movs	r2, #83	@ 0x53
 800b08c:	5c9a      	ldrb	r2, [r3, r2]
 800b08e:	4b3b      	ldr	r3, [pc, #236]	@ (800b17c <E_read+0x414>)
 800b090:	70da      	strb	r2, [r3, #3]
	pulses[4] = dataRead[84];
 800b092:	4b2f      	ldr	r3, [pc, #188]	@ (800b150 <E_read+0x3e8>)
 800b094:	2254      	movs	r2, #84	@ 0x54
 800b096:	5c9a      	ldrb	r2, [r3, r2]
 800b098:	4b38      	ldr	r3, [pc, #224]	@ (800b17c <E_read+0x414>)
 800b09a:	711a      	strb	r2, [r3, #4]
	pulses[5] = dataRead[85];
 800b09c:	4b2c      	ldr	r3, [pc, #176]	@ (800b150 <E_read+0x3e8>)
 800b09e:	2255      	movs	r2, #85	@ 0x55
 800b0a0:	5c9a      	ldrb	r2, [r3, r2]
 800b0a2:	4b36      	ldr	r3, [pc, #216]	@ (800b17c <E_read+0x414>)
 800b0a4:	715a      	strb	r2, [r3, #5]
	pulses[6] = dataRead[86];
 800b0a6:	4b2a      	ldr	r3, [pc, #168]	@ (800b150 <E_read+0x3e8>)
 800b0a8:	2256      	movs	r2, #86	@ 0x56
 800b0aa:	5c9a      	ldrb	r2, [r3, r2]
 800b0ac:	4b33      	ldr	r3, [pc, #204]	@ (800b17c <E_read+0x414>)
 800b0ae:	719a      	strb	r2, [r3, #6]
	pulses[7] = dataRead[87];
 800b0b0:	4b27      	ldr	r3, [pc, #156]	@ (800b150 <E_read+0x3e8>)
 800b0b2:	2257      	movs	r2, #87	@ 0x57
 800b0b4:	5c9a      	ldrb	r2, [r3, r2]
 800b0b6:	4b31      	ldr	r3, [pc, #196]	@ (800b17c <E_read+0x414>)
 800b0b8:	71da      	strb	r2, [r3, #7]

	tkm_d = ASC2Dec(tkm);
 800b0ba:	4b26      	ldr	r3, [pc, #152]	@ (800b154 <E_read+0x3ec>)
 800b0bc:	0018      	movs	r0, r3
 800b0be:	f7ff fe1f 	bl	800ad00 <ASC2Dec>
 800b0c2:	0002      	movs	r2, r0
 800b0c4:	4b2e      	ldr	r3, [pc, #184]	@ (800b180 <E_read+0x418>)
 800b0c6:	601a      	str	r2, [r3, #0]
	pkm_d = ASC2Dec(pkm);
 800b0c8:	4b23      	ldr	r3, [pc, #140]	@ (800b158 <E_read+0x3f0>)
 800b0ca:	0018      	movs	r0, r3
 800b0cc:	f7ff fe18 	bl	800ad00 <ASC2Dec>
 800b0d0:	0002      	movs	r2, r0
 800b0d2:	4b2c      	ldr	r3, [pc, #176]	@ (800b184 <E_read+0x41c>)
 800b0d4:	601a      	str	r2, [r3, #0]
	tflag_d = ASC2Dec(tflag);
 800b0d6:	4b21      	ldr	r3, [pc, #132]	@ (800b15c <E_read+0x3f4>)
 800b0d8:	0018      	movs	r0, r3
 800b0da:	f7ff fe11 	bl	800ad00 <ASC2Dec>
 800b0de:	0002      	movs	r2, r0
 800b0e0:	4b29      	ldr	r3, [pc, #164]	@ (800b188 <E_read+0x420>)
 800b0e2:	601a      	str	r2, [r3, #0]
	cflag_d = ASC2Dec(cflag);
 800b0e4:	4b1e      	ldr	r3, [pc, #120]	@ (800b160 <E_read+0x3f8>)
 800b0e6:	0018      	movs	r0, r3
 800b0e8:	f7ff fe0a 	bl	800ad00 <ASC2Dec>
 800b0ec:	0002      	movs	r2, r0
 800b0ee:	4b27      	ldr	r3, [pc, #156]	@ (800b18c <E_read+0x424>)
 800b0f0:	601a      	str	r2, [r3, #0]
	tpulse_d = ASC2Dec(tpulse);
 800b0f2:	4b1c      	ldr	r3, [pc, #112]	@ (800b164 <E_read+0x3fc>)
 800b0f4:	0018      	movs	r0, r3
 800b0f6:	f7ff fe03 	bl	800ad00 <ASC2Dec>
 800b0fa:	0002      	movs	r2, r0
 800b0fc:	4b24      	ldr	r3, [pc, #144]	@ (800b190 <E_read+0x428>)
 800b0fe:	601a      	str	r2, [r3, #0]
	tfare_d = ASC2Dec(tfare);
 800b100:	4b19      	ldr	r3, [pc, #100]	@ (800b168 <E_read+0x400>)
 800b102:	0018      	movs	r0, r3
 800b104:	f7ff fdfc 	bl	800ad00 <ASC2Dec>
 800b108:	0002      	movs	r2, r0
 800b10a:	4b22      	ldr	r3, [pc, #136]	@ (800b194 <E_read+0x42c>)
 800b10c:	601a      	str	r2, [r3, #0]
	tsub_d = ASC2Dec(tsub);
 800b10e:	4b17      	ldr	r3, [pc, #92]	@ (800b16c <E_read+0x404>)
 800b110:	0018      	movs	r0, r3
 800b112:	f7ff fdf5 	bl	800ad00 <ASC2Dec>
 800b116:	0002      	movs	r2, r0
 800b118:	4b1f      	ldr	r3, [pc, #124]	@ (800b198 <E_read+0x430>)
 800b11a:	601a      	str	r2, [r3, #0]
	cfare_d = ASC2Dec(cfare);
 800b11c:	4b14      	ldr	r3, [pc, #80]	@ (800b170 <E_read+0x408>)
 800b11e:	0018      	movs	r0, r3
 800b120:	f7ff fdee 	bl	800ad00 <ASC2Dec>
 800b124:	0002      	movs	r2, r0
 800b126:	4b1d      	ldr	r3, [pc, #116]	@ (800b19c <E_read+0x434>)
 800b128:	601a      	str	r2, [r3, #0]
	csub_d = ASC2Dec(csub);
 800b12a:	4b12      	ldr	r3, [pc, #72]	@ (800b174 <E_read+0x40c>)
 800b12c:	0018      	movs	r0, r3
 800b12e:	f7ff fde7 	bl	800ad00 <ASC2Dec>
 800b132:	0002      	movs	r2, r0
 800b134:	4b1a      	ldr	r3, [pc, #104]	@ (800b1a0 <E_read+0x438>)
 800b136:	601a      	str	r2, [r3, #0]
//	ttime_d = ASC2Dec(ttime);
	ttime_x = ASC2Dec(ttime);
 800b138:	4b0f      	ldr	r3, [pc, #60]	@ (800b178 <E_read+0x410>)
 800b13a:	0018      	movs	r0, r3
 800b13c:	f7ff fde0 	bl	800ad00 <ASC2Dec>
 800b140:	0002      	movs	r2, r0
 800b142:	4b18      	ldr	r3, [pc, #96]	@ (800b1a4 <E_read+0x43c>)
 800b144:	601a      	str	r2, [r3, #0]
//	Long_to_byte(csub_d_x10, temp_array);
//	memcpy(dataDisplay+36, temp_array, sizeof(uint8_t)*4);
//
//	memcpy(total_hmi+6, dataDisplay, sizeof(uint8_t)*40);
//	HAL_UART_Transmit(&huart1, total_hmi, 46, 0x0E);
}
 800b146:	46c0      	nop			@ (mov r8, r8)
 800b148:	46bd      	mov	sp, r7
 800b14a:	e02d      	b.n	800b1a8 <E_read+0x440>
 800b14c:	2000057c 	.word	0x2000057c
 800b150:	20000d58 	.word	0x20000d58
 800b154:	20000e5c 	.word	0x20000e5c
 800b158:	20000e64 	.word	0x20000e64
 800b15c:	20000e6c 	.word	0x20000e6c
 800b160:	20000e74 	.word	0x20000e74
 800b164:	20000e7c 	.word	0x20000e7c
 800b168:	20000e84 	.word	0x20000e84
 800b16c:	20000e8c 	.word	0x20000e8c
 800b170:	20000e94 	.word	0x20000e94
 800b174:	20000e9c 	.word	0x20000e9c
 800b178:	20000ea4 	.word	0x20000ea4
 800b17c:	20000ebc 	.word	0x20000ebc
 800b180:	20000e20 	.word	0x20000e20
 800b184:	20000e24 	.word	0x20000e24
 800b188:	20000e28 	.word	0x20000e28
 800b18c:	20000e2c 	.word	0x20000e2c
 800b190:	20000e30 	.word	0x20000e30
 800b194:	20000e34 	.word	0x20000e34
 800b198:	20000e38 	.word	0x20000e38
 800b19c:	20000e3c 	.word	0x20000e3c
 800b1a0:	20000e40 	.word	0x20000e40
 800b1a4:	20000e48 	.word	0x20000e48
 800b1a8:	bd80      	pop	{r7, pc}
 800b1aa:	46c0      	nop			@ (mov r8, r8)

0800b1ac <E_write>:

void E_write(void)
{
 800b1ac:	b580      	push	{r7, lr}
 800b1ae:	b084      	sub	sp, #16
 800b1b0:	af04      	add	r7, sp, #16
	dataWrite[0] = tkm[0];
 800b1b2:	4bf4      	ldr	r3, [pc, #976]	@ (800b584 <E_write+0x3d8>)
 800b1b4:	781a      	ldrb	r2, [r3, #0]
 800b1b6:	4bf4      	ldr	r3, [pc, #976]	@ (800b588 <E_write+0x3dc>)
 800b1b8:	701a      	strb	r2, [r3, #0]
	dataWrite[1] = tkm[1];
 800b1ba:	4bf2      	ldr	r3, [pc, #968]	@ (800b584 <E_write+0x3d8>)
 800b1bc:	785a      	ldrb	r2, [r3, #1]
 800b1be:	4bf2      	ldr	r3, [pc, #968]	@ (800b588 <E_write+0x3dc>)
 800b1c0:	705a      	strb	r2, [r3, #1]
	dataWrite[2] = tkm[2];
 800b1c2:	4bf0      	ldr	r3, [pc, #960]	@ (800b584 <E_write+0x3d8>)
 800b1c4:	789a      	ldrb	r2, [r3, #2]
 800b1c6:	4bf0      	ldr	r3, [pc, #960]	@ (800b588 <E_write+0x3dc>)
 800b1c8:	709a      	strb	r2, [r3, #2]
	dataWrite[3] = tkm[3];
 800b1ca:	4bee      	ldr	r3, [pc, #952]	@ (800b584 <E_write+0x3d8>)
 800b1cc:	78da      	ldrb	r2, [r3, #3]
 800b1ce:	4bee      	ldr	r3, [pc, #952]	@ (800b588 <E_write+0x3dc>)
 800b1d0:	70da      	strb	r2, [r3, #3]
	dataWrite[4] = tkm[4];
 800b1d2:	4bec      	ldr	r3, [pc, #944]	@ (800b584 <E_write+0x3d8>)
 800b1d4:	791a      	ldrb	r2, [r3, #4]
 800b1d6:	4bec      	ldr	r3, [pc, #944]	@ (800b588 <E_write+0x3dc>)
 800b1d8:	711a      	strb	r2, [r3, #4]
	dataWrite[5] = tkm[5];
 800b1da:	4bea      	ldr	r3, [pc, #936]	@ (800b584 <E_write+0x3d8>)
 800b1dc:	795a      	ldrb	r2, [r3, #5]
 800b1de:	4bea      	ldr	r3, [pc, #936]	@ (800b588 <E_write+0x3dc>)
 800b1e0:	715a      	strb	r2, [r3, #5]
	dataWrite[6] = tkm[6];
 800b1e2:	4be8      	ldr	r3, [pc, #928]	@ (800b584 <E_write+0x3d8>)
 800b1e4:	799a      	ldrb	r2, [r3, #6]
 800b1e6:	4be8      	ldr	r3, [pc, #928]	@ (800b588 <E_write+0x3dc>)
 800b1e8:	719a      	strb	r2, [r3, #6]
	dataWrite[7] = tkm[7];
 800b1ea:	4be6      	ldr	r3, [pc, #920]	@ (800b584 <E_write+0x3d8>)
 800b1ec:	79da      	ldrb	r2, [r3, #7]
 800b1ee:	4be6      	ldr	r3, [pc, #920]	@ (800b588 <E_write+0x3dc>)
 800b1f0:	71da      	strb	r2, [r3, #7]

	dataWrite[8] = pkm[0];
 800b1f2:	4be6      	ldr	r3, [pc, #920]	@ (800b58c <E_write+0x3e0>)
 800b1f4:	781a      	ldrb	r2, [r3, #0]
 800b1f6:	4be4      	ldr	r3, [pc, #912]	@ (800b588 <E_write+0x3dc>)
 800b1f8:	721a      	strb	r2, [r3, #8]
	dataWrite[9] = pkm[1];
 800b1fa:	4be4      	ldr	r3, [pc, #912]	@ (800b58c <E_write+0x3e0>)
 800b1fc:	785a      	ldrb	r2, [r3, #1]
 800b1fe:	4be2      	ldr	r3, [pc, #904]	@ (800b588 <E_write+0x3dc>)
 800b200:	725a      	strb	r2, [r3, #9]
	dataWrite[10] = pkm[2];
 800b202:	4be2      	ldr	r3, [pc, #904]	@ (800b58c <E_write+0x3e0>)
 800b204:	789a      	ldrb	r2, [r3, #2]
 800b206:	4be0      	ldr	r3, [pc, #896]	@ (800b588 <E_write+0x3dc>)
 800b208:	729a      	strb	r2, [r3, #10]
	dataWrite[11] = pkm[3];
 800b20a:	4be0      	ldr	r3, [pc, #896]	@ (800b58c <E_write+0x3e0>)
 800b20c:	78da      	ldrb	r2, [r3, #3]
 800b20e:	4bde      	ldr	r3, [pc, #888]	@ (800b588 <E_write+0x3dc>)
 800b210:	72da      	strb	r2, [r3, #11]
	dataWrite[12] = pkm[4];
 800b212:	4bde      	ldr	r3, [pc, #888]	@ (800b58c <E_write+0x3e0>)
 800b214:	791a      	ldrb	r2, [r3, #4]
 800b216:	4bdc      	ldr	r3, [pc, #880]	@ (800b588 <E_write+0x3dc>)
 800b218:	731a      	strb	r2, [r3, #12]
	dataWrite[13] = pkm[5];
 800b21a:	4bdc      	ldr	r3, [pc, #880]	@ (800b58c <E_write+0x3e0>)
 800b21c:	795a      	ldrb	r2, [r3, #5]
 800b21e:	4bda      	ldr	r3, [pc, #872]	@ (800b588 <E_write+0x3dc>)
 800b220:	735a      	strb	r2, [r3, #13]
	dataWrite[14] = pkm[6];
 800b222:	4bda      	ldr	r3, [pc, #872]	@ (800b58c <E_write+0x3e0>)
 800b224:	799a      	ldrb	r2, [r3, #6]
 800b226:	4bd8      	ldr	r3, [pc, #864]	@ (800b588 <E_write+0x3dc>)
 800b228:	739a      	strb	r2, [r3, #14]
	dataWrite[15] = pkm[7];
 800b22a:	4bd8      	ldr	r3, [pc, #864]	@ (800b58c <E_write+0x3e0>)
 800b22c:	79da      	ldrb	r2, [r3, #7]
 800b22e:	4bd6      	ldr	r3, [pc, #856]	@ (800b588 <E_write+0x3dc>)
 800b230:	73da      	strb	r2, [r3, #15]

	dataWrite[16] = tflag[0];
 800b232:	4bd7      	ldr	r3, [pc, #860]	@ (800b590 <E_write+0x3e4>)
 800b234:	781a      	ldrb	r2, [r3, #0]
 800b236:	4bd4      	ldr	r3, [pc, #848]	@ (800b588 <E_write+0x3dc>)
 800b238:	741a      	strb	r2, [r3, #16]
	dataWrite[17] = tflag[1];
 800b23a:	4bd5      	ldr	r3, [pc, #852]	@ (800b590 <E_write+0x3e4>)
 800b23c:	785a      	ldrb	r2, [r3, #1]
 800b23e:	4bd2      	ldr	r3, [pc, #840]	@ (800b588 <E_write+0x3dc>)
 800b240:	745a      	strb	r2, [r3, #17]
	dataWrite[18] = tflag[2];
 800b242:	4bd3      	ldr	r3, [pc, #844]	@ (800b590 <E_write+0x3e4>)
 800b244:	789a      	ldrb	r2, [r3, #2]
 800b246:	4bd0      	ldr	r3, [pc, #832]	@ (800b588 <E_write+0x3dc>)
 800b248:	749a      	strb	r2, [r3, #18]
	dataWrite[19] = tflag[3];
 800b24a:	4bd1      	ldr	r3, [pc, #836]	@ (800b590 <E_write+0x3e4>)
 800b24c:	78da      	ldrb	r2, [r3, #3]
 800b24e:	4bce      	ldr	r3, [pc, #824]	@ (800b588 <E_write+0x3dc>)
 800b250:	74da      	strb	r2, [r3, #19]
	dataWrite[20] = tflag[4];
 800b252:	4bcf      	ldr	r3, [pc, #828]	@ (800b590 <E_write+0x3e4>)
 800b254:	791a      	ldrb	r2, [r3, #4]
 800b256:	4bcc      	ldr	r3, [pc, #816]	@ (800b588 <E_write+0x3dc>)
 800b258:	751a      	strb	r2, [r3, #20]
	dataWrite[21] = tflag[5];
 800b25a:	4bcd      	ldr	r3, [pc, #820]	@ (800b590 <E_write+0x3e4>)
 800b25c:	795a      	ldrb	r2, [r3, #5]
 800b25e:	4bca      	ldr	r3, [pc, #808]	@ (800b588 <E_write+0x3dc>)
 800b260:	755a      	strb	r2, [r3, #21]
	dataWrite[22] = tflag[6];
 800b262:	4bcb      	ldr	r3, [pc, #812]	@ (800b590 <E_write+0x3e4>)
 800b264:	799a      	ldrb	r2, [r3, #6]
 800b266:	4bc8      	ldr	r3, [pc, #800]	@ (800b588 <E_write+0x3dc>)
 800b268:	759a      	strb	r2, [r3, #22]
	dataWrite[23] = tflag[7];
 800b26a:	4bc9      	ldr	r3, [pc, #804]	@ (800b590 <E_write+0x3e4>)
 800b26c:	79da      	ldrb	r2, [r3, #7]
 800b26e:	4bc6      	ldr	r3, [pc, #792]	@ (800b588 <E_write+0x3dc>)
 800b270:	75da      	strb	r2, [r3, #23]

	dataWrite[24] = cflag[0];
 800b272:	4bc8      	ldr	r3, [pc, #800]	@ (800b594 <E_write+0x3e8>)
 800b274:	781a      	ldrb	r2, [r3, #0]
 800b276:	4bc4      	ldr	r3, [pc, #784]	@ (800b588 <E_write+0x3dc>)
 800b278:	761a      	strb	r2, [r3, #24]
	dataWrite[25] = cflag[1];
 800b27a:	4bc6      	ldr	r3, [pc, #792]	@ (800b594 <E_write+0x3e8>)
 800b27c:	785a      	ldrb	r2, [r3, #1]
 800b27e:	4bc2      	ldr	r3, [pc, #776]	@ (800b588 <E_write+0x3dc>)
 800b280:	765a      	strb	r2, [r3, #25]
	dataWrite[26] = cflag[2];
 800b282:	4bc4      	ldr	r3, [pc, #784]	@ (800b594 <E_write+0x3e8>)
 800b284:	789a      	ldrb	r2, [r3, #2]
 800b286:	4bc0      	ldr	r3, [pc, #768]	@ (800b588 <E_write+0x3dc>)
 800b288:	769a      	strb	r2, [r3, #26]
	dataWrite[27] = cflag[3];
 800b28a:	4bc2      	ldr	r3, [pc, #776]	@ (800b594 <E_write+0x3e8>)
 800b28c:	78da      	ldrb	r2, [r3, #3]
 800b28e:	4bbe      	ldr	r3, [pc, #760]	@ (800b588 <E_write+0x3dc>)
 800b290:	76da      	strb	r2, [r3, #27]
	dataWrite[28] = cflag[4];
 800b292:	4bc0      	ldr	r3, [pc, #768]	@ (800b594 <E_write+0x3e8>)
 800b294:	791a      	ldrb	r2, [r3, #4]
 800b296:	4bbc      	ldr	r3, [pc, #752]	@ (800b588 <E_write+0x3dc>)
 800b298:	771a      	strb	r2, [r3, #28]
	dataWrite[29] = cflag[5];
 800b29a:	4bbe      	ldr	r3, [pc, #760]	@ (800b594 <E_write+0x3e8>)
 800b29c:	795a      	ldrb	r2, [r3, #5]
 800b29e:	4bba      	ldr	r3, [pc, #744]	@ (800b588 <E_write+0x3dc>)
 800b2a0:	775a      	strb	r2, [r3, #29]
	dataWrite[30] = cflag[6];
 800b2a2:	4bbc      	ldr	r3, [pc, #752]	@ (800b594 <E_write+0x3e8>)
 800b2a4:	799a      	ldrb	r2, [r3, #6]
 800b2a6:	4bb8      	ldr	r3, [pc, #736]	@ (800b588 <E_write+0x3dc>)
 800b2a8:	779a      	strb	r2, [r3, #30]
	dataWrite[31] = cflag[7];
 800b2aa:	4bba      	ldr	r3, [pc, #744]	@ (800b594 <E_write+0x3e8>)
 800b2ac:	79da      	ldrb	r2, [r3, #7]
 800b2ae:	4bb6      	ldr	r3, [pc, #728]	@ (800b588 <E_write+0x3dc>)
 800b2b0:	77da      	strb	r2, [r3, #31]

	dataWrite[32] = tpulse[0];
 800b2b2:	4bb9      	ldr	r3, [pc, #740]	@ (800b598 <E_write+0x3ec>)
 800b2b4:	7819      	ldrb	r1, [r3, #0]
 800b2b6:	4bb4      	ldr	r3, [pc, #720]	@ (800b588 <E_write+0x3dc>)
 800b2b8:	2220      	movs	r2, #32
 800b2ba:	5499      	strb	r1, [r3, r2]
	dataWrite[33] = tpulse[1];
 800b2bc:	4bb6      	ldr	r3, [pc, #728]	@ (800b598 <E_write+0x3ec>)
 800b2be:	7859      	ldrb	r1, [r3, #1]
 800b2c0:	4bb1      	ldr	r3, [pc, #708]	@ (800b588 <E_write+0x3dc>)
 800b2c2:	2221      	movs	r2, #33	@ 0x21
 800b2c4:	5499      	strb	r1, [r3, r2]
	dataWrite[34] = tpulse[2];
 800b2c6:	4bb4      	ldr	r3, [pc, #720]	@ (800b598 <E_write+0x3ec>)
 800b2c8:	7899      	ldrb	r1, [r3, #2]
 800b2ca:	4baf      	ldr	r3, [pc, #700]	@ (800b588 <E_write+0x3dc>)
 800b2cc:	2222      	movs	r2, #34	@ 0x22
 800b2ce:	5499      	strb	r1, [r3, r2]
	dataWrite[35] = tpulse[3];
 800b2d0:	4bb1      	ldr	r3, [pc, #708]	@ (800b598 <E_write+0x3ec>)
 800b2d2:	78d9      	ldrb	r1, [r3, #3]
 800b2d4:	4bac      	ldr	r3, [pc, #688]	@ (800b588 <E_write+0x3dc>)
 800b2d6:	2223      	movs	r2, #35	@ 0x23
 800b2d8:	5499      	strb	r1, [r3, r2]
	dataWrite[36] = tpulse[4];
 800b2da:	4baf      	ldr	r3, [pc, #700]	@ (800b598 <E_write+0x3ec>)
 800b2dc:	7919      	ldrb	r1, [r3, #4]
 800b2de:	4baa      	ldr	r3, [pc, #680]	@ (800b588 <E_write+0x3dc>)
 800b2e0:	2224      	movs	r2, #36	@ 0x24
 800b2e2:	5499      	strb	r1, [r3, r2]
	dataWrite[37] = tpulse[5];
 800b2e4:	4bac      	ldr	r3, [pc, #688]	@ (800b598 <E_write+0x3ec>)
 800b2e6:	7959      	ldrb	r1, [r3, #5]
 800b2e8:	4ba7      	ldr	r3, [pc, #668]	@ (800b588 <E_write+0x3dc>)
 800b2ea:	2225      	movs	r2, #37	@ 0x25
 800b2ec:	5499      	strb	r1, [r3, r2]
	dataWrite[38] = tpulse[6];
 800b2ee:	4baa      	ldr	r3, [pc, #680]	@ (800b598 <E_write+0x3ec>)
 800b2f0:	7999      	ldrb	r1, [r3, #6]
 800b2f2:	4ba5      	ldr	r3, [pc, #660]	@ (800b588 <E_write+0x3dc>)
 800b2f4:	2226      	movs	r2, #38	@ 0x26
 800b2f6:	5499      	strb	r1, [r3, r2]
	dataWrite[39] = tpulse[7];
 800b2f8:	4ba7      	ldr	r3, [pc, #668]	@ (800b598 <E_write+0x3ec>)
 800b2fa:	79d9      	ldrb	r1, [r3, #7]
 800b2fc:	4ba2      	ldr	r3, [pc, #648]	@ (800b588 <E_write+0x3dc>)
 800b2fe:	2227      	movs	r2, #39	@ 0x27
 800b300:	5499      	strb	r1, [r3, r2]

	dataWrite[40] = tfare[0];
 800b302:	4ba6      	ldr	r3, [pc, #664]	@ (800b59c <E_write+0x3f0>)
 800b304:	7819      	ldrb	r1, [r3, #0]
 800b306:	4ba0      	ldr	r3, [pc, #640]	@ (800b588 <E_write+0x3dc>)
 800b308:	2228      	movs	r2, #40	@ 0x28
 800b30a:	5499      	strb	r1, [r3, r2]
	dataWrite[41] = tfare[1];
 800b30c:	4ba3      	ldr	r3, [pc, #652]	@ (800b59c <E_write+0x3f0>)
 800b30e:	7859      	ldrb	r1, [r3, #1]
 800b310:	4b9d      	ldr	r3, [pc, #628]	@ (800b588 <E_write+0x3dc>)
 800b312:	2229      	movs	r2, #41	@ 0x29
 800b314:	5499      	strb	r1, [r3, r2]
	dataWrite[42] = tfare[2];
 800b316:	4ba1      	ldr	r3, [pc, #644]	@ (800b59c <E_write+0x3f0>)
 800b318:	7899      	ldrb	r1, [r3, #2]
 800b31a:	4b9b      	ldr	r3, [pc, #620]	@ (800b588 <E_write+0x3dc>)
 800b31c:	222a      	movs	r2, #42	@ 0x2a
 800b31e:	5499      	strb	r1, [r3, r2]
	dataWrite[43] = tfare[3];
 800b320:	4b9e      	ldr	r3, [pc, #632]	@ (800b59c <E_write+0x3f0>)
 800b322:	78d9      	ldrb	r1, [r3, #3]
 800b324:	4b98      	ldr	r3, [pc, #608]	@ (800b588 <E_write+0x3dc>)
 800b326:	222b      	movs	r2, #43	@ 0x2b
 800b328:	5499      	strb	r1, [r3, r2]
	dataWrite[44] = tfare[4];
 800b32a:	4b9c      	ldr	r3, [pc, #624]	@ (800b59c <E_write+0x3f0>)
 800b32c:	7919      	ldrb	r1, [r3, #4]
 800b32e:	4b96      	ldr	r3, [pc, #600]	@ (800b588 <E_write+0x3dc>)
 800b330:	222c      	movs	r2, #44	@ 0x2c
 800b332:	5499      	strb	r1, [r3, r2]
	dataWrite[45] = tfare[5];
 800b334:	4b99      	ldr	r3, [pc, #612]	@ (800b59c <E_write+0x3f0>)
 800b336:	7959      	ldrb	r1, [r3, #5]
 800b338:	4b93      	ldr	r3, [pc, #588]	@ (800b588 <E_write+0x3dc>)
 800b33a:	222d      	movs	r2, #45	@ 0x2d
 800b33c:	5499      	strb	r1, [r3, r2]
	dataWrite[46] = tfare[6];
 800b33e:	4b97      	ldr	r3, [pc, #604]	@ (800b59c <E_write+0x3f0>)
 800b340:	7999      	ldrb	r1, [r3, #6]
 800b342:	4b91      	ldr	r3, [pc, #580]	@ (800b588 <E_write+0x3dc>)
 800b344:	222e      	movs	r2, #46	@ 0x2e
 800b346:	5499      	strb	r1, [r3, r2]
	dataWrite[47] = tfare[7];
 800b348:	4b94      	ldr	r3, [pc, #592]	@ (800b59c <E_write+0x3f0>)
 800b34a:	79d9      	ldrb	r1, [r3, #7]
 800b34c:	4b8e      	ldr	r3, [pc, #568]	@ (800b588 <E_write+0x3dc>)
 800b34e:	222f      	movs	r2, #47	@ 0x2f
 800b350:	5499      	strb	r1, [r3, r2]

	dataWrite[48] = tsub[0];
 800b352:	4b93      	ldr	r3, [pc, #588]	@ (800b5a0 <E_write+0x3f4>)
 800b354:	7819      	ldrb	r1, [r3, #0]
 800b356:	4b8c      	ldr	r3, [pc, #560]	@ (800b588 <E_write+0x3dc>)
 800b358:	2230      	movs	r2, #48	@ 0x30
 800b35a:	5499      	strb	r1, [r3, r2]
	dataWrite[49] = tsub[1];
 800b35c:	4b90      	ldr	r3, [pc, #576]	@ (800b5a0 <E_write+0x3f4>)
 800b35e:	7859      	ldrb	r1, [r3, #1]
 800b360:	4b89      	ldr	r3, [pc, #548]	@ (800b588 <E_write+0x3dc>)
 800b362:	2231      	movs	r2, #49	@ 0x31
 800b364:	5499      	strb	r1, [r3, r2]
	dataWrite[50] = tsub[2];
 800b366:	4b8e      	ldr	r3, [pc, #568]	@ (800b5a0 <E_write+0x3f4>)
 800b368:	7899      	ldrb	r1, [r3, #2]
 800b36a:	4b87      	ldr	r3, [pc, #540]	@ (800b588 <E_write+0x3dc>)
 800b36c:	2232      	movs	r2, #50	@ 0x32
 800b36e:	5499      	strb	r1, [r3, r2]
	dataWrite[51] = tsub[3];
 800b370:	4b8b      	ldr	r3, [pc, #556]	@ (800b5a0 <E_write+0x3f4>)
 800b372:	78d9      	ldrb	r1, [r3, #3]
 800b374:	4b84      	ldr	r3, [pc, #528]	@ (800b588 <E_write+0x3dc>)
 800b376:	2233      	movs	r2, #51	@ 0x33
 800b378:	5499      	strb	r1, [r3, r2]
	dataWrite[52] = tsub[4];
 800b37a:	4b89      	ldr	r3, [pc, #548]	@ (800b5a0 <E_write+0x3f4>)
 800b37c:	7919      	ldrb	r1, [r3, #4]
 800b37e:	4b82      	ldr	r3, [pc, #520]	@ (800b588 <E_write+0x3dc>)
 800b380:	2234      	movs	r2, #52	@ 0x34
 800b382:	5499      	strb	r1, [r3, r2]
	dataWrite[53] = tsub[5];
 800b384:	4b86      	ldr	r3, [pc, #536]	@ (800b5a0 <E_write+0x3f4>)
 800b386:	7959      	ldrb	r1, [r3, #5]
 800b388:	4b7f      	ldr	r3, [pc, #508]	@ (800b588 <E_write+0x3dc>)
 800b38a:	2235      	movs	r2, #53	@ 0x35
 800b38c:	5499      	strb	r1, [r3, r2]
	dataWrite[54] = tsub[6];
 800b38e:	4b84      	ldr	r3, [pc, #528]	@ (800b5a0 <E_write+0x3f4>)
 800b390:	7999      	ldrb	r1, [r3, #6]
 800b392:	4b7d      	ldr	r3, [pc, #500]	@ (800b588 <E_write+0x3dc>)
 800b394:	2236      	movs	r2, #54	@ 0x36
 800b396:	5499      	strb	r1, [r3, r2]
	dataWrite[55] = tsub[7];
 800b398:	4b81      	ldr	r3, [pc, #516]	@ (800b5a0 <E_write+0x3f4>)
 800b39a:	79d9      	ldrb	r1, [r3, #7]
 800b39c:	4b7a      	ldr	r3, [pc, #488]	@ (800b588 <E_write+0x3dc>)
 800b39e:	2237      	movs	r2, #55	@ 0x37
 800b3a0:	5499      	strb	r1, [r3, r2]

	dataWrite[56] = cfare[0];
 800b3a2:	4b80      	ldr	r3, [pc, #512]	@ (800b5a4 <E_write+0x3f8>)
 800b3a4:	7819      	ldrb	r1, [r3, #0]
 800b3a6:	4b78      	ldr	r3, [pc, #480]	@ (800b588 <E_write+0x3dc>)
 800b3a8:	2238      	movs	r2, #56	@ 0x38
 800b3aa:	5499      	strb	r1, [r3, r2]
	dataWrite[57] = cfare[1];
 800b3ac:	4b7d      	ldr	r3, [pc, #500]	@ (800b5a4 <E_write+0x3f8>)
 800b3ae:	7859      	ldrb	r1, [r3, #1]
 800b3b0:	4b75      	ldr	r3, [pc, #468]	@ (800b588 <E_write+0x3dc>)
 800b3b2:	2239      	movs	r2, #57	@ 0x39
 800b3b4:	5499      	strb	r1, [r3, r2]
	dataWrite[58] = cfare[2];
 800b3b6:	4b7b      	ldr	r3, [pc, #492]	@ (800b5a4 <E_write+0x3f8>)
 800b3b8:	7899      	ldrb	r1, [r3, #2]
 800b3ba:	4b73      	ldr	r3, [pc, #460]	@ (800b588 <E_write+0x3dc>)
 800b3bc:	223a      	movs	r2, #58	@ 0x3a
 800b3be:	5499      	strb	r1, [r3, r2]
	dataWrite[59] = cfare[3];
 800b3c0:	4b78      	ldr	r3, [pc, #480]	@ (800b5a4 <E_write+0x3f8>)
 800b3c2:	78d9      	ldrb	r1, [r3, #3]
 800b3c4:	4b70      	ldr	r3, [pc, #448]	@ (800b588 <E_write+0x3dc>)
 800b3c6:	223b      	movs	r2, #59	@ 0x3b
 800b3c8:	5499      	strb	r1, [r3, r2]
	dataWrite[60] = cfare[4];
 800b3ca:	4b76      	ldr	r3, [pc, #472]	@ (800b5a4 <E_write+0x3f8>)
 800b3cc:	7919      	ldrb	r1, [r3, #4]
 800b3ce:	4b6e      	ldr	r3, [pc, #440]	@ (800b588 <E_write+0x3dc>)
 800b3d0:	223c      	movs	r2, #60	@ 0x3c
 800b3d2:	5499      	strb	r1, [r3, r2]
	dataWrite[61] = cfare[5];
 800b3d4:	4b73      	ldr	r3, [pc, #460]	@ (800b5a4 <E_write+0x3f8>)
 800b3d6:	7959      	ldrb	r1, [r3, #5]
 800b3d8:	4b6b      	ldr	r3, [pc, #428]	@ (800b588 <E_write+0x3dc>)
 800b3da:	223d      	movs	r2, #61	@ 0x3d
 800b3dc:	5499      	strb	r1, [r3, r2]
	dataWrite[62] = cfare[6];
 800b3de:	4b71      	ldr	r3, [pc, #452]	@ (800b5a4 <E_write+0x3f8>)
 800b3e0:	7999      	ldrb	r1, [r3, #6]
 800b3e2:	4b69      	ldr	r3, [pc, #420]	@ (800b588 <E_write+0x3dc>)
 800b3e4:	223e      	movs	r2, #62	@ 0x3e
 800b3e6:	5499      	strb	r1, [r3, r2]
	dataWrite[63] = cfare[7];
 800b3e8:	4b6e      	ldr	r3, [pc, #440]	@ (800b5a4 <E_write+0x3f8>)
 800b3ea:	79d9      	ldrb	r1, [r3, #7]
 800b3ec:	4b66      	ldr	r3, [pc, #408]	@ (800b588 <E_write+0x3dc>)
 800b3ee:	223f      	movs	r2, #63	@ 0x3f
 800b3f0:	5499      	strb	r1, [r3, r2]

	dataWrite[64] = csub[0];
 800b3f2:	4b6d      	ldr	r3, [pc, #436]	@ (800b5a8 <E_write+0x3fc>)
 800b3f4:	7819      	ldrb	r1, [r3, #0]
 800b3f6:	4b64      	ldr	r3, [pc, #400]	@ (800b588 <E_write+0x3dc>)
 800b3f8:	2240      	movs	r2, #64	@ 0x40
 800b3fa:	5499      	strb	r1, [r3, r2]
	dataWrite[65] = csub[1];
 800b3fc:	4b6a      	ldr	r3, [pc, #424]	@ (800b5a8 <E_write+0x3fc>)
 800b3fe:	7859      	ldrb	r1, [r3, #1]
 800b400:	4b61      	ldr	r3, [pc, #388]	@ (800b588 <E_write+0x3dc>)
 800b402:	2241      	movs	r2, #65	@ 0x41
 800b404:	5499      	strb	r1, [r3, r2]
	dataWrite[66] = csub[2];
 800b406:	4b68      	ldr	r3, [pc, #416]	@ (800b5a8 <E_write+0x3fc>)
 800b408:	7899      	ldrb	r1, [r3, #2]
 800b40a:	4b5f      	ldr	r3, [pc, #380]	@ (800b588 <E_write+0x3dc>)
 800b40c:	2242      	movs	r2, #66	@ 0x42
 800b40e:	5499      	strb	r1, [r3, r2]
	dataWrite[67] = csub[3];
 800b410:	4b65      	ldr	r3, [pc, #404]	@ (800b5a8 <E_write+0x3fc>)
 800b412:	78d9      	ldrb	r1, [r3, #3]
 800b414:	4b5c      	ldr	r3, [pc, #368]	@ (800b588 <E_write+0x3dc>)
 800b416:	2243      	movs	r2, #67	@ 0x43
 800b418:	5499      	strb	r1, [r3, r2]
	dataWrite[68] = csub[4];
 800b41a:	4b63      	ldr	r3, [pc, #396]	@ (800b5a8 <E_write+0x3fc>)
 800b41c:	7919      	ldrb	r1, [r3, #4]
 800b41e:	4b5a      	ldr	r3, [pc, #360]	@ (800b588 <E_write+0x3dc>)
 800b420:	2244      	movs	r2, #68	@ 0x44
 800b422:	5499      	strb	r1, [r3, r2]
	dataWrite[69] = csub[5];
 800b424:	4b60      	ldr	r3, [pc, #384]	@ (800b5a8 <E_write+0x3fc>)
 800b426:	7959      	ldrb	r1, [r3, #5]
 800b428:	4b57      	ldr	r3, [pc, #348]	@ (800b588 <E_write+0x3dc>)
 800b42a:	2245      	movs	r2, #69	@ 0x45
 800b42c:	5499      	strb	r1, [r3, r2]
	dataWrite[70] = csub[6];
 800b42e:	4b5e      	ldr	r3, [pc, #376]	@ (800b5a8 <E_write+0x3fc>)
 800b430:	7999      	ldrb	r1, [r3, #6]
 800b432:	4b55      	ldr	r3, [pc, #340]	@ (800b588 <E_write+0x3dc>)
 800b434:	2246      	movs	r2, #70	@ 0x46
 800b436:	5499      	strb	r1, [r3, r2]
	dataWrite[71] = csub[7];
 800b438:	4b5b      	ldr	r3, [pc, #364]	@ (800b5a8 <E_write+0x3fc>)
 800b43a:	79d9      	ldrb	r1, [r3, #7]
 800b43c:	4b52      	ldr	r3, [pc, #328]	@ (800b588 <E_write+0x3dc>)
 800b43e:	2247      	movs	r2, #71	@ 0x47
 800b440:	5499      	strb	r1, [r3, r2]

	dataWrite[72] = ttime[0];
 800b442:	4b5a      	ldr	r3, [pc, #360]	@ (800b5ac <E_write+0x400>)
 800b444:	7819      	ldrb	r1, [r3, #0]
 800b446:	4b50      	ldr	r3, [pc, #320]	@ (800b588 <E_write+0x3dc>)
 800b448:	2248      	movs	r2, #72	@ 0x48
 800b44a:	5499      	strb	r1, [r3, r2]
	dataWrite[73] = ttime[1];
 800b44c:	4b57      	ldr	r3, [pc, #348]	@ (800b5ac <E_write+0x400>)
 800b44e:	7859      	ldrb	r1, [r3, #1]
 800b450:	4b4d      	ldr	r3, [pc, #308]	@ (800b588 <E_write+0x3dc>)
 800b452:	2249      	movs	r2, #73	@ 0x49
 800b454:	5499      	strb	r1, [r3, r2]
	dataWrite[74] = ttime[2];
 800b456:	4b55      	ldr	r3, [pc, #340]	@ (800b5ac <E_write+0x400>)
 800b458:	7899      	ldrb	r1, [r3, #2]
 800b45a:	4b4b      	ldr	r3, [pc, #300]	@ (800b588 <E_write+0x3dc>)
 800b45c:	224a      	movs	r2, #74	@ 0x4a
 800b45e:	5499      	strb	r1, [r3, r2]
	dataWrite[75] = ttime[3];
 800b460:	4b52      	ldr	r3, [pc, #328]	@ (800b5ac <E_write+0x400>)
 800b462:	78d9      	ldrb	r1, [r3, #3]
 800b464:	4b48      	ldr	r3, [pc, #288]	@ (800b588 <E_write+0x3dc>)
 800b466:	224b      	movs	r2, #75	@ 0x4b
 800b468:	5499      	strb	r1, [r3, r2]
	dataWrite[76] = ttime[4];
 800b46a:	4b50      	ldr	r3, [pc, #320]	@ (800b5ac <E_write+0x400>)
 800b46c:	7919      	ldrb	r1, [r3, #4]
 800b46e:	4b46      	ldr	r3, [pc, #280]	@ (800b588 <E_write+0x3dc>)
 800b470:	224c      	movs	r2, #76	@ 0x4c
 800b472:	5499      	strb	r1, [r3, r2]
	dataWrite[77] = ttime[5];
 800b474:	4b4d      	ldr	r3, [pc, #308]	@ (800b5ac <E_write+0x400>)
 800b476:	7959      	ldrb	r1, [r3, #5]
 800b478:	4b43      	ldr	r3, [pc, #268]	@ (800b588 <E_write+0x3dc>)
 800b47a:	224d      	movs	r2, #77	@ 0x4d
 800b47c:	5499      	strb	r1, [r3, r2]
	dataWrite[78] = ttime[6];
 800b47e:	4b4b      	ldr	r3, [pc, #300]	@ (800b5ac <E_write+0x400>)
 800b480:	7999      	ldrb	r1, [r3, #6]
 800b482:	4b41      	ldr	r3, [pc, #260]	@ (800b588 <E_write+0x3dc>)
 800b484:	224e      	movs	r2, #78	@ 0x4e
 800b486:	5499      	strb	r1, [r3, r2]
	dataWrite[79] = ttime[7];
 800b488:	4b48      	ldr	r3, [pc, #288]	@ (800b5ac <E_write+0x400>)
 800b48a:	79d9      	ldrb	r1, [r3, #7]
 800b48c:	4b3e      	ldr	r3, [pc, #248]	@ (800b588 <E_write+0x3dc>)
 800b48e:	224f      	movs	r2, #79	@ 0x4f
 800b490:	5499      	strb	r1, [r3, r2]

	dataWrite[80] = pulses[0];
 800b492:	4b47      	ldr	r3, [pc, #284]	@ (800b5b0 <E_write+0x404>)
 800b494:	7819      	ldrb	r1, [r3, #0]
 800b496:	4b3c      	ldr	r3, [pc, #240]	@ (800b588 <E_write+0x3dc>)
 800b498:	2250      	movs	r2, #80	@ 0x50
 800b49a:	5499      	strb	r1, [r3, r2]
	dataWrite[81] = pulses[1];
 800b49c:	4b44      	ldr	r3, [pc, #272]	@ (800b5b0 <E_write+0x404>)
 800b49e:	7859      	ldrb	r1, [r3, #1]
 800b4a0:	4b39      	ldr	r3, [pc, #228]	@ (800b588 <E_write+0x3dc>)
 800b4a2:	2251      	movs	r2, #81	@ 0x51
 800b4a4:	5499      	strb	r1, [r3, r2]
	dataWrite[82] = pulses[2];
 800b4a6:	4b42      	ldr	r3, [pc, #264]	@ (800b5b0 <E_write+0x404>)
 800b4a8:	7899      	ldrb	r1, [r3, #2]
 800b4aa:	4b37      	ldr	r3, [pc, #220]	@ (800b588 <E_write+0x3dc>)
 800b4ac:	2252      	movs	r2, #82	@ 0x52
 800b4ae:	5499      	strb	r1, [r3, r2]
	dataWrite[83] = pulses[3];
 800b4b0:	4b3f      	ldr	r3, [pc, #252]	@ (800b5b0 <E_write+0x404>)
 800b4b2:	78d9      	ldrb	r1, [r3, #3]
 800b4b4:	4b34      	ldr	r3, [pc, #208]	@ (800b588 <E_write+0x3dc>)
 800b4b6:	2253      	movs	r2, #83	@ 0x53
 800b4b8:	5499      	strb	r1, [r3, r2]
	dataWrite[84] = pulses[4];
 800b4ba:	4b3d      	ldr	r3, [pc, #244]	@ (800b5b0 <E_write+0x404>)
 800b4bc:	7919      	ldrb	r1, [r3, #4]
 800b4be:	4b32      	ldr	r3, [pc, #200]	@ (800b588 <E_write+0x3dc>)
 800b4c0:	2254      	movs	r2, #84	@ 0x54
 800b4c2:	5499      	strb	r1, [r3, r2]
	dataWrite[85] = pulses[5];
 800b4c4:	4b3a      	ldr	r3, [pc, #232]	@ (800b5b0 <E_write+0x404>)
 800b4c6:	7959      	ldrb	r1, [r3, #5]
 800b4c8:	4b2f      	ldr	r3, [pc, #188]	@ (800b588 <E_write+0x3dc>)
 800b4ca:	2255      	movs	r2, #85	@ 0x55
 800b4cc:	5499      	strb	r1, [r3, r2]
	dataWrite[86] = pulses[6];
 800b4ce:	4b38      	ldr	r3, [pc, #224]	@ (800b5b0 <E_write+0x404>)
 800b4d0:	7999      	ldrb	r1, [r3, #6]
 800b4d2:	4b2d      	ldr	r3, [pc, #180]	@ (800b588 <E_write+0x3dc>)
 800b4d4:	2256      	movs	r2, #86	@ 0x56
 800b4d6:	5499      	strb	r1, [r3, r2]
	dataWrite[87] = pulses[7];
 800b4d8:	4b35      	ldr	r3, [pc, #212]	@ (800b5b0 <E_write+0x404>)
 800b4da:	79d9      	ldrb	r1, [r3, #7]
 800b4dc:	4b2a      	ldr	r3, [pc, #168]	@ (800b588 <E_write+0x3dc>)
 800b4de:	2257      	movs	r2, #87	@ 0x57
 800b4e0:	5499      	strb	r1, [r3, r2]

	dataWrite[88] = dt[0];
 800b4e2:	4b34      	ldr	r3, [pc, #208]	@ (800b5b4 <E_write+0x408>)
 800b4e4:	7819      	ldrb	r1, [r3, #0]
 800b4e6:	4b28      	ldr	r3, [pc, #160]	@ (800b588 <E_write+0x3dc>)
 800b4e8:	2258      	movs	r2, #88	@ 0x58
 800b4ea:	5499      	strb	r1, [r3, r2]
	dataWrite[89] = dt[1];
 800b4ec:	4b31      	ldr	r3, [pc, #196]	@ (800b5b4 <E_write+0x408>)
 800b4ee:	7859      	ldrb	r1, [r3, #1]
 800b4f0:	4b25      	ldr	r3, [pc, #148]	@ (800b588 <E_write+0x3dc>)
 800b4f2:	2259      	movs	r2, #89	@ 0x59
 800b4f4:	5499      	strb	r1, [r3, r2]
	dataWrite[90] = dt[2];
 800b4f6:	4b2f      	ldr	r3, [pc, #188]	@ (800b5b4 <E_write+0x408>)
 800b4f8:	7899      	ldrb	r1, [r3, #2]
 800b4fa:	4b23      	ldr	r3, [pc, #140]	@ (800b588 <E_write+0x3dc>)
 800b4fc:	225a      	movs	r2, #90	@ 0x5a
 800b4fe:	5499      	strb	r1, [r3, r2]
	dataWrite[91] = dt[3];
 800b500:	4b2c      	ldr	r3, [pc, #176]	@ (800b5b4 <E_write+0x408>)
 800b502:	78d9      	ldrb	r1, [r3, #3]
 800b504:	4b20      	ldr	r3, [pc, #128]	@ (800b588 <E_write+0x3dc>)
 800b506:	225b      	movs	r2, #91	@ 0x5b
 800b508:	5499      	strb	r1, [r3, r2]
	dataWrite[92] = dt[4];
 800b50a:	4b2a      	ldr	r3, [pc, #168]	@ (800b5b4 <E_write+0x408>)
 800b50c:	7919      	ldrb	r1, [r3, #4]
 800b50e:	4b1e      	ldr	r3, [pc, #120]	@ (800b588 <E_write+0x3dc>)
 800b510:	225c      	movs	r2, #92	@ 0x5c
 800b512:	5499      	strb	r1, [r3, r2]
	dataWrite[93] = dt[5];
 800b514:	4b27      	ldr	r3, [pc, #156]	@ (800b5b4 <E_write+0x408>)
 800b516:	7959      	ldrb	r1, [r3, #5]
 800b518:	4b1b      	ldr	r3, [pc, #108]	@ (800b588 <E_write+0x3dc>)
 800b51a:	225d      	movs	r2, #93	@ 0x5d
 800b51c:	5499      	strb	r1, [r3, r2]
	dataWrite[94] = dt[6];
 800b51e:	4b25      	ldr	r3, [pc, #148]	@ (800b5b4 <E_write+0x408>)
 800b520:	7999      	ldrb	r1, [r3, #6]
 800b522:	4b19      	ldr	r3, [pc, #100]	@ (800b588 <E_write+0x3dc>)
 800b524:	225e      	movs	r2, #94	@ 0x5e
 800b526:	5499      	strb	r1, [r3, r2]
	dataWrite[95] = dt[7];
 800b528:	4b22      	ldr	r3, [pc, #136]	@ (800b5b4 <E_write+0x408>)
 800b52a:	79d9      	ldrb	r1, [r3, #7]
 800b52c:	4b16      	ldr	r3, [pc, #88]	@ (800b588 <E_write+0x3dc>)
 800b52e:	225f      	movs	r2, #95	@ 0x5f
 800b530:	5499      	strb	r1, [r3, r2]
	dataWrite[96] = dt[8];
 800b532:	4b20      	ldr	r3, [pc, #128]	@ (800b5b4 <E_write+0x408>)
 800b534:	7a19      	ldrb	r1, [r3, #8]
 800b536:	4b14      	ldr	r3, [pc, #80]	@ (800b588 <E_write+0x3dc>)
 800b538:	2260      	movs	r2, #96	@ 0x60
 800b53a:	5499      	strb	r1, [r3, r2]
	dataWrite[97] = dt[9];
 800b53c:	4b1d      	ldr	r3, [pc, #116]	@ (800b5b4 <E_write+0x408>)
 800b53e:	7a59      	ldrb	r1, [r3, #9]
 800b540:	4b11      	ldr	r3, [pc, #68]	@ (800b588 <E_write+0x3dc>)
 800b542:	2261      	movs	r2, #97	@ 0x61
 800b544:	5499      	strb	r1, [r3, r2]
	dataWrite[98] = dt[10];
 800b546:	4b1b      	ldr	r3, [pc, #108]	@ (800b5b4 <E_write+0x408>)
 800b548:	7a99      	ldrb	r1, [r3, #10]
 800b54a:	4b0f      	ldr	r3, [pc, #60]	@ (800b588 <E_write+0x3dc>)
 800b54c:	2262      	movs	r2, #98	@ 0x62
 800b54e:	5499      	strb	r1, [r3, r2]
	dataWrite[99] = dt[11];
 800b550:	4b18      	ldr	r3, [pc, #96]	@ (800b5b4 <E_write+0x408>)
 800b552:	7ad9      	ldrb	r1, [r3, #11]
 800b554:	4b0c      	ldr	r3, [pc, #48]	@ (800b588 <E_write+0x3dc>)
 800b556:	2263      	movs	r2, #99	@ 0x63
 800b558:	5499      	strb	r1, [r3, r2]

	HAL_I2C_Mem_Write(&hi2c2, 0xA0, (3<<7), 2, dataWrite, 100, 1000);
 800b55a:	23c0      	movs	r3, #192	@ 0xc0
 800b55c:	005a      	lsls	r2, r3, #1
 800b55e:	4816      	ldr	r0, [pc, #88]	@ (800b5b8 <E_write+0x40c>)
 800b560:	23fa      	movs	r3, #250	@ 0xfa
 800b562:	009b      	lsls	r3, r3, #2
 800b564:	9302      	str	r3, [sp, #8]
 800b566:	2364      	movs	r3, #100	@ 0x64
 800b568:	9301      	str	r3, [sp, #4]
 800b56a:	4b07      	ldr	r3, [pc, #28]	@ (800b588 <E_write+0x3dc>)
 800b56c:	9300      	str	r3, [sp, #0]
 800b56e:	2302      	movs	r3, #2
 800b570:	21a0      	movs	r1, #160	@ 0xa0
 800b572:	f003 fc17 	bl	800eda4 <HAL_I2C_Mem_Write>
	HAL_Delay(5);
 800b576:	2005      	movs	r0, #5
 800b578:	f002 fb84 	bl	800dc84 <HAL_Delay>
}
 800b57c:	46c0      	nop			@ (mov r8, r8)
 800b57e:	46bd      	mov	sp, r7
 800b580:	e01c      	b.n	800b5bc <E_write+0x410>
 800b582:	46c0      	nop			@ (mov r8, r8)
 800b584:	20000e5c 	.word	0x20000e5c
 800b588:	20000dbc 	.word	0x20000dbc
 800b58c:	20000e64 	.word	0x20000e64
 800b590:	20000e6c 	.word	0x20000e6c
 800b594:	20000e74 	.word	0x20000e74
 800b598:	20000e7c 	.word	0x20000e7c
 800b59c:	20000e84 	.word	0x20000e84
 800b5a0:	20000e8c 	.word	0x20000e8c
 800b5a4:	20000e94 	.word	0x20000e94
 800b5a8:	20000e9c 	.word	0x20000e9c
 800b5ac:	20000ea4 	.word	0x20000ea4
 800b5b0:	20000ebc 	.word	0x20000ebc
 800b5b4:	20000ec4 	.word	0x20000ec4
 800b5b8:	2000057c 	.word	0x2000057c
 800b5bc:	bd80      	pop	{r7, pc}
 800b5be:	46c0      	nop			@ (mov r8, r8)

0800b5c0 <Voice_init>:

//voice
void Voice_init(void)
{
 800b5c0:	b580      	push	{r7, lr}
 800b5c2:	b082      	sub	sp, #8
 800b5c4:	af00      	add	r7, sp, #0
	//v_can_start[5][6] ~ [15][16], odd-0x35(number)/0x30(letter), even = plate_qr[6]-[11]
	//v_cn_start[5][6] ~ [15][16], odd-0x4A(number)/0x30(letter), even = plate_qr[6]-[11]
	for (int i=6; i<=11; i++)
 800b5c6:	2306      	movs	r3, #6
 800b5c8:	607b      	str	r3, [r7, #4]
 800b5ca:	e045      	b.n	800b658 <Voice_init+0x98>
	{
		if (plate_qr[i] < 0x41)
 800b5cc:	4a3f      	ldr	r2, [pc, #252]	@ (800b6cc <Voice_init+0x10c>)
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	18d3      	adds	r3, r2, r3
 800b5d2:	781b      	ldrb	r3, [r3, #0]
 800b5d4:	2b40      	cmp	r3, #64	@ 0x40
 800b5d6:	d81e      	bhi.n	800b616 <Voice_init+0x56>
		{
			v_can_start[2*i-7] = 0x35;
 800b5d8:	687b      	ldr	r3, [r7, #4]
 800b5da:	005b      	lsls	r3, r3, #1
 800b5dc:	3b07      	subs	r3, #7
 800b5de:	4a3c      	ldr	r2, [pc, #240]	@ (800b6d0 <Voice_init+0x110>)
 800b5e0:	2135      	movs	r1, #53	@ 0x35
 800b5e2:	54d1      	strb	r1, [r2, r3]
			v_can_start[2*i-6] = plate_qr[i];
 800b5e4:	687b      	ldr	r3, [r7, #4]
 800b5e6:	3b03      	subs	r3, #3
 800b5e8:	005b      	lsls	r3, r3, #1
 800b5ea:	4938      	ldr	r1, [pc, #224]	@ (800b6cc <Voice_init+0x10c>)
 800b5ec:	687a      	ldr	r2, [r7, #4]
 800b5ee:	188a      	adds	r2, r1, r2
 800b5f0:	7811      	ldrb	r1, [r2, #0]
 800b5f2:	4a37      	ldr	r2, [pc, #220]	@ (800b6d0 <Voice_init+0x110>)
 800b5f4:	54d1      	strb	r1, [r2, r3]
			v_cn_start[2*i-7] = 0x4A;
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	005b      	lsls	r3, r3, #1
 800b5fa:	3b07      	subs	r3, #7
 800b5fc:	4a35      	ldr	r2, [pc, #212]	@ (800b6d4 <Voice_init+0x114>)
 800b5fe:	214a      	movs	r1, #74	@ 0x4a
 800b600:	54d1      	strb	r1, [r2, r3]
			v_cn_start[2*i-6] = plate_qr[i];
 800b602:	687b      	ldr	r3, [r7, #4]
 800b604:	3b03      	subs	r3, #3
 800b606:	005b      	lsls	r3, r3, #1
 800b608:	4930      	ldr	r1, [pc, #192]	@ (800b6cc <Voice_init+0x10c>)
 800b60a:	687a      	ldr	r2, [r7, #4]
 800b60c:	188a      	adds	r2, r1, r2
 800b60e:	7811      	ldrb	r1, [r2, #0]
 800b610:	4a30      	ldr	r2, [pc, #192]	@ (800b6d4 <Voice_init+0x114>)
 800b612:	54d1      	strb	r1, [r2, r3]
 800b614:	e01d      	b.n	800b652 <Voice_init+0x92>
		}
		else
		{
			v_can_start[2*i-7] = 0x30;
 800b616:	687b      	ldr	r3, [r7, #4]
 800b618:	005b      	lsls	r3, r3, #1
 800b61a:	3b07      	subs	r3, #7
 800b61c:	4a2c      	ldr	r2, [pc, #176]	@ (800b6d0 <Voice_init+0x110>)
 800b61e:	2130      	movs	r1, #48	@ 0x30
 800b620:	54d1      	strb	r1, [r2, r3]
			v_can_start[2*i-6] = plate_qr[i];
 800b622:	687b      	ldr	r3, [r7, #4]
 800b624:	3b03      	subs	r3, #3
 800b626:	005b      	lsls	r3, r3, #1
 800b628:	4928      	ldr	r1, [pc, #160]	@ (800b6cc <Voice_init+0x10c>)
 800b62a:	687a      	ldr	r2, [r7, #4]
 800b62c:	188a      	adds	r2, r1, r2
 800b62e:	7811      	ldrb	r1, [r2, #0]
 800b630:	4a27      	ldr	r2, [pc, #156]	@ (800b6d0 <Voice_init+0x110>)
 800b632:	54d1      	strb	r1, [r2, r3]
			v_cn_start[2*i-7] = 0x30;
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	005b      	lsls	r3, r3, #1
 800b638:	3b07      	subs	r3, #7
 800b63a:	4a26      	ldr	r2, [pc, #152]	@ (800b6d4 <Voice_init+0x114>)
 800b63c:	2130      	movs	r1, #48	@ 0x30
 800b63e:	54d1      	strb	r1, [r2, r3]
			v_cn_start[2*i-6] = plate_qr[i];
 800b640:	687b      	ldr	r3, [r7, #4]
 800b642:	3b03      	subs	r3, #3
 800b644:	005b      	lsls	r3, r3, #1
 800b646:	4921      	ldr	r1, [pc, #132]	@ (800b6cc <Voice_init+0x10c>)
 800b648:	687a      	ldr	r2, [r7, #4]
 800b64a:	188a      	adds	r2, r1, r2
 800b64c:	7811      	ldrb	r1, [r2, #0]
 800b64e:	4a21      	ldr	r2, [pc, #132]	@ (800b6d4 <Voice_init+0x114>)
 800b650:	54d1      	strb	r1, [r2, r3]
	for (int i=6; i<=11; i++)
 800b652:	687b      	ldr	r3, [r7, #4]
 800b654:	3301      	adds	r3, #1
 800b656:	607b      	str	r3, [r7, #4]
 800b658:	687b      	ldr	r3, [r7, #4]
 800b65a:	2b0b      	cmp	r3, #11
 800b65c:	ddb6      	ble.n	800b5cc <Voice_init+0xc>
		}
	}

	v_en_start[6] = plate_qr[6];
 800b65e:	4b1b      	ldr	r3, [pc, #108]	@ (800b6cc <Voice_init+0x10c>)
 800b660:	799a      	ldrb	r2, [r3, #6]
 800b662:	4b1d      	ldr	r3, [pc, #116]	@ (800b6d8 <Voice_init+0x118>)
 800b664:	719a      	strb	r2, [r3, #6]
	v_en_start[8] = plate_qr[7];
 800b666:	4b19      	ldr	r3, [pc, #100]	@ (800b6cc <Voice_init+0x10c>)
 800b668:	79da      	ldrb	r2, [r3, #7]
 800b66a:	4b1b      	ldr	r3, [pc, #108]	@ (800b6d8 <Voice_init+0x118>)
 800b66c:	721a      	strb	r2, [r3, #8]
	v_en_start[10] = plate_qr[8];
 800b66e:	4b17      	ldr	r3, [pc, #92]	@ (800b6cc <Voice_init+0x10c>)
 800b670:	7a1a      	ldrb	r2, [r3, #8]
 800b672:	4b19      	ldr	r3, [pc, #100]	@ (800b6d8 <Voice_init+0x118>)
 800b674:	729a      	strb	r2, [r3, #10]
	v_en_start[12] = plate_qr[9];
 800b676:	4b15      	ldr	r3, [pc, #84]	@ (800b6cc <Voice_init+0x10c>)
 800b678:	7a5a      	ldrb	r2, [r3, #9]
 800b67a:	4b17      	ldr	r3, [pc, #92]	@ (800b6d8 <Voice_init+0x118>)
 800b67c:	731a      	strb	r2, [r3, #12]
	v_en_start[14] = plate_qr[10];
 800b67e:	4b13      	ldr	r3, [pc, #76]	@ (800b6cc <Voice_init+0x10c>)
 800b680:	7a9a      	ldrb	r2, [r3, #10]
 800b682:	4b15      	ldr	r3, [pc, #84]	@ (800b6d8 <Voice_init+0x118>)
 800b684:	739a      	strb	r2, [r3, #14]
	v_en_start[16] = plate_qr[11];
 800b686:	4b11      	ldr	r3, [pc, #68]	@ (800b6cc <Voice_init+0x10c>)
 800b688:	7ada      	ldrb	r2, [r3, #11]
 800b68a:	4b13      	ldr	r3, [pc, #76]	@ (800b6d8 <Voice_init+0x118>)
 800b68c:	741a      	strb	r2, [r3, #16]

	v_can_start[19] = checksum_8bit(v_can_start,20);
 800b68e:	4b10      	ldr	r3, [pc, #64]	@ (800b6d0 <Voice_init+0x110>)
 800b690:	2114      	movs	r1, #20
 800b692:	0018      	movs	r0, r3
 800b694:	f7fc fbbc 	bl	8007e10 <checksum_8bit>
 800b698:	0003      	movs	r3, r0
 800b69a:	001a      	movs	r2, r3
 800b69c:	4b0c      	ldr	r3, [pc, #48]	@ (800b6d0 <Voice_init+0x110>)
 800b69e:	74da      	strb	r2, [r3, #19]
	v_cn_start[19] = checksum_8bit(v_cn_start,20);
 800b6a0:	4b0c      	ldr	r3, [pc, #48]	@ (800b6d4 <Voice_init+0x114>)
 800b6a2:	2114      	movs	r1, #20
 800b6a4:	0018      	movs	r0, r3
 800b6a6:	f7fc fbb3 	bl	8007e10 <checksum_8bit>
 800b6aa:	0003      	movs	r3, r0
 800b6ac:	001a      	movs	r2, r3
 800b6ae:	4b09      	ldr	r3, [pc, #36]	@ (800b6d4 <Voice_init+0x114>)
 800b6b0:	74da      	strb	r2, [r3, #19]
	v_en_start[19] = checksum_8bit(v_en_start,20);
 800b6b2:	4b09      	ldr	r3, [pc, #36]	@ (800b6d8 <Voice_init+0x118>)
 800b6b4:	2114      	movs	r1, #20
 800b6b6:	0018      	movs	r0, r3
 800b6b8:	f7fc fbaa 	bl	8007e10 <checksum_8bit>
 800b6bc:	0003      	movs	r3, r0
 800b6be:	001a      	movs	r2, r3
 800b6c0:	4b05      	ldr	r3, [pc, #20]	@ (800b6d8 <Voice_init+0x118>)
 800b6c2:	74da      	strb	r2, [r3, #19]
}
 800b6c4:	46c0      	nop			@ (mov r8, r8)
 800b6c6:	46bd      	mov	sp, r7
 800b6c8:	b002      	add	sp, #8
 800b6ca:	bd80      	pop	{r7, pc}
 800b6cc:	20000098 	.word	0x20000098
 800b6d0:	200003e8 	.word	0x200003e8
 800b6d4:	200003fc 	.word	0x200003fc
 800b6d8:	20000410 	.word	0x20000410

0800b6dc <Voice_start>:

void Voice_start(unsigned char data[])
{
 800b6dc:	b580      	push	{r7, lr}
 800b6de:	b082      	sub	sp, #8
 800b6e0:	af00      	add	r7, sp, #0
 800b6e2:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, (uint8_t *)data, 20, 1000);
 800b6e4:	23fa      	movs	r3, #250	@ 0xfa
 800b6e6:	009b      	lsls	r3, r3, #2
 800b6e8:	6879      	ldr	r1, [r7, #4]
 800b6ea:	4804      	ldr	r0, [pc, #16]	@ (800b6fc <Voice_start+0x20>)
 800b6ec:	2214      	movs	r2, #20
 800b6ee:	f007 fd4f 	bl	8013190 <HAL_UART_Transmit>
}
 800b6f2:	46c0      	nop			@ (mov r8, r8)
 800b6f4:	46bd      	mov	sp, r7
 800b6f6:	b002      	add	sp, #8
 800b6f8:	bd80      	pop	{r7, pc}
 800b6fa:	46c0      	nop			@ (mov r8, r8)
 800b6fc:	200006e8 	.word	0x200006e8

0800b700 <Voice_end>:

void Voice_end(unsigned char data[])
{
 800b700:	b580      	push	{r7, lr}
 800b702:	b082      	sub	sp, #8
 800b704:	af00      	add	r7, sp, #0
 800b706:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, (uint8_t *)data, 32, 1000);
 800b708:	23fa      	movs	r3, #250	@ 0xfa
 800b70a:	009b      	lsls	r3, r3, #2
 800b70c:	6879      	ldr	r1, [r7, #4]
 800b70e:	4804      	ldr	r0, [pc, #16]	@ (800b720 <Voice_end+0x20>)
 800b710:	2220      	movs	r2, #32
 800b712:	f007 fd3d 	bl	8013190 <HAL_UART_Transmit>
}
 800b716:	46c0      	nop			@ (mov r8, r8)
 800b718:	46bd      	mov	sp, r7
 800b71a:	b002      	add	sp, #8
 800b71c:	bd80      	pop	{r7, pc}
 800b71e:	46c0      	nop			@ (mov r8, r8)
 800b720:	200006e8 	.word	0x200006e8

0800b724 <cal_vcan>:

void cal_vcan(unsigned char data[], unsigned char result[])
{
 800b724:	b580      	push	{r7, lr}
 800b726:	b082      	sub	sp, #8
 800b728:	af00      	add	r7, sp, #0
 800b72a:	6078      	str	r0, [r7, #4]
 800b72c:	6039      	str	r1, [r7, #0]
	if (data[1] != 0x30)
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	3301      	adds	r3, #1
 800b732:	781b      	ldrb	r3, [r3, #0]
 800b734:	2b30      	cmp	r3, #48	@ 0x30
 800b736:	d100      	bne.n	800b73a <cal_vcan+0x16>
 800b738:	e0ba      	b.n	800b8b0 <cal_vcan+0x18c>
	{
		result[0] += 2;
 800b73a:	683b      	ldr	r3, [r7, #0]
 800b73c:	781b      	ldrb	r3, [r3, #0]
 800b73e:	3302      	adds	r3, #2
 800b740:	b2da      	uxtb	r2, r3
 800b742:	683b      	ldr	r3, [r7, #0]
 800b744:	701a      	strb	r2, [r3, #0]
		//x000 - (1000 ~ 9000)
		result[1] = 0x46;
 800b746:	683b      	ldr	r3, [r7, #0]
 800b748:	3301      	adds	r3, #1
 800b74a:	2246      	movs	r2, #70	@ 0x46
 800b74c:	701a      	strb	r2, [r3, #0]
		result[2] = data[1];
 800b74e:	683b      	ldr	r3, [r7, #0]
 800b750:	3302      	adds	r3, #2
 800b752:	687a      	ldr	r2, [r7, #4]
 800b754:	7852      	ldrb	r2, [r2, #1]
 800b756:	701a      	strb	r2, [r3, #0]
		if (data[2] == 0x30)
 800b758:	687b      	ldr	r3, [r7, #4]
 800b75a:	3302      	adds	r3, #2
 800b75c:	781b      	ldrb	r3, [r3, #0]
 800b75e:	2b30      	cmp	r3, #48	@ 0x30
 800b760:	d14f      	bne.n	800b802 <cal_vcan+0xde>
		{
			if (data[3] == 0x30)
 800b762:	687b      	ldr	r3, [r7, #4]
 800b764:	3303      	adds	r3, #3
 800b766:	781b      	ldrb	r3, [r3, #0]
 800b768:	2b30      	cmp	r3, #48	@ 0x30
 800b76a:	d11d      	bne.n	800b7a8 <cal_vcan+0x84>
			{
				if (data[4] != 0x30)
 800b76c:	687b      	ldr	r3, [r7, #4]
 800b76e:	3304      	adds	r3, #4
 800b770:	781b      	ldrb	r3, [r3, #0]
 800b772:	2b30      	cmp	r3, #48	@ 0x30
 800b774:	d100      	bne.n	800b778 <cal_vcan+0x54>
 800b776:	e118      	b.n	800b9aa <cal_vcan+0x286>
				{
					result[0] += 4;
 800b778:	683b      	ldr	r3, [r7, #0]
 800b77a:	781b      	ldrb	r3, [r3, #0]
 800b77c:	3304      	adds	r3, #4
 800b77e:	b2da      	uxtb	r2, r3
 800b780:	683b      	ldr	r3, [r7, #0]
 800b782:	701a      	strb	r2, [r3, #0]
					//0x - (1001 ~ 9009)
					result[3] = 0x35;
 800b784:	683b      	ldr	r3, [r7, #0]
 800b786:	3303      	adds	r3, #3
 800b788:	2235      	movs	r2, #53	@ 0x35
 800b78a:	701a      	strb	r2, [r3, #0]
					result[4] = 0x30;
 800b78c:	683b      	ldr	r3, [r7, #0]
 800b78e:	3304      	adds	r3, #4
 800b790:	2230      	movs	r2, #48	@ 0x30
 800b792:	701a      	strb	r2, [r3, #0]
					result[5] = 0x35;
 800b794:	683b      	ldr	r3, [r7, #0]
 800b796:	3305      	adds	r3, #5
 800b798:	2235      	movs	r2, #53	@ 0x35
 800b79a:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800b79c:	683b      	ldr	r3, [r7, #0]
 800b79e:	3306      	adds	r3, #6
 800b7a0:	687a      	ldr	r2, [r7, #4]
 800b7a2:	7912      	ldrb	r2, [r2, #4]
 800b7a4:	701a      	strb	r2, [r3, #0]
 800b7a6:	e100      	b.n	800b9aa <cal_vcan+0x286>
				}
			}
			else
			{
				result[0] += 4;
 800b7a8:	683b      	ldr	r3, [r7, #0]
 800b7aa:	781b      	ldrb	r3, [r3, #0]
 800b7ac:	3304      	adds	r3, #4
 800b7ae:	b2da      	uxtb	r2, r3
 800b7b0:	683b      	ldr	r3, [r7, #0]
 800b7b2:	701a      	strb	r2, [r3, #0]
				//0x0 - (x0x0 1010 ~ 9090)
				result[3] = 0x35;
 800b7b4:	683b      	ldr	r3, [r7, #0]
 800b7b6:	3303      	adds	r3, #3
 800b7b8:	2235      	movs	r2, #53	@ 0x35
 800b7ba:	701a      	strb	r2, [r3, #0]
				result[4] = 0x30;
 800b7bc:	683b      	ldr	r3, [r7, #0]
 800b7be:	3304      	adds	r3, #4
 800b7c0:	2230      	movs	r2, #48	@ 0x30
 800b7c2:	701a      	strb	r2, [r3, #0]
				result[5] = 0x44;
 800b7c4:	683b      	ldr	r3, [r7, #0]
 800b7c6:	3305      	adds	r3, #5
 800b7c8:	2244      	movs	r2, #68	@ 0x44
 800b7ca:	701a      	strb	r2, [r3, #0]
				result[6] = data[3];
 800b7cc:	683b      	ldr	r3, [r7, #0]
 800b7ce:	3306      	adds	r3, #6
 800b7d0:	687a      	ldr	r2, [r7, #4]
 800b7d2:	78d2      	ldrb	r2, [r2, #3]
 800b7d4:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	3304      	adds	r3, #4
 800b7da:	781b      	ldrb	r3, [r3, #0]
 800b7dc:	2b30      	cmp	r3, #48	@ 0x30
 800b7de:	d100      	bne.n	800b7e2 <cal_vcan+0xbe>
 800b7e0:	e0e3      	b.n	800b9aa <cal_vcan+0x286>
				{
					result[0] += 2;
 800b7e2:	683b      	ldr	r3, [r7, #0]
 800b7e4:	781b      	ldrb	r3, [r3, #0]
 800b7e6:	3302      	adds	r3, #2
 800b7e8:	b2da      	uxtb	r2, r3
 800b7ea:	683b      	ldr	r3, [r7, #0]
 800b7ec:	701a      	strb	r2, [r3, #0]
					//x - (x0xx 1011 ~ 9099)
					result[7] = 0x35;
 800b7ee:	683b      	ldr	r3, [r7, #0]
 800b7f0:	3307      	adds	r3, #7
 800b7f2:	2235      	movs	r2, #53	@ 0x35
 800b7f4:	701a      	strb	r2, [r3, #0]
					result[8] = data[4];
 800b7f6:	683b      	ldr	r3, [r7, #0]
 800b7f8:	3308      	adds	r3, #8
 800b7fa:	687a      	ldr	r2, [r7, #4]
 800b7fc:	7912      	ldrb	r2, [r2, #4]
 800b7fe:	701a      	strb	r2, [r3, #0]
 800b800:	e0d3      	b.n	800b9aa <cal_vcan+0x286>
				}
			}
		}
		else
		{
			result[0] += 2;
 800b802:	683b      	ldr	r3, [r7, #0]
 800b804:	781b      	ldrb	r3, [r3, #0]
 800b806:	3302      	adds	r3, #2
 800b808:	b2da      	uxtb	r2, r3
 800b80a:	683b      	ldr	r3, [r7, #0]
 800b80c:	701a      	strb	r2, [r3, #0]
			//xx00 (1100 ~ 9900)
			result[3] = 0x45;
 800b80e:	683b      	ldr	r3, [r7, #0]
 800b810:	3303      	adds	r3, #3
 800b812:	2245      	movs	r2, #69	@ 0x45
 800b814:	701a      	strb	r2, [r3, #0]
			result[4] = data[2];
 800b816:	683b      	ldr	r3, [r7, #0]
 800b818:	3304      	adds	r3, #4
 800b81a:	687a      	ldr	r2, [r7, #4]
 800b81c:	7892      	ldrb	r2, [r2, #2]
 800b81e:	701a      	strb	r2, [r3, #0]
			if (data[3] == 0x30)
 800b820:	687b      	ldr	r3, [r7, #4]
 800b822:	3303      	adds	r3, #3
 800b824:	781b      	ldrb	r3, [r3, #0]
 800b826:	2b30      	cmp	r3, #48	@ 0x30
 800b828:	d11d      	bne.n	800b866 <cal_vcan+0x142>
			{
				if (data[4] != 0x30)
 800b82a:	687b      	ldr	r3, [r7, #4]
 800b82c:	3304      	adds	r3, #4
 800b82e:	781b      	ldrb	r3, [r3, #0]
 800b830:	2b30      	cmp	r3, #48	@ 0x30
 800b832:	d100      	bne.n	800b836 <cal_vcan+0x112>
 800b834:	e0b9      	b.n	800b9aa <cal_vcan+0x286>
				{
					result[0] += 4;
 800b836:	683b      	ldr	r3, [r7, #0]
 800b838:	781b      	ldrb	r3, [r3, #0]
 800b83a:	3304      	adds	r3, #4
 800b83c:	b2da      	uxtb	r2, r3
 800b83e:	683b      	ldr	r3, [r7, #0]
 800b840:	701a      	strb	r2, [r3, #0]
					//0x (1101 ~ 9909)
					result[5] = 0x35;
 800b842:	683b      	ldr	r3, [r7, #0]
 800b844:	3305      	adds	r3, #5
 800b846:	2235      	movs	r2, #53	@ 0x35
 800b848:	701a      	strb	r2, [r3, #0]
					result[6] = 0x30;
 800b84a:	683b      	ldr	r3, [r7, #0]
 800b84c:	3306      	adds	r3, #6
 800b84e:	2230      	movs	r2, #48	@ 0x30
 800b850:	701a      	strb	r2, [r3, #0]
					result[7] = 0x35;
 800b852:	683b      	ldr	r3, [r7, #0]
 800b854:	3307      	adds	r3, #7
 800b856:	2235      	movs	r2, #53	@ 0x35
 800b858:	701a      	strb	r2, [r3, #0]
					result[8] = data[4];
 800b85a:	683b      	ldr	r3, [r7, #0]
 800b85c:	3308      	adds	r3, #8
 800b85e:	687a      	ldr	r2, [r7, #4]
 800b860:	7912      	ldrb	r2, [r2, #4]
 800b862:	701a      	strb	r2, [r3, #0]
 800b864:	e0a1      	b.n	800b9aa <cal_vcan+0x286>
				}
			}
			else
			{
				result[0] += 2;
 800b866:	683b      	ldr	r3, [r7, #0]
 800b868:	781b      	ldrb	r3, [r3, #0]
 800b86a:	3302      	adds	r3, #2
 800b86c:	b2da      	uxtb	r2, r3
 800b86e:	683b      	ldr	r3, [r7, #0]
 800b870:	701a      	strb	r2, [r3, #0]
				//x0 - (1110 ~ 9990)
				result[5] = 0x44;
 800b872:	683b      	ldr	r3, [r7, #0]
 800b874:	3305      	adds	r3, #5
 800b876:	2244      	movs	r2, #68	@ 0x44
 800b878:	701a      	strb	r2, [r3, #0]
				result[6] = data[3];
 800b87a:	683b      	ldr	r3, [r7, #0]
 800b87c:	3306      	adds	r3, #6
 800b87e:	687a      	ldr	r2, [r7, #4]
 800b880:	78d2      	ldrb	r2, [r2, #3]
 800b882:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800b884:	687b      	ldr	r3, [r7, #4]
 800b886:	3304      	adds	r3, #4
 800b888:	781b      	ldrb	r3, [r3, #0]
 800b88a:	2b30      	cmp	r3, #48	@ 0x30
 800b88c:	d100      	bne.n	800b890 <cal_vcan+0x16c>
 800b88e:	e08c      	b.n	800b9aa <cal_vcan+0x286>
				{
					result[0] += 2;
 800b890:	683b      	ldr	r3, [r7, #0]
 800b892:	781b      	ldrb	r3, [r3, #0]
 800b894:	3302      	adds	r3, #2
 800b896:	b2da      	uxtb	r2, r3
 800b898:	683b      	ldr	r3, [r7, #0]
 800b89a:	701a      	strb	r2, [r3, #0]
					//x - (1111 ~ 9999)
					result[7] = 0x35;
 800b89c:	683b      	ldr	r3, [r7, #0]
 800b89e:	3307      	adds	r3, #7
 800b8a0:	2235      	movs	r2, #53	@ 0x35
 800b8a2:	701a      	strb	r2, [r3, #0]
					result[8] = data[4];
 800b8a4:	683b      	ldr	r3, [r7, #0]
 800b8a6:	3308      	adds	r3, #8
 800b8a8:	687a      	ldr	r2, [r7, #4]
 800b8aa:	7912      	ldrb	r2, [r2, #4]
 800b8ac:	701a      	strb	r2, [r3, #0]
 800b8ae:	e07c      	b.n	800b9aa <cal_vcan+0x286>
			}
		}
	}
	else
	{
		if (data[2] != 0x30)
 800b8b0:	687b      	ldr	r3, [r7, #4]
 800b8b2:	3302      	adds	r3, #2
 800b8b4:	781b      	ldrb	r3, [r3, #0]
 800b8b6:	2b30      	cmp	r3, #48	@ 0x30
 800b8b8:	d054      	beq.n	800b964 <cal_vcan+0x240>
		{
			result[0] += 2;
 800b8ba:	683b      	ldr	r3, [r7, #0]
 800b8bc:	781b      	ldrb	r3, [r3, #0]
 800b8be:	3302      	adds	r3, #2
 800b8c0:	b2da      	uxtb	r2, r3
 800b8c2:	683b      	ldr	r3, [r7, #0]
 800b8c4:	701a      	strb	r2, [r3, #0]
			//x?�� - (100 ~ 900)
			result[1] = 0x45;
 800b8c6:	683b      	ldr	r3, [r7, #0]
 800b8c8:	3301      	adds	r3, #1
 800b8ca:	2245      	movs	r2, #69	@ 0x45
 800b8cc:	701a      	strb	r2, [r3, #0]
			result[2] = data[2];
 800b8ce:	683b      	ldr	r3, [r7, #0]
 800b8d0:	3302      	adds	r3, #2
 800b8d2:	687a      	ldr	r2, [r7, #4]
 800b8d4:	7892      	ldrb	r2, [r2, #2]
 800b8d6:	701a      	strb	r2, [r3, #0]
			if (data[3] == 0x30)
 800b8d8:	687b      	ldr	r3, [r7, #4]
 800b8da:	3303      	adds	r3, #3
 800b8dc:	781b      	ldrb	r3, [r3, #0]
 800b8de:	2b30      	cmp	r3, #48	@ 0x30
 800b8e0:	d11c      	bne.n	800b91c <cal_vcan+0x1f8>
			{
				if (data[4] != 0x30)
 800b8e2:	687b      	ldr	r3, [r7, #4]
 800b8e4:	3304      	adds	r3, #4
 800b8e6:	781b      	ldrb	r3, [r3, #0]
 800b8e8:	2b30      	cmp	r3, #48	@ 0x30
 800b8ea:	d05e      	beq.n	800b9aa <cal_vcan+0x286>
				{
					result[0] += 4;
 800b8ec:	683b      	ldr	r3, [r7, #0]
 800b8ee:	781b      	ldrb	r3, [r3, #0]
 800b8f0:	3304      	adds	r3, #4
 800b8f2:	b2da      	uxtb	r2, r3
 800b8f4:	683b      	ldr	r3, [r7, #0]
 800b8f6:	701a      	strb	r2, [r3, #0]
					//0x - (101 ~ 909)
					result[3] = 0x35;
 800b8f8:	683b      	ldr	r3, [r7, #0]
 800b8fa:	3303      	adds	r3, #3
 800b8fc:	2235      	movs	r2, #53	@ 0x35
 800b8fe:	701a      	strb	r2, [r3, #0]
					result[4] = 0x30;
 800b900:	683b      	ldr	r3, [r7, #0]
 800b902:	3304      	adds	r3, #4
 800b904:	2230      	movs	r2, #48	@ 0x30
 800b906:	701a      	strb	r2, [r3, #0]
					result[5] = 0x35;
 800b908:	683b      	ldr	r3, [r7, #0]
 800b90a:	3305      	adds	r3, #5
 800b90c:	2235      	movs	r2, #53	@ 0x35
 800b90e:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800b910:	683b      	ldr	r3, [r7, #0]
 800b912:	3306      	adds	r3, #6
 800b914:	687a      	ldr	r2, [r7, #4]
 800b916:	7912      	ldrb	r2, [r2, #4]
 800b918:	701a      	strb	r2, [r3, #0]
 800b91a:	e046      	b.n	800b9aa <cal_vcan+0x286>
				}
			}
			else
			{
				result[0] += 2;
 800b91c:	683b      	ldr	r3, [r7, #0]
 800b91e:	781b      	ldrb	r3, [r3, #0]
 800b920:	3302      	adds	r3, #2
 800b922:	b2da      	uxtb	r2, r3
 800b924:	683b      	ldr	r3, [r7, #0]
 800b926:	701a      	strb	r2, [r3, #0]
				//x0 - (110 ~ 990)
				result[3] = 0x44;
 800b928:	683b      	ldr	r3, [r7, #0]
 800b92a:	3303      	adds	r3, #3
 800b92c:	2244      	movs	r2, #68	@ 0x44
 800b92e:	701a      	strb	r2, [r3, #0]
				result[4] = data[3];
 800b930:	683b      	ldr	r3, [r7, #0]
 800b932:	3304      	adds	r3, #4
 800b934:	687a      	ldr	r2, [r7, #4]
 800b936:	78d2      	ldrb	r2, [r2, #3]
 800b938:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800b93a:	687b      	ldr	r3, [r7, #4]
 800b93c:	3304      	adds	r3, #4
 800b93e:	781b      	ldrb	r3, [r3, #0]
 800b940:	2b30      	cmp	r3, #48	@ 0x30
 800b942:	d032      	beq.n	800b9aa <cal_vcan+0x286>
				{
					result[0] += 2;
 800b944:	683b      	ldr	r3, [r7, #0]
 800b946:	781b      	ldrb	r3, [r3, #0]
 800b948:	3302      	adds	r3, #2
 800b94a:	b2da      	uxtb	r2, r3
 800b94c:	683b      	ldr	r3, [r7, #0]
 800b94e:	701a      	strb	r2, [r3, #0]
					//x - (111 ~ 999)
					result[5] = 0x35;
 800b950:	683b      	ldr	r3, [r7, #0]
 800b952:	3305      	adds	r3, #5
 800b954:	2235      	movs	r2, #53	@ 0x35
 800b956:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800b958:	683b      	ldr	r3, [r7, #0]
 800b95a:	3306      	adds	r3, #6
 800b95c:	687a      	ldr	r2, [r7, #4]
 800b95e:	7912      	ldrb	r2, [r2, #4]
 800b960:	701a      	strb	r2, [r3, #0]
 800b962:	e022      	b.n	800b9aa <cal_vcan+0x286>
				}
			}
		}
		else
		{
			result[0] += 2;
 800b964:	683b      	ldr	r3, [r7, #0]
 800b966:	781b      	ldrb	r3, [r3, #0]
 800b968:	3302      	adds	r3, #2
 800b96a:	b2da      	uxtb	r2, r3
 800b96c:	683b      	ldr	r3, [r7, #0]
 800b96e:	701a      	strb	r2, [r3, #0]
			//x0 - (30 ~ 90)
			result[1] = 0x44;
 800b970:	683b      	ldr	r3, [r7, #0]
 800b972:	3301      	adds	r3, #1
 800b974:	2244      	movs	r2, #68	@ 0x44
 800b976:	701a      	strb	r2, [r3, #0]
			result[2] = data[3];
 800b978:	683b      	ldr	r3, [r7, #0]
 800b97a:	3302      	adds	r3, #2
 800b97c:	687a      	ldr	r2, [r7, #4]
 800b97e:	78d2      	ldrb	r2, [r2, #3]
 800b980:	701a      	strb	r2, [r3, #0]
			if (data[4] != 0x30)
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	3304      	adds	r3, #4
 800b986:	781b      	ldrb	r3, [r3, #0]
 800b988:	2b30      	cmp	r3, #48	@ 0x30
 800b98a:	d00e      	beq.n	800b9aa <cal_vcan+0x286>
			{
				result[0] += 2;
 800b98c:	683b      	ldr	r3, [r7, #0]
 800b98e:	781b      	ldrb	r3, [r3, #0]
 800b990:	3302      	adds	r3, #2
 800b992:	b2da      	uxtb	r2, r3
 800b994:	683b      	ldr	r3, [r7, #0]
 800b996:	701a      	strb	r2, [r3, #0]
				//x - (23 ~ 99)
				result[3] = 0x35;
 800b998:	683b      	ldr	r3, [r7, #0]
 800b99a:	3303      	adds	r3, #3
 800b99c:	2235      	movs	r2, #53	@ 0x35
 800b99e:	701a      	strb	r2, [r3, #0]
				result[4] = data[4];
 800b9a0:	683b      	ldr	r3, [r7, #0]
 800b9a2:	3304      	adds	r3, #4
 800b9a4:	687a      	ldr	r2, [r7, #4]
 800b9a6:	7912      	ldrb	r2, [r2, #4]
 800b9a8:	701a      	strb	r2, [r3, #0]
			}
		}
	}
	//yuan
	result[0] += 2;
 800b9aa:	683b      	ldr	r3, [r7, #0]
 800b9ac:	781b      	ldrb	r3, [r3, #0]
 800b9ae:	3302      	adds	r3, #2
 800b9b0:	b2da      	uxtb	r2, r3
 800b9b2:	683b      	ldr	r3, [r7, #0]
 800b9b4:	701a      	strb	r2, [r3, #0]
	result[result[0] - 1] = 0x36;
 800b9b6:	683b      	ldr	r3, [r7, #0]
 800b9b8:	781b      	ldrb	r3, [r3, #0]
 800b9ba:	3b01      	subs	r3, #1
 800b9bc:	683a      	ldr	r2, [r7, #0]
 800b9be:	18d3      	adds	r3, r2, r3
 800b9c0:	2236      	movs	r2, #54	@ 0x36
 800b9c2:	701a      	strb	r2, [r3, #0]
	result[result[0]] = 0x34;
 800b9c4:	683b      	ldr	r3, [r7, #0]
 800b9c6:	781b      	ldrb	r3, [r3, #0]
 800b9c8:	001a      	movs	r2, r3
 800b9ca:	683b      	ldr	r3, [r7, #0]
 800b9cc:	189b      	adds	r3, r3, r2
 800b9ce:	2234      	movs	r2, #52	@ 0x34
 800b9d0:	701a      	strb	r2, [r3, #0]

	if (data[5] != 0x30)
 800b9d2:	687b      	ldr	r3, [r7, #4]
 800b9d4:	3305      	adds	r3, #5
 800b9d6:	781b      	ldrb	r3, [r3, #0]
 800b9d8:	2b30      	cmp	r3, #48	@ 0x30
 800b9da:	d022      	beq.n	800ba22 <cal_vcan+0x2fe>
	{
		result[0] += 4;
 800b9dc:	683b      	ldr	r3, [r7, #0]
 800b9de:	781b      	ldrb	r3, [r3, #0]
 800b9e0:	3304      	adds	r3, #4
 800b9e2:	b2da      	uxtb	r2, r3
 800b9e4:	683b      	ldr	r3, [r7, #0]
 800b9e6:	701a      	strb	r2, [r3, #0]
		result[result[0] - 3] = 0x35;
 800b9e8:	683b      	ldr	r3, [r7, #0]
 800b9ea:	781b      	ldrb	r3, [r3, #0]
 800b9ec:	3b03      	subs	r3, #3
 800b9ee:	683a      	ldr	r2, [r7, #0]
 800b9f0:	18d3      	adds	r3, r2, r3
 800b9f2:	2235      	movs	r2, #53	@ 0x35
 800b9f4:	701a      	strb	r2, [r3, #0]
		result[result[0] - 2] = data[5];
 800b9f6:	683b      	ldr	r3, [r7, #0]
 800b9f8:	781b      	ldrb	r3, [r3, #0]
 800b9fa:	3b02      	subs	r3, #2
 800b9fc:	683a      	ldr	r2, [r7, #0]
 800b9fe:	18d3      	adds	r3, r2, r3
 800ba00:	687a      	ldr	r2, [r7, #4]
 800ba02:	7952      	ldrb	r2, [r2, #5]
 800ba04:	701a      	strb	r2, [r3, #0]
		//hau
		result[result[0] - 1] = 0x36;
 800ba06:	683b      	ldr	r3, [r7, #0]
 800ba08:	781b      	ldrb	r3, [r3, #0]
 800ba0a:	3b01      	subs	r3, #1
 800ba0c:	683a      	ldr	r2, [r7, #0]
 800ba0e:	18d3      	adds	r3, r2, r3
 800ba10:	2236      	movs	r2, #54	@ 0x36
 800ba12:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x33;
 800ba14:	683b      	ldr	r3, [r7, #0]
 800ba16:	781b      	ldrb	r3, [r3, #0]
 800ba18:	001a      	movs	r2, r3
 800ba1a:	683b      	ldr	r3, [r7, #0]
 800ba1c:	189b      	adds	r3, r3, r2
 800ba1e:	2233      	movs	r2, #51	@ 0x33
 800ba20:	701a      	strb	r2, [r3, #0]
	}

	if (data[0] != 0)
 800ba22:	687b      	ldr	r3, [r7, #4]
 800ba24:	781b      	ldrb	r3, [r3, #0]
 800ba26:	2b00      	cmp	r3, #0
 800ba28:	d100      	bne.n	800ba2c <cal_vcan+0x308>
 800ba2a:	e11f      	b.n	800bc6c <cal_vcan+0x548>
	{
		//surcharge
		result[0] += 2;
 800ba2c:	683b      	ldr	r3, [r7, #0]
 800ba2e:	781b      	ldrb	r3, [r3, #0]
 800ba30:	3302      	adds	r3, #2
 800ba32:	b2da      	uxtb	r2, r3
 800ba34:	683b      	ldr	r3, [r7, #0]
 800ba36:	701a      	strb	r2, [r3, #0]
		result[result[0] - 1] = 0x37;
 800ba38:	683b      	ldr	r3, [r7, #0]
 800ba3a:	781b      	ldrb	r3, [r3, #0]
 800ba3c:	3b01      	subs	r3, #1
 800ba3e:	683a      	ldr	r2, [r7, #0]
 800ba40:	18d3      	adds	r3, r2, r3
 800ba42:	2237      	movs	r2, #55	@ 0x37
 800ba44:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x32;
 800ba46:	683b      	ldr	r3, [r7, #0]
 800ba48:	781b      	ldrb	r3, [r3, #0]
 800ba4a:	001a      	movs	r2, r3
 800ba4c:	683b      	ldr	r3, [r7, #0]
 800ba4e:	189b      	adds	r3, r3, r2
 800ba50:	2232      	movs	r2, #50	@ 0x32
 800ba52:	701a      	strb	r2, [r3, #0]
		if (data[6] != 0x30)
 800ba54:	687b      	ldr	r3, [r7, #4]
 800ba56:	3306      	adds	r3, #6
 800ba58:	781b      	ldrb	r3, [r3, #0]
 800ba5a:	2b30      	cmp	r3, #48	@ 0x30
 800ba5c:	d074      	beq.n	800bb48 <cal_vcan+0x424>
		{
			result[0] += 2;
 800ba5e:	683b      	ldr	r3, [r7, #0]
 800ba60:	781b      	ldrb	r3, [r3, #0]
 800ba62:	3302      	adds	r3, #2
 800ba64:	b2da      	uxtb	r2, r3
 800ba66:	683b      	ldr	r3, [r7, #0]
 800ba68:	701a      	strb	r2, [r3, #0]
			//x?�� - (x?��)
			result[result[0] - 1] = 0x45;
 800ba6a:	683b      	ldr	r3, [r7, #0]
 800ba6c:	781b      	ldrb	r3, [r3, #0]
 800ba6e:	3b01      	subs	r3, #1
 800ba70:	683a      	ldr	r2, [r7, #0]
 800ba72:	18d3      	adds	r3, r2, r3
 800ba74:	2245      	movs	r2, #69	@ 0x45
 800ba76:	701a      	strb	r2, [r3, #0]
			result[result[0]] = data[6];
 800ba78:	683b      	ldr	r3, [r7, #0]
 800ba7a:	781b      	ldrb	r3, [r3, #0]
 800ba7c:	001a      	movs	r2, r3
 800ba7e:	683b      	ldr	r3, [r7, #0]
 800ba80:	189b      	adds	r3, r3, r2
 800ba82:	687a      	ldr	r2, [r7, #4]
 800ba84:	7992      	ldrb	r2, [r2, #6]
 800ba86:	701a      	strb	r2, [r3, #0]
			if (data[7] == 0x30)
 800ba88:	687b      	ldr	r3, [r7, #4]
 800ba8a:	3307      	adds	r3, #7
 800ba8c:	781b      	ldrb	r3, [r3, #0]
 800ba8e:	2b30      	cmp	r3, #48	@ 0x30
 800ba90:	d129      	bne.n	800bae6 <cal_vcan+0x3c2>
			{
				if (data[8] != 0x30)
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	3308      	adds	r3, #8
 800ba96:	781b      	ldrb	r3, [r3, #0]
 800ba98:	2b30      	cmp	r3, #48	@ 0x30
 800ba9a:	d100      	bne.n	800ba9e <cal_vcan+0x37a>
 800ba9c:	e0d2      	b.n	800bc44 <cal_vcan+0x520>
				{
					result[0] += 4;
 800ba9e:	683b      	ldr	r3, [r7, #0]
 800baa0:	781b      	ldrb	r3, [r3, #0]
 800baa2:	3304      	adds	r3, #4
 800baa4:	b2da      	uxtb	r2, r3
 800baa6:	683b      	ldr	r3, [r7, #0]
 800baa8:	701a      	strb	r2, [r3, #0]
					//0x - (101 ~ 909)
					result[result[0] - 3] = 0x35;
 800baaa:	683b      	ldr	r3, [r7, #0]
 800baac:	781b      	ldrb	r3, [r3, #0]
 800baae:	3b03      	subs	r3, #3
 800bab0:	683a      	ldr	r2, [r7, #0]
 800bab2:	18d3      	adds	r3, r2, r3
 800bab4:	2235      	movs	r2, #53	@ 0x35
 800bab6:	701a      	strb	r2, [r3, #0]
					result[result[0] - 2] = 0x30;
 800bab8:	683b      	ldr	r3, [r7, #0]
 800baba:	781b      	ldrb	r3, [r3, #0]
 800babc:	3b02      	subs	r3, #2
 800babe:	683a      	ldr	r2, [r7, #0]
 800bac0:	18d3      	adds	r3, r2, r3
 800bac2:	2230      	movs	r2, #48	@ 0x30
 800bac4:	701a      	strb	r2, [r3, #0]
					result[result[0] - 1] = 0x35;
 800bac6:	683b      	ldr	r3, [r7, #0]
 800bac8:	781b      	ldrb	r3, [r3, #0]
 800baca:	3b01      	subs	r3, #1
 800bacc:	683a      	ldr	r2, [r7, #0]
 800bace:	18d3      	adds	r3, r2, r3
 800bad0:	2235      	movs	r2, #53	@ 0x35
 800bad2:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800bad4:	683b      	ldr	r3, [r7, #0]
 800bad6:	781b      	ldrb	r3, [r3, #0]
 800bad8:	001a      	movs	r2, r3
 800bada:	683b      	ldr	r3, [r7, #0]
 800badc:	189b      	adds	r3, r3, r2
 800bade:	687a      	ldr	r2, [r7, #4]
 800bae0:	7a12      	ldrb	r2, [r2, #8]
 800bae2:	701a      	strb	r2, [r3, #0]
 800bae4:	e0ae      	b.n	800bc44 <cal_vcan+0x520>
				}
			}
			else
			{
				result[0] += 2;
 800bae6:	683b      	ldr	r3, [r7, #0]
 800bae8:	781b      	ldrb	r3, [r3, #0]
 800baea:	3302      	adds	r3, #2
 800baec:	b2da      	uxtb	r2, r3
 800baee:	683b      	ldr	r3, [r7, #0]
 800baf0:	701a      	strb	r2, [r3, #0]
				//x0 - (110 ~ 990)
				result[result[0] - 1] = 0x44;
 800baf2:	683b      	ldr	r3, [r7, #0]
 800baf4:	781b      	ldrb	r3, [r3, #0]
 800baf6:	3b01      	subs	r3, #1
 800baf8:	683a      	ldr	r2, [r7, #0]
 800bafa:	18d3      	adds	r3, r2, r3
 800bafc:	2244      	movs	r2, #68	@ 0x44
 800bafe:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[7];
 800bb00:	683b      	ldr	r3, [r7, #0]
 800bb02:	781b      	ldrb	r3, [r3, #0]
 800bb04:	001a      	movs	r2, r3
 800bb06:	683b      	ldr	r3, [r7, #0]
 800bb08:	189b      	adds	r3, r3, r2
 800bb0a:	687a      	ldr	r2, [r7, #4]
 800bb0c:	79d2      	ldrb	r2, [r2, #7]
 800bb0e:	701a      	strb	r2, [r3, #0]
				if (data[8] != 0x30)
 800bb10:	687b      	ldr	r3, [r7, #4]
 800bb12:	3308      	adds	r3, #8
 800bb14:	781b      	ldrb	r3, [r3, #0]
 800bb16:	2b30      	cmp	r3, #48	@ 0x30
 800bb18:	d100      	bne.n	800bb1c <cal_vcan+0x3f8>
 800bb1a:	e093      	b.n	800bc44 <cal_vcan+0x520>
				{
					result[0] += 2;
 800bb1c:	683b      	ldr	r3, [r7, #0]
 800bb1e:	781b      	ldrb	r3, [r3, #0]
 800bb20:	3302      	adds	r3, #2
 800bb22:	b2da      	uxtb	r2, r3
 800bb24:	683b      	ldr	r3, [r7, #0]
 800bb26:	701a      	strb	r2, [r3, #0]
					//x - (111 ~ 999)
					result[result[0] - 1] = 0x35;
 800bb28:	683b      	ldr	r3, [r7, #0]
 800bb2a:	781b      	ldrb	r3, [r3, #0]
 800bb2c:	3b01      	subs	r3, #1
 800bb2e:	683a      	ldr	r2, [r7, #0]
 800bb30:	18d3      	adds	r3, r2, r3
 800bb32:	2235      	movs	r2, #53	@ 0x35
 800bb34:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800bb36:	683b      	ldr	r3, [r7, #0]
 800bb38:	781b      	ldrb	r3, [r3, #0]
 800bb3a:	001a      	movs	r2, r3
 800bb3c:	683b      	ldr	r3, [r7, #0]
 800bb3e:	189b      	adds	r3, r3, r2
 800bb40:	687a      	ldr	r2, [r7, #4]
 800bb42:	7a12      	ldrb	r2, [r2, #8]
 800bb44:	701a      	strb	r2, [r3, #0]
 800bb46:	e07d      	b.n	800bc44 <cal_vcan+0x520>
				}
			}
		}
		else
		{
			if (data[7] == 0x31)
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	3307      	adds	r3, #7
 800bb4c:	781b      	ldrb	r3, [r3, #0]
 800bb4e:	2b31      	cmp	r3, #49	@ 0x31
 800bb50:	d12e      	bne.n	800bbb0 <cal_vcan+0x48c>
			{
				result[0] += 2;
 800bb52:	683b      	ldr	r3, [r7, #0]
 800bb54:	781b      	ldrb	r3, [r3, #0]
 800bb56:	3302      	adds	r3, #2
 800bb58:	b2da      	uxtb	r2, r3
 800bb5a:	683b      	ldr	r3, [r7, #0]
 800bb5c:	701a      	strb	r2, [r3, #0]
				//10 - (10)
				result[result[0] - 1] = 0x36;
 800bb5e:	683b      	ldr	r3, [r7, #0]
 800bb60:	781b      	ldrb	r3, [r3, #0]
 800bb62:	3b01      	subs	r3, #1
 800bb64:	683a      	ldr	r2, [r7, #0]
 800bb66:	18d3      	adds	r3, r2, r3
 800bb68:	2236      	movs	r2, #54	@ 0x36
 800bb6a:	701a      	strb	r2, [r3, #0]
				result[result[0]] = 0x30;
 800bb6c:	683b      	ldr	r3, [r7, #0]
 800bb6e:	781b      	ldrb	r3, [r3, #0]
 800bb70:	001a      	movs	r2, r3
 800bb72:	683b      	ldr	r3, [r7, #0]
 800bb74:	189b      	adds	r3, r3, r2
 800bb76:	2230      	movs	r2, #48	@ 0x30
 800bb78:	701a      	strb	r2, [r3, #0]
				if (data[8] != 0x30)
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	3308      	adds	r3, #8
 800bb7e:	781b      	ldrb	r3, [r3, #0]
 800bb80:	2b30      	cmp	r3, #48	@ 0x30
 800bb82:	d05f      	beq.n	800bc44 <cal_vcan+0x520>
				{
					result[0] += 2;
 800bb84:	683b      	ldr	r3, [r7, #0]
 800bb86:	781b      	ldrb	r3, [r3, #0]
 800bb88:	3302      	adds	r3, #2
 800bb8a:	b2da      	uxtb	r2, r3
 800bb8c:	683b      	ldr	r3, [r7, #0]
 800bb8e:	701a      	strb	r2, [r3, #0]
					//x - (11 ~ 19)
					result[result[0] - 1] = 0x35;
 800bb90:	683b      	ldr	r3, [r7, #0]
 800bb92:	781b      	ldrb	r3, [r3, #0]
 800bb94:	3b01      	subs	r3, #1
 800bb96:	683a      	ldr	r2, [r7, #0]
 800bb98:	18d3      	adds	r3, r2, r3
 800bb9a:	2235      	movs	r2, #53	@ 0x35
 800bb9c:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800bb9e:	683b      	ldr	r3, [r7, #0]
 800bba0:	781b      	ldrb	r3, [r3, #0]
 800bba2:	001a      	movs	r2, r3
 800bba4:	683b      	ldr	r3, [r7, #0]
 800bba6:	189b      	adds	r3, r3, r2
 800bba8:	687a      	ldr	r2, [r7, #4]
 800bbaa:	7a12      	ldrb	r2, [r2, #8]
 800bbac:	701a      	strb	r2, [r3, #0]
 800bbae:	e049      	b.n	800bc44 <cal_vcan+0x520>
				}
			}
			else if (data[7] != 0x30)
 800bbb0:	687b      	ldr	r3, [r7, #4]
 800bbb2:	3307      	adds	r3, #7
 800bbb4:	781b      	ldrb	r3, [r3, #0]
 800bbb6:	2b30      	cmp	r3, #48	@ 0x30
 800bbb8:	d02f      	beq.n	800bc1a <cal_vcan+0x4f6>
			{
				result[0] += 2;
 800bbba:	683b      	ldr	r3, [r7, #0]
 800bbbc:	781b      	ldrb	r3, [r3, #0]
 800bbbe:	3302      	adds	r3, #2
 800bbc0:	b2da      	uxtb	r2, r3
 800bbc2:	683b      	ldr	r3, [r7, #0]
 800bbc4:	701a      	strb	r2, [r3, #0]
				//x0 - (20 ~ 90)
				result[result[0] - 1] = 0x44;
 800bbc6:	683b      	ldr	r3, [r7, #0]
 800bbc8:	781b      	ldrb	r3, [r3, #0]
 800bbca:	3b01      	subs	r3, #1
 800bbcc:	683a      	ldr	r2, [r7, #0]
 800bbce:	18d3      	adds	r3, r2, r3
 800bbd0:	2244      	movs	r2, #68	@ 0x44
 800bbd2:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[7];
 800bbd4:	683b      	ldr	r3, [r7, #0]
 800bbd6:	781b      	ldrb	r3, [r3, #0]
 800bbd8:	001a      	movs	r2, r3
 800bbda:	683b      	ldr	r3, [r7, #0]
 800bbdc:	189b      	adds	r3, r3, r2
 800bbde:	687a      	ldr	r2, [r7, #4]
 800bbe0:	79d2      	ldrb	r2, [r2, #7]
 800bbe2:	701a      	strb	r2, [r3, #0]
				if (data[8] != 0x30)
 800bbe4:	687b      	ldr	r3, [r7, #4]
 800bbe6:	3308      	adds	r3, #8
 800bbe8:	781b      	ldrb	r3, [r3, #0]
 800bbea:	2b30      	cmp	r3, #48	@ 0x30
 800bbec:	d02a      	beq.n	800bc44 <cal_vcan+0x520>
				{
					result[0] += 2;
 800bbee:	683b      	ldr	r3, [r7, #0]
 800bbf0:	781b      	ldrb	r3, [r3, #0]
 800bbf2:	3302      	adds	r3, #2
 800bbf4:	b2da      	uxtb	r2, r3
 800bbf6:	683b      	ldr	r3, [r7, #0]
 800bbf8:	701a      	strb	r2, [r3, #0]
					//x - (21 ~ 99)
					result[result[0] - 1] = 0x35;
 800bbfa:	683b      	ldr	r3, [r7, #0]
 800bbfc:	781b      	ldrb	r3, [r3, #0]
 800bbfe:	3b01      	subs	r3, #1
 800bc00:	683a      	ldr	r2, [r7, #0]
 800bc02:	18d3      	adds	r3, r2, r3
 800bc04:	2235      	movs	r2, #53	@ 0x35
 800bc06:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800bc08:	683b      	ldr	r3, [r7, #0]
 800bc0a:	781b      	ldrb	r3, [r3, #0]
 800bc0c:	001a      	movs	r2, r3
 800bc0e:	683b      	ldr	r3, [r7, #0]
 800bc10:	189b      	adds	r3, r3, r2
 800bc12:	687a      	ldr	r2, [r7, #4]
 800bc14:	7a12      	ldrb	r2, [r2, #8]
 800bc16:	701a      	strb	r2, [r3, #0]
 800bc18:	e014      	b.n	800bc44 <cal_vcan+0x520>
				}
			}
			else
			{
				result[0] += 2;
 800bc1a:	683b      	ldr	r3, [r7, #0]
 800bc1c:	781b      	ldrb	r3, [r3, #0]
 800bc1e:	3302      	adds	r3, #2
 800bc20:	b2da      	uxtb	r2, r3
 800bc22:	683b      	ldr	r3, [r7, #0]
 800bc24:	701a      	strb	r2, [r3, #0]
				//x - (1 ~ 9)
				result[result[0] - 1] = 0x35;
 800bc26:	683b      	ldr	r3, [r7, #0]
 800bc28:	781b      	ldrb	r3, [r3, #0]
 800bc2a:	3b01      	subs	r3, #1
 800bc2c:	683a      	ldr	r2, [r7, #0]
 800bc2e:	18d3      	adds	r3, r2, r3
 800bc30:	2235      	movs	r2, #53	@ 0x35
 800bc32:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[8];
 800bc34:	683b      	ldr	r3, [r7, #0]
 800bc36:	781b      	ldrb	r3, [r3, #0]
 800bc38:	001a      	movs	r2, r3
 800bc3a:	683b      	ldr	r3, [r7, #0]
 800bc3c:	189b      	adds	r3, r3, r2
 800bc3e:	687a      	ldr	r2, [r7, #4]
 800bc40:	7a12      	ldrb	r2, [r2, #8]
 800bc42:	701a      	strb	r2, [r3, #0]
			}
		}
		//yuan
		result[0] += 2;
 800bc44:	683b      	ldr	r3, [r7, #0]
 800bc46:	781b      	ldrb	r3, [r3, #0]
 800bc48:	3302      	adds	r3, #2
 800bc4a:	b2da      	uxtb	r2, r3
 800bc4c:	683b      	ldr	r3, [r7, #0]
 800bc4e:	701a      	strb	r2, [r3, #0]
		result[result[0] - 1] = 0x36;
 800bc50:	683b      	ldr	r3, [r7, #0]
 800bc52:	781b      	ldrb	r3, [r3, #0]
 800bc54:	3b01      	subs	r3, #1
 800bc56:	683a      	ldr	r2, [r7, #0]
 800bc58:	18d3      	adds	r3, r2, r3
 800bc5a:	2236      	movs	r2, #54	@ 0x36
 800bc5c:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x34;
 800bc5e:	683b      	ldr	r3, [r7, #0]
 800bc60:	781b      	ldrb	r3, [r3, #0]
 800bc62:	001a      	movs	r2, r3
 800bc64:	683b      	ldr	r3, [r7, #0]
 800bc66:	189b      	adds	r3, r3, r2
 800bc68:	2234      	movs	r2, #52	@ 0x34
 800bc6a:	701a      	strb	r2, [r3, #0]
	}
	//thx, bye
	result[0] += 2;
 800bc6c:	683b      	ldr	r3, [r7, #0]
 800bc6e:	781b      	ldrb	r3, [r3, #0]
 800bc70:	3302      	adds	r3, #2
 800bc72:	b2da      	uxtb	r2, r3
 800bc74:	683b      	ldr	r3, [r7, #0]
 800bc76:	701a      	strb	r2, [r3, #0]
	result[result[0] - 1] = 0x37;
 800bc78:	683b      	ldr	r3, [r7, #0]
 800bc7a:	781b      	ldrb	r3, [r3, #0]
 800bc7c:	3b01      	subs	r3, #1
 800bc7e:	683a      	ldr	r2, [r7, #0]
 800bc80:	18d3      	adds	r3, r2, r3
 800bc82:	2237      	movs	r2, #55	@ 0x37
 800bc84:	701a      	strb	r2, [r3, #0]
	result[result[0]] = 0x31;
 800bc86:	683b      	ldr	r3, [r7, #0]
 800bc88:	781b      	ldrb	r3, [r3, #0]
 800bc8a:	001a      	movs	r2, r3
 800bc8c:	683b      	ldr	r3, [r7, #0]
 800bc8e:	189b      	adds	r3, r3, r2
 800bc90:	2231      	movs	r2, #49	@ 0x31
 800bc92:	701a      	strb	r2, [r3, #0]
}
 800bc94:	46c0      	nop			@ (mov r8, r8)
 800bc96:	46bd      	mov	sp, r7
 800bc98:	b002      	add	sp, #8
 800bc9a:	bd80      	pop	{r7, pc}

0800bc9c <cal_vcn>:

void cal_vcn(unsigned char data[], unsigned char result[])
{
 800bc9c:	b580      	push	{r7, lr}
 800bc9e:	b082      	sub	sp, #8
 800bca0:	af00      	add	r7, sp, #0
 800bca2:	6078      	str	r0, [r7, #4]
 800bca4:	6039      	str	r1, [r7, #0]
	if (data[1] != 0x30)
 800bca6:	687b      	ldr	r3, [r7, #4]
 800bca8:	3301      	adds	r3, #1
 800bcaa:	781b      	ldrb	r3, [r3, #0]
 800bcac:	2b30      	cmp	r3, #48	@ 0x30
 800bcae:	d100      	bne.n	800bcb2 <cal_vcn+0x16>
 800bcb0:	e0ba      	b.n	800be28 <cal_vcn+0x18c>
	{
		result[0] += 2;
 800bcb2:	683b      	ldr	r3, [r7, #0]
 800bcb4:	781b      	ldrb	r3, [r3, #0]
 800bcb6:	3302      	adds	r3, #2
 800bcb8:	b2da      	uxtb	r2, r3
 800bcba:	683b      	ldr	r3, [r7, #0]
 800bcbc:	701a      	strb	r2, [r3, #0]
		//x000 - (1000 ~ 9000)
		result[1] = 0x49;
 800bcbe:	683b      	ldr	r3, [r7, #0]
 800bcc0:	3301      	adds	r3, #1
 800bcc2:	2249      	movs	r2, #73	@ 0x49
 800bcc4:	701a      	strb	r2, [r3, #0]
		result[2] = data[1];
 800bcc6:	683b      	ldr	r3, [r7, #0]
 800bcc8:	3302      	adds	r3, #2
 800bcca:	687a      	ldr	r2, [r7, #4]
 800bccc:	7852      	ldrb	r2, [r2, #1]
 800bcce:	701a      	strb	r2, [r3, #0]
		if (data[2] == 0x30)
 800bcd0:	687b      	ldr	r3, [r7, #4]
 800bcd2:	3302      	adds	r3, #2
 800bcd4:	781b      	ldrb	r3, [r3, #0]
 800bcd6:	2b30      	cmp	r3, #48	@ 0x30
 800bcd8:	d14f      	bne.n	800bd7a <cal_vcn+0xde>
		{
			if (data[3] == 0x30)
 800bcda:	687b      	ldr	r3, [r7, #4]
 800bcdc:	3303      	adds	r3, #3
 800bcde:	781b      	ldrb	r3, [r3, #0]
 800bce0:	2b30      	cmp	r3, #48	@ 0x30
 800bce2:	d11d      	bne.n	800bd20 <cal_vcn+0x84>
			{
				if (data[4] != 0x30)
 800bce4:	687b      	ldr	r3, [r7, #4]
 800bce6:	3304      	adds	r3, #4
 800bce8:	781b      	ldrb	r3, [r3, #0]
 800bcea:	2b30      	cmp	r3, #48	@ 0x30
 800bcec:	d100      	bne.n	800bcf0 <cal_vcn+0x54>
 800bcee:	e118      	b.n	800bf22 <cal_vcn+0x286>
				{
					result[0] += 4;
 800bcf0:	683b      	ldr	r3, [r7, #0]
 800bcf2:	781b      	ldrb	r3, [r3, #0]
 800bcf4:	3304      	adds	r3, #4
 800bcf6:	b2da      	uxtb	r2, r3
 800bcf8:	683b      	ldr	r3, [r7, #0]
 800bcfa:	701a      	strb	r2, [r3, #0]
					//0x - (1001 ~ 9009)
					result[3] = 0x4A;
 800bcfc:	683b      	ldr	r3, [r7, #0]
 800bcfe:	3303      	adds	r3, #3
 800bd00:	224a      	movs	r2, #74	@ 0x4a
 800bd02:	701a      	strb	r2, [r3, #0]
					result[4] = 0x30;
 800bd04:	683b      	ldr	r3, [r7, #0]
 800bd06:	3304      	adds	r3, #4
 800bd08:	2230      	movs	r2, #48	@ 0x30
 800bd0a:	701a      	strb	r2, [r3, #0]
					result[5] = 0x4A;
 800bd0c:	683b      	ldr	r3, [r7, #0]
 800bd0e:	3305      	adds	r3, #5
 800bd10:	224a      	movs	r2, #74	@ 0x4a
 800bd12:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800bd14:	683b      	ldr	r3, [r7, #0]
 800bd16:	3306      	adds	r3, #6
 800bd18:	687a      	ldr	r2, [r7, #4]
 800bd1a:	7912      	ldrb	r2, [r2, #4]
 800bd1c:	701a      	strb	r2, [r3, #0]
 800bd1e:	e100      	b.n	800bf22 <cal_vcn+0x286>
				}
			}
			else
			{
				result[0] += 4;
 800bd20:	683b      	ldr	r3, [r7, #0]
 800bd22:	781b      	ldrb	r3, [r3, #0]
 800bd24:	3304      	adds	r3, #4
 800bd26:	b2da      	uxtb	r2, r3
 800bd28:	683b      	ldr	r3, [r7, #0]
 800bd2a:	701a      	strb	r2, [r3, #0]
				//0x0 - (1010 ~ 9090)
				result[3] = 0x4A;
 800bd2c:	683b      	ldr	r3, [r7, #0]
 800bd2e:	3303      	adds	r3, #3
 800bd30:	224a      	movs	r2, #74	@ 0x4a
 800bd32:	701a      	strb	r2, [r3, #0]
				result[4] = 0x30;
 800bd34:	683b      	ldr	r3, [r7, #0]
 800bd36:	3304      	adds	r3, #4
 800bd38:	2230      	movs	r2, #48	@ 0x30
 800bd3a:	701a      	strb	r2, [r3, #0]
				result[5] = 0x47;
 800bd3c:	683b      	ldr	r3, [r7, #0]
 800bd3e:	3305      	adds	r3, #5
 800bd40:	2247      	movs	r2, #71	@ 0x47
 800bd42:	701a      	strb	r2, [r3, #0]
				result[6] = data[3];
 800bd44:	683b      	ldr	r3, [r7, #0]
 800bd46:	3306      	adds	r3, #6
 800bd48:	687a      	ldr	r2, [r7, #4]
 800bd4a:	78d2      	ldrb	r2, [r2, #3]
 800bd4c:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800bd4e:	687b      	ldr	r3, [r7, #4]
 800bd50:	3304      	adds	r3, #4
 800bd52:	781b      	ldrb	r3, [r3, #0]
 800bd54:	2b30      	cmp	r3, #48	@ 0x30
 800bd56:	d100      	bne.n	800bd5a <cal_vcn+0xbe>
 800bd58:	e0e3      	b.n	800bf22 <cal_vcn+0x286>
				{
					result[0] += 2;
 800bd5a:	683b      	ldr	r3, [r7, #0]
 800bd5c:	781b      	ldrb	r3, [r3, #0]
 800bd5e:	3302      	adds	r3, #2
 800bd60:	b2da      	uxtb	r2, r3
 800bd62:	683b      	ldr	r3, [r7, #0]
 800bd64:	701a      	strb	r2, [r3, #0]
					//x - (1011 ~ 9099)
					result[7] = 0x4A;
 800bd66:	683b      	ldr	r3, [r7, #0]
 800bd68:	3307      	adds	r3, #7
 800bd6a:	224a      	movs	r2, #74	@ 0x4a
 800bd6c:	701a      	strb	r2, [r3, #0]
					result[8] = data[4];
 800bd6e:	683b      	ldr	r3, [r7, #0]
 800bd70:	3308      	adds	r3, #8
 800bd72:	687a      	ldr	r2, [r7, #4]
 800bd74:	7912      	ldrb	r2, [r2, #4]
 800bd76:	701a      	strb	r2, [r3, #0]
 800bd78:	e0d3      	b.n	800bf22 <cal_vcn+0x286>
				}
			}
		}
		else
		{
			result[0] += 2;
 800bd7a:	683b      	ldr	r3, [r7, #0]
 800bd7c:	781b      	ldrb	r3, [r3, #0]
 800bd7e:	3302      	adds	r3, #2
 800bd80:	b2da      	uxtb	r2, r3
 800bd82:	683b      	ldr	r3, [r7, #0]
 800bd84:	701a      	strb	r2, [r3, #0]
			//x00 - (100 ~ 900)
			result[3] = 0x48;
 800bd86:	683b      	ldr	r3, [r7, #0]
 800bd88:	3303      	adds	r3, #3
 800bd8a:	2248      	movs	r2, #72	@ 0x48
 800bd8c:	701a      	strb	r2, [r3, #0]
			result[4] = data[2];
 800bd8e:	683b      	ldr	r3, [r7, #0]
 800bd90:	3304      	adds	r3, #4
 800bd92:	687a      	ldr	r2, [r7, #4]
 800bd94:	7892      	ldrb	r2, [r2, #2]
 800bd96:	701a      	strb	r2, [r3, #0]
			if (data[3] == 0x30)
 800bd98:	687b      	ldr	r3, [r7, #4]
 800bd9a:	3303      	adds	r3, #3
 800bd9c:	781b      	ldrb	r3, [r3, #0]
 800bd9e:	2b30      	cmp	r3, #48	@ 0x30
 800bda0:	d11d      	bne.n	800bdde <cal_vcn+0x142>
			{
				if (data[4] != 0x30)
 800bda2:	687b      	ldr	r3, [r7, #4]
 800bda4:	3304      	adds	r3, #4
 800bda6:	781b      	ldrb	r3, [r3, #0]
 800bda8:	2b30      	cmp	r3, #48	@ 0x30
 800bdaa:	d100      	bne.n	800bdae <cal_vcn+0x112>
 800bdac:	e0b9      	b.n	800bf22 <cal_vcn+0x286>
				{
					result[0] += 4;
 800bdae:	683b      	ldr	r3, [r7, #0]
 800bdb0:	781b      	ldrb	r3, [r3, #0]
 800bdb2:	3304      	adds	r3, #4
 800bdb4:	b2da      	uxtb	r2, r3
 800bdb6:	683b      	ldr	r3, [r7, #0]
 800bdb8:	701a      	strb	r2, [r3, #0]
					//0x - (1101 ~ 9909)
					result[5] = 0x4A;
 800bdba:	683b      	ldr	r3, [r7, #0]
 800bdbc:	3305      	adds	r3, #5
 800bdbe:	224a      	movs	r2, #74	@ 0x4a
 800bdc0:	701a      	strb	r2, [r3, #0]
					result[6] = 0x30;
 800bdc2:	683b      	ldr	r3, [r7, #0]
 800bdc4:	3306      	adds	r3, #6
 800bdc6:	2230      	movs	r2, #48	@ 0x30
 800bdc8:	701a      	strb	r2, [r3, #0]
					result[7] = 0x4A;
 800bdca:	683b      	ldr	r3, [r7, #0]
 800bdcc:	3307      	adds	r3, #7
 800bdce:	224a      	movs	r2, #74	@ 0x4a
 800bdd0:	701a      	strb	r2, [r3, #0]
					result[8] = data[4];
 800bdd2:	683b      	ldr	r3, [r7, #0]
 800bdd4:	3308      	adds	r3, #8
 800bdd6:	687a      	ldr	r2, [r7, #4]
 800bdd8:	7912      	ldrb	r2, [r2, #4]
 800bdda:	701a      	strb	r2, [r3, #0]
 800bddc:	e0a1      	b.n	800bf22 <cal_vcn+0x286>
				}
			}
			else
			{
				result[0] += 2;
 800bdde:	683b      	ldr	r3, [r7, #0]
 800bde0:	781b      	ldrb	r3, [r3, #0]
 800bde2:	3302      	adds	r3, #2
 800bde4:	b2da      	uxtb	r2, r3
 800bde6:	683b      	ldr	r3, [r7, #0]
 800bde8:	701a      	strb	r2, [r3, #0]
				//x0 - (1110 ~ 9990)
				result[5] = 0x47;
 800bdea:	683b      	ldr	r3, [r7, #0]
 800bdec:	3305      	adds	r3, #5
 800bdee:	2247      	movs	r2, #71	@ 0x47
 800bdf0:	701a      	strb	r2, [r3, #0]
				result[6] = data[3];
 800bdf2:	683b      	ldr	r3, [r7, #0]
 800bdf4:	3306      	adds	r3, #6
 800bdf6:	687a      	ldr	r2, [r7, #4]
 800bdf8:	78d2      	ldrb	r2, [r2, #3]
 800bdfa:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	3304      	adds	r3, #4
 800be00:	781b      	ldrb	r3, [r3, #0]
 800be02:	2b30      	cmp	r3, #48	@ 0x30
 800be04:	d100      	bne.n	800be08 <cal_vcn+0x16c>
 800be06:	e08c      	b.n	800bf22 <cal_vcn+0x286>
				{
					result[0] += 2;
 800be08:	683b      	ldr	r3, [r7, #0]
 800be0a:	781b      	ldrb	r3, [r3, #0]
 800be0c:	3302      	adds	r3, #2
 800be0e:	b2da      	uxtb	r2, r3
 800be10:	683b      	ldr	r3, [r7, #0]
 800be12:	701a      	strb	r2, [r3, #0]
					//x - (1111 ~ 9999)
					result[7] = 0x4A;
 800be14:	683b      	ldr	r3, [r7, #0]
 800be16:	3307      	adds	r3, #7
 800be18:	224a      	movs	r2, #74	@ 0x4a
 800be1a:	701a      	strb	r2, [r3, #0]
					result[8] = data[4];
 800be1c:	683b      	ldr	r3, [r7, #0]
 800be1e:	3308      	adds	r3, #8
 800be20:	687a      	ldr	r2, [r7, #4]
 800be22:	7912      	ldrb	r2, [r2, #4]
 800be24:	701a      	strb	r2, [r3, #0]
 800be26:	e07c      	b.n	800bf22 <cal_vcn+0x286>
			}
		}
	}
	else
	{
		if (data[2] != 0x30)
 800be28:	687b      	ldr	r3, [r7, #4]
 800be2a:	3302      	adds	r3, #2
 800be2c:	781b      	ldrb	r3, [r3, #0]
 800be2e:	2b30      	cmp	r3, #48	@ 0x30
 800be30:	d054      	beq.n	800bedc <cal_vcn+0x240>
		{
			result[0] += 2;
 800be32:	683b      	ldr	r3, [r7, #0]
 800be34:	781b      	ldrb	r3, [r3, #0]
 800be36:	3302      	adds	r3, #2
 800be38:	b2da      	uxtb	r2, r3
 800be3a:	683b      	ldr	r3, [r7, #0]
 800be3c:	701a      	strb	r2, [r3, #0]
			//x00 - (100 ~ 900)
			result[1] = 0x48;
 800be3e:	683b      	ldr	r3, [r7, #0]
 800be40:	3301      	adds	r3, #1
 800be42:	2248      	movs	r2, #72	@ 0x48
 800be44:	701a      	strb	r2, [r3, #0]
			result[2] = data[2];
 800be46:	683b      	ldr	r3, [r7, #0]
 800be48:	3302      	adds	r3, #2
 800be4a:	687a      	ldr	r2, [r7, #4]
 800be4c:	7892      	ldrb	r2, [r2, #2]
 800be4e:	701a      	strb	r2, [r3, #0]
			if (data[3] == 0x30)
 800be50:	687b      	ldr	r3, [r7, #4]
 800be52:	3303      	adds	r3, #3
 800be54:	781b      	ldrb	r3, [r3, #0]
 800be56:	2b30      	cmp	r3, #48	@ 0x30
 800be58:	d11c      	bne.n	800be94 <cal_vcn+0x1f8>
			{
				if (data[4] != 0x30)
 800be5a:	687b      	ldr	r3, [r7, #4]
 800be5c:	3304      	adds	r3, #4
 800be5e:	781b      	ldrb	r3, [r3, #0]
 800be60:	2b30      	cmp	r3, #48	@ 0x30
 800be62:	d05e      	beq.n	800bf22 <cal_vcn+0x286>
				{
					result[0] += 4;
 800be64:	683b      	ldr	r3, [r7, #0]
 800be66:	781b      	ldrb	r3, [r3, #0]
 800be68:	3304      	adds	r3, #4
 800be6a:	b2da      	uxtb	r2, r3
 800be6c:	683b      	ldr	r3, [r7, #0]
 800be6e:	701a      	strb	r2, [r3, #0]
					//0x - (101 ~ 909)
					result[3] = 0x4A;
 800be70:	683b      	ldr	r3, [r7, #0]
 800be72:	3303      	adds	r3, #3
 800be74:	224a      	movs	r2, #74	@ 0x4a
 800be76:	701a      	strb	r2, [r3, #0]
					result[4] = 0x30;
 800be78:	683b      	ldr	r3, [r7, #0]
 800be7a:	3304      	adds	r3, #4
 800be7c:	2230      	movs	r2, #48	@ 0x30
 800be7e:	701a      	strb	r2, [r3, #0]
					result[5] = 0x4A;
 800be80:	683b      	ldr	r3, [r7, #0]
 800be82:	3305      	adds	r3, #5
 800be84:	224a      	movs	r2, #74	@ 0x4a
 800be86:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800be88:	683b      	ldr	r3, [r7, #0]
 800be8a:	3306      	adds	r3, #6
 800be8c:	687a      	ldr	r2, [r7, #4]
 800be8e:	7912      	ldrb	r2, [r2, #4]
 800be90:	701a      	strb	r2, [r3, #0]
 800be92:	e046      	b.n	800bf22 <cal_vcn+0x286>
				}
			}
			else
			{
				result[0] += 2;
 800be94:	683b      	ldr	r3, [r7, #0]
 800be96:	781b      	ldrb	r3, [r3, #0]
 800be98:	3302      	adds	r3, #2
 800be9a:	b2da      	uxtb	r2, r3
 800be9c:	683b      	ldr	r3, [r7, #0]
 800be9e:	701a      	strb	r2, [r3, #0]
				//x0 - (110 ~ 990)
				result[3] = 0x47;
 800bea0:	683b      	ldr	r3, [r7, #0]
 800bea2:	3303      	adds	r3, #3
 800bea4:	2247      	movs	r2, #71	@ 0x47
 800bea6:	701a      	strb	r2, [r3, #0]
				result[4] = data[3];
 800bea8:	683b      	ldr	r3, [r7, #0]
 800beaa:	3304      	adds	r3, #4
 800beac:	687a      	ldr	r2, [r7, #4]
 800beae:	78d2      	ldrb	r2, [r2, #3]
 800beb0:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	3304      	adds	r3, #4
 800beb6:	781b      	ldrb	r3, [r3, #0]
 800beb8:	2b30      	cmp	r3, #48	@ 0x30
 800beba:	d032      	beq.n	800bf22 <cal_vcn+0x286>
				{
					result[0] += 2;
 800bebc:	683b      	ldr	r3, [r7, #0]
 800bebe:	781b      	ldrb	r3, [r3, #0]
 800bec0:	3302      	adds	r3, #2
 800bec2:	b2da      	uxtb	r2, r3
 800bec4:	683b      	ldr	r3, [r7, #0]
 800bec6:	701a      	strb	r2, [r3, #0]
					//x - (111 ~ 999)
					result[5] = 0x4A;
 800bec8:	683b      	ldr	r3, [r7, #0]
 800beca:	3305      	adds	r3, #5
 800becc:	224a      	movs	r2, #74	@ 0x4a
 800bece:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800bed0:	683b      	ldr	r3, [r7, #0]
 800bed2:	3306      	adds	r3, #6
 800bed4:	687a      	ldr	r2, [r7, #4]
 800bed6:	7912      	ldrb	r2, [r2, #4]
 800bed8:	701a      	strb	r2, [r3, #0]
 800beda:	e022      	b.n	800bf22 <cal_vcn+0x286>
				}
			}
		}
		else
		{
			result[0] += 2;
 800bedc:	683b      	ldr	r3, [r7, #0]
 800bede:	781b      	ldrb	r3, [r3, #0]
 800bee0:	3302      	adds	r3, #2
 800bee2:	b2da      	uxtb	r2, r3
 800bee4:	683b      	ldr	r3, [r7, #0]
 800bee6:	701a      	strb	r2, [r3, #0]
			//x0 - (30 ~ 90)
			result[1] = 0x47;
 800bee8:	683b      	ldr	r3, [r7, #0]
 800beea:	3301      	adds	r3, #1
 800beec:	2247      	movs	r2, #71	@ 0x47
 800beee:	701a      	strb	r2, [r3, #0]
			result[2] = data[3];
 800bef0:	683b      	ldr	r3, [r7, #0]
 800bef2:	3302      	adds	r3, #2
 800bef4:	687a      	ldr	r2, [r7, #4]
 800bef6:	78d2      	ldrb	r2, [r2, #3]
 800bef8:	701a      	strb	r2, [r3, #0]
			if (data[4] != 0x30)
 800befa:	687b      	ldr	r3, [r7, #4]
 800befc:	3304      	adds	r3, #4
 800befe:	781b      	ldrb	r3, [r3, #0]
 800bf00:	2b30      	cmp	r3, #48	@ 0x30
 800bf02:	d00e      	beq.n	800bf22 <cal_vcn+0x286>
			{
				result[0] += 2;
 800bf04:	683b      	ldr	r3, [r7, #0]
 800bf06:	781b      	ldrb	r3, [r3, #0]
 800bf08:	3302      	adds	r3, #2
 800bf0a:	b2da      	uxtb	r2, r3
 800bf0c:	683b      	ldr	r3, [r7, #0]
 800bf0e:	701a      	strb	r2, [r3, #0]
				//x - (23 ~ 99)
				result[3] = 0x4A;
 800bf10:	683b      	ldr	r3, [r7, #0]
 800bf12:	3303      	adds	r3, #3
 800bf14:	224a      	movs	r2, #74	@ 0x4a
 800bf16:	701a      	strb	r2, [r3, #0]
				result[4] = data[4];
 800bf18:	683b      	ldr	r3, [r7, #0]
 800bf1a:	3304      	adds	r3, #4
 800bf1c:	687a      	ldr	r2, [r7, #4]
 800bf1e:	7912      	ldrb	r2, [r2, #4]
 800bf20:	701a      	strb	r2, [r3, #0]
			}
		}
	}

	if (data[5] != 0x30)
 800bf22:	687b      	ldr	r3, [r7, #4]
 800bf24:	3305      	adds	r3, #5
 800bf26:	781b      	ldrb	r3, [r3, #0]
 800bf28:	2b30      	cmp	r3, #48	@ 0x30
 800bf2a:	d022      	beq.n	800bf72 <cal_vcn+0x2d6>
	{
		result[0] += 4;
 800bf2c:	683b      	ldr	r3, [r7, #0]
 800bf2e:	781b      	ldrb	r3, [r3, #0]
 800bf30:	3304      	adds	r3, #4
 800bf32:	b2da      	uxtb	r2, r3
 800bf34:	683b      	ldr	r3, [r7, #0]
 800bf36:	701a      	strb	r2, [r3, #0]
		//dot
		result[result[0] - 3] = 0x38;
 800bf38:	683b      	ldr	r3, [r7, #0]
 800bf3a:	781b      	ldrb	r3, [r3, #0]
 800bf3c:	3b03      	subs	r3, #3
 800bf3e:	683a      	ldr	r2, [r7, #0]
 800bf40:	18d3      	adds	r3, r2, r3
 800bf42:	2238      	movs	r2, #56	@ 0x38
 800bf44:	701a      	strb	r2, [r3, #0]
		result[result[0] - 2] = 0x38;
 800bf46:	683b      	ldr	r3, [r7, #0]
 800bf48:	781b      	ldrb	r3, [r3, #0]
 800bf4a:	3b02      	subs	r3, #2
 800bf4c:	683a      	ldr	r2, [r7, #0]
 800bf4e:	18d3      	adds	r3, r2, r3
 800bf50:	2238      	movs	r2, #56	@ 0x38
 800bf52:	701a      	strb	r2, [r3, #0]
		result[result[0] - 1] = 0x4A;
 800bf54:	683b      	ldr	r3, [r7, #0]
 800bf56:	781b      	ldrb	r3, [r3, #0]
 800bf58:	3b01      	subs	r3, #1
 800bf5a:	683a      	ldr	r2, [r7, #0]
 800bf5c:	18d3      	adds	r3, r2, r3
 800bf5e:	224a      	movs	r2, #74	@ 0x4a
 800bf60:	701a      	strb	r2, [r3, #0]
		result[result[0]] = data[5];
 800bf62:	683b      	ldr	r3, [r7, #0]
 800bf64:	781b      	ldrb	r3, [r3, #0]
 800bf66:	001a      	movs	r2, r3
 800bf68:	683b      	ldr	r3, [r7, #0]
 800bf6a:	189b      	adds	r3, r3, r2
 800bf6c:	687a      	ldr	r2, [r7, #4]
 800bf6e:	7952      	ldrb	r2, [r2, #5]
 800bf70:	701a      	strb	r2, [r3, #0]
	}
	//yuan
	result[0] += 2;
 800bf72:	683b      	ldr	r3, [r7, #0]
 800bf74:	781b      	ldrb	r3, [r3, #0]
 800bf76:	3302      	adds	r3, #2
 800bf78:	b2da      	uxtb	r2, r3
 800bf7a:	683b      	ldr	r3, [r7, #0]
 800bf7c:	701a      	strb	r2, [r3, #0]
	result[result[0] - 1] = 0x38;
 800bf7e:	683b      	ldr	r3, [r7, #0]
 800bf80:	781b      	ldrb	r3, [r3, #0]
 800bf82:	3b01      	subs	r3, #1
 800bf84:	683a      	ldr	r2, [r7, #0]
 800bf86:	18d3      	adds	r3, r2, r3
 800bf88:	2238      	movs	r2, #56	@ 0x38
 800bf8a:	701a      	strb	r2, [r3, #0]
	result[result[0]] = 0x39;
 800bf8c:	683b      	ldr	r3, [r7, #0]
 800bf8e:	781b      	ldrb	r3, [r3, #0]
 800bf90:	001a      	movs	r2, r3
 800bf92:	683b      	ldr	r3, [r7, #0]
 800bf94:	189b      	adds	r3, r3, r2
 800bf96:	2239      	movs	r2, #57	@ 0x39
 800bf98:	701a      	strb	r2, [r3, #0]

	if (data[0] != 0)
 800bf9a:	687b      	ldr	r3, [r7, #4]
 800bf9c:	781b      	ldrb	r3, [r3, #0]
 800bf9e:	2b00      	cmp	r3, #0
 800bfa0:	d100      	bne.n	800bfa4 <cal_vcn+0x308>
 800bfa2:	e11f      	b.n	800c1e4 <cal_vcn+0x548>
	{
		//surcharge
		result[0] += 2;
 800bfa4:	683b      	ldr	r3, [r7, #0]
 800bfa6:	781b      	ldrb	r3, [r3, #0]
 800bfa8:	3302      	adds	r3, #2
 800bfaa:	b2da      	uxtb	r2, r3
 800bfac:	683b      	ldr	r3, [r7, #0]
 800bfae:	701a      	strb	r2, [r3, #0]
		result[result[0] - 1] = 0x39;
 800bfb0:	683b      	ldr	r3, [r7, #0]
 800bfb2:	781b      	ldrb	r3, [r3, #0]
 800bfb4:	3b01      	subs	r3, #1
 800bfb6:	683a      	ldr	r2, [r7, #0]
 800bfb8:	18d3      	adds	r3, r2, r3
 800bfba:	2239      	movs	r2, #57	@ 0x39
 800bfbc:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x37;
 800bfbe:	683b      	ldr	r3, [r7, #0]
 800bfc0:	781b      	ldrb	r3, [r3, #0]
 800bfc2:	001a      	movs	r2, r3
 800bfc4:	683b      	ldr	r3, [r7, #0]
 800bfc6:	189b      	adds	r3, r3, r2
 800bfc8:	2237      	movs	r2, #55	@ 0x37
 800bfca:	701a      	strb	r2, [r3, #0]
		if (data[6] != 0x30)
 800bfcc:	687b      	ldr	r3, [r7, #4]
 800bfce:	3306      	adds	r3, #6
 800bfd0:	781b      	ldrb	r3, [r3, #0]
 800bfd2:	2b30      	cmp	r3, #48	@ 0x30
 800bfd4:	d074      	beq.n	800c0c0 <cal_vcn+0x424>
		{
			result[0] += 2;
 800bfd6:	683b      	ldr	r3, [r7, #0]
 800bfd8:	781b      	ldrb	r3, [r3, #0]
 800bfda:	3302      	adds	r3, #2
 800bfdc:	b2da      	uxtb	r2, r3
 800bfde:	683b      	ldr	r3, [r7, #0]
 800bfe0:	701a      	strb	r2, [r3, #0]
			//x00 - (100 ~ 900)
			result[result[0] - 1] = 0x48;
 800bfe2:	683b      	ldr	r3, [r7, #0]
 800bfe4:	781b      	ldrb	r3, [r3, #0]
 800bfe6:	3b01      	subs	r3, #1
 800bfe8:	683a      	ldr	r2, [r7, #0]
 800bfea:	18d3      	adds	r3, r2, r3
 800bfec:	2248      	movs	r2, #72	@ 0x48
 800bfee:	701a      	strb	r2, [r3, #0]
			result[result[0]] = data[6];
 800bff0:	683b      	ldr	r3, [r7, #0]
 800bff2:	781b      	ldrb	r3, [r3, #0]
 800bff4:	001a      	movs	r2, r3
 800bff6:	683b      	ldr	r3, [r7, #0]
 800bff8:	189b      	adds	r3, r3, r2
 800bffa:	687a      	ldr	r2, [r7, #4]
 800bffc:	7992      	ldrb	r2, [r2, #6]
 800bffe:	701a      	strb	r2, [r3, #0]
			if (data[7] == 0x30)
 800c000:	687b      	ldr	r3, [r7, #4]
 800c002:	3307      	adds	r3, #7
 800c004:	781b      	ldrb	r3, [r3, #0]
 800c006:	2b30      	cmp	r3, #48	@ 0x30
 800c008:	d129      	bne.n	800c05e <cal_vcn+0x3c2>
			{
				if (data[8] != 0x30)
 800c00a:	687b      	ldr	r3, [r7, #4]
 800c00c:	3308      	adds	r3, #8
 800c00e:	781b      	ldrb	r3, [r3, #0]
 800c010:	2b30      	cmp	r3, #48	@ 0x30
 800c012:	d100      	bne.n	800c016 <cal_vcn+0x37a>
 800c014:	e0d2      	b.n	800c1bc <cal_vcn+0x520>
				{
					result[0] += 4;
 800c016:	683b      	ldr	r3, [r7, #0]
 800c018:	781b      	ldrb	r3, [r3, #0]
 800c01a:	3304      	adds	r3, #4
 800c01c:	b2da      	uxtb	r2, r3
 800c01e:	683b      	ldr	r3, [r7, #0]
 800c020:	701a      	strb	r2, [r3, #0]
					//0x - (101 ~ 909)
					result[result[0] - 3] = 0x4A;
 800c022:	683b      	ldr	r3, [r7, #0]
 800c024:	781b      	ldrb	r3, [r3, #0]
 800c026:	3b03      	subs	r3, #3
 800c028:	683a      	ldr	r2, [r7, #0]
 800c02a:	18d3      	adds	r3, r2, r3
 800c02c:	224a      	movs	r2, #74	@ 0x4a
 800c02e:	701a      	strb	r2, [r3, #0]
					result[result[0] - 2] = 0x30;
 800c030:	683b      	ldr	r3, [r7, #0]
 800c032:	781b      	ldrb	r3, [r3, #0]
 800c034:	3b02      	subs	r3, #2
 800c036:	683a      	ldr	r2, [r7, #0]
 800c038:	18d3      	adds	r3, r2, r3
 800c03a:	2230      	movs	r2, #48	@ 0x30
 800c03c:	701a      	strb	r2, [r3, #0]
					result[result[0] - 1] = 0x4A;
 800c03e:	683b      	ldr	r3, [r7, #0]
 800c040:	781b      	ldrb	r3, [r3, #0]
 800c042:	3b01      	subs	r3, #1
 800c044:	683a      	ldr	r2, [r7, #0]
 800c046:	18d3      	adds	r3, r2, r3
 800c048:	224a      	movs	r2, #74	@ 0x4a
 800c04a:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800c04c:	683b      	ldr	r3, [r7, #0]
 800c04e:	781b      	ldrb	r3, [r3, #0]
 800c050:	001a      	movs	r2, r3
 800c052:	683b      	ldr	r3, [r7, #0]
 800c054:	189b      	adds	r3, r3, r2
 800c056:	687a      	ldr	r2, [r7, #4]
 800c058:	7a12      	ldrb	r2, [r2, #8]
 800c05a:	701a      	strb	r2, [r3, #0]
 800c05c:	e0ae      	b.n	800c1bc <cal_vcn+0x520>
				}
			}
			else
			{
				result[0] += 2;
 800c05e:	683b      	ldr	r3, [r7, #0]
 800c060:	781b      	ldrb	r3, [r3, #0]
 800c062:	3302      	adds	r3, #2
 800c064:	b2da      	uxtb	r2, r3
 800c066:	683b      	ldr	r3, [r7, #0]
 800c068:	701a      	strb	r2, [r3, #0]
				//x0 - (110 ~ 990)
				result[result[0] - 1] = 0x47;
 800c06a:	683b      	ldr	r3, [r7, #0]
 800c06c:	781b      	ldrb	r3, [r3, #0]
 800c06e:	3b01      	subs	r3, #1
 800c070:	683a      	ldr	r2, [r7, #0]
 800c072:	18d3      	adds	r3, r2, r3
 800c074:	2247      	movs	r2, #71	@ 0x47
 800c076:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[7];
 800c078:	683b      	ldr	r3, [r7, #0]
 800c07a:	781b      	ldrb	r3, [r3, #0]
 800c07c:	001a      	movs	r2, r3
 800c07e:	683b      	ldr	r3, [r7, #0]
 800c080:	189b      	adds	r3, r3, r2
 800c082:	687a      	ldr	r2, [r7, #4]
 800c084:	79d2      	ldrb	r2, [r2, #7]
 800c086:	701a      	strb	r2, [r3, #0]
				if (data[8] != 0x30)
 800c088:	687b      	ldr	r3, [r7, #4]
 800c08a:	3308      	adds	r3, #8
 800c08c:	781b      	ldrb	r3, [r3, #0]
 800c08e:	2b30      	cmp	r3, #48	@ 0x30
 800c090:	d100      	bne.n	800c094 <cal_vcn+0x3f8>
 800c092:	e093      	b.n	800c1bc <cal_vcn+0x520>
				{
					result[0] += 2;
 800c094:	683b      	ldr	r3, [r7, #0]
 800c096:	781b      	ldrb	r3, [r3, #0]
 800c098:	3302      	adds	r3, #2
 800c09a:	b2da      	uxtb	r2, r3
 800c09c:	683b      	ldr	r3, [r7, #0]
 800c09e:	701a      	strb	r2, [r3, #0]
					//x - (111 ~ 999)
					result[result[0] - 1] = 0x4A;
 800c0a0:	683b      	ldr	r3, [r7, #0]
 800c0a2:	781b      	ldrb	r3, [r3, #0]
 800c0a4:	3b01      	subs	r3, #1
 800c0a6:	683a      	ldr	r2, [r7, #0]
 800c0a8:	18d3      	adds	r3, r2, r3
 800c0aa:	224a      	movs	r2, #74	@ 0x4a
 800c0ac:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800c0ae:	683b      	ldr	r3, [r7, #0]
 800c0b0:	781b      	ldrb	r3, [r3, #0]
 800c0b2:	001a      	movs	r2, r3
 800c0b4:	683b      	ldr	r3, [r7, #0]
 800c0b6:	189b      	adds	r3, r3, r2
 800c0b8:	687a      	ldr	r2, [r7, #4]
 800c0ba:	7a12      	ldrb	r2, [r2, #8]
 800c0bc:	701a      	strb	r2, [r3, #0]
 800c0be:	e07d      	b.n	800c1bc <cal_vcn+0x520>
				}
			}
		}
		else
		{
			if (data[7] == 0x31)
 800c0c0:	687b      	ldr	r3, [r7, #4]
 800c0c2:	3307      	adds	r3, #7
 800c0c4:	781b      	ldrb	r3, [r3, #0]
 800c0c6:	2b31      	cmp	r3, #49	@ 0x31
 800c0c8:	d12e      	bne.n	800c128 <cal_vcn+0x48c>
			{
				result[0] += 2;
 800c0ca:	683b      	ldr	r3, [r7, #0]
 800c0cc:	781b      	ldrb	r3, [r3, #0]
 800c0ce:	3302      	adds	r3, #2
 800c0d0:	b2da      	uxtb	r2, r3
 800c0d2:	683b      	ldr	r3, [r7, #0]
 800c0d4:	701a      	strb	r2, [r3, #0]
				//10 - (10)
				result[result[0] - 1] = 0x38;
 800c0d6:	683b      	ldr	r3, [r7, #0]
 800c0d8:	781b      	ldrb	r3, [r3, #0]
 800c0da:	3b01      	subs	r3, #1
 800c0dc:	683a      	ldr	r2, [r7, #0]
 800c0de:	18d3      	adds	r3, r2, r3
 800c0e0:	2238      	movs	r2, #56	@ 0x38
 800c0e2:	701a      	strb	r2, [r3, #0]
				result[result[0]] = 0x35;
 800c0e4:	683b      	ldr	r3, [r7, #0]
 800c0e6:	781b      	ldrb	r3, [r3, #0]
 800c0e8:	001a      	movs	r2, r3
 800c0ea:	683b      	ldr	r3, [r7, #0]
 800c0ec:	189b      	adds	r3, r3, r2
 800c0ee:	2235      	movs	r2, #53	@ 0x35
 800c0f0:	701a      	strb	r2, [r3, #0]
				if (data[8] != 0x30)
 800c0f2:	687b      	ldr	r3, [r7, #4]
 800c0f4:	3308      	adds	r3, #8
 800c0f6:	781b      	ldrb	r3, [r3, #0]
 800c0f8:	2b30      	cmp	r3, #48	@ 0x30
 800c0fa:	d05f      	beq.n	800c1bc <cal_vcn+0x520>
				{
					result[0] += 2;
 800c0fc:	683b      	ldr	r3, [r7, #0]
 800c0fe:	781b      	ldrb	r3, [r3, #0]
 800c100:	3302      	adds	r3, #2
 800c102:	b2da      	uxtb	r2, r3
 800c104:	683b      	ldr	r3, [r7, #0]
 800c106:	701a      	strb	r2, [r3, #0]
					//x - (11 ~ 19)
					result[result[0] - 1] = 0x4A;
 800c108:	683b      	ldr	r3, [r7, #0]
 800c10a:	781b      	ldrb	r3, [r3, #0]
 800c10c:	3b01      	subs	r3, #1
 800c10e:	683a      	ldr	r2, [r7, #0]
 800c110:	18d3      	adds	r3, r2, r3
 800c112:	224a      	movs	r2, #74	@ 0x4a
 800c114:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800c116:	683b      	ldr	r3, [r7, #0]
 800c118:	781b      	ldrb	r3, [r3, #0]
 800c11a:	001a      	movs	r2, r3
 800c11c:	683b      	ldr	r3, [r7, #0]
 800c11e:	189b      	adds	r3, r3, r2
 800c120:	687a      	ldr	r2, [r7, #4]
 800c122:	7a12      	ldrb	r2, [r2, #8]
 800c124:	701a      	strb	r2, [r3, #0]
 800c126:	e049      	b.n	800c1bc <cal_vcn+0x520>
				}
			}
			else if (data[7] != 0x30)
 800c128:	687b      	ldr	r3, [r7, #4]
 800c12a:	3307      	adds	r3, #7
 800c12c:	781b      	ldrb	r3, [r3, #0]
 800c12e:	2b30      	cmp	r3, #48	@ 0x30
 800c130:	d02f      	beq.n	800c192 <cal_vcn+0x4f6>
			{
				result[0] += 2;
 800c132:	683b      	ldr	r3, [r7, #0]
 800c134:	781b      	ldrb	r3, [r3, #0]
 800c136:	3302      	adds	r3, #2
 800c138:	b2da      	uxtb	r2, r3
 800c13a:	683b      	ldr	r3, [r7, #0]
 800c13c:	701a      	strb	r2, [r3, #0]
				//x0 - (20 ~ 90)
				result[result[0] - 1] = 0x47;
 800c13e:	683b      	ldr	r3, [r7, #0]
 800c140:	781b      	ldrb	r3, [r3, #0]
 800c142:	3b01      	subs	r3, #1
 800c144:	683a      	ldr	r2, [r7, #0]
 800c146:	18d3      	adds	r3, r2, r3
 800c148:	2247      	movs	r2, #71	@ 0x47
 800c14a:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[7];
 800c14c:	683b      	ldr	r3, [r7, #0]
 800c14e:	781b      	ldrb	r3, [r3, #0]
 800c150:	001a      	movs	r2, r3
 800c152:	683b      	ldr	r3, [r7, #0]
 800c154:	189b      	adds	r3, r3, r2
 800c156:	687a      	ldr	r2, [r7, #4]
 800c158:	79d2      	ldrb	r2, [r2, #7]
 800c15a:	701a      	strb	r2, [r3, #0]
				if (data[8] != 0x30)
 800c15c:	687b      	ldr	r3, [r7, #4]
 800c15e:	3308      	adds	r3, #8
 800c160:	781b      	ldrb	r3, [r3, #0]
 800c162:	2b30      	cmp	r3, #48	@ 0x30
 800c164:	d02a      	beq.n	800c1bc <cal_vcn+0x520>
				{
					result[0] += 2;
 800c166:	683b      	ldr	r3, [r7, #0]
 800c168:	781b      	ldrb	r3, [r3, #0]
 800c16a:	3302      	adds	r3, #2
 800c16c:	b2da      	uxtb	r2, r3
 800c16e:	683b      	ldr	r3, [r7, #0]
 800c170:	701a      	strb	r2, [r3, #0]
					//x - (21 ~ 99)
					result[result[0] - 1] = 0x4A;
 800c172:	683b      	ldr	r3, [r7, #0]
 800c174:	781b      	ldrb	r3, [r3, #0]
 800c176:	3b01      	subs	r3, #1
 800c178:	683a      	ldr	r2, [r7, #0]
 800c17a:	18d3      	adds	r3, r2, r3
 800c17c:	224a      	movs	r2, #74	@ 0x4a
 800c17e:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800c180:	683b      	ldr	r3, [r7, #0]
 800c182:	781b      	ldrb	r3, [r3, #0]
 800c184:	001a      	movs	r2, r3
 800c186:	683b      	ldr	r3, [r7, #0]
 800c188:	189b      	adds	r3, r3, r2
 800c18a:	687a      	ldr	r2, [r7, #4]
 800c18c:	7a12      	ldrb	r2, [r2, #8]
 800c18e:	701a      	strb	r2, [r3, #0]
 800c190:	e014      	b.n	800c1bc <cal_vcn+0x520>
				}
			}
			else
			{
				result[0] += 2;
 800c192:	683b      	ldr	r3, [r7, #0]
 800c194:	781b      	ldrb	r3, [r3, #0]
 800c196:	3302      	adds	r3, #2
 800c198:	b2da      	uxtb	r2, r3
 800c19a:	683b      	ldr	r3, [r7, #0]
 800c19c:	701a      	strb	r2, [r3, #0]
				//x - (1 ~ 9)
				result[result[0] - 1] = 0x4A;
 800c19e:	683b      	ldr	r3, [r7, #0]
 800c1a0:	781b      	ldrb	r3, [r3, #0]
 800c1a2:	3b01      	subs	r3, #1
 800c1a4:	683a      	ldr	r2, [r7, #0]
 800c1a6:	18d3      	adds	r3, r2, r3
 800c1a8:	224a      	movs	r2, #74	@ 0x4a
 800c1aa:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[8];
 800c1ac:	683b      	ldr	r3, [r7, #0]
 800c1ae:	781b      	ldrb	r3, [r3, #0]
 800c1b0:	001a      	movs	r2, r3
 800c1b2:	683b      	ldr	r3, [r7, #0]
 800c1b4:	189b      	adds	r3, r3, r2
 800c1b6:	687a      	ldr	r2, [r7, #4]
 800c1b8:	7a12      	ldrb	r2, [r2, #8]
 800c1ba:	701a      	strb	r2, [r3, #0]
			}
		}
		//yuan
		result[0] += 2;
 800c1bc:	683b      	ldr	r3, [r7, #0]
 800c1be:	781b      	ldrb	r3, [r3, #0]
 800c1c0:	3302      	adds	r3, #2
 800c1c2:	b2da      	uxtb	r2, r3
 800c1c4:	683b      	ldr	r3, [r7, #0]
 800c1c6:	701a      	strb	r2, [r3, #0]
		result[result[0] - 1] = 0x38;
 800c1c8:	683b      	ldr	r3, [r7, #0]
 800c1ca:	781b      	ldrb	r3, [r3, #0]
 800c1cc:	3b01      	subs	r3, #1
 800c1ce:	683a      	ldr	r2, [r7, #0]
 800c1d0:	18d3      	adds	r3, r2, r3
 800c1d2:	2238      	movs	r2, #56	@ 0x38
 800c1d4:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x39;
 800c1d6:	683b      	ldr	r3, [r7, #0]
 800c1d8:	781b      	ldrb	r3, [r3, #0]
 800c1da:	001a      	movs	r2, r3
 800c1dc:	683b      	ldr	r3, [r7, #0]
 800c1de:	189b      	adds	r3, r3, r2
 800c1e0:	2239      	movs	r2, #57	@ 0x39
 800c1e2:	701a      	strb	r2, [r3, #0]
	}
	//thx, bye
	result[0] += 2;
 800c1e4:	683b      	ldr	r3, [r7, #0]
 800c1e6:	781b      	ldrb	r3, [r3, #0]
 800c1e8:	3302      	adds	r3, #2
 800c1ea:	b2da      	uxtb	r2, r3
 800c1ec:	683b      	ldr	r3, [r7, #0]
 800c1ee:	701a      	strb	r2, [r3, #0]
	result[result[0] - 1] = 0x39;
 800c1f0:	683b      	ldr	r3, [r7, #0]
 800c1f2:	781b      	ldrb	r3, [r3, #0]
 800c1f4:	3b01      	subs	r3, #1
 800c1f6:	683a      	ldr	r2, [r7, #0]
 800c1f8:	18d3      	adds	r3, r2, r3
 800c1fa:	2239      	movs	r2, #57	@ 0x39
 800c1fc:	701a      	strb	r2, [r3, #0]
	result[result[0]] = 0x36;
 800c1fe:	683b      	ldr	r3, [r7, #0]
 800c200:	781b      	ldrb	r3, [r3, #0]
 800c202:	001a      	movs	r2, r3
 800c204:	683b      	ldr	r3, [r7, #0]
 800c206:	189b      	adds	r3, r3, r2
 800c208:	2236      	movs	r2, #54	@ 0x36
 800c20a:	701a      	strb	r2, [r3, #0]
}
 800c20c:	46c0      	nop			@ (mov r8, r8)
 800c20e:	46bd      	mov	sp, r7
 800c210:	b002      	add	sp, #8
 800c212:	bd80      	pop	{r7, pc}

0800c214 <cal_ven>:

void cal_ven(unsigned char data[], unsigned char result[])
{
 800c214:	b580      	push	{r7, lr}
 800c216:	b082      	sub	sp, #8
 800c218:	af00      	add	r7, sp, #0
 800c21a:	6078      	str	r0, [r7, #4]
 800c21c:	6039      	str	r1, [r7, #0]
	if (data[1] != 0x30)
 800c21e:	687b      	ldr	r3, [r7, #4]
 800c220:	3301      	adds	r3, #1
 800c222:	781b      	ldrb	r3, [r3, #0]
 800c224:	2b30      	cmp	r3, #48	@ 0x30
 800c226:	d100      	bne.n	800c22a <cal_ven+0x16>
 800c228:	e0cc      	b.n	800c3c4 <cal_ven+0x1b0>
	{
		result[0] += 2;
 800c22a:	683b      	ldr	r3, [r7, #0]
 800c22c:	781b      	ldrb	r3, [r3, #0]
 800c22e:	3302      	adds	r3, #2
 800c230:	b2da      	uxtb	r2, r3
 800c232:	683b      	ldr	r3, [r7, #0]
 800c234:	701a      	strb	r2, [r3, #0]
		//x thousand - (1000 ~ 9000)
		result[1] = 0x42;
 800c236:	683b      	ldr	r3, [r7, #0]
 800c238:	3301      	adds	r3, #1
 800c23a:	2242      	movs	r2, #66	@ 0x42
 800c23c:	701a      	strb	r2, [r3, #0]
		result[2] = data[1];
 800c23e:	683b      	ldr	r3, [r7, #0]
 800c240:	3302      	adds	r3, #2
 800c242:	687a      	ldr	r2, [r7, #4]
 800c244:	7852      	ldrb	r2, [r2, #1]
 800c246:	701a      	strb	r2, [r3, #0]
		if (data[2] == 0x30)
 800c248:	687b      	ldr	r3, [r7, #4]
 800c24a:	3302      	adds	r3, #2
 800c24c:	781b      	ldrb	r3, [r3, #0]
 800c24e:	2b30      	cmp	r3, #48	@ 0x30
 800c250:	d154      	bne.n	800c2fc <cal_ven+0xe8>
		{
			if (data[3] == 0x30)
 800c252:	687b      	ldr	r3, [r7, #4]
 800c254:	3303      	adds	r3, #3
 800c256:	781b      	ldrb	r3, [r3, #0]
 800c258:	2b30      	cmp	r3, #48	@ 0x30
 800c25a:	d115      	bne.n	800c288 <cal_ven+0x74>
			{
				if (data[4] != 0x30)
 800c25c:	687b      	ldr	r3, [r7, #4]
 800c25e:	3304      	adds	r3, #4
 800c260:	781b      	ldrb	r3, [r3, #0]
 800c262:	2b30      	cmp	r3, #48	@ 0x30
 800c264:	d100      	bne.n	800c268 <cal_ven+0x54>
 800c266:	e137      	b.n	800c4d8 <cal_ven+0x2c4>
				{
					result[0] += 2;
 800c268:	683b      	ldr	r3, [r7, #0]
 800c26a:	781b      	ldrb	r3, [r3, #0]
 800c26c:	3302      	adds	r3, #2
 800c26e:	b2da      	uxtb	r2, r3
 800c270:	683b      	ldr	r3, [r7, #0]
 800c272:	701a      	strb	r2, [r3, #0]
					//x - (1001 ~ 9009)
					result[3] = 0x30;
 800c274:	683b      	ldr	r3, [r7, #0]
 800c276:	3303      	adds	r3, #3
 800c278:	2230      	movs	r2, #48	@ 0x30
 800c27a:	701a      	strb	r2, [r3, #0]
					result[4] = data[4];
 800c27c:	683b      	ldr	r3, [r7, #0]
 800c27e:	3304      	adds	r3, #4
 800c280:	687a      	ldr	r2, [r7, #4]
 800c282:	7912      	ldrb	r2, [r2, #4]
 800c284:	701a      	strb	r2, [r3, #0]
 800c286:	e127      	b.n	800c4d8 <cal_ven+0x2c4>
				}
			}
			else if (data[3] == 0x31)
 800c288:	687b      	ldr	r3, [r7, #4]
 800c28a:	3303      	adds	r3, #3
 800c28c:	781b      	ldrb	r3, [r3, #0]
 800c28e:	2b31      	cmp	r3, #49	@ 0x31
 800c290:	d10f      	bne.n	800c2b2 <cal_ven+0x9e>
			{
				result[0] += 2;
 800c292:	683b      	ldr	r3, [r7, #0]
 800c294:	781b      	ldrb	r3, [r3, #0]
 800c296:	3302      	adds	r3, #2
 800c298:	b2da      	uxtb	r2, r3
 800c29a:	683b      	ldr	r3, [r7, #0]
 800c29c:	701a      	strb	r2, [r3, #0]
				//ten, eleven, ..., nineteen (x thousand ten/eleven/.../nineteen)
				result[3] = 0x31;
 800c29e:	683b      	ldr	r3, [r7, #0]
 800c2a0:	3303      	adds	r3, #3
 800c2a2:	2231      	movs	r2, #49	@ 0x31
 800c2a4:	701a      	strb	r2, [r3, #0]
				result[4] = data[4];
 800c2a6:	683b      	ldr	r3, [r7, #0]
 800c2a8:	3304      	adds	r3, #4
 800c2aa:	687a      	ldr	r2, [r7, #4]
 800c2ac:	7912      	ldrb	r2, [r2, #4]
 800c2ae:	701a      	strb	r2, [r3, #0]
 800c2b0:	e112      	b.n	800c4d8 <cal_ven+0x2c4>
			}
			else
			{
				result[0] += 2;
 800c2b2:	683b      	ldr	r3, [r7, #0]
 800c2b4:	781b      	ldrb	r3, [r3, #0]
 800c2b6:	3302      	adds	r3, #2
 800c2b8:	b2da      	uxtb	r2, r3
 800c2ba:	683b      	ldr	r3, [r7, #0]
 800c2bc:	701a      	strb	r2, [r3, #0]
				//twenty, ..., ninety (x thousand twenty/.../ninety)
				result[3] = 0x32;
 800c2be:	683b      	ldr	r3, [r7, #0]
 800c2c0:	3303      	adds	r3, #3
 800c2c2:	2232      	movs	r2, #50	@ 0x32
 800c2c4:	701a      	strb	r2, [r3, #0]
				result[4] = data[3];
 800c2c6:	683b      	ldr	r3, [r7, #0]
 800c2c8:	3304      	adds	r3, #4
 800c2ca:	687a      	ldr	r2, [r7, #4]
 800c2cc:	78d2      	ldrb	r2, [r2, #3]
 800c2ce:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800c2d0:	687b      	ldr	r3, [r7, #4]
 800c2d2:	3304      	adds	r3, #4
 800c2d4:	781b      	ldrb	r3, [r3, #0]
 800c2d6:	2b30      	cmp	r3, #48	@ 0x30
 800c2d8:	d100      	bne.n	800c2dc <cal_ven+0xc8>
 800c2da:	e0fd      	b.n	800c4d8 <cal_ven+0x2c4>
				{
					result[0] += 2;
 800c2dc:	683b      	ldr	r3, [r7, #0]
 800c2de:	781b      	ldrb	r3, [r3, #0]
 800c2e0:	3302      	adds	r3, #2
 800c2e2:	b2da      	uxtb	r2, r3
 800c2e4:	683b      	ldr	r3, [r7, #0]
 800c2e6:	701a      	strb	r2, [r3, #0]
					//x - (x thousand twenty/.../ninety x)
					result[5] = 0x30;
 800c2e8:	683b      	ldr	r3, [r7, #0]
 800c2ea:	3305      	adds	r3, #5
 800c2ec:	2230      	movs	r2, #48	@ 0x30
 800c2ee:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800c2f0:	683b      	ldr	r3, [r7, #0]
 800c2f2:	3306      	adds	r3, #6
 800c2f4:	687a      	ldr	r2, [r7, #4]
 800c2f6:	7912      	ldrb	r2, [r2, #4]
 800c2f8:	701a      	strb	r2, [r3, #0]
 800c2fa:	e0ed      	b.n	800c4d8 <cal_ven+0x2c4>
				}
			}
		}
		else
		{
			result[0] += 2;
 800c2fc:	683b      	ldr	r3, [r7, #0]
 800c2fe:	781b      	ldrb	r3, [r3, #0]
 800c300:	3302      	adds	r3, #2
 800c302:	b2da      	uxtb	r2, r3
 800c304:	683b      	ldr	r3, [r7, #0]
 800c306:	701a      	strb	r2, [r3, #0]
			//x hundred (x thousand x hundred)
			result[3] = 0x41;
 800c308:	683b      	ldr	r3, [r7, #0]
 800c30a:	3303      	adds	r3, #3
 800c30c:	2241      	movs	r2, #65	@ 0x41
 800c30e:	701a      	strb	r2, [r3, #0]
			result[4] = data[2];
 800c310:	683b      	ldr	r3, [r7, #0]
 800c312:	3304      	adds	r3, #4
 800c314:	687a      	ldr	r2, [r7, #4]
 800c316:	7892      	ldrb	r2, [r2, #2]
 800c318:	701a      	strb	r2, [r3, #0]
			if (data[3] == 0x30)
 800c31a:	687b      	ldr	r3, [r7, #4]
 800c31c:	3303      	adds	r3, #3
 800c31e:	781b      	ldrb	r3, [r3, #0]
 800c320:	2b30      	cmp	r3, #48	@ 0x30
 800c322:	d115      	bne.n	800c350 <cal_ven+0x13c>
			{
				if (data[4] != 0x30)
 800c324:	687b      	ldr	r3, [r7, #4]
 800c326:	3304      	adds	r3, #4
 800c328:	781b      	ldrb	r3, [r3, #0]
 800c32a:	2b30      	cmp	r3, #48	@ 0x30
 800c32c:	d100      	bne.n	800c330 <cal_ven+0x11c>
 800c32e:	e0d3      	b.n	800c4d8 <cal_ven+0x2c4>
				{
					result[0] += 2;
 800c330:	683b      	ldr	r3, [r7, #0]
 800c332:	781b      	ldrb	r3, [r3, #0]
 800c334:	3302      	adds	r3, #2
 800c336:	b2da      	uxtb	r2, r3
 800c338:	683b      	ldr	r3, [r7, #0]
 800c33a:	701a      	strb	r2, [r3, #0]
					//x - (x thousand x hundred x)
					result[5] = 0x30;
 800c33c:	683b      	ldr	r3, [r7, #0]
 800c33e:	3305      	adds	r3, #5
 800c340:	2230      	movs	r2, #48	@ 0x30
 800c342:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800c344:	683b      	ldr	r3, [r7, #0]
 800c346:	3306      	adds	r3, #6
 800c348:	687a      	ldr	r2, [r7, #4]
 800c34a:	7912      	ldrb	r2, [r2, #4]
 800c34c:	701a      	strb	r2, [r3, #0]
 800c34e:	e0c3      	b.n	800c4d8 <cal_ven+0x2c4>
				}
			}
			else if (data[3] == 0x31)
 800c350:	687b      	ldr	r3, [r7, #4]
 800c352:	3303      	adds	r3, #3
 800c354:	781b      	ldrb	r3, [r3, #0]
 800c356:	2b31      	cmp	r3, #49	@ 0x31
 800c358:	d10f      	bne.n	800c37a <cal_ven+0x166>
			{
				result[0] += 2;
 800c35a:	683b      	ldr	r3, [r7, #0]
 800c35c:	781b      	ldrb	r3, [r3, #0]
 800c35e:	3302      	adds	r3, #2
 800c360:	b2da      	uxtb	r2, r3
 800c362:	683b      	ldr	r3, [r7, #0]
 800c364:	701a      	strb	r2, [r3, #0]
				//ten, eleven, ..., nineteen (x thousand x hundred ten/eleven/.../nineteen)
				result[5] = 0x31;
 800c366:	683b      	ldr	r3, [r7, #0]
 800c368:	3305      	adds	r3, #5
 800c36a:	2231      	movs	r2, #49	@ 0x31
 800c36c:	701a      	strb	r2, [r3, #0]
				result[6] = data[4];
 800c36e:	683b      	ldr	r3, [r7, #0]
 800c370:	3306      	adds	r3, #6
 800c372:	687a      	ldr	r2, [r7, #4]
 800c374:	7912      	ldrb	r2, [r2, #4]
 800c376:	701a      	strb	r2, [r3, #0]
 800c378:	e0ae      	b.n	800c4d8 <cal_ven+0x2c4>
			}
			else
			{
				result[0] += 2;
 800c37a:	683b      	ldr	r3, [r7, #0]
 800c37c:	781b      	ldrb	r3, [r3, #0]
 800c37e:	3302      	adds	r3, #2
 800c380:	b2da      	uxtb	r2, r3
 800c382:	683b      	ldr	r3, [r7, #0]
 800c384:	701a      	strb	r2, [r3, #0]
				//twenty, ..., ninety (x thousand x hundred twenty/.../ninety)
				result[5] = 0x32;
 800c386:	683b      	ldr	r3, [r7, #0]
 800c388:	3305      	adds	r3, #5
 800c38a:	2232      	movs	r2, #50	@ 0x32
 800c38c:	701a      	strb	r2, [r3, #0]
				result[6] = data[3];
 800c38e:	683b      	ldr	r3, [r7, #0]
 800c390:	3306      	adds	r3, #6
 800c392:	687a      	ldr	r2, [r7, #4]
 800c394:	78d2      	ldrb	r2, [r2, #3]
 800c396:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800c398:	687b      	ldr	r3, [r7, #4]
 800c39a:	3304      	adds	r3, #4
 800c39c:	781b      	ldrb	r3, [r3, #0]
 800c39e:	2b30      	cmp	r3, #48	@ 0x30
 800c3a0:	d100      	bne.n	800c3a4 <cal_ven+0x190>
 800c3a2:	e099      	b.n	800c4d8 <cal_ven+0x2c4>
				{
					result[0] += 2;
 800c3a4:	683b      	ldr	r3, [r7, #0]
 800c3a6:	781b      	ldrb	r3, [r3, #0]
 800c3a8:	3302      	adds	r3, #2
 800c3aa:	b2da      	uxtb	r2, r3
 800c3ac:	683b      	ldr	r3, [r7, #0]
 800c3ae:	701a      	strb	r2, [r3, #0]
					//x (x thousand x hundred twenty/.../ninety x)
					result[7] = 0x30;
 800c3b0:	683b      	ldr	r3, [r7, #0]
 800c3b2:	3307      	adds	r3, #7
 800c3b4:	2230      	movs	r2, #48	@ 0x30
 800c3b6:	701a      	strb	r2, [r3, #0]
					result[8] = data[4];
 800c3b8:	683b      	ldr	r3, [r7, #0]
 800c3ba:	3308      	adds	r3, #8
 800c3bc:	687a      	ldr	r2, [r7, #4]
 800c3be:	7912      	ldrb	r2, [r2, #4]
 800c3c0:	701a      	strb	r2, [r3, #0]
 800c3c2:	e089      	b.n	800c4d8 <cal_ven+0x2c4>
			}
		}
	}
	else
	{
		if (data[2] != 0x30)
 800c3c4:	687b      	ldr	r3, [r7, #4]
 800c3c6:	3302      	adds	r3, #2
 800c3c8:	781b      	ldrb	r3, [r3, #0]
 800c3ca:	2b30      	cmp	r3, #48	@ 0x30
 800c3cc:	d061      	beq.n	800c492 <cal_ven+0x27e>
		{
			result[0] += 2;
 800c3ce:	683b      	ldr	r3, [r7, #0]
 800c3d0:	781b      	ldrb	r3, [r3, #0]
 800c3d2:	3302      	adds	r3, #2
 800c3d4:	b2da      	uxtb	r2, r3
 800c3d6:	683b      	ldr	r3, [r7, #0]
 800c3d8:	701a      	strb	r2, [r3, #0]
			//x hundred - (x hundred)
			result[1] = 0x41;
 800c3da:	683b      	ldr	r3, [r7, #0]
 800c3dc:	3301      	adds	r3, #1
 800c3de:	2241      	movs	r2, #65	@ 0x41
 800c3e0:	701a      	strb	r2, [r3, #0]
			result[2] = data[2];
 800c3e2:	683b      	ldr	r3, [r7, #0]
 800c3e4:	3302      	adds	r3, #2
 800c3e6:	687a      	ldr	r2, [r7, #4]
 800c3e8:	7892      	ldrb	r2, [r2, #2]
 800c3ea:	701a      	strb	r2, [r3, #0]
			if (data[3] == 0x30)
 800c3ec:	687b      	ldr	r3, [r7, #4]
 800c3ee:	3303      	adds	r3, #3
 800c3f0:	781b      	ldrb	r3, [r3, #0]
 800c3f2:	2b30      	cmp	r3, #48	@ 0x30
 800c3f4:	d114      	bne.n	800c420 <cal_ven+0x20c>
			{
				if (data[4] != 0x30)
 800c3f6:	687b      	ldr	r3, [r7, #4]
 800c3f8:	3304      	adds	r3, #4
 800c3fa:	781b      	ldrb	r3, [r3, #0]
 800c3fc:	2b30      	cmp	r3, #48	@ 0x30
 800c3fe:	d06b      	beq.n	800c4d8 <cal_ven+0x2c4>
				{
					result[0] += 4;
 800c400:	683b      	ldr	r3, [r7, #0]
 800c402:	781b      	ldrb	r3, [r3, #0]
 800c404:	3304      	adds	r3, #4
 800c406:	b2da      	uxtb	r2, r3
 800c408:	683b      	ldr	r3, [r7, #0]
 800c40a:	701a      	strb	r2, [r3, #0]
					//x - (x hundred x)
					result[3] = 0x30;
 800c40c:	683b      	ldr	r3, [r7, #0]
 800c40e:	3303      	adds	r3, #3
 800c410:	2230      	movs	r2, #48	@ 0x30
 800c412:	701a      	strb	r2, [r3, #0]
					result[4] = data[4];
 800c414:	683b      	ldr	r3, [r7, #0]
 800c416:	3304      	adds	r3, #4
 800c418:	687a      	ldr	r2, [r7, #4]
 800c41a:	7912      	ldrb	r2, [r2, #4]
 800c41c:	701a      	strb	r2, [r3, #0]
 800c41e:	e05b      	b.n	800c4d8 <cal_ven+0x2c4>
				}
			}
			else if (data[3] == 0x31)
 800c420:	687b      	ldr	r3, [r7, #4]
 800c422:	3303      	adds	r3, #3
 800c424:	781b      	ldrb	r3, [r3, #0]
 800c426:	2b31      	cmp	r3, #49	@ 0x31
 800c428:	d10f      	bne.n	800c44a <cal_ven+0x236>
			{
				result[0] += 2;
 800c42a:	683b      	ldr	r3, [r7, #0]
 800c42c:	781b      	ldrb	r3, [r3, #0]
 800c42e:	3302      	adds	r3, #2
 800c430:	b2da      	uxtb	r2, r3
 800c432:	683b      	ldr	r3, [r7, #0]
 800c434:	701a      	strb	r2, [r3, #0]
				//ten, eleven, ..., nineteen (x hundred ten/eleven/.../nineteen)
				result[3] = 0x31;
 800c436:	683b      	ldr	r3, [r7, #0]
 800c438:	3303      	adds	r3, #3
 800c43a:	2231      	movs	r2, #49	@ 0x31
 800c43c:	701a      	strb	r2, [r3, #0]
				result[4] = data[4];
 800c43e:	683b      	ldr	r3, [r7, #0]
 800c440:	3304      	adds	r3, #4
 800c442:	687a      	ldr	r2, [r7, #4]
 800c444:	7912      	ldrb	r2, [r2, #4]
 800c446:	701a      	strb	r2, [r3, #0]
 800c448:	e046      	b.n	800c4d8 <cal_ven+0x2c4>
			}
			else
			{
				result[0] += 2;
 800c44a:	683b      	ldr	r3, [r7, #0]
 800c44c:	781b      	ldrb	r3, [r3, #0]
 800c44e:	3302      	adds	r3, #2
 800c450:	b2da      	uxtb	r2, r3
 800c452:	683b      	ldr	r3, [r7, #0]
 800c454:	701a      	strb	r2, [r3, #0]
				//twenty, ..., ninety - (x hundred twenty/.../ninety)
				result[3] = 0x32;
 800c456:	683b      	ldr	r3, [r7, #0]
 800c458:	3303      	adds	r3, #3
 800c45a:	2232      	movs	r2, #50	@ 0x32
 800c45c:	701a      	strb	r2, [r3, #0]
				result[4] = data[3];
 800c45e:	683b      	ldr	r3, [r7, #0]
 800c460:	3304      	adds	r3, #4
 800c462:	687a      	ldr	r2, [r7, #4]
 800c464:	78d2      	ldrb	r2, [r2, #3]
 800c466:	701a      	strb	r2, [r3, #0]
				if (data[4] != 0x30)
 800c468:	687b      	ldr	r3, [r7, #4]
 800c46a:	3304      	adds	r3, #4
 800c46c:	781b      	ldrb	r3, [r3, #0]
 800c46e:	2b30      	cmp	r3, #48	@ 0x30
 800c470:	d032      	beq.n	800c4d8 <cal_ven+0x2c4>
				{
					result[0] += 2;
 800c472:	683b      	ldr	r3, [r7, #0]
 800c474:	781b      	ldrb	r3, [r3, #0]
 800c476:	3302      	adds	r3, #2
 800c478:	b2da      	uxtb	r2, r3
 800c47a:	683b      	ldr	r3, [r7, #0]
 800c47c:	701a      	strb	r2, [r3, #0]
					//x - (x hundred twenty/.../ninety x)
					result[5] = 0x30;
 800c47e:	683b      	ldr	r3, [r7, #0]
 800c480:	3305      	adds	r3, #5
 800c482:	2230      	movs	r2, #48	@ 0x30
 800c484:	701a      	strb	r2, [r3, #0]
					result[6] = data[4];
 800c486:	683b      	ldr	r3, [r7, #0]
 800c488:	3306      	adds	r3, #6
 800c48a:	687a      	ldr	r2, [r7, #4]
 800c48c:	7912      	ldrb	r2, [r2, #4]
 800c48e:	701a      	strb	r2, [r3, #0]
 800c490:	e022      	b.n	800c4d8 <cal_ven+0x2c4>
				}
			}
		}
		else
		{
			result[0] += 2;
 800c492:	683b      	ldr	r3, [r7, #0]
 800c494:	781b      	ldrb	r3, [r3, #0]
 800c496:	3302      	adds	r3, #2
 800c498:	b2da      	uxtb	r2, r3
 800c49a:	683b      	ldr	r3, [r7, #0]
 800c49c:	701a      	strb	r2, [r3, #0]
			//twenty, ..., ninety - (twenty/.../ninety)
			result[1] = 0x32;
 800c49e:	683b      	ldr	r3, [r7, #0]
 800c4a0:	3301      	adds	r3, #1
 800c4a2:	2232      	movs	r2, #50	@ 0x32
 800c4a4:	701a      	strb	r2, [r3, #0]
			result[2] = data[3];
 800c4a6:	683b      	ldr	r3, [r7, #0]
 800c4a8:	3302      	adds	r3, #2
 800c4aa:	687a      	ldr	r2, [r7, #4]
 800c4ac:	78d2      	ldrb	r2, [r2, #3]
 800c4ae:	701a      	strb	r2, [r3, #0]
			if (data[4] != 0x30)
 800c4b0:	687b      	ldr	r3, [r7, #4]
 800c4b2:	3304      	adds	r3, #4
 800c4b4:	781b      	ldrb	r3, [r3, #0]
 800c4b6:	2b30      	cmp	r3, #48	@ 0x30
 800c4b8:	d00e      	beq.n	800c4d8 <cal_ven+0x2c4>
			{
				result[0] += 2;
 800c4ba:	683b      	ldr	r3, [r7, #0]
 800c4bc:	781b      	ldrb	r3, [r3, #0]
 800c4be:	3302      	adds	r3, #2
 800c4c0:	b2da      	uxtb	r2, r3
 800c4c2:	683b      	ldr	r3, [r7, #0]
 800c4c4:	701a      	strb	r2, [r3, #0]
				//x - (twenty/.../ninety x)
				result[3] = 0x30;
 800c4c6:	683b      	ldr	r3, [r7, #0]
 800c4c8:	3303      	adds	r3, #3
 800c4ca:	2230      	movs	r2, #48	@ 0x30
 800c4cc:	701a      	strb	r2, [r3, #0]
				result[4] = data[4];
 800c4ce:	683b      	ldr	r3, [r7, #0]
 800c4d0:	3304      	adds	r3, #4
 800c4d2:	687a      	ldr	r2, [r7, #4]
 800c4d4:	7912      	ldrb	r2, [r2, #4]
 800c4d6:	701a      	strb	r2, [r3, #0]
			}
		}
	}

	//dollars
	result[0] += 2;
 800c4d8:	683b      	ldr	r3, [r7, #0]
 800c4da:	781b      	ldrb	r3, [r3, #0]
 800c4dc:	3302      	adds	r3, #2
 800c4de:	b2da      	uxtb	r2, r3
 800c4e0:	683b      	ldr	r3, [r7, #0]
 800c4e2:	701a      	strb	r2, [r3, #0]
	result[result[0] - 1] = 0x33;
 800c4e4:	683b      	ldr	r3, [r7, #0]
 800c4e6:	781b      	ldrb	r3, [r3, #0]
 800c4e8:	3b01      	subs	r3, #1
 800c4ea:	683a      	ldr	r2, [r7, #0]
 800c4ec:	18d3      	adds	r3, r2, r3
 800c4ee:	2233      	movs	r2, #51	@ 0x33
 800c4f0:	701a      	strb	r2, [r3, #0]
	result[result[0]] = 0x32;
 800c4f2:	683b      	ldr	r3, [r7, #0]
 800c4f4:	781b      	ldrb	r3, [r3, #0]
 800c4f6:	001a      	movs	r2, r3
 800c4f8:	683b      	ldr	r3, [r7, #0]
 800c4fa:	189b      	adds	r3, r3, r2
 800c4fc:	2232      	movs	r2, #50	@ 0x32
 800c4fe:	701a      	strb	r2, [r3, #0]

	if (data[5] != 0x30)
 800c500:	687b      	ldr	r3, [r7, #4]
 800c502:	3305      	adds	r3, #5
 800c504:	781b      	ldrb	r3, [r3, #0]
 800c506:	2b30      	cmp	r3, #48	@ 0x30
 800c508:	d044      	beq.n	800c594 <cal_ven+0x380>
	{
		result[0] += 6;
 800c50a:	683b      	ldr	r3, [r7, #0]
 800c50c:	781b      	ldrb	r3, [r3, #0]
 800c50e:	3306      	adds	r3, #6
 800c510:	b2da      	uxtb	r2, r3
 800c512:	683b      	ldr	r3, [r7, #0]
 800c514:	701a      	strb	r2, [r3, #0]
		//and
		result[result[0] - 5] = 0x33;
 800c516:	683b      	ldr	r3, [r7, #0]
 800c518:	781b      	ldrb	r3, [r3, #0]
 800c51a:	3b05      	subs	r3, #5
 800c51c:	683a      	ldr	r2, [r7, #0]
 800c51e:	18d3      	adds	r3, r2, r3
 800c520:	2233      	movs	r2, #51	@ 0x33
 800c522:	701a      	strb	r2, [r3, #0]
		result[result[0] - 4] = 0x30;
 800c524:	683b      	ldr	r3, [r7, #0]
 800c526:	781b      	ldrb	r3, [r3, #0]
 800c528:	3b04      	subs	r3, #4
 800c52a:	683a      	ldr	r2, [r7, #0]
 800c52c:	18d3      	adds	r3, r2, r3
 800c52e:	2230      	movs	r2, #48	@ 0x30
 800c530:	701a      	strb	r2, [r3, #0]
		if (data[5] == 0x31)
 800c532:	687b      	ldr	r3, [r7, #4]
 800c534:	3305      	adds	r3, #5
 800c536:	781b      	ldrb	r3, [r3, #0]
 800c538:	2b31      	cmp	r3, #49	@ 0x31
 800c53a:	d10e      	bne.n	800c55a <cal_ven+0x346>
		{
			//ten
			result[result[0] - 3] = 0x31;
 800c53c:	683b      	ldr	r3, [r7, #0]
 800c53e:	781b      	ldrb	r3, [r3, #0]
 800c540:	3b03      	subs	r3, #3
 800c542:	683a      	ldr	r2, [r7, #0]
 800c544:	18d3      	adds	r3, r2, r3
 800c546:	2231      	movs	r2, #49	@ 0x31
 800c548:	701a      	strb	r2, [r3, #0]
			result[result[0] - 2] = 0x30;
 800c54a:	683b      	ldr	r3, [r7, #0]
 800c54c:	781b      	ldrb	r3, [r3, #0]
 800c54e:	3b02      	subs	r3, #2
 800c550:	683a      	ldr	r2, [r7, #0]
 800c552:	18d3      	adds	r3, r2, r3
 800c554:	2230      	movs	r2, #48	@ 0x30
 800c556:	701a      	strb	r2, [r3, #0]
 800c558:	e00e      	b.n	800c578 <cal_ven+0x364>
		}
		else
		{
			//twenty/.../ninety
			result[result[0] - 3] = 0x32;
 800c55a:	683b      	ldr	r3, [r7, #0]
 800c55c:	781b      	ldrb	r3, [r3, #0]
 800c55e:	3b03      	subs	r3, #3
 800c560:	683a      	ldr	r2, [r7, #0]
 800c562:	18d3      	adds	r3, r2, r3
 800c564:	2232      	movs	r2, #50	@ 0x32
 800c566:	701a      	strb	r2, [r3, #0]
			result[result[0] - 2] = data[5];
 800c568:	683b      	ldr	r3, [r7, #0]
 800c56a:	781b      	ldrb	r3, [r3, #0]
 800c56c:	3b02      	subs	r3, #2
 800c56e:	683a      	ldr	r2, [r7, #0]
 800c570:	18d3      	adds	r3, r2, r3
 800c572:	687a      	ldr	r2, [r7, #4]
 800c574:	7952      	ldrb	r2, [r2, #5]
 800c576:	701a      	strb	r2, [r3, #0]
		}
		//cents
		result[result[0] - 1] = 0x33;
 800c578:	683b      	ldr	r3, [r7, #0]
 800c57a:	781b      	ldrb	r3, [r3, #0]
 800c57c:	3b01      	subs	r3, #1
 800c57e:	683a      	ldr	r2, [r7, #0]
 800c580:	18d3      	adds	r3, r2, r3
 800c582:	2233      	movs	r2, #51	@ 0x33
 800c584:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x31;
 800c586:	683b      	ldr	r3, [r7, #0]
 800c588:	781b      	ldrb	r3, [r3, #0]
 800c58a:	001a      	movs	r2, r3
 800c58c:	683b      	ldr	r3, [r7, #0]
 800c58e:	189b      	adds	r3, r3, r2
 800c590:	2231      	movs	r2, #49	@ 0x31
 800c592:	701a      	strb	r2, [r3, #0]
	}

	if (data[0] != 0)
 800c594:	687b      	ldr	r3, [r7, #4]
 800c596:	781b      	ldrb	r3, [r3, #0]
 800c598:	2b00      	cmp	r3, #0
 800c59a:	d100      	bne.n	800c59e <cal_ven+0x38a>
 800c59c:	e114      	b.n	800c7c8 <cal_ven+0x5b4>
	{
		//including the surcharge
		result[0] += 2;
 800c59e:	683b      	ldr	r3, [r7, #0]
 800c5a0:	781b      	ldrb	r3, [r3, #0]
 800c5a2:	3302      	adds	r3, #2
 800c5a4:	b2da      	uxtb	r2, r3
 800c5a6:	683b      	ldr	r3, [r7, #0]
 800c5a8:	701a      	strb	r2, [r3, #0]
		result[result[0] - 1] = 0x33;
 800c5aa:	683b      	ldr	r3, [r7, #0]
 800c5ac:	781b      	ldrb	r3, [r3, #0]
 800c5ae:	3b01      	subs	r3, #1
 800c5b0:	683a      	ldr	r2, [r7, #0]
 800c5b2:	18d3      	adds	r3, r2, r3
 800c5b4:	2233      	movs	r2, #51	@ 0x33
 800c5b6:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x39;
 800c5b8:	683b      	ldr	r3, [r7, #0]
 800c5ba:	781b      	ldrb	r3, [r3, #0]
 800c5bc:	001a      	movs	r2, r3
 800c5be:	683b      	ldr	r3, [r7, #0]
 800c5c0:	189b      	adds	r3, r3, r2
 800c5c2:	2239      	movs	r2, #57	@ 0x39
 800c5c4:	701a      	strb	r2, [r3, #0]
		if (data[6] != 0x30)
 800c5c6:	687b      	ldr	r3, [r7, #4]
 800c5c8:	3306      	adds	r3, #6
 800c5ca:	781b      	ldrb	r3, [r3, #0]
 800c5cc:	2b30      	cmp	r3, #48	@ 0x30
 800c5ce:	d100      	bne.n	800c5d2 <cal_ven+0x3be>
 800c5d0:	e081      	b.n	800c6d6 <cal_ven+0x4c2>
		{
			result[0] += 2;
 800c5d2:	683b      	ldr	r3, [r7, #0]
 800c5d4:	781b      	ldrb	r3, [r3, #0]
 800c5d6:	3302      	adds	r3, #2
 800c5d8:	b2da      	uxtb	r2, r3
 800c5da:	683b      	ldr	r3, [r7, #0]
 800c5dc:	701a      	strb	r2, [r3, #0]
			//x hundred - (x hundred)
			result[result[0] - 1] = 0x41;
 800c5de:	683b      	ldr	r3, [r7, #0]
 800c5e0:	781b      	ldrb	r3, [r3, #0]
 800c5e2:	3b01      	subs	r3, #1
 800c5e4:	683a      	ldr	r2, [r7, #0]
 800c5e6:	18d3      	adds	r3, r2, r3
 800c5e8:	2241      	movs	r2, #65	@ 0x41
 800c5ea:	701a      	strb	r2, [r3, #0]
			result[result[0]] = data[6];
 800c5ec:	683b      	ldr	r3, [r7, #0]
 800c5ee:	781b      	ldrb	r3, [r3, #0]
 800c5f0:	001a      	movs	r2, r3
 800c5f2:	683b      	ldr	r3, [r7, #0]
 800c5f4:	189b      	adds	r3, r3, r2
 800c5f6:	687a      	ldr	r2, [r7, #4]
 800c5f8:	7992      	ldrb	r2, [r2, #6]
 800c5fa:	701a      	strb	r2, [r3, #0]
			if (data[7] == 0x30)
 800c5fc:	687b      	ldr	r3, [r7, #4]
 800c5fe:	3307      	adds	r3, #7
 800c600:	781b      	ldrb	r3, [r3, #0]
 800c602:	2b30      	cmp	r3, #48	@ 0x30
 800c604:	d11b      	bne.n	800c63e <cal_ven+0x42a>
			{
				if (data[8] != 0x30)
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	3308      	adds	r3, #8
 800c60a:	781b      	ldrb	r3, [r3, #0]
 800c60c:	2b30      	cmp	r3, #48	@ 0x30
 800c60e:	d100      	bne.n	800c612 <cal_ven+0x3fe>
 800c610:	e0c6      	b.n	800c7a0 <cal_ven+0x58c>
				{
					result[0] += 2;
 800c612:	683b      	ldr	r3, [r7, #0]
 800c614:	781b      	ldrb	r3, [r3, #0]
 800c616:	3302      	adds	r3, #2
 800c618:	b2da      	uxtb	r2, r3
 800c61a:	683b      	ldr	r3, [r7, #0]
 800c61c:	701a      	strb	r2, [r3, #0]
					//x - (x hundred x)
					result[result[0] - 1] = 0x30;
 800c61e:	683b      	ldr	r3, [r7, #0]
 800c620:	781b      	ldrb	r3, [r3, #0]
 800c622:	3b01      	subs	r3, #1
 800c624:	683a      	ldr	r2, [r7, #0]
 800c626:	18d3      	adds	r3, r2, r3
 800c628:	2230      	movs	r2, #48	@ 0x30
 800c62a:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800c62c:	683b      	ldr	r3, [r7, #0]
 800c62e:	781b      	ldrb	r3, [r3, #0]
 800c630:	001a      	movs	r2, r3
 800c632:	683b      	ldr	r3, [r7, #0]
 800c634:	189b      	adds	r3, r3, r2
 800c636:	687a      	ldr	r2, [r7, #4]
 800c638:	7a12      	ldrb	r2, [r2, #8]
 800c63a:	701a      	strb	r2, [r3, #0]
 800c63c:	e0b0      	b.n	800c7a0 <cal_ven+0x58c>
				}
			}
			else
			{
				if (data[7] == 0x31)
 800c63e:	687b      	ldr	r3, [r7, #4]
 800c640:	3307      	adds	r3, #7
 800c642:	781b      	ldrb	r3, [r3, #0]
 800c644:	2b31      	cmp	r3, #49	@ 0x31
 800c646:	d115      	bne.n	800c674 <cal_ven+0x460>
				{
					result[0] += 2;
 800c648:	683b      	ldr	r3, [r7, #0]
 800c64a:	781b      	ldrb	r3, [r3, #0]
 800c64c:	3302      	adds	r3, #2
 800c64e:	b2da      	uxtb	r2, r3
 800c650:	683b      	ldr	r3, [r7, #0]
 800c652:	701a      	strb	r2, [r3, #0]
					//ten, eleven, ..., nineteen (x hundred ten/eleven/.../nineteen)
					result[result[0] - 1] = 0x30;
 800c654:	683b      	ldr	r3, [r7, #0]
 800c656:	781b      	ldrb	r3, [r3, #0]
 800c658:	3b01      	subs	r3, #1
 800c65a:	683a      	ldr	r2, [r7, #0]
 800c65c:	18d3      	adds	r3, r2, r3
 800c65e:	2230      	movs	r2, #48	@ 0x30
 800c660:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800c662:	683b      	ldr	r3, [r7, #0]
 800c664:	781b      	ldrb	r3, [r3, #0]
 800c666:	001a      	movs	r2, r3
 800c668:	683b      	ldr	r3, [r7, #0]
 800c66a:	189b      	adds	r3, r3, r2
 800c66c:	687a      	ldr	r2, [r7, #4]
 800c66e:	7a12      	ldrb	r2, [r2, #8]
 800c670:	701a      	strb	r2, [r3, #0]
 800c672:	e095      	b.n	800c7a0 <cal_ven+0x58c>
				}
				else
				{
					result[0] += 2;
 800c674:	683b      	ldr	r3, [r7, #0]
 800c676:	781b      	ldrb	r3, [r3, #0]
 800c678:	3302      	adds	r3, #2
 800c67a:	b2da      	uxtb	r2, r3
 800c67c:	683b      	ldr	r3, [r7, #0]
 800c67e:	701a      	strb	r2, [r3, #0]
					//twenty, ..., ninety - (x hundred twenty/.../ninety)
					result[result[0] - 1] = 0x32;
 800c680:	683b      	ldr	r3, [r7, #0]
 800c682:	781b      	ldrb	r3, [r3, #0]
 800c684:	3b01      	subs	r3, #1
 800c686:	683a      	ldr	r2, [r7, #0]
 800c688:	18d3      	adds	r3, r2, r3
 800c68a:	2232      	movs	r2, #50	@ 0x32
 800c68c:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[7];
 800c68e:	683b      	ldr	r3, [r7, #0]
 800c690:	781b      	ldrb	r3, [r3, #0]
 800c692:	001a      	movs	r2, r3
 800c694:	683b      	ldr	r3, [r7, #0]
 800c696:	189b      	adds	r3, r3, r2
 800c698:	687a      	ldr	r2, [r7, #4]
 800c69a:	79d2      	ldrb	r2, [r2, #7]
 800c69c:	701a      	strb	r2, [r3, #0]
					if (data[8] != 0x30)
 800c69e:	687b      	ldr	r3, [r7, #4]
 800c6a0:	3308      	adds	r3, #8
 800c6a2:	781b      	ldrb	r3, [r3, #0]
 800c6a4:	2b30      	cmp	r3, #48	@ 0x30
 800c6a6:	d100      	bne.n	800c6aa <cal_ven+0x496>
 800c6a8:	e07a      	b.n	800c7a0 <cal_ven+0x58c>
					{
						result[0] += 2;
 800c6aa:	683b      	ldr	r3, [r7, #0]
 800c6ac:	781b      	ldrb	r3, [r3, #0]
 800c6ae:	3302      	adds	r3, #2
 800c6b0:	b2da      	uxtb	r2, r3
 800c6b2:	683b      	ldr	r3, [r7, #0]
 800c6b4:	701a      	strb	r2, [r3, #0]
						//x - (x hundred twenty/.../ninety x)
						result[result[0] - 1] = 0x30;
 800c6b6:	683b      	ldr	r3, [r7, #0]
 800c6b8:	781b      	ldrb	r3, [r3, #0]
 800c6ba:	3b01      	subs	r3, #1
 800c6bc:	683a      	ldr	r2, [r7, #0]
 800c6be:	18d3      	adds	r3, r2, r3
 800c6c0:	2230      	movs	r2, #48	@ 0x30
 800c6c2:	701a      	strb	r2, [r3, #0]
						result[result[0]] = data[8];
 800c6c4:	683b      	ldr	r3, [r7, #0]
 800c6c6:	781b      	ldrb	r3, [r3, #0]
 800c6c8:	001a      	movs	r2, r3
 800c6ca:	683b      	ldr	r3, [r7, #0]
 800c6cc:	189b      	adds	r3, r3, r2
 800c6ce:	687a      	ldr	r2, [r7, #4]
 800c6d0:	7a12      	ldrb	r2, [r2, #8]
 800c6d2:	701a      	strb	r2, [r3, #0]
 800c6d4:	e064      	b.n	800c7a0 <cal_ven+0x58c>
				}
			}
		}
		else
		{
			if (data[7] == 0x31)
 800c6d6:	687b      	ldr	r3, [r7, #4]
 800c6d8:	3307      	adds	r3, #7
 800c6da:	781b      	ldrb	r3, [r3, #0]
 800c6dc:	2b31      	cmp	r3, #49	@ 0x31
 800c6de:	d115      	bne.n	800c70c <cal_ven+0x4f8>
			{
				result[0] += 2;
 800c6e0:	683b      	ldr	r3, [r7, #0]
 800c6e2:	781b      	ldrb	r3, [r3, #0]
 800c6e4:	3302      	adds	r3, #2
 800c6e6:	b2da      	uxtb	r2, r3
 800c6e8:	683b      	ldr	r3, [r7, #0]
 800c6ea:	701a      	strb	r2, [r3, #0]
				//ten, eleven, ..., nineteen - (ten/eleven/.../nineteen)
				result[result[0] - 1] = 0x31;
 800c6ec:	683b      	ldr	r3, [r7, #0]
 800c6ee:	781b      	ldrb	r3, [r3, #0]
 800c6f0:	3b01      	subs	r3, #1
 800c6f2:	683a      	ldr	r2, [r7, #0]
 800c6f4:	18d3      	adds	r3, r2, r3
 800c6f6:	2231      	movs	r2, #49	@ 0x31
 800c6f8:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[8];
 800c6fa:	683b      	ldr	r3, [r7, #0]
 800c6fc:	781b      	ldrb	r3, [r3, #0]
 800c6fe:	001a      	movs	r2, r3
 800c700:	683b      	ldr	r3, [r7, #0]
 800c702:	189b      	adds	r3, r3, r2
 800c704:	687a      	ldr	r2, [r7, #4]
 800c706:	7a12      	ldrb	r2, [r2, #8]
 800c708:	701a      	strb	r2, [r3, #0]
 800c70a:	e049      	b.n	800c7a0 <cal_ven+0x58c>
			}
			else if (data[7] != 0x30)
 800c70c:	687b      	ldr	r3, [r7, #4]
 800c70e:	3307      	adds	r3, #7
 800c710:	781b      	ldrb	r3, [r3, #0]
 800c712:	2b30      	cmp	r3, #48	@ 0x30
 800c714:	d02f      	beq.n	800c776 <cal_ven+0x562>
			{
				result[0] += 2;
 800c716:	683b      	ldr	r3, [r7, #0]
 800c718:	781b      	ldrb	r3, [r3, #0]
 800c71a:	3302      	adds	r3, #2
 800c71c:	b2da      	uxtb	r2, r3
 800c71e:	683b      	ldr	r3, [r7, #0]
 800c720:	701a      	strb	r2, [r3, #0]
				//twenty, ..., ninety - (twenty/.../ninety)
				result[result[0] - 1] = 0x32;
 800c722:	683b      	ldr	r3, [r7, #0]
 800c724:	781b      	ldrb	r3, [r3, #0]
 800c726:	3b01      	subs	r3, #1
 800c728:	683a      	ldr	r2, [r7, #0]
 800c72a:	18d3      	adds	r3, r2, r3
 800c72c:	2232      	movs	r2, #50	@ 0x32
 800c72e:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[7];
 800c730:	683b      	ldr	r3, [r7, #0]
 800c732:	781b      	ldrb	r3, [r3, #0]
 800c734:	001a      	movs	r2, r3
 800c736:	683b      	ldr	r3, [r7, #0]
 800c738:	189b      	adds	r3, r3, r2
 800c73a:	687a      	ldr	r2, [r7, #4]
 800c73c:	79d2      	ldrb	r2, [r2, #7]
 800c73e:	701a      	strb	r2, [r3, #0]
				if (data[8] != 0x30)
 800c740:	687b      	ldr	r3, [r7, #4]
 800c742:	3308      	adds	r3, #8
 800c744:	781b      	ldrb	r3, [r3, #0]
 800c746:	2b30      	cmp	r3, #48	@ 0x30
 800c748:	d02a      	beq.n	800c7a0 <cal_ven+0x58c>
				{
					result[0] += 2;
 800c74a:	683b      	ldr	r3, [r7, #0]
 800c74c:	781b      	ldrb	r3, [r3, #0]
 800c74e:	3302      	adds	r3, #2
 800c750:	b2da      	uxtb	r2, r3
 800c752:	683b      	ldr	r3, [r7, #0]
 800c754:	701a      	strb	r2, [r3, #0]
					//x - (twenty/.../ninety x)
					result[result[0] - 1] = 0x30;
 800c756:	683b      	ldr	r3, [r7, #0]
 800c758:	781b      	ldrb	r3, [r3, #0]
 800c75a:	3b01      	subs	r3, #1
 800c75c:	683a      	ldr	r2, [r7, #0]
 800c75e:	18d3      	adds	r3, r2, r3
 800c760:	2230      	movs	r2, #48	@ 0x30
 800c762:	701a      	strb	r2, [r3, #0]
					result[result[0]] = data[8];
 800c764:	683b      	ldr	r3, [r7, #0]
 800c766:	781b      	ldrb	r3, [r3, #0]
 800c768:	001a      	movs	r2, r3
 800c76a:	683b      	ldr	r3, [r7, #0]
 800c76c:	189b      	adds	r3, r3, r2
 800c76e:	687a      	ldr	r2, [r7, #4]
 800c770:	7a12      	ldrb	r2, [r2, #8]
 800c772:	701a      	strb	r2, [r3, #0]
 800c774:	e014      	b.n	800c7a0 <cal_ven+0x58c>
				}
			}
			else
			{
				result[0] += 2;
 800c776:	683b      	ldr	r3, [r7, #0]
 800c778:	781b      	ldrb	r3, [r3, #0]
 800c77a:	3302      	adds	r3, #2
 800c77c:	b2da      	uxtb	r2, r3
 800c77e:	683b      	ldr	r3, [r7, #0]
 800c780:	701a      	strb	r2, [r3, #0]
				//x - (x)
				result[result[0] - 1] = 0x30;
 800c782:	683b      	ldr	r3, [r7, #0]
 800c784:	781b      	ldrb	r3, [r3, #0]
 800c786:	3b01      	subs	r3, #1
 800c788:	683a      	ldr	r2, [r7, #0]
 800c78a:	18d3      	adds	r3, r2, r3
 800c78c:	2230      	movs	r2, #48	@ 0x30
 800c78e:	701a      	strb	r2, [r3, #0]
				result[result[0]] = data[8];
 800c790:	683b      	ldr	r3, [r7, #0]
 800c792:	781b      	ldrb	r3, [r3, #0]
 800c794:	001a      	movs	r2, r3
 800c796:	683b      	ldr	r3, [r7, #0]
 800c798:	189b      	adds	r3, r3, r2
 800c79a:	687a      	ldr	r2, [r7, #4]
 800c79c:	7a12      	ldrb	r2, [r2, #8]
 800c79e:	701a      	strb	r2, [r3, #0]
			}
		}
		//dollars
		result[0] += 2;
 800c7a0:	683b      	ldr	r3, [r7, #0]
 800c7a2:	781b      	ldrb	r3, [r3, #0]
 800c7a4:	3302      	adds	r3, #2
 800c7a6:	b2da      	uxtb	r2, r3
 800c7a8:	683b      	ldr	r3, [r7, #0]
 800c7aa:	701a      	strb	r2, [r3, #0]
		result[result[0] - 1] = 0x33;
 800c7ac:	683b      	ldr	r3, [r7, #0]
 800c7ae:	781b      	ldrb	r3, [r3, #0]
 800c7b0:	3b01      	subs	r3, #1
 800c7b2:	683a      	ldr	r2, [r7, #0]
 800c7b4:	18d3      	adds	r3, r2, r3
 800c7b6:	2233      	movs	r2, #51	@ 0x33
 800c7b8:	701a      	strb	r2, [r3, #0]
		result[result[0]] = 0x32;
 800c7ba:	683b      	ldr	r3, [r7, #0]
 800c7bc:	781b      	ldrb	r3, [r3, #0]
 800c7be:	001a      	movs	r2, r3
 800c7c0:	683b      	ldr	r3, [r7, #0]
 800c7c2:	189b      	adds	r3, r3, r2
 800c7c4:	2232      	movs	r2, #50	@ 0x32
 800c7c6:	701a      	strb	r2, [r3, #0]
	}
	//thank you, have a nice day
	result[0] += 2;
 800c7c8:	683b      	ldr	r3, [r7, #0]
 800c7ca:	781b      	ldrb	r3, [r3, #0]
 800c7cc:	3302      	adds	r3, #2
 800c7ce:	b2da      	uxtb	r2, r3
 800c7d0:	683b      	ldr	r3, [r7, #0]
 800c7d2:	701a      	strb	r2, [r3, #0]
	result[result[0] - 1] = 0x34;
 800c7d4:	683b      	ldr	r3, [r7, #0]
 800c7d6:	781b      	ldrb	r3, [r3, #0]
 800c7d8:	3b01      	subs	r3, #1
 800c7da:	683a      	ldr	r2, [r7, #0]
 800c7dc:	18d3      	adds	r3, r2, r3
 800c7de:	2234      	movs	r2, #52	@ 0x34
 800c7e0:	701a      	strb	r2, [r3, #0]
	result[result[0]] = 0x30;
 800c7e2:	683b      	ldr	r3, [r7, #0]
 800c7e4:	781b      	ldrb	r3, [r3, #0]
 800c7e6:	001a      	movs	r2, r3
 800c7e8:	683b      	ldr	r3, [r7, #0]
 800c7ea:	189b      	adds	r3, r3, r2
 800c7ec:	2230      	movs	r2, #48	@ 0x30
 800c7ee:	701a      	strb	r2, [r3, #0]
}
 800c7f0:	46c0      	nop			@ (mov r8, r8)
 800c7f2:	46bd      	mov	sp, r7
 800c7f4:	b002      	add	sp, #8
 800c7f6:	bd80      	pop	{r7, pc}

0800c7f8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800c7f8:	b580      	push	{r7, lr}
 800c7fa:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800c7fc:	b672      	cpsid	i
}
 800c7fe:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800c800:	46c0      	nop			@ (mov r8, r8)
 800c802:	e7fd      	b.n	800c800 <Error_Handler+0x8>

0800c804 <PCF2129_Init>:
 *  @note :
 *  @param :         使用HAL庫 I2C接口 (Use HAL library I2C interface)
 *  @retva l: None
=============================================================================
*/
void PCF2129_Init(I2C_HandleTypeDef i2c_h,uint8_t addr) {
 800c804:	b084      	sub	sp, #16
 800c806:	b5b0      	push	{r4, r5, r7, lr}
 800c808:	af00      	add	r7, sp, #0
 800c80a:	2510      	movs	r5, #16
 800c80c:	197c      	adds	r4, r7, r5
 800c80e:	6020      	str	r0, [r4, #0]
 800c810:	6061      	str	r1, [r4, #4]
 800c812:	60a2      	str	r2, [r4, #8]
 800c814:	60e3      	str	r3, [r4, #12]
    pcf2129.i2c_h = i2c_h;
 800c816:	4a0b      	ldr	r2, [pc, #44]	@ (800c844 <PCF2129_Init+0x40>)
 800c818:	002c      	movs	r4, r5
 800c81a:	193b      	adds	r3, r7, r4
 800c81c:	0010      	movs	r0, r2
 800c81e:	0019      	movs	r1, r3
 800c820:	234c      	movs	r3, #76	@ 0x4c
 800c822:	001a      	movs	r2, r3
 800c824:	f00c fa97 	bl	8018d56 <memcpy>
    pcf2129.i2caddr = addr;
 800c828:	4b06      	ldr	r3, [pc, #24]	@ (800c844 <PCF2129_Init+0x40>)
 800c82a:	224c      	movs	r2, #76	@ 0x4c
 800c82c:	1912      	adds	r2, r2, r4
 800c82e:	19d2      	adds	r2, r2, r7
 800c830:	214c      	movs	r1, #76	@ 0x4c
 800c832:	7812      	ldrb	r2, [r2, #0]
 800c834:	545a      	strb	r2, [r3, r1]
}
 800c836:	46c0      	nop			@ (mov r8, r8)
 800c838:	46bd      	mov	sp, r7
 800c83a:	bcb0      	pop	{r4, r5, r7}
 800c83c:	bc08      	pop	{r3}
 800c83e:	b004      	add	sp, #16
 800c840:	4718      	bx	r3
 800c842:	46c0      	nop			@ (mov r8, r8)
 800c844:	20003410 	.word	0x20003410

0800c848 <PCF2129_configure>:
 *  @note :
 *  @param :None
 *  @retva l: None
=============================================================================
*/
void PCF2129_configure(void) {
 800c848:	b580      	push	{r7, lr}
 800c84a:	af00      	add	r7, sp, #0
    PCF2129_set24mode();
 800c84c:	f000 f90c 	bl	800ca68 <PCF2129_set24mode>
}
 800c850:	46c0      	nop			@ (mov r8, r8)
 800c852:	46bd      	mov	sp, r7
 800c854:	bd80      	pop	{r7, pc}
	...

0800c858 <PCF2129_getDate>:
 *  @param :None
 *  @retva l: None
=============================================================================
*/
PCF2129_t PCF2129_getDate(void)
{
 800c858:	b590      	push	{r4, r7, lr}
 800c85a:	b087      	sub	sp, #28
 800c85c:	af02      	add	r7, sp, #8
 800c85e:	6078      	str	r0, [r7, #4]
	uint8_t datecontent;

	datecontent = PCF2129_REG_SECONDS;
 800c860:	240f      	movs	r4, #15
 800c862:	193b      	adds	r3, r7, r4
 800c864:	2203      	movs	r2, #3
 800c866:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &datecontent, 1, I2C_TIMEOUT);
 800c868:	193a      	adds	r2, r7, r4
 800c86a:	485d      	ldr	r0, [pc, #372]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c86c:	231e      	movs	r3, #30
 800c86e:	9300      	str	r3, [sp, #0]
 800c870:	2301      	movs	r3, #1
 800c872:	21a2      	movs	r1, #162	@ 0xa2
 800c874:	f002 f886 	bl	800e984 <HAL_I2C_Master_Transmit>
    if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &datecontent, 1, I2C_TIMEOUT) == 0)
 800c878:	4b59      	ldr	r3, [pc, #356]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c87a:	224c      	movs	r2, #76	@ 0x4c
 800c87c:	5c9b      	ldrb	r3, [r3, r2]
 800c87e:	0019      	movs	r1, r3
 800c880:	193a      	adds	r2, r7, r4
 800c882:	4857      	ldr	r0, [pc, #348]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c884:	231e      	movs	r3, #30
 800c886:	9300      	str	r3, [sp, #0]
 800c888:	2301      	movs	r3, #1
 800c88a:	f002 f983 	bl	800eb94 <HAL_I2C_Master_Receive>
 800c88e:	1e03      	subs	r3, r0, #0
 800c890:	d104      	bne.n	800c89c <PCF2129_getDate+0x44>
    	pcf2129.date.ss = datecontent;
 800c892:	193b      	adds	r3, r7, r4
 800c894:	7819      	ldrb	r1, [r3, #0]
 800c896:	4b52      	ldr	r3, [pc, #328]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c898:	2253      	movs	r2, #83	@ 0x53
 800c89a:	5499      	strb	r1, [r3, r2]

    datecontent = PCF2129_REG_MINUTES;
 800c89c:	240f      	movs	r4, #15
 800c89e:	193b      	adds	r3, r7, r4
 800c8a0:	2204      	movs	r2, #4
 800c8a2:	701a      	strb	r2, [r3, #0]
    HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &datecontent, 1, I2C_TIMEOUT);
 800c8a4:	193a      	adds	r2, r7, r4
 800c8a6:	484e      	ldr	r0, [pc, #312]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c8a8:	231e      	movs	r3, #30
 800c8aa:	9300      	str	r3, [sp, #0]
 800c8ac:	2301      	movs	r3, #1
 800c8ae:	21a2      	movs	r1, #162	@ 0xa2
 800c8b0:	f002 f868 	bl	800e984 <HAL_I2C_Master_Transmit>
    if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &datecontent, 1, I2C_TIMEOUT) == 0)
 800c8b4:	4b4a      	ldr	r3, [pc, #296]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c8b6:	224c      	movs	r2, #76	@ 0x4c
 800c8b8:	5c9b      	ldrb	r3, [r3, r2]
 800c8ba:	0019      	movs	r1, r3
 800c8bc:	193a      	adds	r2, r7, r4
 800c8be:	4848      	ldr	r0, [pc, #288]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c8c0:	231e      	movs	r3, #30
 800c8c2:	9300      	str	r3, [sp, #0]
 800c8c4:	2301      	movs	r3, #1
 800c8c6:	f002 f965 	bl	800eb94 <HAL_I2C_Master_Receive>
 800c8ca:	1e03      	subs	r3, r0, #0
 800c8cc:	d104      	bne.n	800c8d8 <PCF2129_getDate+0x80>
    	pcf2129.date.mm= datecontent;
 800c8ce:	193b      	adds	r3, r7, r4
 800c8d0:	7819      	ldrb	r1, [r3, #0]
 800c8d2:	4b43      	ldr	r3, [pc, #268]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c8d4:	2252      	movs	r2, #82	@ 0x52
 800c8d6:	5499      	strb	r1, [r3, r2]

    datecontent = PCF2129_REG_HOURS;
 800c8d8:	240f      	movs	r4, #15
 800c8da:	193b      	adds	r3, r7, r4
 800c8dc:	2205      	movs	r2, #5
 800c8de:	701a      	strb	r2, [r3, #0]
    HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &datecontent, 1, I2C_TIMEOUT);
 800c8e0:	193a      	adds	r2, r7, r4
 800c8e2:	483f      	ldr	r0, [pc, #252]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c8e4:	231e      	movs	r3, #30
 800c8e6:	9300      	str	r3, [sp, #0]
 800c8e8:	2301      	movs	r3, #1
 800c8ea:	21a2      	movs	r1, #162	@ 0xa2
 800c8ec:	f002 f84a 	bl	800e984 <HAL_I2C_Master_Transmit>
    if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &datecontent, 1, I2C_TIMEOUT) == 0)
 800c8f0:	4b3b      	ldr	r3, [pc, #236]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c8f2:	224c      	movs	r2, #76	@ 0x4c
 800c8f4:	5c9b      	ldrb	r3, [r3, r2]
 800c8f6:	0019      	movs	r1, r3
 800c8f8:	193a      	adds	r2, r7, r4
 800c8fa:	4839      	ldr	r0, [pc, #228]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c8fc:	231e      	movs	r3, #30
 800c8fe:	9300      	str	r3, [sp, #0]
 800c900:	2301      	movs	r3, #1
 800c902:	f002 f947 	bl	800eb94 <HAL_I2C_Master_Receive>
 800c906:	1e03      	subs	r3, r0, #0
 800c908:	d104      	bne.n	800c914 <PCF2129_getDate+0xbc>
    	pcf2129.date.hh = datecontent;
 800c90a:	193b      	adds	r3, r7, r4
 800c90c:	7819      	ldrb	r1, [r3, #0]
 800c90e:	4b34      	ldr	r3, [pc, #208]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c910:	2251      	movs	r2, #81	@ 0x51
 800c912:	5499      	strb	r1, [r3, r2]
//    datecontent = PCF2129_WEEKDAYS;
//    HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &datecontent, 1, I2C_TIMEOUT);
//    if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &datecontent, 1, I2C_TIMEOUT) == 0)
//        pcf2129.date.w= datecontent;

    datecontent = PCF2129_REG_DAYS;
 800c914:	240f      	movs	r4, #15
 800c916:	193b      	adds	r3, r7, r4
 800c918:	2206      	movs	r2, #6
 800c91a:	701a      	strb	r2, [r3, #0]
    HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &datecontent, 1, I2C_TIMEOUT);
 800c91c:	193a      	adds	r2, r7, r4
 800c91e:	4830      	ldr	r0, [pc, #192]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c920:	231e      	movs	r3, #30
 800c922:	9300      	str	r3, [sp, #0]
 800c924:	2301      	movs	r3, #1
 800c926:	21a2      	movs	r1, #162	@ 0xa2
 800c928:	f002 f82c 	bl	800e984 <HAL_I2C_Master_Transmit>
    if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &datecontent, 1, I2C_TIMEOUT) == 0)
 800c92c:	4b2c      	ldr	r3, [pc, #176]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c92e:	224c      	movs	r2, #76	@ 0x4c
 800c930:	5c9b      	ldrb	r3, [r3, r2]
 800c932:	0019      	movs	r1, r3
 800c934:	193a      	adds	r2, r7, r4
 800c936:	482a      	ldr	r0, [pc, #168]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c938:	231e      	movs	r3, #30
 800c93a:	9300      	str	r3, [sp, #0]
 800c93c:	2301      	movs	r3, #1
 800c93e:	f002 f929 	bl	800eb94 <HAL_I2C_Master_Receive>
 800c942:	1e03      	subs	r3, r0, #0
 800c944:	d104      	bne.n	800c950 <PCF2129_getDate+0xf8>
    	pcf2129.date.d= datecontent;
 800c946:	193b      	adds	r3, r7, r4
 800c948:	7819      	ldrb	r1, [r3, #0]
 800c94a:	4b25      	ldr	r3, [pc, #148]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c94c:	224f      	movs	r2, #79	@ 0x4f
 800c94e:	5499      	strb	r1, [r3, r2]

    datecontent = PCF2129_REG_MONTHS;
 800c950:	240f      	movs	r4, #15
 800c952:	193b      	adds	r3, r7, r4
 800c954:	2208      	movs	r2, #8
 800c956:	701a      	strb	r2, [r3, #0]
    HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &datecontent, 1, I2C_TIMEOUT);
 800c958:	193a      	adds	r2, r7, r4
 800c95a:	4821      	ldr	r0, [pc, #132]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c95c:	231e      	movs	r3, #30
 800c95e:	9300      	str	r3, [sp, #0]
 800c960:	2301      	movs	r3, #1
 800c962:	21a2      	movs	r1, #162	@ 0xa2
 800c964:	f002 f80e 	bl	800e984 <HAL_I2C_Master_Transmit>
    if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &datecontent, 1, I2C_TIMEOUT) == 0)
 800c968:	4b1d      	ldr	r3, [pc, #116]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c96a:	224c      	movs	r2, #76	@ 0x4c
 800c96c:	5c9b      	ldrb	r3, [r3, r2]
 800c96e:	0019      	movs	r1, r3
 800c970:	193a      	adds	r2, r7, r4
 800c972:	481b      	ldr	r0, [pc, #108]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c974:	231e      	movs	r3, #30
 800c976:	9300      	str	r3, [sp, #0]
 800c978:	2301      	movs	r3, #1
 800c97a:	f002 f90b 	bl	800eb94 <HAL_I2C_Master_Receive>
 800c97e:	1e03      	subs	r3, r0, #0
 800c980:	d104      	bne.n	800c98c <PCF2129_getDate+0x134>
        pcf2129.date.m= datecontent;
 800c982:	193b      	adds	r3, r7, r4
 800c984:	7819      	ldrb	r1, [r3, #0]
 800c986:	4b16      	ldr	r3, [pc, #88]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c988:	224e      	movs	r2, #78	@ 0x4e
 800c98a:	5499      	strb	r1, [r3, r2]

    datecontent = PCF2129_REG_YEARS;
 800c98c:	240f      	movs	r4, #15
 800c98e:	193b      	adds	r3, r7, r4
 800c990:	2209      	movs	r2, #9
 800c992:	701a      	strb	r2, [r3, #0]
    HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &datecontent, 1, I2C_TIMEOUT);
 800c994:	193a      	adds	r2, r7, r4
 800c996:	4812      	ldr	r0, [pc, #72]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c998:	231e      	movs	r3, #30
 800c99a:	9300      	str	r3, [sp, #0]
 800c99c:	2301      	movs	r3, #1
 800c99e:	21a2      	movs	r1, #162	@ 0xa2
 800c9a0:	f001 fff0 	bl	800e984 <HAL_I2C_Master_Transmit>
    if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &datecontent, 1, I2C_TIMEOUT) == 0)
 800c9a4:	4b0e      	ldr	r3, [pc, #56]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c9a6:	224c      	movs	r2, #76	@ 0x4c
 800c9a8:	5c9b      	ldrb	r3, [r3, r2]
 800c9aa:	0019      	movs	r1, r3
 800c9ac:	193a      	adds	r2, r7, r4
 800c9ae:	480c      	ldr	r0, [pc, #48]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c9b0:	231e      	movs	r3, #30
 800c9b2:	9300      	str	r3, [sp, #0]
 800c9b4:	2301      	movs	r3, #1
 800c9b6:	f002 f8ed 	bl	800eb94 <HAL_I2C_Master_Receive>
 800c9ba:	1e03      	subs	r3, r0, #0
 800c9bc:	d104      	bne.n	800c9c8 <PCF2129_getDate+0x170>
        pcf2129.date.y= datecontent;
 800c9be:	193b      	adds	r3, r7, r4
 800c9c0:	7819      	ldrb	r1, [r3, #0]
 800c9c2:	4b07      	ldr	r3, [pc, #28]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c9c4:	224d      	movs	r2, #77	@ 0x4d
 800c9c6:	5499      	strb	r1, [r3, r2]
	pcf2129.date.hh = PCF2129_read(PCF2129_REG_HOURS);
	pcf2129.date.d = PCF2129_read(PCF2129_REG_DAYS);
	pcf2129.date.m = PCF2129_read(PCF2129_REG_MONTHS);
	pcf2129.date.y = PCF2129_read(PCF2129_REG_YEARS);
	*/
    return pcf2129;
 800c9c8:	687a      	ldr	r2, [r7, #4]
 800c9ca:	4b05      	ldr	r3, [pc, #20]	@ (800c9e0 <PCF2129_getDate+0x188>)
 800c9cc:	0010      	movs	r0, r2
 800c9ce:	0019      	movs	r1, r3
 800c9d0:	2358      	movs	r3, #88	@ 0x58
 800c9d2:	001a      	movs	r2, r3
 800c9d4:	f00c f9bf 	bl	8018d56 <memcpy>
}
 800c9d8:	6878      	ldr	r0, [r7, #4]
 800c9da:	46bd      	mov	sp, r7
 800c9dc:	b005      	add	sp, #20
 800c9de:	bd90      	pop	{r4, r7, pc}
 800c9e0:	20003410 	.word	0x20003410

0800c9e4 <PCF2129_setDate>:
 *  @retva l: None
=============================================================================
*/
void PCF2129_setDate(uint16_t years, uint8_t months, uint8_t days,
                     uint8_t hours, uint8_t minutes, uint8_t seconds)
{
 800c9e4:	b5b0      	push	{r4, r5, r7, lr}
 800c9e6:	b082      	sub	sp, #8
 800c9e8:	af00      	add	r7, sp, #0
 800c9ea:	0005      	movs	r5, r0
 800c9ec:	000c      	movs	r4, r1
 800c9ee:	0010      	movs	r0, r2
 800c9f0:	0019      	movs	r1, r3
 800c9f2:	1dbb      	adds	r3, r7, #6
 800c9f4:	1c2a      	adds	r2, r5, #0
 800c9f6:	801a      	strh	r2, [r3, #0]
 800c9f8:	1d7b      	adds	r3, r7, #5
 800c9fa:	1c22      	adds	r2, r4, #0
 800c9fc:	701a      	strb	r2, [r3, #0]
 800c9fe:	1d3b      	adds	r3, r7, #4
 800ca00:	1c02      	adds	r2, r0, #0
 800ca02:	701a      	strb	r2, [r3, #0]
 800ca04:	1cfb      	adds	r3, r7, #3
 800ca06:	1c0a      	adds	r2, r1, #0
 800ca08:	701a      	strb	r2, [r3, #0]
    PCF2129_write(PCF2129_REG_SECONDS,seconds);
 800ca0a:	231c      	movs	r3, #28
 800ca0c:	18fb      	adds	r3, r7, r3
 800ca0e:	781b      	ldrb	r3, [r3, #0]
 800ca10:	0019      	movs	r1, r3
 800ca12:	2003      	movs	r0, #3
 800ca14:	f000 f86a 	bl	800caec <PCF2129_write>
    PCF2129_write(PCF2129_REG_MINUTES,minutes);
 800ca18:	2318      	movs	r3, #24
 800ca1a:	18fb      	adds	r3, r7, r3
 800ca1c:	781b      	ldrb	r3, [r3, #0]
 800ca1e:	0019      	movs	r1, r3
 800ca20:	2004      	movs	r0, #4
 800ca22:	f000 f863 	bl	800caec <PCF2129_write>
    PCF2129_write(PCF2129_REG_HOURS,hours);
 800ca26:	1cfb      	adds	r3, r7, #3
 800ca28:	781b      	ldrb	r3, [r3, #0]
 800ca2a:	0019      	movs	r1, r3
 800ca2c:	2005      	movs	r0, #5
 800ca2e:	f000 f85d 	bl	800caec <PCF2129_write>
    PCF2129_write(PCF2129_REG_DAYS,days);
 800ca32:	1d3b      	adds	r3, r7, #4
 800ca34:	781b      	ldrb	r3, [r3, #0]
 800ca36:	0019      	movs	r1, r3
 800ca38:	2006      	movs	r0, #6
 800ca3a:	f000 f857 	bl	800caec <PCF2129_write>
    PCF2129_write(PCF2129_REG_WEEKDAYS,0x00);
 800ca3e:	2100      	movs	r1, #0
 800ca40:	2007      	movs	r0, #7
 800ca42:	f000 f853 	bl	800caec <PCF2129_write>
    PCF2129_write(PCF2129_REG_MONTHS,months);
 800ca46:	1d7b      	adds	r3, r7, #5
 800ca48:	781b      	ldrb	r3, [r3, #0]
 800ca4a:	0019      	movs	r1, r3
 800ca4c:	2008      	movs	r0, #8
 800ca4e:	f000 f84d 	bl	800caec <PCF2129_write>
    PCF2129_write(PCF2129_REG_YEARS,years);
 800ca52:	1dbb      	adds	r3, r7, #6
 800ca54:	881b      	ldrh	r3, [r3, #0]
 800ca56:	b2db      	uxtb	r3, r3
 800ca58:	0019      	movs	r1, r3
 800ca5a:	2009      	movs	r0, #9
 800ca5c:	f000 f846 	bl	800caec <PCF2129_write>
}
 800ca60:	46c0      	nop			@ (mov r8, r8)
 800ca62:	46bd      	mov	sp, r7
 800ca64:	b002      	add	sp, #8
 800ca66:	bdb0      	pop	{r4, r5, r7, pc}

0800ca68 <PCF2129_set24mode>:
 *  @note :
 *  @param :None
 *  @retva l: None
=============================================================================
*/
void PCF2129_set24mode(void) {
 800ca68:	b590      	push	{r4, r7, lr}
 800ca6a:	b083      	sub	sp, #12
 800ca6c:	af00      	add	r7, sp, #0
	uint8_t ctrl;
	ctrl = PCF2129_readCtrl(PCF2129_REG_CONTROL1);
 800ca6e:	1dfc      	adds	r4, r7, #7
 800ca70:	2000      	movs	r0, #0
 800ca72:	f000 f85b 	bl	800cb2c <PCF2129_readCtrl>
 800ca76:	0003      	movs	r3, r0
 800ca78:	7023      	strb	r3, [r4, #0]
	ctrl &= ~(PCF2129_CONTROL_12_24);
 800ca7a:	1dfb      	adds	r3, r7, #7
 800ca7c:	1dfa      	adds	r2, r7, #7
 800ca7e:	7812      	ldrb	r2, [r2, #0]
 800ca80:	2104      	movs	r1, #4
 800ca82:	438a      	bics	r2, r1
 800ca84:	701a      	strb	r2, [r3, #0]
	PCF2129_writeCtrl(PCF2129_REG_CONTROL1, ctrl);
 800ca86:	1dfb      	adds	r3, r7, #7
 800ca88:	781b      	ldrb	r3, [r3, #0]
 800ca8a:	0019      	movs	r1, r3
 800ca8c:	2000      	movs	r0, #0
 800ca8e:	f000 f85b 	bl	800cb48 <PCF2129_writeCtrl>
}
 800ca92:	46c0      	nop			@ (mov r8, r8)
 800ca94:	46bd      	mov	sp, r7
 800ca96:	b003      	add	sp, #12
 800ca98:	bd90      	pop	{r4, r7, pc}
	...

0800ca9c <PCF2129_read>:
 *  @param :None
 *  @retva l: None
=============================================================================
*/
uint8_t PCF2129_read(uint8_t address)
{
 800ca9c:	b580      	push	{r7, lr}
 800ca9e:	b084      	sub	sp, #16
 800caa0:	af02      	add	r7, sp, #8
 800caa2:	0002      	movs	r2, r0
 800caa4:	1dfb      	adds	r3, r7, #7
 800caa6:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&(pcf2129.i2c_h), 0xA2,  &address, 1, I2C_TIMEOUT);
 800caa8:	1dfa      	adds	r2, r7, #7
 800caaa:	480f      	ldr	r0, [pc, #60]	@ (800cae8 <PCF2129_read+0x4c>)
 800caac:	231e      	movs	r3, #30
 800caae:	9300      	str	r3, [sp, #0]
 800cab0:	2301      	movs	r3, #1
 800cab2:	21a2      	movs	r1, #162	@ 0xa2
 800cab4:	f001 ff66 	bl	800e984 <HAL_I2C_Master_Transmit>
	if (HAL_I2C_Master_Receive(&(pcf2129.i2c_h), pcf2129.i2caddr, &address, 1, I2C_TIMEOUT) == 0)
 800cab8:	4b0b      	ldr	r3, [pc, #44]	@ (800cae8 <PCF2129_read+0x4c>)
 800caba:	224c      	movs	r2, #76	@ 0x4c
 800cabc:	5c9b      	ldrb	r3, [r3, r2]
 800cabe:	0019      	movs	r1, r3
 800cac0:	1dfa      	adds	r2, r7, #7
 800cac2:	4809      	ldr	r0, [pc, #36]	@ (800cae8 <PCF2129_read+0x4c>)
 800cac4:	231e      	movs	r3, #30
 800cac6:	9300      	str	r3, [sp, #0]
 800cac8:	2301      	movs	r3, #1
 800caca:	f002 f863 	bl	800eb94 <HAL_I2C_Master_Receive>
 800cace:	1e03      	subs	r3, r0, #0
 800cad0:	d104      	bne.n	800cadc <PCF2129_read+0x40>
	    	pcf2129.cdata.data = address;
 800cad2:	1dfb      	adds	r3, r7, #7
 800cad4:	7819      	ldrb	r1, [r3, #0]
 800cad6:	4b04      	ldr	r3, [pc, #16]	@ (800cae8 <PCF2129_read+0x4c>)
 800cad8:	2254      	movs	r2, #84	@ 0x54
 800cada:	5499      	strb	r1, [r3, r2]

	return address;
 800cadc:	1dfb      	adds	r3, r7, #7
 800cade:	781b      	ldrb	r3, [r3, #0]
	/*
	uint8_t data;
	HAL_I2C_Mem_Read(&(pcf2129.i2c_h), pcf2129.i2caddr, address-1, 1, &data, 1, I2C_TIMEOUT);
	return data;
	*/
}
 800cae0:	0018      	movs	r0, r3
 800cae2:	46bd      	mov	sp, r7
 800cae4:	b002      	add	sp, #8
 800cae6:	bd80      	pop	{r7, pc}
 800cae8:	20003410 	.word	0x20003410

0800caec <PCF2129_write>:
 *  @param :None
 *  @retva l: None
=============================================================================
*/
void PCF2129_write(uint8_t address, uint8_t data)
{
 800caec:	b580      	push	{r7, lr}
 800caee:	b086      	sub	sp, #24
 800caf0:	af04      	add	r7, sp, #16
 800caf2:	0002      	movs	r2, r0
 800caf4:	1dfb      	adds	r3, r7, #7
 800caf6:	701a      	strb	r2, [r3, #0]
 800caf8:	1dbb      	adds	r3, r7, #6
 800cafa:	1c0a      	adds	r2, r1, #0
 800cafc:	701a      	strb	r2, [r3, #0]
    HAL_I2C_Mem_Write(&(pcf2129.i2c_h), pcf2129.i2caddr, address, 1, &data, 1, I2C_TIMEOUT);
 800cafe:	4b0a      	ldr	r3, [pc, #40]	@ (800cb28 <PCF2129_write+0x3c>)
 800cb00:	224c      	movs	r2, #76	@ 0x4c
 800cb02:	5c9b      	ldrb	r3, [r3, r2]
 800cb04:	0019      	movs	r1, r3
 800cb06:	1dfb      	adds	r3, r7, #7
 800cb08:	781b      	ldrb	r3, [r3, #0]
 800cb0a:	b29a      	uxth	r2, r3
 800cb0c:	4806      	ldr	r0, [pc, #24]	@ (800cb28 <PCF2129_write+0x3c>)
 800cb0e:	231e      	movs	r3, #30
 800cb10:	9302      	str	r3, [sp, #8]
 800cb12:	2301      	movs	r3, #1
 800cb14:	9301      	str	r3, [sp, #4]
 800cb16:	1dbb      	adds	r3, r7, #6
 800cb18:	9300      	str	r3, [sp, #0]
 800cb1a:	2301      	movs	r3, #1
 800cb1c:	f002 f942 	bl	800eda4 <HAL_I2C_Mem_Write>
}
 800cb20:	46c0      	nop			@ (mov r8, r8)
 800cb22:	46bd      	mov	sp, r7
 800cb24:	b002      	add	sp, #8
 800cb26:	bd80      	pop	{r7, pc}
 800cb28:	20003410 	.word	0x20003410

0800cb2c <PCF2129_readCtrl>:
 *  @note :
 *  @param :None
 *  @retva l: None
=============================================================================
*/
uint8_t PCF2129_readCtrl(uint8_t address) {
 800cb2c:	b580      	push	{r7, lr}
 800cb2e:	b082      	sub	sp, #8
 800cb30:	af00      	add	r7, sp, #0
 800cb32:	0002      	movs	r2, r0
 800cb34:	1dfb      	adds	r3, r7, #7
 800cb36:	701a      	strb	r2, [r3, #0]
    return PCF2129_read(PCF2129_REG_CONTROL1);
 800cb38:	2000      	movs	r0, #0
 800cb3a:	f7ff ffaf 	bl	800ca9c <PCF2129_read>
 800cb3e:	0003      	movs	r3, r0
}
 800cb40:	0018      	movs	r0, r3
 800cb42:	46bd      	mov	sp, r7
 800cb44:	b002      	add	sp, #8
 800cb46:	bd80      	pop	{r7, pc}

0800cb48 <PCF2129_writeCtrl>:
 *  @note :
 *  @param :None
 *  @retva l: None
=============================================================================
*/
void PCF2129_writeCtrl(uint8_t address, uint8_t data) {
 800cb48:	b580      	push	{r7, lr}
 800cb4a:	b082      	sub	sp, #8
 800cb4c:	af00      	add	r7, sp, #0
 800cb4e:	0002      	movs	r2, r0
 800cb50:	1dfb      	adds	r3, r7, #7
 800cb52:	701a      	strb	r2, [r3, #0]
 800cb54:	1dbb      	adds	r3, r7, #6
 800cb56:	1c0a      	adds	r2, r1, #0
 800cb58:	701a      	strb	r2, [r3, #0]
    PCF2129_write(PCF2129_REG_CONTROL1, data);
 800cb5a:	1dbb      	adds	r3, r7, #6
 800cb5c:	781b      	ldrb	r3, [r3, #0]
 800cb5e:	0019      	movs	r1, r3
 800cb60:	2000      	movs	r0, #0
 800cb62:	f7ff ffc3 	bl	800caec <PCF2129_write>
}
 800cb66:	46c0      	nop			@ (mov r8, r8)
 800cb68:	46bd      	mov	sp, r7
 800cb6a:	b002      	add	sp, #8
 800cb6c:	bd80      	pop	{r7, pc}

0800cb6e <bcdToDec>:
 *  @note :
 *  @param :None
 *  @retva l: None
=============================================================================
*/
uint8_t bcdToDec(uint8_t value) {
 800cb6e:	b580      	push	{r7, lr}
 800cb70:	b082      	sub	sp, #8
 800cb72:	af00      	add	r7, sp, #0
 800cb74:	0002      	movs	r2, r0
 800cb76:	1dfb      	adds	r3, r7, #7
 800cb78:	701a      	strb	r2, [r3, #0]
    return (uint8_t) ( (value/16*10) + (value%16) );
 800cb7a:	1dfb      	adds	r3, r7, #7
 800cb7c:	781b      	ldrb	r3, [r3, #0]
 800cb7e:	091b      	lsrs	r3, r3, #4
 800cb80:	b2db      	uxtb	r3, r3
 800cb82:	1c1a      	adds	r2, r3, #0
 800cb84:	0092      	lsls	r2, r2, #2
 800cb86:	18d3      	adds	r3, r2, r3
 800cb88:	18db      	adds	r3, r3, r3
 800cb8a:	b2da      	uxtb	r2, r3
 800cb8c:	1dfb      	adds	r3, r7, #7
 800cb8e:	781b      	ldrb	r3, [r3, #0]
 800cb90:	210f      	movs	r1, #15
 800cb92:	400b      	ands	r3, r1
 800cb94:	b2db      	uxtb	r3, r3
 800cb96:	18d3      	adds	r3, r2, r3
 800cb98:	b2db      	uxtb	r3, r3
}
 800cb9a:	0018      	movs	r0, r3
 800cb9c:	46bd      	mov	sp, r7
 800cb9e:	b002      	add	sp, #8
 800cba0:	bd80      	pop	{r7, pc}

0800cba2 <decToBcd>:
 *  @note :
 *  @param :None
 *  @retva l: None
=============================================================================
*/
uint8_t decToBcd(uint8_t value) {
 800cba2:	b590      	push	{r4, r7, lr}
 800cba4:	b083      	sub	sp, #12
 800cba6:	af00      	add	r7, sp, #0
 800cba8:	0002      	movs	r2, r0
 800cbaa:	1dfb      	adds	r3, r7, #7
 800cbac:	701a      	strb	r2, [r3, #0]
    return (uint8_t) ( (value/10*16) + (value%10) );
 800cbae:	1dfb      	adds	r3, r7, #7
 800cbb0:	781b      	ldrb	r3, [r3, #0]
 800cbb2:	210a      	movs	r1, #10
 800cbb4:	0018      	movs	r0, r3
 800cbb6:	f7f3 fab7 	bl	8000128 <__udivsi3>
 800cbba:	0003      	movs	r3, r0
 800cbbc:	b2db      	uxtb	r3, r3
 800cbbe:	011b      	lsls	r3, r3, #4
 800cbc0:	b2dc      	uxtb	r4, r3
 800cbc2:	1dfb      	adds	r3, r7, #7
 800cbc4:	781b      	ldrb	r3, [r3, #0]
 800cbc6:	210a      	movs	r1, #10
 800cbc8:	0018      	movs	r0, r3
 800cbca:	f7f3 fb33 	bl	8000234 <__aeabi_uidivmod>
 800cbce:	000b      	movs	r3, r1
 800cbd0:	b2db      	uxtb	r3, r3
 800cbd2:	18e3      	adds	r3, r4, r3
 800cbd4:	b2db      	uxtb	r3, r3
}
 800cbd6:	0018      	movs	r0, r3
 800cbd8:	46bd      	mov	sp, r7
 800cbda:	b003      	add	sp, #12
 800cbdc:	bd90      	pop	{r4, r7, pc}
	...

0800cbe0 <unixToUtc>:
 *  @param :None
 *  @retva l: None
=============================================================================
*/
utc_t unixToUtc(uint32_t u32UnixTimeStamp)
{
 800cbe0:	b590      	push	{r4, r7, lr}
 800cbe2:	b08f      	sub	sp, #60	@ 0x3c
 800cbe4:	af00      	add	r7, sp, #0
 800cbe6:	6078      	str	r0, [r7, #4]
 800cbe8:	6039      	str	r1, [r7, #0]
	uint8_t flat_year_month_day[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
 800cbea:	231c      	movs	r3, #28
 800cbec:	18fb      	adds	r3, r7, r3
 800cbee:	4a99      	ldr	r2, [pc, #612]	@ (800ce54 <unixToUtc+0x274>)
 800cbf0:	ca13      	ldmia	r2!, {r0, r1, r4}
 800cbf2:	c313      	stmia	r3!, {r0, r1, r4}
 800cbf4:	7812      	ldrb	r2, [r2, #0]
 800cbf6:	701a      	strb	r2, [r3, #0]
	uint8_t leap_year_month_day[13] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
 800cbf8:	230c      	movs	r3, #12
 800cbfa:	18fb      	adds	r3, r7, r3
 800cbfc:	4a96      	ldr	r2, [pc, #600]	@ (800ce58 <unixToUtc+0x278>)
 800cbfe:	ca13      	ldmia	r2!, {r0, r1, r4}
 800cc00:	c313      	stmia	r3!, {r0, r1, r4}
 800cc02:	7812      	ldrb	r2, [r2, #0]
 800cc04:	701a      	strb	r2, [r3, #0]

	int32_t year_temp = 0;
 800cc06:	2300      	movs	r3, #0
 800cc08:	637b      	str	r3, [r7, #52]	@ 0x34
	int32_t day_temp = 0;
 800cc0a:	2300      	movs	r3, #0
 800cc0c:	633b      	str	r3, [r7, #48]	@ 0x30
	int32_t cnt_temp = 0;
 800cc0e:	2300      	movs	r3, #0
 800cc10:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint8_t is_leap_or_flat_year;
	uint8_t i;

	cnt_temp = u32UnixTimeStamp;
 800cc12:	683b      	ldr	r3, [r7, #0]
 800cc14:	62fb      	str	r3, [r7, #44]	@ 0x2c

	while(cnt_temp >= 126230400)
 800cc16:	e007      	b.n	800cc28 <unixToUtc+0x48>
	{
		year_temp ++;
 800cc18:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cc1a:	3301      	adds	r3, #1
 800cc1c:	637b      	str	r3, [r7, #52]	@ 0x34
		cnt_temp = cnt_temp - 126230400;
 800cc1e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc20:	4a8e      	ldr	r2, [pc, #568]	@ (800ce5c <unixToUtc+0x27c>)
 800cc22:	4694      	mov	ip, r2
 800cc24:	4463      	add	r3, ip
 800cc26:	62fb      	str	r3, [r7, #44]	@ 0x2c
	while(cnt_temp >= 126230400)
 800cc28:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc2a:	4a8d      	ldr	r2, [pc, #564]	@ (800ce60 <unixToUtc+0x280>)
 800cc2c:	4293      	cmp	r3, r2
 800cc2e:	dcf3      	bgt.n	800cc18 <unixToUtc+0x38>
	}

	UtcTime.year = UNIX_TIME_YEAR + (4 * year_temp);
 800cc30:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cc32:	b2db      	uxtb	r3, r3
 800cc34:	009b      	lsls	r3, r3, #2
 800cc36:	b2db      	uxtb	r3, r3
 800cc38:	3b4e      	subs	r3, #78	@ 0x4e
 800cc3a:	b2da      	uxtb	r2, r3
 800cc3c:	4b89      	ldr	r3, [pc, #548]	@ (800ce64 <unixToUtc+0x284>)
 800cc3e:	701a      	strb	r2, [r3, #0]

	if(cnt_temp >= 31536000)
 800cc40:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc42:	4a89      	ldr	r2, [pc, #548]	@ (800ce68 <unixToUtc+0x288>)
 800cc44:	4293      	cmp	r3, r2
 800cc46:	dd37      	ble.n	800ccb8 <unixToUtc+0xd8>
	{
		UtcTime.year ++;
 800cc48:	4b86      	ldr	r3, [pc, #536]	@ (800ce64 <unixToUtc+0x284>)
 800cc4a:	781b      	ldrb	r3, [r3, #0]
 800cc4c:	3301      	adds	r3, #1
 800cc4e:	b2da      	uxtb	r2, r3
 800cc50:	4b84      	ldr	r3, [pc, #528]	@ (800ce64 <unixToUtc+0x284>)
 800cc52:	701a      	strb	r2, [r3, #0]
		cnt_temp -= 31536000;
 800cc54:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc56:	4a85      	ldr	r2, [pc, #532]	@ (800ce6c <unixToUtc+0x28c>)
 800cc58:	4694      	mov	ip, r2
 800cc5a:	4463      	add	r3, ip
 800cc5c:	62fb      	str	r3, [r7, #44]	@ 0x2c

		if(cnt_temp >= 31536000)
 800cc5e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc60:	4a81      	ldr	r2, [pc, #516]	@ (800ce68 <unixToUtc+0x288>)
 800cc62:	4293      	cmp	r3, r2
 800cc64:	dd28      	ble.n	800ccb8 <unixToUtc+0xd8>
		{
			UtcTime.year ++;
 800cc66:	4b7f      	ldr	r3, [pc, #508]	@ (800ce64 <unixToUtc+0x284>)
 800cc68:	781b      	ldrb	r3, [r3, #0]
 800cc6a:	3301      	adds	r3, #1
 800cc6c:	b2da      	uxtb	r2, r3
 800cc6e:	4b7d      	ldr	r3, [pc, #500]	@ (800ce64 <unixToUtc+0x284>)
 800cc70:	701a      	strb	r2, [r3, #0]
			cnt_temp -= 31536000;
 800cc72:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc74:	4a7d      	ldr	r2, [pc, #500]	@ (800ce6c <unixToUtc+0x28c>)
 800cc76:	4694      	mov	ip, r2
 800cc78:	4463      	add	r3, ip
 800cc7a:	62fb      	str	r3, [r7, #44]	@ 0x2c

			if(cnt_temp >= 31622400)
 800cc7c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc7e:	4a7c      	ldr	r2, [pc, #496]	@ (800ce70 <unixToUtc+0x290>)
 800cc80:	4293      	cmp	r3, r2
 800cc82:	dd19      	ble.n	800ccb8 <unixToUtc+0xd8>
			{
				UtcTime.year ++;
 800cc84:	4b77      	ldr	r3, [pc, #476]	@ (800ce64 <unixToUtc+0x284>)
 800cc86:	781b      	ldrb	r3, [r3, #0]
 800cc88:	3301      	adds	r3, #1
 800cc8a:	b2da      	uxtb	r2, r3
 800cc8c:	4b75      	ldr	r3, [pc, #468]	@ (800ce64 <unixToUtc+0x284>)
 800cc8e:	701a      	strb	r2, [r3, #0]
				cnt_temp -= 31622400;
 800cc90:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc92:	4a78      	ldr	r2, [pc, #480]	@ (800ce74 <unixToUtc+0x294>)
 800cc94:	4694      	mov	ip, r2
 800cc96:	4463      	add	r3, ip
 800cc98:	62fb      	str	r3, [r7, #44]	@ 0x2c

				if(cnt_temp >= 31536000)
 800cc9a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cc9c:	4a72      	ldr	r2, [pc, #456]	@ (800ce68 <unixToUtc+0x288>)
 800cc9e:	4293      	cmp	r3, r2
 800cca0:	dd0a      	ble.n	800ccb8 <unixToUtc+0xd8>
				{
					UtcTime.year ++;
 800cca2:	4b70      	ldr	r3, [pc, #448]	@ (800ce64 <unixToUtc+0x284>)
 800cca4:	781b      	ldrb	r3, [r3, #0]
 800cca6:	3301      	adds	r3, #1
 800cca8:	b2da      	uxtb	r2, r3
 800ccaa:	4b6e      	ldr	r3, [pc, #440]	@ (800ce64 <unixToUtc+0x284>)
 800ccac:	701a      	strb	r2, [r3, #0]
					cnt_temp -= 31536000;
 800ccae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800ccb0:	4a6e      	ldr	r2, [pc, #440]	@ (800ce6c <unixToUtc+0x28c>)
 800ccb2:	4694      	mov	ip, r2
 800ccb4:	4463      	add	r3, ip
 800ccb6:	62fb      	str	r3, [r7, #44]	@ 0x2c
				}
			}
		}
	}

	if((((UtcTime.year % 4) == 0) && ((UtcTime.year % 100) != 0)) || ((UtcTime.year % 400) == 0))
 800ccb8:	4b6a      	ldr	r3, [pc, #424]	@ (800ce64 <unixToUtc+0x284>)
 800ccba:	781b      	ldrb	r3, [r3, #0]
 800ccbc:	2203      	movs	r2, #3
 800ccbe:	4013      	ands	r3, r2
 800ccc0:	b2db      	uxtb	r3, r3
 800ccc2:	2b00      	cmp	r3, #0
 800ccc4:	d109      	bne.n	800ccda <unixToUtc+0xfa>
 800ccc6:	4b67      	ldr	r3, [pc, #412]	@ (800ce64 <unixToUtc+0x284>)
 800ccc8:	781b      	ldrb	r3, [r3, #0]
 800ccca:	2164      	movs	r1, #100	@ 0x64
 800cccc:	0018      	movs	r0, r3
 800ccce:	f7f3 fab1 	bl	8000234 <__aeabi_uidivmod>
 800ccd2:	000b      	movs	r3, r1
 800ccd4:	b2db      	uxtb	r3, r3
 800ccd6:	2b00      	cmp	r3, #0
 800ccd8:	d109      	bne.n	800ccee <unixToUtc+0x10e>
 800ccda:	4b62      	ldr	r3, [pc, #392]	@ (800ce64 <unixToUtc+0x284>)
 800ccdc:	781b      	ldrb	r3, [r3, #0]
 800ccde:	001a      	movs	r2, r3
 800cce0:	23c8      	movs	r3, #200	@ 0xc8
 800cce2:	0059      	lsls	r1, r3, #1
 800cce4:	0010      	movs	r0, r2
 800cce6:	f7f3 fb8f 	bl	8000408 <__aeabi_idivmod>
 800ccea:	1e0b      	subs	r3, r1, #0
 800ccec:	d104      	bne.n	800ccf8 <unixToUtc+0x118>
	{
		is_leap_or_flat_year = LEAP_YEAR;
 800ccee:	232b      	movs	r3, #43	@ 0x2b
 800ccf0:	18fb      	adds	r3, r7, r3
 800ccf2:	2201      	movs	r2, #1
 800ccf4:	701a      	strb	r2, [r3, #0]
 800ccf6:	e003      	b.n	800cd00 <unixToUtc+0x120>
	}
	else
	{
		is_leap_or_flat_year = FLAT_YEAR;
 800ccf8:	232b      	movs	r3, #43	@ 0x2b
 800ccfa:	18fb      	adds	r3, r7, r3
 800ccfc:	2200      	movs	r2, #0
 800ccfe:	701a      	strb	r2, [r3, #0]
	}

	day_temp = cnt_temp / 86400;
 800cd00:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd02:	495d      	ldr	r1, [pc, #372]	@ (800ce78 <unixToUtc+0x298>)
 800cd04:	0018      	movs	r0, r3
 800cd06:	f7f3 fa99 	bl	800023c <__divsi3>
 800cd0a:	0003      	movs	r3, r0
 800cd0c:	633b      	str	r3, [r7, #48]	@ 0x30

	UtcTime.hour = (cnt_temp - day_temp * 86400) / 3600; //Calculate hours
 800cd0e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800cd10:	0013      	movs	r3, r2
 800cd12:	005b      	lsls	r3, r3, #1
 800cd14:	189b      	adds	r3, r3, r2
 800cd16:	011a      	lsls	r2, r3, #4
 800cd18:	1ad2      	subs	r2, r2, r3
 800cd1a:	0113      	lsls	r3, r2, #4
 800cd1c:	1a9b      	subs	r3, r3, r2
 800cd1e:	01db      	lsls	r3, r3, #7
 800cd20:	425a      	negs	r2, r3
 800cd22:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd24:	18d3      	adds	r3, r2, r3
 800cd26:	22e1      	movs	r2, #225	@ 0xe1
 800cd28:	0111      	lsls	r1, r2, #4
 800cd2a:	0018      	movs	r0, r3
 800cd2c:	f7f3 fa86 	bl	800023c <__divsi3>
 800cd30:	0003      	movs	r3, r0
 800cd32:	b2da      	uxtb	r2, r3
 800cd34:	4b4b      	ldr	r3, [pc, #300]	@ (800ce64 <unixToUtc+0x284>)
 800cd36:	70da      	strb	r2, [r3, #3]
	UtcTime.minute = (cnt_temp - day_temp * 86400 - UtcTime.hour * 3600) / 60; //Calculate minutes
 800cd38:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800cd3a:	0013      	movs	r3, r2
 800cd3c:	005b      	lsls	r3, r3, #1
 800cd3e:	189b      	adds	r3, r3, r2
 800cd40:	011a      	lsls	r2, r3, #4
 800cd42:	1ad2      	subs	r2, r2, r3
 800cd44:	0113      	lsls	r3, r2, #4
 800cd46:	1a9b      	subs	r3, r3, r2
 800cd48:	01db      	lsls	r3, r3, #7
 800cd4a:	425a      	negs	r2, r3
 800cd4c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd4e:	18d1      	adds	r1, r2, r3
 800cd50:	4b44      	ldr	r3, [pc, #272]	@ (800ce64 <unixToUtc+0x284>)
 800cd52:	78db      	ldrb	r3, [r3, #3]
 800cd54:	001a      	movs	r2, r3
 800cd56:	0013      	movs	r3, r2
 800cd58:	051b      	lsls	r3, r3, #20
 800cd5a:	1a9b      	subs	r3, r3, r2
 800cd5c:	00db      	lsls	r3, r3, #3
 800cd5e:	189b      	adds	r3, r3, r2
 800cd60:	015b      	lsls	r3, r3, #5
 800cd62:	1a9b      	subs	r3, r3, r2
 800cd64:	011b      	lsls	r3, r3, #4
 800cd66:	18cb      	adds	r3, r1, r3
 800cd68:	213c      	movs	r1, #60	@ 0x3c
 800cd6a:	0018      	movs	r0, r3
 800cd6c:	f7f3 fa66 	bl	800023c <__divsi3>
 800cd70:	0003      	movs	r3, r0
 800cd72:	b2da      	uxtb	r2, r3
 800cd74:	4b3b      	ldr	r3, [pc, #236]	@ (800ce64 <unixToUtc+0x284>)
 800cd76:	711a      	strb	r2, [r3, #4]
	UtcTime.second = cnt_temp % 60;
 800cd78:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800cd7a:	213c      	movs	r1, #60	@ 0x3c
 800cd7c:	0018      	movs	r0, r3
 800cd7e:	f7f3 fb43 	bl	8000408 <__aeabi_idivmod>
 800cd82:	000b      	movs	r3, r1
 800cd84:	b2da      	uxtb	r2, r3
 800cd86:	4b37      	ldr	r3, [pc, #220]	@ (800ce64 <unixToUtc+0x284>)
 800cd88:	715a      	strb	r2, [r3, #5]

	UtcTime.month = 1;
 800cd8a:	4b36      	ldr	r3, [pc, #216]	@ (800ce64 <unixToUtc+0x284>)
 800cd8c:	2201      	movs	r2, #1
 800cd8e:	705a      	strb	r2, [r3, #1]
	for(i = 0; i < 12; i ++)
 800cd90:	232a      	movs	r3, #42	@ 0x2a
 800cd92:	18fb      	adds	r3, r7, r3
 800cd94:	2200      	movs	r2, #0
 800cd96:	701a      	strb	r2, [r3, #0]
 800cd98:	e044      	b.n	800ce24 <unixToUtc+0x244>
	{
		if(is_leap_or_flat_year == FLAT_YEAR)
 800cd9a:	232b      	movs	r3, #43	@ 0x2b
 800cd9c:	18fb      	adds	r3, r7, r3
 800cd9e:	781b      	ldrb	r3, [r3, #0]
 800cda0:	2b00      	cmp	r3, #0
 800cda2:	d11a      	bne.n	800cdda <unixToUtc+0x1fa>
		{
			if(day_temp >= flat_year_month_day[i + 1])
 800cda4:	212a      	movs	r1, #42	@ 0x2a
 800cda6:	187b      	adds	r3, r7, r1
 800cda8:	781b      	ldrb	r3, [r3, #0]
 800cdaa:	3301      	adds	r3, #1
 800cdac:	201c      	movs	r0, #28
 800cdae:	183a      	adds	r2, r7, r0
 800cdb0:	5cd3      	ldrb	r3, [r2, r3]
 800cdb2:	001a      	movs	r2, r3
 800cdb4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cdb6:	4293      	cmp	r3, r2
 800cdb8:	db2e      	blt.n	800ce18 <unixToUtc+0x238>
			{
				UtcTime.month ++; day_temp -= flat_year_month_day[i + 1];
 800cdba:	4b2a      	ldr	r3, [pc, #168]	@ (800ce64 <unixToUtc+0x284>)
 800cdbc:	785b      	ldrb	r3, [r3, #1]
 800cdbe:	3301      	adds	r3, #1
 800cdc0:	b2da      	uxtb	r2, r3
 800cdc2:	4b28      	ldr	r3, [pc, #160]	@ (800ce64 <unixToUtc+0x284>)
 800cdc4:	705a      	strb	r2, [r3, #1]
 800cdc6:	187b      	adds	r3, r7, r1
 800cdc8:	781b      	ldrb	r3, [r3, #0]
 800cdca:	3301      	adds	r3, #1
 800cdcc:	183a      	adds	r2, r7, r0
 800cdce:	5cd3      	ldrb	r3, [r2, r3]
 800cdd0:	001a      	movs	r2, r3
 800cdd2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cdd4:	1a9b      	subs	r3, r3, r2
 800cdd6:	633b      	str	r3, [r7, #48]	@ 0x30
 800cdd8:	e01e      	b.n	800ce18 <unixToUtc+0x238>
			}
		}
		else if(is_leap_or_flat_year == LEAP_YEAR)
 800cdda:	232b      	movs	r3, #43	@ 0x2b
 800cddc:	18fb      	adds	r3, r7, r3
 800cdde:	781b      	ldrb	r3, [r3, #0]
 800cde0:	2b01      	cmp	r3, #1
 800cde2:	d119      	bne.n	800ce18 <unixToUtc+0x238>
		{
			if(day_temp >= leap_year_month_day[i + 1])
 800cde4:	212a      	movs	r1, #42	@ 0x2a
 800cde6:	187b      	adds	r3, r7, r1
 800cde8:	781b      	ldrb	r3, [r3, #0]
 800cdea:	3301      	adds	r3, #1
 800cdec:	200c      	movs	r0, #12
 800cdee:	183a      	adds	r2, r7, r0
 800cdf0:	5cd3      	ldrb	r3, [r2, r3]
 800cdf2:	001a      	movs	r2, r3
 800cdf4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cdf6:	4293      	cmp	r3, r2
 800cdf8:	db0e      	blt.n	800ce18 <unixToUtc+0x238>
			{
				UtcTime.month ++;
 800cdfa:	4b1a      	ldr	r3, [pc, #104]	@ (800ce64 <unixToUtc+0x284>)
 800cdfc:	785b      	ldrb	r3, [r3, #1]
 800cdfe:	3301      	adds	r3, #1
 800ce00:	b2da      	uxtb	r2, r3
 800ce02:	4b18      	ldr	r3, [pc, #96]	@ (800ce64 <unixToUtc+0x284>)
 800ce04:	705a      	strb	r2, [r3, #1]
				day_temp -= leap_year_month_day[i + 1];
 800ce06:	187b      	adds	r3, r7, r1
 800ce08:	781b      	ldrb	r3, [r3, #0]
 800ce0a:	3301      	adds	r3, #1
 800ce0c:	183a      	adds	r2, r7, r0
 800ce0e:	5cd3      	ldrb	r3, [r2, r3]
 800ce10:	001a      	movs	r2, r3
 800ce12:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ce14:	1a9b      	subs	r3, r3, r2
 800ce16:	633b      	str	r3, [r7, #48]	@ 0x30
	for(i = 0; i < 12; i ++)
 800ce18:	212a      	movs	r1, #42	@ 0x2a
 800ce1a:	187b      	adds	r3, r7, r1
 800ce1c:	781a      	ldrb	r2, [r3, #0]
 800ce1e:	187b      	adds	r3, r7, r1
 800ce20:	3201      	adds	r2, #1
 800ce22:	701a      	strb	r2, [r3, #0]
 800ce24:	232a      	movs	r3, #42	@ 0x2a
 800ce26:	18fb      	adds	r3, r7, r3
 800ce28:	781b      	ldrb	r3, [r3, #0]
 800ce2a:	2b0b      	cmp	r3, #11
 800ce2c:	d9b5      	bls.n	800cd9a <unixToUtc+0x1ba>
			}
		}
	}

	UtcTime.date = day_temp + 1;
 800ce2e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ce30:	b2db      	uxtb	r3, r3
 800ce32:	3301      	adds	r3, #1
 800ce34:	b2da      	uxtb	r2, r3
 800ce36:	4b0b      	ldr	r3, [pc, #44]	@ (800ce64 <unixToUtc+0x284>)
 800ce38:	709a      	strb	r2, [r3, #2]

	return UtcTime;
 800ce3a:	687a      	ldr	r2, [r7, #4]
 800ce3c:	4b09      	ldr	r3, [pc, #36]	@ (800ce64 <unixToUtc+0x284>)
 800ce3e:	0010      	movs	r0, r2
 800ce40:	0019      	movs	r1, r3
 800ce42:	2306      	movs	r3, #6
 800ce44:	001a      	movs	r2, r3
 800ce46:	f00b ff86 	bl	8018d56 <memcpy>
}
 800ce4a:	6878      	ldr	r0, [r7, #4]
 800ce4c:	46bd      	mov	sp, r7
 800ce4e:	b00f      	add	sp, #60	@ 0x3c
 800ce50:	bd90      	pop	{r4, r7, pc}
 800ce52:	46c0      	nop			@ (mov r8, r8)
 800ce54:	08019d80 	.word	0x08019d80
 800ce58:	08019d90 	.word	0x08019d90
 800ce5c:	f879e080 	.word	0xf879e080
 800ce60:	07861f7f 	.word	0x07861f7f
 800ce64:	20000c84 	.word	0x20000c84
 800ce68:	01e1337f 	.word	0x01e1337f
 800ce6c:	fe1ecc80 	.word	0xfe1ecc80
 800ce70:	01e284ff 	.word	0x01e284ff
 800ce74:	fe1d7b00 	.word	0xfe1d7b00
 800ce78:	00015180 	.word	0x00015180

0800ce7c <utcToUnix>:
 *  @param :None
 *  @retva l: None
=============================================================================
*/
uint32_t utcToUnix(time_tt *time)
{
 800ce7c:	b590      	push	{r4, r7, lr}
 800ce7e:	b08f      	sub	sp, #60	@ 0x3c
 800ce80:	af00      	add	r7, sp, #0
 800ce82:	6078      	str	r0, [r7, #4]
	uint8_t FlatYearMonthDay[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
 800ce84:	2318      	movs	r3, #24
 800ce86:	18fb      	adds	r3, r7, r3
 800ce88:	4a84      	ldr	r2, [pc, #528]	@ (800d09c <utcToUnix+0x220>)
 800ce8a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800ce8c:	c313      	stmia	r3!, {r0, r1, r4}
 800ce8e:	7812      	ldrb	r2, [r2, #0]
 800ce90:	701a      	strb	r2, [r3, #0]
	uint8_t LeapYearMonthDay[13] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
 800ce92:	2308      	movs	r3, #8
 800ce94:	18fb      	adds	r3, r7, r3
 800ce96:	4a82      	ldr	r2, [pc, #520]	@ (800d0a0 <utcToUnix+0x224>)
 800ce98:	ca13      	ldmia	r2!, {r0, r1, r4}
 800ce9a:	c313      	stmia	r3!, {r0, r1, r4}
 800ce9c:	7812      	ldrb	r2, [r2, #0]
 800ce9e:	701a      	strb	r2, [r3, #0]

	uint16_t i;
	uint16_t ThisYear;

	uint16_t LeapYearNumber = 0;
 800cea0:	2332      	movs	r3, #50	@ 0x32
 800cea2:	18fb      	adds	r3, r7, r3
 800cea4:	2200      	movs	r2, #0
 800cea6:	801a      	strh	r2, [r3, #0]
	uint16_t FlatYearNumber = 0;
 800cea8:	2330      	movs	r3, #48	@ 0x30
 800ceaa:	18fb      	adds	r3, r7, r3
 800ceac:	2200      	movs	r2, #0
 800ceae:	801a      	strh	r2, [r3, #0]
	uint16_t LastMonDays =  0;
 800ceb0:	232e      	movs	r3, #46	@ 0x2e
 800ceb2:	18fb      	adds	r3, r7, r3
 800ceb4:	2200      	movs	r2, #0
 800ceb6:	801a      	strh	r2, [r3, #0]

	uint32_t TimeStamp = 0;
 800ceb8:	2300      	movs	r3, #0
 800ceba:	62bb      	str	r3, [r7, #40]	@ 0x28

	for (i = 1970; i < stCurrentTime.year; i ++)
 800cebc:	2336      	movs	r3, #54	@ 0x36
 800cebe:	18fb      	adds	r3, r7, r3
 800cec0:	4a78      	ldr	r2, [pc, #480]	@ (800d0a4 <utcToUnix+0x228>)
 800cec2:	801a      	strh	r2, [r3, #0]
 800cec4:	e030      	b.n	800cf28 <utcToUnix+0xac>
	{
		if((((i % 4) == 0) && ((i % 100) != 0)) || ((i % 400) == 0))
 800cec6:	2136      	movs	r1, #54	@ 0x36
 800cec8:	187b      	adds	r3, r7, r1
 800ceca:	881b      	ldrh	r3, [r3, #0]
 800cecc:	2203      	movs	r2, #3
 800cece:	4013      	ands	r3, r2
 800ced0:	b29b      	uxth	r3, r3
 800ced2:	2b00      	cmp	r3, #0
 800ced4:	d109      	bne.n	800ceea <utcToUnix+0x6e>
 800ced6:	187b      	adds	r3, r7, r1
 800ced8:	881b      	ldrh	r3, [r3, #0]
 800ceda:	2164      	movs	r1, #100	@ 0x64
 800cedc:	0018      	movs	r0, r3
 800cede:	f7f3 f9a9 	bl	8000234 <__aeabi_uidivmod>
 800cee2:	000b      	movs	r3, r1
 800cee4:	b29b      	uxth	r3, r3
 800cee6:	2b00      	cmp	r3, #0
 800cee8:	d10b      	bne.n	800cf02 <utcToUnix+0x86>
 800ceea:	2336      	movs	r3, #54	@ 0x36
 800ceec:	18fb      	adds	r3, r7, r3
 800ceee:	881b      	ldrh	r3, [r3, #0]
 800cef0:	22c8      	movs	r2, #200	@ 0xc8
 800cef2:	0051      	lsls	r1, r2, #1
 800cef4:	0018      	movs	r0, r3
 800cef6:	f7f3 f99d 	bl	8000234 <__aeabi_uidivmod>
 800cefa:	000b      	movs	r3, r1
 800cefc:	b29b      	uxth	r3, r3
 800cefe:	2b00      	cmp	r3, #0
 800cf00:	d106      	bne.n	800cf10 <utcToUnix+0x94>
		{
			LeapYearNumber ++;
 800cf02:	2132      	movs	r1, #50	@ 0x32
 800cf04:	187b      	adds	r3, r7, r1
 800cf06:	881a      	ldrh	r2, [r3, #0]
 800cf08:	187b      	adds	r3, r7, r1
 800cf0a:	3201      	adds	r2, #1
 800cf0c:	801a      	strh	r2, [r3, #0]
 800cf0e:	e005      	b.n	800cf1c <utcToUnix+0xa0>
		}
		else
		{
			FlatYearNumber ++;
 800cf10:	2130      	movs	r1, #48	@ 0x30
 800cf12:	187b      	adds	r3, r7, r1
 800cf14:	881a      	ldrh	r2, [r3, #0]
 800cf16:	187b      	adds	r3, r7, r1
 800cf18:	3201      	adds	r2, #1
 800cf1a:	801a      	strh	r2, [r3, #0]
	for (i = 1970; i < stCurrentTime.year; i ++)
 800cf1c:	2136      	movs	r1, #54	@ 0x36
 800cf1e:	187b      	adds	r3, r7, r1
 800cf20:	881a      	ldrh	r2, [r3, #0]
 800cf22:	187b      	adds	r3, r7, r1
 800cf24:	3201      	adds	r2, #1
 800cf26:	801a      	strh	r2, [r3, #0]
 800cf28:	4b5f      	ldr	r3, [pc, #380]	@ (800d0a8 <utcToUnix+0x22c>)
 800cf2a:	881b      	ldrh	r3, [r3, #0]
 800cf2c:	2236      	movs	r2, #54	@ 0x36
 800cf2e:	18ba      	adds	r2, r7, r2
 800cf30:	8812      	ldrh	r2, [r2, #0]
 800cf32:	429a      	cmp	r2, r3
 800cf34:	d3c7      	bcc.n	800cec6 <utcToUnix+0x4a>
		}
	}
	TimeStamp = LeapYearNumber * 31622400 + FlatYearNumber * 31536000;
 800cf36:	2332      	movs	r3, #50	@ 0x32
 800cf38:	18fb      	adds	r3, r7, r3
 800cf3a:	881b      	ldrh	r3, [r3, #0]
 800cf3c:	4a5b      	ldr	r2, [pc, #364]	@ (800d0ac <utcToUnix+0x230>)
 800cf3e:	435a      	muls	r2, r3
 800cf40:	0011      	movs	r1, r2
 800cf42:	2330      	movs	r3, #48	@ 0x30
 800cf44:	18fb      	adds	r3, r7, r3
 800cf46:	881a      	ldrh	r2, [r3, #0]
 800cf48:	0013      	movs	r3, r2
 800cf4a:	025b      	lsls	r3, r3, #9
 800cf4c:	189b      	adds	r3, r3, r2
 800cf4e:	009b      	lsls	r3, r3, #2
 800cf50:	189b      	adds	r3, r3, r2
 800cf52:	00db      	lsls	r3, r3, #3
 800cf54:	189b      	adds	r3, r3, r2
 800cf56:	011a      	lsls	r2, r3, #4
 800cf58:	1ad2      	subs	r2, r2, r3
 800cf5a:	01d3      	lsls	r3, r2, #7
 800cf5c:	001a      	movs	r2, r3
 800cf5e:	0013      	movs	r3, r2
 800cf60:	18cb      	adds	r3, r1, r3
 800cf62:	62bb      	str	r3, [r7, #40]	@ 0x28

	if((((stCurrentTime.year % 4) == 0) && ((stCurrentTime.year % 100) != 0)) || ((stCurrentTime.year % 400) == 0))
 800cf64:	4b50      	ldr	r3, [pc, #320]	@ (800d0a8 <utcToUnix+0x22c>)
 800cf66:	881b      	ldrh	r3, [r3, #0]
 800cf68:	2203      	movs	r2, #3
 800cf6a:	4013      	ands	r3, r2
 800cf6c:	b29b      	uxth	r3, r3
 800cf6e:	2b00      	cmp	r3, #0
 800cf70:	d109      	bne.n	800cf86 <utcToUnix+0x10a>
 800cf72:	4b4d      	ldr	r3, [pc, #308]	@ (800d0a8 <utcToUnix+0x22c>)
 800cf74:	881b      	ldrh	r3, [r3, #0]
 800cf76:	2164      	movs	r1, #100	@ 0x64
 800cf78:	0018      	movs	r0, r3
 800cf7a:	f7f3 f95b 	bl	8000234 <__aeabi_uidivmod>
 800cf7e:	000b      	movs	r3, r1
 800cf80:	b29b      	uxth	r3, r3
 800cf82:	2b00      	cmp	r3, #0
 800cf84:	d10a      	bne.n	800cf9c <utcToUnix+0x120>
 800cf86:	4b48      	ldr	r3, [pc, #288]	@ (800d0a8 <utcToUnix+0x22c>)
 800cf88:	881b      	ldrh	r3, [r3, #0]
 800cf8a:	22c8      	movs	r2, #200	@ 0xc8
 800cf8c:	0051      	lsls	r1, r2, #1
 800cf8e:	0018      	movs	r0, r3
 800cf90:	f7f3 f950 	bl	8000234 <__aeabi_uidivmod>
 800cf94:	000b      	movs	r3, r1
 800cf96:	b29b      	uxth	r3, r3
 800cf98:	2b00      	cmp	r3, #0
 800cf9a:	d104      	bne.n	800cfa6 <utcToUnix+0x12a>
	{
		ThisYear = LEAP_YEAR;
 800cf9c:	2334      	movs	r3, #52	@ 0x34
 800cf9e:	18fb      	adds	r3, r7, r3
 800cfa0:	2201      	movs	r2, #1
 800cfa2:	801a      	strh	r2, [r3, #0]
 800cfa4:	e003      	b.n	800cfae <utcToUnix+0x132>
	}
	else
	{
		ThisYear = FLAT_YEAR;
 800cfa6:	2334      	movs	r3, #52	@ 0x34
 800cfa8:	18fb      	adds	r3, r7, r3
 800cfaa:	2200      	movs	r2, #0
 800cfac:	801a      	strh	r2, [r3, #0]
	}

	for ( i = 1; i < stCurrentTime.month; i ++)
 800cfae:	2336      	movs	r3, #54	@ 0x36
 800cfb0:	18fb      	adds	r3, r7, r3
 800cfb2:	2201      	movs	r2, #1
 800cfb4:	801a      	strh	r2, [r3, #0]
 800cfb6:	e02a      	b.n	800d00e <utcToUnix+0x192>
	{
		if(ThisYear == LEAP_YEAR)
 800cfb8:	2334      	movs	r3, #52	@ 0x34
 800cfba:	18fb      	adds	r3, r7, r3
 800cfbc:	881b      	ldrh	r3, [r3, #0]
 800cfbe:	2b01      	cmp	r3, #1
 800cfc0:	d10d      	bne.n	800cfde <utcToUnix+0x162>
		{
			LastMonDays += LeapYearMonthDay[i];
 800cfc2:	2336      	movs	r3, #54	@ 0x36
 800cfc4:	18fb      	adds	r3, r7, r3
 800cfc6:	881b      	ldrh	r3, [r3, #0]
 800cfc8:	2208      	movs	r2, #8
 800cfca:	18ba      	adds	r2, r7, r2
 800cfcc:	5cd3      	ldrb	r3, [r2, r3]
 800cfce:	0019      	movs	r1, r3
 800cfd0:	222e      	movs	r2, #46	@ 0x2e
 800cfd2:	18bb      	adds	r3, r7, r2
 800cfd4:	18ba      	adds	r2, r7, r2
 800cfd6:	8812      	ldrh	r2, [r2, #0]
 800cfd8:	188a      	adds	r2, r1, r2
 800cfda:	801a      	strh	r2, [r3, #0]
 800cfdc:	e011      	b.n	800d002 <utcToUnix+0x186>
		}
		else if(ThisYear == FLAT_YEAR)
 800cfde:	2334      	movs	r3, #52	@ 0x34
 800cfe0:	18fb      	adds	r3, r7, r3
 800cfe2:	881b      	ldrh	r3, [r3, #0]
 800cfe4:	2b00      	cmp	r3, #0
 800cfe6:	d10c      	bne.n	800d002 <utcToUnix+0x186>
		{
			LastMonDays += FlatYearMonthDay[i];
 800cfe8:	2336      	movs	r3, #54	@ 0x36
 800cfea:	18fb      	adds	r3, r7, r3
 800cfec:	881b      	ldrh	r3, [r3, #0]
 800cfee:	2218      	movs	r2, #24
 800cff0:	18ba      	adds	r2, r7, r2
 800cff2:	5cd3      	ldrb	r3, [r2, r3]
 800cff4:	0019      	movs	r1, r3
 800cff6:	222e      	movs	r2, #46	@ 0x2e
 800cff8:	18bb      	adds	r3, r7, r2
 800cffa:	18ba      	adds	r2, r7, r2
 800cffc:	8812      	ldrh	r2, [r2, #0]
 800cffe:	188a      	adds	r2, r1, r2
 800d000:	801a      	strh	r2, [r3, #0]
	for ( i = 1; i < stCurrentTime.month; i ++)
 800d002:	2136      	movs	r1, #54	@ 0x36
 800d004:	187b      	adds	r3, r7, r1
 800d006:	881a      	ldrh	r2, [r3, #0]
 800d008:	187b      	adds	r3, r7, r1
 800d00a:	3201      	adds	r2, #1
 800d00c:	801a      	strh	r2, [r3, #0]
 800d00e:	4b26      	ldr	r3, [pc, #152]	@ (800d0a8 <utcToUnix+0x22c>)
 800d010:	789b      	ldrb	r3, [r3, #2]
 800d012:	001a      	movs	r2, r3
 800d014:	2336      	movs	r3, #54	@ 0x36
 800d016:	18fb      	adds	r3, r7, r3
 800d018:	881b      	ldrh	r3, [r3, #0]
 800d01a:	4293      	cmp	r3, r2
 800d01c:	d3cc      	bcc.n	800cfb8 <utcToUnix+0x13c>
		}
	}
	LastMonDays = LastMonDays + stCurrentTime.date - 1;
 800d01e:	4b22      	ldr	r3, [pc, #136]	@ (800d0a8 <utcToUnix+0x22c>)
 800d020:	78db      	ldrb	r3, [r3, #3]
 800d022:	001a      	movs	r2, r3
 800d024:	212e      	movs	r1, #46	@ 0x2e
 800d026:	187b      	adds	r3, r7, r1
 800d028:	881b      	ldrh	r3, [r3, #0]
 800d02a:	18d3      	adds	r3, r2, r3
 800d02c:	b29a      	uxth	r2, r3
 800d02e:	187b      	adds	r3, r7, r1
 800d030:	3a01      	subs	r2, #1
 800d032:	801a      	strh	r2, [r3, #0]
	TimeStamp += LastMonDays * 86400;
 800d034:	187b      	adds	r3, r7, r1
 800d036:	881a      	ldrh	r2, [r3, #0]
 800d038:	0013      	movs	r3, r2
 800d03a:	005b      	lsls	r3, r3, #1
 800d03c:	189b      	adds	r3, r3, r2
 800d03e:	011a      	lsls	r2, r3, #4
 800d040:	1ad2      	subs	r2, r2, r3
 800d042:	0113      	lsls	r3, r2, #4
 800d044:	1a9b      	subs	r3, r3, r2
 800d046:	01db      	lsls	r3, r3, #7
 800d048:	001a      	movs	r2, r3
 800d04a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d04c:	189b      	adds	r3, r3, r2
 800d04e:	62bb      	str	r3, [r7, #40]	@ 0x28

	TimeStamp += stCurrentTime.hour * 3600;
 800d050:	4b15      	ldr	r3, [pc, #84]	@ (800d0a8 <utcToUnix+0x22c>)
 800d052:	791b      	ldrb	r3, [r3, #4]
 800d054:	001a      	movs	r2, r3
 800d056:	0013      	movs	r3, r2
 800d058:	011b      	lsls	r3, r3, #4
 800d05a:	1a9b      	subs	r3, r3, r2
 800d05c:	011a      	lsls	r2, r3, #4
 800d05e:	1ad2      	subs	r2, r2, r3
 800d060:	0113      	lsls	r3, r2, #4
 800d062:	001a      	movs	r2, r3
 800d064:	0013      	movs	r3, r2
 800d066:	001a      	movs	r2, r3
 800d068:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d06a:	189b      	adds	r3, r3, r2
 800d06c:	62bb      	str	r3, [r7, #40]	@ 0x28
	TimeStamp += stCurrentTime.minute * 60;
 800d06e:	4b0e      	ldr	r3, [pc, #56]	@ (800d0a8 <utcToUnix+0x22c>)
 800d070:	795b      	ldrb	r3, [r3, #5]
 800d072:	001a      	movs	r2, r3
 800d074:	0013      	movs	r3, r2
 800d076:	011b      	lsls	r3, r3, #4
 800d078:	1a9b      	subs	r3, r3, r2
 800d07a:	009b      	lsls	r3, r3, #2
 800d07c:	001a      	movs	r2, r3
 800d07e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d080:	189b      	adds	r3, r3, r2
 800d082:	62bb      	str	r3, [r7, #40]	@ 0x28
	TimeStamp += stCurrentTime.second;
 800d084:	4b08      	ldr	r3, [pc, #32]	@ (800d0a8 <utcToUnix+0x22c>)
 800d086:	799b      	ldrb	r3, [r3, #6]
 800d088:	001a      	movs	r2, r3
 800d08a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d08c:	189b      	adds	r3, r3, r2
 800d08e:	62bb      	str	r3, [r7, #40]	@ 0x28

	return TimeStamp;
 800d090:	6abb      	ldr	r3, [r7, #40]	@ 0x28
}
 800d092:	0018      	movs	r0, r3
 800d094:	46bd      	mov	sp, r7
 800d096:	b00f      	add	sp, #60	@ 0x3c
 800d098:	bd90      	pop	{r4, r7, pc}
 800d09a:	46c0      	nop			@ (mov r8, r8)
 800d09c:	08019d80 	.word	0x08019d80
 800d0a0:	08019d90 	.word	0x08019d90
 800d0a4:	000007b2 	.word	0x000007b2
 800d0a8:	20000c90 	.word	0x20000c90
 800d0ac:	01e28500 	.word	0x01e28500

0800d0b0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800d0b0:	b580      	push	{r7, lr}
 800d0b2:	b082      	sub	sp, #8
 800d0b4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800d0b6:	4b11      	ldr	r3, [pc, #68]	@ (800d0fc <HAL_MspInit+0x4c>)
 800d0b8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d0ba:	4b10      	ldr	r3, [pc, #64]	@ (800d0fc <HAL_MspInit+0x4c>)
 800d0bc:	2101      	movs	r1, #1
 800d0be:	430a      	orrs	r2, r1
 800d0c0:	641a      	str	r2, [r3, #64]	@ 0x40
 800d0c2:	4b0e      	ldr	r3, [pc, #56]	@ (800d0fc <HAL_MspInit+0x4c>)
 800d0c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d0c6:	2201      	movs	r2, #1
 800d0c8:	4013      	ands	r3, r2
 800d0ca:	607b      	str	r3, [r7, #4]
 800d0cc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800d0ce:	4b0b      	ldr	r3, [pc, #44]	@ (800d0fc <HAL_MspInit+0x4c>)
 800d0d0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d0d2:	4b0a      	ldr	r3, [pc, #40]	@ (800d0fc <HAL_MspInit+0x4c>)
 800d0d4:	2180      	movs	r1, #128	@ 0x80
 800d0d6:	0549      	lsls	r1, r1, #21
 800d0d8:	430a      	orrs	r2, r1
 800d0da:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d0dc:	4b07      	ldr	r3, [pc, #28]	@ (800d0fc <HAL_MspInit+0x4c>)
 800d0de:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d0e0:	2380      	movs	r3, #128	@ 0x80
 800d0e2:	055b      	lsls	r3, r3, #21
 800d0e4:	4013      	ands	r3, r2
 800d0e6:	603b      	str	r3, [r7, #0]
 800d0e8:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 800d0ea:	23c0      	movs	r3, #192	@ 0xc0
 800d0ec:	00db      	lsls	r3, r3, #3
 800d0ee:	0018      	movs	r0, r3
 800d0f0:	f000 fdec 	bl	800dccc <HAL_SYSCFG_StrobeDBattpinsConfig>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800d0f4:	46c0      	nop			@ (mov r8, r8)
 800d0f6:	46bd      	mov	sp, r7
 800d0f8:	b002      	add	sp, #8
 800d0fa:	bd80      	pop	{r7, pc}
 800d0fc:	40021000 	.word	0x40021000

0800d100 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 800d100:	b590      	push	{r4, r7, lr}
 800d102:	b099      	sub	sp, #100	@ 0x64
 800d104:	af00      	add	r7, sp, #0
 800d106:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800d108:	234c      	movs	r3, #76	@ 0x4c
 800d10a:	18fb      	adds	r3, r7, r3
 800d10c:	0018      	movs	r0, r3
 800d10e:	2314      	movs	r3, #20
 800d110:	001a      	movs	r2, r3
 800d112:	2100      	movs	r1, #0
 800d114:	f00b fd9c 	bl	8018c50 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800d118:	2418      	movs	r4, #24
 800d11a:	193b      	adds	r3, r7, r4
 800d11c:	0018      	movs	r0, r3
 800d11e:	2334      	movs	r3, #52	@ 0x34
 800d120:	001a      	movs	r2, r3
 800d122:	2100      	movs	r1, #0
 800d124:	f00b fd94 	bl	8018c50 <memset>
  if(hi2c->Instance==I2C1)
 800d128:	687b      	ldr	r3, [r7, #4]
 800d12a:	681b      	ldr	r3, [r3, #0]
 800d12c:	4a42      	ldr	r2, [pc, #264]	@ (800d238 <HAL_I2C_MspInit+0x138>)
 800d12e:	4293      	cmp	r3, r2
 800d130:	d148      	bne.n	800d1c4 <HAL_I2C_MspInit+0xc4>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 800d132:	193b      	adds	r3, r7, r4
 800d134:	2220      	movs	r2, #32
 800d136:	601a      	str	r2, [r3, #0]
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 800d138:	193b      	adds	r3, r7, r4
 800d13a:	2200      	movs	r2, #0
 800d13c:	611a      	str	r2, [r3, #16]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800d13e:	193b      	adds	r3, r7, r4
 800d140:	0018      	movs	r0, r3
 800d142:	f003 ff91 	bl	8011068 <HAL_RCCEx_PeriphCLKConfig>
 800d146:	1e03      	subs	r3, r0, #0
 800d148:	d001      	beq.n	800d14e <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 800d14a:	f7ff fb55 	bl	800c7f8 <Error_Handler>
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800d14e:	4b3b      	ldr	r3, [pc, #236]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d150:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d152:	4b3a      	ldr	r3, [pc, #232]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d154:	2101      	movs	r1, #1
 800d156:	430a      	orrs	r2, r1
 800d158:	635a      	str	r2, [r3, #52]	@ 0x34
 800d15a:	4b38      	ldr	r3, [pc, #224]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d15c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d15e:	2201      	movs	r2, #1
 800d160:	4013      	ands	r3, r2
 800d162:	617b      	str	r3, [r7, #20]
 800d164:	697b      	ldr	r3, [r7, #20]
    /**I2C1 GPIO Configuration
    PA9     ------> I2C1_SCL
    PA10     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800d166:	214c      	movs	r1, #76	@ 0x4c
 800d168:	187b      	adds	r3, r7, r1
 800d16a:	22c0      	movs	r2, #192	@ 0xc0
 800d16c:	00d2      	lsls	r2, r2, #3
 800d16e:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800d170:	187b      	adds	r3, r7, r1
 800d172:	2212      	movs	r2, #18
 800d174:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d176:	187b      	adds	r3, r7, r1
 800d178:	2200      	movs	r2, #0
 800d17a:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d17c:	187b      	adds	r3, r7, r1
 800d17e:	2200      	movs	r2, #0
 800d180:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF6_I2C1;
 800d182:	187b      	adds	r3, r7, r1
 800d184:	2206      	movs	r2, #6
 800d186:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800d188:	187a      	adds	r2, r7, r1
 800d18a:	23a0      	movs	r3, #160	@ 0xa0
 800d18c:	05db      	lsls	r3, r3, #23
 800d18e:	0011      	movs	r1, r2
 800d190:	0018      	movs	r0, r3
 800d192:	f001 f9c3 	bl	800e51c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800d196:	4b29      	ldr	r3, [pc, #164]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d198:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d19a:	4b28      	ldr	r3, [pc, #160]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d19c:	2180      	movs	r1, #128	@ 0x80
 800d19e:	0389      	lsls	r1, r1, #14
 800d1a0:	430a      	orrs	r2, r1
 800d1a2:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d1a4:	4b25      	ldr	r3, [pc, #148]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d1a6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d1a8:	2380      	movs	r3, #128	@ 0x80
 800d1aa:	039b      	lsls	r3, r3, #14
 800d1ac:	4013      	ands	r3, r2
 800d1ae:	613b      	str	r3, [r7, #16]
 800d1b0:	693b      	ldr	r3, [r7, #16]
    /* I2C1 interrupt Init */
    HAL_NVIC_SetPriority(I2C1_IRQn, 0, 0);
 800d1b2:	2200      	movs	r2, #0
 800d1b4:	2100      	movs	r1, #0
 800d1b6:	2017      	movs	r0, #23
 800d1b8:	f000 fe4a 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_IRQn);
 800d1bc:	2017      	movs	r0, #23
 800d1be:	f000 fe5c 	bl	800de7a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 800d1c2:	e035      	b.n	800d230 <HAL_I2C_MspInit+0x130>
  else if(hi2c->Instance==I2C2)
 800d1c4:	687b      	ldr	r3, [r7, #4]
 800d1c6:	681b      	ldr	r3, [r3, #0]
 800d1c8:	4a1d      	ldr	r2, [pc, #116]	@ (800d240 <HAL_I2C_MspInit+0x140>)
 800d1ca:	4293      	cmp	r3, r2
 800d1cc:	d130      	bne.n	800d230 <HAL_I2C_MspInit+0x130>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800d1ce:	4b1b      	ldr	r3, [pc, #108]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d1d0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d1d2:	4b1a      	ldr	r3, [pc, #104]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d1d4:	2102      	movs	r1, #2
 800d1d6:	430a      	orrs	r2, r1
 800d1d8:	635a      	str	r2, [r3, #52]	@ 0x34
 800d1da:	4b18      	ldr	r3, [pc, #96]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d1dc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d1de:	2202      	movs	r2, #2
 800d1e0:	4013      	ands	r3, r2
 800d1e2:	60fb      	str	r3, [r7, #12]
 800d1e4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 800d1e6:	214c      	movs	r1, #76	@ 0x4c
 800d1e8:	187b      	adds	r3, r7, r1
 800d1ea:	22c0      	movs	r2, #192	@ 0xc0
 800d1ec:	0112      	lsls	r2, r2, #4
 800d1ee:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800d1f0:	187b      	adds	r3, r7, r1
 800d1f2:	2212      	movs	r2, #18
 800d1f4:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d1f6:	187b      	adds	r3, r7, r1
 800d1f8:	2200      	movs	r2, #0
 800d1fa:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d1fc:	187b      	adds	r3, r7, r1
 800d1fe:	2200      	movs	r2, #0
 800d200:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF6_I2C2;
 800d202:	187b      	adds	r3, r7, r1
 800d204:	2206      	movs	r2, #6
 800d206:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800d208:	187b      	adds	r3, r7, r1
 800d20a:	4a0e      	ldr	r2, [pc, #56]	@ (800d244 <HAL_I2C_MspInit+0x144>)
 800d20c:	0019      	movs	r1, r3
 800d20e:	0010      	movs	r0, r2
 800d210:	f001 f984 	bl	800e51c <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 800d214:	4b09      	ldr	r3, [pc, #36]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d216:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d218:	4b08      	ldr	r3, [pc, #32]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d21a:	2180      	movs	r1, #128	@ 0x80
 800d21c:	03c9      	lsls	r1, r1, #15
 800d21e:	430a      	orrs	r2, r1
 800d220:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d222:	4b06      	ldr	r3, [pc, #24]	@ (800d23c <HAL_I2C_MspInit+0x13c>)
 800d224:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d226:	2380      	movs	r3, #128	@ 0x80
 800d228:	03db      	lsls	r3, r3, #15
 800d22a:	4013      	ands	r3, r2
 800d22c:	60bb      	str	r3, [r7, #8]
 800d22e:	68bb      	ldr	r3, [r7, #8]
}
 800d230:	46c0      	nop			@ (mov r8, r8)
 800d232:	46bd      	mov	sp, r7
 800d234:	b019      	add	sp, #100	@ 0x64
 800d236:	bd90      	pop	{r4, r7, pc}
 800d238:	40005400 	.word	0x40005400
 800d23c:	40021000 	.word	0x40021000
 800d240:	40005800 	.word	0x40005800
 800d244:	50000400 	.word	0x50000400

0800d248 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800d248:	b590      	push	{r4, r7, lr}
 800d24a:	b0a1      	sub	sp, #132	@ 0x84
 800d24c:	af00      	add	r7, sp, #0
 800d24e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800d250:	236c      	movs	r3, #108	@ 0x6c
 800d252:	18fb      	adds	r3, r7, r3
 800d254:	0018      	movs	r0, r3
 800d256:	2314      	movs	r3, #20
 800d258:	001a      	movs	r2, r3
 800d25a:	2100      	movs	r1, #0
 800d25c:	f00b fcf8 	bl	8018c50 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800d260:	2438      	movs	r4, #56	@ 0x38
 800d262:	193b      	adds	r3, r7, r4
 800d264:	0018      	movs	r0, r3
 800d266:	2334      	movs	r3, #52	@ 0x34
 800d268:	001a      	movs	r2, r3
 800d26a:	2100      	movs	r1, #0
 800d26c:	f00b fcf0 	bl	8018c50 <memset>
  if(huart->Instance==LPUART1)
 800d270:	687b      	ldr	r3, [r7, #4]
 800d272:	681b      	ldr	r3, [r3, #0]
 800d274:	4ad4      	ldr	r2, [pc, #848]	@ (800d5c8 <HAL_UART_MspInit+0x380>)
 800d276:	4293      	cmp	r3, r2
 800d278:	d147      	bne.n	800d30a <HAL_UART_MspInit+0xc2>

  /* USER CODE END LPUART1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 800d27a:	193b      	adds	r3, r7, r4
 800d27c:	2210      	movs	r2, #16
 800d27e:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_HSI;
 800d280:	193b      	adds	r3, r7, r4
 800d282:	2280      	movs	r2, #128	@ 0x80
 800d284:	0112      	lsls	r2, r2, #4
 800d286:	60da      	str	r2, [r3, #12]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800d288:	193b      	adds	r3, r7, r4
 800d28a:	0018      	movs	r0, r3
 800d28c:	f003 feec 	bl	8011068 <HAL_RCCEx_PeriphCLKConfig>
 800d290:	1e03      	subs	r3, r0, #0
 800d292:	d001      	beq.n	800d298 <HAL_UART_MspInit+0x50>
    {
      Error_Handler();
 800d294:	f7ff fab0 	bl	800c7f8 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LPUART1_CLK_ENABLE();
 800d298:	4bcc      	ldr	r3, [pc, #816]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d29a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d29c:	4bcb      	ldr	r3, [pc, #812]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d29e:	2180      	movs	r1, #128	@ 0x80
 800d2a0:	0349      	lsls	r1, r1, #13
 800d2a2:	430a      	orrs	r2, r1
 800d2a4:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d2a6:	4bc9      	ldr	r3, [pc, #804]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d2a8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d2aa:	2380      	movs	r3, #128	@ 0x80
 800d2ac:	035b      	lsls	r3, r3, #13
 800d2ae:	4013      	ands	r3, r2
 800d2b0:	637b      	str	r3, [r7, #52]	@ 0x34
 800d2b2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800d2b4:	4bc5      	ldr	r3, [pc, #788]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d2b6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d2b8:	4bc4      	ldr	r3, [pc, #784]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d2ba:	2104      	movs	r1, #4
 800d2bc:	430a      	orrs	r2, r1
 800d2be:	635a      	str	r2, [r3, #52]	@ 0x34
 800d2c0:	4bc2      	ldr	r3, [pc, #776]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d2c2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d2c4:	2204      	movs	r2, #4
 800d2c6:	4013      	ands	r3, r2
 800d2c8:	633b      	str	r3, [r7, #48]	@ 0x30
 800d2ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
    /**LPUART1 GPIO Configuration
    PC0     ------> LPUART1_RX
    PC1     ------> LPUART1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800d2cc:	216c      	movs	r1, #108	@ 0x6c
 800d2ce:	187b      	adds	r3, r7, r1
 800d2d0:	2203      	movs	r2, #3
 800d2d2:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d2d4:	187b      	adds	r3, r7, r1
 800d2d6:	2202      	movs	r2, #2
 800d2d8:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d2da:	187b      	adds	r3, r7, r1
 800d2dc:	2200      	movs	r2, #0
 800d2de:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d2e0:	187b      	adds	r3, r7, r1
 800d2e2:	2200      	movs	r2, #0
 800d2e4:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_LPUART1;
 800d2e6:	187b      	adds	r3, r7, r1
 800d2e8:	2201      	movs	r2, #1
 800d2ea:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800d2ec:	187b      	adds	r3, r7, r1
 800d2ee:	4ab8      	ldr	r2, [pc, #736]	@ (800d5d0 <HAL_UART_MspInit+0x388>)
 800d2f0:	0019      	movs	r1, r3
 800d2f2:	0010      	movs	r0, r2
 800d2f4:	f001 f912 	bl	800e51c <HAL_GPIO_Init>

    /* LPUART1 interrupt Init */
    HAL_NVIC_SetPriority(USART3_4_LPUART1_IRQn, 2, 0);
 800d2f8:	2200      	movs	r2, #0
 800d2fa:	2102      	movs	r1, #2
 800d2fc:	201d      	movs	r0, #29
 800d2fe:	f000 fda7 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_4_LPUART1_IRQn);
 800d302:	201d      	movs	r0, #29
 800d304:	f000 fdb9 	bl	800de7a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART4_MspInit 1 */

  /* USER CODE END USART4_MspInit 1 */
  }

}
 800d308:	e15a      	b.n	800d5c0 <HAL_UART_MspInit+0x378>
  else if(huart->Instance==USART1)
 800d30a:	687b      	ldr	r3, [r7, #4]
 800d30c:	681b      	ldr	r3, [r3, #0]
 800d30e:	4ab1      	ldr	r2, [pc, #708]	@ (800d5d4 <HAL_UART_MspInit+0x38c>)
 800d310:	4293      	cmp	r3, r2
 800d312:	d168      	bne.n	800d3e6 <HAL_UART_MspInit+0x19e>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 800d314:	2138      	movs	r1, #56	@ 0x38
 800d316:	187b      	adds	r3, r7, r1
 800d318:	2201      	movs	r2, #1
 800d31a:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 800d31c:	187b      	adds	r3, r7, r1
 800d31e:	2200      	movs	r2, #0
 800d320:	605a      	str	r2, [r3, #4]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800d322:	187b      	adds	r3, r7, r1
 800d324:	0018      	movs	r0, r3
 800d326:	f003 fe9f 	bl	8011068 <HAL_RCCEx_PeriphCLKConfig>
 800d32a:	1e03      	subs	r3, r0, #0
 800d32c:	d001      	beq.n	800d332 <HAL_UART_MspInit+0xea>
      Error_Handler();
 800d32e:	f7ff fa63 	bl	800c7f8 <Error_Handler>
    __HAL_RCC_USART1_CLK_ENABLE();
 800d332:	4ba6      	ldr	r3, [pc, #664]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d334:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d336:	4ba5      	ldr	r3, [pc, #660]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d338:	2180      	movs	r1, #128	@ 0x80
 800d33a:	01c9      	lsls	r1, r1, #7
 800d33c:	430a      	orrs	r2, r1
 800d33e:	641a      	str	r2, [r3, #64]	@ 0x40
 800d340:	4ba2      	ldr	r3, [pc, #648]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d342:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d344:	2380      	movs	r3, #128	@ 0x80
 800d346:	01db      	lsls	r3, r3, #7
 800d348:	4013      	ands	r3, r2
 800d34a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d34c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800d34e:	4b9f      	ldr	r3, [pc, #636]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d350:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d352:	4b9e      	ldr	r3, [pc, #632]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d354:	2104      	movs	r1, #4
 800d356:	430a      	orrs	r2, r1
 800d358:	635a      	str	r2, [r3, #52]	@ 0x34
 800d35a:	4b9c      	ldr	r3, [pc, #624]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d35c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d35e:	2204      	movs	r2, #4
 800d360:	4013      	ands	r3, r2
 800d362:	62bb      	str	r3, [r7, #40]	@ 0x28
 800d364:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 800d366:	216c      	movs	r1, #108	@ 0x6c
 800d368:	187b      	adds	r3, r7, r1
 800d36a:	2230      	movs	r2, #48	@ 0x30
 800d36c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d36e:	187b      	adds	r3, r7, r1
 800d370:	2202      	movs	r2, #2
 800d372:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d374:	187b      	adds	r3, r7, r1
 800d376:	2200      	movs	r2, #0
 800d378:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d37a:	187b      	adds	r3, r7, r1
 800d37c:	2200      	movs	r2, #0
 800d37e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 800d380:	187b      	adds	r3, r7, r1
 800d382:	2201      	movs	r2, #1
 800d384:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800d386:	187b      	adds	r3, r7, r1
 800d388:	4a91      	ldr	r2, [pc, #580]	@ (800d5d0 <HAL_UART_MspInit+0x388>)
 800d38a:	0019      	movs	r1, r3
 800d38c:	0010      	movs	r0, r2
 800d38e:	f001 f8c5 	bl	800e51c <HAL_GPIO_Init>
    hdma_usart1_rx.Instance = DMA1_Channel1;
 800d392:	4b91      	ldr	r3, [pc, #580]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d394:	4a91      	ldr	r2, [pc, #580]	@ (800d5dc <HAL_UART_MspInit+0x394>)
 800d396:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Request = DMA_REQUEST_USART1_RX;
 800d398:	4b8f      	ldr	r3, [pc, #572]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d39a:	2232      	movs	r2, #50	@ 0x32
 800d39c:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800d39e:	4b8e      	ldr	r3, [pc, #568]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3a0:	2200      	movs	r2, #0
 800d3a2:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800d3a4:	4b8c      	ldr	r3, [pc, #560]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3a6:	2200      	movs	r2, #0
 800d3a8:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 800d3aa:	4b8b      	ldr	r3, [pc, #556]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3ac:	2280      	movs	r2, #128	@ 0x80
 800d3ae:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800d3b0:	4b89      	ldr	r3, [pc, #548]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3b2:	2200      	movs	r2, #0
 800d3b4:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800d3b6:	4b88      	ldr	r3, [pc, #544]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3b8:	2200      	movs	r2, #0
 800d3ba:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_CIRCULAR;
 800d3bc:	4b86      	ldr	r3, [pc, #536]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3be:	2220      	movs	r2, #32
 800d3c0:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 800d3c2:	4b85      	ldr	r3, [pc, #532]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3c4:	2200      	movs	r2, #0
 800d3c6:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 800d3c8:	4b83      	ldr	r3, [pc, #524]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3ca:	0018      	movs	r0, r3
 800d3cc:	f000 fd72 	bl	800deb4 <HAL_DMA_Init>
 800d3d0:	1e03      	subs	r3, r0, #0
 800d3d2:	d001      	beq.n	800d3d8 <HAL_UART_MspInit+0x190>
      Error_Handler();
 800d3d4:	f7ff fa10 	bl	800c7f8 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
 800d3d8:	687b      	ldr	r3, [r7, #4]
 800d3da:	4a7f      	ldr	r2, [pc, #508]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3dc:	67da      	str	r2, [r3, #124]	@ 0x7c
 800d3de:	4b7e      	ldr	r3, [pc, #504]	@ (800d5d8 <HAL_UART_MspInit+0x390>)
 800d3e0:	687a      	ldr	r2, [r7, #4]
 800d3e2:	629a      	str	r2, [r3, #40]	@ 0x28
}
 800d3e4:	e0ec      	b.n	800d5c0 <HAL_UART_MspInit+0x378>
  else if(huart->Instance==USART2)
 800d3e6:	687b      	ldr	r3, [r7, #4]
 800d3e8:	681b      	ldr	r3, [r3, #0]
 800d3ea:	4a7d      	ldr	r2, [pc, #500]	@ (800d5e0 <HAL_UART_MspInit+0x398>)
 800d3ec:	4293      	cmp	r3, r2
 800d3ee:	d148      	bne.n	800d482 <HAL_UART_MspInit+0x23a>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 800d3f0:	2138      	movs	r1, #56	@ 0x38
 800d3f2:	187b      	adds	r3, r7, r1
 800d3f4:	2202      	movs	r2, #2
 800d3f6:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 800d3f8:	187b      	adds	r3, r7, r1
 800d3fa:	2200      	movs	r2, #0
 800d3fc:	609a      	str	r2, [r3, #8]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800d3fe:	187b      	adds	r3, r7, r1
 800d400:	0018      	movs	r0, r3
 800d402:	f003 fe31 	bl	8011068 <HAL_RCCEx_PeriphCLKConfig>
 800d406:	1e03      	subs	r3, r0, #0
 800d408:	d001      	beq.n	800d40e <HAL_UART_MspInit+0x1c6>
      Error_Handler();
 800d40a:	f7ff f9f5 	bl	800c7f8 <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 800d40e:	4b6f      	ldr	r3, [pc, #444]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d410:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d412:	4b6e      	ldr	r3, [pc, #440]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d414:	2180      	movs	r1, #128	@ 0x80
 800d416:	0289      	lsls	r1, r1, #10
 800d418:	430a      	orrs	r2, r1
 800d41a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d41c:	4b6b      	ldr	r3, [pc, #428]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d41e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d420:	2380      	movs	r3, #128	@ 0x80
 800d422:	029b      	lsls	r3, r3, #10
 800d424:	4013      	ands	r3, r2
 800d426:	627b      	str	r3, [r7, #36]	@ 0x24
 800d428:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800d42a:	4b68      	ldr	r3, [pc, #416]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d42c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d42e:	4b67      	ldr	r3, [pc, #412]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d430:	2101      	movs	r1, #1
 800d432:	430a      	orrs	r2, r1
 800d434:	635a      	str	r2, [r3, #52]	@ 0x34
 800d436:	4b65      	ldr	r3, [pc, #404]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d438:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d43a:	2201      	movs	r2, #1
 800d43c:	4013      	ands	r3, r2
 800d43e:	623b      	str	r3, [r7, #32]
 800d440:	6a3b      	ldr	r3, [r7, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800d442:	216c      	movs	r1, #108	@ 0x6c
 800d444:	187b      	adds	r3, r7, r1
 800d446:	220c      	movs	r2, #12
 800d448:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d44a:	187b      	adds	r3, r7, r1
 800d44c:	2202      	movs	r2, #2
 800d44e:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d450:	187b      	adds	r3, r7, r1
 800d452:	2200      	movs	r2, #0
 800d454:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d456:	187b      	adds	r3, r7, r1
 800d458:	2200      	movs	r2, #0
 800d45a:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 800d45c:	187b      	adds	r3, r7, r1
 800d45e:	2201      	movs	r2, #1
 800d460:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800d462:	187a      	adds	r2, r7, r1
 800d464:	23a0      	movs	r3, #160	@ 0xa0
 800d466:	05db      	lsls	r3, r3, #23
 800d468:	0011      	movs	r1, r2
 800d46a:	0018      	movs	r0, r3
 800d46c:	f001 f856 	bl	800e51c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 2, 0);
 800d470:	2200      	movs	r2, #0
 800d472:	2102      	movs	r1, #2
 800d474:	201c      	movs	r0, #28
 800d476:	f000 fceb 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 800d47a:	201c      	movs	r0, #28
 800d47c:	f000 fcfd 	bl	800de7a <HAL_NVIC_EnableIRQ>
}
 800d480:	e09e      	b.n	800d5c0 <HAL_UART_MspInit+0x378>
  else if(huart->Instance==USART3)
 800d482:	687b      	ldr	r3, [r7, #4]
 800d484:	681b      	ldr	r3, [r3, #0]
 800d486:	4a57      	ldr	r2, [pc, #348]	@ (800d5e4 <HAL_UART_MspInit+0x39c>)
 800d488:	4293      	cmp	r3, r2
 800d48a:	d15b      	bne.n	800d544 <HAL_UART_MspInit+0x2fc>
    __HAL_RCC_USART3_CLK_ENABLE();
 800d48c:	4b4f      	ldr	r3, [pc, #316]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d48e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d490:	4b4e      	ldr	r3, [pc, #312]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d492:	2180      	movs	r1, #128	@ 0x80
 800d494:	02c9      	lsls	r1, r1, #11
 800d496:	430a      	orrs	r2, r1
 800d498:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d49a:	4b4c      	ldr	r3, [pc, #304]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d49c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d49e:	2380      	movs	r3, #128	@ 0x80
 800d4a0:	02db      	lsls	r3, r3, #11
 800d4a2:	4013      	ands	r3, r2
 800d4a4:	61fb      	str	r3, [r7, #28]
 800d4a6:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800d4a8:	4b48      	ldr	r3, [pc, #288]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d4aa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d4ac:	4b47      	ldr	r3, [pc, #284]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d4ae:	2101      	movs	r1, #1
 800d4b0:	430a      	orrs	r2, r1
 800d4b2:	635a      	str	r2, [r3, #52]	@ 0x34
 800d4b4:	4b45      	ldr	r3, [pc, #276]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d4b6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d4b8:	2201      	movs	r2, #1
 800d4ba:	4013      	ands	r3, r2
 800d4bc:	61bb      	str	r3, [r7, #24]
 800d4be:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800d4c0:	4b42      	ldr	r3, [pc, #264]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d4c2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d4c4:	4b41      	ldr	r3, [pc, #260]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d4c6:	2102      	movs	r1, #2
 800d4c8:	430a      	orrs	r2, r1
 800d4ca:	635a      	str	r2, [r3, #52]	@ 0x34
 800d4cc:	4b3f      	ldr	r3, [pc, #252]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d4ce:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d4d0:	2202      	movs	r2, #2
 800d4d2:	4013      	ands	r3, r2
 800d4d4:	617b      	str	r3, [r7, #20]
 800d4d6:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 800d4d8:	246c      	movs	r4, #108	@ 0x6c
 800d4da:	193b      	adds	r3, r7, r4
 800d4dc:	2220      	movs	r2, #32
 800d4de:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d4e0:	193b      	adds	r3, r7, r4
 800d4e2:	2202      	movs	r2, #2
 800d4e4:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d4e6:	193b      	adds	r3, r7, r4
 800d4e8:	2200      	movs	r2, #0
 800d4ea:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d4ec:	193b      	adds	r3, r7, r4
 800d4ee:	2200      	movs	r2, #0
 800d4f0:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 800d4f2:	193b      	adds	r3, r7, r4
 800d4f4:	2204      	movs	r2, #4
 800d4f6:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800d4f8:	193a      	adds	r2, r7, r4
 800d4fa:	23a0      	movs	r3, #160	@ 0xa0
 800d4fc:	05db      	lsls	r3, r3, #23
 800d4fe:	0011      	movs	r1, r2
 800d500:	0018      	movs	r0, r3
 800d502:	f001 f80b 	bl	800e51c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 800d506:	0021      	movs	r1, r4
 800d508:	187b      	adds	r3, r7, r1
 800d50a:	2201      	movs	r2, #1
 800d50c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d50e:	187b      	adds	r3, r7, r1
 800d510:	2202      	movs	r2, #2
 800d512:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d514:	187b      	adds	r3, r7, r1
 800d516:	2200      	movs	r2, #0
 800d518:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d51a:	187b      	adds	r3, r7, r1
 800d51c:	2200      	movs	r2, #0
 800d51e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 800d520:	187b      	adds	r3, r7, r1
 800d522:	2204      	movs	r2, #4
 800d524:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800d526:	187b      	adds	r3, r7, r1
 800d528:	4a2f      	ldr	r2, [pc, #188]	@ (800d5e8 <HAL_UART_MspInit+0x3a0>)
 800d52a:	0019      	movs	r1, r3
 800d52c:	0010      	movs	r0, r2
 800d52e:	f000 fff5 	bl	800e51c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_4_LPUART1_IRQn, 2, 0);
 800d532:	2200      	movs	r2, #0
 800d534:	2102      	movs	r1, #2
 800d536:	201d      	movs	r0, #29
 800d538:	f000 fc8a 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_4_LPUART1_IRQn);
 800d53c:	201d      	movs	r0, #29
 800d53e:	f000 fc9c 	bl	800de7a <HAL_NVIC_EnableIRQ>
}
 800d542:	e03d      	b.n	800d5c0 <HAL_UART_MspInit+0x378>
  else if(huart->Instance==USART4)
 800d544:	687b      	ldr	r3, [r7, #4]
 800d546:	681b      	ldr	r3, [r3, #0]
 800d548:	4a28      	ldr	r2, [pc, #160]	@ (800d5ec <HAL_UART_MspInit+0x3a4>)
 800d54a:	4293      	cmp	r3, r2
 800d54c:	d138      	bne.n	800d5c0 <HAL_UART_MspInit+0x378>
    __HAL_RCC_USART4_CLK_ENABLE();
 800d54e:	4b1f      	ldr	r3, [pc, #124]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d550:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d552:	4b1e      	ldr	r3, [pc, #120]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d554:	2180      	movs	r1, #128	@ 0x80
 800d556:	0309      	lsls	r1, r1, #12
 800d558:	430a      	orrs	r2, r1
 800d55a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d55c:	4b1b      	ldr	r3, [pc, #108]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d55e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d560:	2380      	movs	r3, #128	@ 0x80
 800d562:	031b      	lsls	r3, r3, #12
 800d564:	4013      	ands	r3, r2
 800d566:	613b      	str	r3, [r7, #16]
 800d568:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800d56a:	4b18      	ldr	r3, [pc, #96]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d56c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d56e:	4b17      	ldr	r3, [pc, #92]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d570:	2104      	movs	r1, #4
 800d572:	430a      	orrs	r2, r1
 800d574:	635a      	str	r2, [r3, #52]	@ 0x34
 800d576:	4b15      	ldr	r3, [pc, #84]	@ (800d5cc <HAL_UART_MspInit+0x384>)
 800d578:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d57a:	2204      	movs	r2, #4
 800d57c:	4013      	ands	r3, r2
 800d57e:	60fb      	str	r3, [r7, #12]
 800d580:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_10;
 800d582:	216c      	movs	r1, #108	@ 0x6c
 800d584:	187b      	adds	r3, r7, r1
 800d586:	22c0      	movs	r2, #192	@ 0xc0
 800d588:	0112      	lsls	r2, r2, #4
 800d58a:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d58c:	187b      	adds	r3, r7, r1
 800d58e:	2202      	movs	r2, #2
 800d590:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d592:	187b      	adds	r3, r7, r1
 800d594:	2200      	movs	r2, #0
 800d596:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d598:	187b      	adds	r3, r7, r1
 800d59a:	2200      	movs	r2, #0
 800d59c:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART4;
 800d59e:	187b      	adds	r3, r7, r1
 800d5a0:	2201      	movs	r2, #1
 800d5a2:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800d5a4:	187b      	adds	r3, r7, r1
 800d5a6:	4a0a      	ldr	r2, [pc, #40]	@ (800d5d0 <HAL_UART_MspInit+0x388>)
 800d5a8:	0019      	movs	r1, r3
 800d5aa:	0010      	movs	r0, r2
 800d5ac:	f000 ffb6 	bl	800e51c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_4_LPUART1_IRQn, 2, 0);
 800d5b0:	2200      	movs	r2, #0
 800d5b2:	2102      	movs	r1, #2
 800d5b4:	201d      	movs	r0, #29
 800d5b6:	f000 fc4b 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_4_LPUART1_IRQn);
 800d5ba:	201d      	movs	r0, #29
 800d5bc:	f000 fc5d 	bl	800de7a <HAL_NVIC_EnableIRQ>
}
 800d5c0:	46c0      	nop			@ (mov r8, r8)
 800d5c2:	46bd      	mov	sp, r7
 800d5c4:	b021      	add	sp, #132	@ 0x84
 800d5c6:	bd90      	pop	{r4, r7, pc}
 800d5c8:	40008000 	.word	0x40008000
 800d5cc:	40021000 	.word	0x40021000
 800d5d0:	50000800 	.word	0x50000800
 800d5d4:	40013800 	.word	0x40013800
 800d5d8:	20000898 	.word	0x20000898
 800d5dc:	40020008 	.word	0x40020008
 800d5e0:	40004400 	.word	0x40004400
 800d5e4:	40004800 	.word	0x40004800
 800d5e8:	50000400 	.word	0x50000400
 800d5ec:	40004c00 	.word	0x40004c00

0800d5f0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800d5f0:	b590      	push	{r4, r7, lr}
 800d5f2:	b08b      	sub	sp, #44	@ 0x2c
 800d5f4:	af00      	add	r7, sp, #0
 800d5f6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800d5f8:	2414      	movs	r4, #20
 800d5fa:	193b      	adds	r3, r7, r4
 800d5fc:	0018      	movs	r0, r3
 800d5fe:	2314      	movs	r3, #20
 800d600:	001a      	movs	r2, r3
 800d602:	2100      	movs	r1, #0
 800d604:	f00b fb24 	bl	8018c50 <memset>
  if(hspi->Instance==SPI1)
 800d608:	687b      	ldr	r3, [r7, #4]
 800d60a:	681b      	ldr	r3, [r3, #0]
 800d60c:	4a1f      	ldr	r2, [pc, #124]	@ (800d68c <HAL_SPI_MspInit+0x9c>)
 800d60e:	4293      	cmp	r3, r2
 800d610:	d138      	bne.n	800d684 <HAL_SPI_MspInit+0x94>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800d612:	4b1f      	ldr	r3, [pc, #124]	@ (800d690 <HAL_SPI_MspInit+0xa0>)
 800d614:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d616:	4b1e      	ldr	r3, [pc, #120]	@ (800d690 <HAL_SPI_MspInit+0xa0>)
 800d618:	2180      	movs	r1, #128	@ 0x80
 800d61a:	0149      	lsls	r1, r1, #5
 800d61c:	430a      	orrs	r2, r1
 800d61e:	641a      	str	r2, [r3, #64]	@ 0x40
 800d620:	4b1b      	ldr	r3, [pc, #108]	@ (800d690 <HAL_SPI_MspInit+0xa0>)
 800d622:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d624:	2380      	movs	r3, #128	@ 0x80
 800d626:	015b      	lsls	r3, r3, #5
 800d628:	4013      	ands	r3, r2
 800d62a:	613b      	str	r3, [r7, #16]
 800d62c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800d62e:	4b18      	ldr	r3, [pc, #96]	@ (800d690 <HAL_SPI_MspInit+0xa0>)
 800d630:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d632:	4b17      	ldr	r3, [pc, #92]	@ (800d690 <HAL_SPI_MspInit+0xa0>)
 800d634:	2101      	movs	r1, #1
 800d636:	430a      	orrs	r2, r1
 800d638:	635a      	str	r2, [r3, #52]	@ 0x34
 800d63a:	4b15      	ldr	r3, [pc, #84]	@ (800d690 <HAL_SPI_MspInit+0xa0>)
 800d63c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d63e:	2201      	movs	r2, #1
 800d640:	4013      	ands	r3, r2
 800d642:	60fb      	str	r3, [r7, #12]
 800d644:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA1     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_7;
 800d646:	0021      	movs	r1, r4
 800d648:	187b      	adds	r3, r7, r1
 800d64a:	22c2      	movs	r2, #194	@ 0xc2
 800d64c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d64e:	187b      	adds	r3, r7, r1
 800d650:	2202      	movs	r2, #2
 800d652:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d654:	187b      	adds	r3, r7, r1
 800d656:	2200      	movs	r2, #0
 800d658:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d65a:	187b      	adds	r3, r7, r1
 800d65c:	2200      	movs	r2, #0
 800d65e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 800d660:	187b      	adds	r3, r7, r1
 800d662:	2200      	movs	r2, #0
 800d664:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800d666:	187a      	adds	r2, r7, r1
 800d668:	23a0      	movs	r3, #160	@ 0xa0
 800d66a:	05db      	lsls	r3, r3, #23
 800d66c:	0011      	movs	r1, r2
 800d66e:	0018      	movs	r0, r3
 800d670:	f000 ff54 	bl	800e51c <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 800d674:	2200      	movs	r2, #0
 800d676:	2100      	movs	r1, #0
 800d678:	2019      	movs	r0, #25
 800d67a:	f000 fbe9 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 800d67e:	2019      	movs	r0, #25
 800d680:	f000 fbfb 	bl	800de7a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 800d684:	46c0      	nop			@ (mov r8, r8)
 800d686:	46bd      	mov	sp, r7
 800d688:	b00b      	add	sp, #44	@ 0x2c
 800d68a:	bd90      	pop	{r4, r7, pc}
 800d68c:	40013000 	.word	0x40013000
 800d690:	40021000 	.word	0x40021000

0800d694 <HAL_TIM_IC_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_ic: TIM_IC handle pointer
* @retval None
*/
void HAL_TIM_IC_MspInit(TIM_HandleTypeDef* htim_ic)
{
 800d694:	b590      	push	{r4, r7, lr}
 800d696:	b099      	sub	sp, #100	@ 0x64
 800d698:	af00      	add	r7, sp, #0
 800d69a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800d69c:	234c      	movs	r3, #76	@ 0x4c
 800d69e:	18fb      	adds	r3, r7, r3
 800d6a0:	0018      	movs	r0, r3
 800d6a2:	2314      	movs	r3, #20
 800d6a4:	001a      	movs	r2, r3
 800d6a6:	2100      	movs	r1, #0
 800d6a8:	f00b fad2 	bl	8018c50 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800d6ac:	2418      	movs	r4, #24
 800d6ae:	193b      	adds	r3, r7, r4
 800d6b0:	0018      	movs	r0, r3
 800d6b2:	2334      	movs	r3, #52	@ 0x34
 800d6b4:	001a      	movs	r2, r3
 800d6b6:	2100      	movs	r1, #0
 800d6b8:	f00b faca 	bl	8018c50 <memset>
  if(htim_ic->Instance==TIM1)
 800d6bc:	687b      	ldr	r3, [r7, #4]
 800d6be:	681b      	ldr	r3, [r3, #0]
 800d6c0:	4a46      	ldr	r2, [pc, #280]	@ (800d7dc <HAL_TIM_IC_MspInit+0x148>)
 800d6c2:	4293      	cmp	r3, r2
 800d6c4:	d148      	bne.n	800d758 <HAL_TIM_IC_MspInit+0xc4>

  /* USER CODE END TIM1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_TIM1;
 800d6c6:	193b      	adds	r3, r7, r4
 800d6c8:	2280      	movs	r2, #128	@ 0x80
 800d6ca:	0392      	lsls	r2, r2, #14
 800d6cc:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLKSOURCE_PCLK1;
 800d6ce:	193b      	adds	r3, r7, r4
 800d6d0:	2200      	movs	r2, #0
 800d6d2:	629a      	str	r2, [r3, #40]	@ 0x28
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800d6d4:	193b      	adds	r3, r7, r4
 800d6d6:	0018      	movs	r0, r3
 800d6d8:	f003 fcc6 	bl	8011068 <HAL_RCCEx_PeriphCLKConfig>
 800d6dc:	1e03      	subs	r3, r0, #0
 800d6de:	d001      	beq.n	800d6e4 <HAL_TIM_IC_MspInit+0x50>
    {
      Error_Handler();
 800d6e0:	f7ff f88a 	bl	800c7f8 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800d6e4:	4b3e      	ldr	r3, [pc, #248]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d6e6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d6e8:	4b3d      	ldr	r3, [pc, #244]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d6ea:	2180      	movs	r1, #128	@ 0x80
 800d6ec:	0109      	lsls	r1, r1, #4
 800d6ee:	430a      	orrs	r2, r1
 800d6f0:	641a      	str	r2, [r3, #64]	@ 0x40
 800d6f2:	4b3b      	ldr	r3, [pc, #236]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d6f4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d6f6:	2380      	movs	r3, #128	@ 0x80
 800d6f8:	011b      	lsls	r3, r3, #4
 800d6fa:	4013      	ands	r3, r2
 800d6fc:	617b      	str	r3, [r7, #20]
 800d6fe:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800d700:	4b37      	ldr	r3, [pc, #220]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d702:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d704:	4b36      	ldr	r3, [pc, #216]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d706:	2104      	movs	r1, #4
 800d708:	430a      	orrs	r2, r1
 800d70a:	635a      	str	r2, [r3, #52]	@ 0x34
 800d70c:	4b34      	ldr	r3, [pc, #208]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d70e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d710:	2204      	movs	r2, #4
 800d712:	4013      	ands	r3, r2
 800d714:	613b      	str	r3, [r7, #16]
 800d716:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PC8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800d718:	214c      	movs	r1, #76	@ 0x4c
 800d71a:	187b      	adds	r3, r7, r1
 800d71c:	2280      	movs	r2, #128	@ 0x80
 800d71e:	0052      	lsls	r2, r2, #1
 800d720:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d722:	187b      	adds	r3, r7, r1
 800d724:	2202      	movs	r2, #2
 800d726:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d728:	187b      	adds	r3, r7, r1
 800d72a:	2200      	movs	r2, #0
 800d72c:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d72e:	187b      	adds	r3, r7, r1
 800d730:	2200      	movs	r2, #0
 800d732:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 800d734:	187b      	adds	r3, r7, r1
 800d736:	2202      	movs	r2, #2
 800d738:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800d73a:	187b      	adds	r3, r7, r1
 800d73c:	4a29      	ldr	r2, [pc, #164]	@ (800d7e4 <HAL_TIM_IC_MspInit+0x150>)
 800d73e:	0019      	movs	r1, r3
 800d740:	0010      	movs	r0, r2
 800d742:	f000 feeb 	bl	800e51c <HAL_GPIO_Init>

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_CC_IRQn, 0, 0);
 800d746:	2200      	movs	r2, #0
 800d748:	2100      	movs	r1, #0
 800d74a:	200e      	movs	r0, #14
 800d74c:	f000 fb80 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 800d750:	200e      	movs	r0, #14
 800d752:	f000 fb92 	bl	800de7a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 800d756:	e03d      	b.n	800d7d4 <HAL_TIM_IC_MspInit+0x140>
  else if(htim_ic->Instance==TIM2)
 800d758:	687b      	ldr	r3, [r7, #4]
 800d75a:	681a      	ldr	r2, [r3, #0]
 800d75c:	2380      	movs	r3, #128	@ 0x80
 800d75e:	05db      	lsls	r3, r3, #23
 800d760:	429a      	cmp	r2, r3
 800d762:	d137      	bne.n	800d7d4 <HAL_TIM_IC_MspInit+0x140>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800d764:	4b1e      	ldr	r3, [pc, #120]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d766:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d768:	4b1d      	ldr	r3, [pc, #116]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d76a:	2101      	movs	r1, #1
 800d76c:	430a      	orrs	r2, r1
 800d76e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d770:	4b1b      	ldr	r3, [pc, #108]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d772:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d774:	2201      	movs	r2, #1
 800d776:	4013      	ands	r3, r2
 800d778:	60fb      	str	r3, [r7, #12]
 800d77a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800d77c:	4b18      	ldr	r3, [pc, #96]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d77e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d780:	4b17      	ldr	r3, [pc, #92]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d782:	2101      	movs	r1, #1
 800d784:	430a      	orrs	r2, r1
 800d786:	635a      	str	r2, [r3, #52]	@ 0x34
 800d788:	4b15      	ldr	r3, [pc, #84]	@ (800d7e0 <HAL_TIM_IC_MspInit+0x14c>)
 800d78a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d78c:	2201      	movs	r2, #1
 800d78e:	4013      	ands	r3, r2
 800d790:	60bb      	str	r3, [r7, #8]
 800d792:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 800d794:	214c      	movs	r1, #76	@ 0x4c
 800d796:	187b      	adds	r3, r7, r1
 800d798:	2280      	movs	r2, #128	@ 0x80
 800d79a:	0212      	lsls	r2, r2, #8
 800d79c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800d79e:	187b      	adds	r3, r7, r1
 800d7a0:	2202      	movs	r2, #2
 800d7a2:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800d7a4:	187b      	adds	r3, r7, r1
 800d7a6:	2200      	movs	r2, #0
 800d7a8:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800d7aa:	187b      	adds	r3, r7, r1
 800d7ac:	2200      	movs	r2, #0
 800d7ae:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 800d7b0:	187b      	adds	r3, r7, r1
 800d7b2:	2202      	movs	r2, #2
 800d7b4:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800d7b6:	187a      	adds	r2, r7, r1
 800d7b8:	23a0      	movs	r3, #160	@ 0xa0
 800d7ba:	05db      	lsls	r3, r3, #23
 800d7bc:	0011      	movs	r1, r2
 800d7be:	0018      	movs	r0, r3
 800d7c0:	f000 feac 	bl	800e51c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800d7c4:	2200      	movs	r2, #0
 800d7c6:	2100      	movs	r1, #0
 800d7c8:	200f      	movs	r0, #15
 800d7ca:	f000 fb41 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800d7ce:	200f      	movs	r0, #15
 800d7d0:	f000 fb53 	bl	800de7a <HAL_NVIC_EnableIRQ>
}
 800d7d4:	46c0      	nop			@ (mov r8, r8)
 800d7d6:	46bd      	mov	sp, r7
 800d7d8:	b019      	add	sp, #100	@ 0x64
 800d7da:	bd90      	pop	{r4, r7, pc}
 800d7dc:	40012c00 	.word	0x40012c00
 800d7e0:	40021000 	.word	0x40021000
 800d7e4:	50000800 	.word	0x50000800

0800d7e8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800d7e8:	b580      	push	{r7, lr}
 800d7ea:	b084      	sub	sp, #16
 800d7ec:	af00      	add	r7, sp, #0
 800d7ee:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 800d7f0:	687b      	ldr	r3, [r7, #4]
 800d7f2:	681b      	ldr	r3, [r3, #0]
 800d7f4:	4a0d      	ldr	r2, [pc, #52]	@ (800d82c <HAL_TIM_Base_MspInit+0x44>)
 800d7f6:	4293      	cmp	r3, r2
 800d7f8:	d113      	bne.n	800d822 <HAL_TIM_Base_MspInit+0x3a>
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */

    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800d7fa:	4b0d      	ldr	r3, [pc, #52]	@ (800d830 <HAL_TIM_Base_MspInit+0x48>)
 800d7fc:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d7fe:	4b0c      	ldr	r3, [pc, #48]	@ (800d830 <HAL_TIM_Base_MspInit+0x48>)
 800d800:	2102      	movs	r1, #2
 800d802:	430a      	orrs	r2, r1
 800d804:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d806:	4b0a      	ldr	r3, [pc, #40]	@ (800d830 <HAL_TIM_Base_MspInit+0x48>)
 800d808:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d80a:	2202      	movs	r2, #2
 800d80c:	4013      	ands	r3, r2
 800d80e:	60fb      	str	r3, [r7, #12]
 800d810:	68fb      	ldr	r3, [r7, #12]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 800d812:	2200      	movs	r2, #0
 800d814:	2100      	movs	r1, #0
 800d816:	2010      	movs	r0, #16
 800d818:	f000 fb1a 	bl	800de50 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 800d81c:	2010      	movs	r0, #16
 800d81e:	f000 fb2c 	bl	800de7a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 800d822:	46c0      	nop			@ (mov r8, r8)
 800d824:	46bd      	mov	sp, r7
 800d826:	b004      	add	sp, #16
 800d828:	bd80      	pop	{r7, pc}
 800d82a:	46c0      	nop			@ (mov r8, r8)
 800d82c:	40000400 	.word	0x40000400
 800d830:	40021000 	.word	0x40021000

0800d834 <SDTimer_Handler>:
/* USER CODE BEGIN 0 */
volatile uint8_t FatFsCnt = 0;
volatile uint16_t Timer1, Timer2;

void SDTimer_Handler(void)
{
 800d834:	b580      	push	{r7, lr}
 800d836:	af00      	add	r7, sp, #0
  if(Timer1 > 0)
 800d838:	4b0d      	ldr	r3, [pc, #52]	@ (800d870 <SDTimer_Handler+0x3c>)
 800d83a:	881b      	ldrh	r3, [r3, #0]
 800d83c:	b29b      	uxth	r3, r3
 800d83e:	2b00      	cmp	r3, #0
 800d840:	d006      	beq.n	800d850 <SDTimer_Handler+0x1c>
    Timer1--;
 800d842:	4b0b      	ldr	r3, [pc, #44]	@ (800d870 <SDTimer_Handler+0x3c>)
 800d844:	881b      	ldrh	r3, [r3, #0]
 800d846:	b29b      	uxth	r3, r3
 800d848:	3b01      	subs	r3, #1
 800d84a:	b29a      	uxth	r2, r3
 800d84c:	4b08      	ldr	r3, [pc, #32]	@ (800d870 <SDTimer_Handler+0x3c>)
 800d84e:	801a      	strh	r2, [r3, #0]

  if(Timer2 > 0)
 800d850:	4b08      	ldr	r3, [pc, #32]	@ (800d874 <SDTimer_Handler+0x40>)
 800d852:	881b      	ldrh	r3, [r3, #0]
 800d854:	b29b      	uxth	r3, r3
 800d856:	2b00      	cmp	r3, #0
 800d858:	d006      	beq.n	800d868 <SDTimer_Handler+0x34>
    Timer2--;
 800d85a:	4b06      	ldr	r3, [pc, #24]	@ (800d874 <SDTimer_Handler+0x40>)
 800d85c:	881b      	ldrh	r3, [r3, #0]
 800d85e:	b29b      	uxth	r3, r3
 800d860:	3b01      	subs	r3, #1
 800d862:	b29a      	uxth	r2, r3
 800d864:	4b03      	ldr	r3, [pc, #12]	@ (800d874 <SDTimer_Handler+0x40>)
 800d866:	801a      	strh	r2, [r3, #0]
}
 800d868:	46c0      	nop			@ (mov r8, r8)
 800d86a:	46bd      	mov	sp, r7
 800d86c:	bd80      	pop	{r7, pc}
 800d86e:	46c0      	nop			@ (mov r8, r8)
 800d870:	2000346a 	.word	0x2000346a
 800d874:	2000346c 	.word	0x2000346c

0800d878 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800d878:	b580      	push	{r7, lr}
 800d87a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800d87c:	46c0      	nop			@ (mov r8, r8)
 800d87e:	e7fd      	b.n	800d87c <NMI_Handler+0x4>

0800d880 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800d880:	b580      	push	{r7, lr}
 800d882:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800d884:	46c0      	nop			@ (mov r8, r8)
 800d886:	e7fd      	b.n	800d884 <HardFault_Handler+0x4>

0800d888 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800d888:	b580      	push	{r7, lr}
 800d88a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800d88c:	46c0      	nop			@ (mov r8, r8)
 800d88e:	46bd      	mov	sp, r7
 800d890:	bd80      	pop	{r7, pc}

0800d892 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800d892:	b580      	push	{r7, lr}
 800d894:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800d896:	46c0      	nop			@ (mov r8, r8)
 800d898:	46bd      	mov	sp, r7
 800d89a:	bd80      	pop	{r7, pc}

0800d89c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800d89c:	b580      	push	{r7, lr}
 800d89e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */
	FatFsCnt++;
 800d8a0:	4b0a      	ldr	r3, [pc, #40]	@ (800d8cc <SysTick_Handler+0x30>)
 800d8a2:	781b      	ldrb	r3, [r3, #0]
 800d8a4:	b2db      	uxtb	r3, r3
 800d8a6:	3301      	adds	r3, #1
 800d8a8:	b2da      	uxtb	r2, r3
 800d8aa:	4b08      	ldr	r3, [pc, #32]	@ (800d8cc <SysTick_Handler+0x30>)
 800d8ac:	701a      	strb	r2, [r3, #0]
	if(FatFsCnt >= 10)
 800d8ae:	4b07      	ldr	r3, [pc, #28]	@ (800d8cc <SysTick_Handler+0x30>)
 800d8b0:	781b      	ldrb	r3, [r3, #0]
 800d8b2:	b2db      	uxtb	r3, r3
 800d8b4:	2b09      	cmp	r3, #9
 800d8b6:	d904      	bls.n	800d8c2 <SysTick_Handler+0x26>
	{
		FatFsCnt = 0;
 800d8b8:	4b04      	ldr	r3, [pc, #16]	@ (800d8cc <SysTick_Handler+0x30>)
 800d8ba:	2200      	movs	r2, #0
 800d8bc:	701a      	strb	r2, [r3, #0]
		  SDTimer_Handler();
 800d8be:	f7ff ffb9 	bl	800d834 <SDTimer_Handler>
	}

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800d8c2:	f000 f9c3 	bl	800dc4c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800d8c6:	46c0      	nop			@ (mov r8, r8)
 800d8c8:	46bd      	mov	sp, r7
 800d8ca:	bd80      	pop	{r7, pc}
 800d8cc:	20003468 	.word	0x20003468

0800d8d0 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 800d8d0:	b580      	push	{r7, lr}
 800d8d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 800d8d4:	4b03      	ldr	r3, [pc, #12]	@ (800d8e4 <DMA1_Channel1_IRQHandler+0x14>)
 800d8d6:	0018      	movs	r0, r3
 800d8d8:	f000 fcc8 	bl	800e26c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 800d8dc:	46c0      	nop			@ (mov r8, r8)
 800d8de:	46bd      	mov	sp, r7
 800d8e0:	bd80      	pop	{r7, pc}
 800d8e2:	46c0      	nop			@ (mov r8, r8)
 800d8e4:	20000898 	.word	0x20000898

0800d8e8 <TIM1_CC_IRQHandler>:

/**
  * @brief This function handles TIM1 capture compare interrupt.
  */
void TIM1_CC_IRQHandler(void)
{
 800d8e8:	b580      	push	{r7, lr}
 800d8ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_CC_IRQn 0 */

  /* USER CODE END TIM1_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 800d8ec:	4b03      	ldr	r3, [pc, #12]	@ (800d8fc <TIM1_CC_IRQHandler+0x14>)
 800d8ee:	0018      	movs	r0, r3
 800d8f0:	f004 fe16 	bl	8012520 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_CC_IRQn 1 */

  /* USER CODE END TIM1_CC_IRQn 1 */
}
 800d8f4:	46c0      	nop			@ (mov r8, r8)
 800d8f6:	46bd      	mov	sp, r7
 800d8f8:	bd80      	pop	{r7, pc}
 800d8fa:	46c0      	nop			@ (mov r8, r8)
 800d8fc:	20000958 	.word	0x20000958

0800d900 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 800d900:	b580      	push	{r7, lr}
 800d902:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800d904:	4b03      	ldr	r3, [pc, #12]	@ (800d914 <TIM2_IRQHandler+0x14>)
 800d906:	0018      	movs	r0, r3
 800d908:	f004 fe0a 	bl	8012520 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800d90c:	46c0      	nop			@ (mov r8, r8)
 800d90e:	46bd      	mov	sp, r7
 800d910:	bd80      	pop	{r7, pc}
 800d912:	46c0      	nop			@ (mov r8, r8)
 800d914:	200009a4 	.word	0x200009a4

0800d918 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 800d918:	b580      	push	{r7, lr}
 800d91a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 800d91c:	4b03      	ldr	r3, [pc, #12]	@ (800d92c <TIM3_IRQHandler+0x14>)
 800d91e:	0018      	movs	r0, r3
 800d920:	f004 fdfe 	bl	8012520 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800d924:	46c0      	nop			@ (mov r8, r8)
 800d926:	46bd      	mov	sp, r7
 800d928:	bd80      	pop	{r7, pc}
 800d92a:	46c0      	nop			@ (mov r8, r8)
 800d92c:	200009f0 	.word	0x200009f0

0800d930 <I2C1_IRQHandler>:

/**
  * @brief This function handles I2C1 event global interrupt / I2C1 wake-up interrupt through EXTI line 23.
  */
void I2C1_IRQHandler(void)
{
 800d930:	b580      	push	{r7, lr}
 800d932:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_IRQn 0 */

  /* USER CODE END I2C1_IRQn 0 */
  if (hi2c1.Instance->ISR & (I2C_FLAG_BERR | I2C_FLAG_ARLO | I2C_FLAG_OVR)) {
 800d934:	4b09      	ldr	r3, [pc, #36]	@ (800d95c <I2C1_IRQHandler+0x2c>)
 800d936:	681b      	ldr	r3, [r3, #0]
 800d938:	699a      	ldr	r2, [r3, #24]
 800d93a:	23e0      	movs	r3, #224	@ 0xe0
 800d93c:	00db      	lsls	r3, r3, #3
 800d93e:	4013      	ands	r3, r2
 800d940:	d004      	beq.n	800d94c <I2C1_IRQHandler+0x1c>
    HAL_I2C_ER_IRQHandler(&hi2c1);
 800d942:	4b06      	ldr	r3, [pc, #24]	@ (800d95c <I2C1_IRQHandler+0x2c>)
 800d944:	0018      	movs	r0, r3
 800d946:	f001 fca9 	bl	800f29c <HAL_I2C_ER_IRQHandler>
    HAL_I2C_EV_IRQHandler(&hi2c1);
  }
  /* USER CODE BEGIN I2C1_IRQn 1 */

  /* USER CODE END I2C1_IRQn 1 */
}
 800d94a:	e003      	b.n	800d954 <I2C1_IRQHandler+0x24>
    HAL_I2C_EV_IRQHandler(&hi2c1);
 800d94c:	4b03      	ldr	r3, [pc, #12]	@ (800d95c <I2C1_IRQHandler+0x2c>)
 800d94e:	0018      	movs	r0, r3
 800d950:	f001 fc8a 	bl	800f268 <HAL_I2C_EV_IRQHandler>
}
 800d954:	46c0      	nop			@ (mov r8, r8)
 800d956:	46bd      	mov	sp, r7
 800d958:	bd80      	pop	{r7, pc}
 800d95a:	46c0      	nop			@ (mov r8, r8)
 800d95c:	20000530 	.word	0x20000530

0800d960 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 800d960:	b580      	push	{r7, lr}
 800d962:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 800d964:	4b03      	ldr	r3, [pc, #12]	@ (800d974 <SPI1_IRQHandler+0x14>)
 800d966:	0018      	movs	r0, r3
 800d968:	f004 f918 	bl	8011b9c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 800d96c:	46c0      	nop			@ (mov r8, r8)
 800d96e:	46bd      	mov	sp, r7
 800d970:	bd80      	pop	{r7, pc}
 800d972:	46c0      	nop			@ (mov r8, r8)
 800d974:	200008f4 	.word	0x200008f4

0800d978 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI line 25.
  */
void USART1_IRQHandler(void)
{
 800d978:	b580      	push	{r7, lr}
 800d97a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800d97c:	4b05      	ldr	r3, [pc, #20]	@ (800d994 <USART1_IRQHandler+0x1c>)
 800d97e:	0018      	movs	r0, r3
 800d980:	f005 fec8 	bl	8013714 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */
  USER_UART_IRQHandler(&huart1);
 800d984:	4b03      	ldr	r3, [pc, #12]	@ (800d994 <USART1_IRQHandler+0x1c>)
 800d986:	0018      	movs	r0, r3
 800d988:	f7f6 fb24 	bl	8003fd4 <USER_UART_IRQHandler>

  /* USER CODE END USART1_IRQn 1 */
}
 800d98c:	46c0      	nop			@ (mov r8, r8)
 800d98e:	46bd      	mov	sp, r7
 800d990:	bd80      	pop	{r7, pc}
 800d992:	46c0      	nop			@ (mov r8, r8)
 800d994:	20000658 	.word	0x20000658

0800d998 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI line 26.
  */
void USART2_IRQHandler(void)
{
 800d998:	b580      	push	{r7, lr}
 800d99a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 800d99c:	4b03      	ldr	r3, [pc, #12]	@ (800d9ac <USART2_IRQHandler+0x14>)
 800d99e:	0018      	movs	r0, r3
 800d9a0:	f005 feb8 	bl	8013714 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800d9a4:	46c0      	nop			@ (mov r8, r8)
 800d9a6:	46bd      	mov	sp, r7
 800d9a8:	bd80      	pop	{r7, pc}
 800d9aa:	46c0      	nop			@ (mov r8, r8)
 800d9ac:	200006e8 	.word	0x200006e8

0800d9b0 <USART3_4_LPUART1_IRQHandler>:

/**
  * @brief This function handles USART3, USART4 and LPUART1 interrupts / LPUART1 wake-up interrupt through EXTI line 28.
  */
void USART3_4_LPUART1_IRQHandler(void)
{
 800d9b0:	b580      	push	{r7, lr}
 800d9b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_4_LPUART1_IRQn 0 */

  /* USER CODE END USART3_4_LPUART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 800d9b4:	4b07      	ldr	r3, [pc, #28]	@ (800d9d4 <USART3_4_LPUART1_IRQHandler+0x24>)
 800d9b6:	0018      	movs	r0, r3
 800d9b8:	f005 feac 	bl	8013714 <HAL_UART_IRQHandler>
  HAL_UART_IRQHandler(&huart4);
 800d9bc:	4b06      	ldr	r3, [pc, #24]	@ (800d9d8 <USART3_4_LPUART1_IRQHandler+0x28>)
 800d9be:	0018      	movs	r0, r3
 800d9c0:	f005 fea8 	bl	8013714 <HAL_UART_IRQHandler>
  HAL_UART_IRQHandler(&hlpuart1);
 800d9c4:	4b05      	ldr	r3, [pc, #20]	@ (800d9dc <USART3_4_LPUART1_IRQHandler+0x2c>)
 800d9c6:	0018      	movs	r0, r3
 800d9c8:	f005 fea4 	bl	8013714 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_4_LPUART1_IRQn 1 */

  /* USER CODE END USART3_4_LPUART1_IRQn 1 */
}
 800d9cc:	46c0      	nop			@ (mov r8, r8)
 800d9ce:	46bd      	mov	sp, r7
 800d9d0:	bd80      	pop	{r7, pc}
 800d9d2:	46c0      	nop			@ (mov r8, r8)
 800d9d4:	20000778 	.word	0x20000778
 800d9d8:	20000808 	.word	0x20000808
 800d9dc:	200005c8 	.word	0x200005c8

0800d9e0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800d9e0:	b580      	push	{r7, lr}
 800d9e2:	b086      	sub	sp, #24
 800d9e4:	af00      	add	r7, sp, #0
 800d9e6:	60f8      	str	r0, [r7, #12]
 800d9e8:	60b9      	str	r1, [r7, #8]
 800d9ea:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800d9ec:	2300      	movs	r3, #0
 800d9ee:	617b      	str	r3, [r7, #20]
 800d9f0:	e00a      	b.n	800da08 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800d9f2:	e000      	b.n	800d9f6 <_read+0x16>
 800d9f4:	bf00      	nop
 800d9f6:	0001      	movs	r1, r0
 800d9f8:	68bb      	ldr	r3, [r7, #8]
 800d9fa:	1c5a      	adds	r2, r3, #1
 800d9fc:	60ba      	str	r2, [r7, #8]
 800d9fe:	b2ca      	uxtb	r2, r1
 800da00:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800da02:	697b      	ldr	r3, [r7, #20]
 800da04:	3301      	adds	r3, #1
 800da06:	617b      	str	r3, [r7, #20]
 800da08:	697a      	ldr	r2, [r7, #20]
 800da0a:	687b      	ldr	r3, [r7, #4]
 800da0c:	429a      	cmp	r2, r3
 800da0e:	dbf0      	blt.n	800d9f2 <_read+0x12>
	}

return len;
 800da10:	687b      	ldr	r3, [r7, #4]
}
 800da12:	0018      	movs	r0, r3
 800da14:	46bd      	mov	sp, r7
 800da16:	b006      	add	sp, #24
 800da18:	bd80      	pop	{r7, pc}

0800da1a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800da1a:	b580      	push	{r7, lr}
 800da1c:	b086      	sub	sp, #24
 800da1e:	af00      	add	r7, sp, #0
 800da20:	60f8      	str	r0, [r7, #12]
 800da22:	60b9      	str	r1, [r7, #8]
 800da24:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800da26:	2300      	movs	r3, #0
 800da28:	617b      	str	r3, [r7, #20]
 800da2a:	e009      	b.n	800da40 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800da2c:	68bb      	ldr	r3, [r7, #8]
 800da2e:	1c5a      	adds	r2, r3, #1
 800da30:	60ba      	str	r2, [r7, #8]
 800da32:	781b      	ldrb	r3, [r3, #0]
 800da34:	0018      	movs	r0, r3
 800da36:	e000      	b.n	800da3a <_write+0x20>
 800da38:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800da3a:	697b      	ldr	r3, [r7, #20]
 800da3c:	3301      	adds	r3, #1
 800da3e:	617b      	str	r3, [r7, #20]
 800da40:	697a      	ldr	r2, [r7, #20]
 800da42:	687b      	ldr	r3, [r7, #4]
 800da44:	429a      	cmp	r2, r3
 800da46:	dbf1      	blt.n	800da2c <_write+0x12>
	}
	return len;
 800da48:	687b      	ldr	r3, [r7, #4]
}
 800da4a:	0018      	movs	r0, r3
 800da4c:	46bd      	mov	sp, r7
 800da4e:	b006      	add	sp, #24
 800da50:	bd80      	pop	{r7, pc}

0800da52 <_close>:

int _close(int file)
{
 800da52:	b580      	push	{r7, lr}
 800da54:	b082      	sub	sp, #8
 800da56:	af00      	add	r7, sp, #0
 800da58:	6078      	str	r0, [r7, #4]
	return -1;
 800da5a:	2301      	movs	r3, #1
 800da5c:	425b      	negs	r3, r3
}
 800da5e:	0018      	movs	r0, r3
 800da60:	46bd      	mov	sp, r7
 800da62:	b002      	add	sp, #8
 800da64:	bd80      	pop	{r7, pc}

0800da66 <_fstat>:


int _fstat(int file, struct stat *st)
{
 800da66:	b580      	push	{r7, lr}
 800da68:	b082      	sub	sp, #8
 800da6a:	af00      	add	r7, sp, #0
 800da6c:	6078      	str	r0, [r7, #4]
 800da6e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800da70:	683b      	ldr	r3, [r7, #0]
 800da72:	2280      	movs	r2, #128	@ 0x80
 800da74:	0192      	lsls	r2, r2, #6
 800da76:	605a      	str	r2, [r3, #4]
	return 0;
 800da78:	2300      	movs	r3, #0
}
 800da7a:	0018      	movs	r0, r3
 800da7c:	46bd      	mov	sp, r7
 800da7e:	b002      	add	sp, #8
 800da80:	bd80      	pop	{r7, pc}

0800da82 <_isatty>:

int _isatty(int file)
{
 800da82:	b580      	push	{r7, lr}
 800da84:	b082      	sub	sp, #8
 800da86:	af00      	add	r7, sp, #0
 800da88:	6078      	str	r0, [r7, #4]
	return 1;
 800da8a:	2301      	movs	r3, #1
}
 800da8c:	0018      	movs	r0, r3
 800da8e:	46bd      	mov	sp, r7
 800da90:	b002      	add	sp, #8
 800da92:	bd80      	pop	{r7, pc}

0800da94 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800da94:	b580      	push	{r7, lr}
 800da96:	b084      	sub	sp, #16
 800da98:	af00      	add	r7, sp, #0
 800da9a:	60f8      	str	r0, [r7, #12]
 800da9c:	60b9      	str	r1, [r7, #8]
 800da9e:	607a      	str	r2, [r7, #4]
	return 0;
 800daa0:	2300      	movs	r3, #0
}
 800daa2:	0018      	movs	r0, r3
 800daa4:	46bd      	mov	sp, r7
 800daa6:	b004      	add	sp, #16
 800daa8:	bd80      	pop	{r7, pc}
	...

0800daac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800daac:	b580      	push	{r7, lr}
 800daae:	b086      	sub	sp, #24
 800dab0:	af00      	add	r7, sp, #0
 800dab2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800dab4:	4a14      	ldr	r2, [pc, #80]	@ (800db08 <_sbrk+0x5c>)
 800dab6:	4b15      	ldr	r3, [pc, #84]	@ (800db0c <_sbrk+0x60>)
 800dab8:	1ad3      	subs	r3, r2, r3
 800daba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800dabc:	697b      	ldr	r3, [r7, #20]
 800dabe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800dac0:	4b13      	ldr	r3, [pc, #76]	@ (800db10 <_sbrk+0x64>)
 800dac2:	681b      	ldr	r3, [r3, #0]
 800dac4:	2b00      	cmp	r3, #0
 800dac6:	d102      	bne.n	800dace <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800dac8:	4b11      	ldr	r3, [pc, #68]	@ (800db10 <_sbrk+0x64>)
 800daca:	4a12      	ldr	r2, [pc, #72]	@ (800db14 <_sbrk+0x68>)
 800dacc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800dace:	4b10      	ldr	r3, [pc, #64]	@ (800db10 <_sbrk+0x64>)
 800dad0:	681a      	ldr	r2, [r3, #0]
 800dad2:	687b      	ldr	r3, [r7, #4]
 800dad4:	18d3      	adds	r3, r2, r3
 800dad6:	693a      	ldr	r2, [r7, #16]
 800dad8:	429a      	cmp	r2, r3
 800dada:	d207      	bcs.n	800daec <_sbrk+0x40>
  {
    errno = ENOMEM;
 800dadc:	f00b f90e 	bl	8018cfc <__errno>
 800dae0:	0003      	movs	r3, r0
 800dae2:	220c      	movs	r2, #12
 800dae4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800dae6:	2301      	movs	r3, #1
 800dae8:	425b      	negs	r3, r3
 800daea:	e009      	b.n	800db00 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800daec:	4b08      	ldr	r3, [pc, #32]	@ (800db10 <_sbrk+0x64>)
 800daee:	681b      	ldr	r3, [r3, #0]
 800daf0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800daf2:	4b07      	ldr	r3, [pc, #28]	@ (800db10 <_sbrk+0x64>)
 800daf4:	681a      	ldr	r2, [r3, #0]
 800daf6:	687b      	ldr	r3, [r7, #4]
 800daf8:	18d2      	adds	r2, r2, r3
 800dafa:	4b05      	ldr	r3, [pc, #20]	@ (800db10 <_sbrk+0x64>)
 800dafc:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800dafe:	68fb      	ldr	r3, [r7, #12]
}
 800db00:	0018      	movs	r0, r3
 800db02:	46bd      	mov	sp, r7
 800db04:	b006      	add	sp, #24
 800db06:	bd80      	pop	{r7, pc}
 800db08:	20009000 	.word	0x20009000
 800db0c:	00000400 	.word	0x00000400
 800db10:	20003470 	.word	0x20003470
 800db14:	20003600 	.word	0x20003600

0800db18 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800db18:	b580      	push	{r7, lr}
 800db1a:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800db1c:	46c0      	nop			@ (mov r8, r8)
 800db1e:	46bd      	mov	sp, r7
 800db20:	bd80      	pop	{r7, pc}
	...

0800db24 <Reset_Handler>:
 800db24:	480d      	ldr	r0, [pc, #52]	@ (800db5c <LoopForever+0x2>)
 800db26:	4685      	mov	sp, r0
 800db28:	f7ff fff6 	bl	800db18 <SystemInit>
 800db2c:	480c      	ldr	r0, [pc, #48]	@ (800db60 <LoopForever+0x6>)
 800db2e:	490d      	ldr	r1, [pc, #52]	@ (800db64 <LoopForever+0xa>)
 800db30:	4a0d      	ldr	r2, [pc, #52]	@ (800db68 <LoopForever+0xe>)
 800db32:	2300      	movs	r3, #0
 800db34:	e002      	b.n	800db3c <LoopCopyDataInit>

0800db36 <CopyDataInit>:
 800db36:	58d4      	ldr	r4, [r2, r3]
 800db38:	50c4      	str	r4, [r0, r3]
 800db3a:	3304      	adds	r3, #4

0800db3c <LoopCopyDataInit>:
 800db3c:	18c4      	adds	r4, r0, r3
 800db3e:	428c      	cmp	r4, r1
 800db40:	d3f9      	bcc.n	800db36 <CopyDataInit>
 800db42:	4a0a      	ldr	r2, [pc, #40]	@ (800db6c <LoopForever+0x12>)
 800db44:	4c0a      	ldr	r4, [pc, #40]	@ (800db70 <LoopForever+0x16>)
 800db46:	2300      	movs	r3, #0
 800db48:	e001      	b.n	800db4e <LoopFillZerobss>

0800db4a <FillZerobss>:
 800db4a:	6013      	str	r3, [r2, #0]
 800db4c:	3204      	adds	r2, #4

0800db4e <LoopFillZerobss>:
 800db4e:	42a2      	cmp	r2, r4
 800db50:	d3fb      	bcc.n	800db4a <FillZerobss>
 800db52:	f00b f8d9 	bl	8018d08 <__libc_init_array>
 800db56:	f7f6 fbe7 	bl	8004328 <main>

0800db5a <LoopForever>:
 800db5a:	e7fe      	b.n	800db5a <LoopForever>
 800db5c:	20009000 	.word	0x20009000
 800db60:	20000000 	.word	0x20000000
 800db64:	20000510 	.word	0x20000510
 800db68:	0801a090 	.word	0x0801a090
 800db6c:	20000510 	.word	0x20000510
 800db70:	20003600 	.word	0x20003600

0800db74 <ADC1_COMP_IRQHandler>:
 800db74:	e7fe      	b.n	800db74 <ADC1_COMP_IRQHandler>
	...

0800db78 <HAL_Init>:
 800db78:	b580      	push	{r7, lr}
 800db7a:	b082      	sub	sp, #8
 800db7c:	af00      	add	r7, sp, #0
 800db7e:	1dfb      	adds	r3, r7, #7
 800db80:	2200      	movs	r2, #0
 800db82:	701a      	strb	r2, [r3, #0]
 800db84:	4b0b      	ldr	r3, [pc, #44]	@ (800dbb4 <HAL_Init+0x3c>)
 800db86:	681a      	ldr	r2, [r3, #0]
 800db88:	4b0a      	ldr	r3, [pc, #40]	@ (800dbb4 <HAL_Init+0x3c>)
 800db8a:	2180      	movs	r1, #128	@ 0x80
 800db8c:	0049      	lsls	r1, r1, #1
 800db8e:	430a      	orrs	r2, r1
 800db90:	601a      	str	r2, [r3, #0]
 800db92:	2000      	movs	r0, #0
 800db94:	f000 f810 	bl	800dbb8 <HAL_InitTick>
 800db98:	1e03      	subs	r3, r0, #0
 800db9a:	d003      	beq.n	800dba4 <HAL_Init+0x2c>
 800db9c:	1dfb      	adds	r3, r7, #7
 800db9e:	2201      	movs	r2, #1
 800dba0:	701a      	strb	r2, [r3, #0]
 800dba2:	e001      	b.n	800dba8 <HAL_Init+0x30>
 800dba4:	f7ff fa84 	bl	800d0b0 <HAL_MspInit>
 800dba8:	1dfb      	adds	r3, r7, #7
 800dbaa:	781b      	ldrb	r3, [r3, #0]
 800dbac:	0018      	movs	r0, r3
 800dbae:	46bd      	mov	sp, r7
 800dbb0:	b002      	add	sp, #8
 800dbb2:	bd80      	pop	{r7, pc}
 800dbb4:	40022000 	.word	0x40022000

0800dbb8 <HAL_InitTick>:
 800dbb8:	b590      	push	{r4, r7, lr}
 800dbba:	b085      	sub	sp, #20
 800dbbc:	af00      	add	r7, sp, #0
 800dbbe:	6078      	str	r0, [r7, #4]
 800dbc0:	230f      	movs	r3, #15
 800dbc2:	18fb      	adds	r3, r7, r3
 800dbc4:	2200      	movs	r2, #0
 800dbc6:	701a      	strb	r2, [r3, #0]
 800dbc8:	4b1d      	ldr	r3, [pc, #116]	@ (800dc40 <HAL_InitTick+0x88>)
 800dbca:	781b      	ldrb	r3, [r3, #0]
 800dbcc:	2b00      	cmp	r3, #0
 800dbce:	d02b      	beq.n	800dc28 <HAL_InitTick+0x70>
 800dbd0:	4b1c      	ldr	r3, [pc, #112]	@ (800dc44 <HAL_InitTick+0x8c>)
 800dbd2:	681c      	ldr	r4, [r3, #0]
 800dbd4:	4b1a      	ldr	r3, [pc, #104]	@ (800dc40 <HAL_InitTick+0x88>)
 800dbd6:	781b      	ldrb	r3, [r3, #0]
 800dbd8:	0019      	movs	r1, r3
 800dbda:	23fa      	movs	r3, #250	@ 0xfa
 800dbdc:	0098      	lsls	r0, r3, #2
 800dbde:	f7f2 faa3 	bl	8000128 <__udivsi3>
 800dbe2:	0003      	movs	r3, r0
 800dbe4:	0019      	movs	r1, r3
 800dbe6:	0020      	movs	r0, r4
 800dbe8:	f7f2 fa9e 	bl	8000128 <__udivsi3>
 800dbec:	0003      	movs	r3, r0
 800dbee:	0018      	movs	r0, r3
 800dbf0:	f000 f953 	bl	800de9a <HAL_SYSTICK_Config>
 800dbf4:	1e03      	subs	r3, r0, #0
 800dbf6:	d112      	bne.n	800dc1e <HAL_InitTick+0x66>
 800dbf8:	687b      	ldr	r3, [r7, #4]
 800dbfa:	2b03      	cmp	r3, #3
 800dbfc:	d80a      	bhi.n	800dc14 <HAL_InitTick+0x5c>
 800dbfe:	6879      	ldr	r1, [r7, #4]
 800dc00:	2301      	movs	r3, #1
 800dc02:	425b      	negs	r3, r3
 800dc04:	2200      	movs	r2, #0
 800dc06:	0018      	movs	r0, r3
 800dc08:	f000 f922 	bl	800de50 <HAL_NVIC_SetPriority>
 800dc0c:	4b0e      	ldr	r3, [pc, #56]	@ (800dc48 <HAL_InitTick+0x90>)
 800dc0e:	687a      	ldr	r2, [r7, #4]
 800dc10:	601a      	str	r2, [r3, #0]
 800dc12:	e00d      	b.n	800dc30 <HAL_InitTick+0x78>
 800dc14:	230f      	movs	r3, #15
 800dc16:	18fb      	adds	r3, r7, r3
 800dc18:	2201      	movs	r2, #1
 800dc1a:	701a      	strb	r2, [r3, #0]
 800dc1c:	e008      	b.n	800dc30 <HAL_InitTick+0x78>
 800dc1e:	230f      	movs	r3, #15
 800dc20:	18fb      	adds	r3, r7, r3
 800dc22:	2201      	movs	r2, #1
 800dc24:	701a      	strb	r2, [r3, #0]
 800dc26:	e003      	b.n	800dc30 <HAL_InitTick+0x78>
 800dc28:	230f      	movs	r3, #15
 800dc2a:	18fb      	adds	r3, r7, r3
 800dc2c:	2201      	movs	r2, #1
 800dc2e:	701a      	strb	r2, [r3, #0]
 800dc30:	230f      	movs	r3, #15
 800dc32:	18fb      	adds	r3, r7, r3
 800dc34:	781b      	ldrb	r3, [r3, #0]
 800dc36:	0018      	movs	r0, r3
 800dc38:	46bd      	mov	sp, r7
 800dc3a:	b005      	add	sp, #20
 800dc3c:	bd90      	pop	{r4, r7, pc}
 800dc3e:	46c0      	nop			@ (mov r8, r8)
 800dc40:	2000049c 	.word	0x2000049c
 800dc44:	20000494 	.word	0x20000494
 800dc48:	20000498 	.word	0x20000498

0800dc4c <HAL_IncTick>:
 800dc4c:	b580      	push	{r7, lr}
 800dc4e:	af00      	add	r7, sp, #0
 800dc50:	4b05      	ldr	r3, [pc, #20]	@ (800dc68 <HAL_IncTick+0x1c>)
 800dc52:	781b      	ldrb	r3, [r3, #0]
 800dc54:	001a      	movs	r2, r3
 800dc56:	4b05      	ldr	r3, [pc, #20]	@ (800dc6c <HAL_IncTick+0x20>)
 800dc58:	681b      	ldr	r3, [r3, #0]
 800dc5a:	18d2      	adds	r2, r2, r3
 800dc5c:	4b03      	ldr	r3, [pc, #12]	@ (800dc6c <HAL_IncTick+0x20>)
 800dc5e:	601a      	str	r2, [r3, #0]
 800dc60:	46c0      	nop			@ (mov r8, r8)
 800dc62:	46bd      	mov	sp, r7
 800dc64:	bd80      	pop	{r7, pc}
 800dc66:	46c0      	nop			@ (mov r8, r8)
 800dc68:	2000049c 	.word	0x2000049c
 800dc6c:	20003474 	.word	0x20003474

0800dc70 <HAL_GetTick>:
 800dc70:	b580      	push	{r7, lr}
 800dc72:	af00      	add	r7, sp, #0
 800dc74:	4b02      	ldr	r3, [pc, #8]	@ (800dc80 <HAL_GetTick+0x10>)
 800dc76:	681b      	ldr	r3, [r3, #0]
 800dc78:	0018      	movs	r0, r3
 800dc7a:	46bd      	mov	sp, r7
 800dc7c:	bd80      	pop	{r7, pc}
 800dc7e:	46c0      	nop			@ (mov r8, r8)
 800dc80:	20003474 	.word	0x20003474

0800dc84 <HAL_Delay>:
 800dc84:	b580      	push	{r7, lr}
 800dc86:	b084      	sub	sp, #16
 800dc88:	af00      	add	r7, sp, #0
 800dc8a:	6078      	str	r0, [r7, #4]
 800dc8c:	f7ff fff0 	bl	800dc70 <HAL_GetTick>
 800dc90:	0003      	movs	r3, r0
 800dc92:	60bb      	str	r3, [r7, #8]
 800dc94:	687b      	ldr	r3, [r7, #4]
 800dc96:	60fb      	str	r3, [r7, #12]
 800dc98:	68fb      	ldr	r3, [r7, #12]
 800dc9a:	3301      	adds	r3, #1
 800dc9c:	d005      	beq.n	800dcaa <HAL_Delay+0x26>
 800dc9e:	4b0a      	ldr	r3, [pc, #40]	@ (800dcc8 <HAL_Delay+0x44>)
 800dca0:	781b      	ldrb	r3, [r3, #0]
 800dca2:	001a      	movs	r2, r3
 800dca4:	68fb      	ldr	r3, [r7, #12]
 800dca6:	189b      	adds	r3, r3, r2
 800dca8:	60fb      	str	r3, [r7, #12]
 800dcaa:	46c0      	nop			@ (mov r8, r8)
 800dcac:	f7ff ffe0 	bl	800dc70 <HAL_GetTick>
 800dcb0:	0002      	movs	r2, r0
 800dcb2:	68bb      	ldr	r3, [r7, #8]
 800dcb4:	1ad3      	subs	r3, r2, r3
 800dcb6:	68fa      	ldr	r2, [r7, #12]
 800dcb8:	429a      	cmp	r2, r3
 800dcba:	d8f7      	bhi.n	800dcac <HAL_Delay+0x28>
 800dcbc:	46c0      	nop			@ (mov r8, r8)
 800dcbe:	46c0      	nop			@ (mov r8, r8)
 800dcc0:	46bd      	mov	sp, r7
 800dcc2:	b004      	add	sp, #16
 800dcc4:	bd80      	pop	{r7, pc}
 800dcc6:	46c0      	nop			@ (mov r8, r8)
 800dcc8:	2000049c 	.word	0x2000049c

0800dccc <HAL_SYSCFG_StrobeDBattpinsConfig>:
 800dccc:	b580      	push	{r7, lr}
 800dcce:	b082      	sub	sp, #8
 800dcd0:	af00      	add	r7, sp, #0
 800dcd2:	6078      	str	r0, [r7, #4]
 800dcd4:	4b06      	ldr	r3, [pc, #24]	@ (800dcf0 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 800dcd6:	681b      	ldr	r3, [r3, #0]
 800dcd8:	4a06      	ldr	r2, [pc, #24]	@ (800dcf4 <HAL_SYSCFG_StrobeDBattpinsConfig+0x28>)
 800dcda:	4013      	ands	r3, r2
 800dcdc:	0019      	movs	r1, r3
 800dcde:	4b04      	ldr	r3, [pc, #16]	@ (800dcf0 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 800dce0:	687a      	ldr	r2, [r7, #4]
 800dce2:	430a      	orrs	r2, r1
 800dce4:	601a      	str	r2, [r3, #0]
 800dce6:	46c0      	nop			@ (mov r8, r8)
 800dce8:	46bd      	mov	sp, r7
 800dcea:	b002      	add	sp, #8
 800dcec:	bd80      	pop	{r7, pc}
 800dcee:	46c0      	nop			@ (mov r8, r8)
 800dcf0:	40010000 	.word	0x40010000
 800dcf4:	fffff9ff 	.word	0xfffff9ff

0800dcf8 <__NVIC_EnableIRQ>:
 800dcf8:	b580      	push	{r7, lr}
 800dcfa:	b082      	sub	sp, #8
 800dcfc:	af00      	add	r7, sp, #0
 800dcfe:	0002      	movs	r2, r0
 800dd00:	1dfb      	adds	r3, r7, #7
 800dd02:	701a      	strb	r2, [r3, #0]
 800dd04:	1dfb      	adds	r3, r7, #7
 800dd06:	781b      	ldrb	r3, [r3, #0]
 800dd08:	2b7f      	cmp	r3, #127	@ 0x7f
 800dd0a:	d809      	bhi.n	800dd20 <__NVIC_EnableIRQ+0x28>
 800dd0c:	1dfb      	adds	r3, r7, #7
 800dd0e:	781b      	ldrb	r3, [r3, #0]
 800dd10:	001a      	movs	r2, r3
 800dd12:	231f      	movs	r3, #31
 800dd14:	401a      	ands	r2, r3
 800dd16:	4b04      	ldr	r3, [pc, #16]	@ (800dd28 <__NVIC_EnableIRQ+0x30>)
 800dd18:	2101      	movs	r1, #1
 800dd1a:	4091      	lsls	r1, r2
 800dd1c:	000a      	movs	r2, r1
 800dd1e:	601a      	str	r2, [r3, #0]
 800dd20:	46c0      	nop			@ (mov r8, r8)
 800dd22:	46bd      	mov	sp, r7
 800dd24:	b002      	add	sp, #8
 800dd26:	bd80      	pop	{r7, pc}
 800dd28:	e000e100 	.word	0xe000e100

0800dd2c <__NVIC_SetPriority>:
 800dd2c:	b590      	push	{r4, r7, lr}
 800dd2e:	b083      	sub	sp, #12
 800dd30:	af00      	add	r7, sp, #0
 800dd32:	0002      	movs	r2, r0
 800dd34:	6039      	str	r1, [r7, #0]
 800dd36:	1dfb      	adds	r3, r7, #7
 800dd38:	701a      	strb	r2, [r3, #0]
 800dd3a:	1dfb      	adds	r3, r7, #7
 800dd3c:	781b      	ldrb	r3, [r3, #0]
 800dd3e:	2b7f      	cmp	r3, #127	@ 0x7f
 800dd40:	d828      	bhi.n	800dd94 <__NVIC_SetPriority+0x68>
 800dd42:	4a2f      	ldr	r2, [pc, #188]	@ (800de00 <__NVIC_SetPriority+0xd4>)
 800dd44:	1dfb      	adds	r3, r7, #7
 800dd46:	781b      	ldrb	r3, [r3, #0]
 800dd48:	b25b      	sxtb	r3, r3
 800dd4a:	089b      	lsrs	r3, r3, #2
 800dd4c:	33c0      	adds	r3, #192	@ 0xc0
 800dd4e:	009b      	lsls	r3, r3, #2
 800dd50:	589b      	ldr	r3, [r3, r2]
 800dd52:	1dfa      	adds	r2, r7, #7
 800dd54:	7812      	ldrb	r2, [r2, #0]
 800dd56:	0011      	movs	r1, r2
 800dd58:	2203      	movs	r2, #3
 800dd5a:	400a      	ands	r2, r1
 800dd5c:	00d2      	lsls	r2, r2, #3
 800dd5e:	21ff      	movs	r1, #255	@ 0xff
 800dd60:	4091      	lsls	r1, r2
 800dd62:	000a      	movs	r2, r1
 800dd64:	43d2      	mvns	r2, r2
 800dd66:	401a      	ands	r2, r3
 800dd68:	0011      	movs	r1, r2
 800dd6a:	683b      	ldr	r3, [r7, #0]
 800dd6c:	019b      	lsls	r3, r3, #6
 800dd6e:	22ff      	movs	r2, #255	@ 0xff
 800dd70:	401a      	ands	r2, r3
 800dd72:	1dfb      	adds	r3, r7, #7
 800dd74:	781b      	ldrb	r3, [r3, #0]
 800dd76:	0018      	movs	r0, r3
 800dd78:	2303      	movs	r3, #3
 800dd7a:	4003      	ands	r3, r0
 800dd7c:	00db      	lsls	r3, r3, #3
 800dd7e:	409a      	lsls	r2, r3
 800dd80:	481f      	ldr	r0, [pc, #124]	@ (800de00 <__NVIC_SetPriority+0xd4>)
 800dd82:	1dfb      	adds	r3, r7, #7
 800dd84:	781b      	ldrb	r3, [r3, #0]
 800dd86:	b25b      	sxtb	r3, r3
 800dd88:	089b      	lsrs	r3, r3, #2
 800dd8a:	430a      	orrs	r2, r1
 800dd8c:	33c0      	adds	r3, #192	@ 0xc0
 800dd8e:	009b      	lsls	r3, r3, #2
 800dd90:	501a      	str	r2, [r3, r0]
 800dd92:	e031      	b.n	800ddf8 <__NVIC_SetPriority+0xcc>
 800dd94:	4a1b      	ldr	r2, [pc, #108]	@ (800de04 <__NVIC_SetPriority+0xd8>)
 800dd96:	1dfb      	adds	r3, r7, #7
 800dd98:	781b      	ldrb	r3, [r3, #0]
 800dd9a:	0019      	movs	r1, r3
 800dd9c:	230f      	movs	r3, #15
 800dd9e:	400b      	ands	r3, r1
 800dda0:	3b08      	subs	r3, #8
 800dda2:	089b      	lsrs	r3, r3, #2
 800dda4:	3306      	adds	r3, #6
 800dda6:	009b      	lsls	r3, r3, #2
 800dda8:	18d3      	adds	r3, r2, r3
 800ddaa:	3304      	adds	r3, #4
 800ddac:	681b      	ldr	r3, [r3, #0]
 800ddae:	1dfa      	adds	r2, r7, #7
 800ddb0:	7812      	ldrb	r2, [r2, #0]
 800ddb2:	0011      	movs	r1, r2
 800ddb4:	2203      	movs	r2, #3
 800ddb6:	400a      	ands	r2, r1
 800ddb8:	00d2      	lsls	r2, r2, #3
 800ddba:	21ff      	movs	r1, #255	@ 0xff
 800ddbc:	4091      	lsls	r1, r2
 800ddbe:	000a      	movs	r2, r1
 800ddc0:	43d2      	mvns	r2, r2
 800ddc2:	401a      	ands	r2, r3
 800ddc4:	0011      	movs	r1, r2
 800ddc6:	683b      	ldr	r3, [r7, #0]
 800ddc8:	019b      	lsls	r3, r3, #6
 800ddca:	22ff      	movs	r2, #255	@ 0xff
 800ddcc:	401a      	ands	r2, r3
 800ddce:	1dfb      	adds	r3, r7, #7
 800ddd0:	781b      	ldrb	r3, [r3, #0]
 800ddd2:	0018      	movs	r0, r3
 800ddd4:	2303      	movs	r3, #3
 800ddd6:	4003      	ands	r3, r0
 800ddd8:	00db      	lsls	r3, r3, #3
 800ddda:	409a      	lsls	r2, r3
 800dddc:	4809      	ldr	r0, [pc, #36]	@ (800de04 <__NVIC_SetPriority+0xd8>)
 800ddde:	1dfb      	adds	r3, r7, #7
 800dde0:	781b      	ldrb	r3, [r3, #0]
 800dde2:	001c      	movs	r4, r3
 800dde4:	230f      	movs	r3, #15
 800dde6:	4023      	ands	r3, r4
 800dde8:	3b08      	subs	r3, #8
 800ddea:	089b      	lsrs	r3, r3, #2
 800ddec:	430a      	orrs	r2, r1
 800ddee:	3306      	adds	r3, #6
 800ddf0:	009b      	lsls	r3, r3, #2
 800ddf2:	18c3      	adds	r3, r0, r3
 800ddf4:	3304      	adds	r3, #4
 800ddf6:	601a      	str	r2, [r3, #0]
 800ddf8:	46c0      	nop			@ (mov r8, r8)
 800ddfa:	46bd      	mov	sp, r7
 800ddfc:	b003      	add	sp, #12
 800ddfe:	bd90      	pop	{r4, r7, pc}
 800de00:	e000e100 	.word	0xe000e100
 800de04:	e000ed00 	.word	0xe000ed00

0800de08 <SysTick_Config>:
 800de08:	b580      	push	{r7, lr}
 800de0a:	b082      	sub	sp, #8
 800de0c:	af00      	add	r7, sp, #0
 800de0e:	6078      	str	r0, [r7, #4]
 800de10:	687b      	ldr	r3, [r7, #4]
 800de12:	1e5a      	subs	r2, r3, #1
 800de14:	2380      	movs	r3, #128	@ 0x80
 800de16:	045b      	lsls	r3, r3, #17
 800de18:	429a      	cmp	r2, r3
 800de1a:	d301      	bcc.n	800de20 <SysTick_Config+0x18>
 800de1c:	2301      	movs	r3, #1
 800de1e:	e010      	b.n	800de42 <SysTick_Config+0x3a>
 800de20:	4b0a      	ldr	r3, [pc, #40]	@ (800de4c <SysTick_Config+0x44>)
 800de22:	687a      	ldr	r2, [r7, #4]
 800de24:	3a01      	subs	r2, #1
 800de26:	605a      	str	r2, [r3, #4]
 800de28:	2301      	movs	r3, #1
 800de2a:	425b      	negs	r3, r3
 800de2c:	2103      	movs	r1, #3
 800de2e:	0018      	movs	r0, r3
 800de30:	f7ff ff7c 	bl	800dd2c <__NVIC_SetPriority>
 800de34:	4b05      	ldr	r3, [pc, #20]	@ (800de4c <SysTick_Config+0x44>)
 800de36:	2200      	movs	r2, #0
 800de38:	609a      	str	r2, [r3, #8]
 800de3a:	4b04      	ldr	r3, [pc, #16]	@ (800de4c <SysTick_Config+0x44>)
 800de3c:	2207      	movs	r2, #7
 800de3e:	601a      	str	r2, [r3, #0]
 800de40:	2300      	movs	r3, #0
 800de42:	0018      	movs	r0, r3
 800de44:	46bd      	mov	sp, r7
 800de46:	b002      	add	sp, #8
 800de48:	bd80      	pop	{r7, pc}
 800de4a:	46c0      	nop			@ (mov r8, r8)
 800de4c:	e000e010 	.word	0xe000e010

0800de50 <HAL_NVIC_SetPriority>:
 800de50:	b580      	push	{r7, lr}
 800de52:	b084      	sub	sp, #16
 800de54:	af00      	add	r7, sp, #0
 800de56:	60b9      	str	r1, [r7, #8]
 800de58:	607a      	str	r2, [r7, #4]
 800de5a:	210f      	movs	r1, #15
 800de5c:	187b      	adds	r3, r7, r1
 800de5e:	1c02      	adds	r2, r0, #0
 800de60:	701a      	strb	r2, [r3, #0]
 800de62:	68ba      	ldr	r2, [r7, #8]
 800de64:	187b      	adds	r3, r7, r1
 800de66:	781b      	ldrb	r3, [r3, #0]
 800de68:	b25b      	sxtb	r3, r3
 800de6a:	0011      	movs	r1, r2
 800de6c:	0018      	movs	r0, r3
 800de6e:	f7ff ff5d 	bl	800dd2c <__NVIC_SetPriority>
 800de72:	46c0      	nop			@ (mov r8, r8)
 800de74:	46bd      	mov	sp, r7
 800de76:	b004      	add	sp, #16
 800de78:	bd80      	pop	{r7, pc}

0800de7a <HAL_NVIC_EnableIRQ>:
 800de7a:	b580      	push	{r7, lr}
 800de7c:	b082      	sub	sp, #8
 800de7e:	af00      	add	r7, sp, #0
 800de80:	0002      	movs	r2, r0
 800de82:	1dfb      	adds	r3, r7, #7
 800de84:	701a      	strb	r2, [r3, #0]
 800de86:	1dfb      	adds	r3, r7, #7
 800de88:	781b      	ldrb	r3, [r3, #0]
 800de8a:	b25b      	sxtb	r3, r3
 800de8c:	0018      	movs	r0, r3
 800de8e:	f7ff ff33 	bl	800dcf8 <__NVIC_EnableIRQ>
 800de92:	46c0      	nop			@ (mov r8, r8)
 800de94:	46bd      	mov	sp, r7
 800de96:	b002      	add	sp, #8
 800de98:	bd80      	pop	{r7, pc}

0800de9a <HAL_SYSTICK_Config>:
 800de9a:	b580      	push	{r7, lr}
 800de9c:	b082      	sub	sp, #8
 800de9e:	af00      	add	r7, sp, #0
 800dea0:	6078      	str	r0, [r7, #4]
 800dea2:	687b      	ldr	r3, [r7, #4]
 800dea4:	0018      	movs	r0, r3
 800dea6:	f7ff ffaf 	bl	800de08 <SysTick_Config>
 800deaa:	0003      	movs	r3, r0
 800deac:	0018      	movs	r0, r3
 800deae:	46bd      	mov	sp, r7
 800deb0:	b002      	add	sp, #8
 800deb2:	bd80      	pop	{r7, pc}

0800deb4 <HAL_DMA_Init>:
 800deb4:	b580      	push	{r7, lr}
 800deb6:	b082      	sub	sp, #8
 800deb8:	af00      	add	r7, sp, #0
 800deba:	6078      	str	r0, [r7, #4]
 800debc:	687b      	ldr	r3, [r7, #4]
 800debe:	2b00      	cmp	r3, #0
 800dec0:	d101      	bne.n	800dec6 <HAL_DMA_Init+0x12>
 800dec2:	2301      	movs	r3, #1
 800dec4:	e077      	b.n	800dfb6 <HAL_DMA_Init+0x102>
 800dec6:	687b      	ldr	r3, [r7, #4]
 800dec8:	681b      	ldr	r3, [r3, #0]
 800deca:	4a3d      	ldr	r2, [pc, #244]	@ (800dfc0 <HAL_DMA_Init+0x10c>)
 800decc:	4694      	mov	ip, r2
 800dece:	4463      	add	r3, ip
 800ded0:	2114      	movs	r1, #20
 800ded2:	0018      	movs	r0, r3
 800ded4:	f7f2 f928 	bl	8000128 <__udivsi3>
 800ded8:	0003      	movs	r3, r0
 800deda:	009a      	lsls	r2, r3, #2
 800dedc:	687b      	ldr	r3, [r7, #4]
 800dede:	641a      	str	r2, [r3, #64]	@ 0x40
 800dee0:	687b      	ldr	r3, [r7, #4]
 800dee2:	2225      	movs	r2, #37	@ 0x25
 800dee4:	2102      	movs	r1, #2
 800dee6:	5499      	strb	r1, [r3, r2]
 800dee8:	687b      	ldr	r3, [r7, #4]
 800deea:	681b      	ldr	r3, [r3, #0]
 800deec:	681a      	ldr	r2, [r3, #0]
 800deee:	687b      	ldr	r3, [r7, #4]
 800def0:	681b      	ldr	r3, [r3, #0]
 800def2:	4934      	ldr	r1, [pc, #208]	@ (800dfc4 <HAL_DMA_Init+0x110>)
 800def4:	400a      	ands	r2, r1
 800def6:	601a      	str	r2, [r3, #0]
 800def8:	687b      	ldr	r3, [r7, #4]
 800defa:	681b      	ldr	r3, [r3, #0]
 800defc:	6819      	ldr	r1, [r3, #0]
 800defe:	687b      	ldr	r3, [r7, #4]
 800df00:	689a      	ldr	r2, [r3, #8]
 800df02:	687b      	ldr	r3, [r7, #4]
 800df04:	68db      	ldr	r3, [r3, #12]
 800df06:	431a      	orrs	r2, r3
 800df08:	687b      	ldr	r3, [r7, #4]
 800df0a:	691b      	ldr	r3, [r3, #16]
 800df0c:	431a      	orrs	r2, r3
 800df0e:	687b      	ldr	r3, [r7, #4]
 800df10:	695b      	ldr	r3, [r3, #20]
 800df12:	431a      	orrs	r2, r3
 800df14:	687b      	ldr	r3, [r7, #4]
 800df16:	699b      	ldr	r3, [r3, #24]
 800df18:	431a      	orrs	r2, r3
 800df1a:	687b      	ldr	r3, [r7, #4]
 800df1c:	69db      	ldr	r3, [r3, #28]
 800df1e:	431a      	orrs	r2, r3
 800df20:	687b      	ldr	r3, [r7, #4]
 800df22:	6a1b      	ldr	r3, [r3, #32]
 800df24:	431a      	orrs	r2, r3
 800df26:	687b      	ldr	r3, [r7, #4]
 800df28:	681b      	ldr	r3, [r3, #0]
 800df2a:	430a      	orrs	r2, r1
 800df2c:	601a      	str	r2, [r3, #0]
 800df2e:	687b      	ldr	r3, [r7, #4]
 800df30:	0018      	movs	r0, r3
 800df32:	f000 faa3 	bl	800e47c <DMA_CalcDMAMUXChannelBaseAndMask>
 800df36:	687b      	ldr	r3, [r7, #4]
 800df38:	689a      	ldr	r2, [r3, #8]
 800df3a:	2380      	movs	r3, #128	@ 0x80
 800df3c:	01db      	lsls	r3, r3, #7
 800df3e:	429a      	cmp	r2, r3
 800df40:	d102      	bne.n	800df48 <HAL_DMA_Init+0x94>
 800df42:	687b      	ldr	r3, [r7, #4]
 800df44:	2200      	movs	r2, #0
 800df46:	605a      	str	r2, [r3, #4]
 800df48:	687b      	ldr	r3, [r7, #4]
 800df4a:	685a      	ldr	r2, [r3, #4]
 800df4c:	687b      	ldr	r3, [r7, #4]
 800df4e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800df50:	213f      	movs	r1, #63	@ 0x3f
 800df52:	400a      	ands	r2, r1
 800df54:	601a      	str	r2, [r3, #0]
 800df56:	687b      	ldr	r3, [r7, #4]
 800df58:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800df5a:	687a      	ldr	r2, [r7, #4]
 800df5c:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800df5e:	605a      	str	r2, [r3, #4]
 800df60:	687b      	ldr	r3, [r7, #4]
 800df62:	685b      	ldr	r3, [r3, #4]
 800df64:	2b00      	cmp	r3, #0
 800df66:	d011      	beq.n	800df8c <HAL_DMA_Init+0xd8>
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	685b      	ldr	r3, [r3, #4]
 800df6c:	2b04      	cmp	r3, #4
 800df6e:	d80d      	bhi.n	800df8c <HAL_DMA_Init+0xd8>
 800df70:	687b      	ldr	r3, [r7, #4]
 800df72:	0018      	movs	r0, r3
 800df74:	f000 faae 	bl	800e4d4 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 800df78:	687b      	ldr	r3, [r7, #4]
 800df7a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800df7c:	2200      	movs	r2, #0
 800df7e:	601a      	str	r2, [r3, #0]
 800df80:	687b      	ldr	r3, [r7, #4]
 800df82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800df84:	687a      	ldr	r2, [r7, #4]
 800df86:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 800df88:	605a      	str	r2, [r3, #4]
 800df8a:	e008      	b.n	800df9e <HAL_DMA_Init+0xea>
 800df8c:	687b      	ldr	r3, [r7, #4]
 800df8e:	2200      	movs	r2, #0
 800df90:	651a      	str	r2, [r3, #80]	@ 0x50
 800df92:	687b      	ldr	r3, [r7, #4]
 800df94:	2200      	movs	r2, #0
 800df96:	655a      	str	r2, [r3, #84]	@ 0x54
 800df98:	687b      	ldr	r3, [r7, #4]
 800df9a:	2200      	movs	r2, #0
 800df9c:	659a      	str	r2, [r3, #88]	@ 0x58
 800df9e:	687b      	ldr	r3, [r7, #4]
 800dfa0:	2200      	movs	r2, #0
 800dfa2:	63da      	str	r2, [r3, #60]	@ 0x3c
 800dfa4:	687b      	ldr	r3, [r7, #4]
 800dfa6:	2225      	movs	r2, #37	@ 0x25
 800dfa8:	2101      	movs	r1, #1
 800dfaa:	5499      	strb	r1, [r3, r2]
 800dfac:	687b      	ldr	r3, [r7, #4]
 800dfae:	2224      	movs	r2, #36	@ 0x24
 800dfb0:	2100      	movs	r1, #0
 800dfb2:	5499      	strb	r1, [r3, r2]
 800dfb4:	2300      	movs	r3, #0
 800dfb6:	0018      	movs	r0, r3
 800dfb8:	46bd      	mov	sp, r7
 800dfba:	b002      	add	sp, #8
 800dfbc:	bd80      	pop	{r7, pc}
 800dfbe:	46c0      	nop			@ (mov r8, r8)
 800dfc0:	bffdfff8 	.word	0xbffdfff8
 800dfc4:	ffff800f 	.word	0xffff800f

0800dfc8 <HAL_DMA_Start_IT>:
 800dfc8:	b580      	push	{r7, lr}
 800dfca:	b086      	sub	sp, #24
 800dfcc:	af00      	add	r7, sp, #0
 800dfce:	60f8      	str	r0, [r7, #12]
 800dfd0:	60b9      	str	r1, [r7, #8]
 800dfd2:	607a      	str	r2, [r7, #4]
 800dfd4:	603b      	str	r3, [r7, #0]
 800dfd6:	2317      	movs	r3, #23
 800dfd8:	18fb      	adds	r3, r7, r3
 800dfda:	2200      	movs	r2, #0
 800dfdc:	701a      	strb	r2, [r3, #0]
 800dfde:	68fb      	ldr	r3, [r7, #12]
 800dfe0:	2224      	movs	r2, #36	@ 0x24
 800dfe2:	5c9b      	ldrb	r3, [r3, r2]
 800dfe4:	2b01      	cmp	r3, #1
 800dfe6:	d101      	bne.n	800dfec <HAL_DMA_Start_IT+0x24>
 800dfe8:	2302      	movs	r3, #2
 800dfea:	e06f      	b.n	800e0cc <HAL_DMA_Start_IT+0x104>
 800dfec:	68fb      	ldr	r3, [r7, #12]
 800dfee:	2224      	movs	r2, #36	@ 0x24
 800dff0:	2101      	movs	r1, #1
 800dff2:	5499      	strb	r1, [r3, r2]
 800dff4:	68fb      	ldr	r3, [r7, #12]
 800dff6:	2225      	movs	r2, #37	@ 0x25
 800dff8:	5c9b      	ldrb	r3, [r3, r2]
 800dffa:	b2db      	uxtb	r3, r3
 800dffc:	2b01      	cmp	r3, #1
 800dffe:	d157      	bne.n	800e0b0 <HAL_DMA_Start_IT+0xe8>
 800e000:	68fb      	ldr	r3, [r7, #12]
 800e002:	2225      	movs	r2, #37	@ 0x25
 800e004:	2102      	movs	r1, #2
 800e006:	5499      	strb	r1, [r3, r2]
 800e008:	68fb      	ldr	r3, [r7, #12]
 800e00a:	2200      	movs	r2, #0
 800e00c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e00e:	68fb      	ldr	r3, [r7, #12]
 800e010:	681b      	ldr	r3, [r3, #0]
 800e012:	681a      	ldr	r2, [r3, #0]
 800e014:	68fb      	ldr	r3, [r7, #12]
 800e016:	681b      	ldr	r3, [r3, #0]
 800e018:	2101      	movs	r1, #1
 800e01a:	438a      	bics	r2, r1
 800e01c:	601a      	str	r2, [r3, #0]
 800e01e:	683b      	ldr	r3, [r7, #0]
 800e020:	687a      	ldr	r2, [r7, #4]
 800e022:	68b9      	ldr	r1, [r7, #8]
 800e024:	68f8      	ldr	r0, [r7, #12]
 800e026:	f000 f9e9 	bl	800e3fc <DMA_SetConfig>
 800e02a:	68fb      	ldr	r3, [r7, #12]
 800e02c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e02e:	2b00      	cmp	r3, #0
 800e030:	d008      	beq.n	800e044 <HAL_DMA_Start_IT+0x7c>
 800e032:	68fb      	ldr	r3, [r7, #12]
 800e034:	681b      	ldr	r3, [r3, #0]
 800e036:	681a      	ldr	r2, [r3, #0]
 800e038:	68fb      	ldr	r3, [r7, #12]
 800e03a:	681b      	ldr	r3, [r3, #0]
 800e03c:	210e      	movs	r1, #14
 800e03e:	430a      	orrs	r2, r1
 800e040:	601a      	str	r2, [r3, #0]
 800e042:	e00f      	b.n	800e064 <HAL_DMA_Start_IT+0x9c>
 800e044:	68fb      	ldr	r3, [r7, #12]
 800e046:	681b      	ldr	r3, [r3, #0]
 800e048:	681a      	ldr	r2, [r3, #0]
 800e04a:	68fb      	ldr	r3, [r7, #12]
 800e04c:	681b      	ldr	r3, [r3, #0]
 800e04e:	2104      	movs	r1, #4
 800e050:	438a      	bics	r2, r1
 800e052:	601a      	str	r2, [r3, #0]
 800e054:	68fb      	ldr	r3, [r7, #12]
 800e056:	681b      	ldr	r3, [r3, #0]
 800e058:	681a      	ldr	r2, [r3, #0]
 800e05a:	68fb      	ldr	r3, [r7, #12]
 800e05c:	681b      	ldr	r3, [r3, #0]
 800e05e:	210a      	movs	r1, #10
 800e060:	430a      	orrs	r2, r1
 800e062:	601a      	str	r2, [r3, #0]
 800e064:	68fb      	ldr	r3, [r7, #12]
 800e066:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e068:	681a      	ldr	r2, [r3, #0]
 800e06a:	2380      	movs	r3, #128	@ 0x80
 800e06c:	025b      	lsls	r3, r3, #9
 800e06e:	4013      	ands	r3, r2
 800e070:	d008      	beq.n	800e084 <HAL_DMA_Start_IT+0xbc>
 800e072:	68fb      	ldr	r3, [r7, #12]
 800e074:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e076:	681a      	ldr	r2, [r3, #0]
 800e078:	68fb      	ldr	r3, [r7, #12]
 800e07a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e07c:	2180      	movs	r1, #128	@ 0x80
 800e07e:	0049      	lsls	r1, r1, #1
 800e080:	430a      	orrs	r2, r1
 800e082:	601a      	str	r2, [r3, #0]
 800e084:	68fb      	ldr	r3, [r7, #12]
 800e086:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e088:	2b00      	cmp	r3, #0
 800e08a:	d008      	beq.n	800e09e <HAL_DMA_Start_IT+0xd6>
 800e08c:	68fb      	ldr	r3, [r7, #12]
 800e08e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e090:	681a      	ldr	r2, [r3, #0]
 800e092:	68fb      	ldr	r3, [r7, #12]
 800e094:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e096:	2180      	movs	r1, #128	@ 0x80
 800e098:	0049      	lsls	r1, r1, #1
 800e09a:	430a      	orrs	r2, r1
 800e09c:	601a      	str	r2, [r3, #0]
 800e09e:	68fb      	ldr	r3, [r7, #12]
 800e0a0:	681b      	ldr	r3, [r3, #0]
 800e0a2:	681a      	ldr	r2, [r3, #0]
 800e0a4:	68fb      	ldr	r3, [r7, #12]
 800e0a6:	681b      	ldr	r3, [r3, #0]
 800e0a8:	2101      	movs	r1, #1
 800e0aa:	430a      	orrs	r2, r1
 800e0ac:	601a      	str	r2, [r3, #0]
 800e0ae:	e00a      	b.n	800e0c6 <HAL_DMA_Start_IT+0xfe>
 800e0b0:	68fb      	ldr	r3, [r7, #12]
 800e0b2:	2280      	movs	r2, #128	@ 0x80
 800e0b4:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e0b6:	68fb      	ldr	r3, [r7, #12]
 800e0b8:	2224      	movs	r2, #36	@ 0x24
 800e0ba:	2100      	movs	r1, #0
 800e0bc:	5499      	strb	r1, [r3, r2]
 800e0be:	2317      	movs	r3, #23
 800e0c0:	18fb      	adds	r3, r7, r3
 800e0c2:	2201      	movs	r2, #1
 800e0c4:	701a      	strb	r2, [r3, #0]
 800e0c6:	2317      	movs	r3, #23
 800e0c8:	18fb      	adds	r3, r7, r3
 800e0ca:	781b      	ldrb	r3, [r3, #0]
 800e0cc:	0018      	movs	r0, r3
 800e0ce:	46bd      	mov	sp, r7
 800e0d0:	b006      	add	sp, #24
 800e0d2:	bd80      	pop	{r7, pc}

0800e0d4 <HAL_DMA_Abort>:
 800e0d4:	b580      	push	{r7, lr}
 800e0d6:	b082      	sub	sp, #8
 800e0d8:	af00      	add	r7, sp, #0
 800e0da:	6078      	str	r0, [r7, #4]
 800e0dc:	687b      	ldr	r3, [r7, #4]
 800e0de:	2b00      	cmp	r3, #0
 800e0e0:	d101      	bne.n	800e0e6 <HAL_DMA_Abort+0x12>
 800e0e2:	2301      	movs	r3, #1
 800e0e4:	e050      	b.n	800e188 <HAL_DMA_Abort+0xb4>
 800e0e6:	687b      	ldr	r3, [r7, #4]
 800e0e8:	2225      	movs	r2, #37	@ 0x25
 800e0ea:	5c9b      	ldrb	r3, [r3, r2]
 800e0ec:	b2db      	uxtb	r3, r3
 800e0ee:	2b02      	cmp	r3, #2
 800e0f0:	d008      	beq.n	800e104 <HAL_DMA_Abort+0x30>
 800e0f2:	687b      	ldr	r3, [r7, #4]
 800e0f4:	2204      	movs	r2, #4
 800e0f6:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e0f8:	687b      	ldr	r3, [r7, #4]
 800e0fa:	2224      	movs	r2, #36	@ 0x24
 800e0fc:	2100      	movs	r1, #0
 800e0fe:	5499      	strb	r1, [r3, r2]
 800e100:	2301      	movs	r3, #1
 800e102:	e041      	b.n	800e188 <HAL_DMA_Abort+0xb4>
 800e104:	687b      	ldr	r3, [r7, #4]
 800e106:	681b      	ldr	r3, [r3, #0]
 800e108:	681a      	ldr	r2, [r3, #0]
 800e10a:	687b      	ldr	r3, [r7, #4]
 800e10c:	681b      	ldr	r3, [r3, #0]
 800e10e:	210e      	movs	r1, #14
 800e110:	438a      	bics	r2, r1
 800e112:	601a      	str	r2, [r3, #0]
 800e114:	687b      	ldr	r3, [r7, #4]
 800e116:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e118:	681a      	ldr	r2, [r3, #0]
 800e11a:	687b      	ldr	r3, [r7, #4]
 800e11c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e11e:	491c      	ldr	r1, [pc, #112]	@ (800e190 <HAL_DMA_Abort+0xbc>)
 800e120:	400a      	ands	r2, r1
 800e122:	601a      	str	r2, [r3, #0]
 800e124:	687b      	ldr	r3, [r7, #4]
 800e126:	681b      	ldr	r3, [r3, #0]
 800e128:	681a      	ldr	r2, [r3, #0]
 800e12a:	687b      	ldr	r3, [r7, #4]
 800e12c:	681b      	ldr	r3, [r3, #0]
 800e12e:	2101      	movs	r1, #1
 800e130:	438a      	bics	r2, r1
 800e132:	601a      	str	r2, [r3, #0]
 800e134:	4b17      	ldr	r3, [pc, #92]	@ (800e194 <HAL_DMA_Abort+0xc0>)
 800e136:	6859      	ldr	r1, [r3, #4]
 800e138:	687b      	ldr	r3, [r7, #4]
 800e13a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e13c:	221c      	movs	r2, #28
 800e13e:	4013      	ands	r3, r2
 800e140:	2201      	movs	r2, #1
 800e142:	409a      	lsls	r2, r3
 800e144:	4b13      	ldr	r3, [pc, #76]	@ (800e194 <HAL_DMA_Abort+0xc0>)
 800e146:	430a      	orrs	r2, r1
 800e148:	605a      	str	r2, [r3, #4]
 800e14a:	687b      	ldr	r3, [r7, #4]
 800e14c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e14e:	687a      	ldr	r2, [r7, #4]
 800e150:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800e152:	605a      	str	r2, [r3, #4]
 800e154:	687b      	ldr	r3, [r7, #4]
 800e156:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e158:	2b00      	cmp	r3, #0
 800e15a:	d00c      	beq.n	800e176 <HAL_DMA_Abort+0xa2>
 800e15c:	687b      	ldr	r3, [r7, #4]
 800e15e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e160:	681a      	ldr	r2, [r3, #0]
 800e162:	687b      	ldr	r3, [r7, #4]
 800e164:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e166:	490a      	ldr	r1, [pc, #40]	@ (800e190 <HAL_DMA_Abort+0xbc>)
 800e168:	400a      	ands	r2, r1
 800e16a:	601a      	str	r2, [r3, #0]
 800e16c:	687b      	ldr	r3, [r7, #4]
 800e16e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e170:	687a      	ldr	r2, [r7, #4]
 800e172:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 800e174:	605a      	str	r2, [r3, #4]
 800e176:	687b      	ldr	r3, [r7, #4]
 800e178:	2225      	movs	r2, #37	@ 0x25
 800e17a:	2101      	movs	r1, #1
 800e17c:	5499      	strb	r1, [r3, r2]
 800e17e:	687b      	ldr	r3, [r7, #4]
 800e180:	2224      	movs	r2, #36	@ 0x24
 800e182:	2100      	movs	r1, #0
 800e184:	5499      	strb	r1, [r3, r2]
 800e186:	2300      	movs	r3, #0
 800e188:	0018      	movs	r0, r3
 800e18a:	46bd      	mov	sp, r7
 800e18c:	b002      	add	sp, #8
 800e18e:	bd80      	pop	{r7, pc}
 800e190:	fffffeff 	.word	0xfffffeff
 800e194:	40020000 	.word	0x40020000

0800e198 <HAL_DMA_Abort_IT>:
 800e198:	b580      	push	{r7, lr}
 800e19a:	b084      	sub	sp, #16
 800e19c:	af00      	add	r7, sp, #0
 800e19e:	6078      	str	r0, [r7, #4]
 800e1a0:	210f      	movs	r1, #15
 800e1a2:	187b      	adds	r3, r7, r1
 800e1a4:	2200      	movs	r2, #0
 800e1a6:	701a      	strb	r2, [r3, #0]
 800e1a8:	687b      	ldr	r3, [r7, #4]
 800e1aa:	2225      	movs	r2, #37	@ 0x25
 800e1ac:	5c9b      	ldrb	r3, [r3, r2]
 800e1ae:	b2db      	uxtb	r3, r3
 800e1b0:	2b02      	cmp	r3, #2
 800e1b2:	d006      	beq.n	800e1c2 <HAL_DMA_Abort_IT+0x2a>
 800e1b4:	687b      	ldr	r3, [r7, #4]
 800e1b6:	2204      	movs	r2, #4
 800e1b8:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e1ba:	187b      	adds	r3, r7, r1
 800e1bc:	2201      	movs	r2, #1
 800e1be:	701a      	strb	r2, [r3, #0]
 800e1c0:	e049      	b.n	800e256 <HAL_DMA_Abort_IT+0xbe>
 800e1c2:	687b      	ldr	r3, [r7, #4]
 800e1c4:	681b      	ldr	r3, [r3, #0]
 800e1c6:	681a      	ldr	r2, [r3, #0]
 800e1c8:	687b      	ldr	r3, [r7, #4]
 800e1ca:	681b      	ldr	r3, [r3, #0]
 800e1cc:	210e      	movs	r1, #14
 800e1ce:	438a      	bics	r2, r1
 800e1d0:	601a      	str	r2, [r3, #0]
 800e1d2:	687b      	ldr	r3, [r7, #4]
 800e1d4:	681b      	ldr	r3, [r3, #0]
 800e1d6:	681a      	ldr	r2, [r3, #0]
 800e1d8:	687b      	ldr	r3, [r7, #4]
 800e1da:	681b      	ldr	r3, [r3, #0]
 800e1dc:	2101      	movs	r1, #1
 800e1de:	438a      	bics	r2, r1
 800e1e0:	601a      	str	r2, [r3, #0]
 800e1e2:	687b      	ldr	r3, [r7, #4]
 800e1e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e1e6:	681a      	ldr	r2, [r3, #0]
 800e1e8:	687b      	ldr	r3, [r7, #4]
 800e1ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e1ec:	491d      	ldr	r1, [pc, #116]	@ (800e264 <HAL_DMA_Abort_IT+0xcc>)
 800e1ee:	400a      	ands	r2, r1
 800e1f0:	601a      	str	r2, [r3, #0]
 800e1f2:	4b1d      	ldr	r3, [pc, #116]	@ (800e268 <HAL_DMA_Abort_IT+0xd0>)
 800e1f4:	6859      	ldr	r1, [r3, #4]
 800e1f6:	687b      	ldr	r3, [r7, #4]
 800e1f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e1fa:	221c      	movs	r2, #28
 800e1fc:	4013      	ands	r3, r2
 800e1fe:	2201      	movs	r2, #1
 800e200:	409a      	lsls	r2, r3
 800e202:	4b19      	ldr	r3, [pc, #100]	@ (800e268 <HAL_DMA_Abort_IT+0xd0>)
 800e204:	430a      	orrs	r2, r1
 800e206:	605a      	str	r2, [r3, #4]
 800e208:	687b      	ldr	r3, [r7, #4]
 800e20a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e20c:	687a      	ldr	r2, [r7, #4]
 800e20e:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800e210:	605a      	str	r2, [r3, #4]
 800e212:	687b      	ldr	r3, [r7, #4]
 800e214:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e216:	2b00      	cmp	r3, #0
 800e218:	d00c      	beq.n	800e234 <HAL_DMA_Abort_IT+0x9c>
 800e21a:	687b      	ldr	r3, [r7, #4]
 800e21c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e21e:	681a      	ldr	r2, [r3, #0]
 800e220:	687b      	ldr	r3, [r7, #4]
 800e222:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e224:	490f      	ldr	r1, [pc, #60]	@ (800e264 <HAL_DMA_Abort_IT+0xcc>)
 800e226:	400a      	ands	r2, r1
 800e228:	601a      	str	r2, [r3, #0]
 800e22a:	687b      	ldr	r3, [r7, #4]
 800e22c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e22e:	687a      	ldr	r2, [r7, #4]
 800e230:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 800e232:	605a      	str	r2, [r3, #4]
 800e234:	687b      	ldr	r3, [r7, #4]
 800e236:	2225      	movs	r2, #37	@ 0x25
 800e238:	2101      	movs	r1, #1
 800e23a:	5499      	strb	r1, [r3, r2]
 800e23c:	687b      	ldr	r3, [r7, #4]
 800e23e:	2224      	movs	r2, #36	@ 0x24
 800e240:	2100      	movs	r1, #0
 800e242:	5499      	strb	r1, [r3, r2]
 800e244:	687b      	ldr	r3, [r7, #4]
 800e246:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e248:	2b00      	cmp	r3, #0
 800e24a:	d004      	beq.n	800e256 <HAL_DMA_Abort_IT+0xbe>
 800e24c:	687b      	ldr	r3, [r7, #4]
 800e24e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e250:	687a      	ldr	r2, [r7, #4]
 800e252:	0010      	movs	r0, r2
 800e254:	4798      	blx	r3
 800e256:	230f      	movs	r3, #15
 800e258:	18fb      	adds	r3, r7, r3
 800e25a:	781b      	ldrb	r3, [r3, #0]
 800e25c:	0018      	movs	r0, r3
 800e25e:	46bd      	mov	sp, r7
 800e260:	b004      	add	sp, #16
 800e262:	bd80      	pop	{r7, pc}
 800e264:	fffffeff 	.word	0xfffffeff
 800e268:	40020000 	.word	0x40020000

0800e26c <HAL_DMA_IRQHandler>:
 800e26c:	b580      	push	{r7, lr}
 800e26e:	b084      	sub	sp, #16
 800e270:	af00      	add	r7, sp, #0
 800e272:	6078      	str	r0, [r7, #4]
 800e274:	4b55      	ldr	r3, [pc, #340]	@ (800e3cc <HAL_DMA_IRQHandler+0x160>)
 800e276:	681b      	ldr	r3, [r3, #0]
 800e278:	60fb      	str	r3, [r7, #12]
 800e27a:	687b      	ldr	r3, [r7, #4]
 800e27c:	681b      	ldr	r3, [r3, #0]
 800e27e:	681b      	ldr	r3, [r3, #0]
 800e280:	60bb      	str	r3, [r7, #8]
 800e282:	687b      	ldr	r3, [r7, #4]
 800e284:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e286:	221c      	movs	r2, #28
 800e288:	4013      	ands	r3, r2
 800e28a:	2204      	movs	r2, #4
 800e28c:	409a      	lsls	r2, r3
 800e28e:	0013      	movs	r3, r2
 800e290:	68fa      	ldr	r2, [r7, #12]
 800e292:	4013      	ands	r3, r2
 800e294:	d027      	beq.n	800e2e6 <HAL_DMA_IRQHandler+0x7a>
 800e296:	68bb      	ldr	r3, [r7, #8]
 800e298:	2204      	movs	r2, #4
 800e29a:	4013      	ands	r3, r2
 800e29c:	d023      	beq.n	800e2e6 <HAL_DMA_IRQHandler+0x7a>
 800e29e:	687b      	ldr	r3, [r7, #4]
 800e2a0:	681b      	ldr	r3, [r3, #0]
 800e2a2:	681b      	ldr	r3, [r3, #0]
 800e2a4:	2220      	movs	r2, #32
 800e2a6:	4013      	ands	r3, r2
 800e2a8:	d107      	bne.n	800e2ba <HAL_DMA_IRQHandler+0x4e>
 800e2aa:	687b      	ldr	r3, [r7, #4]
 800e2ac:	681b      	ldr	r3, [r3, #0]
 800e2ae:	681a      	ldr	r2, [r3, #0]
 800e2b0:	687b      	ldr	r3, [r7, #4]
 800e2b2:	681b      	ldr	r3, [r3, #0]
 800e2b4:	2104      	movs	r1, #4
 800e2b6:	438a      	bics	r2, r1
 800e2b8:	601a      	str	r2, [r3, #0]
 800e2ba:	4b44      	ldr	r3, [pc, #272]	@ (800e3cc <HAL_DMA_IRQHandler+0x160>)
 800e2bc:	6859      	ldr	r1, [r3, #4]
 800e2be:	687b      	ldr	r3, [r7, #4]
 800e2c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e2c2:	221c      	movs	r2, #28
 800e2c4:	4013      	ands	r3, r2
 800e2c6:	2204      	movs	r2, #4
 800e2c8:	409a      	lsls	r2, r3
 800e2ca:	4b40      	ldr	r3, [pc, #256]	@ (800e3cc <HAL_DMA_IRQHandler+0x160>)
 800e2cc:	430a      	orrs	r2, r1
 800e2ce:	605a      	str	r2, [r3, #4]
 800e2d0:	687b      	ldr	r3, [r7, #4]
 800e2d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e2d4:	2b00      	cmp	r3, #0
 800e2d6:	d100      	bne.n	800e2da <HAL_DMA_IRQHandler+0x6e>
 800e2d8:	e073      	b.n	800e3c2 <HAL_DMA_IRQHandler+0x156>
 800e2da:	687b      	ldr	r3, [r7, #4]
 800e2dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e2de:	687a      	ldr	r2, [r7, #4]
 800e2e0:	0010      	movs	r0, r2
 800e2e2:	4798      	blx	r3
 800e2e4:	e06d      	b.n	800e3c2 <HAL_DMA_IRQHandler+0x156>
 800e2e6:	687b      	ldr	r3, [r7, #4]
 800e2e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e2ea:	221c      	movs	r2, #28
 800e2ec:	4013      	ands	r3, r2
 800e2ee:	2202      	movs	r2, #2
 800e2f0:	409a      	lsls	r2, r3
 800e2f2:	0013      	movs	r3, r2
 800e2f4:	68fa      	ldr	r2, [r7, #12]
 800e2f6:	4013      	ands	r3, r2
 800e2f8:	d02e      	beq.n	800e358 <HAL_DMA_IRQHandler+0xec>
 800e2fa:	68bb      	ldr	r3, [r7, #8]
 800e2fc:	2202      	movs	r2, #2
 800e2fe:	4013      	ands	r3, r2
 800e300:	d02a      	beq.n	800e358 <HAL_DMA_IRQHandler+0xec>
 800e302:	687b      	ldr	r3, [r7, #4]
 800e304:	681b      	ldr	r3, [r3, #0]
 800e306:	681b      	ldr	r3, [r3, #0]
 800e308:	2220      	movs	r2, #32
 800e30a:	4013      	ands	r3, r2
 800e30c:	d10b      	bne.n	800e326 <HAL_DMA_IRQHandler+0xba>
 800e30e:	687b      	ldr	r3, [r7, #4]
 800e310:	681b      	ldr	r3, [r3, #0]
 800e312:	681a      	ldr	r2, [r3, #0]
 800e314:	687b      	ldr	r3, [r7, #4]
 800e316:	681b      	ldr	r3, [r3, #0]
 800e318:	210a      	movs	r1, #10
 800e31a:	438a      	bics	r2, r1
 800e31c:	601a      	str	r2, [r3, #0]
 800e31e:	687b      	ldr	r3, [r7, #4]
 800e320:	2225      	movs	r2, #37	@ 0x25
 800e322:	2101      	movs	r1, #1
 800e324:	5499      	strb	r1, [r3, r2]
 800e326:	4b29      	ldr	r3, [pc, #164]	@ (800e3cc <HAL_DMA_IRQHandler+0x160>)
 800e328:	6859      	ldr	r1, [r3, #4]
 800e32a:	687b      	ldr	r3, [r7, #4]
 800e32c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e32e:	221c      	movs	r2, #28
 800e330:	4013      	ands	r3, r2
 800e332:	2202      	movs	r2, #2
 800e334:	409a      	lsls	r2, r3
 800e336:	4b25      	ldr	r3, [pc, #148]	@ (800e3cc <HAL_DMA_IRQHandler+0x160>)
 800e338:	430a      	orrs	r2, r1
 800e33a:	605a      	str	r2, [r3, #4]
 800e33c:	687b      	ldr	r3, [r7, #4]
 800e33e:	2224      	movs	r2, #36	@ 0x24
 800e340:	2100      	movs	r1, #0
 800e342:	5499      	strb	r1, [r3, r2]
 800e344:	687b      	ldr	r3, [r7, #4]
 800e346:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e348:	2b00      	cmp	r3, #0
 800e34a:	d03a      	beq.n	800e3c2 <HAL_DMA_IRQHandler+0x156>
 800e34c:	687b      	ldr	r3, [r7, #4]
 800e34e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e350:	687a      	ldr	r2, [r7, #4]
 800e352:	0010      	movs	r0, r2
 800e354:	4798      	blx	r3
 800e356:	e034      	b.n	800e3c2 <HAL_DMA_IRQHandler+0x156>
 800e358:	687b      	ldr	r3, [r7, #4]
 800e35a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e35c:	221c      	movs	r2, #28
 800e35e:	4013      	ands	r3, r2
 800e360:	2208      	movs	r2, #8
 800e362:	409a      	lsls	r2, r3
 800e364:	0013      	movs	r3, r2
 800e366:	68fa      	ldr	r2, [r7, #12]
 800e368:	4013      	ands	r3, r2
 800e36a:	d02b      	beq.n	800e3c4 <HAL_DMA_IRQHandler+0x158>
 800e36c:	68bb      	ldr	r3, [r7, #8]
 800e36e:	2208      	movs	r2, #8
 800e370:	4013      	ands	r3, r2
 800e372:	d027      	beq.n	800e3c4 <HAL_DMA_IRQHandler+0x158>
 800e374:	687b      	ldr	r3, [r7, #4]
 800e376:	681b      	ldr	r3, [r3, #0]
 800e378:	681a      	ldr	r2, [r3, #0]
 800e37a:	687b      	ldr	r3, [r7, #4]
 800e37c:	681b      	ldr	r3, [r3, #0]
 800e37e:	210e      	movs	r1, #14
 800e380:	438a      	bics	r2, r1
 800e382:	601a      	str	r2, [r3, #0]
 800e384:	4b11      	ldr	r3, [pc, #68]	@ (800e3cc <HAL_DMA_IRQHandler+0x160>)
 800e386:	6859      	ldr	r1, [r3, #4]
 800e388:	687b      	ldr	r3, [r7, #4]
 800e38a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e38c:	221c      	movs	r2, #28
 800e38e:	4013      	ands	r3, r2
 800e390:	2201      	movs	r2, #1
 800e392:	409a      	lsls	r2, r3
 800e394:	4b0d      	ldr	r3, [pc, #52]	@ (800e3cc <HAL_DMA_IRQHandler+0x160>)
 800e396:	430a      	orrs	r2, r1
 800e398:	605a      	str	r2, [r3, #4]
 800e39a:	687b      	ldr	r3, [r7, #4]
 800e39c:	2201      	movs	r2, #1
 800e39e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e3a0:	687b      	ldr	r3, [r7, #4]
 800e3a2:	2225      	movs	r2, #37	@ 0x25
 800e3a4:	2101      	movs	r1, #1
 800e3a6:	5499      	strb	r1, [r3, r2]
 800e3a8:	687b      	ldr	r3, [r7, #4]
 800e3aa:	2224      	movs	r2, #36	@ 0x24
 800e3ac:	2100      	movs	r1, #0
 800e3ae:	5499      	strb	r1, [r3, r2]
 800e3b0:	687b      	ldr	r3, [r7, #4]
 800e3b2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e3b4:	2b00      	cmp	r3, #0
 800e3b6:	d005      	beq.n	800e3c4 <HAL_DMA_IRQHandler+0x158>
 800e3b8:	687b      	ldr	r3, [r7, #4]
 800e3ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e3bc:	687a      	ldr	r2, [r7, #4]
 800e3be:	0010      	movs	r0, r2
 800e3c0:	4798      	blx	r3
 800e3c2:	46c0      	nop			@ (mov r8, r8)
 800e3c4:	46c0      	nop			@ (mov r8, r8)
 800e3c6:	46bd      	mov	sp, r7
 800e3c8:	b004      	add	sp, #16
 800e3ca:	bd80      	pop	{r7, pc}
 800e3cc:	40020000 	.word	0x40020000

0800e3d0 <HAL_DMA_GetState>:
 800e3d0:	b580      	push	{r7, lr}
 800e3d2:	b082      	sub	sp, #8
 800e3d4:	af00      	add	r7, sp, #0
 800e3d6:	6078      	str	r0, [r7, #4]
 800e3d8:	687b      	ldr	r3, [r7, #4]
 800e3da:	2225      	movs	r2, #37	@ 0x25
 800e3dc:	5c9b      	ldrb	r3, [r3, r2]
 800e3de:	b2db      	uxtb	r3, r3
 800e3e0:	0018      	movs	r0, r3
 800e3e2:	46bd      	mov	sp, r7
 800e3e4:	b002      	add	sp, #8
 800e3e6:	bd80      	pop	{r7, pc}

0800e3e8 <HAL_DMA_GetError>:
 800e3e8:	b580      	push	{r7, lr}
 800e3ea:	b082      	sub	sp, #8
 800e3ec:	af00      	add	r7, sp, #0
 800e3ee:	6078      	str	r0, [r7, #4]
 800e3f0:	687b      	ldr	r3, [r7, #4]
 800e3f2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e3f4:	0018      	movs	r0, r3
 800e3f6:	46bd      	mov	sp, r7
 800e3f8:	b002      	add	sp, #8
 800e3fa:	bd80      	pop	{r7, pc}

0800e3fc <DMA_SetConfig>:
 800e3fc:	b580      	push	{r7, lr}
 800e3fe:	b084      	sub	sp, #16
 800e400:	af00      	add	r7, sp, #0
 800e402:	60f8      	str	r0, [r7, #12]
 800e404:	60b9      	str	r1, [r7, #8]
 800e406:	607a      	str	r2, [r7, #4]
 800e408:	603b      	str	r3, [r7, #0]
 800e40a:	68fb      	ldr	r3, [r7, #12]
 800e40c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e40e:	68fa      	ldr	r2, [r7, #12]
 800e410:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800e412:	605a      	str	r2, [r3, #4]
 800e414:	68fb      	ldr	r3, [r7, #12]
 800e416:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e418:	2b00      	cmp	r3, #0
 800e41a:	d004      	beq.n	800e426 <DMA_SetConfig+0x2a>
 800e41c:	68fb      	ldr	r3, [r7, #12]
 800e41e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e420:	68fa      	ldr	r2, [r7, #12]
 800e422:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 800e424:	605a      	str	r2, [r3, #4]
 800e426:	4b14      	ldr	r3, [pc, #80]	@ (800e478 <DMA_SetConfig+0x7c>)
 800e428:	6859      	ldr	r1, [r3, #4]
 800e42a:	68fb      	ldr	r3, [r7, #12]
 800e42c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e42e:	221c      	movs	r2, #28
 800e430:	4013      	ands	r3, r2
 800e432:	2201      	movs	r2, #1
 800e434:	409a      	lsls	r2, r3
 800e436:	4b10      	ldr	r3, [pc, #64]	@ (800e478 <DMA_SetConfig+0x7c>)
 800e438:	430a      	orrs	r2, r1
 800e43a:	605a      	str	r2, [r3, #4]
 800e43c:	68fb      	ldr	r3, [r7, #12]
 800e43e:	681b      	ldr	r3, [r3, #0]
 800e440:	683a      	ldr	r2, [r7, #0]
 800e442:	605a      	str	r2, [r3, #4]
 800e444:	68fb      	ldr	r3, [r7, #12]
 800e446:	689b      	ldr	r3, [r3, #8]
 800e448:	2b10      	cmp	r3, #16
 800e44a:	d108      	bne.n	800e45e <DMA_SetConfig+0x62>
 800e44c:	68fb      	ldr	r3, [r7, #12]
 800e44e:	681b      	ldr	r3, [r3, #0]
 800e450:	687a      	ldr	r2, [r7, #4]
 800e452:	609a      	str	r2, [r3, #8]
 800e454:	68fb      	ldr	r3, [r7, #12]
 800e456:	681b      	ldr	r3, [r3, #0]
 800e458:	68ba      	ldr	r2, [r7, #8]
 800e45a:	60da      	str	r2, [r3, #12]
 800e45c:	e007      	b.n	800e46e <DMA_SetConfig+0x72>
 800e45e:	68fb      	ldr	r3, [r7, #12]
 800e460:	681b      	ldr	r3, [r3, #0]
 800e462:	68ba      	ldr	r2, [r7, #8]
 800e464:	609a      	str	r2, [r3, #8]
 800e466:	68fb      	ldr	r3, [r7, #12]
 800e468:	681b      	ldr	r3, [r3, #0]
 800e46a:	687a      	ldr	r2, [r7, #4]
 800e46c:	60da      	str	r2, [r3, #12]
 800e46e:	46c0      	nop			@ (mov r8, r8)
 800e470:	46bd      	mov	sp, r7
 800e472:	b004      	add	sp, #16
 800e474:	bd80      	pop	{r7, pc}
 800e476:	46c0      	nop			@ (mov r8, r8)
 800e478:	40020000 	.word	0x40020000

0800e47c <DMA_CalcDMAMUXChannelBaseAndMask>:
 800e47c:	b580      	push	{r7, lr}
 800e47e:	b084      	sub	sp, #16
 800e480:	af00      	add	r7, sp, #0
 800e482:	6078      	str	r0, [r7, #4]
 800e484:	687b      	ldr	r3, [r7, #4]
 800e486:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e488:	089b      	lsrs	r3, r3, #2
 800e48a:	4a10      	ldr	r2, [pc, #64]	@ (800e4cc <DMA_CalcDMAMUXChannelBaseAndMask+0x50>)
 800e48c:	4694      	mov	ip, r2
 800e48e:	4463      	add	r3, ip
 800e490:	009b      	lsls	r3, r3, #2
 800e492:	001a      	movs	r2, r3
 800e494:	687b      	ldr	r3, [r7, #4]
 800e496:	645a      	str	r2, [r3, #68]	@ 0x44
 800e498:	687b      	ldr	r3, [r7, #4]
 800e49a:	681b      	ldr	r3, [r3, #0]
 800e49c:	001a      	movs	r2, r3
 800e49e:	23ff      	movs	r3, #255	@ 0xff
 800e4a0:	4013      	ands	r3, r2
 800e4a2:	3b08      	subs	r3, #8
 800e4a4:	2114      	movs	r1, #20
 800e4a6:	0018      	movs	r0, r3
 800e4a8:	f7f1 fe3e 	bl	8000128 <__udivsi3>
 800e4ac:	0003      	movs	r3, r0
 800e4ae:	60fb      	str	r3, [r7, #12]
 800e4b0:	687b      	ldr	r3, [r7, #4]
 800e4b2:	4a07      	ldr	r2, [pc, #28]	@ (800e4d0 <DMA_CalcDMAMUXChannelBaseAndMask+0x54>)
 800e4b4:	649a      	str	r2, [r3, #72]	@ 0x48
 800e4b6:	68fb      	ldr	r3, [r7, #12]
 800e4b8:	221f      	movs	r2, #31
 800e4ba:	4013      	ands	r3, r2
 800e4bc:	2201      	movs	r2, #1
 800e4be:	409a      	lsls	r2, r3
 800e4c0:	687b      	ldr	r3, [r7, #4]
 800e4c2:	64da      	str	r2, [r3, #76]	@ 0x4c
 800e4c4:	46c0      	nop			@ (mov r8, r8)
 800e4c6:	46bd      	mov	sp, r7
 800e4c8:	b004      	add	sp, #16
 800e4ca:	bd80      	pop	{r7, pc}
 800e4cc:	10008200 	.word	0x10008200
 800e4d0:	40020880 	.word	0x40020880

0800e4d4 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 800e4d4:	b580      	push	{r7, lr}
 800e4d6:	b084      	sub	sp, #16
 800e4d8:	af00      	add	r7, sp, #0
 800e4da:	6078      	str	r0, [r7, #4]
 800e4dc:	687b      	ldr	r3, [r7, #4]
 800e4de:	685b      	ldr	r3, [r3, #4]
 800e4e0:	223f      	movs	r2, #63	@ 0x3f
 800e4e2:	4013      	ands	r3, r2
 800e4e4:	60fb      	str	r3, [r7, #12]
 800e4e6:	68fb      	ldr	r3, [r7, #12]
 800e4e8:	4a0a      	ldr	r2, [pc, #40]	@ (800e514 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 800e4ea:	4694      	mov	ip, r2
 800e4ec:	4463      	add	r3, ip
 800e4ee:	009b      	lsls	r3, r3, #2
 800e4f0:	001a      	movs	r2, r3
 800e4f2:	687b      	ldr	r3, [r7, #4]
 800e4f4:	651a      	str	r2, [r3, #80]	@ 0x50
 800e4f6:	687b      	ldr	r3, [r7, #4]
 800e4f8:	4a07      	ldr	r2, [pc, #28]	@ (800e518 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 800e4fa:	655a      	str	r2, [r3, #84]	@ 0x54
 800e4fc:	68fb      	ldr	r3, [r7, #12]
 800e4fe:	3b01      	subs	r3, #1
 800e500:	2203      	movs	r2, #3
 800e502:	4013      	ands	r3, r2
 800e504:	2201      	movs	r2, #1
 800e506:	409a      	lsls	r2, r3
 800e508:	687b      	ldr	r3, [r7, #4]
 800e50a:	659a      	str	r2, [r3, #88]	@ 0x58
 800e50c:	46c0      	nop			@ (mov r8, r8)
 800e50e:	46bd      	mov	sp, r7
 800e510:	b004      	add	sp, #16
 800e512:	bd80      	pop	{r7, pc}
 800e514:	1000823f 	.word	0x1000823f
 800e518:	40020940 	.word	0x40020940

0800e51c <HAL_GPIO_Init>:
 800e51c:	b580      	push	{r7, lr}
 800e51e:	b086      	sub	sp, #24
 800e520:	af00      	add	r7, sp, #0
 800e522:	6078      	str	r0, [r7, #4]
 800e524:	6039      	str	r1, [r7, #0]
 800e526:	2300      	movs	r3, #0
 800e528:	617b      	str	r3, [r7, #20]
 800e52a:	e147      	b.n	800e7bc <HAL_GPIO_Init+0x2a0>
 800e52c:	683b      	ldr	r3, [r7, #0]
 800e52e:	681b      	ldr	r3, [r3, #0]
 800e530:	2101      	movs	r1, #1
 800e532:	697a      	ldr	r2, [r7, #20]
 800e534:	4091      	lsls	r1, r2
 800e536:	000a      	movs	r2, r1
 800e538:	4013      	ands	r3, r2
 800e53a:	60fb      	str	r3, [r7, #12]
 800e53c:	68fb      	ldr	r3, [r7, #12]
 800e53e:	2b00      	cmp	r3, #0
 800e540:	d100      	bne.n	800e544 <HAL_GPIO_Init+0x28>
 800e542:	e138      	b.n	800e7b6 <HAL_GPIO_Init+0x29a>
 800e544:	683b      	ldr	r3, [r7, #0]
 800e546:	685b      	ldr	r3, [r3, #4]
 800e548:	2203      	movs	r2, #3
 800e54a:	4013      	ands	r3, r2
 800e54c:	2b01      	cmp	r3, #1
 800e54e:	d005      	beq.n	800e55c <HAL_GPIO_Init+0x40>
 800e550:	683b      	ldr	r3, [r7, #0]
 800e552:	685b      	ldr	r3, [r3, #4]
 800e554:	2203      	movs	r2, #3
 800e556:	4013      	ands	r3, r2
 800e558:	2b02      	cmp	r3, #2
 800e55a:	d130      	bne.n	800e5be <HAL_GPIO_Init+0xa2>
 800e55c:	687b      	ldr	r3, [r7, #4]
 800e55e:	689b      	ldr	r3, [r3, #8]
 800e560:	613b      	str	r3, [r7, #16]
 800e562:	697b      	ldr	r3, [r7, #20]
 800e564:	005b      	lsls	r3, r3, #1
 800e566:	2203      	movs	r2, #3
 800e568:	409a      	lsls	r2, r3
 800e56a:	0013      	movs	r3, r2
 800e56c:	43da      	mvns	r2, r3
 800e56e:	693b      	ldr	r3, [r7, #16]
 800e570:	4013      	ands	r3, r2
 800e572:	613b      	str	r3, [r7, #16]
 800e574:	683b      	ldr	r3, [r7, #0]
 800e576:	68da      	ldr	r2, [r3, #12]
 800e578:	697b      	ldr	r3, [r7, #20]
 800e57a:	005b      	lsls	r3, r3, #1
 800e57c:	409a      	lsls	r2, r3
 800e57e:	0013      	movs	r3, r2
 800e580:	693a      	ldr	r2, [r7, #16]
 800e582:	4313      	orrs	r3, r2
 800e584:	613b      	str	r3, [r7, #16]
 800e586:	687b      	ldr	r3, [r7, #4]
 800e588:	693a      	ldr	r2, [r7, #16]
 800e58a:	609a      	str	r2, [r3, #8]
 800e58c:	687b      	ldr	r3, [r7, #4]
 800e58e:	685b      	ldr	r3, [r3, #4]
 800e590:	613b      	str	r3, [r7, #16]
 800e592:	2201      	movs	r2, #1
 800e594:	697b      	ldr	r3, [r7, #20]
 800e596:	409a      	lsls	r2, r3
 800e598:	0013      	movs	r3, r2
 800e59a:	43da      	mvns	r2, r3
 800e59c:	693b      	ldr	r3, [r7, #16]
 800e59e:	4013      	ands	r3, r2
 800e5a0:	613b      	str	r3, [r7, #16]
 800e5a2:	683b      	ldr	r3, [r7, #0]
 800e5a4:	685b      	ldr	r3, [r3, #4]
 800e5a6:	091b      	lsrs	r3, r3, #4
 800e5a8:	2201      	movs	r2, #1
 800e5aa:	401a      	ands	r2, r3
 800e5ac:	697b      	ldr	r3, [r7, #20]
 800e5ae:	409a      	lsls	r2, r3
 800e5b0:	0013      	movs	r3, r2
 800e5b2:	693a      	ldr	r2, [r7, #16]
 800e5b4:	4313      	orrs	r3, r2
 800e5b6:	613b      	str	r3, [r7, #16]
 800e5b8:	687b      	ldr	r3, [r7, #4]
 800e5ba:	693a      	ldr	r2, [r7, #16]
 800e5bc:	605a      	str	r2, [r3, #4]
 800e5be:	683b      	ldr	r3, [r7, #0]
 800e5c0:	685b      	ldr	r3, [r3, #4]
 800e5c2:	2203      	movs	r2, #3
 800e5c4:	4013      	ands	r3, r2
 800e5c6:	2b03      	cmp	r3, #3
 800e5c8:	d017      	beq.n	800e5fa <HAL_GPIO_Init+0xde>
 800e5ca:	687b      	ldr	r3, [r7, #4]
 800e5cc:	68db      	ldr	r3, [r3, #12]
 800e5ce:	613b      	str	r3, [r7, #16]
 800e5d0:	697b      	ldr	r3, [r7, #20]
 800e5d2:	005b      	lsls	r3, r3, #1
 800e5d4:	2203      	movs	r2, #3
 800e5d6:	409a      	lsls	r2, r3
 800e5d8:	0013      	movs	r3, r2
 800e5da:	43da      	mvns	r2, r3
 800e5dc:	693b      	ldr	r3, [r7, #16]
 800e5de:	4013      	ands	r3, r2
 800e5e0:	613b      	str	r3, [r7, #16]
 800e5e2:	683b      	ldr	r3, [r7, #0]
 800e5e4:	689a      	ldr	r2, [r3, #8]
 800e5e6:	697b      	ldr	r3, [r7, #20]
 800e5e8:	005b      	lsls	r3, r3, #1
 800e5ea:	409a      	lsls	r2, r3
 800e5ec:	0013      	movs	r3, r2
 800e5ee:	693a      	ldr	r2, [r7, #16]
 800e5f0:	4313      	orrs	r3, r2
 800e5f2:	613b      	str	r3, [r7, #16]
 800e5f4:	687b      	ldr	r3, [r7, #4]
 800e5f6:	693a      	ldr	r2, [r7, #16]
 800e5f8:	60da      	str	r2, [r3, #12]
 800e5fa:	683b      	ldr	r3, [r7, #0]
 800e5fc:	685b      	ldr	r3, [r3, #4]
 800e5fe:	2203      	movs	r2, #3
 800e600:	4013      	ands	r3, r2
 800e602:	2b02      	cmp	r3, #2
 800e604:	d123      	bne.n	800e64e <HAL_GPIO_Init+0x132>
 800e606:	697b      	ldr	r3, [r7, #20]
 800e608:	08da      	lsrs	r2, r3, #3
 800e60a:	687b      	ldr	r3, [r7, #4]
 800e60c:	3208      	adds	r2, #8
 800e60e:	0092      	lsls	r2, r2, #2
 800e610:	58d3      	ldr	r3, [r2, r3]
 800e612:	613b      	str	r3, [r7, #16]
 800e614:	697b      	ldr	r3, [r7, #20]
 800e616:	2207      	movs	r2, #7
 800e618:	4013      	ands	r3, r2
 800e61a:	009b      	lsls	r3, r3, #2
 800e61c:	220f      	movs	r2, #15
 800e61e:	409a      	lsls	r2, r3
 800e620:	0013      	movs	r3, r2
 800e622:	43da      	mvns	r2, r3
 800e624:	693b      	ldr	r3, [r7, #16]
 800e626:	4013      	ands	r3, r2
 800e628:	613b      	str	r3, [r7, #16]
 800e62a:	683b      	ldr	r3, [r7, #0]
 800e62c:	691a      	ldr	r2, [r3, #16]
 800e62e:	697b      	ldr	r3, [r7, #20]
 800e630:	2107      	movs	r1, #7
 800e632:	400b      	ands	r3, r1
 800e634:	009b      	lsls	r3, r3, #2
 800e636:	409a      	lsls	r2, r3
 800e638:	0013      	movs	r3, r2
 800e63a:	693a      	ldr	r2, [r7, #16]
 800e63c:	4313      	orrs	r3, r2
 800e63e:	613b      	str	r3, [r7, #16]
 800e640:	697b      	ldr	r3, [r7, #20]
 800e642:	08da      	lsrs	r2, r3, #3
 800e644:	687b      	ldr	r3, [r7, #4]
 800e646:	3208      	adds	r2, #8
 800e648:	0092      	lsls	r2, r2, #2
 800e64a:	6939      	ldr	r1, [r7, #16]
 800e64c:	50d1      	str	r1, [r2, r3]
 800e64e:	687b      	ldr	r3, [r7, #4]
 800e650:	681b      	ldr	r3, [r3, #0]
 800e652:	613b      	str	r3, [r7, #16]
 800e654:	697b      	ldr	r3, [r7, #20]
 800e656:	005b      	lsls	r3, r3, #1
 800e658:	2203      	movs	r2, #3
 800e65a:	409a      	lsls	r2, r3
 800e65c:	0013      	movs	r3, r2
 800e65e:	43da      	mvns	r2, r3
 800e660:	693b      	ldr	r3, [r7, #16]
 800e662:	4013      	ands	r3, r2
 800e664:	613b      	str	r3, [r7, #16]
 800e666:	683b      	ldr	r3, [r7, #0]
 800e668:	685b      	ldr	r3, [r3, #4]
 800e66a:	2203      	movs	r2, #3
 800e66c:	401a      	ands	r2, r3
 800e66e:	697b      	ldr	r3, [r7, #20]
 800e670:	005b      	lsls	r3, r3, #1
 800e672:	409a      	lsls	r2, r3
 800e674:	0013      	movs	r3, r2
 800e676:	693a      	ldr	r2, [r7, #16]
 800e678:	4313      	orrs	r3, r2
 800e67a:	613b      	str	r3, [r7, #16]
 800e67c:	687b      	ldr	r3, [r7, #4]
 800e67e:	693a      	ldr	r2, [r7, #16]
 800e680:	601a      	str	r2, [r3, #0]
 800e682:	683b      	ldr	r3, [r7, #0]
 800e684:	685a      	ldr	r2, [r3, #4]
 800e686:	23c0      	movs	r3, #192	@ 0xc0
 800e688:	029b      	lsls	r3, r3, #10
 800e68a:	4013      	ands	r3, r2
 800e68c:	d100      	bne.n	800e690 <HAL_GPIO_Init+0x174>
 800e68e:	e092      	b.n	800e7b6 <HAL_GPIO_Init+0x29a>
 800e690:	4a50      	ldr	r2, [pc, #320]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e692:	697b      	ldr	r3, [r7, #20]
 800e694:	089b      	lsrs	r3, r3, #2
 800e696:	3318      	adds	r3, #24
 800e698:	009b      	lsls	r3, r3, #2
 800e69a:	589b      	ldr	r3, [r3, r2]
 800e69c:	613b      	str	r3, [r7, #16]
 800e69e:	697b      	ldr	r3, [r7, #20]
 800e6a0:	2203      	movs	r2, #3
 800e6a2:	4013      	ands	r3, r2
 800e6a4:	00db      	lsls	r3, r3, #3
 800e6a6:	220f      	movs	r2, #15
 800e6a8:	409a      	lsls	r2, r3
 800e6aa:	0013      	movs	r3, r2
 800e6ac:	43da      	mvns	r2, r3
 800e6ae:	693b      	ldr	r3, [r7, #16]
 800e6b0:	4013      	ands	r3, r2
 800e6b2:	613b      	str	r3, [r7, #16]
 800e6b4:	687a      	ldr	r2, [r7, #4]
 800e6b6:	23a0      	movs	r3, #160	@ 0xa0
 800e6b8:	05db      	lsls	r3, r3, #23
 800e6ba:	429a      	cmp	r2, r3
 800e6bc:	d013      	beq.n	800e6e6 <HAL_GPIO_Init+0x1ca>
 800e6be:	687b      	ldr	r3, [r7, #4]
 800e6c0:	4a45      	ldr	r2, [pc, #276]	@ (800e7d8 <HAL_GPIO_Init+0x2bc>)
 800e6c2:	4293      	cmp	r3, r2
 800e6c4:	d00d      	beq.n	800e6e2 <HAL_GPIO_Init+0x1c6>
 800e6c6:	687b      	ldr	r3, [r7, #4]
 800e6c8:	4a44      	ldr	r2, [pc, #272]	@ (800e7dc <HAL_GPIO_Init+0x2c0>)
 800e6ca:	4293      	cmp	r3, r2
 800e6cc:	d007      	beq.n	800e6de <HAL_GPIO_Init+0x1c2>
 800e6ce:	687b      	ldr	r3, [r7, #4]
 800e6d0:	4a43      	ldr	r2, [pc, #268]	@ (800e7e0 <HAL_GPIO_Init+0x2c4>)
 800e6d2:	4293      	cmp	r3, r2
 800e6d4:	d101      	bne.n	800e6da <HAL_GPIO_Init+0x1be>
 800e6d6:	2303      	movs	r3, #3
 800e6d8:	e006      	b.n	800e6e8 <HAL_GPIO_Init+0x1cc>
 800e6da:	2305      	movs	r3, #5
 800e6dc:	e004      	b.n	800e6e8 <HAL_GPIO_Init+0x1cc>
 800e6de:	2302      	movs	r3, #2
 800e6e0:	e002      	b.n	800e6e8 <HAL_GPIO_Init+0x1cc>
 800e6e2:	2301      	movs	r3, #1
 800e6e4:	e000      	b.n	800e6e8 <HAL_GPIO_Init+0x1cc>
 800e6e6:	2300      	movs	r3, #0
 800e6e8:	697a      	ldr	r2, [r7, #20]
 800e6ea:	2103      	movs	r1, #3
 800e6ec:	400a      	ands	r2, r1
 800e6ee:	00d2      	lsls	r2, r2, #3
 800e6f0:	4093      	lsls	r3, r2
 800e6f2:	693a      	ldr	r2, [r7, #16]
 800e6f4:	4313      	orrs	r3, r2
 800e6f6:	613b      	str	r3, [r7, #16]
 800e6f8:	4936      	ldr	r1, [pc, #216]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e6fa:	697b      	ldr	r3, [r7, #20]
 800e6fc:	089b      	lsrs	r3, r3, #2
 800e6fe:	3318      	adds	r3, #24
 800e700:	009b      	lsls	r3, r3, #2
 800e702:	693a      	ldr	r2, [r7, #16]
 800e704:	505a      	str	r2, [r3, r1]
 800e706:	4b33      	ldr	r3, [pc, #204]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e708:	681b      	ldr	r3, [r3, #0]
 800e70a:	613b      	str	r3, [r7, #16]
 800e70c:	68fb      	ldr	r3, [r7, #12]
 800e70e:	43da      	mvns	r2, r3
 800e710:	693b      	ldr	r3, [r7, #16]
 800e712:	4013      	ands	r3, r2
 800e714:	613b      	str	r3, [r7, #16]
 800e716:	683b      	ldr	r3, [r7, #0]
 800e718:	685a      	ldr	r2, [r3, #4]
 800e71a:	2380      	movs	r3, #128	@ 0x80
 800e71c:	035b      	lsls	r3, r3, #13
 800e71e:	4013      	ands	r3, r2
 800e720:	d003      	beq.n	800e72a <HAL_GPIO_Init+0x20e>
 800e722:	693a      	ldr	r2, [r7, #16]
 800e724:	68fb      	ldr	r3, [r7, #12]
 800e726:	4313      	orrs	r3, r2
 800e728:	613b      	str	r3, [r7, #16]
 800e72a:	4b2a      	ldr	r3, [pc, #168]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e72c:	693a      	ldr	r2, [r7, #16]
 800e72e:	601a      	str	r2, [r3, #0]
 800e730:	4b28      	ldr	r3, [pc, #160]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e732:	685b      	ldr	r3, [r3, #4]
 800e734:	613b      	str	r3, [r7, #16]
 800e736:	68fb      	ldr	r3, [r7, #12]
 800e738:	43da      	mvns	r2, r3
 800e73a:	693b      	ldr	r3, [r7, #16]
 800e73c:	4013      	ands	r3, r2
 800e73e:	613b      	str	r3, [r7, #16]
 800e740:	683b      	ldr	r3, [r7, #0]
 800e742:	685a      	ldr	r2, [r3, #4]
 800e744:	2380      	movs	r3, #128	@ 0x80
 800e746:	039b      	lsls	r3, r3, #14
 800e748:	4013      	ands	r3, r2
 800e74a:	d003      	beq.n	800e754 <HAL_GPIO_Init+0x238>
 800e74c:	693a      	ldr	r2, [r7, #16]
 800e74e:	68fb      	ldr	r3, [r7, #12]
 800e750:	4313      	orrs	r3, r2
 800e752:	613b      	str	r3, [r7, #16]
 800e754:	4b1f      	ldr	r3, [pc, #124]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e756:	693a      	ldr	r2, [r7, #16]
 800e758:	605a      	str	r2, [r3, #4]
 800e75a:	4a1e      	ldr	r2, [pc, #120]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e75c:	2384      	movs	r3, #132	@ 0x84
 800e75e:	58d3      	ldr	r3, [r2, r3]
 800e760:	613b      	str	r3, [r7, #16]
 800e762:	68fb      	ldr	r3, [r7, #12]
 800e764:	43da      	mvns	r2, r3
 800e766:	693b      	ldr	r3, [r7, #16]
 800e768:	4013      	ands	r3, r2
 800e76a:	613b      	str	r3, [r7, #16]
 800e76c:	683b      	ldr	r3, [r7, #0]
 800e76e:	685a      	ldr	r2, [r3, #4]
 800e770:	2380      	movs	r3, #128	@ 0x80
 800e772:	029b      	lsls	r3, r3, #10
 800e774:	4013      	ands	r3, r2
 800e776:	d003      	beq.n	800e780 <HAL_GPIO_Init+0x264>
 800e778:	693a      	ldr	r2, [r7, #16]
 800e77a:	68fb      	ldr	r3, [r7, #12]
 800e77c:	4313      	orrs	r3, r2
 800e77e:	613b      	str	r3, [r7, #16]
 800e780:	4914      	ldr	r1, [pc, #80]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e782:	2284      	movs	r2, #132	@ 0x84
 800e784:	693b      	ldr	r3, [r7, #16]
 800e786:	508b      	str	r3, [r1, r2]
 800e788:	4a12      	ldr	r2, [pc, #72]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e78a:	2380      	movs	r3, #128	@ 0x80
 800e78c:	58d3      	ldr	r3, [r2, r3]
 800e78e:	613b      	str	r3, [r7, #16]
 800e790:	68fb      	ldr	r3, [r7, #12]
 800e792:	43da      	mvns	r2, r3
 800e794:	693b      	ldr	r3, [r7, #16]
 800e796:	4013      	ands	r3, r2
 800e798:	613b      	str	r3, [r7, #16]
 800e79a:	683b      	ldr	r3, [r7, #0]
 800e79c:	685a      	ldr	r2, [r3, #4]
 800e79e:	2380      	movs	r3, #128	@ 0x80
 800e7a0:	025b      	lsls	r3, r3, #9
 800e7a2:	4013      	ands	r3, r2
 800e7a4:	d003      	beq.n	800e7ae <HAL_GPIO_Init+0x292>
 800e7a6:	693a      	ldr	r2, [r7, #16]
 800e7a8:	68fb      	ldr	r3, [r7, #12]
 800e7aa:	4313      	orrs	r3, r2
 800e7ac:	613b      	str	r3, [r7, #16]
 800e7ae:	4909      	ldr	r1, [pc, #36]	@ (800e7d4 <HAL_GPIO_Init+0x2b8>)
 800e7b0:	2280      	movs	r2, #128	@ 0x80
 800e7b2:	693b      	ldr	r3, [r7, #16]
 800e7b4:	508b      	str	r3, [r1, r2]
 800e7b6:	697b      	ldr	r3, [r7, #20]
 800e7b8:	3301      	adds	r3, #1
 800e7ba:	617b      	str	r3, [r7, #20]
 800e7bc:	683b      	ldr	r3, [r7, #0]
 800e7be:	681a      	ldr	r2, [r3, #0]
 800e7c0:	697b      	ldr	r3, [r7, #20]
 800e7c2:	40da      	lsrs	r2, r3
 800e7c4:	1e13      	subs	r3, r2, #0
 800e7c6:	d000      	beq.n	800e7ca <HAL_GPIO_Init+0x2ae>
 800e7c8:	e6b0      	b.n	800e52c <HAL_GPIO_Init+0x10>
 800e7ca:	46c0      	nop			@ (mov r8, r8)
 800e7cc:	46c0      	nop			@ (mov r8, r8)
 800e7ce:	46bd      	mov	sp, r7
 800e7d0:	b006      	add	sp, #24
 800e7d2:	bd80      	pop	{r7, pc}
 800e7d4:	40021800 	.word	0x40021800
 800e7d8:	50000400 	.word	0x50000400
 800e7dc:	50000800 	.word	0x50000800
 800e7e0:	50000c00 	.word	0x50000c00

0800e7e4 <HAL_GPIO_ReadPin>:
 800e7e4:	b580      	push	{r7, lr}
 800e7e6:	b084      	sub	sp, #16
 800e7e8:	af00      	add	r7, sp, #0
 800e7ea:	6078      	str	r0, [r7, #4]
 800e7ec:	000a      	movs	r2, r1
 800e7ee:	1cbb      	adds	r3, r7, #2
 800e7f0:	801a      	strh	r2, [r3, #0]
 800e7f2:	687b      	ldr	r3, [r7, #4]
 800e7f4:	691b      	ldr	r3, [r3, #16]
 800e7f6:	1cba      	adds	r2, r7, #2
 800e7f8:	8812      	ldrh	r2, [r2, #0]
 800e7fa:	4013      	ands	r3, r2
 800e7fc:	d004      	beq.n	800e808 <HAL_GPIO_ReadPin+0x24>
 800e7fe:	230f      	movs	r3, #15
 800e800:	18fb      	adds	r3, r7, r3
 800e802:	2201      	movs	r2, #1
 800e804:	701a      	strb	r2, [r3, #0]
 800e806:	e003      	b.n	800e810 <HAL_GPIO_ReadPin+0x2c>
 800e808:	230f      	movs	r3, #15
 800e80a:	18fb      	adds	r3, r7, r3
 800e80c:	2200      	movs	r2, #0
 800e80e:	701a      	strb	r2, [r3, #0]
 800e810:	230f      	movs	r3, #15
 800e812:	18fb      	adds	r3, r7, r3
 800e814:	781b      	ldrb	r3, [r3, #0]
 800e816:	0018      	movs	r0, r3
 800e818:	46bd      	mov	sp, r7
 800e81a:	b004      	add	sp, #16
 800e81c:	bd80      	pop	{r7, pc}

0800e81e <HAL_GPIO_WritePin>:
 800e81e:	b580      	push	{r7, lr}
 800e820:	b082      	sub	sp, #8
 800e822:	af00      	add	r7, sp, #0
 800e824:	6078      	str	r0, [r7, #4]
 800e826:	0008      	movs	r0, r1
 800e828:	0011      	movs	r1, r2
 800e82a:	1cbb      	adds	r3, r7, #2
 800e82c:	1c02      	adds	r2, r0, #0
 800e82e:	801a      	strh	r2, [r3, #0]
 800e830:	1c7b      	adds	r3, r7, #1
 800e832:	1c0a      	adds	r2, r1, #0
 800e834:	701a      	strb	r2, [r3, #0]
 800e836:	1c7b      	adds	r3, r7, #1
 800e838:	781b      	ldrb	r3, [r3, #0]
 800e83a:	2b00      	cmp	r3, #0
 800e83c:	d004      	beq.n	800e848 <HAL_GPIO_WritePin+0x2a>
 800e83e:	1cbb      	adds	r3, r7, #2
 800e840:	881a      	ldrh	r2, [r3, #0]
 800e842:	687b      	ldr	r3, [r7, #4]
 800e844:	619a      	str	r2, [r3, #24]
 800e846:	e003      	b.n	800e850 <HAL_GPIO_WritePin+0x32>
 800e848:	1cbb      	adds	r3, r7, #2
 800e84a:	881a      	ldrh	r2, [r3, #0]
 800e84c:	687b      	ldr	r3, [r7, #4]
 800e84e:	629a      	str	r2, [r3, #40]	@ 0x28
 800e850:	46c0      	nop			@ (mov r8, r8)
 800e852:	46bd      	mov	sp, r7
 800e854:	b002      	add	sp, #8
 800e856:	bd80      	pop	{r7, pc}

0800e858 <HAL_I2C_Init>:
 800e858:	b580      	push	{r7, lr}
 800e85a:	b082      	sub	sp, #8
 800e85c:	af00      	add	r7, sp, #0
 800e85e:	6078      	str	r0, [r7, #4]
 800e860:	687b      	ldr	r3, [r7, #4]
 800e862:	2b00      	cmp	r3, #0
 800e864:	d101      	bne.n	800e86a <HAL_I2C_Init+0x12>
 800e866:	2301      	movs	r3, #1
 800e868:	e082      	b.n	800e970 <HAL_I2C_Init+0x118>
 800e86a:	687b      	ldr	r3, [r7, #4]
 800e86c:	2241      	movs	r2, #65	@ 0x41
 800e86e:	5c9b      	ldrb	r3, [r3, r2]
 800e870:	b2db      	uxtb	r3, r3
 800e872:	2b00      	cmp	r3, #0
 800e874:	d107      	bne.n	800e886 <HAL_I2C_Init+0x2e>
 800e876:	687b      	ldr	r3, [r7, #4]
 800e878:	2240      	movs	r2, #64	@ 0x40
 800e87a:	2100      	movs	r1, #0
 800e87c:	5499      	strb	r1, [r3, r2]
 800e87e:	687b      	ldr	r3, [r7, #4]
 800e880:	0018      	movs	r0, r3
 800e882:	f7fe fc3d 	bl	800d100 <HAL_I2C_MspInit>
 800e886:	687b      	ldr	r3, [r7, #4]
 800e888:	2241      	movs	r2, #65	@ 0x41
 800e88a:	2124      	movs	r1, #36	@ 0x24
 800e88c:	5499      	strb	r1, [r3, r2]
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	681b      	ldr	r3, [r3, #0]
 800e892:	681a      	ldr	r2, [r3, #0]
 800e894:	687b      	ldr	r3, [r7, #4]
 800e896:	681b      	ldr	r3, [r3, #0]
 800e898:	2101      	movs	r1, #1
 800e89a:	438a      	bics	r2, r1
 800e89c:	601a      	str	r2, [r3, #0]
 800e89e:	687b      	ldr	r3, [r7, #4]
 800e8a0:	685a      	ldr	r2, [r3, #4]
 800e8a2:	687b      	ldr	r3, [r7, #4]
 800e8a4:	681b      	ldr	r3, [r3, #0]
 800e8a6:	4934      	ldr	r1, [pc, #208]	@ (800e978 <HAL_I2C_Init+0x120>)
 800e8a8:	400a      	ands	r2, r1
 800e8aa:	611a      	str	r2, [r3, #16]
 800e8ac:	687b      	ldr	r3, [r7, #4]
 800e8ae:	681b      	ldr	r3, [r3, #0]
 800e8b0:	689a      	ldr	r2, [r3, #8]
 800e8b2:	687b      	ldr	r3, [r7, #4]
 800e8b4:	681b      	ldr	r3, [r3, #0]
 800e8b6:	4931      	ldr	r1, [pc, #196]	@ (800e97c <HAL_I2C_Init+0x124>)
 800e8b8:	400a      	ands	r2, r1
 800e8ba:	609a      	str	r2, [r3, #8]
 800e8bc:	687b      	ldr	r3, [r7, #4]
 800e8be:	68db      	ldr	r3, [r3, #12]
 800e8c0:	2b01      	cmp	r3, #1
 800e8c2:	d108      	bne.n	800e8d6 <HAL_I2C_Init+0x7e>
 800e8c4:	687b      	ldr	r3, [r7, #4]
 800e8c6:	689a      	ldr	r2, [r3, #8]
 800e8c8:	687b      	ldr	r3, [r7, #4]
 800e8ca:	681b      	ldr	r3, [r3, #0]
 800e8cc:	2180      	movs	r1, #128	@ 0x80
 800e8ce:	0209      	lsls	r1, r1, #8
 800e8d0:	430a      	orrs	r2, r1
 800e8d2:	609a      	str	r2, [r3, #8]
 800e8d4:	e007      	b.n	800e8e6 <HAL_I2C_Init+0x8e>
 800e8d6:	687b      	ldr	r3, [r7, #4]
 800e8d8:	689a      	ldr	r2, [r3, #8]
 800e8da:	687b      	ldr	r3, [r7, #4]
 800e8dc:	681b      	ldr	r3, [r3, #0]
 800e8de:	2184      	movs	r1, #132	@ 0x84
 800e8e0:	0209      	lsls	r1, r1, #8
 800e8e2:	430a      	orrs	r2, r1
 800e8e4:	609a      	str	r2, [r3, #8]
 800e8e6:	687b      	ldr	r3, [r7, #4]
 800e8e8:	68db      	ldr	r3, [r3, #12]
 800e8ea:	2b02      	cmp	r3, #2
 800e8ec:	d104      	bne.n	800e8f8 <HAL_I2C_Init+0xa0>
 800e8ee:	687b      	ldr	r3, [r7, #4]
 800e8f0:	681b      	ldr	r3, [r3, #0]
 800e8f2:	2280      	movs	r2, #128	@ 0x80
 800e8f4:	0112      	lsls	r2, r2, #4
 800e8f6:	605a      	str	r2, [r3, #4]
 800e8f8:	687b      	ldr	r3, [r7, #4]
 800e8fa:	681b      	ldr	r3, [r3, #0]
 800e8fc:	685a      	ldr	r2, [r3, #4]
 800e8fe:	687b      	ldr	r3, [r7, #4]
 800e900:	681b      	ldr	r3, [r3, #0]
 800e902:	491f      	ldr	r1, [pc, #124]	@ (800e980 <HAL_I2C_Init+0x128>)
 800e904:	430a      	orrs	r2, r1
 800e906:	605a      	str	r2, [r3, #4]
 800e908:	687b      	ldr	r3, [r7, #4]
 800e90a:	681b      	ldr	r3, [r3, #0]
 800e90c:	68da      	ldr	r2, [r3, #12]
 800e90e:	687b      	ldr	r3, [r7, #4]
 800e910:	681b      	ldr	r3, [r3, #0]
 800e912:	491a      	ldr	r1, [pc, #104]	@ (800e97c <HAL_I2C_Init+0x124>)
 800e914:	400a      	ands	r2, r1
 800e916:	60da      	str	r2, [r3, #12]
 800e918:	687b      	ldr	r3, [r7, #4]
 800e91a:	691a      	ldr	r2, [r3, #16]
 800e91c:	687b      	ldr	r3, [r7, #4]
 800e91e:	695b      	ldr	r3, [r3, #20]
 800e920:	431a      	orrs	r2, r3
 800e922:	0011      	movs	r1, r2
 800e924:	687b      	ldr	r3, [r7, #4]
 800e926:	699b      	ldr	r3, [r3, #24]
 800e928:	021a      	lsls	r2, r3, #8
 800e92a:	687b      	ldr	r3, [r7, #4]
 800e92c:	681b      	ldr	r3, [r3, #0]
 800e92e:	430a      	orrs	r2, r1
 800e930:	60da      	str	r2, [r3, #12]
 800e932:	687b      	ldr	r3, [r7, #4]
 800e934:	69d9      	ldr	r1, [r3, #28]
 800e936:	687b      	ldr	r3, [r7, #4]
 800e938:	6a1a      	ldr	r2, [r3, #32]
 800e93a:	687b      	ldr	r3, [r7, #4]
 800e93c:	681b      	ldr	r3, [r3, #0]
 800e93e:	430a      	orrs	r2, r1
 800e940:	601a      	str	r2, [r3, #0]
 800e942:	687b      	ldr	r3, [r7, #4]
 800e944:	681b      	ldr	r3, [r3, #0]
 800e946:	681a      	ldr	r2, [r3, #0]
 800e948:	687b      	ldr	r3, [r7, #4]
 800e94a:	681b      	ldr	r3, [r3, #0]
 800e94c:	2101      	movs	r1, #1
 800e94e:	430a      	orrs	r2, r1
 800e950:	601a      	str	r2, [r3, #0]
 800e952:	687b      	ldr	r3, [r7, #4]
 800e954:	2200      	movs	r2, #0
 800e956:	645a      	str	r2, [r3, #68]	@ 0x44
 800e958:	687b      	ldr	r3, [r7, #4]
 800e95a:	2241      	movs	r2, #65	@ 0x41
 800e95c:	2120      	movs	r1, #32
 800e95e:	5499      	strb	r1, [r3, r2]
 800e960:	687b      	ldr	r3, [r7, #4]
 800e962:	2200      	movs	r2, #0
 800e964:	631a      	str	r2, [r3, #48]	@ 0x30
 800e966:	687b      	ldr	r3, [r7, #4]
 800e968:	2242      	movs	r2, #66	@ 0x42
 800e96a:	2100      	movs	r1, #0
 800e96c:	5499      	strb	r1, [r3, r2]
 800e96e:	2300      	movs	r3, #0
 800e970:	0018      	movs	r0, r3
 800e972:	46bd      	mov	sp, r7
 800e974:	b002      	add	sp, #8
 800e976:	bd80      	pop	{r7, pc}
 800e978:	f0ffffff 	.word	0xf0ffffff
 800e97c:	ffff7fff 	.word	0xffff7fff
 800e980:	02008000 	.word	0x02008000

0800e984 <HAL_I2C_Master_Transmit>:
 800e984:	b590      	push	{r4, r7, lr}
 800e986:	b089      	sub	sp, #36	@ 0x24
 800e988:	af02      	add	r7, sp, #8
 800e98a:	60f8      	str	r0, [r7, #12]
 800e98c:	0008      	movs	r0, r1
 800e98e:	607a      	str	r2, [r7, #4]
 800e990:	0019      	movs	r1, r3
 800e992:	230a      	movs	r3, #10
 800e994:	18fb      	adds	r3, r7, r3
 800e996:	1c02      	adds	r2, r0, #0
 800e998:	801a      	strh	r2, [r3, #0]
 800e99a:	2308      	movs	r3, #8
 800e99c:	18fb      	adds	r3, r7, r3
 800e99e:	1c0a      	adds	r2, r1, #0
 800e9a0:	801a      	strh	r2, [r3, #0]
 800e9a2:	68fb      	ldr	r3, [r7, #12]
 800e9a4:	2241      	movs	r2, #65	@ 0x41
 800e9a6:	5c9b      	ldrb	r3, [r3, r2]
 800e9a8:	b2db      	uxtb	r3, r3
 800e9aa:	2b20      	cmp	r3, #32
 800e9ac:	d000      	beq.n	800e9b0 <HAL_I2C_Master_Transmit+0x2c>
 800e9ae:	e0e7      	b.n	800eb80 <HAL_I2C_Master_Transmit+0x1fc>
 800e9b0:	68fb      	ldr	r3, [r7, #12]
 800e9b2:	2240      	movs	r2, #64	@ 0x40
 800e9b4:	5c9b      	ldrb	r3, [r3, r2]
 800e9b6:	2b01      	cmp	r3, #1
 800e9b8:	d101      	bne.n	800e9be <HAL_I2C_Master_Transmit+0x3a>
 800e9ba:	2302      	movs	r3, #2
 800e9bc:	e0e1      	b.n	800eb82 <HAL_I2C_Master_Transmit+0x1fe>
 800e9be:	68fb      	ldr	r3, [r7, #12]
 800e9c0:	2240      	movs	r2, #64	@ 0x40
 800e9c2:	2101      	movs	r1, #1
 800e9c4:	5499      	strb	r1, [r3, r2]
 800e9c6:	f7ff f953 	bl	800dc70 <HAL_GetTick>
 800e9ca:	0003      	movs	r3, r0
 800e9cc:	617b      	str	r3, [r7, #20]
 800e9ce:	2380      	movs	r3, #128	@ 0x80
 800e9d0:	0219      	lsls	r1, r3, #8
 800e9d2:	68f8      	ldr	r0, [r7, #12]
 800e9d4:	697b      	ldr	r3, [r7, #20]
 800e9d6:	9300      	str	r3, [sp, #0]
 800e9d8:	2319      	movs	r3, #25
 800e9da:	2201      	movs	r2, #1
 800e9dc:	f001 fa82 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800e9e0:	1e03      	subs	r3, r0, #0
 800e9e2:	d001      	beq.n	800e9e8 <HAL_I2C_Master_Transmit+0x64>
 800e9e4:	2301      	movs	r3, #1
 800e9e6:	e0cc      	b.n	800eb82 <HAL_I2C_Master_Transmit+0x1fe>
 800e9e8:	68fb      	ldr	r3, [r7, #12]
 800e9ea:	2241      	movs	r2, #65	@ 0x41
 800e9ec:	2121      	movs	r1, #33	@ 0x21
 800e9ee:	5499      	strb	r1, [r3, r2]
 800e9f0:	68fb      	ldr	r3, [r7, #12]
 800e9f2:	2242      	movs	r2, #66	@ 0x42
 800e9f4:	2110      	movs	r1, #16
 800e9f6:	5499      	strb	r1, [r3, r2]
 800e9f8:	68fb      	ldr	r3, [r7, #12]
 800e9fa:	2200      	movs	r2, #0
 800e9fc:	645a      	str	r2, [r3, #68]	@ 0x44
 800e9fe:	68fb      	ldr	r3, [r7, #12]
 800ea00:	687a      	ldr	r2, [r7, #4]
 800ea02:	625a      	str	r2, [r3, #36]	@ 0x24
 800ea04:	68fb      	ldr	r3, [r7, #12]
 800ea06:	2208      	movs	r2, #8
 800ea08:	18ba      	adds	r2, r7, r2
 800ea0a:	8812      	ldrh	r2, [r2, #0]
 800ea0c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800ea0e:	68fb      	ldr	r3, [r7, #12]
 800ea10:	2200      	movs	r2, #0
 800ea12:	635a      	str	r2, [r3, #52]	@ 0x34
 800ea14:	68fb      	ldr	r3, [r7, #12]
 800ea16:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ea18:	b29b      	uxth	r3, r3
 800ea1a:	2bff      	cmp	r3, #255	@ 0xff
 800ea1c:	d911      	bls.n	800ea42 <HAL_I2C_Master_Transmit+0xbe>
 800ea1e:	68fb      	ldr	r3, [r7, #12]
 800ea20:	22ff      	movs	r2, #255	@ 0xff
 800ea22:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ea24:	68fb      	ldr	r3, [r7, #12]
 800ea26:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ea28:	b2da      	uxtb	r2, r3
 800ea2a:	2380      	movs	r3, #128	@ 0x80
 800ea2c:	045c      	lsls	r4, r3, #17
 800ea2e:	230a      	movs	r3, #10
 800ea30:	18fb      	adds	r3, r7, r3
 800ea32:	8819      	ldrh	r1, [r3, #0]
 800ea34:	68f8      	ldr	r0, [r7, #12]
 800ea36:	4b55      	ldr	r3, [pc, #340]	@ (800eb8c <HAL_I2C_Master_Transmit+0x208>)
 800ea38:	9300      	str	r3, [sp, #0]
 800ea3a:	0023      	movs	r3, r4
 800ea3c:	f001 fc8e 	bl	801035c <I2C_TransferConfig>
 800ea40:	e075      	b.n	800eb2e <HAL_I2C_Master_Transmit+0x1aa>
 800ea42:	68fb      	ldr	r3, [r7, #12]
 800ea44:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ea46:	b29a      	uxth	r2, r3
 800ea48:	68fb      	ldr	r3, [r7, #12]
 800ea4a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ea4c:	68fb      	ldr	r3, [r7, #12]
 800ea4e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ea50:	b2da      	uxtb	r2, r3
 800ea52:	2380      	movs	r3, #128	@ 0x80
 800ea54:	049c      	lsls	r4, r3, #18
 800ea56:	230a      	movs	r3, #10
 800ea58:	18fb      	adds	r3, r7, r3
 800ea5a:	8819      	ldrh	r1, [r3, #0]
 800ea5c:	68f8      	ldr	r0, [r7, #12]
 800ea5e:	4b4b      	ldr	r3, [pc, #300]	@ (800eb8c <HAL_I2C_Master_Transmit+0x208>)
 800ea60:	9300      	str	r3, [sp, #0]
 800ea62:	0023      	movs	r3, r4
 800ea64:	f001 fc7a 	bl	801035c <I2C_TransferConfig>
 800ea68:	e061      	b.n	800eb2e <HAL_I2C_Master_Transmit+0x1aa>
 800ea6a:	697a      	ldr	r2, [r7, #20]
 800ea6c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800ea6e:	68fb      	ldr	r3, [r7, #12]
 800ea70:	0018      	movs	r0, r3
 800ea72:	f001 fa76 	bl	800ff62 <I2C_WaitOnTXISFlagUntilTimeout>
 800ea76:	1e03      	subs	r3, r0, #0
 800ea78:	d001      	beq.n	800ea7e <HAL_I2C_Master_Transmit+0xfa>
 800ea7a:	2301      	movs	r3, #1
 800ea7c:	e081      	b.n	800eb82 <HAL_I2C_Master_Transmit+0x1fe>
 800ea7e:	68fb      	ldr	r3, [r7, #12]
 800ea80:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ea82:	781a      	ldrb	r2, [r3, #0]
 800ea84:	68fb      	ldr	r3, [r7, #12]
 800ea86:	681b      	ldr	r3, [r3, #0]
 800ea88:	629a      	str	r2, [r3, #40]	@ 0x28
 800ea8a:	68fb      	ldr	r3, [r7, #12]
 800ea8c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ea8e:	1c5a      	adds	r2, r3, #1
 800ea90:	68fb      	ldr	r3, [r7, #12]
 800ea92:	625a      	str	r2, [r3, #36]	@ 0x24
 800ea94:	68fb      	ldr	r3, [r7, #12]
 800ea96:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ea98:	b29b      	uxth	r3, r3
 800ea9a:	3b01      	subs	r3, #1
 800ea9c:	b29a      	uxth	r2, r3
 800ea9e:	68fb      	ldr	r3, [r7, #12]
 800eaa0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800eaa2:	68fb      	ldr	r3, [r7, #12]
 800eaa4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800eaa6:	3b01      	subs	r3, #1
 800eaa8:	b29a      	uxth	r2, r3
 800eaaa:	68fb      	ldr	r3, [r7, #12]
 800eaac:	851a      	strh	r2, [r3, #40]	@ 0x28
 800eaae:	68fb      	ldr	r3, [r7, #12]
 800eab0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800eab2:	b29b      	uxth	r3, r3
 800eab4:	2b00      	cmp	r3, #0
 800eab6:	d03a      	beq.n	800eb2e <HAL_I2C_Master_Transmit+0x1aa>
 800eab8:	68fb      	ldr	r3, [r7, #12]
 800eaba:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800eabc:	2b00      	cmp	r3, #0
 800eabe:	d136      	bne.n	800eb2e <HAL_I2C_Master_Transmit+0x1aa>
 800eac0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800eac2:	68f8      	ldr	r0, [r7, #12]
 800eac4:	697b      	ldr	r3, [r7, #20]
 800eac6:	9300      	str	r3, [sp, #0]
 800eac8:	0013      	movs	r3, r2
 800eaca:	2200      	movs	r2, #0
 800eacc:	2180      	movs	r1, #128	@ 0x80
 800eace:	f001 fa09 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800ead2:	1e03      	subs	r3, r0, #0
 800ead4:	d001      	beq.n	800eada <HAL_I2C_Master_Transmit+0x156>
 800ead6:	2301      	movs	r3, #1
 800ead8:	e053      	b.n	800eb82 <HAL_I2C_Master_Transmit+0x1fe>
 800eada:	68fb      	ldr	r3, [r7, #12]
 800eadc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800eade:	b29b      	uxth	r3, r3
 800eae0:	2bff      	cmp	r3, #255	@ 0xff
 800eae2:	d911      	bls.n	800eb08 <HAL_I2C_Master_Transmit+0x184>
 800eae4:	68fb      	ldr	r3, [r7, #12]
 800eae6:	22ff      	movs	r2, #255	@ 0xff
 800eae8:	851a      	strh	r2, [r3, #40]	@ 0x28
 800eaea:	68fb      	ldr	r3, [r7, #12]
 800eaec:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800eaee:	b2da      	uxtb	r2, r3
 800eaf0:	2380      	movs	r3, #128	@ 0x80
 800eaf2:	045c      	lsls	r4, r3, #17
 800eaf4:	230a      	movs	r3, #10
 800eaf6:	18fb      	adds	r3, r7, r3
 800eaf8:	8819      	ldrh	r1, [r3, #0]
 800eafa:	68f8      	ldr	r0, [r7, #12]
 800eafc:	2300      	movs	r3, #0
 800eafe:	9300      	str	r3, [sp, #0]
 800eb00:	0023      	movs	r3, r4
 800eb02:	f001 fc2b 	bl	801035c <I2C_TransferConfig>
 800eb06:	e012      	b.n	800eb2e <HAL_I2C_Master_Transmit+0x1aa>
 800eb08:	68fb      	ldr	r3, [r7, #12]
 800eb0a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800eb0c:	b29a      	uxth	r2, r3
 800eb0e:	68fb      	ldr	r3, [r7, #12]
 800eb10:	851a      	strh	r2, [r3, #40]	@ 0x28
 800eb12:	68fb      	ldr	r3, [r7, #12]
 800eb14:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800eb16:	b2da      	uxtb	r2, r3
 800eb18:	2380      	movs	r3, #128	@ 0x80
 800eb1a:	049c      	lsls	r4, r3, #18
 800eb1c:	230a      	movs	r3, #10
 800eb1e:	18fb      	adds	r3, r7, r3
 800eb20:	8819      	ldrh	r1, [r3, #0]
 800eb22:	68f8      	ldr	r0, [r7, #12]
 800eb24:	2300      	movs	r3, #0
 800eb26:	9300      	str	r3, [sp, #0]
 800eb28:	0023      	movs	r3, r4
 800eb2a:	f001 fc17 	bl	801035c <I2C_TransferConfig>
 800eb2e:	68fb      	ldr	r3, [r7, #12]
 800eb30:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800eb32:	b29b      	uxth	r3, r3
 800eb34:	2b00      	cmp	r3, #0
 800eb36:	d198      	bne.n	800ea6a <HAL_I2C_Master_Transmit+0xe6>
 800eb38:	697a      	ldr	r2, [r7, #20]
 800eb3a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800eb3c:	68fb      	ldr	r3, [r7, #12]
 800eb3e:	0018      	movs	r0, r3
 800eb40:	f001 fa4e 	bl	800ffe0 <I2C_WaitOnSTOPFlagUntilTimeout>
 800eb44:	1e03      	subs	r3, r0, #0
 800eb46:	d001      	beq.n	800eb4c <HAL_I2C_Master_Transmit+0x1c8>
 800eb48:	2301      	movs	r3, #1
 800eb4a:	e01a      	b.n	800eb82 <HAL_I2C_Master_Transmit+0x1fe>
 800eb4c:	68fb      	ldr	r3, [r7, #12]
 800eb4e:	681b      	ldr	r3, [r3, #0]
 800eb50:	2220      	movs	r2, #32
 800eb52:	61da      	str	r2, [r3, #28]
 800eb54:	68fb      	ldr	r3, [r7, #12]
 800eb56:	681b      	ldr	r3, [r3, #0]
 800eb58:	685a      	ldr	r2, [r3, #4]
 800eb5a:	68fb      	ldr	r3, [r7, #12]
 800eb5c:	681b      	ldr	r3, [r3, #0]
 800eb5e:	490c      	ldr	r1, [pc, #48]	@ (800eb90 <HAL_I2C_Master_Transmit+0x20c>)
 800eb60:	400a      	ands	r2, r1
 800eb62:	605a      	str	r2, [r3, #4]
 800eb64:	68fb      	ldr	r3, [r7, #12]
 800eb66:	2241      	movs	r2, #65	@ 0x41
 800eb68:	2120      	movs	r1, #32
 800eb6a:	5499      	strb	r1, [r3, r2]
 800eb6c:	68fb      	ldr	r3, [r7, #12]
 800eb6e:	2242      	movs	r2, #66	@ 0x42
 800eb70:	2100      	movs	r1, #0
 800eb72:	5499      	strb	r1, [r3, r2]
 800eb74:	68fb      	ldr	r3, [r7, #12]
 800eb76:	2240      	movs	r2, #64	@ 0x40
 800eb78:	2100      	movs	r1, #0
 800eb7a:	5499      	strb	r1, [r3, r2]
 800eb7c:	2300      	movs	r3, #0
 800eb7e:	e000      	b.n	800eb82 <HAL_I2C_Master_Transmit+0x1fe>
 800eb80:	2302      	movs	r3, #2
 800eb82:	0018      	movs	r0, r3
 800eb84:	46bd      	mov	sp, r7
 800eb86:	b007      	add	sp, #28
 800eb88:	bd90      	pop	{r4, r7, pc}
 800eb8a:	46c0      	nop			@ (mov r8, r8)
 800eb8c:	80002000 	.word	0x80002000
 800eb90:	fe00e800 	.word	0xfe00e800

0800eb94 <HAL_I2C_Master_Receive>:
 800eb94:	b590      	push	{r4, r7, lr}
 800eb96:	b089      	sub	sp, #36	@ 0x24
 800eb98:	af02      	add	r7, sp, #8
 800eb9a:	60f8      	str	r0, [r7, #12]
 800eb9c:	0008      	movs	r0, r1
 800eb9e:	607a      	str	r2, [r7, #4]
 800eba0:	0019      	movs	r1, r3
 800eba2:	230a      	movs	r3, #10
 800eba4:	18fb      	adds	r3, r7, r3
 800eba6:	1c02      	adds	r2, r0, #0
 800eba8:	801a      	strh	r2, [r3, #0]
 800ebaa:	2308      	movs	r3, #8
 800ebac:	18fb      	adds	r3, r7, r3
 800ebae:	1c0a      	adds	r2, r1, #0
 800ebb0:	801a      	strh	r2, [r3, #0]
 800ebb2:	68fb      	ldr	r3, [r7, #12]
 800ebb4:	2241      	movs	r2, #65	@ 0x41
 800ebb6:	5c9b      	ldrb	r3, [r3, r2]
 800ebb8:	b2db      	uxtb	r3, r3
 800ebba:	2b20      	cmp	r3, #32
 800ebbc:	d000      	beq.n	800ebc0 <HAL_I2C_Master_Receive+0x2c>
 800ebbe:	e0e8      	b.n	800ed92 <HAL_I2C_Master_Receive+0x1fe>
 800ebc0:	68fb      	ldr	r3, [r7, #12]
 800ebc2:	2240      	movs	r2, #64	@ 0x40
 800ebc4:	5c9b      	ldrb	r3, [r3, r2]
 800ebc6:	2b01      	cmp	r3, #1
 800ebc8:	d101      	bne.n	800ebce <HAL_I2C_Master_Receive+0x3a>
 800ebca:	2302      	movs	r3, #2
 800ebcc:	e0e2      	b.n	800ed94 <HAL_I2C_Master_Receive+0x200>
 800ebce:	68fb      	ldr	r3, [r7, #12]
 800ebd0:	2240      	movs	r2, #64	@ 0x40
 800ebd2:	2101      	movs	r1, #1
 800ebd4:	5499      	strb	r1, [r3, r2]
 800ebd6:	f7ff f84b 	bl	800dc70 <HAL_GetTick>
 800ebda:	0003      	movs	r3, r0
 800ebdc:	617b      	str	r3, [r7, #20]
 800ebde:	2380      	movs	r3, #128	@ 0x80
 800ebe0:	0219      	lsls	r1, r3, #8
 800ebe2:	68f8      	ldr	r0, [r7, #12]
 800ebe4:	697b      	ldr	r3, [r7, #20]
 800ebe6:	9300      	str	r3, [sp, #0]
 800ebe8:	2319      	movs	r3, #25
 800ebea:	2201      	movs	r2, #1
 800ebec:	f001 f97a 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800ebf0:	1e03      	subs	r3, r0, #0
 800ebf2:	d001      	beq.n	800ebf8 <HAL_I2C_Master_Receive+0x64>
 800ebf4:	2301      	movs	r3, #1
 800ebf6:	e0cd      	b.n	800ed94 <HAL_I2C_Master_Receive+0x200>
 800ebf8:	68fb      	ldr	r3, [r7, #12]
 800ebfa:	2241      	movs	r2, #65	@ 0x41
 800ebfc:	2122      	movs	r1, #34	@ 0x22
 800ebfe:	5499      	strb	r1, [r3, r2]
 800ec00:	68fb      	ldr	r3, [r7, #12]
 800ec02:	2242      	movs	r2, #66	@ 0x42
 800ec04:	2110      	movs	r1, #16
 800ec06:	5499      	strb	r1, [r3, r2]
 800ec08:	68fb      	ldr	r3, [r7, #12]
 800ec0a:	2200      	movs	r2, #0
 800ec0c:	645a      	str	r2, [r3, #68]	@ 0x44
 800ec0e:	68fb      	ldr	r3, [r7, #12]
 800ec10:	687a      	ldr	r2, [r7, #4]
 800ec12:	625a      	str	r2, [r3, #36]	@ 0x24
 800ec14:	68fb      	ldr	r3, [r7, #12]
 800ec16:	2208      	movs	r2, #8
 800ec18:	18ba      	adds	r2, r7, r2
 800ec1a:	8812      	ldrh	r2, [r2, #0]
 800ec1c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800ec1e:	68fb      	ldr	r3, [r7, #12]
 800ec20:	2200      	movs	r2, #0
 800ec22:	635a      	str	r2, [r3, #52]	@ 0x34
 800ec24:	68fb      	ldr	r3, [r7, #12]
 800ec26:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ec28:	b29b      	uxth	r3, r3
 800ec2a:	2bff      	cmp	r3, #255	@ 0xff
 800ec2c:	d911      	bls.n	800ec52 <HAL_I2C_Master_Receive+0xbe>
 800ec2e:	68fb      	ldr	r3, [r7, #12]
 800ec30:	22ff      	movs	r2, #255	@ 0xff
 800ec32:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ec34:	68fb      	ldr	r3, [r7, #12]
 800ec36:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ec38:	b2da      	uxtb	r2, r3
 800ec3a:	2380      	movs	r3, #128	@ 0x80
 800ec3c:	045c      	lsls	r4, r3, #17
 800ec3e:	230a      	movs	r3, #10
 800ec40:	18fb      	adds	r3, r7, r3
 800ec42:	8819      	ldrh	r1, [r3, #0]
 800ec44:	68f8      	ldr	r0, [r7, #12]
 800ec46:	4b55      	ldr	r3, [pc, #340]	@ (800ed9c <HAL_I2C_Master_Receive+0x208>)
 800ec48:	9300      	str	r3, [sp, #0]
 800ec4a:	0023      	movs	r3, r4
 800ec4c:	f001 fb86 	bl	801035c <I2C_TransferConfig>
 800ec50:	e076      	b.n	800ed40 <HAL_I2C_Master_Receive+0x1ac>
 800ec52:	68fb      	ldr	r3, [r7, #12]
 800ec54:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ec56:	b29a      	uxth	r2, r3
 800ec58:	68fb      	ldr	r3, [r7, #12]
 800ec5a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ec5c:	68fb      	ldr	r3, [r7, #12]
 800ec5e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ec60:	b2da      	uxtb	r2, r3
 800ec62:	2380      	movs	r3, #128	@ 0x80
 800ec64:	049c      	lsls	r4, r3, #18
 800ec66:	230a      	movs	r3, #10
 800ec68:	18fb      	adds	r3, r7, r3
 800ec6a:	8819      	ldrh	r1, [r3, #0]
 800ec6c:	68f8      	ldr	r0, [r7, #12]
 800ec6e:	4b4b      	ldr	r3, [pc, #300]	@ (800ed9c <HAL_I2C_Master_Receive+0x208>)
 800ec70:	9300      	str	r3, [sp, #0]
 800ec72:	0023      	movs	r3, r4
 800ec74:	f001 fb72 	bl	801035c <I2C_TransferConfig>
 800ec78:	e062      	b.n	800ed40 <HAL_I2C_Master_Receive+0x1ac>
 800ec7a:	697a      	ldr	r2, [r7, #20]
 800ec7c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800ec7e:	68fb      	ldr	r3, [r7, #12]
 800ec80:	0018      	movs	r0, r3
 800ec82:	f001 f9e9 	bl	8010058 <I2C_WaitOnRXNEFlagUntilTimeout>
 800ec86:	1e03      	subs	r3, r0, #0
 800ec88:	d001      	beq.n	800ec8e <HAL_I2C_Master_Receive+0xfa>
 800ec8a:	2301      	movs	r3, #1
 800ec8c:	e082      	b.n	800ed94 <HAL_I2C_Master_Receive+0x200>
 800ec8e:	68fb      	ldr	r3, [r7, #12]
 800ec90:	681b      	ldr	r3, [r3, #0]
 800ec92:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800ec94:	68fb      	ldr	r3, [r7, #12]
 800ec96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ec98:	b2d2      	uxtb	r2, r2
 800ec9a:	701a      	strb	r2, [r3, #0]
 800ec9c:	68fb      	ldr	r3, [r7, #12]
 800ec9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800eca0:	1c5a      	adds	r2, r3, #1
 800eca2:	68fb      	ldr	r3, [r7, #12]
 800eca4:	625a      	str	r2, [r3, #36]	@ 0x24
 800eca6:	68fb      	ldr	r3, [r7, #12]
 800eca8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ecaa:	3b01      	subs	r3, #1
 800ecac:	b29a      	uxth	r2, r3
 800ecae:	68fb      	ldr	r3, [r7, #12]
 800ecb0:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ecb2:	68fb      	ldr	r3, [r7, #12]
 800ecb4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ecb6:	b29b      	uxth	r3, r3
 800ecb8:	3b01      	subs	r3, #1
 800ecba:	b29a      	uxth	r2, r3
 800ecbc:	68fb      	ldr	r3, [r7, #12]
 800ecbe:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800ecc0:	68fb      	ldr	r3, [r7, #12]
 800ecc2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ecc4:	b29b      	uxth	r3, r3
 800ecc6:	2b00      	cmp	r3, #0
 800ecc8:	d03a      	beq.n	800ed40 <HAL_I2C_Master_Receive+0x1ac>
 800ecca:	68fb      	ldr	r3, [r7, #12]
 800eccc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ecce:	2b00      	cmp	r3, #0
 800ecd0:	d136      	bne.n	800ed40 <HAL_I2C_Master_Receive+0x1ac>
 800ecd2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800ecd4:	68f8      	ldr	r0, [r7, #12]
 800ecd6:	697b      	ldr	r3, [r7, #20]
 800ecd8:	9300      	str	r3, [sp, #0]
 800ecda:	0013      	movs	r3, r2
 800ecdc:	2200      	movs	r2, #0
 800ecde:	2180      	movs	r1, #128	@ 0x80
 800ece0:	f001 f900 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800ece4:	1e03      	subs	r3, r0, #0
 800ece6:	d001      	beq.n	800ecec <HAL_I2C_Master_Receive+0x158>
 800ece8:	2301      	movs	r3, #1
 800ecea:	e053      	b.n	800ed94 <HAL_I2C_Master_Receive+0x200>
 800ecec:	68fb      	ldr	r3, [r7, #12]
 800ecee:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ecf0:	b29b      	uxth	r3, r3
 800ecf2:	2bff      	cmp	r3, #255	@ 0xff
 800ecf4:	d911      	bls.n	800ed1a <HAL_I2C_Master_Receive+0x186>
 800ecf6:	68fb      	ldr	r3, [r7, #12]
 800ecf8:	22ff      	movs	r2, #255	@ 0xff
 800ecfa:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ecfc:	68fb      	ldr	r3, [r7, #12]
 800ecfe:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ed00:	b2da      	uxtb	r2, r3
 800ed02:	2380      	movs	r3, #128	@ 0x80
 800ed04:	045c      	lsls	r4, r3, #17
 800ed06:	230a      	movs	r3, #10
 800ed08:	18fb      	adds	r3, r7, r3
 800ed0a:	8819      	ldrh	r1, [r3, #0]
 800ed0c:	68f8      	ldr	r0, [r7, #12]
 800ed0e:	2300      	movs	r3, #0
 800ed10:	9300      	str	r3, [sp, #0]
 800ed12:	0023      	movs	r3, r4
 800ed14:	f001 fb22 	bl	801035c <I2C_TransferConfig>
 800ed18:	e012      	b.n	800ed40 <HAL_I2C_Master_Receive+0x1ac>
 800ed1a:	68fb      	ldr	r3, [r7, #12]
 800ed1c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ed1e:	b29a      	uxth	r2, r3
 800ed20:	68fb      	ldr	r3, [r7, #12]
 800ed22:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ed24:	68fb      	ldr	r3, [r7, #12]
 800ed26:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ed28:	b2da      	uxtb	r2, r3
 800ed2a:	2380      	movs	r3, #128	@ 0x80
 800ed2c:	049c      	lsls	r4, r3, #18
 800ed2e:	230a      	movs	r3, #10
 800ed30:	18fb      	adds	r3, r7, r3
 800ed32:	8819      	ldrh	r1, [r3, #0]
 800ed34:	68f8      	ldr	r0, [r7, #12]
 800ed36:	2300      	movs	r3, #0
 800ed38:	9300      	str	r3, [sp, #0]
 800ed3a:	0023      	movs	r3, r4
 800ed3c:	f001 fb0e 	bl	801035c <I2C_TransferConfig>
 800ed40:	68fb      	ldr	r3, [r7, #12]
 800ed42:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ed44:	b29b      	uxth	r3, r3
 800ed46:	2b00      	cmp	r3, #0
 800ed48:	d197      	bne.n	800ec7a <HAL_I2C_Master_Receive+0xe6>
 800ed4a:	697a      	ldr	r2, [r7, #20]
 800ed4c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800ed4e:	68fb      	ldr	r3, [r7, #12]
 800ed50:	0018      	movs	r0, r3
 800ed52:	f001 f945 	bl	800ffe0 <I2C_WaitOnSTOPFlagUntilTimeout>
 800ed56:	1e03      	subs	r3, r0, #0
 800ed58:	d001      	beq.n	800ed5e <HAL_I2C_Master_Receive+0x1ca>
 800ed5a:	2301      	movs	r3, #1
 800ed5c:	e01a      	b.n	800ed94 <HAL_I2C_Master_Receive+0x200>
 800ed5e:	68fb      	ldr	r3, [r7, #12]
 800ed60:	681b      	ldr	r3, [r3, #0]
 800ed62:	2220      	movs	r2, #32
 800ed64:	61da      	str	r2, [r3, #28]
 800ed66:	68fb      	ldr	r3, [r7, #12]
 800ed68:	681b      	ldr	r3, [r3, #0]
 800ed6a:	685a      	ldr	r2, [r3, #4]
 800ed6c:	68fb      	ldr	r3, [r7, #12]
 800ed6e:	681b      	ldr	r3, [r3, #0]
 800ed70:	490b      	ldr	r1, [pc, #44]	@ (800eda0 <HAL_I2C_Master_Receive+0x20c>)
 800ed72:	400a      	ands	r2, r1
 800ed74:	605a      	str	r2, [r3, #4]
 800ed76:	68fb      	ldr	r3, [r7, #12]
 800ed78:	2241      	movs	r2, #65	@ 0x41
 800ed7a:	2120      	movs	r1, #32
 800ed7c:	5499      	strb	r1, [r3, r2]
 800ed7e:	68fb      	ldr	r3, [r7, #12]
 800ed80:	2242      	movs	r2, #66	@ 0x42
 800ed82:	2100      	movs	r1, #0
 800ed84:	5499      	strb	r1, [r3, r2]
 800ed86:	68fb      	ldr	r3, [r7, #12]
 800ed88:	2240      	movs	r2, #64	@ 0x40
 800ed8a:	2100      	movs	r1, #0
 800ed8c:	5499      	strb	r1, [r3, r2]
 800ed8e:	2300      	movs	r3, #0
 800ed90:	e000      	b.n	800ed94 <HAL_I2C_Master_Receive+0x200>
 800ed92:	2302      	movs	r3, #2
 800ed94:	0018      	movs	r0, r3
 800ed96:	46bd      	mov	sp, r7
 800ed98:	b007      	add	sp, #28
 800ed9a:	bd90      	pop	{r4, r7, pc}
 800ed9c:	80002400 	.word	0x80002400
 800eda0:	fe00e800 	.word	0xfe00e800

0800eda4 <HAL_I2C_Mem_Write>:
 800eda4:	b590      	push	{r4, r7, lr}
 800eda6:	b089      	sub	sp, #36	@ 0x24
 800eda8:	af02      	add	r7, sp, #8
 800edaa:	60f8      	str	r0, [r7, #12]
 800edac:	000c      	movs	r4, r1
 800edae:	0010      	movs	r0, r2
 800edb0:	0019      	movs	r1, r3
 800edb2:	230a      	movs	r3, #10
 800edb4:	18fb      	adds	r3, r7, r3
 800edb6:	1c22      	adds	r2, r4, #0
 800edb8:	801a      	strh	r2, [r3, #0]
 800edba:	2308      	movs	r3, #8
 800edbc:	18fb      	adds	r3, r7, r3
 800edbe:	1c02      	adds	r2, r0, #0
 800edc0:	801a      	strh	r2, [r3, #0]
 800edc2:	1dbb      	adds	r3, r7, #6
 800edc4:	1c0a      	adds	r2, r1, #0
 800edc6:	801a      	strh	r2, [r3, #0]
 800edc8:	68fb      	ldr	r3, [r7, #12]
 800edca:	2241      	movs	r2, #65	@ 0x41
 800edcc:	5c9b      	ldrb	r3, [r3, r2]
 800edce:	b2db      	uxtb	r3, r3
 800edd0:	2b20      	cmp	r3, #32
 800edd2:	d000      	beq.n	800edd6 <HAL_I2C_Mem_Write+0x32>
 800edd4:	e10c      	b.n	800eff0 <HAL_I2C_Mem_Write+0x24c>
 800edd6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800edd8:	2b00      	cmp	r3, #0
 800edda:	d004      	beq.n	800ede6 <HAL_I2C_Mem_Write+0x42>
 800eddc:	232c      	movs	r3, #44	@ 0x2c
 800edde:	18fb      	adds	r3, r7, r3
 800ede0:	881b      	ldrh	r3, [r3, #0]
 800ede2:	2b00      	cmp	r3, #0
 800ede4:	d105      	bne.n	800edf2 <HAL_I2C_Mem_Write+0x4e>
 800ede6:	68fb      	ldr	r3, [r7, #12]
 800ede8:	2280      	movs	r2, #128	@ 0x80
 800edea:	0092      	lsls	r2, r2, #2
 800edec:	645a      	str	r2, [r3, #68]	@ 0x44
 800edee:	2301      	movs	r3, #1
 800edf0:	e0ff      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800edf2:	68fb      	ldr	r3, [r7, #12]
 800edf4:	2240      	movs	r2, #64	@ 0x40
 800edf6:	5c9b      	ldrb	r3, [r3, r2]
 800edf8:	2b01      	cmp	r3, #1
 800edfa:	d101      	bne.n	800ee00 <HAL_I2C_Mem_Write+0x5c>
 800edfc:	2302      	movs	r3, #2
 800edfe:	e0f8      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800ee00:	68fb      	ldr	r3, [r7, #12]
 800ee02:	2240      	movs	r2, #64	@ 0x40
 800ee04:	2101      	movs	r1, #1
 800ee06:	5499      	strb	r1, [r3, r2]
 800ee08:	f7fe ff32 	bl	800dc70 <HAL_GetTick>
 800ee0c:	0003      	movs	r3, r0
 800ee0e:	617b      	str	r3, [r7, #20]
 800ee10:	2380      	movs	r3, #128	@ 0x80
 800ee12:	0219      	lsls	r1, r3, #8
 800ee14:	68f8      	ldr	r0, [r7, #12]
 800ee16:	697b      	ldr	r3, [r7, #20]
 800ee18:	9300      	str	r3, [sp, #0]
 800ee1a:	2319      	movs	r3, #25
 800ee1c:	2201      	movs	r2, #1
 800ee1e:	f001 f861 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800ee22:	1e03      	subs	r3, r0, #0
 800ee24:	d001      	beq.n	800ee2a <HAL_I2C_Mem_Write+0x86>
 800ee26:	2301      	movs	r3, #1
 800ee28:	e0e3      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800ee2a:	68fb      	ldr	r3, [r7, #12]
 800ee2c:	2241      	movs	r2, #65	@ 0x41
 800ee2e:	2121      	movs	r1, #33	@ 0x21
 800ee30:	5499      	strb	r1, [r3, r2]
 800ee32:	68fb      	ldr	r3, [r7, #12]
 800ee34:	2242      	movs	r2, #66	@ 0x42
 800ee36:	2140      	movs	r1, #64	@ 0x40
 800ee38:	5499      	strb	r1, [r3, r2]
 800ee3a:	68fb      	ldr	r3, [r7, #12]
 800ee3c:	2200      	movs	r2, #0
 800ee3e:	645a      	str	r2, [r3, #68]	@ 0x44
 800ee40:	68fb      	ldr	r3, [r7, #12]
 800ee42:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800ee44:	625a      	str	r2, [r3, #36]	@ 0x24
 800ee46:	68fb      	ldr	r3, [r7, #12]
 800ee48:	222c      	movs	r2, #44	@ 0x2c
 800ee4a:	18ba      	adds	r2, r7, r2
 800ee4c:	8812      	ldrh	r2, [r2, #0]
 800ee4e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800ee50:	68fb      	ldr	r3, [r7, #12]
 800ee52:	2200      	movs	r2, #0
 800ee54:	635a      	str	r2, [r3, #52]	@ 0x34
 800ee56:	1dbb      	adds	r3, r7, #6
 800ee58:	881c      	ldrh	r4, [r3, #0]
 800ee5a:	2308      	movs	r3, #8
 800ee5c:	18fb      	adds	r3, r7, r3
 800ee5e:	881a      	ldrh	r2, [r3, #0]
 800ee60:	230a      	movs	r3, #10
 800ee62:	18fb      	adds	r3, r7, r3
 800ee64:	8819      	ldrh	r1, [r3, #0]
 800ee66:	68f8      	ldr	r0, [r7, #12]
 800ee68:	697b      	ldr	r3, [r7, #20]
 800ee6a:	9301      	str	r3, [sp, #4]
 800ee6c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ee6e:	9300      	str	r3, [sp, #0]
 800ee70:	0023      	movs	r3, r4
 800ee72:	f000 fba5 	bl	800f5c0 <I2C_RequestMemoryWrite>
 800ee76:	1e03      	subs	r3, r0, #0
 800ee78:	d005      	beq.n	800ee86 <HAL_I2C_Mem_Write+0xe2>
 800ee7a:	68fb      	ldr	r3, [r7, #12]
 800ee7c:	2240      	movs	r2, #64	@ 0x40
 800ee7e:	2100      	movs	r1, #0
 800ee80:	5499      	strb	r1, [r3, r2]
 800ee82:	2301      	movs	r3, #1
 800ee84:	e0b5      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800ee86:	68fb      	ldr	r3, [r7, #12]
 800ee88:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ee8a:	b29b      	uxth	r3, r3
 800ee8c:	2bff      	cmp	r3, #255	@ 0xff
 800ee8e:	d911      	bls.n	800eeb4 <HAL_I2C_Mem_Write+0x110>
 800ee90:	68fb      	ldr	r3, [r7, #12]
 800ee92:	22ff      	movs	r2, #255	@ 0xff
 800ee94:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ee96:	68fb      	ldr	r3, [r7, #12]
 800ee98:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ee9a:	b2da      	uxtb	r2, r3
 800ee9c:	2380      	movs	r3, #128	@ 0x80
 800ee9e:	045c      	lsls	r4, r3, #17
 800eea0:	230a      	movs	r3, #10
 800eea2:	18fb      	adds	r3, r7, r3
 800eea4:	8819      	ldrh	r1, [r3, #0]
 800eea6:	68f8      	ldr	r0, [r7, #12]
 800eea8:	2300      	movs	r3, #0
 800eeaa:	9300      	str	r3, [sp, #0]
 800eeac:	0023      	movs	r3, r4
 800eeae:	f001 fa55 	bl	801035c <I2C_TransferConfig>
 800eeb2:	e012      	b.n	800eeda <HAL_I2C_Mem_Write+0x136>
 800eeb4:	68fb      	ldr	r3, [r7, #12]
 800eeb6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800eeb8:	b29a      	uxth	r2, r3
 800eeba:	68fb      	ldr	r3, [r7, #12]
 800eebc:	851a      	strh	r2, [r3, #40]	@ 0x28
 800eebe:	68fb      	ldr	r3, [r7, #12]
 800eec0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800eec2:	b2da      	uxtb	r2, r3
 800eec4:	2380      	movs	r3, #128	@ 0x80
 800eec6:	049c      	lsls	r4, r3, #18
 800eec8:	230a      	movs	r3, #10
 800eeca:	18fb      	adds	r3, r7, r3
 800eecc:	8819      	ldrh	r1, [r3, #0]
 800eece:	68f8      	ldr	r0, [r7, #12]
 800eed0:	2300      	movs	r3, #0
 800eed2:	9300      	str	r3, [sp, #0]
 800eed4:	0023      	movs	r3, r4
 800eed6:	f001 fa41 	bl	801035c <I2C_TransferConfig>
 800eeda:	697a      	ldr	r2, [r7, #20]
 800eedc:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800eede:	68fb      	ldr	r3, [r7, #12]
 800eee0:	0018      	movs	r0, r3
 800eee2:	f001 f83e 	bl	800ff62 <I2C_WaitOnTXISFlagUntilTimeout>
 800eee6:	1e03      	subs	r3, r0, #0
 800eee8:	d001      	beq.n	800eeee <HAL_I2C_Mem_Write+0x14a>
 800eeea:	2301      	movs	r3, #1
 800eeec:	e081      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800eeee:	68fb      	ldr	r3, [r7, #12]
 800eef0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800eef2:	781a      	ldrb	r2, [r3, #0]
 800eef4:	68fb      	ldr	r3, [r7, #12]
 800eef6:	681b      	ldr	r3, [r3, #0]
 800eef8:	629a      	str	r2, [r3, #40]	@ 0x28
 800eefa:	68fb      	ldr	r3, [r7, #12]
 800eefc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800eefe:	1c5a      	adds	r2, r3, #1
 800ef00:	68fb      	ldr	r3, [r7, #12]
 800ef02:	625a      	str	r2, [r3, #36]	@ 0x24
 800ef04:	68fb      	ldr	r3, [r7, #12]
 800ef06:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ef08:	b29b      	uxth	r3, r3
 800ef0a:	3b01      	subs	r3, #1
 800ef0c:	b29a      	uxth	r2, r3
 800ef0e:	68fb      	ldr	r3, [r7, #12]
 800ef10:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800ef12:	68fb      	ldr	r3, [r7, #12]
 800ef14:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ef16:	3b01      	subs	r3, #1
 800ef18:	b29a      	uxth	r2, r3
 800ef1a:	68fb      	ldr	r3, [r7, #12]
 800ef1c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ef1e:	68fb      	ldr	r3, [r7, #12]
 800ef20:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ef22:	b29b      	uxth	r3, r3
 800ef24:	2b00      	cmp	r3, #0
 800ef26:	d03a      	beq.n	800ef9e <HAL_I2C_Mem_Write+0x1fa>
 800ef28:	68fb      	ldr	r3, [r7, #12]
 800ef2a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	d136      	bne.n	800ef9e <HAL_I2C_Mem_Write+0x1fa>
 800ef30:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800ef32:	68f8      	ldr	r0, [r7, #12]
 800ef34:	697b      	ldr	r3, [r7, #20]
 800ef36:	9300      	str	r3, [sp, #0]
 800ef38:	0013      	movs	r3, r2
 800ef3a:	2200      	movs	r2, #0
 800ef3c:	2180      	movs	r1, #128	@ 0x80
 800ef3e:	f000 ffd1 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800ef42:	1e03      	subs	r3, r0, #0
 800ef44:	d001      	beq.n	800ef4a <HAL_I2C_Mem_Write+0x1a6>
 800ef46:	2301      	movs	r3, #1
 800ef48:	e053      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800ef4a:	68fb      	ldr	r3, [r7, #12]
 800ef4c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ef4e:	b29b      	uxth	r3, r3
 800ef50:	2bff      	cmp	r3, #255	@ 0xff
 800ef52:	d911      	bls.n	800ef78 <HAL_I2C_Mem_Write+0x1d4>
 800ef54:	68fb      	ldr	r3, [r7, #12]
 800ef56:	22ff      	movs	r2, #255	@ 0xff
 800ef58:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ef5a:	68fb      	ldr	r3, [r7, #12]
 800ef5c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ef5e:	b2da      	uxtb	r2, r3
 800ef60:	2380      	movs	r3, #128	@ 0x80
 800ef62:	045c      	lsls	r4, r3, #17
 800ef64:	230a      	movs	r3, #10
 800ef66:	18fb      	adds	r3, r7, r3
 800ef68:	8819      	ldrh	r1, [r3, #0]
 800ef6a:	68f8      	ldr	r0, [r7, #12]
 800ef6c:	2300      	movs	r3, #0
 800ef6e:	9300      	str	r3, [sp, #0]
 800ef70:	0023      	movs	r3, r4
 800ef72:	f001 f9f3 	bl	801035c <I2C_TransferConfig>
 800ef76:	e012      	b.n	800ef9e <HAL_I2C_Mem_Write+0x1fa>
 800ef78:	68fb      	ldr	r3, [r7, #12]
 800ef7a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ef7c:	b29a      	uxth	r2, r3
 800ef7e:	68fb      	ldr	r3, [r7, #12]
 800ef80:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ef82:	68fb      	ldr	r3, [r7, #12]
 800ef84:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ef86:	b2da      	uxtb	r2, r3
 800ef88:	2380      	movs	r3, #128	@ 0x80
 800ef8a:	049c      	lsls	r4, r3, #18
 800ef8c:	230a      	movs	r3, #10
 800ef8e:	18fb      	adds	r3, r7, r3
 800ef90:	8819      	ldrh	r1, [r3, #0]
 800ef92:	68f8      	ldr	r0, [r7, #12]
 800ef94:	2300      	movs	r3, #0
 800ef96:	9300      	str	r3, [sp, #0]
 800ef98:	0023      	movs	r3, r4
 800ef9a:	f001 f9df 	bl	801035c <I2C_TransferConfig>
 800ef9e:	68fb      	ldr	r3, [r7, #12]
 800efa0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800efa2:	b29b      	uxth	r3, r3
 800efa4:	2b00      	cmp	r3, #0
 800efa6:	d198      	bne.n	800eeda <HAL_I2C_Mem_Write+0x136>
 800efa8:	697a      	ldr	r2, [r7, #20]
 800efaa:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800efac:	68fb      	ldr	r3, [r7, #12]
 800efae:	0018      	movs	r0, r3
 800efb0:	f001 f816 	bl	800ffe0 <I2C_WaitOnSTOPFlagUntilTimeout>
 800efb4:	1e03      	subs	r3, r0, #0
 800efb6:	d001      	beq.n	800efbc <HAL_I2C_Mem_Write+0x218>
 800efb8:	2301      	movs	r3, #1
 800efba:	e01a      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800efbc:	68fb      	ldr	r3, [r7, #12]
 800efbe:	681b      	ldr	r3, [r3, #0]
 800efc0:	2220      	movs	r2, #32
 800efc2:	61da      	str	r2, [r3, #28]
 800efc4:	68fb      	ldr	r3, [r7, #12]
 800efc6:	681b      	ldr	r3, [r3, #0]
 800efc8:	685a      	ldr	r2, [r3, #4]
 800efca:	68fb      	ldr	r3, [r7, #12]
 800efcc:	681b      	ldr	r3, [r3, #0]
 800efce:	490b      	ldr	r1, [pc, #44]	@ (800effc <HAL_I2C_Mem_Write+0x258>)
 800efd0:	400a      	ands	r2, r1
 800efd2:	605a      	str	r2, [r3, #4]
 800efd4:	68fb      	ldr	r3, [r7, #12]
 800efd6:	2241      	movs	r2, #65	@ 0x41
 800efd8:	2120      	movs	r1, #32
 800efda:	5499      	strb	r1, [r3, r2]
 800efdc:	68fb      	ldr	r3, [r7, #12]
 800efde:	2242      	movs	r2, #66	@ 0x42
 800efe0:	2100      	movs	r1, #0
 800efe2:	5499      	strb	r1, [r3, r2]
 800efe4:	68fb      	ldr	r3, [r7, #12]
 800efe6:	2240      	movs	r2, #64	@ 0x40
 800efe8:	2100      	movs	r1, #0
 800efea:	5499      	strb	r1, [r3, r2]
 800efec:	2300      	movs	r3, #0
 800efee:	e000      	b.n	800eff2 <HAL_I2C_Mem_Write+0x24e>
 800eff0:	2302      	movs	r3, #2
 800eff2:	0018      	movs	r0, r3
 800eff4:	46bd      	mov	sp, r7
 800eff6:	b007      	add	sp, #28
 800eff8:	bd90      	pop	{r4, r7, pc}
 800effa:	46c0      	nop			@ (mov r8, r8)
 800effc:	fe00e800 	.word	0xfe00e800

0800f000 <HAL_I2C_Mem_Read>:
 800f000:	b590      	push	{r4, r7, lr}
 800f002:	b089      	sub	sp, #36	@ 0x24
 800f004:	af02      	add	r7, sp, #8
 800f006:	60f8      	str	r0, [r7, #12]
 800f008:	000c      	movs	r4, r1
 800f00a:	0010      	movs	r0, r2
 800f00c:	0019      	movs	r1, r3
 800f00e:	230a      	movs	r3, #10
 800f010:	18fb      	adds	r3, r7, r3
 800f012:	1c22      	adds	r2, r4, #0
 800f014:	801a      	strh	r2, [r3, #0]
 800f016:	2308      	movs	r3, #8
 800f018:	18fb      	adds	r3, r7, r3
 800f01a:	1c02      	adds	r2, r0, #0
 800f01c:	801a      	strh	r2, [r3, #0]
 800f01e:	1dbb      	adds	r3, r7, #6
 800f020:	1c0a      	adds	r2, r1, #0
 800f022:	801a      	strh	r2, [r3, #0]
 800f024:	68fb      	ldr	r3, [r7, #12]
 800f026:	2241      	movs	r2, #65	@ 0x41
 800f028:	5c9b      	ldrb	r3, [r3, r2]
 800f02a:	b2db      	uxtb	r3, r3
 800f02c:	2b20      	cmp	r3, #32
 800f02e:	d000      	beq.n	800f032 <HAL_I2C_Mem_Read+0x32>
 800f030:	e110      	b.n	800f254 <HAL_I2C_Mem_Read+0x254>
 800f032:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f034:	2b00      	cmp	r3, #0
 800f036:	d004      	beq.n	800f042 <HAL_I2C_Mem_Read+0x42>
 800f038:	232c      	movs	r3, #44	@ 0x2c
 800f03a:	18fb      	adds	r3, r7, r3
 800f03c:	881b      	ldrh	r3, [r3, #0]
 800f03e:	2b00      	cmp	r3, #0
 800f040:	d105      	bne.n	800f04e <HAL_I2C_Mem_Read+0x4e>
 800f042:	68fb      	ldr	r3, [r7, #12]
 800f044:	2280      	movs	r2, #128	@ 0x80
 800f046:	0092      	lsls	r2, r2, #2
 800f048:	645a      	str	r2, [r3, #68]	@ 0x44
 800f04a:	2301      	movs	r3, #1
 800f04c:	e103      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f04e:	68fb      	ldr	r3, [r7, #12]
 800f050:	2240      	movs	r2, #64	@ 0x40
 800f052:	5c9b      	ldrb	r3, [r3, r2]
 800f054:	2b01      	cmp	r3, #1
 800f056:	d101      	bne.n	800f05c <HAL_I2C_Mem_Read+0x5c>
 800f058:	2302      	movs	r3, #2
 800f05a:	e0fc      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f05c:	68fb      	ldr	r3, [r7, #12]
 800f05e:	2240      	movs	r2, #64	@ 0x40
 800f060:	2101      	movs	r1, #1
 800f062:	5499      	strb	r1, [r3, r2]
 800f064:	f7fe fe04 	bl	800dc70 <HAL_GetTick>
 800f068:	0003      	movs	r3, r0
 800f06a:	617b      	str	r3, [r7, #20]
 800f06c:	2380      	movs	r3, #128	@ 0x80
 800f06e:	0219      	lsls	r1, r3, #8
 800f070:	68f8      	ldr	r0, [r7, #12]
 800f072:	697b      	ldr	r3, [r7, #20]
 800f074:	9300      	str	r3, [sp, #0]
 800f076:	2319      	movs	r3, #25
 800f078:	2201      	movs	r2, #1
 800f07a:	f000 ff33 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800f07e:	1e03      	subs	r3, r0, #0
 800f080:	d001      	beq.n	800f086 <HAL_I2C_Mem_Read+0x86>
 800f082:	2301      	movs	r3, #1
 800f084:	e0e7      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f086:	68fb      	ldr	r3, [r7, #12]
 800f088:	2241      	movs	r2, #65	@ 0x41
 800f08a:	2122      	movs	r1, #34	@ 0x22
 800f08c:	5499      	strb	r1, [r3, r2]
 800f08e:	68fb      	ldr	r3, [r7, #12]
 800f090:	2242      	movs	r2, #66	@ 0x42
 800f092:	2140      	movs	r1, #64	@ 0x40
 800f094:	5499      	strb	r1, [r3, r2]
 800f096:	68fb      	ldr	r3, [r7, #12]
 800f098:	2200      	movs	r2, #0
 800f09a:	645a      	str	r2, [r3, #68]	@ 0x44
 800f09c:	68fb      	ldr	r3, [r7, #12]
 800f09e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800f0a0:	625a      	str	r2, [r3, #36]	@ 0x24
 800f0a2:	68fb      	ldr	r3, [r7, #12]
 800f0a4:	222c      	movs	r2, #44	@ 0x2c
 800f0a6:	18ba      	adds	r2, r7, r2
 800f0a8:	8812      	ldrh	r2, [r2, #0]
 800f0aa:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800f0ac:	68fb      	ldr	r3, [r7, #12]
 800f0ae:	2200      	movs	r2, #0
 800f0b0:	635a      	str	r2, [r3, #52]	@ 0x34
 800f0b2:	1dbb      	adds	r3, r7, #6
 800f0b4:	881c      	ldrh	r4, [r3, #0]
 800f0b6:	2308      	movs	r3, #8
 800f0b8:	18fb      	adds	r3, r7, r3
 800f0ba:	881a      	ldrh	r2, [r3, #0]
 800f0bc:	230a      	movs	r3, #10
 800f0be:	18fb      	adds	r3, r7, r3
 800f0c0:	8819      	ldrh	r1, [r3, #0]
 800f0c2:	68f8      	ldr	r0, [r7, #12]
 800f0c4:	697b      	ldr	r3, [r7, #20]
 800f0c6:	9301      	str	r3, [sp, #4]
 800f0c8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800f0ca:	9300      	str	r3, [sp, #0]
 800f0cc:	0023      	movs	r3, r4
 800f0ce:	f000 fadb 	bl	800f688 <I2C_RequestMemoryRead>
 800f0d2:	1e03      	subs	r3, r0, #0
 800f0d4:	d005      	beq.n	800f0e2 <HAL_I2C_Mem_Read+0xe2>
 800f0d6:	68fb      	ldr	r3, [r7, #12]
 800f0d8:	2240      	movs	r2, #64	@ 0x40
 800f0da:	2100      	movs	r1, #0
 800f0dc:	5499      	strb	r1, [r3, r2]
 800f0de:	2301      	movs	r3, #1
 800f0e0:	e0b9      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f0e2:	68fb      	ldr	r3, [r7, #12]
 800f0e4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f0e6:	b29b      	uxth	r3, r3
 800f0e8:	2bff      	cmp	r3, #255	@ 0xff
 800f0ea:	d911      	bls.n	800f110 <HAL_I2C_Mem_Read+0x110>
 800f0ec:	68fb      	ldr	r3, [r7, #12]
 800f0ee:	22ff      	movs	r2, #255	@ 0xff
 800f0f0:	851a      	strh	r2, [r3, #40]	@ 0x28
 800f0f2:	68fb      	ldr	r3, [r7, #12]
 800f0f4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f0f6:	b2da      	uxtb	r2, r3
 800f0f8:	2380      	movs	r3, #128	@ 0x80
 800f0fa:	045c      	lsls	r4, r3, #17
 800f0fc:	230a      	movs	r3, #10
 800f0fe:	18fb      	adds	r3, r7, r3
 800f100:	8819      	ldrh	r1, [r3, #0]
 800f102:	68f8      	ldr	r0, [r7, #12]
 800f104:	4b56      	ldr	r3, [pc, #344]	@ (800f260 <HAL_I2C_Mem_Read+0x260>)
 800f106:	9300      	str	r3, [sp, #0]
 800f108:	0023      	movs	r3, r4
 800f10a:	f001 f927 	bl	801035c <I2C_TransferConfig>
 800f10e:	e012      	b.n	800f136 <HAL_I2C_Mem_Read+0x136>
 800f110:	68fb      	ldr	r3, [r7, #12]
 800f112:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f114:	b29a      	uxth	r2, r3
 800f116:	68fb      	ldr	r3, [r7, #12]
 800f118:	851a      	strh	r2, [r3, #40]	@ 0x28
 800f11a:	68fb      	ldr	r3, [r7, #12]
 800f11c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f11e:	b2da      	uxtb	r2, r3
 800f120:	2380      	movs	r3, #128	@ 0x80
 800f122:	049c      	lsls	r4, r3, #18
 800f124:	230a      	movs	r3, #10
 800f126:	18fb      	adds	r3, r7, r3
 800f128:	8819      	ldrh	r1, [r3, #0]
 800f12a:	68f8      	ldr	r0, [r7, #12]
 800f12c:	4b4c      	ldr	r3, [pc, #304]	@ (800f260 <HAL_I2C_Mem_Read+0x260>)
 800f12e:	9300      	str	r3, [sp, #0]
 800f130:	0023      	movs	r3, r4
 800f132:	f001 f913 	bl	801035c <I2C_TransferConfig>
 800f136:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800f138:	68f8      	ldr	r0, [r7, #12]
 800f13a:	697b      	ldr	r3, [r7, #20]
 800f13c:	9300      	str	r3, [sp, #0]
 800f13e:	0013      	movs	r3, r2
 800f140:	2200      	movs	r2, #0
 800f142:	2104      	movs	r1, #4
 800f144:	f000 fece 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800f148:	1e03      	subs	r3, r0, #0
 800f14a:	d001      	beq.n	800f150 <HAL_I2C_Mem_Read+0x150>
 800f14c:	2301      	movs	r3, #1
 800f14e:	e082      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f150:	68fb      	ldr	r3, [r7, #12]
 800f152:	681b      	ldr	r3, [r3, #0]
 800f154:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800f156:	68fb      	ldr	r3, [r7, #12]
 800f158:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f15a:	b2d2      	uxtb	r2, r2
 800f15c:	701a      	strb	r2, [r3, #0]
 800f15e:	68fb      	ldr	r3, [r7, #12]
 800f160:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f162:	1c5a      	adds	r2, r3, #1
 800f164:	68fb      	ldr	r3, [r7, #12]
 800f166:	625a      	str	r2, [r3, #36]	@ 0x24
 800f168:	68fb      	ldr	r3, [r7, #12]
 800f16a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f16c:	3b01      	subs	r3, #1
 800f16e:	b29a      	uxth	r2, r3
 800f170:	68fb      	ldr	r3, [r7, #12]
 800f172:	851a      	strh	r2, [r3, #40]	@ 0x28
 800f174:	68fb      	ldr	r3, [r7, #12]
 800f176:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f178:	b29b      	uxth	r3, r3
 800f17a:	3b01      	subs	r3, #1
 800f17c:	b29a      	uxth	r2, r3
 800f17e:	68fb      	ldr	r3, [r7, #12]
 800f180:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800f182:	68fb      	ldr	r3, [r7, #12]
 800f184:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f186:	b29b      	uxth	r3, r3
 800f188:	2b00      	cmp	r3, #0
 800f18a:	d03a      	beq.n	800f202 <HAL_I2C_Mem_Read+0x202>
 800f18c:	68fb      	ldr	r3, [r7, #12]
 800f18e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f190:	2b00      	cmp	r3, #0
 800f192:	d136      	bne.n	800f202 <HAL_I2C_Mem_Read+0x202>
 800f194:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800f196:	68f8      	ldr	r0, [r7, #12]
 800f198:	697b      	ldr	r3, [r7, #20]
 800f19a:	9300      	str	r3, [sp, #0]
 800f19c:	0013      	movs	r3, r2
 800f19e:	2200      	movs	r2, #0
 800f1a0:	2180      	movs	r1, #128	@ 0x80
 800f1a2:	f000 fe9f 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800f1a6:	1e03      	subs	r3, r0, #0
 800f1a8:	d001      	beq.n	800f1ae <HAL_I2C_Mem_Read+0x1ae>
 800f1aa:	2301      	movs	r3, #1
 800f1ac:	e053      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f1ae:	68fb      	ldr	r3, [r7, #12]
 800f1b0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f1b2:	b29b      	uxth	r3, r3
 800f1b4:	2bff      	cmp	r3, #255	@ 0xff
 800f1b6:	d911      	bls.n	800f1dc <HAL_I2C_Mem_Read+0x1dc>
 800f1b8:	68fb      	ldr	r3, [r7, #12]
 800f1ba:	22ff      	movs	r2, #255	@ 0xff
 800f1bc:	851a      	strh	r2, [r3, #40]	@ 0x28
 800f1be:	68fb      	ldr	r3, [r7, #12]
 800f1c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f1c2:	b2da      	uxtb	r2, r3
 800f1c4:	2380      	movs	r3, #128	@ 0x80
 800f1c6:	045c      	lsls	r4, r3, #17
 800f1c8:	230a      	movs	r3, #10
 800f1ca:	18fb      	adds	r3, r7, r3
 800f1cc:	8819      	ldrh	r1, [r3, #0]
 800f1ce:	68f8      	ldr	r0, [r7, #12]
 800f1d0:	2300      	movs	r3, #0
 800f1d2:	9300      	str	r3, [sp, #0]
 800f1d4:	0023      	movs	r3, r4
 800f1d6:	f001 f8c1 	bl	801035c <I2C_TransferConfig>
 800f1da:	e012      	b.n	800f202 <HAL_I2C_Mem_Read+0x202>
 800f1dc:	68fb      	ldr	r3, [r7, #12]
 800f1de:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f1e0:	b29a      	uxth	r2, r3
 800f1e2:	68fb      	ldr	r3, [r7, #12]
 800f1e4:	851a      	strh	r2, [r3, #40]	@ 0x28
 800f1e6:	68fb      	ldr	r3, [r7, #12]
 800f1e8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f1ea:	b2da      	uxtb	r2, r3
 800f1ec:	2380      	movs	r3, #128	@ 0x80
 800f1ee:	049c      	lsls	r4, r3, #18
 800f1f0:	230a      	movs	r3, #10
 800f1f2:	18fb      	adds	r3, r7, r3
 800f1f4:	8819      	ldrh	r1, [r3, #0]
 800f1f6:	68f8      	ldr	r0, [r7, #12]
 800f1f8:	2300      	movs	r3, #0
 800f1fa:	9300      	str	r3, [sp, #0]
 800f1fc:	0023      	movs	r3, r4
 800f1fe:	f001 f8ad 	bl	801035c <I2C_TransferConfig>
 800f202:	68fb      	ldr	r3, [r7, #12]
 800f204:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f206:	b29b      	uxth	r3, r3
 800f208:	2b00      	cmp	r3, #0
 800f20a:	d194      	bne.n	800f136 <HAL_I2C_Mem_Read+0x136>
 800f20c:	697a      	ldr	r2, [r7, #20]
 800f20e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800f210:	68fb      	ldr	r3, [r7, #12]
 800f212:	0018      	movs	r0, r3
 800f214:	f000 fee4 	bl	800ffe0 <I2C_WaitOnSTOPFlagUntilTimeout>
 800f218:	1e03      	subs	r3, r0, #0
 800f21a:	d001      	beq.n	800f220 <HAL_I2C_Mem_Read+0x220>
 800f21c:	2301      	movs	r3, #1
 800f21e:	e01a      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f220:	68fb      	ldr	r3, [r7, #12]
 800f222:	681b      	ldr	r3, [r3, #0]
 800f224:	2220      	movs	r2, #32
 800f226:	61da      	str	r2, [r3, #28]
 800f228:	68fb      	ldr	r3, [r7, #12]
 800f22a:	681b      	ldr	r3, [r3, #0]
 800f22c:	685a      	ldr	r2, [r3, #4]
 800f22e:	68fb      	ldr	r3, [r7, #12]
 800f230:	681b      	ldr	r3, [r3, #0]
 800f232:	490c      	ldr	r1, [pc, #48]	@ (800f264 <HAL_I2C_Mem_Read+0x264>)
 800f234:	400a      	ands	r2, r1
 800f236:	605a      	str	r2, [r3, #4]
 800f238:	68fb      	ldr	r3, [r7, #12]
 800f23a:	2241      	movs	r2, #65	@ 0x41
 800f23c:	2120      	movs	r1, #32
 800f23e:	5499      	strb	r1, [r3, r2]
 800f240:	68fb      	ldr	r3, [r7, #12]
 800f242:	2242      	movs	r2, #66	@ 0x42
 800f244:	2100      	movs	r1, #0
 800f246:	5499      	strb	r1, [r3, r2]
 800f248:	68fb      	ldr	r3, [r7, #12]
 800f24a:	2240      	movs	r2, #64	@ 0x40
 800f24c:	2100      	movs	r1, #0
 800f24e:	5499      	strb	r1, [r3, r2]
 800f250:	2300      	movs	r3, #0
 800f252:	e000      	b.n	800f256 <HAL_I2C_Mem_Read+0x256>
 800f254:	2302      	movs	r3, #2
 800f256:	0018      	movs	r0, r3
 800f258:	46bd      	mov	sp, r7
 800f25a:	b007      	add	sp, #28
 800f25c:	bd90      	pop	{r4, r7, pc}
 800f25e:	46c0      	nop			@ (mov r8, r8)
 800f260:	80002400 	.word	0x80002400
 800f264:	fe00e800 	.word	0xfe00e800

0800f268 <HAL_I2C_EV_IRQHandler>:
 800f268:	b580      	push	{r7, lr}
 800f26a:	b084      	sub	sp, #16
 800f26c:	af00      	add	r7, sp, #0
 800f26e:	6078      	str	r0, [r7, #4]
 800f270:	687b      	ldr	r3, [r7, #4]
 800f272:	681b      	ldr	r3, [r3, #0]
 800f274:	699b      	ldr	r3, [r3, #24]
 800f276:	60fb      	str	r3, [r7, #12]
 800f278:	687b      	ldr	r3, [r7, #4]
 800f27a:	681b      	ldr	r3, [r3, #0]
 800f27c:	681b      	ldr	r3, [r3, #0]
 800f27e:	60bb      	str	r3, [r7, #8]
 800f280:	687b      	ldr	r3, [r7, #4]
 800f282:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f284:	2b00      	cmp	r3, #0
 800f286:	d005      	beq.n	800f294 <HAL_I2C_EV_IRQHandler+0x2c>
 800f288:	687b      	ldr	r3, [r7, #4]
 800f28a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f28c:	68ba      	ldr	r2, [r7, #8]
 800f28e:	68f9      	ldr	r1, [r7, #12]
 800f290:	6878      	ldr	r0, [r7, #4]
 800f292:	4798      	blx	r3
 800f294:	46c0      	nop			@ (mov r8, r8)
 800f296:	46bd      	mov	sp, r7
 800f298:	b004      	add	sp, #16
 800f29a:	bd80      	pop	{r7, pc}

0800f29c <HAL_I2C_ER_IRQHandler>:
 800f29c:	b580      	push	{r7, lr}
 800f29e:	b086      	sub	sp, #24
 800f2a0:	af00      	add	r7, sp, #0
 800f2a2:	6078      	str	r0, [r7, #4]
 800f2a4:	687b      	ldr	r3, [r7, #4]
 800f2a6:	681b      	ldr	r3, [r3, #0]
 800f2a8:	699b      	ldr	r3, [r3, #24]
 800f2aa:	617b      	str	r3, [r7, #20]
 800f2ac:	687b      	ldr	r3, [r7, #4]
 800f2ae:	681b      	ldr	r3, [r3, #0]
 800f2b0:	681b      	ldr	r3, [r3, #0]
 800f2b2:	613b      	str	r3, [r7, #16]
 800f2b4:	697a      	ldr	r2, [r7, #20]
 800f2b6:	2380      	movs	r3, #128	@ 0x80
 800f2b8:	005b      	lsls	r3, r3, #1
 800f2ba:	4013      	ands	r3, r2
 800f2bc:	d00e      	beq.n	800f2dc <HAL_I2C_ER_IRQHandler+0x40>
 800f2be:	693b      	ldr	r3, [r7, #16]
 800f2c0:	2280      	movs	r2, #128	@ 0x80
 800f2c2:	4013      	ands	r3, r2
 800f2c4:	d00a      	beq.n	800f2dc <HAL_I2C_ER_IRQHandler+0x40>
 800f2c6:	687b      	ldr	r3, [r7, #4]
 800f2c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f2ca:	2201      	movs	r2, #1
 800f2cc:	431a      	orrs	r2, r3
 800f2ce:	687b      	ldr	r3, [r7, #4]
 800f2d0:	645a      	str	r2, [r3, #68]	@ 0x44
 800f2d2:	687b      	ldr	r3, [r7, #4]
 800f2d4:	681b      	ldr	r3, [r3, #0]
 800f2d6:	2280      	movs	r2, #128	@ 0x80
 800f2d8:	0052      	lsls	r2, r2, #1
 800f2da:	61da      	str	r2, [r3, #28]
 800f2dc:	697a      	ldr	r2, [r7, #20]
 800f2de:	2380      	movs	r3, #128	@ 0x80
 800f2e0:	00db      	lsls	r3, r3, #3
 800f2e2:	4013      	ands	r3, r2
 800f2e4:	d00e      	beq.n	800f304 <HAL_I2C_ER_IRQHandler+0x68>
 800f2e6:	693b      	ldr	r3, [r7, #16]
 800f2e8:	2280      	movs	r2, #128	@ 0x80
 800f2ea:	4013      	ands	r3, r2
 800f2ec:	d00a      	beq.n	800f304 <HAL_I2C_ER_IRQHandler+0x68>
 800f2ee:	687b      	ldr	r3, [r7, #4]
 800f2f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f2f2:	2208      	movs	r2, #8
 800f2f4:	431a      	orrs	r2, r3
 800f2f6:	687b      	ldr	r3, [r7, #4]
 800f2f8:	645a      	str	r2, [r3, #68]	@ 0x44
 800f2fa:	687b      	ldr	r3, [r7, #4]
 800f2fc:	681b      	ldr	r3, [r3, #0]
 800f2fe:	2280      	movs	r2, #128	@ 0x80
 800f300:	00d2      	lsls	r2, r2, #3
 800f302:	61da      	str	r2, [r3, #28]
 800f304:	697a      	ldr	r2, [r7, #20]
 800f306:	2380      	movs	r3, #128	@ 0x80
 800f308:	009b      	lsls	r3, r3, #2
 800f30a:	4013      	ands	r3, r2
 800f30c:	d00e      	beq.n	800f32c <HAL_I2C_ER_IRQHandler+0x90>
 800f30e:	693b      	ldr	r3, [r7, #16]
 800f310:	2280      	movs	r2, #128	@ 0x80
 800f312:	4013      	ands	r3, r2
 800f314:	d00a      	beq.n	800f32c <HAL_I2C_ER_IRQHandler+0x90>
 800f316:	687b      	ldr	r3, [r7, #4]
 800f318:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f31a:	2202      	movs	r2, #2
 800f31c:	431a      	orrs	r2, r3
 800f31e:	687b      	ldr	r3, [r7, #4]
 800f320:	645a      	str	r2, [r3, #68]	@ 0x44
 800f322:	687b      	ldr	r3, [r7, #4]
 800f324:	681b      	ldr	r3, [r3, #0]
 800f326:	2280      	movs	r2, #128	@ 0x80
 800f328:	0092      	lsls	r2, r2, #2
 800f32a:	61da      	str	r2, [r3, #28]
 800f32c:	687b      	ldr	r3, [r7, #4]
 800f32e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f330:	60fb      	str	r3, [r7, #12]
 800f332:	68fb      	ldr	r3, [r7, #12]
 800f334:	220b      	movs	r2, #11
 800f336:	4013      	ands	r3, r2
 800f338:	d005      	beq.n	800f346 <HAL_I2C_ER_IRQHandler+0xaa>
 800f33a:	68fa      	ldr	r2, [r7, #12]
 800f33c:	687b      	ldr	r3, [r7, #4]
 800f33e:	0011      	movs	r1, r2
 800f340:	0018      	movs	r0, r3
 800f342:	f000 fc83 	bl	800fc4c <I2C_ITError>
 800f346:	46c0      	nop			@ (mov r8, r8)
 800f348:	46bd      	mov	sp, r7
 800f34a:	b006      	add	sp, #24
 800f34c:	bd80      	pop	{r7, pc}

0800f34e <HAL_I2C_SlaveTxCpltCallback>:
 800f34e:	b580      	push	{r7, lr}
 800f350:	b082      	sub	sp, #8
 800f352:	af00      	add	r7, sp, #0
 800f354:	6078      	str	r0, [r7, #4]
 800f356:	46c0      	nop			@ (mov r8, r8)
 800f358:	46bd      	mov	sp, r7
 800f35a:	b002      	add	sp, #8
 800f35c:	bd80      	pop	{r7, pc}

0800f35e <HAL_I2C_SlaveRxCpltCallback>:
 800f35e:	b580      	push	{r7, lr}
 800f360:	b082      	sub	sp, #8
 800f362:	af00      	add	r7, sp, #0
 800f364:	6078      	str	r0, [r7, #4]
 800f366:	46c0      	nop			@ (mov r8, r8)
 800f368:	46bd      	mov	sp, r7
 800f36a:	b002      	add	sp, #8
 800f36c:	bd80      	pop	{r7, pc}

0800f36e <HAL_I2C_AddrCallback>:
 800f36e:	b580      	push	{r7, lr}
 800f370:	b082      	sub	sp, #8
 800f372:	af00      	add	r7, sp, #0
 800f374:	6078      	str	r0, [r7, #4]
 800f376:	0008      	movs	r0, r1
 800f378:	0011      	movs	r1, r2
 800f37a:	1cfb      	adds	r3, r7, #3
 800f37c:	1c02      	adds	r2, r0, #0
 800f37e:	701a      	strb	r2, [r3, #0]
 800f380:	003b      	movs	r3, r7
 800f382:	1c0a      	adds	r2, r1, #0
 800f384:	801a      	strh	r2, [r3, #0]
 800f386:	46c0      	nop			@ (mov r8, r8)
 800f388:	46bd      	mov	sp, r7
 800f38a:	b002      	add	sp, #8
 800f38c:	bd80      	pop	{r7, pc}

0800f38e <HAL_I2C_ListenCpltCallback>:
 800f38e:	b580      	push	{r7, lr}
 800f390:	b082      	sub	sp, #8
 800f392:	af00      	add	r7, sp, #0
 800f394:	6078      	str	r0, [r7, #4]
 800f396:	46c0      	nop			@ (mov r8, r8)
 800f398:	46bd      	mov	sp, r7
 800f39a:	b002      	add	sp, #8
 800f39c:	bd80      	pop	{r7, pc}

0800f39e <HAL_I2C_ErrorCallback>:
 800f39e:	b580      	push	{r7, lr}
 800f3a0:	b082      	sub	sp, #8
 800f3a2:	af00      	add	r7, sp, #0
 800f3a4:	6078      	str	r0, [r7, #4]
 800f3a6:	46c0      	nop			@ (mov r8, r8)
 800f3a8:	46bd      	mov	sp, r7
 800f3aa:	b002      	add	sp, #8
 800f3ac:	bd80      	pop	{r7, pc}

0800f3ae <HAL_I2C_AbortCpltCallback>:
 800f3ae:	b580      	push	{r7, lr}
 800f3b0:	b082      	sub	sp, #8
 800f3b2:	af00      	add	r7, sp, #0
 800f3b4:	6078      	str	r0, [r7, #4]
 800f3b6:	46c0      	nop			@ (mov r8, r8)
 800f3b8:	46bd      	mov	sp, r7
 800f3ba:	b002      	add	sp, #8
 800f3bc:	bd80      	pop	{r7, pc}
	...

0800f3c0 <I2C_Slave_ISR_IT>:
 800f3c0:	b580      	push	{r7, lr}
 800f3c2:	b086      	sub	sp, #24
 800f3c4:	af00      	add	r7, sp, #0
 800f3c6:	60f8      	str	r0, [r7, #12]
 800f3c8:	60b9      	str	r1, [r7, #8]
 800f3ca:	607a      	str	r2, [r7, #4]
 800f3cc:	68fb      	ldr	r3, [r7, #12]
 800f3ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f3d0:	617b      	str	r3, [r7, #20]
 800f3d2:	68bb      	ldr	r3, [r7, #8]
 800f3d4:	613b      	str	r3, [r7, #16]
 800f3d6:	68fb      	ldr	r3, [r7, #12]
 800f3d8:	2240      	movs	r2, #64	@ 0x40
 800f3da:	5c9b      	ldrb	r3, [r3, r2]
 800f3dc:	2b01      	cmp	r3, #1
 800f3de:	d101      	bne.n	800f3e4 <I2C_Slave_ISR_IT+0x24>
 800f3e0:	2302      	movs	r3, #2
 800f3e2:	e0e6      	b.n	800f5b2 <I2C_Slave_ISR_IT+0x1f2>
 800f3e4:	68fb      	ldr	r3, [r7, #12]
 800f3e6:	2240      	movs	r2, #64	@ 0x40
 800f3e8:	2101      	movs	r1, #1
 800f3ea:	5499      	strb	r1, [r3, r2]
 800f3ec:	693b      	ldr	r3, [r7, #16]
 800f3ee:	2220      	movs	r2, #32
 800f3f0:	4013      	ands	r3, r2
 800f3f2:	d009      	beq.n	800f408 <I2C_Slave_ISR_IT+0x48>
 800f3f4:	687b      	ldr	r3, [r7, #4]
 800f3f6:	2220      	movs	r2, #32
 800f3f8:	4013      	ands	r3, r2
 800f3fa:	d005      	beq.n	800f408 <I2C_Slave_ISR_IT+0x48>
 800f3fc:	693a      	ldr	r2, [r7, #16]
 800f3fe:	68fb      	ldr	r3, [r7, #12]
 800f400:	0011      	movs	r1, r2
 800f402:	0018      	movs	r0, r3
 800f404:	f000 faaa 	bl	800f95c <I2C_ITSlaveCplt>
 800f408:	693b      	ldr	r3, [r7, #16]
 800f40a:	2210      	movs	r2, #16
 800f40c:	4013      	ands	r3, r2
 800f40e:	d052      	beq.n	800f4b6 <I2C_Slave_ISR_IT+0xf6>
 800f410:	687b      	ldr	r3, [r7, #4]
 800f412:	2210      	movs	r2, #16
 800f414:	4013      	ands	r3, r2
 800f416:	d04e      	beq.n	800f4b6 <I2C_Slave_ISR_IT+0xf6>
 800f418:	68fb      	ldr	r3, [r7, #12]
 800f41a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f41c:	b29b      	uxth	r3, r3
 800f41e:	2b00      	cmp	r3, #0
 800f420:	d12d      	bne.n	800f47e <I2C_Slave_ISR_IT+0xbe>
 800f422:	68fb      	ldr	r3, [r7, #12]
 800f424:	2241      	movs	r2, #65	@ 0x41
 800f426:	5c9b      	ldrb	r3, [r3, r2]
 800f428:	b2db      	uxtb	r3, r3
 800f42a:	2b28      	cmp	r3, #40	@ 0x28
 800f42c:	d10b      	bne.n	800f446 <I2C_Slave_ISR_IT+0x86>
 800f42e:	697a      	ldr	r2, [r7, #20]
 800f430:	2380      	movs	r3, #128	@ 0x80
 800f432:	049b      	lsls	r3, r3, #18
 800f434:	429a      	cmp	r2, r3
 800f436:	d106      	bne.n	800f446 <I2C_Slave_ISR_IT+0x86>
 800f438:	693a      	ldr	r2, [r7, #16]
 800f43a:	68fb      	ldr	r3, [r7, #12]
 800f43c:	0011      	movs	r1, r2
 800f43e:	0018      	movs	r0, r3
 800f440:	f000 fbac 	bl	800fb9c <I2C_ITListenCplt>
 800f444:	e036      	b.n	800f4b4 <I2C_Slave_ISR_IT+0xf4>
 800f446:	68fb      	ldr	r3, [r7, #12]
 800f448:	2241      	movs	r2, #65	@ 0x41
 800f44a:	5c9b      	ldrb	r3, [r3, r2]
 800f44c:	b2db      	uxtb	r3, r3
 800f44e:	2b29      	cmp	r3, #41	@ 0x29
 800f450:	d110      	bne.n	800f474 <I2C_Slave_ISR_IT+0xb4>
 800f452:	697b      	ldr	r3, [r7, #20]
 800f454:	4a59      	ldr	r2, [pc, #356]	@ (800f5bc <I2C_Slave_ISR_IT+0x1fc>)
 800f456:	4293      	cmp	r3, r2
 800f458:	d00c      	beq.n	800f474 <I2C_Slave_ISR_IT+0xb4>
 800f45a:	68fb      	ldr	r3, [r7, #12]
 800f45c:	681b      	ldr	r3, [r3, #0]
 800f45e:	2210      	movs	r2, #16
 800f460:	61da      	str	r2, [r3, #28]
 800f462:	68fb      	ldr	r3, [r7, #12]
 800f464:	0018      	movs	r0, r3
 800f466:	f000 fcfc 	bl	800fe62 <I2C_Flush_TXDR>
 800f46a:	68fb      	ldr	r3, [r7, #12]
 800f46c:	0018      	movs	r0, r3
 800f46e:	f000 fa11 	bl	800f894 <I2C_ITSlaveSeqCplt>
 800f472:	e01f      	b.n	800f4b4 <I2C_Slave_ISR_IT+0xf4>
 800f474:	68fb      	ldr	r3, [r7, #12]
 800f476:	681b      	ldr	r3, [r3, #0]
 800f478:	2210      	movs	r2, #16
 800f47a:	61da      	str	r2, [r3, #28]
 800f47c:	e091      	b.n	800f5a2 <I2C_Slave_ISR_IT+0x1e2>
 800f47e:	68fb      	ldr	r3, [r7, #12]
 800f480:	681b      	ldr	r3, [r3, #0]
 800f482:	2210      	movs	r2, #16
 800f484:	61da      	str	r2, [r3, #28]
 800f486:	68fb      	ldr	r3, [r7, #12]
 800f488:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f48a:	2204      	movs	r2, #4
 800f48c:	431a      	orrs	r2, r3
 800f48e:	68fb      	ldr	r3, [r7, #12]
 800f490:	645a      	str	r2, [r3, #68]	@ 0x44
 800f492:	697b      	ldr	r3, [r7, #20]
 800f494:	2b00      	cmp	r3, #0
 800f496:	d005      	beq.n	800f4a4 <I2C_Slave_ISR_IT+0xe4>
 800f498:	697a      	ldr	r2, [r7, #20]
 800f49a:	2380      	movs	r3, #128	@ 0x80
 800f49c:	045b      	lsls	r3, r3, #17
 800f49e:	429a      	cmp	r2, r3
 800f4a0:	d000      	beq.n	800f4a4 <I2C_Slave_ISR_IT+0xe4>
 800f4a2:	e07e      	b.n	800f5a2 <I2C_Slave_ISR_IT+0x1e2>
 800f4a4:	68fb      	ldr	r3, [r7, #12]
 800f4a6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800f4a8:	68fb      	ldr	r3, [r7, #12]
 800f4aa:	0011      	movs	r1, r2
 800f4ac:	0018      	movs	r0, r3
 800f4ae:	f000 fbcd 	bl	800fc4c <I2C_ITError>
 800f4b2:	e076      	b.n	800f5a2 <I2C_Slave_ISR_IT+0x1e2>
 800f4b4:	e075      	b.n	800f5a2 <I2C_Slave_ISR_IT+0x1e2>
 800f4b6:	693b      	ldr	r3, [r7, #16]
 800f4b8:	2204      	movs	r2, #4
 800f4ba:	4013      	ands	r3, r2
 800f4bc:	d02f      	beq.n	800f51e <I2C_Slave_ISR_IT+0x15e>
 800f4be:	687b      	ldr	r3, [r7, #4]
 800f4c0:	2204      	movs	r2, #4
 800f4c2:	4013      	ands	r3, r2
 800f4c4:	d02b      	beq.n	800f51e <I2C_Slave_ISR_IT+0x15e>
 800f4c6:	68fb      	ldr	r3, [r7, #12]
 800f4c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f4ca:	b29b      	uxth	r3, r3
 800f4cc:	2b00      	cmp	r3, #0
 800f4ce:	d018      	beq.n	800f502 <I2C_Slave_ISR_IT+0x142>
 800f4d0:	68fb      	ldr	r3, [r7, #12]
 800f4d2:	681b      	ldr	r3, [r3, #0]
 800f4d4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800f4d6:	68fb      	ldr	r3, [r7, #12]
 800f4d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f4da:	b2d2      	uxtb	r2, r2
 800f4dc:	701a      	strb	r2, [r3, #0]
 800f4de:	68fb      	ldr	r3, [r7, #12]
 800f4e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f4e2:	1c5a      	adds	r2, r3, #1
 800f4e4:	68fb      	ldr	r3, [r7, #12]
 800f4e6:	625a      	str	r2, [r3, #36]	@ 0x24
 800f4e8:	68fb      	ldr	r3, [r7, #12]
 800f4ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f4ec:	3b01      	subs	r3, #1
 800f4ee:	b29a      	uxth	r2, r3
 800f4f0:	68fb      	ldr	r3, [r7, #12]
 800f4f2:	851a      	strh	r2, [r3, #40]	@ 0x28
 800f4f4:	68fb      	ldr	r3, [r7, #12]
 800f4f6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f4f8:	b29b      	uxth	r3, r3
 800f4fa:	3b01      	subs	r3, #1
 800f4fc:	b29a      	uxth	r2, r3
 800f4fe:	68fb      	ldr	r3, [r7, #12]
 800f500:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800f502:	68fb      	ldr	r3, [r7, #12]
 800f504:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f506:	b29b      	uxth	r3, r3
 800f508:	2b00      	cmp	r3, #0
 800f50a:	d14c      	bne.n	800f5a6 <I2C_Slave_ISR_IT+0x1e6>
 800f50c:	697b      	ldr	r3, [r7, #20]
 800f50e:	4a2b      	ldr	r2, [pc, #172]	@ (800f5bc <I2C_Slave_ISR_IT+0x1fc>)
 800f510:	4293      	cmp	r3, r2
 800f512:	d048      	beq.n	800f5a6 <I2C_Slave_ISR_IT+0x1e6>
 800f514:	68fb      	ldr	r3, [r7, #12]
 800f516:	0018      	movs	r0, r3
 800f518:	f000 f9bc 	bl	800f894 <I2C_ITSlaveSeqCplt>
 800f51c:	e043      	b.n	800f5a6 <I2C_Slave_ISR_IT+0x1e6>
 800f51e:	693b      	ldr	r3, [r7, #16]
 800f520:	2208      	movs	r2, #8
 800f522:	4013      	ands	r3, r2
 800f524:	d00a      	beq.n	800f53c <I2C_Slave_ISR_IT+0x17c>
 800f526:	687b      	ldr	r3, [r7, #4]
 800f528:	2208      	movs	r2, #8
 800f52a:	4013      	ands	r3, r2
 800f52c:	d006      	beq.n	800f53c <I2C_Slave_ISR_IT+0x17c>
 800f52e:	693a      	ldr	r2, [r7, #16]
 800f530:	68fb      	ldr	r3, [r7, #12]
 800f532:	0011      	movs	r1, r2
 800f534:	0018      	movs	r0, r3
 800f536:	f000 f909 	bl	800f74c <I2C_ITAddrCplt>
 800f53a:	e035      	b.n	800f5a8 <I2C_Slave_ISR_IT+0x1e8>
 800f53c:	693b      	ldr	r3, [r7, #16]
 800f53e:	2202      	movs	r2, #2
 800f540:	4013      	ands	r3, r2
 800f542:	d031      	beq.n	800f5a8 <I2C_Slave_ISR_IT+0x1e8>
 800f544:	687b      	ldr	r3, [r7, #4]
 800f546:	2202      	movs	r2, #2
 800f548:	4013      	ands	r3, r2
 800f54a:	d02d      	beq.n	800f5a8 <I2C_Slave_ISR_IT+0x1e8>
 800f54c:	68fb      	ldr	r3, [r7, #12]
 800f54e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f550:	b29b      	uxth	r3, r3
 800f552:	2b00      	cmp	r3, #0
 800f554:	d018      	beq.n	800f588 <I2C_Slave_ISR_IT+0x1c8>
 800f556:	68fb      	ldr	r3, [r7, #12]
 800f558:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f55a:	781a      	ldrb	r2, [r3, #0]
 800f55c:	68fb      	ldr	r3, [r7, #12]
 800f55e:	681b      	ldr	r3, [r3, #0]
 800f560:	629a      	str	r2, [r3, #40]	@ 0x28
 800f562:	68fb      	ldr	r3, [r7, #12]
 800f564:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f566:	1c5a      	adds	r2, r3, #1
 800f568:	68fb      	ldr	r3, [r7, #12]
 800f56a:	625a      	str	r2, [r3, #36]	@ 0x24
 800f56c:	68fb      	ldr	r3, [r7, #12]
 800f56e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800f570:	b29b      	uxth	r3, r3
 800f572:	3b01      	subs	r3, #1
 800f574:	b29a      	uxth	r2, r3
 800f576:	68fb      	ldr	r3, [r7, #12]
 800f578:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800f57a:	68fb      	ldr	r3, [r7, #12]
 800f57c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800f57e:	3b01      	subs	r3, #1
 800f580:	b29a      	uxth	r2, r3
 800f582:	68fb      	ldr	r3, [r7, #12]
 800f584:	851a      	strh	r2, [r3, #40]	@ 0x28
 800f586:	e00f      	b.n	800f5a8 <I2C_Slave_ISR_IT+0x1e8>
 800f588:	697a      	ldr	r2, [r7, #20]
 800f58a:	2380      	movs	r3, #128	@ 0x80
 800f58c:	045b      	lsls	r3, r3, #17
 800f58e:	429a      	cmp	r2, r3
 800f590:	d002      	beq.n	800f598 <I2C_Slave_ISR_IT+0x1d8>
 800f592:	697b      	ldr	r3, [r7, #20]
 800f594:	2b00      	cmp	r3, #0
 800f596:	d107      	bne.n	800f5a8 <I2C_Slave_ISR_IT+0x1e8>
 800f598:	68fb      	ldr	r3, [r7, #12]
 800f59a:	0018      	movs	r0, r3
 800f59c:	f000 f97a 	bl	800f894 <I2C_ITSlaveSeqCplt>
 800f5a0:	e002      	b.n	800f5a8 <I2C_Slave_ISR_IT+0x1e8>
 800f5a2:	46c0      	nop			@ (mov r8, r8)
 800f5a4:	e000      	b.n	800f5a8 <I2C_Slave_ISR_IT+0x1e8>
 800f5a6:	46c0      	nop			@ (mov r8, r8)
 800f5a8:	68fb      	ldr	r3, [r7, #12]
 800f5aa:	2240      	movs	r2, #64	@ 0x40
 800f5ac:	2100      	movs	r1, #0
 800f5ae:	5499      	strb	r1, [r3, r2]
 800f5b0:	2300      	movs	r3, #0
 800f5b2:	0018      	movs	r0, r3
 800f5b4:	46bd      	mov	sp, r7
 800f5b6:	b006      	add	sp, #24
 800f5b8:	bd80      	pop	{r7, pc}
 800f5ba:	46c0      	nop			@ (mov r8, r8)
 800f5bc:	ffff0000 	.word	0xffff0000

0800f5c0 <I2C_RequestMemoryWrite>:
 800f5c0:	b5b0      	push	{r4, r5, r7, lr}
 800f5c2:	b086      	sub	sp, #24
 800f5c4:	af02      	add	r7, sp, #8
 800f5c6:	60f8      	str	r0, [r7, #12]
 800f5c8:	000c      	movs	r4, r1
 800f5ca:	0010      	movs	r0, r2
 800f5cc:	0019      	movs	r1, r3
 800f5ce:	250a      	movs	r5, #10
 800f5d0:	197b      	adds	r3, r7, r5
 800f5d2:	1c22      	adds	r2, r4, #0
 800f5d4:	801a      	strh	r2, [r3, #0]
 800f5d6:	2308      	movs	r3, #8
 800f5d8:	18fb      	adds	r3, r7, r3
 800f5da:	1c02      	adds	r2, r0, #0
 800f5dc:	801a      	strh	r2, [r3, #0]
 800f5de:	1dbb      	adds	r3, r7, #6
 800f5e0:	1c0a      	adds	r2, r1, #0
 800f5e2:	801a      	strh	r2, [r3, #0]
 800f5e4:	1dbb      	adds	r3, r7, #6
 800f5e6:	881b      	ldrh	r3, [r3, #0]
 800f5e8:	b2da      	uxtb	r2, r3
 800f5ea:	2380      	movs	r3, #128	@ 0x80
 800f5ec:	045c      	lsls	r4, r3, #17
 800f5ee:	197b      	adds	r3, r7, r5
 800f5f0:	8819      	ldrh	r1, [r3, #0]
 800f5f2:	68f8      	ldr	r0, [r7, #12]
 800f5f4:	4b23      	ldr	r3, [pc, #140]	@ (800f684 <I2C_RequestMemoryWrite+0xc4>)
 800f5f6:	9300      	str	r3, [sp, #0]
 800f5f8:	0023      	movs	r3, r4
 800f5fa:	f000 feaf 	bl	801035c <I2C_TransferConfig>
 800f5fe:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f600:	6a39      	ldr	r1, [r7, #32]
 800f602:	68fb      	ldr	r3, [r7, #12]
 800f604:	0018      	movs	r0, r3
 800f606:	f000 fcac 	bl	800ff62 <I2C_WaitOnTXISFlagUntilTimeout>
 800f60a:	1e03      	subs	r3, r0, #0
 800f60c:	d001      	beq.n	800f612 <I2C_RequestMemoryWrite+0x52>
 800f60e:	2301      	movs	r3, #1
 800f610:	e033      	b.n	800f67a <I2C_RequestMemoryWrite+0xba>
 800f612:	1dbb      	adds	r3, r7, #6
 800f614:	881b      	ldrh	r3, [r3, #0]
 800f616:	2b01      	cmp	r3, #1
 800f618:	d107      	bne.n	800f62a <I2C_RequestMemoryWrite+0x6a>
 800f61a:	2308      	movs	r3, #8
 800f61c:	18fb      	adds	r3, r7, r3
 800f61e:	881b      	ldrh	r3, [r3, #0]
 800f620:	b2da      	uxtb	r2, r3
 800f622:	68fb      	ldr	r3, [r7, #12]
 800f624:	681b      	ldr	r3, [r3, #0]
 800f626:	629a      	str	r2, [r3, #40]	@ 0x28
 800f628:	e019      	b.n	800f65e <I2C_RequestMemoryWrite+0x9e>
 800f62a:	2308      	movs	r3, #8
 800f62c:	18fb      	adds	r3, r7, r3
 800f62e:	881b      	ldrh	r3, [r3, #0]
 800f630:	0a1b      	lsrs	r3, r3, #8
 800f632:	b29b      	uxth	r3, r3
 800f634:	b2da      	uxtb	r2, r3
 800f636:	68fb      	ldr	r3, [r7, #12]
 800f638:	681b      	ldr	r3, [r3, #0]
 800f63a:	629a      	str	r2, [r3, #40]	@ 0x28
 800f63c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f63e:	6a39      	ldr	r1, [r7, #32]
 800f640:	68fb      	ldr	r3, [r7, #12]
 800f642:	0018      	movs	r0, r3
 800f644:	f000 fc8d 	bl	800ff62 <I2C_WaitOnTXISFlagUntilTimeout>
 800f648:	1e03      	subs	r3, r0, #0
 800f64a:	d001      	beq.n	800f650 <I2C_RequestMemoryWrite+0x90>
 800f64c:	2301      	movs	r3, #1
 800f64e:	e014      	b.n	800f67a <I2C_RequestMemoryWrite+0xba>
 800f650:	2308      	movs	r3, #8
 800f652:	18fb      	adds	r3, r7, r3
 800f654:	881b      	ldrh	r3, [r3, #0]
 800f656:	b2da      	uxtb	r2, r3
 800f658:	68fb      	ldr	r3, [r7, #12]
 800f65a:	681b      	ldr	r3, [r3, #0]
 800f65c:	629a      	str	r2, [r3, #40]	@ 0x28
 800f65e:	6a3a      	ldr	r2, [r7, #32]
 800f660:	68f8      	ldr	r0, [r7, #12]
 800f662:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f664:	9300      	str	r3, [sp, #0]
 800f666:	0013      	movs	r3, r2
 800f668:	2200      	movs	r2, #0
 800f66a:	2180      	movs	r1, #128	@ 0x80
 800f66c:	f000 fc3a 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800f670:	1e03      	subs	r3, r0, #0
 800f672:	d001      	beq.n	800f678 <I2C_RequestMemoryWrite+0xb8>
 800f674:	2301      	movs	r3, #1
 800f676:	e000      	b.n	800f67a <I2C_RequestMemoryWrite+0xba>
 800f678:	2300      	movs	r3, #0
 800f67a:	0018      	movs	r0, r3
 800f67c:	46bd      	mov	sp, r7
 800f67e:	b004      	add	sp, #16
 800f680:	bdb0      	pop	{r4, r5, r7, pc}
 800f682:	46c0      	nop			@ (mov r8, r8)
 800f684:	80002000 	.word	0x80002000

0800f688 <I2C_RequestMemoryRead>:
 800f688:	b5b0      	push	{r4, r5, r7, lr}
 800f68a:	b086      	sub	sp, #24
 800f68c:	af02      	add	r7, sp, #8
 800f68e:	60f8      	str	r0, [r7, #12]
 800f690:	000c      	movs	r4, r1
 800f692:	0010      	movs	r0, r2
 800f694:	0019      	movs	r1, r3
 800f696:	250a      	movs	r5, #10
 800f698:	197b      	adds	r3, r7, r5
 800f69a:	1c22      	adds	r2, r4, #0
 800f69c:	801a      	strh	r2, [r3, #0]
 800f69e:	2308      	movs	r3, #8
 800f6a0:	18fb      	adds	r3, r7, r3
 800f6a2:	1c02      	adds	r2, r0, #0
 800f6a4:	801a      	strh	r2, [r3, #0]
 800f6a6:	1dbb      	adds	r3, r7, #6
 800f6a8:	1c0a      	adds	r2, r1, #0
 800f6aa:	801a      	strh	r2, [r3, #0]
 800f6ac:	1dbb      	adds	r3, r7, #6
 800f6ae:	881b      	ldrh	r3, [r3, #0]
 800f6b0:	b2da      	uxtb	r2, r3
 800f6b2:	197b      	adds	r3, r7, r5
 800f6b4:	8819      	ldrh	r1, [r3, #0]
 800f6b6:	68f8      	ldr	r0, [r7, #12]
 800f6b8:	4b23      	ldr	r3, [pc, #140]	@ (800f748 <I2C_RequestMemoryRead+0xc0>)
 800f6ba:	9300      	str	r3, [sp, #0]
 800f6bc:	2300      	movs	r3, #0
 800f6be:	f000 fe4d 	bl	801035c <I2C_TransferConfig>
 800f6c2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f6c4:	6a39      	ldr	r1, [r7, #32]
 800f6c6:	68fb      	ldr	r3, [r7, #12]
 800f6c8:	0018      	movs	r0, r3
 800f6ca:	f000 fc4a 	bl	800ff62 <I2C_WaitOnTXISFlagUntilTimeout>
 800f6ce:	1e03      	subs	r3, r0, #0
 800f6d0:	d001      	beq.n	800f6d6 <I2C_RequestMemoryRead+0x4e>
 800f6d2:	2301      	movs	r3, #1
 800f6d4:	e033      	b.n	800f73e <I2C_RequestMemoryRead+0xb6>
 800f6d6:	1dbb      	adds	r3, r7, #6
 800f6d8:	881b      	ldrh	r3, [r3, #0]
 800f6da:	2b01      	cmp	r3, #1
 800f6dc:	d107      	bne.n	800f6ee <I2C_RequestMemoryRead+0x66>
 800f6de:	2308      	movs	r3, #8
 800f6e0:	18fb      	adds	r3, r7, r3
 800f6e2:	881b      	ldrh	r3, [r3, #0]
 800f6e4:	b2da      	uxtb	r2, r3
 800f6e6:	68fb      	ldr	r3, [r7, #12]
 800f6e8:	681b      	ldr	r3, [r3, #0]
 800f6ea:	629a      	str	r2, [r3, #40]	@ 0x28
 800f6ec:	e019      	b.n	800f722 <I2C_RequestMemoryRead+0x9a>
 800f6ee:	2308      	movs	r3, #8
 800f6f0:	18fb      	adds	r3, r7, r3
 800f6f2:	881b      	ldrh	r3, [r3, #0]
 800f6f4:	0a1b      	lsrs	r3, r3, #8
 800f6f6:	b29b      	uxth	r3, r3
 800f6f8:	b2da      	uxtb	r2, r3
 800f6fa:	68fb      	ldr	r3, [r7, #12]
 800f6fc:	681b      	ldr	r3, [r3, #0]
 800f6fe:	629a      	str	r2, [r3, #40]	@ 0x28
 800f700:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f702:	6a39      	ldr	r1, [r7, #32]
 800f704:	68fb      	ldr	r3, [r7, #12]
 800f706:	0018      	movs	r0, r3
 800f708:	f000 fc2b 	bl	800ff62 <I2C_WaitOnTXISFlagUntilTimeout>
 800f70c:	1e03      	subs	r3, r0, #0
 800f70e:	d001      	beq.n	800f714 <I2C_RequestMemoryRead+0x8c>
 800f710:	2301      	movs	r3, #1
 800f712:	e014      	b.n	800f73e <I2C_RequestMemoryRead+0xb6>
 800f714:	2308      	movs	r3, #8
 800f716:	18fb      	adds	r3, r7, r3
 800f718:	881b      	ldrh	r3, [r3, #0]
 800f71a:	b2da      	uxtb	r2, r3
 800f71c:	68fb      	ldr	r3, [r7, #12]
 800f71e:	681b      	ldr	r3, [r3, #0]
 800f720:	629a      	str	r2, [r3, #40]	@ 0x28
 800f722:	6a3a      	ldr	r2, [r7, #32]
 800f724:	68f8      	ldr	r0, [r7, #12]
 800f726:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f728:	9300      	str	r3, [sp, #0]
 800f72a:	0013      	movs	r3, r2
 800f72c:	2200      	movs	r2, #0
 800f72e:	2140      	movs	r1, #64	@ 0x40
 800f730:	f000 fbd8 	bl	800fee4 <I2C_WaitOnFlagUntilTimeout>
 800f734:	1e03      	subs	r3, r0, #0
 800f736:	d001      	beq.n	800f73c <I2C_RequestMemoryRead+0xb4>
 800f738:	2301      	movs	r3, #1
 800f73a:	e000      	b.n	800f73e <I2C_RequestMemoryRead+0xb6>
 800f73c:	2300      	movs	r3, #0
 800f73e:	0018      	movs	r0, r3
 800f740:	46bd      	mov	sp, r7
 800f742:	b004      	add	sp, #16
 800f744:	bdb0      	pop	{r4, r5, r7, pc}
 800f746:	46c0      	nop			@ (mov r8, r8)
 800f748:	80002000 	.word	0x80002000

0800f74c <I2C_ITAddrCplt>:
 800f74c:	b5b0      	push	{r4, r5, r7, lr}
 800f74e:	b084      	sub	sp, #16
 800f750:	af00      	add	r7, sp, #0
 800f752:	6078      	str	r0, [r7, #4]
 800f754:	6039      	str	r1, [r7, #0]
 800f756:	687b      	ldr	r3, [r7, #4]
 800f758:	2241      	movs	r2, #65	@ 0x41
 800f75a:	5c9b      	ldrb	r3, [r3, r2]
 800f75c:	b2db      	uxtb	r3, r3
 800f75e:	001a      	movs	r2, r3
 800f760:	2328      	movs	r3, #40	@ 0x28
 800f762:	4013      	ands	r3, r2
 800f764:	2b28      	cmp	r3, #40	@ 0x28
 800f766:	d000      	beq.n	800f76a <I2C_ITAddrCplt+0x1e>
 800f768:	e088      	b.n	800f87c <I2C_ITAddrCplt+0x130>
 800f76a:	687b      	ldr	r3, [r7, #4]
 800f76c:	681b      	ldr	r3, [r3, #0]
 800f76e:	699b      	ldr	r3, [r3, #24]
 800f770:	0c1b      	lsrs	r3, r3, #16
 800f772:	b2da      	uxtb	r2, r3
 800f774:	250f      	movs	r5, #15
 800f776:	197b      	adds	r3, r7, r5
 800f778:	2101      	movs	r1, #1
 800f77a:	400a      	ands	r2, r1
 800f77c:	701a      	strb	r2, [r3, #0]
 800f77e:	687b      	ldr	r3, [r7, #4]
 800f780:	681b      	ldr	r3, [r3, #0]
 800f782:	699b      	ldr	r3, [r3, #24]
 800f784:	0c1b      	lsrs	r3, r3, #16
 800f786:	b29a      	uxth	r2, r3
 800f788:	200c      	movs	r0, #12
 800f78a:	183b      	adds	r3, r7, r0
 800f78c:	21fe      	movs	r1, #254	@ 0xfe
 800f78e:	400a      	ands	r2, r1
 800f790:	801a      	strh	r2, [r3, #0]
 800f792:	687b      	ldr	r3, [r7, #4]
 800f794:	681b      	ldr	r3, [r3, #0]
 800f796:	689b      	ldr	r3, [r3, #8]
 800f798:	b29a      	uxth	r2, r3
 800f79a:	240a      	movs	r4, #10
 800f79c:	193b      	adds	r3, r7, r4
 800f79e:	0592      	lsls	r2, r2, #22
 800f7a0:	0d92      	lsrs	r2, r2, #22
 800f7a2:	801a      	strh	r2, [r3, #0]
 800f7a4:	687b      	ldr	r3, [r7, #4]
 800f7a6:	681b      	ldr	r3, [r3, #0]
 800f7a8:	68db      	ldr	r3, [r3, #12]
 800f7aa:	b29a      	uxth	r2, r3
 800f7ac:	2308      	movs	r3, #8
 800f7ae:	18fb      	adds	r3, r7, r3
 800f7b0:	21fe      	movs	r1, #254	@ 0xfe
 800f7b2:	400a      	ands	r2, r1
 800f7b4:	801a      	strh	r2, [r3, #0]
 800f7b6:	687b      	ldr	r3, [r7, #4]
 800f7b8:	68db      	ldr	r3, [r3, #12]
 800f7ba:	2b02      	cmp	r3, #2
 800f7bc:	d148      	bne.n	800f850 <I2C_ITAddrCplt+0x104>
 800f7be:	0021      	movs	r1, r4
 800f7c0:	187b      	adds	r3, r7, r1
 800f7c2:	881b      	ldrh	r3, [r3, #0]
 800f7c4:	09db      	lsrs	r3, r3, #7
 800f7c6:	b29a      	uxth	r2, r3
 800f7c8:	183b      	adds	r3, r7, r0
 800f7ca:	881b      	ldrh	r3, [r3, #0]
 800f7cc:	4053      	eors	r3, r2
 800f7ce:	b29b      	uxth	r3, r3
 800f7d0:	001a      	movs	r2, r3
 800f7d2:	2306      	movs	r3, #6
 800f7d4:	4013      	ands	r3, r2
 800f7d6:	d120      	bne.n	800f81a <I2C_ITAddrCplt+0xce>
 800f7d8:	183b      	adds	r3, r7, r0
 800f7da:	187a      	adds	r2, r7, r1
 800f7dc:	8812      	ldrh	r2, [r2, #0]
 800f7de:	801a      	strh	r2, [r3, #0]
 800f7e0:	687b      	ldr	r3, [r7, #4]
 800f7e2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f7e4:	1c5a      	adds	r2, r3, #1
 800f7e6:	687b      	ldr	r3, [r7, #4]
 800f7e8:	649a      	str	r2, [r3, #72]	@ 0x48
 800f7ea:	687b      	ldr	r3, [r7, #4]
 800f7ec:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f7ee:	2b02      	cmp	r3, #2
 800f7f0:	d14c      	bne.n	800f88c <I2C_ITAddrCplt+0x140>
 800f7f2:	687b      	ldr	r3, [r7, #4]
 800f7f4:	2200      	movs	r2, #0
 800f7f6:	649a      	str	r2, [r3, #72]	@ 0x48
 800f7f8:	687b      	ldr	r3, [r7, #4]
 800f7fa:	681b      	ldr	r3, [r3, #0]
 800f7fc:	2208      	movs	r2, #8
 800f7fe:	61da      	str	r2, [r3, #28]
 800f800:	687b      	ldr	r3, [r7, #4]
 800f802:	2240      	movs	r2, #64	@ 0x40
 800f804:	2100      	movs	r1, #0
 800f806:	5499      	strb	r1, [r3, r2]
 800f808:	183b      	adds	r3, r7, r0
 800f80a:	881a      	ldrh	r2, [r3, #0]
 800f80c:	197b      	adds	r3, r7, r5
 800f80e:	7819      	ldrb	r1, [r3, #0]
 800f810:	687b      	ldr	r3, [r7, #4]
 800f812:	0018      	movs	r0, r3
 800f814:	f7ff fdab 	bl	800f36e <HAL_I2C_AddrCallback>
 800f818:	e038      	b.n	800f88c <I2C_ITAddrCplt+0x140>
 800f81a:	240c      	movs	r4, #12
 800f81c:	193b      	adds	r3, r7, r4
 800f81e:	2208      	movs	r2, #8
 800f820:	18ba      	adds	r2, r7, r2
 800f822:	8812      	ldrh	r2, [r2, #0]
 800f824:	801a      	strh	r2, [r3, #0]
 800f826:	2380      	movs	r3, #128	@ 0x80
 800f828:	021a      	lsls	r2, r3, #8
 800f82a:	687b      	ldr	r3, [r7, #4]
 800f82c:	0011      	movs	r1, r2
 800f82e:	0018      	movs	r0, r3
 800f830:	f000 fdce 	bl	80103d0 <I2C_Disable_IRQ>
 800f834:	687b      	ldr	r3, [r7, #4]
 800f836:	2240      	movs	r2, #64	@ 0x40
 800f838:	2100      	movs	r1, #0
 800f83a:	5499      	strb	r1, [r3, r2]
 800f83c:	193b      	adds	r3, r7, r4
 800f83e:	881a      	ldrh	r2, [r3, #0]
 800f840:	230f      	movs	r3, #15
 800f842:	18fb      	adds	r3, r7, r3
 800f844:	7819      	ldrb	r1, [r3, #0]
 800f846:	687b      	ldr	r3, [r7, #4]
 800f848:	0018      	movs	r0, r3
 800f84a:	f7ff fd90 	bl	800f36e <HAL_I2C_AddrCallback>
 800f84e:	e01d      	b.n	800f88c <I2C_ITAddrCplt+0x140>
 800f850:	2380      	movs	r3, #128	@ 0x80
 800f852:	021a      	lsls	r2, r3, #8
 800f854:	687b      	ldr	r3, [r7, #4]
 800f856:	0011      	movs	r1, r2
 800f858:	0018      	movs	r0, r3
 800f85a:	f000 fdb9 	bl	80103d0 <I2C_Disable_IRQ>
 800f85e:	687b      	ldr	r3, [r7, #4]
 800f860:	2240      	movs	r2, #64	@ 0x40
 800f862:	2100      	movs	r1, #0
 800f864:	5499      	strb	r1, [r3, r2]
 800f866:	230c      	movs	r3, #12
 800f868:	18fb      	adds	r3, r7, r3
 800f86a:	881a      	ldrh	r2, [r3, #0]
 800f86c:	230f      	movs	r3, #15
 800f86e:	18fb      	adds	r3, r7, r3
 800f870:	7819      	ldrb	r1, [r3, #0]
 800f872:	687b      	ldr	r3, [r7, #4]
 800f874:	0018      	movs	r0, r3
 800f876:	f7ff fd7a 	bl	800f36e <HAL_I2C_AddrCallback>
 800f87a:	e007      	b.n	800f88c <I2C_ITAddrCplt+0x140>
 800f87c:	687b      	ldr	r3, [r7, #4]
 800f87e:	681b      	ldr	r3, [r3, #0]
 800f880:	2208      	movs	r2, #8
 800f882:	61da      	str	r2, [r3, #28]
 800f884:	687b      	ldr	r3, [r7, #4]
 800f886:	2240      	movs	r2, #64	@ 0x40
 800f888:	2100      	movs	r1, #0
 800f88a:	5499      	strb	r1, [r3, r2]
 800f88c:	46c0      	nop			@ (mov r8, r8)
 800f88e:	46bd      	mov	sp, r7
 800f890:	b004      	add	sp, #16
 800f892:	bdb0      	pop	{r4, r5, r7, pc}

0800f894 <I2C_ITSlaveSeqCplt>:
 800f894:	b580      	push	{r7, lr}
 800f896:	b084      	sub	sp, #16
 800f898:	af00      	add	r7, sp, #0
 800f89a:	6078      	str	r0, [r7, #4]
 800f89c:	687b      	ldr	r3, [r7, #4]
 800f89e:	681b      	ldr	r3, [r3, #0]
 800f8a0:	681b      	ldr	r3, [r3, #0]
 800f8a2:	60fb      	str	r3, [r7, #12]
 800f8a4:	687b      	ldr	r3, [r7, #4]
 800f8a6:	2242      	movs	r2, #66	@ 0x42
 800f8a8:	2100      	movs	r1, #0
 800f8aa:	5499      	strb	r1, [r3, r2]
 800f8ac:	68fa      	ldr	r2, [r7, #12]
 800f8ae:	2380      	movs	r3, #128	@ 0x80
 800f8b0:	01db      	lsls	r3, r3, #7
 800f8b2:	4013      	ands	r3, r2
 800f8b4:	d008      	beq.n	800f8c8 <I2C_ITSlaveSeqCplt+0x34>
 800f8b6:	687b      	ldr	r3, [r7, #4]
 800f8b8:	681b      	ldr	r3, [r3, #0]
 800f8ba:	681a      	ldr	r2, [r3, #0]
 800f8bc:	687b      	ldr	r3, [r7, #4]
 800f8be:	681b      	ldr	r3, [r3, #0]
 800f8c0:	4924      	ldr	r1, [pc, #144]	@ (800f954 <I2C_ITSlaveSeqCplt+0xc0>)
 800f8c2:	400a      	ands	r2, r1
 800f8c4:	601a      	str	r2, [r3, #0]
 800f8c6:	e00c      	b.n	800f8e2 <I2C_ITSlaveSeqCplt+0x4e>
 800f8c8:	68fa      	ldr	r2, [r7, #12]
 800f8ca:	2380      	movs	r3, #128	@ 0x80
 800f8cc:	021b      	lsls	r3, r3, #8
 800f8ce:	4013      	ands	r3, r2
 800f8d0:	d007      	beq.n	800f8e2 <I2C_ITSlaveSeqCplt+0x4e>
 800f8d2:	687b      	ldr	r3, [r7, #4]
 800f8d4:	681b      	ldr	r3, [r3, #0]
 800f8d6:	681a      	ldr	r2, [r3, #0]
 800f8d8:	687b      	ldr	r3, [r7, #4]
 800f8da:	681b      	ldr	r3, [r3, #0]
 800f8dc:	491e      	ldr	r1, [pc, #120]	@ (800f958 <I2C_ITSlaveSeqCplt+0xc4>)
 800f8de:	400a      	ands	r2, r1
 800f8e0:	601a      	str	r2, [r3, #0]
 800f8e2:	687b      	ldr	r3, [r7, #4]
 800f8e4:	2241      	movs	r2, #65	@ 0x41
 800f8e6:	5c9b      	ldrb	r3, [r3, r2]
 800f8e8:	b2db      	uxtb	r3, r3
 800f8ea:	2b29      	cmp	r3, #41	@ 0x29
 800f8ec:	d114      	bne.n	800f918 <I2C_ITSlaveSeqCplt+0x84>
 800f8ee:	687b      	ldr	r3, [r7, #4]
 800f8f0:	2241      	movs	r2, #65	@ 0x41
 800f8f2:	2128      	movs	r1, #40	@ 0x28
 800f8f4:	5499      	strb	r1, [r3, r2]
 800f8f6:	687b      	ldr	r3, [r7, #4]
 800f8f8:	2221      	movs	r2, #33	@ 0x21
 800f8fa:	631a      	str	r2, [r3, #48]	@ 0x30
 800f8fc:	687b      	ldr	r3, [r7, #4]
 800f8fe:	2101      	movs	r1, #1
 800f900:	0018      	movs	r0, r3
 800f902:	f000 fd65 	bl	80103d0 <I2C_Disable_IRQ>
 800f906:	687b      	ldr	r3, [r7, #4]
 800f908:	2240      	movs	r2, #64	@ 0x40
 800f90a:	2100      	movs	r1, #0
 800f90c:	5499      	strb	r1, [r3, r2]
 800f90e:	687b      	ldr	r3, [r7, #4]
 800f910:	0018      	movs	r0, r3
 800f912:	f7ff fd1c 	bl	800f34e <HAL_I2C_SlaveTxCpltCallback>
 800f916:	e019      	b.n	800f94c <I2C_ITSlaveSeqCplt+0xb8>
 800f918:	687b      	ldr	r3, [r7, #4]
 800f91a:	2241      	movs	r2, #65	@ 0x41
 800f91c:	5c9b      	ldrb	r3, [r3, r2]
 800f91e:	b2db      	uxtb	r3, r3
 800f920:	2b2a      	cmp	r3, #42	@ 0x2a
 800f922:	d113      	bne.n	800f94c <I2C_ITSlaveSeqCplt+0xb8>
 800f924:	687b      	ldr	r3, [r7, #4]
 800f926:	2241      	movs	r2, #65	@ 0x41
 800f928:	2128      	movs	r1, #40	@ 0x28
 800f92a:	5499      	strb	r1, [r3, r2]
 800f92c:	687b      	ldr	r3, [r7, #4]
 800f92e:	2222      	movs	r2, #34	@ 0x22
 800f930:	631a      	str	r2, [r3, #48]	@ 0x30
 800f932:	687b      	ldr	r3, [r7, #4]
 800f934:	2102      	movs	r1, #2
 800f936:	0018      	movs	r0, r3
 800f938:	f000 fd4a 	bl	80103d0 <I2C_Disable_IRQ>
 800f93c:	687b      	ldr	r3, [r7, #4]
 800f93e:	2240      	movs	r2, #64	@ 0x40
 800f940:	2100      	movs	r1, #0
 800f942:	5499      	strb	r1, [r3, r2]
 800f944:	687b      	ldr	r3, [r7, #4]
 800f946:	0018      	movs	r0, r3
 800f948:	f7ff fd09 	bl	800f35e <HAL_I2C_SlaveRxCpltCallback>
 800f94c:	46c0      	nop			@ (mov r8, r8)
 800f94e:	46bd      	mov	sp, r7
 800f950:	b004      	add	sp, #16
 800f952:	bd80      	pop	{r7, pc}
 800f954:	ffffbfff 	.word	0xffffbfff
 800f958:	ffff7fff 	.word	0xffff7fff

0800f95c <I2C_ITSlaveCplt>:
 800f95c:	b580      	push	{r7, lr}
 800f95e:	b086      	sub	sp, #24
 800f960:	af00      	add	r7, sp, #0
 800f962:	6078      	str	r0, [r7, #4]
 800f964:	6039      	str	r1, [r7, #0]
 800f966:	687b      	ldr	r3, [r7, #4]
 800f968:	681b      	ldr	r3, [r3, #0]
 800f96a:	681b      	ldr	r3, [r3, #0]
 800f96c:	613b      	str	r3, [r7, #16]
 800f96e:	683b      	ldr	r3, [r7, #0]
 800f970:	617b      	str	r3, [r7, #20]
 800f972:	200f      	movs	r0, #15
 800f974:	183b      	adds	r3, r7, r0
 800f976:	687a      	ldr	r2, [r7, #4]
 800f978:	2141      	movs	r1, #65	@ 0x41
 800f97a:	5c52      	ldrb	r2, [r2, r1]
 800f97c:	701a      	strb	r2, [r3, #0]
 800f97e:	687b      	ldr	r3, [r7, #4]
 800f980:	681b      	ldr	r3, [r3, #0]
 800f982:	2220      	movs	r2, #32
 800f984:	61da      	str	r2, [r3, #28]
 800f986:	183b      	adds	r3, r7, r0
 800f988:	781b      	ldrb	r3, [r3, #0]
 800f98a:	2b21      	cmp	r3, #33	@ 0x21
 800f98c:	d003      	beq.n	800f996 <I2C_ITSlaveCplt+0x3a>
 800f98e:	183b      	adds	r3, r7, r0
 800f990:	781b      	ldrb	r3, [r3, #0]
 800f992:	2b29      	cmp	r3, #41	@ 0x29
 800f994:	d109      	bne.n	800f9aa <I2C_ITSlaveCplt+0x4e>
 800f996:	4a7b      	ldr	r2, [pc, #492]	@ (800fb84 <I2C_ITSlaveCplt+0x228>)
 800f998:	687b      	ldr	r3, [r7, #4]
 800f99a:	0011      	movs	r1, r2
 800f99c:	0018      	movs	r0, r3
 800f99e:	f000 fd17 	bl	80103d0 <I2C_Disable_IRQ>
 800f9a2:	687b      	ldr	r3, [r7, #4]
 800f9a4:	2221      	movs	r2, #33	@ 0x21
 800f9a6:	631a      	str	r2, [r3, #48]	@ 0x30
 800f9a8:	e011      	b.n	800f9ce <I2C_ITSlaveCplt+0x72>
 800f9aa:	220f      	movs	r2, #15
 800f9ac:	18bb      	adds	r3, r7, r2
 800f9ae:	781b      	ldrb	r3, [r3, #0]
 800f9b0:	2b22      	cmp	r3, #34	@ 0x22
 800f9b2:	d003      	beq.n	800f9bc <I2C_ITSlaveCplt+0x60>
 800f9b4:	18bb      	adds	r3, r7, r2
 800f9b6:	781b      	ldrb	r3, [r3, #0]
 800f9b8:	2b2a      	cmp	r3, #42	@ 0x2a
 800f9ba:	d108      	bne.n	800f9ce <I2C_ITSlaveCplt+0x72>
 800f9bc:	4a72      	ldr	r2, [pc, #456]	@ (800fb88 <I2C_ITSlaveCplt+0x22c>)
 800f9be:	687b      	ldr	r3, [r7, #4]
 800f9c0:	0011      	movs	r1, r2
 800f9c2:	0018      	movs	r0, r3
 800f9c4:	f000 fd04 	bl	80103d0 <I2C_Disable_IRQ>
 800f9c8:	687b      	ldr	r3, [r7, #4]
 800f9ca:	2222      	movs	r2, #34	@ 0x22
 800f9cc:	631a      	str	r2, [r3, #48]	@ 0x30
 800f9ce:	687b      	ldr	r3, [r7, #4]
 800f9d0:	681b      	ldr	r3, [r3, #0]
 800f9d2:	685a      	ldr	r2, [r3, #4]
 800f9d4:	687b      	ldr	r3, [r7, #4]
 800f9d6:	681b      	ldr	r3, [r3, #0]
 800f9d8:	2180      	movs	r1, #128	@ 0x80
 800f9da:	0209      	lsls	r1, r1, #8
 800f9dc:	430a      	orrs	r2, r1
 800f9de:	605a      	str	r2, [r3, #4]
 800f9e0:	687b      	ldr	r3, [r7, #4]
 800f9e2:	681b      	ldr	r3, [r3, #0]
 800f9e4:	685a      	ldr	r2, [r3, #4]
 800f9e6:	687b      	ldr	r3, [r7, #4]
 800f9e8:	681b      	ldr	r3, [r3, #0]
 800f9ea:	4968      	ldr	r1, [pc, #416]	@ (800fb8c <I2C_ITSlaveCplt+0x230>)
 800f9ec:	400a      	ands	r2, r1
 800f9ee:	605a      	str	r2, [r3, #4]
 800f9f0:	687b      	ldr	r3, [r7, #4]
 800f9f2:	0018      	movs	r0, r3
 800f9f4:	f000 fa35 	bl	800fe62 <I2C_Flush_TXDR>
 800f9f8:	693a      	ldr	r2, [r7, #16]
 800f9fa:	2380      	movs	r3, #128	@ 0x80
 800f9fc:	01db      	lsls	r3, r3, #7
 800f9fe:	4013      	ands	r3, r2
 800fa00:	d013      	beq.n	800fa2a <I2C_ITSlaveCplt+0xce>
 800fa02:	687b      	ldr	r3, [r7, #4]
 800fa04:	681b      	ldr	r3, [r3, #0]
 800fa06:	681a      	ldr	r2, [r3, #0]
 800fa08:	687b      	ldr	r3, [r7, #4]
 800fa0a:	681b      	ldr	r3, [r3, #0]
 800fa0c:	4960      	ldr	r1, [pc, #384]	@ (800fb90 <I2C_ITSlaveCplt+0x234>)
 800fa0e:	400a      	ands	r2, r1
 800fa10:	601a      	str	r2, [r3, #0]
 800fa12:	687b      	ldr	r3, [r7, #4]
 800fa14:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fa16:	2b00      	cmp	r3, #0
 800fa18:	d01f      	beq.n	800fa5a <I2C_ITSlaveCplt+0xfe>
 800fa1a:	687b      	ldr	r3, [r7, #4]
 800fa1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fa1e:	681b      	ldr	r3, [r3, #0]
 800fa20:	685b      	ldr	r3, [r3, #4]
 800fa22:	b29a      	uxth	r2, r3
 800fa24:	687b      	ldr	r3, [r7, #4]
 800fa26:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800fa28:	e017      	b.n	800fa5a <I2C_ITSlaveCplt+0xfe>
 800fa2a:	693a      	ldr	r2, [r7, #16]
 800fa2c:	2380      	movs	r3, #128	@ 0x80
 800fa2e:	021b      	lsls	r3, r3, #8
 800fa30:	4013      	ands	r3, r2
 800fa32:	d012      	beq.n	800fa5a <I2C_ITSlaveCplt+0xfe>
 800fa34:	687b      	ldr	r3, [r7, #4]
 800fa36:	681b      	ldr	r3, [r3, #0]
 800fa38:	681a      	ldr	r2, [r3, #0]
 800fa3a:	687b      	ldr	r3, [r7, #4]
 800fa3c:	681b      	ldr	r3, [r3, #0]
 800fa3e:	4955      	ldr	r1, [pc, #340]	@ (800fb94 <I2C_ITSlaveCplt+0x238>)
 800fa40:	400a      	ands	r2, r1
 800fa42:	601a      	str	r2, [r3, #0]
 800fa44:	687b      	ldr	r3, [r7, #4]
 800fa46:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fa48:	2b00      	cmp	r3, #0
 800fa4a:	d006      	beq.n	800fa5a <I2C_ITSlaveCplt+0xfe>
 800fa4c:	687b      	ldr	r3, [r7, #4]
 800fa4e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fa50:	681b      	ldr	r3, [r3, #0]
 800fa52:	685b      	ldr	r3, [r3, #4]
 800fa54:	b29a      	uxth	r2, r3
 800fa56:	687b      	ldr	r3, [r7, #4]
 800fa58:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800fa5a:	697b      	ldr	r3, [r7, #20]
 800fa5c:	2204      	movs	r2, #4
 800fa5e:	4013      	ands	r3, r2
 800fa60:	d020      	beq.n	800faa4 <I2C_ITSlaveCplt+0x148>
 800fa62:	697b      	ldr	r3, [r7, #20]
 800fa64:	2204      	movs	r2, #4
 800fa66:	4393      	bics	r3, r2
 800fa68:	617b      	str	r3, [r7, #20]
 800fa6a:	687b      	ldr	r3, [r7, #4]
 800fa6c:	681b      	ldr	r3, [r3, #0]
 800fa6e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800fa70:	687b      	ldr	r3, [r7, #4]
 800fa72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fa74:	b2d2      	uxtb	r2, r2
 800fa76:	701a      	strb	r2, [r3, #0]
 800fa78:	687b      	ldr	r3, [r7, #4]
 800fa7a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fa7c:	1c5a      	adds	r2, r3, #1
 800fa7e:	687b      	ldr	r3, [r7, #4]
 800fa80:	625a      	str	r2, [r3, #36]	@ 0x24
 800fa82:	687b      	ldr	r3, [r7, #4]
 800fa84:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800fa86:	2b00      	cmp	r3, #0
 800fa88:	d00c      	beq.n	800faa4 <I2C_ITSlaveCplt+0x148>
 800fa8a:	687b      	ldr	r3, [r7, #4]
 800fa8c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800fa8e:	3b01      	subs	r3, #1
 800fa90:	b29a      	uxth	r2, r3
 800fa92:	687b      	ldr	r3, [r7, #4]
 800fa94:	851a      	strh	r2, [r3, #40]	@ 0x28
 800fa96:	687b      	ldr	r3, [r7, #4]
 800fa98:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800fa9a:	b29b      	uxth	r3, r3
 800fa9c:	3b01      	subs	r3, #1
 800fa9e:	b29a      	uxth	r2, r3
 800faa0:	687b      	ldr	r3, [r7, #4]
 800faa2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800faa4:	687b      	ldr	r3, [r7, #4]
 800faa6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800faa8:	b29b      	uxth	r3, r3
 800faaa:	2b00      	cmp	r3, #0
 800faac:	d005      	beq.n	800faba <I2C_ITSlaveCplt+0x15e>
 800faae:	687b      	ldr	r3, [r7, #4]
 800fab0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fab2:	2204      	movs	r2, #4
 800fab4:	431a      	orrs	r2, r3
 800fab6:	687b      	ldr	r3, [r7, #4]
 800fab8:	645a      	str	r2, [r3, #68]	@ 0x44
 800faba:	687b      	ldr	r3, [r7, #4]
 800fabc:	2242      	movs	r2, #66	@ 0x42
 800fabe:	2100      	movs	r1, #0
 800fac0:	5499      	strb	r1, [r3, r2]
 800fac2:	687b      	ldr	r3, [r7, #4]
 800fac4:	2200      	movs	r2, #0
 800fac6:	635a      	str	r2, [r3, #52]	@ 0x34
 800fac8:	687b      	ldr	r3, [r7, #4]
 800faca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800facc:	2b00      	cmp	r3, #0
 800face:	d013      	beq.n	800faf8 <I2C_ITSlaveCplt+0x19c>
 800fad0:	687b      	ldr	r3, [r7, #4]
 800fad2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800fad4:	687b      	ldr	r3, [r7, #4]
 800fad6:	0011      	movs	r1, r2
 800fad8:	0018      	movs	r0, r3
 800fada:	f000 f8b7 	bl	800fc4c <I2C_ITError>
 800fade:	687b      	ldr	r3, [r7, #4]
 800fae0:	2241      	movs	r2, #65	@ 0x41
 800fae2:	5c9b      	ldrb	r3, [r3, r2]
 800fae4:	b2db      	uxtb	r3, r3
 800fae6:	2b28      	cmp	r3, #40	@ 0x28
 800fae8:	d147      	bne.n	800fb7a <I2C_ITSlaveCplt+0x21e>
 800faea:	697a      	ldr	r2, [r7, #20]
 800faec:	687b      	ldr	r3, [r7, #4]
 800faee:	0011      	movs	r1, r2
 800faf0:	0018      	movs	r0, r3
 800faf2:	f000 f853 	bl	800fb9c <I2C_ITListenCplt>
 800faf6:	e040      	b.n	800fb7a <I2C_ITSlaveCplt+0x21e>
 800faf8:	687b      	ldr	r3, [r7, #4]
 800fafa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fafc:	4a26      	ldr	r2, [pc, #152]	@ (800fb98 <I2C_ITSlaveCplt+0x23c>)
 800fafe:	4293      	cmp	r3, r2
 800fb00:	d016      	beq.n	800fb30 <I2C_ITSlaveCplt+0x1d4>
 800fb02:	687b      	ldr	r3, [r7, #4]
 800fb04:	0018      	movs	r0, r3
 800fb06:	f7ff fec5 	bl	800f894 <I2C_ITSlaveSeqCplt>
 800fb0a:	687b      	ldr	r3, [r7, #4]
 800fb0c:	4a22      	ldr	r2, [pc, #136]	@ (800fb98 <I2C_ITSlaveCplt+0x23c>)
 800fb0e:	62da      	str	r2, [r3, #44]	@ 0x2c
 800fb10:	687b      	ldr	r3, [r7, #4]
 800fb12:	2241      	movs	r2, #65	@ 0x41
 800fb14:	2120      	movs	r1, #32
 800fb16:	5499      	strb	r1, [r3, r2]
 800fb18:	687b      	ldr	r3, [r7, #4]
 800fb1a:	2200      	movs	r2, #0
 800fb1c:	631a      	str	r2, [r3, #48]	@ 0x30
 800fb1e:	687b      	ldr	r3, [r7, #4]
 800fb20:	2240      	movs	r2, #64	@ 0x40
 800fb22:	2100      	movs	r1, #0
 800fb24:	5499      	strb	r1, [r3, r2]
 800fb26:	687b      	ldr	r3, [r7, #4]
 800fb28:	0018      	movs	r0, r3
 800fb2a:	f7ff fc30 	bl	800f38e <HAL_I2C_ListenCpltCallback>
 800fb2e:	e024      	b.n	800fb7a <I2C_ITSlaveCplt+0x21e>
 800fb30:	687b      	ldr	r3, [r7, #4]
 800fb32:	2241      	movs	r2, #65	@ 0x41
 800fb34:	5c9b      	ldrb	r3, [r3, r2]
 800fb36:	b2db      	uxtb	r3, r3
 800fb38:	2b22      	cmp	r3, #34	@ 0x22
 800fb3a:	d10f      	bne.n	800fb5c <I2C_ITSlaveCplt+0x200>
 800fb3c:	687b      	ldr	r3, [r7, #4]
 800fb3e:	2241      	movs	r2, #65	@ 0x41
 800fb40:	2120      	movs	r1, #32
 800fb42:	5499      	strb	r1, [r3, r2]
 800fb44:	687b      	ldr	r3, [r7, #4]
 800fb46:	2200      	movs	r2, #0
 800fb48:	631a      	str	r2, [r3, #48]	@ 0x30
 800fb4a:	687b      	ldr	r3, [r7, #4]
 800fb4c:	2240      	movs	r2, #64	@ 0x40
 800fb4e:	2100      	movs	r1, #0
 800fb50:	5499      	strb	r1, [r3, r2]
 800fb52:	687b      	ldr	r3, [r7, #4]
 800fb54:	0018      	movs	r0, r3
 800fb56:	f7ff fc02 	bl	800f35e <HAL_I2C_SlaveRxCpltCallback>
 800fb5a:	e00e      	b.n	800fb7a <I2C_ITSlaveCplt+0x21e>
 800fb5c:	687b      	ldr	r3, [r7, #4]
 800fb5e:	2241      	movs	r2, #65	@ 0x41
 800fb60:	2120      	movs	r1, #32
 800fb62:	5499      	strb	r1, [r3, r2]
 800fb64:	687b      	ldr	r3, [r7, #4]
 800fb66:	2200      	movs	r2, #0
 800fb68:	631a      	str	r2, [r3, #48]	@ 0x30
 800fb6a:	687b      	ldr	r3, [r7, #4]
 800fb6c:	2240      	movs	r2, #64	@ 0x40
 800fb6e:	2100      	movs	r1, #0
 800fb70:	5499      	strb	r1, [r3, r2]
 800fb72:	687b      	ldr	r3, [r7, #4]
 800fb74:	0018      	movs	r0, r3
 800fb76:	f7ff fbea 	bl	800f34e <HAL_I2C_SlaveTxCpltCallback>
 800fb7a:	46c0      	nop			@ (mov r8, r8)
 800fb7c:	46bd      	mov	sp, r7
 800fb7e:	b006      	add	sp, #24
 800fb80:	bd80      	pop	{r7, pc}
 800fb82:	46c0      	nop			@ (mov r8, r8)
 800fb84:	00008001 	.word	0x00008001
 800fb88:	00008002 	.word	0x00008002
 800fb8c:	fe00e800 	.word	0xfe00e800
 800fb90:	ffffbfff 	.word	0xffffbfff
 800fb94:	ffff7fff 	.word	0xffff7fff
 800fb98:	ffff0000 	.word	0xffff0000

0800fb9c <I2C_ITListenCplt>:
 800fb9c:	b580      	push	{r7, lr}
 800fb9e:	b082      	sub	sp, #8
 800fba0:	af00      	add	r7, sp, #0
 800fba2:	6078      	str	r0, [r7, #4]
 800fba4:	6039      	str	r1, [r7, #0]
 800fba6:	687b      	ldr	r3, [r7, #4]
 800fba8:	4a26      	ldr	r2, [pc, #152]	@ (800fc44 <I2C_ITListenCplt+0xa8>)
 800fbaa:	62da      	str	r2, [r3, #44]	@ 0x2c
 800fbac:	687b      	ldr	r3, [r7, #4]
 800fbae:	2200      	movs	r2, #0
 800fbb0:	631a      	str	r2, [r3, #48]	@ 0x30
 800fbb2:	687b      	ldr	r3, [r7, #4]
 800fbb4:	2241      	movs	r2, #65	@ 0x41
 800fbb6:	2120      	movs	r1, #32
 800fbb8:	5499      	strb	r1, [r3, r2]
 800fbba:	687b      	ldr	r3, [r7, #4]
 800fbbc:	2242      	movs	r2, #66	@ 0x42
 800fbbe:	2100      	movs	r1, #0
 800fbc0:	5499      	strb	r1, [r3, r2]
 800fbc2:	687b      	ldr	r3, [r7, #4]
 800fbc4:	2200      	movs	r2, #0
 800fbc6:	635a      	str	r2, [r3, #52]	@ 0x34
 800fbc8:	683b      	ldr	r3, [r7, #0]
 800fbca:	2204      	movs	r2, #4
 800fbcc:	4013      	ands	r3, r2
 800fbce:	d022      	beq.n	800fc16 <I2C_ITListenCplt+0x7a>
 800fbd0:	687b      	ldr	r3, [r7, #4]
 800fbd2:	681b      	ldr	r3, [r3, #0]
 800fbd4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800fbd6:	687b      	ldr	r3, [r7, #4]
 800fbd8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fbda:	b2d2      	uxtb	r2, r2
 800fbdc:	701a      	strb	r2, [r3, #0]
 800fbde:	687b      	ldr	r3, [r7, #4]
 800fbe0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fbe2:	1c5a      	adds	r2, r3, #1
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	625a      	str	r2, [r3, #36]	@ 0x24
 800fbe8:	687b      	ldr	r3, [r7, #4]
 800fbea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800fbec:	2b00      	cmp	r3, #0
 800fbee:	d012      	beq.n	800fc16 <I2C_ITListenCplt+0x7a>
 800fbf0:	687b      	ldr	r3, [r7, #4]
 800fbf2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800fbf4:	3b01      	subs	r3, #1
 800fbf6:	b29a      	uxth	r2, r3
 800fbf8:	687b      	ldr	r3, [r7, #4]
 800fbfa:	851a      	strh	r2, [r3, #40]	@ 0x28
 800fbfc:	687b      	ldr	r3, [r7, #4]
 800fbfe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800fc00:	b29b      	uxth	r3, r3
 800fc02:	3b01      	subs	r3, #1
 800fc04:	b29a      	uxth	r2, r3
 800fc06:	687b      	ldr	r3, [r7, #4]
 800fc08:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800fc0a:	687b      	ldr	r3, [r7, #4]
 800fc0c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fc0e:	2204      	movs	r2, #4
 800fc10:	431a      	orrs	r2, r3
 800fc12:	687b      	ldr	r3, [r7, #4]
 800fc14:	645a      	str	r2, [r3, #68]	@ 0x44
 800fc16:	4a0c      	ldr	r2, [pc, #48]	@ (800fc48 <I2C_ITListenCplt+0xac>)
 800fc18:	687b      	ldr	r3, [r7, #4]
 800fc1a:	0011      	movs	r1, r2
 800fc1c:	0018      	movs	r0, r3
 800fc1e:	f000 fbd7 	bl	80103d0 <I2C_Disable_IRQ>
 800fc22:	687b      	ldr	r3, [r7, #4]
 800fc24:	681b      	ldr	r3, [r3, #0]
 800fc26:	2210      	movs	r2, #16
 800fc28:	61da      	str	r2, [r3, #28]
 800fc2a:	687b      	ldr	r3, [r7, #4]
 800fc2c:	2240      	movs	r2, #64	@ 0x40
 800fc2e:	2100      	movs	r1, #0
 800fc30:	5499      	strb	r1, [r3, r2]
 800fc32:	687b      	ldr	r3, [r7, #4]
 800fc34:	0018      	movs	r0, r3
 800fc36:	f7ff fbaa 	bl	800f38e <HAL_I2C_ListenCpltCallback>
 800fc3a:	46c0      	nop			@ (mov r8, r8)
 800fc3c:	46bd      	mov	sp, r7
 800fc3e:	b002      	add	sp, #8
 800fc40:	bd80      	pop	{r7, pc}
 800fc42:	46c0      	nop			@ (mov r8, r8)
 800fc44:	ffff0000 	.word	0xffff0000
 800fc48:	00008003 	.word	0x00008003

0800fc4c <I2C_ITError>:
 800fc4c:	b580      	push	{r7, lr}
 800fc4e:	b084      	sub	sp, #16
 800fc50:	af00      	add	r7, sp, #0
 800fc52:	6078      	str	r0, [r7, #4]
 800fc54:	6039      	str	r1, [r7, #0]
 800fc56:	200f      	movs	r0, #15
 800fc58:	183b      	adds	r3, r7, r0
 800fc5a:	687a      	ldr	r2, [r7, #4]
 800fc5c:	2141      	movs	r1, #65	@ 0x41
 800fc5e:	5c52      	ldrb	r2, [r2, r1]
 800fc60:	701a      	strb	r2, [r3, #0]
 800fc62:	687b      	ldr	r3, [r7, #4]
 800fc64:	2242      	movs	r2, #66	@ 0x42
 800fc66:	2100      	movs	r1, #0
 800fc68:	5499      	strb	r1, [r3, r2]
 800fc6a:	687b      	ldr	r3, [r7, #4]
 800fc6c:	4a62      	ldr	r2, [pc, #392]	@ (800fdf8 <I2C_ITError+0x1ac>)
 800fc6e:	62da      	str	r2, [r3, #44]	@ 0x2c
 800fc70:	687b      	ldr	r3, [r7, #4]
 800fc72:	2200      	movs	r2, #0
 800fc74:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800fc76:	687b      	ldr	r3, [r7, #4]
 800fc78:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800fc7a:	683b      	ldr	r3, [r7, #0]
 800fc7c:	431a      	orrs	r2, r3
 800fc7e:	687b      	ldr	r3, [r7, #4]
 800fc80:	645a      	str	r2, [r3, #68]	@ 0x44
 800fc82:	183b      	adds	r3, r7, r0
 800fc84:	781b      	ldrb	r3, [r3, #0]
 800fc86:	2b28      	cmp	r3, #40	@ 0x28
 800fc88:	d007      	beq.n	800fc9a <I2C_ITError+0x4e>
 800fc8a:	183b      	adds	r3, r7, r0
 800fc8c:	781b      	ldrb	r3, [r3, #0]
 800fc8e:	2b29      	cmp	r3, #41	@ 0x29
 800fc90:	d003      	beq.n	800fc9a <I2C_ITError+0x4e>
 800fc92:	183b      	adds	r3, r7, r0
 800fc94:	781b      	ldrb	r3, [r3, #0]
 800fc96:	2b2a      	cmp	r3, #42	@ 0x2a
 800fc98:	d10c      	bne.n	800fcb4 <I2C_ITError+0x68>
 800fc9a:	687b      	ldr	r3, [r7, #4]
 800fc9c:	2103      	movs	r1, #3
 800fc9e:	0018      	movs	r0, r3
 800fca0:	f000 fb96 	bl	80103d0 <I2C_Disable_IRQ>
 800fca4:	687b      	ldr	r3, [r7, #4]
 800fca6:	2241      	movs	r2, #65	@ 0x41
 800fca8:	2128      	movs	r1, #40	@ 0x28
 800fcaa:	5499      	strb	r1, [r3, r2]
 800fcac:	687b      	ldr	r3, [r7, #4]
 800fcae:	4a53      	ldr	r2, [pc, #332]	@ (800fdfc <I2C_ITError+0x1b0>)
 800fcb0:	635a      	str	r2, [r3, #52]	@ 0x34
 800fcb2:	e012      	b.n	800fcda <I2C_ITError+0x8e>
 800fcb4:	4a52      	ldr	r2, [pc, #328]	@ (800fe00 <I2C_ITError+0x1b4>)
 800fcb6:	687b      	ldr	r3, [r7, #4]
 800fcb8:	0011      	movs	r1, r2
 800fcba:	0018      	movs	r0, r3
 800fcbc:	f000 fb88 	bl	80103d0 <I2C_Disable_IRQ>
 800fcc0:	687b      	ldr	r3, [r7, #4]
 800fcc2:	2241      	movs	r2, #65	@ 0x41
 800fcc4:	5c9b      	ldrb	r3, [r3, r2]
 800fcc6:	b2db      	uxtb	r3, r3
 800fcc8:	2b60      	cmp	r3, #96	@ 0x60
 800fcca:	d003      	beq.n	800fcd4 <I2C_ITError+0x88>
 800fccc:	687b      	ldr	r3, [r7, #4]
 800fcce:	2241      	movs	r2, #65	@ 0x41
 800fcd0:	2120      	movs	r1, #32
 800fcd2:	5499      	strb	r1, [r3, r2]
 800fcd4:	687b      	ldr	r3, [r7, #4]
 800fcd6:	2200      	movs	r2, #0
 800fcd8:	635a      	str	r2, [r3, #52]	@ 0x34
 800fcda:	687b      	ldr	r3, [r7, #4]
 800fcdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fcde:	60bb      	str	r3, [r7, #8]
 800fce0:	687b      	ldr	r3, [r7, #4]
 800fce2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fce4:	2b00      	cmp	r3, #0
 800fce6:	d03b      	beq.n	800fd60 <I2C_ITError+0x114>
 800fce8:	68bb      	ldr	r3, [r7, #8]
 800fcea:	2b11      	cmp	r3, #17
 800fcec:	d002      	beq.n	800fcf4 <I2C_ITError+0xa8>
 800fcee:	68bb      	ldr	r3, [r7, #8]
 800fcf0:	2b21      	cmp	r3, #33	@ 0x21
 800fcf2:	d135      	bne.n	800fd60 <I2C_ITError+0x114>
 800fcf4:	687b      	ldr	r3, [r7, #4]
 800fcf6:	681b      	ldr	r3, [r3, #0]
 800fcf8:	681a      	ldr	r2, [r3, #0]
 800fcfa:	2380      	movs	r3, #128	@ 0x80
 800fcfc:	01db      	lsls	r3, r3, #7
 800fcfe:	401a      	ands	r2, r3
 800fd00:	2380      	movs	r3, #128	@ 0x80
 800fd02:	01db      	lsls	r3, r3, #7
 800fd04:	429a      	cmp	r2, r3
 800fd06:	d107      	bne.n	800fd18 <I2C_ITError+0xcc>
 800fd08:	687b      	ldr	r3, [r7, #4]
 800fd0a:	681b      	ldr	r3, [r3, #0]
 800fd0c:	681a      	ldr	r2, [r3, #0]
 800fd0e:	687b      	ldr	r3, [r7, #4]
 800fd10:	681b      	ldr	r3, [r3, #0]
 800fd12:	493c      	ldr	r1, [pc, #240]	@ (800fe04 <I2C_ITError+0x1b8>)
 800fd14:	400a      	ands	r2, r1
 800fd16:	601a      	str	r2, [r3, #0]
 800fd18:	687b      	ldr	r3, [r7, #4]
 800fd1a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd1c:	0018      	movs	r0, r3
 800fd1e:	f7fe fb57 	bl	800e3d0 <HAL_DMA_GetState>
 800fd22:	0003      	movs	r3, r0
 800fd24:	2b01      	cmp	r3, #1
 800fd26:	d016      	beq.n	800fd56 <I2C_ITError+0x10a>
 800fd28:	687b      	ldr	r3, [r7, #4]
 800fd2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd2c:	4a36      	ldr	r2, [pc, #216]	@ (800fe08 <I2C_ITError+0x1bc>)
 800fd2e:	639a      	str	r2, [r3, #56]	@ 0x38
 800fd30:	687b      	ldr	r3, [r7, #4]
 800fd32:	2240      	movs	r2, #64	@ 0x40
 800fd34:	2100      	movs	r1, #0
 800fd36:	5499      	strb	r1, [r3, r2]
 800fd38:	687b      	ldr	r3, [r7, #4]
 800fd3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd3c:	0018      	movs	r0, r3
 800fd3e:	f7fe fa2b 	bl	800e198 <HAL_DMA_Abort_IT>
 800fd42:	1e03      	subs	r3, r0, #0
 800fd44:	d051      	beq.n	800fdea <I2C_ITError+0x19e>
 800fd46:	687b      	ldr	r3, [r7, #4]
 800fd48:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd4a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800fd4c:	687b      	ldr	r3, [r7, #4]
 800fd4e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd50:	0018      	movs	r0, r3
 800fd52:	4790      	blx	r2
 800fd54:	e049      	b.n	800fdea <I2C_ITError+0x19e>
 800fd56:	687b      	ldr	r3, [r7, #4]
 800fd58:	0018      	movs	r0, r3
 800fd5a:	f000 f859 	bl	800fe10 <I2C_TreatErrorCallback>
 800fd5e:	e044      	b.n	800fdea <I2C_ITError+0x19e>
 800fd60:	687b      	ldr	r3, [r7, #4]
 800fd62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fd64:	2b00      	cmp	r3, #0
 800fd66:	d03b      	beq.n	800fde0 <I2C_ITError+0x194>
 800fd68:	68bb      	ldr	r3, [r7, #8]
 800fd6a:	2b12      	cmp	r3, #18
 800fd6c:	d002      	beq.n	800fd74 <I2C_ITError+0x128>
 800fd6e:	68bb      	ldr	r3, [r7, #8]
 800fd70:	2b22      	cmp	r3, #34	@ 0x22
 800fd72:	d135      	bne.n	800fde0 <I2C_ITError+0x194>
 800fd74:	687b      	ldr	r3, [r7, #4]
 800fd76:	681b      	ldr	r3, [r3, #0]
 800fd78:	681a      	ldr	r2, [r3, #0]
 800fd7a:	2380      	movs	r3, #128	@ 0x80
 800fd7c:	021b      	lsls	r3, r3, #8
 800fd7e:	401a      	ands	r2, r3
 800fd80:	2380      	movs	r3, #128	@ 0x80
 800fd82:	021b      	lsls	r3, r3, #8
 800fd84:	429a      	cmp	r2, r3
 800fd86:	d107      	bne.n	800fd98 <I2C_ITError+0x14c>
 800fd88:	687b      	ldr	r3, [r7, #4]
 800fd8a:	681b      	ldr	r3, [r3, #0]
 800fd8c:	681a      	ldr	r2, [r3, #0]
 800fd8e:	687b      	ldr	r3, [r7, #4]
 800fd90:	681b      	ldr	r3, [r3, #0]
 800fd92:	491e      	ldr	r1, [pc, #120]	@ (800fe0c <I2C_ITError+0x1c0>)
 800fd94:	400a      	ands	r2, r1
 800fd96:	601a      	str	r2, [r3, #0]
 800fd98:	687b      	ldr	r3, [r7, #4]
 800fd9a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fd9c:	0018      	movs	r0, r3
 800fd9e:	f7fe fb17 	bl	800e3d0 <HAL_DMA_GetState>
 800fda2:	0003      	movs	r3, r0
 800fda4:	2b01      	cmp	r3, #1
 800fda6:	d016      	beq.n	800fdd6 <I2C_ITError+0x18a>
 800fda8:	687b      	ldr	r3, [r7, #4]
 800fdaa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fdac:	4a16      	ldr	r2, [pc, #88]	@ (800fe08 <I2C_ITError+0x1bc>)
 800fdae:	639a      	str	r2, [r3, #56]	@ 0x38
 800fdb0:	687b      	ldr	r3, [r7, #4]
 800fdb2:	2240      	movs	r2, #64	@ 0x40
 800fdb4:	2100      	movs	r1, #0
 800fdb6:	5499      	strb	r1, [r3, r2]
 800fdb8:	687b      	ldr	r3, [r7, #4]
 800fdba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fdbc:	0018      	movs	r0, r3
 800fdbe:	f7fe f9eb 	bl	800e198 <HAL_DMA_Abort_IT>
 800fdc2:	1e03      	subs	r3, r0, #0
 800fdc4:	d013      	beq.n	800fdee <I2C_ITError+0x1a2>
 800fdc6:	687b      	ldr	r3, [r7, #4]
 800fdc8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fdca:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800fdcc:	687b      	ldr	r3, [r7, #4]
 800fdce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fdd0:	0018      	movs	r0, r3
 800fdd2:	4790      	blx	r2
 800fdd4:	e00b      	b.n	800fdee <I2C_ITError+0x1a2>
 800fdd6:	687b      	ldr	r3, [r7, #4]
 800fdd8:	0018      	movs	r0, r3
 800fdda:	f000 f819 	bl	800fe10 <I2C_TreatErrorCallback>
 800fdde:	e006      	b.n	800fdee <I2C_ITError+0x1a2>
 800fde0:	687b      	ldr	r3, [r7, #4]
 800fde2:	0018      	movs	r0, r3
 800fde4:	f000 f814 	bl	800fe10 <I2C_TreatErrorCallback>
 800fde8:	e002      	b.n	800fdf0 <I2C_ITError+0x1a4>
 800fdea:	46c0      	nop			@ (mov r8, r8)
 800fdec:	e000      	b.n	800fdf0 <I2C_ITError+0x1a4>
 800fdee:	46c0      	nop			@ (mov r8, r8)
 800fdf0:	46c0      	nop			@ (mov r8, r8)
 800fdf2:	46bd      	mov	sp, r7
 800fdf4:	b004      	add	sp, #16
 800fdf6:	bd80      	pop	{r7, pc}
 800fdf8:	ffff0000 	.word	0xffff0000
 800fdfc:	0800f3c1 	.word	0x0800f3c1
 800fe00:	00008003 	.word	0x00008003
 800fe04:	ffffbfff 	.word	0xffffbfff
 800fe08:	0800fea7 	.word	0x0800fea7
 800fe0c:	ffff7fff 	.word	0xffff7fff

0800fe10 <I2C_TreatErrorCallback>:
 800fe10:	b580      	push	{r7, lr}
 800fe12:	b082      	sub	sp, #8
 800fe14:	af00      	add	r7, sp, #0
 800fe16:	6078      	str	r0, [r7, #4]
 800fe18:	687b      	ldr	r3, [r7, #4]
 800fe1a:	2241      	movs	r2, #65	@ 0x41
 800fe1c:	5c9b      	ldrb	r3, [r3, r2]
 800fe1e:	b2db      	uxtb	r3, r3
 800fe20:	2b60      	cmp	r3, #96	@ 0x60
 800fe22:	d10f      	bne.n	800fe44 <I2C_TreatErrorCallback+0x34>
 800fe24:	687b      	ldr	r3, [r7, #4]
 800fe26:	2241      	movs	r2, #65	@ 0x41
 800fe28:	2120      	movs	r1, #32
 800fe2a:	5499      	strb	r1, [r3, r2]
 800fe2c:	687b      	ldr	r3, [r7, #4]
 800fe2e:	2200      	movs	r2, #0
 800fe30:	631a      	str	r2, [r3, #48]	@ 0x30
 800fe32:	687b      	ldr	r3, [r7, #4]
 800fe34:	2240      	movs	r2, #64	@ 0x40
 800fe36:	2100      	movs	r1, #0
 800fe38:	5499      	strb	r1, [r3, r2]
 800fe3a:	687b      	ldr	r3, [r7, #4]
 800fe3c:	0018      	movs	r0, r3
 800fe3e:	f7ff fab6 	bl	800f3ae <HAL_I2C_AbortCpltCallback>
 800fe42:	e00a      	b.n	800fe5a <I2C_TreatErrorCallback+0x4a>
 800fe44:	687b      	ldr	r3, [r7, #4]
 800fe46:	2200      	movs	r2, #0
 800fe48:	631a      	str	r2, [r3, #48]	@ 0x30
 800fe4a:	687b      	ldr	r3, [r7, #4]
 800fe4c:	2240      	movs	r2, #64	@ 0x40
 800fe4e:	2100      	movs	r1, #0
 800fe50:	5499      	strb	r1, [r3, r2]
 800fe52:	687b      	ldr	r3, [r7, #4]
 800fe54:	0018      	movs	r0, r3
 800fe56:	f7ff faa2 	bl	800f39e <HAL_I2C_ErrorCallback>
 800fe5a:	46c0      	nop			@ (mov r8, r8)
 800fe5c:	46bd      	mov	sp, r7
 800fe5e:	b002      	add	sp, #8
 800fe60:	bd80      	pop	{r7, pc}

0800fe62 <I2C_Flush_TXDR>:
 800fe62:	b580      	push	{r7, lr}
 800fe64:	b082      	sub	sp, #8
 800fe66:	af00      	add	r7, sp, #0
 800fe68:	6078      	str	r0, [r7, #4]
 800fe6a:	687b      	ldr	r3, [r7, #4]
 800fe6c:	681b      	ldr	r3, [r3, #0]
 800fe6e:	699b      	ldr	r3, [r3, #24]
 800fe70:	2202      	movs	r2, #2
 800fe72:	4013      	ands	r3, r2
 800fe74:	2b02      	cmp	r3, #2
 800fe76:	d103      	bne.n	800fe80 <I2C_Flush_TXDR+0x1e>
 800fe78:	687b      	ldr	r3, [r7, #4]
 800fe7a:	681b      	ldr	r3, [r3, #0]
 800fe7c:	2200      	movs	r2, #0
 800fe7e:	629a      	str	r2, [r3, #40]	@ 0x28
 800fe80:	687b      	ldr	r3, [r7, #4]
 800fe82:	681b      	ldr	r3, [r3, #0]
 800fe84:	699b      	ldr	r3, [r3, #24]
 800fe86:	2201      	movs	r2, #1
 800fe88:	4013      	ands	r3, r2
 800fe8a:	2b01      	cmp	r3, #1
 800fe8c:	d007      	beq.n	800fe9e <I2C_Flush_TXDR+0x3c>
 800fe8e:	687b      	ldr	r3, [r7, #4]
 800fe90:	681b      	ldr	r3, [r3, #0]
 800fe92:	699a      	ldr	r2, [r3, #24]
 800fe94:	687b      	ldr	r3, [r7, #4]
 800fe96:	681b      	ldr	r3, [r3, #0]
 800fe98:	2101      	movs	r1, #1
 800fe9a:	430a      	orrs	r2, r1
 800fe9c:	619a      	str	r2, [r3, #24]
 800fe9e:	46c0      	nop			@ (mov r8, r8)
 800fea0:	46bd      	mov	sp, r7
 800fea2:	b002      	add	sp, #8
 800fea4:	bd80      	pop	{r7, pc}

0800fea6 <I2C_DMAAbort>:
 800fea6:	b580      	push	{r7, lr}
 800fea8:	b084      	sub	sp, #16
 800feaa:	af00      	add	r7, sp, #0
 800feac:	6078      	str	r0, [r7, #4]
 800feae:	687b      	ldr	r3, [r7, #4]
 800feb0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800feb2:	60fb      	str	r3, [r7, #12]
 800feb4:	68fb      	ldr	r3, [r7, #12]
 800feb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800feb8:	2b00      	cmp	r3, #0
 800feba:	d003      	beq.n	800fec4 <I2C_DMAAbort+0x1e>
 800febc:	68fb      	ldr	r3, [r7, #12]
 800febe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fec0:	2200      	movs	r2, #0
 800fec2:	639a      	str	r2, [r3, #56]	@ 0x38
 800fec4:	68fb      	ldr	r3, [r7, #12]
 800fec6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fec8:	2b00      	cmp	r3, #0
 800feca:	d003      	beq.n	800fed4 <I2C_DMAAbort+0x2e>
 800fecc:	68fb      	ldr	r3, [r7, #12]
 800fece:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800fed0:	2200      	movs	r2, #0
 800fed2:	639a      	str	r2, [r3, #56]	@ 0x38
 800fed4:	68fb      	ldr	r3, [r7, #12]
 800fed6:	0018      	movs	r0, r3
 800fed8:	f7ff ff9a 	bl	800fe10 <I2C_TreatErrorCallback>
 800fedc:	46c0      	nop			@ (mov r8, r8)
 800fede:	46bd      	mov	sp, r7
 800fee0:	b004      	add	sp, #16
 800fee2:	bd80      	pop	{r7, pc}

0800fee4 <I2C_WaitOnFlagUntilTimeout>:
 800fee4:	b580      	push	{r7, lr}
 800fee6:	b084      	sub	sp, #16
 800fee8:	af00      	add	r7, sp, #0
 800feea:	60f8      	str	r0, [r7, #12]
 800feec:	60b9      	str	r1, [r7, #8]
 800feee:	603b      	str	r3, [r7, #0]
 800fef0:	1dfb      	adds	r3, r7, #7
 800fef2:	701a      	strb	r2, [r3, #0]
 800fef4:	e021      	b.n	800ff3a <I2C_WaitOnFlagUntilTimeout+0x56>
 800fef6:	683b      	ldr	r3, [r7, #0]
 800fef8:	3301      	adds	r3, #1
 800fefa:	d01e      	beq.n	800ff3a <I2C_WaitOnFlagUntilTimeout+0x56>
 800fefc:	f7fd feb8 	bl	800dc70 <HAL_GetTick>
 800ff00:	0002      	movs	r2, r0
 800ff02:	69bb      	ldr	r3, [r7, #24]
 800ff04:	1ad3      	subs	r3, r2, r3
 800ff06:	683a      	ldr	r2, [r7, #0]
 800ff08:	429a      	cmp	r2, r3
 800ff0a:	d302      	bcc.n	800ff12 <I2C_WaitOnFlagUntilTimeout+0x2e>
 800ff0c:	683b      	ldr	r3, [r7, #0]
 800ff0e:	2b00      	cmp	r3, #0
 800ff10:	d113      	bne.n	800ff3a <I2C_WaitOnFlagUntilTimeout+0x56>
 800ff12:	68fb      	ldr	r3, [r7, #12]
 800ff14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ff16:	2220      	movs	r2, #32
 800ff18:	431a      	orrs	r2, r3
 800ff1a:	68fb      	ldr	r3, [r7, #12]
 800ff1c:	645a      	str	r2, [r3, #68]	@ 0x44
 800ff1e:	68fb      	ldr	r3, [r7, #12]
 800ff20:	2241      	movs	r2, #65	@ 0x41
 800ff22:	2120      	movs	r1, #32
 800ff24:	5499      	strb	r1, [r3, r2]
 800ff26:	68fb      	ldr	r3, [r7, #12]
 800ff28:	2242      	movs	r2, #66	@ 0x42
 800ff2a:	2100      	movs	r1, #0
 800ff2c:	5499      	strb	r1, [r3, r2]
 800ff2e:	68fb      	ldr	r3, [r7, #12]
 800ff30:	2240      	movs	r2, #64	@ 0x40
 800ff32:	2100      	movs	r1, #0
 800ff34:	5499      	strb	r1, [r3, r2]
 800ff36:	2301      	movs	r3, #1
 800ff38:	e00f      	b.n	800ff5a <I2C_WaitOnFlagUntilTimeout+0x76>
 800ff3a:	68fb      	ldr	r3, [r7, #12]
 800ff3c:	681b      	ldr	r3, [r3, #0]
 800ff3e:	699b      	ldr	r3, [r3, #24]
 800ff40:	68ba      	ldr	r2, [r7, #8]
 800ff42:	4013      	ands	r3, r2
 800ff44:	68ba      	ldr	r2, [r7, #8]
 800ff46:	1ad3      	subs	r3, r2, r3
 800ff48:	425a      	negs	r2, r3
 800ff4a:	4153      	adcs	r3, r2
 800ff4c:	b2db      	uxtb	r3, r3
 800ff4e:	001a      	movs	r2, r3
 800ff50:	1dfb      	adds	r3, r7, #7
 800ff52:	781b      	ldrb	r3, [r3, #0]
 800ff54:	429a      	cmp	r2, r3
 800ff56:	d0ce      	beq.n	800fef6 <I2C_WaitOnFlagUntilTimeout+0x12>
 800ff58:	2300      	movs	r3, #0
 800ff5a:	0018      	movs	r0, r3
 800ff5c:	46bd      	mov	sp, r7
 800ff5e:	b004      	add	sp, #16
 800ff60:	bd80      	pop	{r7, pc}

0800ff62 <I2C_WaitOnTXISFlagUntilTimeout>:
 800ff62:	b580      	push	{r7, lr}
 800ff64:	b084      	sub	sp, #16
 800ff66:	af00      	add	r7, sp, #0
 800ff68:	60f8      	str	r0, [r7, #12]
 800ff6a:	60b9      	str	r1, [r7, #8]
 800ff6c:	607a      	str	r2, [r7, #4]
 800ff6e:	e02b      	b.n	800ffc8 <I2C_WaitOnTXISFlagUntilTimeout+0x66>
 800ff70:	687a      	ldr	r2, [r7, #4]
 800ff72:	68b9      	ldr	r1, [r7, #8]
 800ff74:	68fb      	ldr	r3, [r7, #12]
 800ff76:	0018      	movs	r0, r3
 800ff78:	f000 f8e8 	bl	801014c <I2C_IsErrorOccurred>
 800ff7c:	1e03      	subs	r3, r0, #0
 800ff7e:	d001      	beq.n	800ff84 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 800ff80:	2301      	movs	r3, #1
 800ff82:	e029      	b.n	800ffd8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800ff84:	68bb      	ldr	r3, [r7, #8]
 800ff86:	3301      	adds	r3, #1
 800ff88:	d01e      	beq.n	800ffc8 <I2C_WaitOnTXISFlagUntilTimeout+0x66>
 800ff8a:	f7fd fe71 	bl	800dc70 <HAL_GetTick>
 800ff8e:	0002      	movs	r2, r0
 800ff90:	687b      	ldr	r3, [r7, #4]
 800ff92:	1ad3      	subs	r3, r2, r3
 800ff94:	68ba      	ldr	r2, [r7, #8]
 800ff96:	429a      	cmp	r2, r3
 800ff98:	d302      	bcc.n	800ffa0 <I2C_WaitOnTXISFlagUntilTimeout+0x3e>
 800ff9a:	68bb      	ldr	r3, [r7, #8]
 800ff9c:	2b00      	cmp	r3, #0
 800ff9e:	d113      	bne.n	800ffc8 <I2C_WaitOnTXISFlagUntilTimeout+0x66>
 800ffa0:	68fb      	ldr	r3, [r7, #12]
 800ffa2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ffa4:	2220      	movs	r2, #32
 800ffa6:	431a      	orrs	r2, r3
 800ffa8:	68fb      	ldr	r3, [r7, #12]
 800ffaa:	645a      	str	r2, [r3, #68]	@ 0x44
 800ffac:	68fb      	ldr	r3, [r7, #12]
 800ffae:	2241      	movs	r2, #65	@ 0x41
 800ffb0:	2120      	movs	r1, #32
 800ffb2:	5499      	strb	r1, [r3, r2]
 800ffb4:	68fb      	ldr	r3, [r7, #12]
 800ffb6:	2242      	movs	r2, #66	@ 0x42
 800ffb8:	2100      	movs	r1, #0
 800ffba:	5499      	strb	r1, [r3, r2]
 800ffbc:	68fb      	ldr	r3, [r7, #12]
 800ffbe:	2240      	movs	r2, #64	@ 0x40
 800ffc0:	2100      	movs	r1, #0
 800ffc2:	5499      	strb	r1, [r3, r2]
 800ffc4:	2301      	movs	r3, #1
 800ffc6:	e007      	b.n	800ffd8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800ffc8:	68fb      	ldr	r3, [r7, #12]
 800ffca:	681b      	ldr	r3, [r3, #0]
 800ffcc:	699b      	ldr	r3, [r3, #24]
 800ffce:	2202      	movs	r2, #2
 800ffd0:	4013      	ands	r3, r2
 800ffd2:	2b02      	cmp	r3, #2
 800ffd4:	d1cc      	bne.n	800ff70 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 800ffd6:	2300      	movs	r3, #0
 800ffd8:	0018      	movs	r0, r3
 800ffda:	46bd      	mov	sp, r7
 800ffdc:	b004      	add	sp, #16
 800ffde:	bd80      	pop	{r7, pc}

0800ffe0 <I2C_WaitOnSTOPFlagUntilTimeout>:
 800ffe0:	b580      	push	{r7, lr}
 800ffe2:	b084      	sub	sp, #16
 800ffe4:	af00      	add	r7, sp, #0
 800ffe6:	60f8      	str	r0, [r7, #12]
 800ffe8:	60b9      	str	r1, [r7, #8]
 800ffea:	607a      	str	r2, [r7, #4]
 800ffec:	e028      	b.n	8010040 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 800ffee:	687a      	ldr	r2, [r7, #4]
 800fff0:	68b9      	ldr	r1, [r7, #8]
 800fff2:	68fb      	ldr	r3, [r7, #12]
 800fff4:	0018      	movs	r0, r3
 800fff6:	f000 f8a9 	bl	801014c <I2C_IsErrorOccurred>
 800fffa:	1e03      	subs	r3, r0, #0
 800fffc:	d001      	beq.n	8010002 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 800fffe:	2301      	movs	r3, #1
 8010000:	e026      	b.n	8010050 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8010002:	f7fd fe35 	bl	800dc70 <HAL_GetTick>
 8010006:	0002      	movs	r2, r0
 8010008:	687b      	ldr	r3, [r7, #4]
 801000a:	1ad3      	subs	r3, r2, r3
 801000c:	68ba      	ldr	r2, [r7, #8]
 801000e:	429a      	cmp	r2, r3
 8010010:	d302      	bcc.n	8010018 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8010012:	68bb      	ldr	r3, [r7, #8]
 8010014:	2b00      	cmp	r3, #0
 8010016:	d113      	bne.n	8010040 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8010018:	68fb      	ldr	r3, [r7, #12]
 801001a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801001c:	2220      	movs	r2, #32
 801001e:	431a      	orrs	r2, r3
 8010020:	68fb      	ldr	r3, [r7, #12]
 8010022:	645a      	str	r2, [r3, #68]	@ 0x44
 8010024:	68fb      	ldr	r3, [r7, #12]
 8010026:	2241      	movs	r2, #65	@ 0x41
 8010028:	2120      	movs	r1, #32
 801002a:	5499      	strb	r1, [r3, r2]
 801002c:	68fb      	ldr	r3, [r7, #12]
 801002e:	2242      	movs	r2, #66	@ 0x42
 8010030:	2100      	movs	r1, #0
 8010032:	5499      	strb	r1, [r3, r2]
 8010034:	68fb      	ldr	r3, [r7, #12]
 8010036:	2240      	movs	r2, #64	@ 0x40
 8010038:	2100      	movs	r1, #0
 801003a:	5499      	strb	r1, [r3, r2]
 801003c:	2301      	movs	r3, #1
 801003e:	e007      	b.n	8010050 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8010040:	68fb      	ldr	r3, [r7, #12]
 8010042:	681b      	ldr	r3, [r3, #0]
 8010044:	699b      	ldr	r3, [r3, #24]
 8010046:	2220      	movs	r2, #32
 8010048:	4013      	ands	r3, r2
 801004a:	2b20      	cmp	r3, #32
 801004c:	d1cf      	bne.n	800ffee <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 801004e:	2300      	movs	r3, #0
 8010050:	0018      	movs	r0, r3
 8010052:	46bd      	mov	sp, r7
 8010054:	b004      	add	sp, #16
 8010056:	bd80      	pop	{r7, pc}

08010058 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8010058:	b580      	push	{r7, lr}
 801005a:	b084      	sub	sp, #16
 801005c:	af00      	add	r7, sp, #0
 801005e:	60f8      	str	r0, [r7, #12]
 8010060:	60b9      	str	r1, [r7, #8]
 8010062:	607a      	str	r2, [r7, #4]
 8010064:	e064      	b.n	8010130 <I2C_WaitOnRXNEFlagUntilTimeout+0xd8>
 8010066:	687a      	ldr	r2, [r7, #4]
 8010068:	68b9      	ldr	r1, [r7, #8]
 801006a:	68fb      	ldr	r3, [r7, #12]
 801006c:	0018      	movs	r0, r3
 801006e:	f000 f86d 	bl	801014c <I2C_IsErrorOccurred>
 8010072:	1e03      	subs	r3, r0, #0
 8010074:	d001      	beq.n	801007a <I2C_WaitOnRXNEFlagUntilTimeout+0x22>
 8010076:	2301      	movs	r3, #1
 8010078:	e062      	b.n	8010140 <I2C_WaitOnRXNEFlagUntilTimeout+0xe8>
 801007a:	68fb      	ldr	r3, [r7, #12]
 801007c:	681b      	ldr	r3, [r3, #0]
 801007e:	699b      	ldr	r3, [r3, #24]
 8010080:	2220      	movs	r2, #32
 8010082:	4013      	ands	r3, r2
 8010084:	2b20      	cmp	r3, #32
 8010086:	d138      	bne.n	80100fa <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8010088:	68fb      	ldr	r3, [r7, #12]
 801008a:	681b      	ldr	r3, [r3, #0]
 801008c:	699b      	ldr	r3, [r3, #24]
 801008e:	2204      	movs	r2, #4
 8010090:	4013      	ands	r3, r2
 8010092:	2b04      	cmp	r3, #4
 8010094:	d105      	bne.n	80100a2 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8010096:	68fb      	ldr	r3, [r7, #12]
 8010098:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 801009a:	2b00      	cmp	r3, #0
 801009c:	d001      	beq.n	80100a2 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 801009e:	2300      	movs	r3, #0
 80100a0:	e04e      	b.n	8010140 <I2C_WaitOnRXNEFlagUntilTimeout+0xe8>
 80100a2:	68fb      	ldr	r3, [r7, #12]
 80100a4:	681b      	ldr	r3, [r3, #0]
 80100a6:	699b      	ldr	r3, [r3, #24]
 80100a8:	2210      	movs	r2, #16
 80100aa:	4013      	ands	r3, r2
 80100ac:	2b10      	cmp	r3, #16
 80100ae:	d107      	bne.n	80100c0 <I2C_WaitOnRXNEFlagUntilTimeout+0x68>
 80100b0:	68fb      	ldr	r3, [r7, #12]
 80100b2:	681b      	ldr	r3, [r3, #0]
 80100b4:	2210      	movs	r2, #16
 80100b6:	61da      	str	r2, [r3, #28]
 80100b8:	68fb      	ldr	r3, [r7, #12]
 80100ba:	2204      	movs	r2, #4
 80100bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80100be:	e002      	b.n	80100c6 <I2C_WaitOnRXNEFlagUntilTimeout+0x6e>
 80100c0:	68fb      	ldr	r3, [r7, #12]
 80100c2:	2200      	movs	r2, #0
 80100c4:	645a      	str	r2, [r3, #68]	@ 0x44
 80100c6:	68fb      	ldr	r3, [r7, #12]
 80100c8:	681b      	ldr	r3, [r3, #0]
 80100ca:	2220      	movs	r2, #32
 80100cc:	61da      	str	r2, [r3, #28]
 80100ce:	68fb      	ldr	r3, [r7, #12]
 80100d0:	681b      	ldr	r3, [r3, #0]
 80100d2:	685a      	ldr	r2, [r3, #4]
 80100d4:	68fb      	ldr	r3, [r7, #12]
 80100d6:	681b      	ldr	r3, [r3, #0]
 80100d8:	491b      	ldr	r1, [pc, #108]	@ (8010148 <I2C_WaitOnRXNEFlagUntilTimeout+0xf0>)
 80100da:	400a      	ands	r2, r1
 80100dc:	605a      	str	r2, [r3, #4]
 80100de:	68fb      	ldr	r3, [r7, #12]
 80100e0:	2241      	movs	r2, #65	@ 0x41
 80100e2:	2120      	movs	r1, #32
 80100e4:	5499      	strb	r1, [r3, r2]
 80100e6:	68fb      	ldr	r3, [r7, #12]
 80100e8:	2242      	movs	r2, #66	@ 0x42
 80100ea:	2100      	movs	r1, #0
 80100ec:	5499      	strb	r1, [r3, r2]
 80100ee:	68fb      	ldr	r3, [r7, #12]
 80100f0:	2240      	movs	r2, #64	@ 0x40
 80100f2:	2100      	movs	r1, #0
 80100f4:	5499      	strb	r1, [r3, r2]
 80100f6:	2301      	movs	r3, #1
 80100f8:	e022      	b.n	8010140 <I2C_WaitOnRXNEFlagUntilTimeout+0xe8>
 80100fa:	f7fd fdb9 	bl	800dc70 <HAL_GetTick>
 80100fe:	0002      	movs	r2, r0
 8010100:	687b      	ldr	r3, [r7, #4]
 8010102:	1ad3      	subs	r3, r2, r3
 8010104:	68ba      	ldr	r2, [r7, #8]
 8010106:	429a      	cmp	r2, r3
 8010108:	d302      	bcc.n	8010110 <I2C_WaitOnRXNEFlagUntilTimeout+0xb8>
 801010a:	68bb      	ldr	r3, [r7, #8]
 801010c:	2b00      	cmp	r3, #0
 801010e:	d10f      	bne.n	8010130 <I2C_WaitOnRXNEFlagUntilTimeout+0xd8>
 8010110:	68fb      	ldr	r3, [r7, #12]
 8010112:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010114:	2220      	movs	r2, #32
 8010116:	431a      	orrs	r2, r3
 8010118:	68fb      	ldr	r3, [r7, #12]
 801011a:	645a      	str	r2, [r3, #68]	@ 0x44
 801011c:	68fb      	ldr	r3, [r7, #12]
 801011e:	2241      	movs	r2, #65	@ 0x41
 8010120:	2120      	movs	r1, #32
 8010122:	5499      	strb	r1, [r3, r2]
 8010124:	68fb      	ldr	r3, [r7, #12]
 8010126:	2240      	movs	r2, #64	@ 0x40
 8010128:	2100      	movs	r1, #0
 801012a:	5499      	strb	r1, [r3, r2]
 801012c:	2301      	movs	r3, #1
 801012e:	e007      	b.n	8010140 <I2C_WaitOnRXNEFlagUntilTimeout+0xe8>
 8010130:	68fb      	ldr	r3, [r7, #12]
 8010132:	681b      	ldr	r3, [r3, #0]
 8010134:	699b      	ldr	r3, [r3, #24]
 8010136:	2204      	movs	r2, #4
 8010138:	4013      	ands	r3, r2
 801013a:	2b04      	cmp	r3, #4
 801013c:	d193      	bne.n	8010066 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 801013e:	2300      	movs	r3, #0
 8010140:	0018      	movs	r0, r3
 8010142:	46bd      	mov	sp, r7
 8010144:	b004      	add	sp, #16
 8010146:	bd80      	pop	{r7, pc}
 8010148:	fe00e800 	.word	0xfe00e800

0801014c <I2C_IsErrorOccurred>:
 801014c:	b580      	push	{r7, lr}
 801014e:	b08a      	sub	sp, #40	@ 0x28
 8010150:	af00      	add	r7, sp, #0
 8010152:	60f8      	str	r0, [r7, #12]
 8010154:	60b9      	str	r1, [r7, #8]
 8010156:	607a      	str	r2, [r7, #4]
 8010158:	2327      	movs	r3, #39	@ 0x27
 801015a:	18fb      	adds	r3, r7, r3
 801015c:	2200      	movs	r2, #0
 801015e:	701a      	strb	r2, [r3, #0]
 8010160:	68fb      	ldr	r3, [r7, #12]
 8010162:	681b      	ldr	r3, [r3, #0]
 8010164:	699b      	ldr	r3, [r3, #24]
 8010166:	61bb      	str	r3, [r7, #24]
 8010168:	2300      	movs	r3, #0
 801016a:	623b      	str	r3, [r7, #32]
 801016c:	687b      	ldr	r3, [r7, #4]
 801016e:	61fb      	str	r3, [r7, #28]
 8010170:	69bb      	ldr	r3, [r7, #24]
 8010172:	2210      	movs	r2, #16
 8010174:	4013      	ands	r3, r2
 8010176:	d100      	bne.n	801017a <I2C_IsErrorOccurred+0x2e>
 8010178:	e08a      	b.n	8010290 <I2C_IsErrorOccurred+0x144>
 801017a:	68fb      	ldr	r3, [r7, #12]
 801017c:	681b      	ldr	r3, [r3, #0]
 801017e:	2210      	movs	r2, #16
 8010180:	61da      	str	r2, [r3, #28]
 8010182:	e068      	b.n	8010256 <I2C_IsErrorOccurred+0x10a>
 8010184:	2227      	movs	r2, #39	@ 0x27
 8010186:	18bb      	adds	r3, r7, r2
 8010188:	18ba      	adds	r2, r7, r2
 801018a:	7812      	ldrb	r2, [r2, #0]
 801018c:	701a      	strb	r2, [r3, #0]
 801018e:	68bb      	ldr	r3, [r7, #8]
 8010190:	3301      	adds	r3, #1
 8010192:	d060      	beq.n	8010256 <I2C_IsErrorOccurred+0x10a>
 8010194:	f7fd fd6c 	bl	800dc70 <HAL_GetTick>
 8010198:	0002      	movs	r2, r0
 801019a:	69fb      	ldr	r3, [r7, #28]
 801019c:	1ad3      	subs	r3, r2, r3
 801019e:	68ba      	ldr	r2, [r7, #8]
 80101a0:	429a      	cmp	r2, r3
 80101a2:	d302      	bcc.n	80101aa <I2C_IsErrorOccurred+0x5e>
 80101a4:	68bb      	ldr	r3, [r7, #8]
 80101a6:	2b00      	cmp	r3, #0
 80101a8:	d155      	bne.n	8010256 <I2C_IsErrorOccurred+0x10a>
 80101aa:	68fb      	ldr	r3, [r7, #12]
 80101ac:	681b      	ldr	r3, [r3, #0]
 80101ae:	685a      	ldr	r2, [r3, #4]
 80101b0:	2380      	movs	r3, #128	@ 0x80
 80101b2:	01db      	lsls	r3, r3, #7
 80101b4:	4013      	ands	r3, r2
 80101b6:	617b      	str	r3, [r7, #20]
 80101b8:	2013      	movs	r0, #19
 80101ba:	183b      	adds	r3, r7, r0
 80101bc:	68fa      	ldr	r2, [r7, #12]
 80101be:	2142      	movs	r1, #66	@ 0x42
 80101c0:	5c52      	ldrb	r2, [r2, r1]
 80101c2:	701a      	strb	r2, [r3, #0]
 80101c4:	68fb      	ldr	r3, [r7, #12]
 80101c6:	681b      	ldr	r3, [r3, #0]
 80101c8:	699a      	ldr	r2, [r3, #24]
 80101ca:	2380      	movs	r3, #128	@ 0x80
 80101cc:	021b      	lsls	r3, r3, #8
 80101ce:	401a      	ands	r2, r3
 80101d0:	2380      	movs	r3, #128	@ 0x80
 80101d2:	021b      	lsls	r3, r3, #8
 80101d4:	429a      	cmp	r2, r3
 80101d6:	d137      	bne.n	8010248 <I2C_IsErrorOccurred+0xfc>
 80101d8:	697a      	ldr	r2, [r7, #20]
 80101da:	2380      	movs	r3, #128	@ 0x80
 80101dc:	01db      	lsls	r3, r3, #7
 80101de:	429a      	cmp	r2, r3
 80101e0:	d032      	beq.n	8010248 <I2C_IsErrorOccurred+0xfc>
 80101e2:	183b      	adds	r3, r7, r0
 80101e4:	781b      	ldrb	r3, [r3, #0]
 80101e6:	2b20      	cmp	r3, #32
 80101e8:	d02e      	beq.n	8010248 <I2C_IsErrorOccurred+0xfc>
 80101ea:	68fb      	ldr	r3, [r7, #12]
 80101ec:	681b      	ldr	r3, [r3, #0]
 80101ee:	685a      	ldr	r2, [r3, #4]
 80101f0:	68fb      	ldr	r3, [r7, #12]
 80101f2:	681b      	ldr	r3, [r3, #0]
 80101f4:	2180      	movs	r1, #128	@ 0x80
 80101f6:	01c9      	lsls	r1, r1, #7
 80101f8:	430a      	orrs	r2, r1
 80101fa:	605a      	str	r2, [r3, #4]
 80101fc:	f7fd fd38 	bl	800dc70 <HAL_GetTick>
 8010200:	0003      	movs	r3, r0
 8010202:	61fb      	str	r3, [r7, #28]
 8010204:	e020      	b.n	8010248 <I2C_IsErrorOccurred+0xfc>
 8010206:	f7fd fd33 	bl	800dc70 <HAL_GetTick>
 801020a:	0002      	movs	r2, r0
 801020c:	69fb      	ldr	r3, [r7, #28]
 801020e:	1ad3      	subs	r3, r2, r3
 8010210:	2027      	movs	r0, #39	@ 0x27
 8010212:	183a      	adds	r2, r7, r0
 8010214:	1839      	adds	r1, r7, r0
 8010216:	7809      	ldrb	r1, [r1, #0]
 8010218:	7011      	strb	r1, [r2, #0]
 801021a:	2b19      	cmp	r3, #25
 801021c:	d914      	bls.n	8010248 <I2C_IsErrorOccurred+0xfc>
 801021e:	68fb      	ldr	r3, [r7, #12]
 8010220:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010222:	2220      	movs	r2, #32
 8010224:	431a      	orrs	r2, r3
 8010226:	68fb      	ldr	r3, [r7, #12]
 8010228:	645a      	str	r2, [r3, #68]	@ 0x44
 801022a:	68fb      	ldr	r3, [r7, #12]
 801022c:	2241      	movs	r2, #65	@ 0x41
 801022e:	2120      	movs	r1, #32
 8010230:	5499      	strb	r1, [r3, r2]
 8010232:	68fb      	ldr	r3, [r7, #12]
 8010234:	2242      	movs	r2, #66	@ 0x42
 8010236:	2100      	movs	r1, #0
 8010238:	5499      	strb	r1, [r3, r2]
 801023a:	68fb      	ldr	r3, [r7, #12]
 801023c:	2240      	movs	r2, #64	@ 0x40
 801023e:	2100      	movs	r1, #0
 8010240:	5499      	strb	r1, [r3, r2]
 8010242:	183b      	adds	r3, r7, r0
 8010244:	2201      	movs	r2, #1
 8010246:	701a      	strb	r2, [r3, #0]
 8010248:	68fb      	ldr	r3, [r7, #12]
 801024a:	681b      	ldr	r3, [r3, #0]
 801024c:	699b      	ldr	r3, [r3, #24]
 801024e:	2220      	movs	r2, #32
 8010250:	4013      	ands	r3, r2
 8010252:	2b20      	cmp	r3, #32
 8010254:	d1d7      	bne.n	8010206 <I2C_IsErrorOccurred+0xba>
 8010256:	68fb      	ldr	r3, [r7, #12]
 8010258:	681b      	ldr	r3, [r3, #0]
 801025a:	699b      	ldr	r3, [r3, #24]
 801025c:	2220      	movs	r2, #32
 801025e:	4013      	ands	r3, r2
 8010260:	2b20      	cmp	r3, #32
 8010262:	d004      	beq.n	801026e <I2C_IsErrorOccurred+0x122>
 8010264:	2327      	movs	r3, #39	@ 0x27
 8010266:	18fb      	adds	r3, r7, r3
 8010268:	781b      	ldrb	r3, [r3, #0]
 801026a:	2b00      	cmp	r3, #0
 801026c:	d08a      	beq.n	8010184 <I2C_IsErrorOccurred+0x38>
 801026e:	2327      	movs	r3, #39	@ 0x27
 8010270:	18fb      	adds	r3, r7, r3
 8010272:	781b      	ldrb	r3, [r3, #0]
 8010274:	2b00      	cmp	r3, #0
 8010276:	d103      	bne.n	8010280 <I2C_IsErrorOccurred+0x134>
 8010278:	68fb      	ldr	r3, [r7, #12]
 801027a:	681b      	ldr	r3, [r3, #0]
 801027c:	2220      	movs	r2, #32
 801027e:	61da      	str	r2, [r3, #28]
 8010280:	6a3b      	ldr	r3, [r7, #32]
 8010282:	2204      	movs	r2, #4
 8010284:	4313      	orrs	r3, r2
 8010286:	623b      	str	r3, [r7, #32]
 8010288:	2327      	movs	r3, #39	@ 0x27
 801028a:	18fb      	adds	r3, r7, r3
 801028c:	2201      	movs	r2, #1
 801028e:	701a      	strb	r2, [r3, #0]
 8010290:	68fb      	ldr	r3, [r7, #12]
 8010292:	681b      	ldr	r3, [r3, #0]
 8010294:	699b      	ldr	r3, [r3, #24]
 8010296:	61bb      	str	r3, [r7, #24]
 8010298:	69ba      	ldr	r2, [r7, #24]
 801029a:	2380      	movs	r3, #128	@ 0x80
 801029c:	005b      	lsls	r3, r3, #1
 801029e:	4013      	ands	r3, r2
 80102a0:	d00c      	beq.n	80102bc <I2C_IsErrorOccurred+0x170>
 80102a2:	6a3b      	ldr	r3, [r7, #32]
 80102a4:	2201      	movs	r2, #1
 80102a6:	4313      	orrs	r3, r2
 80102a8:	623b      	str	r3, [r7, #32]
 80102aa:	68fb      	ldr	r3, [r7, #12]
 80102ac:	681b      	ldr	r3, [r3, #0]
 80102ae:	2280      	movs	r2, #128	@ 0x80
 80102b0:	0052      	lsls	r2, r2, #1
 80102b2:	61da      	str	r2, [r3, #28]
 80102b4:	2327      	movs	r3, #39	@ 0x27
 80102b6:	18fb      	adds	r3, r7, r3
 80102b8:	2201      	movs	r2, #1
 80102ba:	701a      	strb	r2, [r3, #0]
 80102bc:	69ba      	ldr	r2, [r7, #24]
 80102be:	2380      	movs	r3, #128	@ 0x80
 80102c0:	00db      	lsls	r3, r3, #3
 80102c2:	4013      	ands	r3, r2
 80102c4:	d00c      	beq.n	80102e0 <I2C_IsErrorOccurred+0x194>
 80102c6:	6a3b      	ldr	r3, [r7, #32]
 80102c8:	2208      	movs	r2, #8
 80102ca:	4313      	orrs	r3, r2
 80102cc:	623b      	str	r3, [r7, #32]
 80102ce:	68fb      	ldr	r3, [r7, #12]
 80102d0:	681b      	ldr	r3, [r3, #0]
 80102d2:	2280      	movs	r2, #128	@ 0x80
 80102d4:	00d2      	lsls	r2, r2, #3
 80102d6:	61da      	str	r2, [r3, #28]
 80102d8:	2327      	movs	r3, #39	@ 0x27
 80102da:	18fb      	adds	r3, r7, r3
 80102dc:	2201      	movs	r2, #1
 80102de:	701a      	strb	r2, [r3, #0]
 80102e0:	69ba      	ldr	r2, [r7, #24]
 80102e2:	2380      	movs	r3, #128	@ 0x80
 80102e4:	009b      	lsls	r3, r3, #2
 80102e6:	4013      	ands	r3, r2
 80102e8:	d00c      	beq.n	8010304 <I2C_IsErrorOccurred+0x1b8>
 80102ea:	6a3b      	ldr	r3, [r7, #32]
 80102ec:	2202      	movs	r2, #2
 80102ee:	4313      	orrs	r3, r2
 80102f0:	623b      	str	r3, [r7, #32]
 80102f2:	68fb      	ldr	r3, [r7, #12]
 80102f4:	681b      	ldr	r3, [r3, #0]
 80102f6:	2280      	movs	r2, #128	@ 0x80
 80102f8:	0092      	lsls	r2, r2, #2
 80102fa:	61da      	str	r2, [r3, #28]
 80102fc:	2327      	movs	r3, #39	@ 0x27
 80102fe:	18fb      	adds	r3, r7, r3
 8010300:	2201      	movs	r2, #1
 8010302:	701a      	strb	r2, [r3, #0]
 8010304:	2327      	movs	r3, #39	@ 0x27
 8010306:	18fb      	adds	r3, r7, r3
 8010308:	781b      	ldrb	r3, [r3, #0]
 801030a:	2b00      	cmp	r3, #0
 801030c:	d01d      	beq.n	801034a <I2C_IsErrorOccurred+0x1fe>
 801030e:	68fb      	ldr	r3, [r7, #12]
 8010310:	0018      	movs	r0, r3
 8010312:	f7ff fda6 	bl	800fe62 <I2C_Flush_TXDR>
 8010316:	68fb      	ldr	r3, [r7, #12]
 8010318:	681b      	ldr	r3, [r3, #0]
 801031a:	685a      	ldr	r2, [r3, #4]
 801031c:	68fb      	ldr	r3, [r7, #12]
 801031e:	681b      	ldr	r3, [r3, #0]
 8010320:	490d      	ldr	r1, [pc, #52]	@ (8010358 <I2C_IsErrorOccurred+0x20c>)
 8010322:	400a      	ands	r2, r1
 8010324:	605a      	str	r2, [r3, #4]
 8010326:	68fb      	ldr	r3, [r7, #12]
 8010328:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 801032a:	6a3b      	ldr	r3, [r7, #32]
 801032c:	431a      	orrs	r2, r3
 801032e:	68fb      	ldr	r3, [r7, #12]
 8010330:	645a      	str	r2, [r3, #68]	@ 0x44
 8010332:	68fb      	ldr	r3, [r7, #12]
 8010334:	2241      	movs	r2, #65	@ 0x41
 8010336:	2120      	movs	r1, #32
 8010338:	5499      	strb	r1, [r3, r2]
 801033a:	68fb      	ldr	r3, [r7, #12]
 801033c:	2242      	movs	r2, #66	@ 0x42
 801033e:	2100      	movs	r1, #0
 8010340:	5499      	strb	r1, [r3, r2]
 8010342:	68fb      	ldr	r3, [r7, #12]
 8010344:	2240      	movs	r2, #64	@ 0x40
 8010346:	2100      	movs	r1, #0
 8010348:	5499      	strb	r1, [r3, r2]
 801034a:	2327      	movs	r3, #39	@ 0x27
 801034c:	18fb      	adds	r3, r7, r3
 801034e:	781b      	ldrb	r3, [r3, #0]
 8010350:	0018      	movs	r0, r3
 8010352:	46bd      	mov	sp, r7
 8010354:	b00a      	add	sp, #40	@ 0x28
 8010356:	bd80      	pop	{r7, pc}
 8010358:	fe00e800 	.word	0xfe00e800

0801035c <I2C_TransferConfig>:
 801035c:	b590      	push	{r4, r7, lr}
 801035e:	b087      	sub	sp, #28
 8010360:	af00      	add	r7, sp, #0
 8010362:	60f8      	str	r0, [r7, #12]
 8010364:	0008      	movs	r0, r1
 8010366:	0011      	movs	r1, r2
 8010368:	607b      	str	r3, [r7, #4]
 801036a:	240a      	movs	r4, #10
 801036c:	193b      	adds	r3, r7, r4
 801036e:	1c02      	adds	r2, r0, #0
 8010370:	801a      	strh	r2, [r3, #0]
 8010372:	2009      	movs	r0, #9
 8010374:	183b      	adds	r3, r7, r0
 8010376:	1c0a      	adds	r2, r1, #0
 8010378:	701a      	strb	r2, [r3, #0]
 801037a:	193b      	adds	r3, r7, r4
 801037c:	881b      	ldrh	r3, [r3, #0]
 801037e:	059b      	lsls	r3, r3, #22
 8010380:	0d9a      	lsrs	r2, r3, #22
 8010382:	183b      	adds	r3, r7, r0
 8010384:	781b      	ldrb	r3, [r3, #0]
 8010386:	0419      	lsls	r1, r3, #16
 8010388:	23ff      	movs	r3, #255	@ 0xff
 801038a:	041b      	lsls	r3, r3, #16
 801038c:	400b      	ands	r3, r1
 801038e:	431a      	orrs	r2, r3
 8010390:	687b      	ldr	r3, [r7, #4]
 8010392:	431a      	orrs	r2, r3
 8010394:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8010396:	4313      	orrs	r3, r2
 8010398:	005b      	lsls	r3, r3, #1
 801039a:	085b      	lsrs	r3, r3, #1
 801039c:	617b      	str	r3, [r7, #20]
 801039e:	68fb      	ldr	r3, [r7, #12]
 80103a0:	681b      	ldr	r3, [r3, #0]
 80103a2:	685b      	ldr	r3, [r3, #4]
 80103a4:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80103a6:	0d51      	lsrs	r1, r2, #21
 80103a8:	2280      	movs	r2, #128	@ 0x80
 80103aa:	00d2      	lsls	r2, r2, #3
 80103ac:	400a      	ands	r2, r1
 80103ae:	4907      	ldr	r1, [pc, #28]	@ (80103cc <I2C_TransferConfig+0x70>)
 80103b0:	430a      	orrs	r2, r1
 80103b2:	43d2      	mvns	r2, r2
 80103b4:	401a      	ands	r2, r3
 80103b6:	0011      	movs	r1, r2
 80103b8:	68fb      	ldr	r3, [r7, #12]
 80103ba:	681b      	ldr	r3, [r3, #0]
 80103bc:	697a      	ldr	r2, [r7, #20]
 80103be:	430a      	orrs	r2, r1
 80103c0:	605a      	str	r2, [r3, #4]
 80103c2:	46c0      	nop			@ (mov r8, r8)
 80103c4:	46bd      	mov	sp, r7
 80103c6:	b007      	add	sp, #28
 80103c8:	bd90      	pop	{r4, r7, pc}
 80103ca:	46c0      	nop			@ (mov r8, r8)
 80103cc:	03ff63ff 	.word	0x03ff63ff

080103d0 <I2C_Disable_IRQ>:
 80103d0:	b580      	push	{r7, lr}
 80103d2:	b084      	sub	sp, #16
 80103d4:	af00      	add	r7, sp, #0
 80103d6:	6078      	str	r0, [r7, #4]
 80103d8:	000a      	movs	r2, r1
 80103da:	1cbb      	adds	r3, r7, #2
 80103dc:	801a      	strh	r2, [r3, #0]
 80103de:	2300      	movs	r3, #0
 80103e0:	60fb      	str	r3, [r7, #12]
 80103e2:	1cbb      	adds	r3, r7, #2
 80103e4:	881b      	ldrh	r3, [r3, #0]
 80103e6:	2201      	movs	r2, #1
 80103e8:	4013      	ands	r3, r2
 80103ea:	d010      	beq.n	801040e <I2C_Disable_IRQ+0x3e>
 80103ec:	68fb      	ldr	r3, [r7, #12]
 80103ee:	2242      	movs	r2, #66	@ 0x42
 80103f0:	4313      	orrs	r3, r2
 80103f2:	60fb      	str	r3, [r7, #12]
 80103f4:	687b      	ldr	r3, [r7, #4]
 80103f6:	2241      	movs	r2, #65	@ 0x41
 80103f8:	5c9b      	ldrb	r3, [r3, r2]
 80103fa:	b2db      	uxtb	r3, r3
 80103fc:	001a      	movs	r2, r3
 80103fe:	2328      	movs	r3, #40	@ 0x28
 8010400:	4013      	ands	r3, r2
 8010402:	2b28      	cmp	r3, #40	@ 0x28
 8010404:	d003      	beq.n	801040e <I2C_Disable_IRQ+0x3e>
 8010406:	68fb      	ldr	r3, [r7, #12]
 8010408:	22b0      	movs	r2, #176	@ 0xb0
 801040a:	4313      	orrs	r3, r2
 801040c:	60fb      	str	r3, [r7, #12]
 801040e:	1cbb      	adds	r3, r7, #2
 8010410:	881b      	ldrh	r3, [r3, #0]
 8010412:	2202      	movs	r2, #2
 8010414:	4013      	ands	r3, r2
 8010416:	d010      	beq.n	801043a <I2C_Disable_IRQ+0x6a>
 8010418:	68fb      	ldr	r3, [r7, #12]
 801041a:	2244      	movs	r2, #68	@ 0x44
 801041c:	4313      	orrs	r3, r2
 801041e:	60fb      	str	r3, [r7, #12]
 8010420:	687b      	ldr	r3, [r7, #4]
 8010422:	2241      	movs	r2, #65	@ 0x41
 8010424:	5c9b      	ldrb	r3, [r3, r2]
 8010426:	b2db      	uxtb	r3, r3
 8010428:	001a      	movs	r2, r3
 801042a:	2328      	movs	r3, #40	@ 0x28
 801042c:	4013      	ands	r3, r2
 801042e:	2b28      	cmp	r3, #40	@ 0x28
 8010430:	d003      	beq.n	801043a <I2C_Disable_IRQ+0x6a>
 8010432:	68fb      	ldr	r3, [r7, #12]
 8010434:	22b0      	movs	r2, #176	@ 0xb0
 8010436:	4313      	orrs	r3, r2
 8010438:	60fb      	str	r3, [r7, #12]
 801043a:	1cbb      	adds	r3, r7, #2
 801043c:	2200      	movs	r2, #0
 801043e:	5e9b      	ldrsh	r3, [r3, r2]
 8010440:	2b00      	cmp	r3, #0
 8010442:	da03      	bge.n	801044c <I2C_Disable_IRQ+0x7c>
 8010444:	68fb      	ldr	r3, [r7, #12]
 8010446:	22b8      	movs	r2, #184	@ 0xb8
 8010448:	4313      	orrs	r3, r2
 801044a:	60fb      	str	r3, [r7, #12]
 801044c:	1cbb      	adds	r3, r7, #2
 801044e:	881b      	ldrh	r3, [r3, #0]
 8010450:	2b10      	cmp	r3, #16
 8010452:	d103      	bne.n	801045c <I2C_Disable_IRQ+0x8c>
 8010454:	68fb      	ldr	r3, [r7, #12]
 8010456:	2290      	movs	r2, #144	@ 0x90
 8010458:	4313      	orrs	r3, r2
 801045a:	60fb      	str	r3, [r7, #12]
 801045c:	1cbb      	adds	r3, r7, #2
 801045e:	881b      	ldrh	r3, [r3, #0]
 8010460:	2b20      	cmp	r3, #32
 8010462:	d103      	bne.n	801046c <I2C_Disable_IRQ+0x9c>
 8010464:	68fb      	ldr	r3, [r7, #12]
 8010466:	2220      	movs	r2, #32
 8010468:	4313      	orrs	r3, r2
 801046a:	60fb      	str	r3, [r7, #12]
 801046c:	1cbb      	adds	r3, r7, #2
 801046e:	881b      	ldrh	r3, [r3, #0]
 8010470:	2b40      	cmp	r3, #64	@ 0x40
 8010472:	d103      	bne.n	801047c <I2C_Disable_IRQ+0xac>
 8010474:	68fb      	ldr	r3, [r7, #12]
 8010476:	2240      	movs	r2, #64	@ 0x40
 8010478:	4313      	orrs	r3, r2
 801047a:	60fb      	str	r3, [r7, #12]
 801047c:	687b      	ldr	r3, [r7, #4]
 801047e:	681b      	ldr	r3, [r3, #0]
 8010480:	681a      	ldr	r2, [r3, #0]
 8010482:	68fb      	ldr	r3, [r7, #12]
 8010484:	43d9      	mvns	r1, r3
 8010486:	687b      	ldr	r3, [r7, #4]
 8010488:	681b      	ldr	r3, [r3, #0]
 801048a:	400a      	ands	r2, r1
 801048c:	601a      	str	r2, [r3, #0]
 801048e:	46c0      	nop			@ (mov r8, r8)
 8010490:	46bd      	mov	sp, r7
 8010492:	b004      	add	sp, #16
 8010494:	bd80      	pop	{r7, pc}
	...

08010498 <HAL_I2CEx_ConfigAnalogFilter>:
 8010498:	b580      	push	{r7, lr}
 801049a:	b082      	sub	sp, #8
 801049c:	af00      	add	r7, sp, #0
 801049e:	6078      	str	r0, [r7, #4]
 80104a0:	6039      	str	r1, [r7, #0]
 80104a2:	687b      	ldr	r3, [r7, #4]
 80104a4:	2241      	movs	r2, #65	@ 0x41
 80104a6:	5c9b      	ldrb	r3, [r3, r2]
 80104a8:	b2db      	uxtb	r3, r3
 80104aa:	2b20      	cmp	r3, #32
 80104ac:	d138      	bne.n	8010520 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 80104ae:	687b      	ldr	r3, [r7, #4]
 80104b0:	2240      	movs	r2, #64	@ 0x40
 80104b2:	5c9b      	ldrb	r3, [r3, r2]
 80104b4:	2b01      	cmp	r3, #1
 80104b6:	d101      	bne.n	80104bc <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80104b8:	2302      	movs	r3, #2
 80104ba:	e032      	b.n	8010522 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80104bc:	687b      	ldr	r3, [r7, #4]
 80104be:	2240      	movs	r2, #64	@ 0x40
 80104c0:	2101      	movs	r1, #1
 80104c2:	5499      	strb	r1, [r3, r2]
 80104c4:	687b      	ldr	r3, [r7, #4]
 80104c6:	2241      	movs	r2, #65	@ 0x41
 80104c8:	2124      	movs	r1, #36	@ 0x24
 80104ca:	5499      	strb	r1, [r3, r2]
 80104cc:	687b      	ldr	r3, [r7, #4]
 80104ce:	681b      	ldr	r3, [r3, #0]
 80104d0:	681a      	ldr	r2, [r3, #0]
 80104d2:	687b      	ldr	r3, [r7, #4]
 80104d4:	681b      	ldr	r3, [r3, #0]
 80104d6:	2101      	movs	r1, #1
 80104d8:	438a      	bics	r2, r1
 80104da:	601a      	str	r2, [r3, #0]
 80104dc:	687b      	ldr	r3, [r7, #4]
 80104de:	681b      	ldr	r3, [r3, #0]
 80104e0:	681a      	ldr	r2, [r3, #0]
 80104e2:	687b      	ldr	r3, [r7, #4]
 80104e4:	681b      	ldr	r3, [r3, #0]
 80104e6:	4911      	ldr	r1, [pc, #68]	@ (801052c <HAL_I2CEx_ConfigAnalogFilter+0x94>)
 80104e8:	400a      	ands	r2, r1
 80104ea:	601a      	str	r2, [r3, #0]
 80104ec:	687b      	ldr	r3, [r7, #4]
 80104ee:	681b      	ldr	r3, [r3, #0]
 80104f0:	6819      	ldr	r1, [r3, #0]
 80104f2:	687b      	ldr	r3, [r7, #4]
 80104f4:	681b      	ldr	r3, [r3, #0]
 80104f6:	683a      	ldr	r2, [r7, #0]
 80104f8:	430a      	orrs	r2, r1
 80104fa:	601a      	str	r2, [r3, #0]
 80104fc:	687b      	ldr	r3, [r7, #4]
 80104fe:	681b      	ldr	r3, [r3, #0]
 8010500:	681a      	ldr	r2, [r3, #0]
 8010502:	687b      	ldr	r3, [r7, #4]
 8010504:	681b      	ldr	r3, [r3, #0]
 8010506:	2101      	movs	r1, #1
 8010508:	430a      	orrs	r2, r1
 801050a:	601a      	str	r2, [r3, #0]
 801050c:	687b      	ldr	r3, [r7, #4]
 801050e:	2241      	movs	r2, #65	@ 0x41
 8010510:	2120      	movs	r1, #32
 8010512:	5499      	strb	r1, [r3, r2]
 8010514:	687b      	ldr	r3, [r7, #4]
 8010516:	2240      	movs	r2, #64	@ 0x40
 8010518:	2100      	movs	r1, #0
 801051a:	5499      	strb	r1, [r3, r2]
 801051c:	2300      	movs	r3, #0
 801051e:	e000      	b.n	8010522 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8010520:	2302      	movs	r3, #2
 8010522:	0018      	movs	r0, r3
 8010524:	46bd      	mov	sp, r7
 8010526:	b002      	add	sp, #8
 8010528:	bd80      	pop	{r7, pc}
 801052a:	46c0      	nop			@ (mov r8, r8)
 801052c:	ffffefff 	.word	0xffffefff

08010530 <HAL_I2CEx_ConfigDigitalFilter>:
 8010530:	b580      	push	{r7, lr}
 8010532:	b084      	sub	sp, #16
 8010534:	af00      	add	r7, sp, #0
 8010536:	6078      	str	r0, [r7, #4]
 8010538:	6039      	str	r1, [r7, #0]
 801053a:	687b      	ldr	r3, [r7, #4]
 801053c:	2241      	movs	r2, #65	@ 0x41
 801053e:	5c9b      	ldrb	r3, [r3, r2]
 8010540:	b2db      	uxtb	r3, r3
 8010542:	2b20      	cmp	r3, #32
 8010544:	d139      	bne.n	80105ba <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8010546:	687b      	ldr	r3, [r7, #4]
 8010548:	2240      	movs	r2, #64	@ 0x40
 801054a:	5c9b      	ldrb	r3, [r3, r2]
 801054c:	2b01      	cmp	r3, #1
 801054e:	d101      	bne.n	8010554 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8010550:	2302      	movs	r3, #2
 8010552:	e033      	b.n	80105bc <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8010554:	687b      	ldr	r3, [r7, #4]
 8010556:	2240      	movs	r2, #64	@ 0x40
 8010558:	2101      	movs	r1, #1
 801055a:	5499      	strb	r1, [r3, r2]
 801055c:	687b      	ldr	r3, [r7, #4]
 801055e:	2241      	movs	r2, #65	@ 0x41
 8010560:	2124      	movs	r1, #36	@ 0x24
 8010562:	5499      	strb	r1, [r3, r2]
 8010564:	687b      	ldr	r3, [r7, #4]
 8010566:	681b      	ldr	r3, [r3, #0]
 8010568:	681a      	ldr	r2, [r3, #0]
 801056a:	687b      	ldr	r3, [r7, #4]
 801056c:	681b      	ldr	r3, [r3, #0]
 801056e:	2101      	movs	r1, #1
 8010570:	438a      	bics	r2, r1
 8010572:	601a      	str	r2, [r3, #0]
 8010574:	687b      	ldr	r3, [r7, #4]
 8010576:	681b      	ldr	r3, [r3, #0]
 8010578:	681b      	ldr	r3, [r3, #0]
 801057a:	60fb      	str	r3, [r7, #12]
 801057c:	68fb      	ldr	r3, [r7, #12]
 801057e:	4a11      	ldr	r2, [pc, #68]	@ (80105c4 <HAL_I2CEx_ConfigDigitalFilter+0x94>)
 8010580:	4013      	ands	r3, r2
 8010582:	60fb      	str	r3, [r7, #12]
 8010584:	683b      	ldr	r3, [r7, #0]
 8010586:	021b      	lsls	r3, r3, #8
 8010588:	68fa      	ldr	r2, [r7, #12]
 801058a:	4313      	orrs	r3, r2
 801058c:	60fb      	str	r3, [r7, #12]
 801058e:	687b      	ldr	r3, [r7, #4]
 8010590:	681b      	ldr	r3, [r3, #0]
 8010592:	68fa      	ldr	r2, [r7, #12]
 8010594:	601a      	str	r2, [r3, #0]
 8010596:	687b      	ldr	r3, [r7, #4]
 8010598:	681b      	ldr	r3, [r3, #0]
 801059a:	681a      	ldr	r2, [r3, #0]
 801059c:	687b      	ldr	r3, [r7, #4]
 801059e:	681b      	ldr	r3, [r3, #0]
 80105a0:	2101      	movs	r1, #1
 80105a2:	430a      	orrs	r2, r1
 80105a4:	601a      	str	r2, [r3, #0]
 80105a6:	687b      	ldr	r3, [r7, #4]
 80105a8:	2241      	movs	r2, #65	@ 0x41
 80105aa:	2120      	movs	r1, #32
 80105ac:	5499      	strb	r1, [r3, r2]
 80105ae:	687b      	ldr	r3, [r7, #4]
 80105b0:	2240      	movs	r2, #64	@ 0x40
 80105b2:	2100      	movs	r1, #0
 80105b4:	5499      	strb	r1, [r3, r2]
 80105b6:	2300      	movs	r3, #0
 80105b8:	e000      	b.n	80105bc <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80105ba:	2302      	movs	r3, #2
 80105bc:	0018      	movs	r0, r3
 80105be:	46bd      	mov	sp, r7
 80105c0:	b004      	add	sp, #16
 80105c2:	bd80      	pop	{r7, pc}
 80105c4:	fffff0ff 	.word	0xfffff0ff

080105c8 <HAL_PWREx_ControlVoltageScaling>:
 80105c8:	b580      	push	{r7, lr}
 80105ca:	b084      	sub	sp, #16
 80105cc:	af00      	add	r7, sp, #0
 80105ce:	6078      	str	r0, [r7, #4]
 80105d0:	4b19      	ldr	r3, [pc, #100]	@ (8010638 <HAL_PWREx_ControlVoltageScaling+0x70>)
 80105d2:	681b      	ldr	r3, [r3, #0]
 80105d4:	4a19      	ldr	r2, [pc, #100]	@ (801063c <HAL_PWREx_ControlVoltageScaling+0x74>)
 80105d6:	4013      	ands	r3, r2
 80105d8:	0019      	movs	r1, r3
 80105da:	4b17      	ldr	r3, [pc, #92]	@ (8010638 <HAL_PWREx_ControlVoltageScaling+0x70>)
 80105dc:	687a      	ldr	r2, [r7, #4]
 80105de:	430a      	orrs	r2, r1
 80105e0:	601a      	str	r2, [r3, #0]
 80105e2:	687a      	ldr	r2, [r7, #4]
 80105e4:	2380      	movs	r3, #128	@ 0x80
 80105e6:	009b      	lsls	r3, r3, #2
 80105e8:	429a      	cmp	r2, r3
 80105ea:	d11f      	bne.n	801062c <HAL_PWREx_ControlVoltageScaling+0x64>
 80105ec:	4b14      	ldr	r3, [pc, #80]	@ (8010640 <HAL_PWREx_ControlVoltageScaling+0x78>)
 80105ee:	681a      	ldr	r2, [r3, #0]
 80105f0:	0013      	movs	r3, r2
 80105f2:	005b      	lsls	r3, r3, #1
 80105f4:	189b      	adds	r3, r3, r2
 80105f6:	005b      	lsls	r3, r3, #1
 80105f8:	4912      	ldr	r1, [pc, #72]	@ (8010644 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 80105fa:	0018      	movs	r0, r3
 80105fc:	f7ef fd94 	bl	8000128 <__udivsi3>
 8010600:	0003      	movs	r3, r0
 8010602:	3301      	adds	r3, #1
 8010604:	60fb      	str	r3, [r7, #12]
 8010606:	e008      	b.n	801061a <HAL_PWREx_ControlVoltageScaling+0x52>
 8010608:	68fb      	ldr	r3, [r7, #12]
 801060a:	2b00      	cmp	r3, #0
 801060c:	d003      	beq.n	8010616 <HAL_PWREx_ControlVoltageScaling+0x4e>
 801060e:	68fb      	ldr	r3, [r7, #12]
 8010610:	3b01      	subs	r3, #1
 8010612:	60fb      	str	r3, [r7, #12]
 8010614:	e001      	b.n	801061a <HAL_PWREx_ControlVoltageScaling+0x52>
 8010616:	2303      	movs	r3, #3
 8010618:	e009      	b.n	801062e <HAL_PWREx_ControlVoltageScaling+0x66>
 801061a:	4b07      	ldr	r3, [pc, #28]	@ (8010638 <HAL_PWREx_ControlVoltageScaling+0x70>)
 801061c:	695a      	ldr	r2, [r3, #20]
 801061e:	2380      	movs	r3, #128	@ 0x80
 8010620:	00db      	lsls	r3, r3, #3
 8010622:	401a      	ands	r2, r3
 8010624:	2380      	movs	r3, #128	@ 0x80
 8010626:	00db      	lsls	r3, r3, #3
 8010628:	429a      	cmp	r2, r3
 801062a:	d0ed      	beq.n	8010608 <HAL_PWREx_ControlVoltageScaling+0x40>
 801062c:	2300      	movs	r3, #0
 801062e:	0018      	movs	r0, r3
 8010630:	46bd      	mov	sp, r7
 8010632:	b004      	add	sp, #16
 8010634:	bd80      	pop	{r7, pc}
 8010636:	46c0      	nop			@ (mov r8, r8)
 8010638:	40007000 	.word	0x40007000
 801063c:	fffff9ff 	.word	0xfffff9ff
 8010640:	20000494 	.word	0x20000494
 8010644:	000f4240 	.word	0x000f4240

08010648 <LL_RCC_GetAPB1Prescaler>:
 8010648:	b580      	push	{r7, lr}
 801064a:	af00      	add	r7, sp, #0
 801064c:	4b03      	ldr	r3, [pc, #12]	@ (801065c <LL_RCC_GetAPB1Prescaler+0x14>)
 801064e:	689a      	ldr	r2, [r3, #8]
 8010650:	23e0      	movs	r3, #224	@ 0xe0
 8010652:	01db      	lsls	r3, r3, #7
 8010654:	4013      	ands	r3, r2
 8010656:	0018      	movs	r0, r3
 8010658:	46bd      	mov	sp, r7
 801065a:	bd80      	pop	{r7, pc}
 801065c:	40021000 	.word	0x40021000

08010660 <HAL_RCC_OscConfig>:
 8010660:	b580      	push	{r7, lr}
 8010662:	b088      	sub	sp, #32
 8010664:	af00      	add	r7, sp, #0
 8010666:	6078      	str	r0, [r7, #4]
 8010668:	687b      	ldr	r3, [r7, #4]
 801066a:	2b00      	cmp	r3, #0
 801066c:	d101      	bne.n	8010672 <HAL_RCC_OscConfig+0x12>
 801066e:	2301      	movs	r3, #1
 8010670:	e2fe      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010672:	687b      	ldr	r3, [r7, #4]
 8010674:	681b      	ldr	r3, [r3, #0]
 8010676:	2201      	movs	r2, #1
 8010678:	4013      	ands	r3, r2
 801067a:	d100      	bne.n	801067e <HAL_RCC_OscConfig+0x1e>
 801067c:	e07c      	b.n	8010778 <HAL_RCC_OscConfig+0x118>
 801067e:	4bc3      	ldr	r3, [pc, #780]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010680:	689b      	ldr	r3, [r3, #8]
 8010682:	2238      	movs	r2, #56	@ 0x38
 8010684:	4013      	ands	r3, r2
 8010686:	61bb      	str	r3, [r7, #24]
 8010688:	4bc0      	ldr	r3, [pc, #768]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 801068a:	68db      	ldr	r3, [r3, #12]
 801068c:	2203      	movs	r2, #3
 801068e:	4013      	ands	r3, r2
 8010690:	617b      	str	r3, [r7, #20]
 8010692:	69bb      	ldr	r3, [r7, #24]
 8010694:	2b10      	cmp	r3, #16
 8010696:	d102      	bne.n	801069e <HAL_RCC_OscConfig+0x3e>
 8010698:	697b      	ldr	r3, [r7, #20]
 801069a:	2b03      	cmp	r3, #3
 801069c:	d002      	beq.n	80106a4 <HAL_RCC_OscConfig+0x44>
 801069e:	69bb      	ldr	r3, [r7, #24]
 80106a0:	2b08      	cmp	r3, #8
 80106a2:	d10b      	bne.n	80106bc <HAL_RCC_OscConfig+0x5c>
 80106a4:	4bb9      	ldr	r3, [pc, #740]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80106a6:	681a      	ldr	r2, [r3, #0]
 80106a8:	2380      	movs	r3, #128	@ 0x80
 80106aa:	029b      	lsls	r3, r3, #10
 80106ac:	4013      	ands	r3, r2
 80106ae:	d062      	beq.n	8010776 <HAL_RCC_OscConfig+0x116>
 80106b0:	687b      	ldr	r3, [r7, #4]
 80106b2:	685b      	ldr	r3, [r3, #4]
 80106b4:	2b00      	cmp	r3, #0
 80106b6:	d15e      	bne.n	8010776 <HAL_RCC_OscConfig+0x116>
 80106b8:	2301      	movs	r3, #1
 80106ba:	e2d9      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 80106bc:	687b      	ldr	r3, [r7, #4]
 80106be:	685a      	ldr	r2, [r3, #4]
 80106c0:	2380      	movs	r3, #128	@ 0x80
 80106c2:	025b      	lsls	r3, r3, #9
 80106c4:	429a      	cmp	r2, r3
 80106c6:	d107      	bne.n	80106d8 <HAL_RCC_OscConfig+0x78>
 80106c8:	4bb0      	ldr	r3, [pc, #704]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80106ca:	681a      	ldr	r2, [r3, #0]
 80106cc:	4baf      	ldr	r3, [pc, #700]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80106ce:	2180      	movs	r1, #128	@ 0x80
 80106d0:	0249      	lsls	r1, r1, #9
 80106d2:	430a      	orrs	r2, r1
 80106d4:	601a      	str	r2, [r3, #0]
 80106d6:	e020      	b.n	801071a <HAL_RCC_OscConfig+0xba>
 80106d8:	687b      	ldr	r3, [r7, #4]
 80106da:	685a      	ldr	r2, [r3, #4]
 80106dc:	23a0      	movs	r3, #160	@ 0xa0
 80106de:	02db      	lsls	r3, r3, #11
 80106e0:	429a      	cmp	r2, r3
 80106e2:	d10e      	bne.n	8010702 <HAL_RCC_OscConfig+0xa2>
 80106e4:	4ba9      	ldr	r3, [pc, #676]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80106e6:	681a      	ldr	r2, [r3, #0]
 80106e8:	4ba8      	ldr	r3, [pc, #672]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80106ea:	2180      	movs	r1, #128	@ 0x80
 80106ec:	02c9      	lsls	r1, r1, #11
 80106ee:	430a      	orrs	r2, r1
 80106f0:	601a      	str	r2, [r3, #0]
 80106f2:	4ba6      	ldr	r3, [pc, #664]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80106f4:	681a      	ldr	r2, [r3, #0]
 80106f6:	4ba5      	ldr	r3, [pc, #660]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80106f8:	2180      	movs	r1, #128	@ 0x80
 80106fa:	0249      	lsls	r1, r1, #9
 80106fc:	430a      	orrs	r2, r1
 80106fe:	601a      	str	r2, [r3, #0]
 8010700:	e00b      	b.n	801071a <HAL_RCC_OscConfig+0xba>
 8010702:	4ba2      	ldr	r3, [pc, #648]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010704:	681a      	ldr	r2, [r3, #0]
 8010706:	4ba1      	ldr	r3, [pc, #644]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010708:	49a1      	ldr	r1, [pc, #644]	@ (8010990 <HAL_RCC_OscConfig+0x330>)
 801070a:	400a      	ands	r2, r1
 801070c:	601a      	str	r2, [r3, #0]
 801070e:	4b9f      	ldr	r3, [pc, #636]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010710:	681a      	ldr	r2, [r3, #0]
 8010712:	4b9e      	ldr	r3, [pc, #632]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010714:	499f      	ldr	r1, [pc, #636]	@ (8010994 <HAL_RCC_OscConfig+0x334>)
 8010716:	400a      	ands	r2, r1
 8010718:	601a      	str	r2, [r3, #0]
 801071a:	687b      	ldr	r3, [r7, #4]
 801071c:	685b      	ldr	r3, [r3, #4]
 801071e:	2b00      	cmp	r3, #0
 8010720:	d014      	beq.n	801074c <HAL_RCC_OscConfig+0xec>
 8010722:	f7fd faa5 	bl	800dc70 <HAL_GetTick>
 8010726:	0003      	movs	r3, r0
 8010728:	613b      	str	r3, [r7, #16]
 801072a:	e008      	b.n	801073e <HAL_RCC_OscConfig+0xde>
 801072c:	f7fd faa0 	bl	800dc70 <HAL_GetTick>
 8010730:	0002      	movs	r2, r0
 8010732:	693b      	ldr	r3, [r7, #16]
 8010734:	1ad3      	subs	r3, r2, r3
 8010736:	2b64      	cmp	r3, #100	@ 0x64
 8010738:	d901      	bls.n	801073e <HAL_RCC_OscConfig+0xde>
 801073a:	2303      	movs	r3, #3
 801073c:	e298      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 801073e:	4b93      	ldr	r3, [pc, #588]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010740:	681a      	ldr	r2, [r3, #0]
 8010742:	2380      	movs	r3, #128	@ 0x80
 8010744:	029b      	lsls	r3, r3, #10
 8010746:	4013      	ands	r3, r2
 8010748:	d0f0      	beq.n	801072c <HAL_RCC_OscConfig+0xcc>
 801074a:	e015      	b.n	8010778 <HAL_RCC_OscConfig+0x118>
 801074c:	f7fd fa90 	bl	800dc70 <HAL_GetTick>
 8010750:	0003      	movs	r3, r0
 8010752:	613b      	str	r3, [r7, #16]
 8010754:	e008      	b.n	8010768 <HAL_RCC_OscConfig+0x108>
 8010756:	f7fd fa8b 	bl	800dc70 <HAL_GetTick>
 801075a:	0002      	movs	r2, r0
 801075c:	693b      	ldr	r3, [r7, #16]
 801075e:	1ad3      	subs	r3, r2, r3
 8010760:	2b64      	cmp	r3, #100	@ 0x64
 8010762:	d901      	bls.n	8010768 <HAL_RCC_OscConfig+0x108>
 8010764:	2303      	movs	r3, #3
 8010766:	e283      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010768:	4b88      	ldr	r3, [pc, #544]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 801076a:	681a      	ldr	r2, [r3, #0]
 801076c:	2380      	movs	r3, #128	@ 0x80
 801076e:	029b      	lsls	r3, r3, #10
 8010770:	4013      	ands	r3, r2
 8010772:	d1f0      	bne.n	8010756 <HAL_RCC_OscConfig+0xf6>
 8010774:	e000      	b.n	8010778 <HAL_RCC_OscConfig+0x118>
 8010776:	46c0      	nop			@ (mov r8, r8)
 8010778:	687b      	ldr	r3, [r7, #4]
 801077a:	681b      	ldr	r3, [r3, #0]
 801077c:	2202      	movs	r2, #2
 801077e:	4013      	ands	r3, r2
 8010780:	d100      	bne.n	8010784 <HAL_RCC_OscConfig+0x124>
 8010782:	e099      	b.n	80108b8 <HAL_RCC_OscConfig+0x258>
 8010784:	4b81      	ldr	r3, [pc, #516]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010786:	689b      	ldr	r3, [r3, #8]
 8010788:	2238      	movs	r2, #56	@ 0x38
 801078a:	4013      	ands	r3, r2
 801078c:	61bb      	str	r3, [r7, #24]
 801078e:	4b7f      	ldr	r3, [pc, #508]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010790:	68db      	ldr	r3, [r3, #12]
 8010792:	2203      	movs	r2, #3
 8010794:	4013      	ands	r3, r2
 8010796:	617b      	str	r3, [r7, #20]
 8010798:	69bb      	ldr	r3, [r7, #24]
 801079a:	2b10      	cmp	r3, #16
 801079c:	d102      	bne.n	80107a4 <HAL_RCC_OscConfig+0x144>
 801079e:	697b      	ldr	r3, [r7, #20]
 80107a0:	2b02      	cmp	r3, #2
 80107a2:	d002      	beq.n	80107aa <HAL_RCC_OscConfig+0x14a>
 80107a4:	69bb      	ldr	r3, [r7, #24]
 80107a6:	2b00      	cmp	r3, #0
 80107a8:	d135      	bne.n	8010816 <HAL_RCC_OscConfig+0x1b6>
 80107aa:	4b78      	ldr	r3, [pc, #480]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80107ac:	681a      	ldr	r2, [r3, #0]
 80107ae:	2380      	movs	r3, #128	@ 0x80
 80107b0:	00db      	lsls	r3, r3, #3
 80107b2:	4013      	ands	r3, r2
 80107b4:	d005      	beq.n	80107c2 <HAL_RCC_OscConfig+0x162>
 80107b6:	687b      	ldr	r3, [r7, #4]
 80107b8:	68db      	ldr	r3, [r3, #12]
 80107ba:	2b00      	cmp	r3, #0
 80107bc:	d101      	bne.n	80107c2 <HAL_RCC_OscConfig+0x162>
 80107be:	2301      	movs	r3, #1
 80107c0:	e256      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 80107c2:	4b72      	ldr	r3, [pc, #456]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80107c4:	685b      	ldr	r3, [r3, #4]
 80107c6:	4a74      	ldr	r2, [pc, #464]	@ (8010998 <HAL_RCC_OscConfig+0x338>)
 80107c8:	4013      	ands	r3, r2
 80107ca:	0019      	movs	r1, r3
 80107cc:	687b      	ldr	r3, [r7, #4]
 80107ce:	695b      	ldr	r3, [r3, #20]
 80107d0:	021a      	lsls	r2, r3, #8
 80107d2:	4b6e      	ldr	r3, [pc, #440]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80107d4:	430a      	orrs	r2, r1
 80107d6:	605a      	str	r2, [r3, #4]
 80107d8:	69bb      	ldr	r3, [r7, #24]
 80107da:	2b00      	cmp	r3, #0
 80107dc:	d112      	bne.n	8010804 <HAL_RCC_OscConfig+0x1a4>
 80107de:	4b6b      	ldr	r3, [pc, #428]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80107e0:	681b      	ldr	r3, [r3, #0]
 80107e2:	4a6e      	ldr	r2, [pc, #440]	@ (801099c <HAL_RCC_OscConfig+0x33c>)
 80107e4:	4013      	ands	r3, r2
 80107e6:	0019      	movs	r1, r3
 80107e8:	687b      	ldr	r3, [r7, #4]
 80107ea:	691a      	ldr	r2, [r3, #16]
 80107ec:	4b67      	ldr	r3, [pc, #412]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80107ee:	430a      	orrs	r2, r1
 80107f0:	601a      	str	r2, [r3, #0]
 80107f2:	4b66      	ldr	r3, [pc, #408]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80107f4:	681b      	ldr	r3, [r3, #0]
 80107f6:	0adb      	lsrs	r3, r3, #11
 80107f8:	2207      	movs	r2, #7
 80107fa:	4013      	ands	r3, r2
 80107fc:	4a68      	ldr	r2, [pc, #416]	@ (80109a0 <HAL_RCC_OscConfig+0x340>)
 80107fe:	40da      	lsrs	r2, r3
 8010800:	4b68      	ldr	r3, [pc, #416]	@ (80109a4 <HAL_RCC_OscConfig+0x344>)
 8010802:	601a      	str	r2, [r3, #0]
 8010804:	4b68      	ldr	r3, [pc, #416]	@ (80109a8 <HAL_RCC_OscConfig+0x348>)
 8010806:	681b      	ldr	r3, [r3, #0]
 8010808:	0018      	movs	r0, r3
 801080a:	f7fd f9d5 	bl	800dbb8 <HAL_InitTick>
 801080e:	1e03      	subs	r3, r0, #0
 8010810:	d051      	beq.n	80108b6 <HAL_RCC_OscConfig+0x256>
 8010812:	2301      	movs	r3, #1
 8010814:	e22c      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010816:	687b      	ldr	r3, [r7, #4]
 8010818:	68db      	ldr	r3, [r3, #12]
 801081a:	2b00      	cmp	r3, #0
 801081c:	d030      	beq.n	8010880 <HAL_RCC_OscConfig+0x220>
 801081e:	4b5b      	ldr	r3, [pc, #364]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010820:	681b      	ldr	r3, [r3, #0]
 8010822:	4a5e      	ldr	r2, [pc, #376]	@ (801099c <HAL_RCC_OscConfig+0x33c>)
 8010824:	4013      	ands	r3, r2
 8010826:	0019      	movs	r1, r3
 8010828:	687b      	ldr	r3, [r7, #4]
 801082a:	691a      	ldr	r2, [r3, #16]
 801082c:	4b57      	ldr	r3, [pc, #348]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 801082e:	430a      	orrs	r2, r1
 8010830:	601a      	str	r2, [r3, #0]
 8010832:	4b56      	ldr	r3, [pc, #344]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010834:	681a      	ldr	r2, [r3, #0]
 8010836:	4b55      	ldr	r3, [pc, #340]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010838:	2180      	movs	r1, #128	@ 0x80
 801083a:	0049      	lsls	r1, r1, #1
 801083c:	430a      	orrs	r2, r1
 801083e:	601a      	str	r2, [r3, #0]
 8010840:	f7fd fa16 	bl	800dc70 <HAL_GetTick>
 8010844:	0003      	movs	r3, r0
 8010846:	613b      	str	r3, [r7, #16]
 8010848:	e008      	b.n	801085c <HAL_RCC_OscConfig+0x1fc>
 801084a:	f7fd fa11 	bl	800dc70 <HAL_GetTick>
 801084e:	0002      	movs	r2, r0
 8010850:	693b      	ldr	r3, [r7, #16]
 8010852:	1ad3      	subs	r3, r2, r3
 8010854:	2b02      	cmp	r3, #2
 8010856:	d901      	bls.n	801085c <HAL_RCC_OscConfig+0x1fc>
 8010858:	2303      	movs	r3, #3
 801085a:	e209      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 801085c:	4b4b      	ldr	r3, [pc, #300]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 801085e:	681a      	ldr	r2, [r3, #0]
 8010860:	2380      	movs	r3, #128	@ 0x80
 8010862:	00db      	lsls	r3, r3, #3
 8010864:	4013      	ands	r3, r2
 8010866:	d0f0      	beq.n	801084a <HAL_RCC_OscConfig+0x1ea>
 8010868:	4b48      	ldr	r3, [pc, #288]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 801086a:	685b      	ldr	r3, [r3, #4]
 801086c:	4a4a      	ldr	r2, [pc, #296]	@ (8010998 <HAL_RCC_OscConfig+0x338>)
 801086e:	4013      	ands	r3, r2
 8010870:	0019      	movs	r1, r3
 8010872:	687b      	ldr	r3, [r7, #4]
 8010874:	695b      	ldr	r3, [r3, #20]
 8010876:	021a      	lsls	r2, r3, #8
 8010878:	4b44      	ldr	r3, [pc, #272]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 801087a:	430a      	orrs	r2, r1
 801087c:	605a      	str	r2, [r3, #4]
 801087e:	e01b      	b.n	80108b8 <HAL_RCC_OscConfig+0x258>
 8010880:	4b42      	ldr	r3, [pc, #264]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010882:	681a      	ldr	r2, [r3, #0]
 8010884:	4b41      	ldr	r3, [pc, #260]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010886:	4949      	ldr	r1, [pc, #292]	@ (80109ac <HAL_RCC_OscConfig+0x34c>)
 8010888:	400a      	ands	r2, r1
 801088a:	601a      	str	r2, [r3, #0]
 801088c:	f7fd f9f0 	bl	800dc70 <HAL_GetTick>
 8010890:	0003      	movs	r3, r0
 8010892:	613b      	str	r3, [r7, #16]
 8010894:	e008      	b.n	80108a8 <HAL_RCC_OscConfig+0x248>
 8010896:	f7fd f9eb 	bl	800dc70 <HAL_GetTick>
 801089a:	0002      	movs	r2, r0
 801089c:	693b      	ldr	r3, [r7, #16]
 801089e:	1ad3      	subs	r3, r2, r3
 80108a0:	2b02      	cmp	r3, #2
 80108a2:	d901      	bls.n	80108a8 <HAL_RCC_OscConfig+0x248>
 80108a4:	2303      	movs	r3, #3
 80108a6:	e1e3      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 80108a8:	4b38      	ldr	r3, [pc, #224]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80108aa:	681a      	ldr	r2, [r3, #0]
 80108ac:	2380      	movs	r3, #128	@ 0x80
 80108ae:	00db      	lsls	r3, r3, #3
 80108b0:	4013      	ands	r3, r2
 80108b2:	d1f0      	bne.n	8010896 <HAL_RCC_OscConfig+0x236>
 80108b4:	e000      	b.n	80108b8 <HAL_RCC_OscConfig+0x258>
 80108b6:	46c0      	nop			@ (mov r8, r8)
 80108b8:	687b      	ldr	r3, [r7, #4]
 80108ba:	681b      	ldr	r3, [r3, #0]
 80108bc:	2208      	movs	r2, #8
 80108be:	4013      	ands	r3, r2
 80108c0:	d047      	beq.n	8010952 <HAL_RCC_OscConfig+0x2f2>
 80108c2:	4b32      	ldr	r3, [pc, #200]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80108c4:	689b      	ldr	r3, [r3, #8]
 80108c6:	2238      	movs	r2, #56	@ 0x38
 80108c8:	4013      	ands	r3, r2
 80108ca:	2b18      	cmp	r3, #24
 80108cc:	d10a      	bne.n	80108e4 <HAL_RCC_OscConfig+0x284>
 80108ce:	4b2f      	ldr	r3, [pc, #188]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80108d0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80108d2:	2202      	movs	r2, #2
 80108d4:	4013      	ands	r3, r2
 80108d6:	d03c      	beq.n	8010952 <HAL_RCC_OscConfig+0x2f2>
 80108d8:	687b      	ldr	r3, [r7, #4]
 80108da:	699b      	ldr	r3, [r3, #24]
 80108dc:	2b00      	cmp	r3, #0
 80108de:	d138      	bne.n	8010952 <HAL_RCC_OscConfig+0x2f2>
 80108e0:	2301      	movs	r3, #1
 80108e2:	e1c5      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 80108e4:	687b      	ldr	r3, [r7, #4]
 80108e6:	699b      	ldr	r3, [r3, #24]
 80108e8:	2b00      	cmp	r3, #0
 80108ea:	d019      	beq.n	8010920 <HAL_RCC_OscConfig+0x2c0>
 80108ec:	4b27      	ldr	r3, [pc, #156]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80108ee:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80108f0:	4b26      	ldr	r3, [pc, #152]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 80108f2:	2101      	movs	r1, #1
 80108f4:	430a      	orrs	r2, r1
 80108f6:	661a      	str	r2, [r3, #96]	@ 0x60
 80108f8:	f7fd f9ba 	bl	800dc70 <HAL_GetTick>
 80108fc:	0003      	movs	r3, r0
 80108fe:	613b      	str	r3, [r7, #16]
 8010900:	e008      	b.n	8010914 <HAL_RCC_OscConfig+0x2b4>
 8010902:	f7fd f9b5 	bl	800dc70 <HAL_GetTick>
 8010906:	0002      	movs	r2, r0
 8010908:	693b      	ldr	r3, [r7, #16]
 801090a:	1ad3      	subs	r3, r2, r3
 801090c:	2b02      	cmp	r3, #2
 801090e:	d901      	bls.n	8010914 <HAL_RCC_OscConfig+0x2b4>
 8010910:	2303      	movs	r3, #3
 8010912:	e1ad      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010914:	4b1d      	ldr	r3, [pc, #116]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010916:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010918:	2202      	movs	r2, #2
 801091a:	4013      	ands	r3, r2
 801091c:	d0f1      	beq.n	8010902 <HAL_RCC_OscConfig+0x2a2>
 801091e:	e018      	b.n	8010952 <HAL_RCC_OscConfig+0x2f2>
 8010920:	4b1a      	ldr	r3, [pc, #104]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010922:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8010924:	4b19      	ldr	r3, [pc, #100]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010926:	2101      	movs	r1, #1
 8010928:	438a      	bics	r2, r1
 801092a:	661a      	str	r2, [r3, #96]	@ 0x60
 801092c:	f7fd f9a0 	bl	800dc70 <HAL_GetTick>
 8010930:	0003      	movs	r3, r0
 8010932:	613b      	str	r3, [r7, #16]
 8010934:	e008      	b.n	8010948 <HAL_RCC_OscConfig+0x2e8>
 8010936:	f7fd f99b 	bl	800dc70 <HAL_GetTick>
 801093a:	0002      	movs	r2, r0
 801093c:	693b      	ldr	r3, [r7, #16]
 801093e:	1ad3      	subs	r3, r2, r3
 8010940:	2b02      	cmp	r3, #2
 8010942:	d901      	bls.n	8010948 <HAL_RCC_OscConfig+0x2e8>
 8010944:	2303      	movs	r3, #3
 8010946:	e193      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010948:	4b10      	ldr	r3, [pc, #64]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 801094a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801094c:	2202      	movs	r2, #2
 801094e:	4013      	ands	r3, r2
 8010950:	d1f1      	bne.n	8010936 <HAL_RCC_OscConfig+0x2d6>
 8010952:	687b      	ldr	r3, [r7, #4]
 8010954:	681b      	ldr	r3, [r3, #0]
 8010956:	2204      	movs	r2, #4
 8010958:	4013      	ands	r3, r2
 801095a:	d100      	bne.n	801095e <HAL_RCC_OscConfig+0x2fe>
 801095c:	e0c6      	b.n	8010aec <HAL_RCC_OscConfig+0x48c>
 801095e:	231f      	movs	r3, #31
 8010960:	18fb      	adds	r3, r7, r3
 8010962:	2200      	movs	r2, #0
 8010964:	701a      	strb	r2, [r3, #0]
 8010966:	4b09      	ldr	r3, [pc, #36]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010968:	689b      	ldr	r3, [r3, #8]
 801096a:	2238      	movs	r2, #56	@ 0x38
 801096c:	4013      	ands	r3, r2
 801096e:	2b20      	cmp	r3, #32
 8010970:	d11e      	bne.n	80109b0 <HAL_RCC_OscConfig+0x350>
 8010972:	4b06      	ldr	r3, [pc, #24]	@ (801098c <HAL_RCC_OscConfig+0x32c>)
 8010974:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010976:	2202      	movs	r2, #2
 8010978:	4013      	ands	r3, r2
 801097a:	d100      	bne.n	801097e <HAL_RCC_OscConfig+0x31e>
 801097c:	e0b6      	b.n	8010aec <HAL_RCC_OscConfig+0x48c>
 801097e:	687b      	ldr	r3, [r7, #4]
 8010980:	689b      	ldr	r3, [r3, #8]
 8010982:	2b00      	cmp	r3, #0
 8010984:	d000      	beq.n	8010988 <HAL_RCC_OscConfig+0x328>
 8010986:	e0b1      	b.n	8010aec <HAL_RCC_OscConfig+0x48c>
 8010988:	2301      	movs	r3, #1
 801098a:	e171      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 801098c:	40021000 	.word	0x40021000
 8010990:	fffeffff 	.word	0xfffeffff
 8010994:	fffbffff 	.word	0xfffbffff
 8010998:	ffff80ff 	.word	0xffff80ff
 801099c:	ffffc7ff 	.word	0xffffc7ff
 80109a0:	00f42400 	.word	0x00f42400
 80109a4:	20000494 	.word	0x20000494
 80109a8:	20000498 	.word	0x20000498
 80109ac:	fffffeff 	.word	0xfffffeff
 80109b0:	4bb1      	ldr	r3, [pc, #708]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 80109b2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80109b4:	2380      	movs	r3, #128	@ 0x80
 80109b6:	055b      	lsls	r3, r3, #21
 80109b8:	4013      	ands	r3, r2
 80109ba:	d101      	bne.n	80109c0 <HAL_RCC_OscConfig+0x360>
 80109bc:	2301      	movs	r3, #1
 80109be:	e000      	b.n	80109c2 <HAL_RCC_OscConfig+0x362>
 80109c0:	2300      	movs	r3, #0
 80109c2:	2b00      	cmp	r3, #0
 80109c4:	d011      	beq.n	80109ea <HAL_RCC_OscConfig+0x38a>
 80109c6:	4bac      	ldr	r3, [pc, #688]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 80109c8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80109ca:	4bab      	ldr	r3, [pc, #684]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 80109cc:	2180      	movs	r1, #128	@ 0x80
 80109ce:	0549      	lsls	r1, r1, #21
 80109d0:	430a      	orrs	r2, r1
 80109d2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80109d4:	4ba8      	ldr	r3, [pc, #672]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 80109d6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80109d8:	2380      	movs	r3, #128	@ 0x80
 80109da:	055b      	lsls	r3, r3, #21
 80109dc:	4013      	ands	r3, r2
 80109de:	60fb      	str	r3, [r7, #12]
 80109e0:	68fb      	ldr	r3, [r7, #12]
 80109e2:	231f      	movs	r3, #31
 80109e4:	18fb      	adds	r3, r7, r3
 80109e6:	2201      	movs	r2, #1
 80109e8:	701a      	strb	r2, [r3, #0]
 80109ea:	4ba4      	ldr	r3, [pc, #656]	@ (8010c7c <HAL_RCC_OscConfig+0x61c>)
 80109ec:	681a      	ldr	r2, [r3, #0]
 80109ee:	2380      	movs	r3, #128	@ 0x80
 80109f0:	005b      	lsls	r3, r3, #1
 80109f2:	4013      	ands	r3, r2
 80109f4:	d11a      	bne.n	8010a2c <HAL_RCC_OscConfig+0x3cc>
 80109f6:	4ba1      	ldr	r3, [pc, #644]	@ (8010c7c <HAL_RCC_OscConfig+0x61c>)
 80109f8:	681a      	ldr	r2, [r3, #0]
 80109fa:	4ba0      	ldr	r3, [pc, #640]	@ (8010c7c <HAL_RCC_OscConfig+0x61c>)
 80109fc:	2180      	movs	r1, #128	@ 0x80
 80109fe:	0049      	lsls	r1, r1, #1
 8010a00:	430a      	orrs	r2, r1
 8010a02:	601a      	str	r2, [r3, #0]
 8010a04:	f7fd f934 	bl	800dc70 <HAL_GetTick>
 8010a08:	0003      	movs	r3, r0
 8010a0a:	613b      	str	r3, [r7, #16]
 8010a0c:	e008      	b.n	8010a20 <HAL_RCC_OscConfig+0x3c0>
 8010a0e:	f7fd f92f 	bl	800dc70 <HAL_GetTick>
 8010a12:	0002      	movs	r2, r0
 8010a14:	693b      	ldr	r3, [r7, #16]
 8010a16:	1ad3      	subs	r3, r2, r3
 8010a18:	2b02      	cmp	r3, #2
 8010a1a:	d901      	bls.n	8010a20 <HAL_RCC_OscConfig+0x3c0>
 8010a1c:	2303      	movs	r3, #3
 8010a1e:	e127      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010a20:	4b96      	ldr	r3, [pc, #600]	@ (8010c7c <HAL_RCC_OscConfig+0x61c>)
 8010a22:	681a      	ldr	r2, [r3, #0]
 8010a24:	2380      	movs	r3, #128	@ 0x80
 8010a26:	005b      	lsls	r3, r3, #1
 8010a28:	4013      	ands	r3, r2
 8010a2a:	d0f0      	beq.n	8010a0e <HAL_RCC_OscConfig+0x3ae>
 8010a2c:	687b      	ldr	r3, [r7, #4]
 8010a2e:	689b      	ldr	r3, [r3, #8]
 8010a30:	2b01      	cmp	r3, #1
 8010a32:	d106      	bne.n	8010a42 <HAL_RCC_OscConfig+0x3e2>
 8010a34:	4b90      	ldr	r3, [pc, #576]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a36:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8010a38:	4b8f      	ldr	r3, [pc, #572]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a3a:	2101      	movs	r1, #1
 8010a3c:	430a      	orrs	r2, r1
 8010a3e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8010a40:	e01c      	b.n	8010a7c <HAL_RCC_OscConfig+0x41c>
 8010a42:	687b      	ldr	r3, [r7, #4]
 8010a44:	689b      	ldr	r3, [r3, #8]
 8010a46:	2b05      	cmp	r3, #5
 8010a48:	d10c      	bne.n	8010a64 <HAL_RCC_OscConfig+0x404>
 8010a4a:	4b8b      	ldr	r3, [pc, #556]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a4c:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8010a4e:	4b8a      	ldr	r3, [pc, #552]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a50:	2104      	movs	r1, #4
 8010a52:	430a      	orrs	r2, r1
 8010a54:	65da      	str	r2, [r3, #92]	@ 0x5c
 8010a56:	4b88      	ldr	r3, [pc, #544]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a58:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8010a5a:	4b87      	ldr	r3, [pc, #540]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a5c:	2101      	movs	r1, #1
 8010a5e:	430a      	orrs	r2, r1
 8010a60:	65da      	str	r2, [r3, #92]	@ 0x5c
 8010a62:	e00b      	b.n	8010a7c <HAL_RCC_OscConfig+0x41c>
 8010a64:	4b84      	ldr	r3, [pc, #528]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a66:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8010a68:	4b83      	ldr	r3, [pc, #524]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a6a:	2101      	movs	r1, #1
 8010a6c:	438a      	bics	r2, r1
 8010a6e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8010a70:	4b81      	ldr	r3, [pc, #516]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a72:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8010a74:	4b80      	ldr	r3, [pc, #512]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010a76:	2104      	movs	r1, #4
 8010a78:	438a      	bics	r2, r1
 8010a7a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8010a7c:	687b      	ldr	r3, [r7, #4]
 8010a7e:	689b      	ldr	r3, [r3, #8]
 8010a80:	2b00      	cmp	r3, #0
 8010a82:	d014      	beq.n	8010aae <HAL_RCC_OscConfig+0x44e>
 8010a84:	f7fd f8f4 	bl	800dc70 <HAL_GetTick>
 8010a88:	0003      	movs	r3, r0
 8010a8a:	613b      	str	r3, [r7, #16]
 8010a8c:	e009      	b.n	8010aa2 <HAL_RCC_OscConfig+0x442>
 8010a8e:	f7fd f8ef 	bl	800dc70 <HAL_GetTick>
 8010a92:	0002      	movs	r2, r0
 8010a94:	693b      	ldr	r3, [r7, #16]
 8010a96:	1ad3      	subs	r3, r2, r3
 8010a98:	4a79      	ldr	r2, [pc, #484]	@ (8010c80 <HAL_RCC_OscConfig+0x620>)
 8010a9a:	4293      	cmp	r3, r2
 8010a9c:	d901      	bls.n	8010aa2 <HAL_RCC_OscConfig+0x442>
 8010a9e:	2303      	movs	r3, #3
 8010aa0:	e0e6      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010aa2:	4b75      	ldr	r3, [pc, #468]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010aa4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010aa6:	2202      	movs	r2, #2
 8010aa8:	4013      	ands	r3, r2
 8010aaa:	d0f0      	beq.n	8010a8e <HAL_RCC_OscConfig+0x42e>
 8010aac:	e013      	b.n	8010ad6 <HAL_RCC_OscConfig+0x476>
 8010aae:	f7fd f8df 	bl	800dc70 <HAL_GetTick>
 8010ab2:	0003      	movs	r3, r0
 8010ab4:	613b      	str	r3, [r7, #16]
 8010ab6:	e009      	b.n	8010acc <HAL_RCC_OscConfig+0x46c>
 8010ab8:	f7fd f8da 	bl	800dc70 <HAL_GetTick>
 8010abc:	0002      	movs	r2, r0
 8010abe:	693b      	ldr	r3, [r7, #16]
 8010ac0:	1ad3      	subs	r3, r2, r3
 8010ac2:	4a6f      	ldr	r2, [pc, #444]	@ (8010c80 <HAL_RCC_OscConfig+0x620>)
 8010ac4:	4293      	cmp	r3, r2
 8010ac6:	d901      	bls.n	8010acc <HAL_RCC_OscConfig+0x46c>
 8010ac8:	2303      	movs	r3, #3
 8010aca:	e0d1      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010acc:	4b6a      	ldr	r3, [pc, #424]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010ace:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010ad0:	2202      	movs	r2, #2
 8010ad2:	4013      	ands	r3, r2
 8010ad4:	d1f0      	bne.n	8010ab8 <HAL_RCC_OscConfig+0x458>
 8010ad6:	231f      	movs	r3, #31
 8010ad8:	18fb      	adds	r3, r7, r3
 8010ada:	781b      	ldrb	r3, [r3, #0]
 8010adc:	2b01      	cmp	r3, #1
 8010ade:	d105      	bne.n	8010aec <HAL_RCC_OscConfig+0x48c>
 8010ae0:	4b65      	ldr	r3, [pc, #404]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010ae2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8010ae4:	4b64      	ldr	r3, [pc, #400]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010ae6:	4967      	ldr	r1, [pc, #412]	@ (8010c84 <HAL_RCC_OscConfig+0x624>)
 8010ae8:	400a      	ands	r2, r1
 8010aea:	63da      	str	r2, [r3, #60]	@ 0x3c
 8010aec:	687b      	ldr	r3, [r7, #4]
 8010aee:	69db      	ldr	r3, [r3, #28]
 8010af0:	2b00      	cmp	r3, #0
 8010af2:	d100      	bne.n	8010af6 <HAL_RCC_OscConfig+0x496>
 8010af4:	e0bb      	b.n	8010c6e <HAL_RCC_OscConfig+0x60e>
 8010af6:	4b60      	ldr	r3, [pc, #384]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010af8:	689b      	ldr	r3, [r3, #8]
 8010afa:	2238      	movs	r2, #56	@ 0x38
 8010afc:	4013      	ands	r3, r2
 8010afe:	2b10      	cmp	r3, #16
 8010b00:	d100      	bne.n	8010b04 <HAL_RCC_OscConfig+0x4a4>
 8010b02:	e07b      	b.n	8010bfc <HAL_RCC_OscConfig+0x59c>
 8010b04:	687b      	ldr	r3, [r7, #4]
 8010b06:	69db      	ldr	r3, [r3, #28]
 8010b08:	2b02      	cmp	r3, #2
 8010b0a:	d156      	bne.n	8010bba <HAL_RCC_OscConfig+0x55a>
 8010b0c:	4b5a      	ldr	r3, [pc, #360]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b0e:	681a      	ldr	r2, [r3, #0]
 8010b10:	4b59      	ldr	r3, [pc, #356]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b12:	495d      	ldr	r1, [pc, #372]	@ (8010c88 <HAL_RCC_OscConfig+0x628>)
 8010b14:	400a      	ands	r2, r1
 8010b16:	601a      	str	r2, [r3, #0]
 8010b18:	f7fd f8aa 	bl	800dc70 <HAL_GetTick>
 8010b1c:	0003      	movs	r3, r0
 8010b1e:	613b      	str	r3, [r7, #16]
 8010b20:	e008      	b.n	8010b34 <HAL_RCC_OscConfig+0x4d4>
 8010b22:	f7fd f8a5 	bl	800dc70 <HAL_GetTick>
 8010b26:	0002      	movs	r2, r0
 8010b28:	693b      	ldr	r3, [r7, #16]
 8010b2a:	1ad3      	subs	r3, r2, r3
 8010b2c:	2b02      	cmp	r3, #2
 8010b2e:	d901      	bls.n	8010b34 <HAL_RCC_OscConfig+0x4d4>
 8010b30:	2303      	movs	r3, #3
 8010b32:	e09d      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010b34:	4b50      	ldr	r3, [pc, #320]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b36:	681a      	ldr	r2, [r3, #0]
 8010b38:	2380      	movs	r3, #128	@ 0x80
 8010b3a:	049b      	lsls	r3, r3, #18
 8010b3c:	4013      	ands	r3, r2
 8010b3e:	d1f0      	bne.n	8010b22 <HAL_RCC_OscConfig+0x4c2>
 8010b40:	4b4d      	ldr	r3, [pc, #308]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b42:	68db      	ldr	r3, [r3, #12]
 8010b44:	4a51      	ldr	r2, [pc, #324]	@ (8010c8c <HAL_RCC_OscConfig+0x62c>)
 8010b46:	4013      	ands	r3, r2
 8010b48:	0019      	movs	r1, r3
 8010b4a:	687b      	ldr	r3, [r7, #4]
 8010b4c:	6a1a      	ldr	r2, [r3, #32]
 8010b4e:	687b      	ldr	r3, [r7, #4]
 8010b50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010b52:	431a      	orrs	r2, r3
 8010b54:	687b      	ldr	r3, [r7, #4]
 8010b56:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010b58:	021b      	lsls	r3, r3, #8
 8010b5a:	431a      	orrs	r2, r3
 8010b5c:	687b      	ldr	r3, [r7, #4]
 8010b5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010b60:	431a      	orrs	r2, r3
 8010b62:	687b      	ldr	r3, [r7, #4]
 8010b64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010b66:	431a      	orrs	r2, r3
 8010b68:	687b      	ldr	r3, [r7, #4]
 8010b6a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010b6c:	431a      	orrs	r2, r3
 8010b6e:	4b42      	ldr	r3, [pc, #264]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b70:	430a      	orrs	r2, r1
 8010b72:	60da      	str	r2, [r3, #12]
 8010b74:	4b40      	ldr	r3, [pc, #256]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b76:	681a      	ldr	r2, [r3, #0]
 8010b78:	4b3f      	ldr	r3, [pc, #252]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b7a:	2180      	movs	r1, #128	@ 0x80
 8010b7c:	0449      	lsls	r1, r1, #17
 8010b7e:	430a      	orrs	r2, r1
 8010b80:	601a      	str	r2, [r3, #0]
 8010b82:	4b3d      	ldr	r3, [pc, #244]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b84:	68da      	ldr	r2, [r3, #12]
 8010b86:	4b3c      	ldr	r3, [pc, #240]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010b88:	2180      	movs	r1, #128	@ 0x80
 8010b8a:	0549      	lsls	r1, r1, #21
 8010b8c:	430a      	orrs	r2, r1
 8010b8e:	60da      	str	r2, [r3, #12]
 8010b90:	f7fd f86e 	bl	800dc70 <HAL_GetTick>
 8010b94:	0003      	movs	r3, r0
 8010b96:	613b      	str	r3, [r7, #16]
 8010b98:	e008      	b.n	8010bac <HAL_RCC_OscConfig+0x54c>
 8010b9a:	f7fd f869 	bl	800dc70 <HAL_GetTick>
 8010b9e:	0002      	movs	r2, r0
 8010ba0:	693b      	ldr	r3, [r7, #16]
 8010ba2:	1ad3      	subs	r3, r2, r3
 8010ba4:	2b02      	cmp	r3, #2
 8010ba6:	d901      	bls.n	8010bac <HAL_RCC_OscConfig+0x54c>
 8010ba8:	2303      	movs	r3, #3
 8010baa:	e061      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010bac:	4b32      	ldr	r3, [pc, #200]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010bae:	681a      	ldr	r2, [r3, #0]
 8010bb0:	2380      	movs	r3, #128	@ 0x80
 8010bb2:	049b      	lsls	r3, r3, #18
 8010bb4:	4013      	ands	r3, r2
 8010bb6:	d0f0      	beq.n	8010b9a <HAL_RCC_OscConfig+0x53a>
 8010bb8:	e059      	b.n	8010c6e <HAL_RCC_OscConfig+0x60e>
 8010bba:	4b2f      	ldr	r3, [pc, #188]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010bbc:	681a      	ldr	r2, [r3, #0]
 8010bbe:	4b2e      	ldr	r3, [pc, #184]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010bc0:	4931      	ldr	r1, [pc, #196]	@ (8010c88 <HAL_RCC_OscConfig+0x628>)
 8010bc2:	400a      	ands	r2, r1
 8010bc4:	601a      	str	r2, [r3, #0]
 8010bc6:	f7fd f853 	bl	800dc70 <HAL_GetTick>
 8010bca:	0003      	movs	r3, r0
 8010bcc:	613b      	str	r3, [r7, #16]
 8010bce:	e008      	b.n	8010be2 <HAL_RCC_OscConfig+0x582>
 8010bd0:	f7fd f84e 	bl	800dc70 <HAL_GetTick>
 8010bd4:	0002      	movs	r2, r0
 8010bd6:	693b      	ldr	r3, [r7, #16]
 8010bd8:	1ad3      	subs	r3, r2, r3
 8010bda:	2b02      	cmp	r3, #2
 8010bdc:	d901      	bls.n	8010be2 <HAL_RCC_OscConfig+0x582>
 8010bde:	2303      	movs	r3, #3
 8010be0:	e046      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010be2:	4b25      	ldr	r3, [pc, #148]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010be4:	681a      	ldr	r2, [r3, #0]
 8010be6:	2380      	movs	r3, #128	@ 0x80
 8010be8:	049b      	lsls	r3, r3, #18
 8010bea:	4013      	ands	r3, r2
 8010bec:	d1f0      	bne.n	8010bd0 <HAL_RCC_OscConfig+0x570>
 8010bee:	4b22      	ldr	r3, [pc, #136]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010bf0:	68da      	ldr	r2, [r3, #12]
 8010bf2:	4b21      	ldr	r3, [pc, #132]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010bf4:	4926      	ldr	r1, [pc, #152]	@ (8010c90 <HAL_RCC_OscConfig+0x630>)
 8010bf6:	400a      	ands	r2, r1
 8010bf8:	60da      	str	r2, [r3, #12]
 8010bfa:	e038      	b.n	8010c6e <HAL_RCC_OscConfig+0x60e>
 8010bfc:	687b      	ldr	r3, [r7, #4]
 8010bfe:	69db      	ldr	r3, [r3, #28]
 8010c00:	2b01      	cmp	r3, #1
 8010c02:	d101      	bne.n	8010c08 <HAL_RCC_OscConfig+0x5a8>
 8010c04:	2301      	movs	r3, #1
 8010c06:	e033      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010c08:	4b1b      	ldr	r3, [pc, #108]	@ (8010c78 <HAL_RCC_OscConfig+0x618>)
 8010c0a:	68db      	ldr	r3, [r3, #12]
 8010c0c:	617b      	str	r3, [r7, #20]
 8010c0e:	697b      	ldr	r3, [r7, #20]
 8010c10:	2203      	movs	r2, #3
 8010c12:	401a      	ands	r2, r3
 8010c14:	687b      	ldr	r3, [r7, #4]
 8010c16:	6a1b      	ldr	r3, [r3, #32]
 8010c18:	429a      	cmp	r2, r3
 8010c1a:	d126      	bne.n	8010c6a <HAL_RCC_OscConfig+0x60a>
 8010c1c:	697b      	ldr	r3, [r7, #20]
 8010c1e:	2270      	movs	r2, #112	@ 0x70
 8010c20:	401a      	ands	r2, r3
 8010c22:	687b      	ldr	r3, [r7, #4]
 8010c24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010c26:	429a      	cmp	r2, r3
 8010c28:	d11f      	bne.n	8010c6a <HAL_RCC_OscConfig+0x60a>
 8010c2a:	697a      	ldr	r2, [r7, #20]
 8010c2c:	23fe      	movs	r3, #254	@ 0xfe
 8010c2e:	01db      	lsls	r3, r3, #7
 8010c30:	401a      	ands	r2, r3
 8010c32:	687b      	ldr	r3, [r7, #4]
 8010c34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010c36:	021b      	lsls	r3, r3, #8
 8010c38:	429a      	cmp	r2, r3
 8010c3a:	d116      	bne.n	8010c6a <HAL_RCC_OscConfig+0x60a>
 8010c3c:	697a      	ldr	r2, [r7, #20]
 8010c3e:	23f8      	movs	r3, #248	@ 0xf8
 8010c40:	039b      	lsls	r3, r3, #14
 8010c42:	401a      	ands	r2, r3
 8010c44:	687b      	ldr	r3, [r7, #4]
 8010c46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010c48:	429a      	cmp	r2, r3
 8010c4a:	d10e      	bne.n	8010c6a <HAL_RCC_OscConfig+0x60a>
 8010c4c:	697a      	ldr	r2, [r7, #20]
 8010c4e:	23e0      	movs	r3, #224	@ 0xe0
 8010c50:	051b      	lsls	r3, r3, #20
 8010c52:	401a      	ands	r2, r3
 8010c54:	687b      	ldr	r3, [r7, #4]
 8010c56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010c58:	429a      	cmp	r2, r3
 8010c5a:	d106      	bne.n	8010c6a <HAL_RCC_OscConfig+0x60a>
 8010c5c:	697b      	ldr	r3, [r7, #20]
 8010c5e:	0f5b      	lsrs	r3, r3, #29
 8010c60:	075a      	lsls	r2, r3, #29
 8010c62:	687b      	ldr	r3, [r7, #4]
 8010c64:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010c66:	429a      	cmp	r2, r3
 8010c68:	d001      	beq.n	8010c6e <HAL_RCC_OscConfig+0x60e>
 8010c6a:	2301      	movs	r3, #1
 8010c6c:	e000      	b.n	8010c70 <HAL_RCC_OscConfig+0x610>
 8010c6e:	2300      	movs	r3, #0
 8010c70:	0018      	movs	r0, r3
 8010c72:	46bd      	mov	sp, r7
 8010c74:	b008      	add	sp, #32
 8010c76:	bd80      	pop	{r7, pc}
 8010c78:	40021000 	.word	0x40021000
 8010c7c:	40007000 	.word	0x40007000
 8010c80:	00001388 	.word	0x00001388
 8010c84:	efffffff 	.word	0xefffffff
 8010c88:	feffffff 	.word	0xfeffffff
 8010c8c:	11c1808c 	.word	0x11c1808c
 8010c90:	eefefffc 	.word	0xeefefffc

08010c94 <HAL_RCC_ClockConfig>:
 8010c94:	b580      	push	{r7, lr}
 8010c96:	b084      	sub	sp, #16
 8010c98:	af00      	add	r7, sp, #0
 8010c9a:	6078      	str	r0, [r7, #4]
 8010c9c:	6039      	str	r1, [r7, #0]
 8010c9e:	687b      	ldr	r3, [r7, #4]
 8010ca0:	2b00      	cmp	r3, #0
 8010ca2:	d101      	bne.n	8010ca8 <HAL_RCC_ClockConfig+0x14>
 8010ca4:	2301      	movs	r3, #1
 8010ca6:	e0e9      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010ca8:	4b76      	ldr	r3, [pc, #472]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010caa:	681b      	ldr	r3, [r3, #0]
 8010cac:	2207      	movs	r2, #7
 8010cae:	4013      	ands	r3, r2
 8010cb0:	683a      	ldr	r2, [r7, #0]
 8010cb2:	429a      	cmp	r2, r3
 8010cb4:	d91e      	bls.n	8010cf4 <HAL_RCC_ClockConfig+0x60>
 8010cb6:	4b73      	ldr	r3, [pc, #460]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010cb8:	681b      	ldr	r3, [r3, #0]
 8010cba:	2207      	movs	r2, #7
 8010cbc:	4393      	bics	r3, r2
 8010cbe:	0019      	movs	r1, r3
 8010cc0:	4b70      	ldr	r3, [pc, #448]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010cc2:	683a      	ldr	r2, [r7, #0]
 8010cc4:	430a      	orrs	r2, r1
 8010cc6:	601a      	str	r2, [r3, #0]
 8010cc8:	f7fc ffd2 	bl	800dc70 <HAL_GetTick>
 8010ccc:	0003      	movs	r3, r0
 8010cce:	60fb      	str	r3, [r7, #12]
 8010cd0:	e009      	b.n	8010ce6 <HAL_RCC_ClockConfig+0x52>
 8010cd2:	f7fc ffcd 	bl	800dc70 <HAL_GetTick>
 8010cd6:	0002      	movs	r2, r0
 8010cd8:	68fb      	ldr	r3, [r7, #12]
 8010cda:	1ad3      	subs	r3, r2, r3
 8010cdc:	4a6a      	ldr	r2, [pc, #424]	@ (8010e88 <HAL_RCC_ClockConfig+0x1f4>)
 8010cde:	4293      	cmp	r3, r2
 8010ce0:	d901      	bls.n	8010ce6 <HAL_RCC_ClockConfig+0x52>
 8010ce2:	2303      	movs	r3, #3
 8010ce4:	e0ca      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010ce6:	4b67      	ldr	r3, [pc, #412]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010ce8:	681b      	ldr	r3, [r3, #0]
 8010cea:	2207      	movs	r2, #7
 8010cec:	4013      	ands	r3, r2
 8010cee:	683a      	ldr	r2, [r7, #0]
 8010cf0:	429a      	cmp	r2, r3
 8010cf2:	d1ee      	bne.n	8010cd2 <HAL_RCC_ClockConfig+0x3e>
 8010cf4:	687b      	ldr	r3, [r7, #4]
 8010cf6:	681b      	ldr	r3, [r3, #0]
 8010cf8:	2202      	movs	r2, #2
 8010cfa:	4013      	ands	r3, r2
 8010cfc:	d015      	beq.n	8010d2a <HAL_RCC_ClockConfig+0x96>
 8010cfe:	687b      	ldr	r3, [r7, #4]
 8010d00:	681b      	ldr	r3, [r3, #0]
 8010d02:	2204      	movs	r2, #4
 8010d04:	4013      	ands	r3, r2
 8010d06:	d006      	beq.n	8010d16 <HAL_RCC_ClockConfig+0x82>
 8010d08:	4b60      	ldr	r3, [pc, #384]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d0a:	689a      	ldr	r2, [r3, #8]
 8010d0c:	4b5f      	ldr	r3, [pc, #380]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d0e:	21e0      	movs	r1, #224	@ 0xe0
 8010d10:	01c9      	lsls	r1, r1, #7
 8010d12:	430a      	orrs	r2, r1
 8010d14:	609a      	str	r2, [r3, #8]
 8010d16:	4b5d      	ldr	r3, [pc, #372]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d18:	689b      	ldr	r3, [r3, #8]
 8010d1a:	4a5d      	ldr	r2, [pc, #372]	@ (8010e90 <HAL_RCC_ClockConfig+0x1fc>)
 8010d1c:	4013      	ands	r3, r2
 8010d1e:	0019      	movs	r1, r3
 8010d20:	687b      	ldr	r3, [r7, #4]
 8010d22:	689a      	ldr	r2, [r3, #8]
 8010d24:	4b59      	ldr	r3, [pc, #356]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d26:	430a      	orrs	r2, r1
 8010d28:	609a      	str	r2, [r3, #8]
 8010d2a:	687b      	ldr	r3, [r7, #4]
 8010d2c:	681b      	ldr	r3, [r3, #0]
 8010d2e:	2201      	movs	r2, #1
 8010d30:	4013      	ands	r3, r2
 8010d32:	d057      	beq.n	8010de4 <HAL_RCC_ClockConfig+0x150>
 8010d34:	687b      	ldr	r3, [r7, #4]
 8010d36:	685b      	ldr	r3, [r3, #4]
 8010d38:	2b01      	cmp	r3, #1
 8010d3a:	d107      	bne.n	8010d4c <HAL_RCC_ClockConfig+0xb8>
 8010d3c:	4b53      	ldr	r3, [pc, #332]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d3e:	681a      	ldr	r2, [r3, #0]
 8010d40:	2380      	movs	r3, #128	@ 0x80
 8010d42:	029b      	lsls	r3, r3, #10
 8010d44:	4013      	ands	r3, r2
 8010d46:	d12b      	bne.n	8010da0 <HAL_RCC_ClockConfig+0x10c>
 8010d48:	2301      	movs	r3, #1
 8010d4a:	e097      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010d4c:	687b      	ldr	r3, [r7, #4]
 8010d4e:	685b      	ldr	r3, [r3, #4]
 8010d50:	2b02      	cmp	r3, #2
 8010d52:	d107      	bne.n	8010d64 <HAL_RCC_ClockConfig+0xd0>
 8010d54:	4b4d      	ldr	r3, [pc, #308]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d56:	681a      	ldr	r2, [r3, #0]
 8010d58:	2380      	movs	r3, #128	@ 0x80
 8010d5a:	049b      	lsls	r3, r3, #18
 8010d5c:	4013      	ands	r3, r2
 8010d5e:	d11f      	bne.n	8010da0 <HAL_RCC_ClockConfig+0x10c>
 8010d60:	2301      	movs	r3, #1
 8010d62:	e08b      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010d64:	687b      	ldr	r3, [r7, #4]
 8010d66:	685b      	ldr	r3, [r3, #4]
 8010d68:	2b00      	cmp	r3, #0
 8010d6a:	d107      	bne.n	8010d7c <HAL_RCC_ClockConfig+0xe8>
 8010d6c:	4b47      	ldr	r3, [pc, #284]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d6e:	681a      	ldr	r2, [r3, #0]
 8010d70:	2380      	movs	r3, #128	@ 0x80
 8010d72:	00db      	lsls	r3, r3, #3
 8010d74:	4013      	ands	r3, r2
 8010d76:	d113      	bne.n	8010da0 <HAL_RCC_ClockConfig+0x10c>
 8010d78:	2301      	movs	r3, #1
 8010d7a:	e07f      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010d7c:	687b      	ldr	r3, [r7, #4]
 8010d7e:	685b      	ldr	r3, [r3, #4]
 8010d80:	2b03      	cmp	r3, #3
 8010d82:	d106      	bne.n	8010d92 <HAL_RCC_ClockConfig+0xfe>
 8010d84:	4b41      	ldr	r3, [pc, #260]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d86:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010d88:	2202      	movs	r2, #2
 8010d8a:	4013      	ands	r3, r2
 8010d8c:	d108      	bne.n	8010da0 <HAL_RCC_ClockConfig+0x10c>
 8010d8e:	2301      	movs	r3, #1
 8010d90:	e074      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010d92:	4b3e      	ldr	r3, [pc, #248]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010d94:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010d96:	2202      	movs	r2, #2
 8010d98:	4013      	ands	r3, r2
 8010d9a:	d101      	bne.n	8010da0 <HAL_RCC_ClockConfig+0x10c>
 8010d9c:	2301      	movs	r3, #1
 8010d9e:	e06d      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010da0:	4b3a      	ldr	r3, [pc, #232]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010da2:	689b      	ldr	r3, [r3, #8]
 8010da4:	2207      	movs	r2, #7
 8010da6:	4393      	bics	r3, r2
 8010da8:	0019      	movs	r1, r3
 8010daa:	687b      	ldr	r3, [r7, #4]
 8010dac:	685a      	ldr	r2, [r3, #4]
 8010dae:	4b37      	ldr	r3, [pc, #220]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010db0:	430a      	orrs	r2, r1
 8010db2:	609a      	str	r2, [r3, #8]
 8010db4:	f7fc ff5c 	bl	800dc70 <HAL_GetTick>
 8010db8:	0003      	movs	r3, r0
 8010dba:	60fb      	str	r3, [r7, #12]
 8010dbc:	e009      	b.n	8010dd2 <HAL_RCC_ClockConfig+0x13e>
 8010dbe:	f7fc ff57 	bl	800dc70 <HAL_GetTick>
 8010dc2:	0002      	movs	r2, r0
 8010dc4:	68fb      	ldr	r3, [r7, #12]
 8010dc6:	1ad3      	subs	r3, r2, r3
 8010dc8:	4a2f      	ldr	r2, [pc, #188]	@ (8010e88 <HAL_RCC_ClockConfig+0x1f4>)
 8010dca:	4293      	cmp	r3, r2
 8010dcc:	d901      	bls.n	8010dd2 <HAL_RCC_ClockConfig+0x13e>
 8010dce:	2303      	movs	r3, #3
 8010dd0:	e054      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010dd2:	4b2e      	ldr	r3, [pc, #184]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010dd4:	689b      	ldr	r3, [r3, #8]
 8010dd6:	2238      	movs	r2, #56	@ 0x38
 8010dd8:	401a      	ands	r2, r3
 8010dda:	687b      	ldr	r3, [r7, #4]
 8010ddc:	685b      	ldr	r3, [r3, #4]
 8010dde:	00db      	lsls	r3, r3, #3
 8010de0:	429a      	cmp	r2, r3
 8010de2:	d1ec      	bne.n	8010dbe <HAL_RCC_ClockConfig+0x12a>
 8010de4:	4b27      	ldr	r3, [pc, #156]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010de6:	681b      	ldr	r3, [r3, #0]
 8010de8:	2207      	movs	r2, #7
 8010dea:	4013      	ands	r3, r2
 8010dec:	683a      	ldr	r2, [r7, #0]
 8010dee:	429a      	cmp	r2, r3
 8010df0:	d21e      	bcs.n	8010e30 <HAL_RCC_ClockConfig+0x19c>
 8010df2:	4b24      	ldr	r3, [pc, #144]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010df4:	681b      	ldr	r3, [r3, #0]
 8010df6:	2207      	movs	r2, #7
 8010df8:	4393      	bics	r3, r2
 8010dfa:	0019      	movs	r1, r3
 8010dfc:	4b21      	ldr	r3, [pc, #132]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010dfe:	683a      	ldr	r2, [r7, #0]
 8010e00:	430a      	orrs	r2, r1
 8010e02:	601a      	str	r2, [r3, #0]
 8010e04:	f7fc ff34 	bl	800dc70 <HAL_GetTick>
 8010e08:	0003      	movs	r3, r0
 8010e0a:	60fb      	str	r3, [r7, #12]
 8010e0c:	e009      	b.n	8010e22 <HAL_RCC_ClockConfig+0x18e>
 8010e0e:	f7fc ff2f 	bl	800dc70 <HAL_GetTick>
 8010e12:	0002      	movs	r2, r0
 8010e14:	68fb      	ldr	r3, [r7, #12]
 8010e16:	1ad3      	subs	r3, r2, r3
 8010e18:	4a1b      	ldr	r2, [pc, #108]	@ (8010e88 <HAL_RCC_ClockConfig+0x1f4>)
 8010e1a:	4293      	cmp	r3, r2
 8010e1c:	d901      	bls.n	8010e22 <HAL_RCC_ClockConfig+0x18e>
 8010e1e:	2303      	movs	r3, #3
 8010e20:	e02c      	b.n	8010e7c <HAL_RCC_ClockConfig+0x1e8>
 8010e22:	4b18      	ldr	r3, [pc, #96]	@ (8010e84 <HAL_RCC_ClockConfig+0x1f0>)
 8010e24:	681b      	ldr	r3, [r3, #0]
 8010e26:	2207      	movs	r2, #7
 8010e28:	4013      	ands	r3, r2
 8010e2a:	683a      	ldr	r2, [r7, #0]
 8010e2c:	429a      	cmp	r2, r3
 8010e2e:	d1ee      	bne.n	8010e0e <HAL_RCC_ClockConfig+0x17a>
 8010e30:	687b      	ldr	r3, [r7, #4]
 8010e32:	681b      	ldr	r3, [r3, #0]
 8010e34:	2204      	movs	r2, #4
 8010e36:	4013      	ands	r3, r2
 8010e38:	d009      	beq.n	8010e4e <HAL_RCC_ClockConfig+0x1ba>
 8010e3a:	4b14      	ldr	r3, [pc, #80]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010e3c:	689b      	ldr	r3, [r3, #8]
 8010e3e:	4a15      	ldr	r2, [pc, #84]	@ (8010e94 <HAL_RCC_ClockConfig+0x200>)
 8010e40:	4013      	ands	r3, r2
 8010e42:	0019      	movs	r1, r3
 8010e44:	687b      	ldr	r3, [r7, #4]
 8010e46:	68da      	ldr	r2, [r3, #12]
 8010e48:	4b10      	ldr	r3, [pc, #64]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010e4a:	430a      	orrs	r2, r1
 8010e4c:	609a      	str	r2, [r3, #8]
 8010e4e:	f000 f869 	bl	8010f24 <HAL_RCC_GetSysClockFreq>
 8010e52:	0001      	movs	r1, r0
 8010e54:	4b0d      	ldr	r3, [pc, #52]	@ (8010e8c <HAL_RCC_ClockConfig+0x1f8>)
 8010e56:	689b      	ldr	r3, [r3, #8]
 8010e58:	0a1b      	lsrs	r3, r3, #8
 8010e5a:	220f      	movs	r2, #15
 8010e5c:	401a      	ands	r2, r3
 8010e5e:	4b0e      	ldr	r3, [pc, #56]	@ (8010e98 <HAL_RCC_ClockConfig+0x204>)
 8010e60:	0092      	lsls	r2, r2, #2
 8010e62:	58d3      	ldr	r3, [r2, r3]
 8010e64:	221f      	movs	r2, #31
 8010e66:	4013      	ands	r3, r2
 8010e68:	000a      	movs	r2, r1
 8010e6a:	40da      	lsrs	r2, r3
 8010e6c:	4b0b      	ldr	r3, [pc, #44]	@ (8010e9c <HAL_RCC_ClockConfig+0x208>)
 8010e6e:	601a      	str	r2, [r3, #0]
 8010e70:	4b0b      	ldr	r3, [pc, #44]	@ (8010ea0 <HAL_RCC_ClockConfig+0x20c>)
 8010e72:	681b      	ldr	r3, [r3, #0]
 8010e74:	0018      	movs	r0, r3
 8010e76:	f7fc fe9f 	bl	800dbb8 <HAL_InitTick>
 8010e7a:	0003      	movs	r3, r0
 8010e7c:	0018      	movs	r0, r3
 8010e7e:	46bd      	mov	sp, r7
 8010e80:	b004      	add	sp, #16
 8010e82:	bd80      	pop	{r7, pc}
 8010e84:	40022000 	.word	0x40022000
 8010e88:	00001388 	.word	0x00001388
 8010e8c:	40021000 	.word	0x40021000
 8010e90:	fffff0ff 	.word	0xfffff0ff
 8010e94:	ffff8fff 	.word	0xffff8fff
 8010e98:	08019f44 	.word	0x08019f44
 8010e9c:	20000494 	.word	0x20000494
 8010ea0:	20000498 	.word	0x20000498

08010ea4 <HAL_RCC_MCOConfig>:
 8010ea4:	b580      	push	{r7, lr}
 8010ea6:	b08a      	sub	sp, #40	@ 0x28
 8010ea8:	af00      	add	r7, sp, #0
 8010eaa:	60f8      	str	r0, [r7, #12]
 8010eac:	60b9      	str	r1, [r7, #8]
 8010eae:	607a      	str	r2, [r7, #4]
 8010eb0:	2014      	movs	r0, #20
 8010eb2:	183b      	adds	r3, r7, r0
 8010eb4:	2202      	movs	r2, #2
 8010eb6:	605a      	str	r2, [r3, #4]
 8010eb8:	183b      	adds	r3, r7, r0
 8010eba:	2203      	movs	r2, #3
 8010ebc:	60da      	str	r2, [r3, #12]
 8010ebe:	183b      	adds	r3, r7, r0
 8010ec0:	2200      	movs	r2, #0
 8010ec2:	609a      	str	r2, [r3, #8]
 8010ec4:	68fb      	ldr	r3, [r7, #12]
 8010ec6:	2b00      	cmp	r3, #0
 8010ec8:	d124      	bne.n	8010f14 <HAL_RCC_MCOConfig+0x70>
 8010eca:	4b14      	ldr	r3, [pc, #80]	@ (8010f1c <HAL_RCC_MCOConfig+0x78>)
 8010ecc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8010ece:	4b13      	ldr	r3, [pc, #76]	@ (8010f1c <HAL_RCC_MCOConfig+0x78>)
 8010ed0:	2101      	movs	r1, #1
 8010ed2:	430a      	orrs	r2, r1
 8010ed4:	635a      	str	r2, [r3, #52]	@ 0x34
 8010ed6:	4b11      	ldr	r3, [pc, #68]	@ (8010f1c <HAL_RCC_MCOConfig+0x78>)
 8010ed8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010eda:	2201      	movs	r2, #1
 8010edc:	4013      	ands	r3, r2
 8010ede:	613b      	str	r3, [r7, #16]
 8010ee0:	693b      	ldr	r3, [r7, #16]
 8010ee2:	183b      	adds	r3, r7, r0
 8010ee4:	2280      	movs	r2, #128	@ 0x80
 8010ee6:	0052      	lsls	r2, r2, #1
 8010ee8:	601a      	str	r2, [r3, #0]
 8010eea:	183b      	adds	r3, r7, r0
 8010eec:	2200      	movs	r2, #0
 8010eee:	611a      	str	r2, [r3, #16]
 8010ef0:	183a      	adds	r2, r7, r0
 8010ef2:	23a0      	movs	r3, #160	@ 0xa0
 8010ef4:	05db      	lsls	r3, r3, #23
 8010ef6:	0011      	movs	r1, r2
 8010ef8:	0018      	movs	r0, r3
 8010efa:	f7fd fb0f 	bl	800e51c <HAL_GPIO_Init>
 8010efe:	4b07      	ldr	r3, [pc, #28]	@ (8010f1c <HAL_RCC_MCOConfig+0x78>)
 8010f00:	689b      	ldr	r3, [r3, #8]
 8010f02:	4a07      	ldr	r2, [pc, #28]	@ (8010f20 <HAL_RCC_MCOConfig+0x7c>)
 8010f04:	4013      	ands	r3, r2
 8010f06:	0019      	movs	r1, r3
 8010f08:	68ba      	ldr	r2, [r7, #8]
 8010f0a:	687b      	ldr	r3, [r7, #4]
 8010f0c:	431a      	orrs	r2, r3
 8010f0e:	4b03      	ldr	r3, [pc, #12]	@ (8010f1c <HAL_RCC_MCOConfig+0x78>)
 8010f10:	430a      	orrs	r2, r1
 8010f12:	609a      	str	r2, [r3, #8]
 8010f14:	46c0      	nop			@ (mov r8, r8)
 8010f16:	46bd      	mov	sp, r7
 8010f18:	b00a      	add	sp, #40	@ 0x28
 8010f1a:	bd80      	pop	{r7, pc}
 8010f1c:	40021000 	.word	0x40021000
 8010f20:	88ffffff 	.word	0x88ffffff

08010f24 <HAL_RCC_GetSysClockFreq>:
 8010f24:	b580      	push	{r7, lr}
 8010f26:	b086      	sub	sp, #24
 8010f28:	af00      	add	r7, sp, #0
 8010f2a:	4b3c      	ldr	r3, [pc, #240]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010f2c:	689b      	ldr	r3, [r3, #8]
 8010f2e:	2238      	movs	r2, #56	@ 0x38
 8010f30:	4013      	ands	r3, r2
 8010f32:	d10f      	bne.n	8010f54 <HAL_RCC_GetSysClockFreq+0x30>
 8010f34:	4b39      	ldr	r3, [pc, #228]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010f36:	681b      	ldr	r3, [r3, #0]
 8010f38:	0adb      	lsrs	r3, r3, #11
 8010f3a:	2207      	movs	r2, #7
 8010f3c:	4013      	ands	r3, r2
 8010f3e:	2201      	movs	r2, #1
 8010f40:	409a      	lsls	r2, r3
 8010f42:	0013      	movs	r3, r2
 8010f44:	603b      	str	r3, [r7, #0]
 8010f46:	6839      	ldr	r1, [r7, #0]
 8010f48:	4835      	ldr	r0, [pc, #212]	@ (8011020 <HAL_RCC_GetSysClockFreq+0xfc>)
 8010f4a:	f7ef f8ed 	bl	8000128 <__udivsi3>
 8010f4e:	0003      	movs	r3, r0
 8010f50:	613b      	str	r3, [r7, #16]
 8010f52:	e05d      	b.n	8011010 <HAL_RCC_GetSysClockFreq+0xec>
 8010f54:	4b31      	ldr	r3, [pc, #196]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010f56:	689b      	ldr	r3, [r3, #8]
 8010f58:	2238      	movs	r2, #56	@ 0x38
 8010f5a:	4013      	ands	r3, r2
 8010f5c:	2b08      	cmp	r3, #8
 8010f5e:	d102      	bne.n	8010f66 <HAL_RCC_GetSysClockFreq+0x42>
 8010f60:	4b30      	ldr	r3, [pc, #192]	@ (8011024 <HAL_RCC_GetSysClockFreq+0x100>)
 8010f62:	613b      	str	r3, [r7, #16]
 8010f64:	e054      	b.n	8011010 <HAL_RCC_GetSysClockFreq+0xec>
 8010f66:	4b2d      	ldr	r3, [pc, #180]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010f68:	689b      	ldr	r3, [r3, #8]
 8010f6a:	2238      	movs	r2, #56	@ 0x38
 8010f6c:	4013      	ands	r3, r2
 8010f6e:	2b10      	cmp	r3, #16
 8010f70:	d138      	bne.n	8010fe4 <HAL_RCC_GetSysClockFreq+0xc0>
 8010f72:	4b2a      	ldr	r3, [pc, #168]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010f74:	68db      	ldr	r3, [r3, #12]
 8010f76:	2203      	movs	r2, #3
 8010f78:	4013      	ands	r3, r2
 8010f7a:	60fb      	str	r3, [r7, #12]
 8010f7c:	4b27      	ldr	r3, [pc, #156]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010f7e:	68db      	ldr	r3, [r3, #12]
 8010f80:	091b      	lsrs	r3, r3, #4
 8010f82:	2207      	movs	r2, #7
 8010f84:	4013      	ands	r3, r2
 8010f86:	3301      	adds	r3, #1
 8010f88:	60bb      	str	r3, [r7, #8]
 8010f8a:	68fb      	ldr	r3, [r7, #12]
 8010f8c:	2b03      	cmp	r3, #3
 8010f8e:	d10d      	bne.n	8010fac <HAL_RCC_GetSysClockFreq+0x88>
 8010f90:	68b9      	ldr	r1, [r7, #8]
 8010f92:	4824      	ldr	r0, [pc, #144]	@ (8011024 <HAL_RCC_GetSysClockFreq+0x100>)
 8010f94:	f7ef f8c8 	bl	8000128 <__udivsi3>
 8010f98:	0003      	movs	r3, r0
 8010f9a:	0019      	movs	r1, r3
 8010f9c:	4b1f      	ldr	r3, [pc, #124]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010f9e:	68db      	ldr	r3, [r3, #12]
 8010fa0:	0a1b      	lsrs	r3, r3, #8
 8010fa2:	227f      	movs	r2, #127	@ 0x7f
 8010fa4:	4013      	ands	r3, r2
 8010fa6:	434b      	muls	r3, r1
 8010fa8:	617b      	str	r3, [r7, #20]
 8010faa:	e00d      	b.n	8010fc8 <HAL_RCC_GetSysClockFreq+0xa4>
 8010fac:	68b9      	ldr	r1, [r7, #8]
 8010fae:	481c      	ldr	r0, [pc, #112]	@ (8011020 <HAL_RCC_GetSysClockFreq+0xfc>)
 8010fb0:	f7ef f8ba 	bl	8000128 <__udivsi3>
 8010fb4:	0003      	movs	r3, r0
 8010fb6:	0019      	movs	r1, r3
 8010fb8:	4b18      	ldr	r3, [pc, #96]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010fba:	68db      	ldr	r3, [r3, #12]
 8010fbc:	0a1b      	lsrs	r3, r3, #8
 8010fbe:	227f      	movs	r2, #127	@ 0x7f
 8010fc0:	4013      	ands	r3, r2
 8010fc2:	434b      	muls	r3, r1
 8010fc4:	617b      	str	r3, [r7, #20]
 8010fc6:	46c0      	nop			@ (mov r8, r8)
 8010fc8:	4b14      	ldr	r3, [pc, #80]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010fca:	68db      	ldr	r3, [r3, #12]
 8010fcc:	0f5b      	lsrs	r3, r3, #29
 8010fce:	2207      	movs	r2, #7
 8010fd0:	4013      	ands	r3, r2
 8010fd2:	3301      	adds	r3, #1
 8010fd4:	607b      	str	r3, [r7, #4]
 8010fd6:	6879      	ldr	r1, [r7, #4]
 8010fd8:	6978      	ldr	r0, [r7, #20]
 8010fda:	f7ef f8a5 	bl	8000128 <__udivsi3>
 8010fde:	0003      	movs	r3, r0
 8010fe0:	613b      	str	r3, [r7, #16]
 8010fe2:	e015      	b.n	8011010 <HAL_RCC_GetSysClockFreq+0xec>
 8010fe4:	4b0d      	ldr	r3, [pc, #52]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010fe6:	689b      	ldr	r3, [r3, #8]
 8010fe8:	2238      	movs	r2, #56	@ 0x38
 8010fea:	4013      	ands	r3, r2
 8010fec:	2b20      	cmp	r3, #32
 8010fee:	d103      	bne.n	8010ff8 <HAL_RCC_GetSysClockFreq+0xd4>
 8010ff0:	2380      	movs	r3, #128	@ 0x80
 8010ff2:	021b      	lsls	r3, r3, #8
 8010ff4:	613b      	str	r3, [r7, #16]
 8010ff6:	e00b      	b.n	8011010 <HAL_RCC_GetSysClockFreq+0xec>
 8010ff8:	4b08      	ldr	r3, [pc, #32]	@ (801101c <HAL_RCC_GetSysClockFreq+0xf8>)
 8010ffa:	689b      	ldr	r3, [r3, #8]
 8010ffc:	2238      	movs	r2, #56	@ 0x38
 8010ffe:	4013      	ands	r3, r2
 8011000:	2b18      	cmp	r3, #24
 8011002:	d103      	bne.n	801100c <HAL_RCC_GetSysClockFreq+0xe8>
 8011004:	23fa      	movs	r3, #250	@ 0xfa
 8011006:	01db      	lsls	r3, r3, #7
 8011008:	613b      	str	r3, [r7, #16]
 801100a:	e001      	b.n	8011010 <HAL_RCC_GetSysClockFreq+0xec>
 801100c:	2300      	movs	r3, #0
 801100e:	613b      	str	r3, [r7, #16]
 8011010:	693b      	ldr	r3, [r7, #16]
 8011012:	0018      	movs	r0, r3
 8011014:	46bd      	mov	sp, r7
 8011016:	b006      	add	sp, #24
 8011018:	bd80      	pop	{r7, pc}
 801101a:	46c0      	nop			@ (mov r8, r8)
 801101c:	40021000 	.word	0x40021000
 8011020:	00f42400 	.word	0x00f42400
 8011024:	007a1200 	.word	0x007a1200

08011028 <HAL_RCC_GetHCLKFreq>:
 8011028:	b580      	push	{r7, lr}
 801102a:	af00      	add	r7, sp, #0
 801102c:	4b02      	ldr	r3, [pc, #8]	@ (8011038 <HAL_RCC_GetHCLKFreq+0x10>)
 801102e:	681b      	ldr	r3, [r3, #0]
 8011030:	0018      	movs	r0, r3
 8011032:	46bd      	mov	sp, r7
 8011034:	bd80      	pop	{r7, pc}
 8011036:	46c0      	nop			@ (mov r8, r8)
 8011038:	20000494 	.word	0x20000494

0801103c <HAL_RCC_GetPCLK1Freq>:
 801103c:	b5b0      	push	{r4, r5, r7, lr}
 801103e:	af00      	add	r7, sp, #0
 8011040:	f7ff fff2 	bl	8011028 <HAL_RCC_GetHCLKFreq>
 8011044:	0004      	movs	r4, r0
 8011046:	f7ff faff 	bl	8010648 <LL_RCC_GetAPB1Prescaler>
 801104a:	0003      	movs	r3, r0
 801104c:	0b1a      	lsrs	r2, r3, #12
 801104e:	4b05      	ldr	r3, [pc, #20]	@ (8011064 <HAL_RCC_GetPCLK1Freq+0x28>)
 8011050:	0092      	lsls	r2, r2, #2
 8011052:	58d3      	ldr	r3, [r2, r3]
 8011054:	221f      	movs	r2, #31
 8011056:	4013      	ands	r3, r2
 8011058:	40dc      	lsrs	r4, r3
 801105a:	0023      	movs	r3, r4
 801105c:	0018      	movs	r0, r3
 801105e:	46bd      	mov	sp, r7
 8011060:	bdb0      	pop	{r4, r5, r7, pc}
 8011062:	46c0      	nop			@ (mov r8, r8)
 8011064:	08019f84 	.word	0x08019f84

08011068 <HAL_RCCEx_PeriphCLKConfig>:
 8011068:	b580      	push	{r7, lr}
 801106a:	b086      	sub	sp, #24
 801106c:	af00      	add	r7, sp, #0
 801106e:	6078      	str	r0, [r7, #4]
 8011070:	2313      	movs	r3, #19
 8011072:	18fb      	adds	r3, r7, r3
 8011074:	2200      	movs	r2, #0
 8011076:	701a      	strb	r2, [r3, #0]
 8011078:	2312      	movs	r3, #18
 801107a:	18fb      	adds	r3, r7, r3
 801107c:	2200      	movs	r2, #0
 801107e:	701a      	strb	r2, [r3, #0]
 8011080:	687b      	ldr	r3, [r7, #4]
 8011082:	681a      	ldr	r2, [r3, #0]
 8011084:	2380      	movs	r3, #128	@ 0x80
 8011086:	029b      	lsls	r3, r3, #10
 8011088:	4013      	ands	r3, r2
 801108a:	d100      	bne.n	801108e <HAL_RCCEx_PeriphCLKConfig+0x26>
 801108c:	e0a3      	b.n	80111d6 <HAL_RCCEx_PeriphCLKConfig+0x16e>
 801108e:	2011      	movs	r0, #17
 8011090:	183b      	adds	r3, r7, r0
 8011092:	2200      	movs	r2, #0
 8011094:	701a      	strb	r2, [r3, #0]
 8011096:	4bc3      	ldr	r3, [pc, #780]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011098:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801109a:	2380      	movs	r3, #128	@ 0x80
 801109c:	055b      	lsls	r3, r3, #21
 801109e:	4013      	ands	r3, r2
 80110a0:	d110      	bne.n	80110c4 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 80110a2:	4bc0      	ldr	r3, [pc, #768]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80110a4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80110a6:	4bbf      	ldr	r3, [pc, #764]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80110a8:	2180      	movs	r1, #128	@ 0x80
 80110aa:	0549      	lsls	r1, r1, #21
 80110ac:	430a      	orrs	r2, r1
 80110ae:	63da      	str	r2, [r3, #60]	@ 0x3c
 80110b0:	4bbc      	ldr	r3, [pc, #752]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80110b2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80110b4:	2380      	movs	r3, #128	@ 0x80
 80110b6:	055b      	lsls	r3, r3, #21
 80110b8:	4013      	ands	r3, r2
 80110ba:	60bb      	str	r3, [r7, #8]
 80110bc:	68bb      	ldr	r3, [r7, #8]
 80110be:	183b      	adds	r3, r7, r0
 80110c0:	2201      	movs	r2, #1
 80110c2:	701a      	strb	r2, [r3, #0]
 80110c4:	4bb8      	ldr	r3, [pc, #736]	@ (80113a8 <HAL_RCCEx_PeriphCLKConfig+0x340>)
 80110c6:	681a      	ldr	r2, [r3, #0]
 80110c8:	4bb7      	ldr	r3, [pc, #732]	@ (80113a8 <HAL_RCCEx_PeriphCLKConfig+0x340>)
 80110ca:	2180      	movs	r1, #128	@ 0x80
 80110cc:	0049      	lsls	r1, r1, #1
 80110ce:	430a      	orrs	r2, r1
 80110d0:	601a      	str	r2, [r3, #0]
 80110d2:	f7fc fdcd 	bl	800dc70 <HAL_GetTick>
 80110d6:	0003      	movs	r3, r0
 80110d8:	60fb      	str	r3, [r7, #12]
 80110da:	e00b      	b.n	80110f4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 80110dc:	f7fc fdc8 	bl	800dc70 <HAL_GetTick>
 80110e0:	0002      	movs	r2, r0
 80110e2:	68fb      	ldr	r3, [r7, #12]
 80110e4:	1ad3      	subs	r3, r2, r3
 80110e6:	2b02      	cmp	r3, #2
 80110e8:	d904      	bls.n	80110f4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 80110ea:	2313      	movs	r3, #19
 80110ec:	18fb      	adds	r3, r7, r3
 80110ee:	2203      	movs	r2, #3
 80110f0:	701a      	strb	r2, [r3, #0]
 80110f2:	e005      	b.n	8011100 <HAL_RCCEx_PeriphCLKConfig+0x98>
 80110f4:	4bac      	ldr	r3, [pc, #688]	@ (80113a8 <HAL_RCCEx_PeriphCLKConfig+0x340>)
 80110f6:	681a      	ldr	r2, [r3, #0]
 80110f8:	2380      	movs	r3, #128	@ 0x80
 80110fa:	005b      	lsls	r3, r3, #1
 80110fc:	4013      	ands	r3, r2
 80110fe:	d0ed      	beq.n	80110dc <HAL_RCCEx_PeriphCLKConfig+0x74>
 8011100:	2313      	movs	r3, #19
 8011102:	18fb      	adds	r3, r7, r3
 8011104:	781b      	ldrb	r3, [r3, #0]
 8011106:	2b00      	cmp	r3, #0
 8011108:	d154      	bne.n	80111b4 <HAL_RCCEx_PeriphCLKConfig+0x14c>
 801110a:	4ba6      	ldr	r3, [pc, #664]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801110c:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 801110e:	23c0      	movs	r3, #192	@ 0xc0
 8011110:	009b      	lsls	r3, r3, #2
 8011112:	4013      	ands	r3, r2
 8011114:	617b      	str	r3, [r7, #20]
 8011116:	697b      	ldr	r3, [r7, #20]
 8011118:	2b00      	cmp	r3, #0
 801111a:	d019      	beq.n	8011150 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 801111c:	687b      	ldr	r3, [r7, #4]
 801111e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011120:	697a      	ldr	r2, [r7, #20]
 8011122:	429a      	cmp	r2, r3
 8011124:	d014      	beq.n	8011150 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8011126:	4b9f      	ldr	r3, [pc, #636]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011128:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801112a:	4aa0      	ldr	r2, [pc, #640]	@ (80113ac <HAL_RCCEx_PeriphCLKConfig+0x344>)
 801112c:	4013      	ands	r3, r2
 801112e:	617b      	str	r3, [r7, #20]
 8011130:	4b9c      	ldr	r3, [pc, #624]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011132:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8011134:	4b9b      	ldr	r3, [pc, #620]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011136:	2180      	movs	r1, #128	@ 0x80
 8011138:	0249      	lsls	r1, r1, #9
 801113a:	430a      	orrs	r2, r1
 801113c:	65da      	str	r2, [r3, #92]	@ 0x5c
 801113e:	4b99      	ldr	r3, [pc, #612]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011140:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8011142:	4b98      	ldr	r3, [pc, #608]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011144:	499a      	ldr	r1, [pc, #616]	@ (80113b0 <HAL_RCCEx_PeriphCLKConfig+0x348>)
 8011146:	400a      	ands	r2, r1
 8011148:	65da      	str	r2, [r3, #92]	@ 0x5c
 801114a:	4b96      	ldr	r3, [pc, #600]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801114c:	697a      	ldr	r2, [r7, #20]
 801114e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8011150:	697b      	ldr	r3, [r7, #20]
 8011152:	2201      	movs	r2, #1
 8011154:	4013      	ands	r3, r2
 8011156:	d016      	beq.n	8011186 <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8011158:	f7fc fd8a 	bl	800dc70 <HAL_GetTick>
 801115c:	0003      	movs	r3, r0
 801115e:	60fb      	str	r3, [r7, #12]
 8011160:	e00c      	b.n	801117c <HAL_RCCEx_PeriphCLKConfig+0x114>
 8011162:	f7fc fd85 	bl	800dc70 <HAL_GetTick>
 8011166:	0002      	movs	r2, r0
 8011168:	68fb      	ldr	r3, [r7, #12]
 801116a:	1ad3      	subs	r3, r2, r3
 801116c:	4a91      	ldr	r2, [pc, #580]	@ (80113b4 <HAL_RCCEx_PeriphCLKConfig+0x34c>)
 801116e:	4293      	cmp	r3, r2
 8011170:	d904      	bls.n	801117c <HAL_RCCEx_PeriphCLKConfig+0x114>
 8011172:	2313      	movs	r3, #19
 8011174:	18fb      	adds	r3, r7, r3
 8011176:	2203      	movs	r2, #3
 8011178:	701a      	strb	r2, [r3, #0]
 801117a:	e004      	b.n	8011186 <HAL_RCCEx_PeriphCLKConfig+0x11e>
 801117c:	4b89      	ldr	r3, [pc, #548]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801117e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011180:	2202      	movs	r2, #2
 8011182:	4013      	ands	r3, r2
 8011184:	d0ed      	beq.n	8011162 <HAL_RCCEx_PeriphCLKConfig+0xfa>
 8011186:	2313      	movs	r3, #19
 8011188:	18fb      	adds	r3, r7, r3
 801118a:	781b      	ldrb	r3, [r3, #0]
 801118c:	2b00      	cmp	r3, #0
 801118e:	d10a      	bne.n	80111a6 <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8011190:	4b84      	ldr	r3, [pc, #528]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011192:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011194:	4a85      	ldr	r2, [pc, #532]	@ (80113ac <HAL_RCCEx_PeriphCLKConfig+0x344>)
 8011196:	4013      	ands	r3, r2
 8011198:	0019      	movs	r1, r3
 801119a:	687b      	ldr	r3, [r7, #4]
 801119c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 801119e:	4b81      	ldr	r3, [pc, #516]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80111a0:	430a      	orrs	r2, r1
 80111a2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80111a4:	e00c      	b.n	80111c0 <HAL_RCCEx_PeriphCLKConfig+0x158>
 80111a6:	2312      	movs	r3, #18
 80111a8:	18fb      	adds	r3, r7, r3
 80111aa:	2213      	movs	r2, #19
 80111ac:	18ba      	adds	r2, r7, r2
 80111ae:	7812      	ldrb	r2, [r2, #0]
 80111b0:	701a      	strb	r2, [r3, #0]
 80111b2:	e005      	b.n	80111c0 <HAL_RCCEx_PeriphCLKConfig+0x158>
 80111b4:	2312      	movs	r3, #18
 80111b6:	18fb      	adds	r3, r7, r3
 80111b8:	2213      	movs	r2, #19
 80111ba:	18ba      	adds	r2, r7, r2
 80111bc:	7812      	ldrb	r2, [r2, #0]
 80111be:	701a      	strb	r2, [r3, #0]
 80111c0:	2311      	movs	r3, #17
 80111c2:	18fb      	adds	r3, r7, r3
 80111c4:	781b      	ldrb	r3, [r3, #0]
 80111c6:	2b01      	cmp	r3, #1
 80111c8:	d105      	bne.n	80111d6 <HAL_RCCEx_PeriphCLKConfig+0x16e>
 80111ca:	4b76      	ldr	r3, [pc, #472]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80111cc:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80111ce:	4b75      	ldr	r3, [pc, #468]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80111d0:	4979      	ldr	r1, [pc, #484]	@ (80113b8 <HAL_RCCEx_PeriphCLKConfig+0x350>)
 80111d2:	400a      	ands	r2, r1
 80111d4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80111d6:	687b      	ldr	r3, [r7, #4]
 80111d8:	681b      	ldr	r3, [r3, #0]
 80111da:	2201      	movs	r2, #1
 80111dc:	4013      	ands	r3, r2
 80111de:	d009      	beq.n	80111f4 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 80111e0:	4b70      	ldr	r3, [pc, #448]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80111e2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80111e4:	2203      	movs	r2, #3
 80111e6:	4393      	bics	r3, r2
 80111e8:	0019      	movs	r1, r3
 80111ea:	687b      	ldr	r3, [r7, #4]
 80111ec:	685a      	ldr	r2, [r3, #4]
 80111ee:	4b6d      	ldr	r3, [pc, #436]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80111f0:	430a      	orrs	r2, r1
 80111f2:	655a      	str	r2, [r3, #84]	@ 0x54
 80111f4:	687b      	ldr	r3, [r7, #4]
 80111f6:	681b      	ldr	r3, [r3, #0]
 80111f8:	2202      	movs	r2, #2
 80111fa:	4013      	ands	r3, r2
 80111fc:	d009      	beq.n	8011212 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80111fe:	4b69      	ldr	r3, [pc, #420]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011200:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011202:	220c      	movs	r2, #12
 8011204:	4393      	bics	r3, r2
 8011206:	0019      	movs	r1, r3
 8011208:	687b      	ldr	r3, [r7, #4]
 801120a:	689a      	ldr	r2, [r3, #8]
 801120c:	4b65      	ldr	r3, [pc, #404]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801120e:	430a      	orrs	r2, r1
 8011210:	655a      	str	r2, [r3, #84]	@ 0x54
 8011212:	687b      	ldr	r3, [r7, #4]
 8011214:	681b      	ldr	r3, [r3, #0]
 8011216:	2210      	movs	r2, #16
 8011218:	4013      	ands	r3, r2
 801121a:	d009      	beq.n	8011230 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 801121c:	4b61      	ldr	r3, [pc, #388]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801121e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011220:	4a66      	ldr	r2, [pc, #408]	@ (80113bc <HAL_RCCEx_PeriphCLKConfig+0x354>)
 8011222:	4013      	ands	r3, r2
 8011224:	0019      	movs	r1, r3
 8011226:	687b      	ldr	r3, [r7, #4]
 8011228:	68da      	ldr	r2, [r3, #12]
 801122a:	4b5e      	ldr	r3, [pc, #376]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801122c:	430a      	orrs	r2, r1
 801122e:	655a      	str	r2, [r3, #84]	@ 0x54
 8011230:	687b      	ldr	r3, [r7, #4]
 8011232:	681a      	ldr	r2, [r3, #0]
 8011234:	2380      	movs	r3, #128	@ 0x80
 8011236:	009b      	lsls	r3, r3, #2
 8011238:	4013      	ands	r3, r2
 801123a:	d009      	beq.n	8011250 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 801123c:	4b59      	ldr	r3, [pc, #356]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801123e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011240:	4a5f      	ldr	r2, [pc, #380]	@ (80113c0 <HAL_RCCEx_PeriphCLKConfig+0x358>)
 8011242:	4013      	ands	r3, r2
 8011244:	0019      	movs	r1, r3
 8011246:	687b      	ldr	r3, [r7, #4]
 8011248:	699a      	ldr	r2, [r3, #24]
 801124a:	4b56      	ldr	r3, [pc, #344]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801124c:	430a      	orrs	r2, r1
 801124e:	655a      	str	r2, [r3, #84]	@ 0x54
 8011250:	687b      	ldr	r3, [r7, #4]
 8011252:	681a      	ldr	r2, [r3, #0]
 8011254:	2380      	movs	r3, #128	@ 0x80
 8011256:	00db      	lsls	r3, r3, #3
 8011258:	4013      	ands	r3, r2
 801125a:	d009      	beq.n	8011270 <HAL_RCCEx_PeriphCLKConfig+0x208>
 801125c:	4b51      	ldr	r3, [pc, #324]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801125e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011260:	4a58      	ldr	r2, [pc, #352]	@ (80113c4 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8011262:	4013      	ands	r3, r2
 8011264:	0019      	movs	r1, r3
 8011266:	687b      	ldr	r3, [r7, #4]
 8011268:	69da      	ldr	r2, [r3, #28]
 801126a:	4b4e      	ldr	r3, [pc, #312]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801126c:	430a      	orrs	r2, r1
 801126e:	655a      	str	r2, [r3, #84]	@ 0x54
 8011270:	687b      	ldr	r3, [r7, #4]
 8011272:	681b      	ldr	r3, [r3, #0]
 8011274:	2220      	movs	r2, #32
 8011276:	4013      	ands	r3, r2
 8011278:	d009      	beq.n	801128e <HAL_RCCEx_PeriphCLKConfig+0x226>
 801127a:	4b4a      	ldr	r3, [pc, #296]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801127c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801127e:	4a52      	ldr	r2, [pc, #328]	@ (80113c8 <HAL_RCCEx_PeriphCLKConfig+0x360>)
 8011280:	4013      	ands	r3, r2
 8011282:	0019      	movs	r1, r3
 8011284:	687b      	ldr	r3, [r7, #4]
 8011286:	691a      	ldr	r2, [r3, #16]
 8011288:	4b46      	ldr	r3, [pc, #280]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801128a:	430a      	orrs	r2, r1
 801128c:	655a      	str	r2, [r3, #84]	@ 0x54
 801128e:	687b      	ldr	r3, [r7, #4]
 8011290:	681a      	ldr	r2, [r3, #0]
 8011292:	2380      	movs	r3, #128	@ 0x80
 8011294:	01db      	lsls	r3, r3, #7
 8011296:	4013      	ands	r3, r2
 8011298:	d015      	beq.n	80112c6 <HAL_RCCEx_PeriphCLKConfig+0x25e>
 801129a:	4b42      	ldr	r3, [pc, #264]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801129c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801129e:	009b      	lsls	r3, r3, #2
 80112a0:	0899      	lsrs	r1, r3, #2
 80112a2:	687b      	ldr	r3, [r7, #4]
 80112a4:	6a1a      	ldr	r2, [r3, #32]
 80112a6:	4b3f      	ldr	r3, [pc, #252]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80112a8:	430a      	orrs	r2, r1
 80112aa:	655a      	str	r2, [r3, #84]	@ 0x54
 80112ac:	687b      	ldr	r3, [r7, #4]
 80112ae:	6a1a      	ldr	r2, [r3, #32]
 80112b0:	2380      	movs	r3, #128	@ 0x80
 80112b2:	05db      	lsls	r3, r3, #23
 80112b4:	429a      	cmp	r2, r3
 80112b6:	d106      	bne.n	80112c6 <HAL_RCCEx_PeriphCLKConfig+0x25e>
 80112b8:	4b3a      	ldr	r3, [pc, #232]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80112ba:	68da      	ldr	r2, [r3, #12]
 80112bc:	4b39      	ldr	r3, [pc, #228]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80112be:	2180      	movs	r1, #128	@ 0x80
 80112c0:	0249      	lsls	r1, r1, #9
 80112c2:	430a      	orrs	r2, r1
 80112c4:	60da      	str	r2, [r3, #12]
 80112c6:	687b      	ldr	r3, [r7, #4]
 80112c8:	681a      	ldr	r2, [r3, #0]
 80112ca:	2380      	movs	r3, #128	@ 0x80
 80112cc:	031b      	lsls	r3, r3, #12
 80112ce:	4013      	ands	r3, r2
 80112d0:	d009      	beq.n	80112e6 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 80112d2:	4b34      	ldr	r3, [pc, #208]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80112d4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80112d6:	2240      	movs	r2, #64	@ 0x40
 80112d8:	4393      	bics	r3, r2
 80112da:	0019      	movs	r1, r3
 80112dc:	687b      	ldr	r3, [r7, #4]
 80112de:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80112e0:	4b30      	ldr	r3, [pc, #192]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80112e2:	430a      	orrs	r2, r1
 80112e4:	655a      	str	r2, [r3, #84]	@ 0x54
 80112e6:	687b      	ldr	r3, [r7, #4]
 80112e8:	681a      	ldr	r2, [r3, #0]
 80112ea:	2380      	movs	r3, #128	@ 0x80
 80112ec:	039b      	lsls	r3, r3, #14
 80112ee:	4013      	ands	r3, r2
 80112f0:	d016      	beq.n	8011320 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 80112f2:	4b2c      	ldr	r3, [pc, #176]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80112f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80112f6:	4a35      	ldr	r2, [pc, #212]	@ (80113cc <HAL_RCCEx_PeriphCLKConfig+0x364>)
 80112f8:	4013      	ands	r3, r2
 80112fa:	0019      	movs	r1, r3
 80112fc:	687b      	ldr	r3, [r7, #4]
 80112fe:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8011300:	4b28      	ldr	r3, [pc, #160]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011302:	430a      	orrs	r2, r1
 8011304:	655a      	str	r2, [r3, #84]	@ 0x54
 8011306:	687b      	ldr	r3, [r7, #4]
 8011308:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 801130a:	2380      	movs	r3, #128	@ 0x80
 801130c:	03db      	lsls	r3, r3, #15
 801130e:	429a      	cmp	r2, r3
 8011310:	d106      	bne.n	8011320 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8011312:	4b24      	ldr	r3, [pc, #144]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011314:	68da      	ldr	r2, [r3, #12]
 8011316:	4b23      	ldr	r3, [pc, #140]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011318:	2180      	movs	r1, #128	@ 0x80
 801131a:	0449      	lsls	r1, r1, #17
 801131c:	430a      	orrs	r2, r1
 801131e:	60da      	str	r2, [r3, #12]
 8011320:	687b      	ldr	r3, [r7, #4]
 8011322:	681a      	ldr	r2, [r3, #0]
 8011324:	2380      	movs	r3, #128	@ 0x80
 8011326:	03db      	lsls	r3, r3, #15
 8011328:	4013      	ands	r3, r2
 801132a:	d016      	beq.n	801135a <HAL_RCCEx_PeriphCLKConfig+0x2f2>
 801132c:	4b1d      	ldr	r3, [pc, #116]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801132e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011330:	4a27      	ldr	r2, [pc, #156]	@ (80113d0 <HAL_RCCEx_PeriphCLKConfig+0x368>)
 8011332:	4013      	ands	r3, r2
 8011334:	0019      	movs	r1, r3
 8011336:	687b      	ldr	r3, [r7, #4]
 8011338:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801133a:	4b1a      	ldr	r3, [pc, #104]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801133c:	430a      	orrs	r2, r1
 801133e:	655a      	str	r2, [r3, #84]	@ 0x54
 8011340:	687b      	ldr	r3, [r7, #4]
 8011342:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8011344:	2380      	movs	r3, #128	@ 0x80
 8011346:	045b      	lsls	r3, r3, #17
 8011348:	429a      	cmp	r2, r3
 801134a:	d106      	bne.n	801135a <HAL_RCCEx_PeriphCLKConfig+0x2f2>
 801134c:	4b15      	ldr	r3, [pc, #84]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801134e:	68da      	ldr	r2, [r3, #12]
 8011350:	4b14      	ldr	r3, [pc, #80]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011352:	2180      	movs	r1, #128	@ 0x80
 8011354:	0449      	lsls	r1, r1, #17
 8011356:	430a      	orrs	r2, r1
 8011358:	60da      	str	r2, [r3, #12]
 801135a:	687b      	ldr	r3, [r7, #4]
 801135c:	681a      	ldr	r2, [r3, #0]
 801135e:	2380      	movs	r3, #128	@ 0x80
 8011360:	011b      	lsls	r3, r3, #4
 8011362:	4013      	ands	r3, r2
 8011364:	d016      	beq.n	8011394 <HAL_RCCEx_PeriphCLKConfig+0x32c>
 8011366:	4b0f      	ldr	r3, [pc, #60]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011368:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801136a:	4a1a      	ldr	r2, [pc, #104]	@ (80113d4 <HAL_RCCEx_PeriphCLKConfig+0x36c>)
 801136c:	4013      	ands	r3, r2
 801136e:	0019      	movs	r1, r3
 8011370:	687b      	ldr	r3, [r7, #4]
 8011372:	695a      	ldr	r2, [r3, #20]
 8011374:	4b0b      	ldr	r3, [pc, #44]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011376:	430a      	orrs	r2, r1
 8011378:	655a      	str	r2, [r3, #84]	@ 0x54
 801137a:	687b      	ldr	r3, [r7, #4]
 801137c:	695a      	ldr	r2, [r3, #20]
 801137e:	2380      	movs	r3, #128	@ 0x80
 8011380:	01db      	lsls	r3, r3, #7
 8011382:	429a      	cmp	r2, r3
 8011384:	d106      	bne.n	8011394 <HAL_RCCEx_PeriphCLKConfig+0x32c>
 8011386:	4b07      	ldr	r3, [pc, #28]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8011388:	68da      	ldr	r2, [r3, #12]
 801138a:	4b06      	ldr	r3, [pc, #24]	@ (80113a4 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 801138c:	2180      	movs	r1, #128	@ 0x80
 801138e:	0249      	lsls	r1, r1, #9
 8011390:	430a      	orrs	r2, r1
 8011392:	60da      	str	r2, [r3, #12]
 8011394:	2312      	movs	r3, #18
 8011396:	18fb      	adds	r3, r7, r3
 8011398:	781b      	ldrb	r3, [r3, #0]
 801139a:	0018      	movs	r0, r3
 801139c:	46bd      	mov	sp, r7
 801139e:	b006      	add	sp, #24
 80113a0:	bd80      	pop	{r7, pc}
 80113a2:	46c0      	nop			@ (mov r8, r8)
 80113a4:	40021000 	.word	0x40021000
 80113a8:	40007000 	.word	0x40007000
 80113ac:	fffffcff 	.word	0xfffffcff
 80113b0:	fffeffff 	.word	0xfffeffff
 80113b4:	00001388 	.word	0x00001388
 80113b8:	efffffff 	.word	0xefffffff
 80113bc:	fffff3ff 	.word	0xfffff3ff
 80113c0:	fff3ffff 	.word	0xfff3ffff
 80113c4:	ffcfffff 	.word	0xffcfffff
 80113c8:	ffffcfff 	.word	0xffffcfff
 80113cc:	ffbfffff 	.word	0xffbfffff
 80113d0:	feffffff 	.word	0xfeffffff
 80113d4:	ffff3fff 	.word	0xffff3fff

080113d8 <HAL_SPI_Init>:
 80113d8:	b580      	push	{r7, lr}
 80113da:	b084      	sub	sp, #16
 80113dc:	af00      	add	r7, sp, #0
 80113de:	6078      	str	r0, [r7, #4]
 80113e0:	687b      	ldr	r3, [r7, #4]
 80113e2:	2b00      	cmp	r3, #0
 80113e4:	d101      	bne.n	80113ea <HAL_SPI_Init+0x12>
 80113e6:	2301      	movs	r3, #1
 80113e8:	e0a8      	b.n	801153c <HAL_SPI_Init+0x164>
 80113ea:	687b      	ldr	r3, [r7, #4]
 80113ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80113ee:	2b00      	cmp	r3, #0
 80113f0:	d109      	bne.n	8011406 <HAL_SPI_Init+0x2e>
 80113f2:	687b      	ldr	r3, [r7, #4]
 80113f4:	685a      	ldr	r2, [r3, #4]
 80113f6:	2382      	movs	r3, #130	@ 0x82
 80113f8:	005b      	lsls	r3, r3, #1
 80113fa:	429a      	cmp	r2, r3
 80113fc:	d009      	beq.n	8011412 <HAL_SPI_Init+0x3a>
 80113fe:	687b      	ldr	r3, [r7, #4]
 8011400:	2200      	movs	r2, #0
 8011402:	61da      	str	r2, [r3, #28]
 8011404:	e005      	b.n	8011412 <HAL_SPI_Init+0x3a>
 8011406:	687b      	ldr	r3, [r7, #4]
 8011408:	2200      	movs	r2, #0
 801140a:	611a      	str	r2, [r3, #16]
 801140c:	687b      	ldr	r3, [r7, #4]
 801140e:	2200      	movs	r2, #0
 8011410:	615a      	str	r2, [r3, #20]
 8011412:	687b      	ldr	r3, [r7, #4]
 8011414:	2200      	movs	r2, #0
 8011416:	629a      	str	r2, [r3, #40]	@ 0x28
 8011418:	687b      	ldr	r3, [r7, #4]
 801141a:	225d      	movs	r2, #93	@ 0x5d
 801141c:	5c9b      	ldrb	r3, [r3, r2]
 801141e:	b2db      	uxtb	r3, r3
 8011420:	2b00      	cmp	r3, #0
 8011422:	d107      	bne.n	8011434 <HAL_SPI_Init+0x5c>
 8011424:	687b      	ldr	r3, [r7, #4]
 8011426:	225c      	movs	r2, #92	@ 0x5c
 8011428:	2100      	movs	r1, #0
 801142a:	5499      	strb	r1, [r3, r2]
 801142c:	687b      	ldr	r3, [r7, #4]
 801142e:	0018      	movs	r0, r3
 8011430:	f7fc f8de 	bl	800d5f0 <HAL_SPI_MspInit>
 8011434:	687b      	ldr	r3, [r7, #4]
 8011436:	225d      	movs	r2, #93	@ 0x5d
 8011438:	2102      	movs	r1, #2
 801143a:	5499      	strb	r1, [r3, r2]
 801143c:	687b      	ldr	r3, [r7, #4]
 801143e:	681b      	ldr	r3, [r3, #0]
 8011440:	681a      	ldr	r2, [r3, #0]
 8011442:	687b      	ldr	r3, [r7, #4]
 8011444:	681b      	ldr	r3, [r3, #0]
 8011446:	2140      	movs	r1, #64	@ 0x40
 8011448:	438a      	bics	r2, r1
 801144a:	601a      	str	r2, [r3, #0]
 801144c:	687b      	ldr	r3, [r7, #4]
 801144e:	68da      	ldr	r2, [r3, #12]
 8011450:	23e0      	movs	r3, #224	@ 0xe0
 8011452:	00db      	lsls	r3, r3, #3
 8011454:	429a      	cmp	r2, r3
 8011456:	d902      	bls.n	801145e <HAL_SPI_Init+0x86>
 8011458:	2300      	movs	r3, #0
 801145a:	60fb      	str	r3, [r7, #12]
 801145c:	e002      	b.n	8011464 <HAL_SPI_Init+0x8c>
 801145e:	2380      	movs	r3, #128	@ 0x80
 8011460:	015b      	lsls	r3, r3, #5
 8011462:	60fb      	str	r3, [r7, #12]
 8011464:	687b      	ldr	r3, [r7, #4]
 8011466:	68da      	ldr	r2, [r3, #12]
 8011468:	23f0      	movs	r3, #240	@ 0xf0
 801146a:	011b      	lsls	r3, r3, #4
 801146c:	429a      	cmp	r2, r3
 801146e:	d008      	beq.n	8011482 <HAL_SPI_Init+0xaa>
 8011470:	687b      	ldr	r3, [r7, #4]
 8011472:	68da      	ldr	r2, [r3, #12]
 8011474:	23e0      	movs	r3, #224	@ 0xe0
 8011476:	00db      	lsls	r3, r3, #3
 8011478:	429a      	cmp	r2, r3
 801147a:	d002      	beq.n	8011482 <HAL_SPI_Init+0xaa>
 801147c:	687b      	ldr	r3, [r7, #4]
 801147e:	2200      	movs	r2, #0
 8011480:	629a      	str	r2, [r3, #40]	@ 0x28
 8011482:	687b      	ldr	r3, [r7, #4]
 8011484:	685a      	ldr	r2, [r3, #4]
 8011486:	2382      	movs	r3, #130	@ 0x82
 8011488:	005b      	lsls	r3, r3, #1
 801148a:	401a      	ands	r2, r3
 801148c:	687b      	ldr	r3, [r7, #4]
 801148e:	6899      	ldr	r1, [r3, #8]
 8011490:	2384      	movs	r3, #132	@ 0x84
 8011492:	021b      	lsls	r3, r3, #8
 8011494:	400b      	ands	r3, r1
 8011496:	431a      	orrs	r2, r3
 8011498:	687b      	ldr	r3, [r7, #4]
 801149a:	691b      	ldr	r3, [r3, #16]
 801149c:	2102      	movs	r1, #2
 801149e:	400b      	ands	r3, r1
 80114a0:	431a      	orrs	r2, r3
 80114a2:	687b      	ldr	r3, [r7, #4]
 80114a4:	695b      	ldr	r3, [r3, #20]
 80114a6:	2101      	movs	r1, #1
 80114a8:	400b      	ands	r3, r1
 80114aa:	431a      	orrs	r2, r3
 80114ac:	687b      	ldr	r3, [r7, #4]
 80114ae:	6999      	ldr	r1, [r3, #24]
 80114b0:	2380      	movs	r3, #128	@ 0x80
 80114b2:	009b      	lsls	r3, r3, #2
 80114b4:	400b      	ands	r3, r1
 80114b6:	431a      	orrs	r2, r3
 80114b8:	687b      	ldr	r3, [r7, #4]
 80114ba:	69db      	ldr	r3, [r3, #28]
 80114bc:	2138      	movs	r1, #56	@ 0x38
 80114be:	400b      	ands	r3, r1
 80114c0:	431a      	orrs	r2, r3
 80114c2:	687b      	ldr	r3, [r7, #4]
 80114c4:	6a1b      	ldr	r3, [r3, #32]
 80114c6:	2180      	movs	r1, #128	@ 0x80
 80114c8:	400b      	ands	r3, r1
 80114ca:	431a      	orrs	r2, r3
 80114cc:	0011      	movs	r1, r2
 80114ce:	687b      	ldr	r3, [r7, #4]
 80114d0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80114d2:	2380      	movs	r3, #128	@ 0x80
 80114d4:	019b      	lsls	r3, r3, #6
 80114d6:	401a      	ands	r2, r3
 80114d8:	687b      	ldr	r3, [r7, #4]
 80114da:	681b      	ldr	r3, [r3, #0]
 80114dc:	430a      	orrs	r2, r1
 80114de:	601a      	str	r2, [r3, #0]
 80114e0:	687b      	ldr	r3, [r7, #4]
 80114e2:	699b      	ldr	r3, [r3, #24]
 80114e4:	0c1b      	lsrs	r3, r3, #16
 80114e6:	2204      	movs	r2, #4
 80114e8:	401a      	ands	r2, r3
 80114ea:	687b      	ldr	r3, [r7, #4]
 80114ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80114ee:	2110      	movs	r1, #16
 80114f0:	400b      	ands	r3, r1
 80114f2:	431a      	orrs	r2, r3
 80114f4:	687b      	ldr	r3, [r7, #4]
 80114f6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80114f8:	2108      	movs	r1, #8
 80114fa:	400b      	ands	r3, r1
 80114fc:	431a      	orrs	r2, r3
 80114fe:	687b      	ldr	r3, [r7, #4]
 8011500:	68d9      	ldr	r1, [r3, #12]
 8011502:	23f0      	movs	r3, #240	@ 0xf0
 8011504:	011b      	lsls	r3, r3, #4
 8011506:	400b      	ands	r3, r1
 8011508:	431a      	orrs	r2, r3
 801150a:	0011      	movs	r1, r2
 801150c:	68fa      	ldr	r2, [r7, #12]
 801150e:	2380      	movs	r3, #128	@ 0x80
 8011510:	015b      	lsls	r3, r3, #5
 8011512:	401a      	ands	r2, r3
 8011514:	687b      	ldr	r3, [r7, #4]
 8011516:	681b      	ldr	r3, [r3, #0]
 8011518:	430a      	orrs	r2, r1
 801151a:	605a      	str	r2, [r3, #4]
 801151c:	687b      	ldr	r3, [r7, #4]
 801151e:	681b      	ldr	r3, [r3, #0]
 8011520:	69da      	ldr	r2, [r3, #28]
 8011522:	687b      	ldr	r3, [r7, #4]
 8011524:	681b      	ldr	r3, [r3, #0]
 8011526:	4907      	ldr	r1, [pc, #28]	@ (8011544 <HAL_SPI_Init+0x16c>)
 8011528:	400a      	ands	r2, r1
 801152a:	61da      	str	r2, [r3, #28]
 801152c:	687b      	ldr	r3, [r7, #4]
 801152e:	2200      	movs	r2, #0
 8011530:	661a      	str	r2, [r3, #96]	@ 0x60
 8011532:	687b      	ldr	r3, [r7, #4]
 8011534:	225d      	movs	r2, #93	@ 0x5d
 8011536:	2101      	movs	r1, #1
 8011538:	5499      	strb	r1, [r3, r2]
 801153a:	2300      	movs	r3, #0
 801153c:	0018      	movs	r0, r3
 801153e:	46bd      	mov	sp, r7
 8011540:	b004      	add	sp, #16
 8011542:	bd80      	pop	{r7, pc}
 8011544:	fffff7ff 	.word	0xfffff7ff

08011548 <HAL_SPI_Transmit>:
 8011548:	b580      	push	{r7, lr}
 801154a:	b088      	sub	sp, #32
 801154c:	af00      	add	r7, sp, #0
 801154e:	60f8      	str	r0, [r7, #12]
 8011550:	60b9      	str	r1, [r7, #8]
 8011552:	603b      	str	r3, [r7, #0]
 8011554:	1dbb      	adds	r3, r7, #6
 8011556:	801a      	strh	r2, [r3, #0]
 8011558:	231f      	movs	r3, #31
 801155a:	18fb      	adds	r3, r7, r3
 801155c:	2200      	movs	r2, #0
 801155e:	701a      	strb	r2, [r3, #0]
 8011560:	68fb      	ldr	r3, [r7, #12]
 8011562:	225c      	movs	r2, #92	@ 0x5c
 8011564:	5c9b      	ldrb	r3, [r3, r2]
 8011566:	2b01      	cmp	r3, #1
 8011568:	d101      	bne.n	801156e <HAL_SPI_Transmit+0x26>
 801156a:	2302      	movs	r3, #2
 801156c:	e140      	b.n	80117f0 <HAL_SPI_Transmit+0x2a8>
 801156e:	68fb      	ldr	r3, [r7, #12]
 8011570:	225c      	movs	r2, #92	@ 0x5c
 8011572:	2101      	movs	r1, #1
 8011574:	5499      	strb	r1, [r3, r2]
 8011576:	f7fc fb7b 	bl	800dc70 <HAL_GetTick>
 801157a:	0003      	movs	r3, r0
 801157c:	61bb      	str	r3, [r7, #24]
 801157e:	2316      	movs	r3, #22
 8011580:	18fb      	adds	r3, r7, r3
 8011582:	1dba      	adds	r2, r7, #6
 8011584:	8812      	ldrh	r2, [r2, #0]
 8011586:	801a      	strh	r2, [r3, #0]
 8011588:	68fb      	ldr	r3, [r7, #12]
 801158a:	225d      	movs	r2, #93	@ 0x5d
 801158c:	5c9b      	ldrb	r3, [r3, r2]
 801158e:	b2db      	uxtb	r3, r3
 8011590:	2b01      	cmp	r3, #1
 8011592:	d004      	beq.n	801159e <HAL_SPI_Transmit+0x56>
 8011594:	231f      	movs	r3, #31
 8011596:	18fb      	adds	r3, r7, r3
 8011598:	2202      	movs	r2, #2
 801159a:	701a      	strb	r2, [r3, #0]
 801159c:	e11d      	b.n	80117da <HAL_SPI_Transmit+0x292>
 801159e:	68bb      	ldr	r3, [r7, #8]
 80115a0:	2b00      	cmp	r3, #0
 80115a2:	d003      	beq.n	80115ac <HAL_SPI_Transmit+0x64>
 80115a4:	1dbb      	adds	r3, r7, #6
 80115a6:	881b      	ldrh	r3, [r3, #0]
 80115a8:	2b00      	cmp	r3, #0
 80115aa:	d104      	bne.n	80115b6 <HAL_SPI_Transmit+0x6e>
 80115ac:	231f      	movs	r3, #31
 80115ae:	18fb      	adds	r3, r7, r3
 80115b0:	2201      	movs	r2, #1
 80115b2:	701a      	strb	r2, [r3, #0]
 80115b4:	e111      	b.n	80117da <HAL_SPI_Transmit+0x292>
 80115b6:	68fb      	ldr	r3, [r7, #12]
 80115b8:	225d      	movs	r2, #93	@ 0x5d
 80115ba:	2103      	movs	r1, #3
 80115bc:	5499      	strb	r1, [r3, r2]
 80115be:	68fb      	ldr	r3, [r7, #12]
 80115c0:	2200      	movs	r2, #0
 80115c2:	661a      	str	r2, [r3, #96]	@ 0x60
 80115c4:	68fb      	ldr	r3, [r7, #12]
 80115c6:	68ba      	ldr	r2, [r7, #8]
 80115c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80115ca:	68fb      	ldr	r3, [r7, #12]
 80115cc:	1dba      	adds	r2, r7, #6
 80115ce:	8812      	ldrh	r2, [r2, #0]
 80115d0:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80115d2:	68fb      	ldr	r3, [r7, #12]
 80115d4:	1dba      	adds	r2, r7, #6
 80115d6:	8812      	ldrh	r2, [r2, #0]
 80115d8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80115da:	68fb      	ldr	r3, [r7, #12]
 80115dc:	2200      	movs	r2, #0
 80115de:	641a      	str	r2, [r3, #64]	@ 0x40
 80115e0:	68fb      	ldr	r3, [r7, #12]
 80115e2:	2244      	movs	r2, #68	@ 0x44
 80115e4:	2100      	movs	r1, #0
 80115e6:	5299      	strh	r1, [r3, r2]
 80115e8:	68fb      	ldr	r3, [r7, #12]
 80115ea:	2246      	movs	r2, #70	@ 0x46
 80115ec:	2100      	movs	r1, #0
 80115ee:	5299      	strh	r1, [r3, r2]
 80115f0:	68fb      	ldr	r3, [r7, #12]
 80115f2:	2200      	movs	r2, #0
 80115f4:	651a      	str	r2, [r3, #80]	@ 0x50
 80115f6:	68fb      	ldr	r3, [r7, #12]
 80115f8:	2200      	movs	r2, #0
 80115fa:	64da      	str	r2, [r3, #76]	@ 0x4c
 80115fc:	68fb      	ldr	r3, [r7, #12]
 80115fe:	689a      	ldr	r2, [r3, #8]
 8011600:	2380      	movs	r3, #128	@ 0x80
 8011602:	021b      	lsls	r3, r3, #8
 8011604:	429a      	cmp	r2, r3
 8011606:	d110      	bne.n	801162a <HAL_SPI_Transmit+0xe2>
 8011608:	68fb      	ldr	r3, [r7, #12]
 801160a:	681b      	ldr	r3, [r3, #0]
 801160c:	681a      	ldr	r2, [r3, #0]
 801160e:	68fb      	ldr	r3, [r7, #12]
 8011610:	681b      	ldr	r3, [r3, #0]
 8011612:	2140      	movs	r1, #64	@ 0x40
 8011614:	438a      	bics	r2, r1
 8011616:	601a      	str	r2, [r3, #0]
 8011618:	68fb      	ldr	r3, [r7, #12]
 801161a:	681b      	ldr	r3, [r3, #0]
 801161c:	681a      	ldr	r2, [r3, #0]
 801161e:	68fb      	ldr	r3, [r7, #12]
 8011620:	681b      	ldr	r3, [r3, #0]
 8011622:	2180      	movs	r1, #128	@ 0x80
 8011624:	01c9      	lsls	r1, r1, #7
 8011626:	430a      	orrs	r2, r1
 8011628:	601a      	str	r2, [r3, #0]
 801162a:	68fb      	ldr	r3, [r7, #12]
 801162c:	681b      	ldr	r3, [r3, #0]
 801162e:	681b      	ldr	r3, [r3, #0]
 8011630:	2240      	movs	r2, #64	@ 0x40
 8011632:	4013      	ands	r3, r2
 8011634:	2b40      	cmp	r3, #64	@ 0x40
 8011636:	d007      	beq.n	8011648 <HAL_SPI_Transmit+0x100>
 8011638:	68fb      	ldr	r3, [r7, #12]
 801163a:	681b      	ldr	r3, [r3, #0]
 801163c:	681a      	ldr	r2, [r3, #0]
 801163e:	68fb      	ldr	r3, [r7, #12]
 8011640:	681b      	ldr	r3, [r3, #0]
 8011642:	2140      	movs	r1, #64	@ 0x40
 8011644:	430a      	orrs	r2, r1
 8011646:	601a      	str	r2, [r3, #0]
 8011648:	68fb      	ldr	r3, [r7, #12]
 801164a:	68da      	ldr	r2, [r3, #12]
 801164c:	23e0      	movs	r3, #224	@ 0xe0
 801164e:	00db      	lsls	r3, r3, #3
 8011650:	429a      	cmp	r2, r3
 8011652:	d94e      	bls.n	80116f2 <HAL_SPI_Transmit+0x1aa>
 8011654:	68fb      	ldr	r3, [r7, #12]
 8011656:	685b      	ldr	r3, [r3, #4]
 8011658:	2b00      	cmp	r3, #0
 801165a:	d004      	beq.n	8011666 <HAL_SPI_Transmit+0x11e>
 801165c:	2316      	movs	r3, #22
 801165e:	18fb      	adds	r3, r7, r3
 8011660:	881b      	ldrh	r3, [r3, #0]
 8011662:	2b01      	cmp	r3, #1
 8011664:	d13f      	bne.n	80116e6 <HAL_SPI_Transmit+0x19e>
 8011666:	68fb      	ldr	r3, [r7, #12]
 8011668:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801166a:	881a      	ldrh	r2, [r3, #0]
 801166c:	68fb      	ldr	r3, [r7, #12]
 801166e:	681b      	ldr	r3, [r3, #0]
 8011670:	60da      	str	r2, [r3, #12]
 8011672:	68fb      	ldr	r3, [r7, #12]
 8011674:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011676:	1c9a      	adds	r2, r3, #2
 8011678:	68fb      	ldr	r3, [r7, #12]
 801167a:	639a      	str	r2, [r3, #56]	@ 0x38
 801167c:	68fb      	ldr	r3, [r7, #12]
 801167e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011680:	b29b      	uxth	r3, r3
 8011682:	3b01      	subs	r3, #1
 8011684:	b29a      	uxth	r2, r3
 8011686:	68fb      	ldr	r3, [r7, #12]
 8011688:	87da      	strh	r2, [r3, #62]	@ 0x3e
 801168a:	e02c      	b.n	80116e6 <HAL_SPI_Transmit+0x19e>
 801168c:	68fb      	ldr	r3, [r7, #12]
 801168e:	681b      	ldr	r3, [r3, #0]
 8011690:	689b      	ldr	r3, [r3, #8]
 8011692:	2202      	movs	r2, #2
 8011694:	4013      	ands	r3, r2
 8011696:	2b02      	cmp	r3, #2
 8011698:	d112      	bne.n	80116c0 <HAL_SPI_Transmit+0x178>
 801169a:	68fb      	ldr	r3, [r7, #12]
 801169c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801169e:	881a      	ldrh	r2, [r3, #0]
 80116a0:	68fb      	ldr	r3, [r7, #12]
 80116a2:	681b      	ldr	r3, [r3, #0]
 80116a4:	60da      	str	r2, [r3, #12]
 80116a6:	68fb      	ldr	r3, [r7, #12]
 80116a8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80116aa:	1c9a      	adds	r2, r3, #2
 80116ac:	68fb      	ldr	r3, [r7, #12]
 80116ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80116b0:	68fb      	ldr	r3, [r7, #12]
 80116b2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80116b4:	b29b      	uxth	r3, r3
 80116b6:	3b01      	subs	r3, #1
 80116b8:	b29a      	uxth	r2, r3
 80116ba:	68fb      	ldr	r3, [r7, #12]
 80116bc:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80116be:	e012      	b.n	80116e6 <HAL_SPI_Transmit+0x19e>
 80116c0:	f7fc fad6 	bl	800dc70 <HAL_GetTick>
 80116c4:	0002      	movs	r2, r0
 80116c6:	69bb      	ldr	r3, [r7, #24]
 80116c8:	1ad3      	subs	r3, r2, r3
 80116ca:	683a      	ldr	r2, [r7, #0]
 80116cc:	429a      	cmp	r2, r3
 80116ce:	d802      	bhi.n	80116d6 <HAL_SPI_Transmit+0x18e>
 80116d0:	683b      	ldr	r3, [r7, #0]
 80116d2:	3301      	adds	r3, #1
 80116d4:	d102      	bne.n	80116dc <HAL_SPI_Transmit+0x194>
 80116d6:	683b      	ldr	r3, [r7, #0]
 80116d8:	2b00      	cmp	r3, #0
 80116da:	d104      	bne.n	80116e6 <HAL_SPI_Transmit+0x19e>
 80116dc:	231f      	movs	r3, #31
 80116de:	18fb      	adds	r3, r7, r3
 80116e0:	2203      	movs	r2, #3
 80116e2:	701a      	strb	r2, [r3, #0]
 80116e4:	e079      	b.n	80117da <HAL_SPI_Transmit+0x292>
 80116e6:	68fb      	ldr	r3, [r7, #12]
 80116e8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80116ea:	b29b      	uxth	r3, r3
 80116ec:	2b00      	cmp	r3, #0
 80116ee:	d1cd      	bne.n	801168c <HAL_SPI_Transmit+0x144>
 80116f0:	e04f      	b.n	8011792 <HAL_SPI_Transmit+0x24a>
 80116f2:	68fb      	ldr	r3, [r7, #12]
 80116f4:	685b      	ldr	r3, [r3, #4]
 80116f6:	2b00      	cmp	r3, #0
 80116f8:	d004      	beq.n	8011704 <HAL_SPI_Transmit+0x1bc>
 80116fa:	2316      	movs	r3, #22
 80116fc:	18fb      	adds	r3, r7, r3
 80116fe:	881b      	ldrh	r3, [r3, #0]
 8011700:	2b01      	cmp	r3, #1
 8011702:	d141      	bne.n	8011788 <HAL_SPI_Transmit+0x240>
 8011704:	68fb      	ldr	r3, [r7, #12]
 8011706:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8011708:	68fb      	ldr	r3, [r7, #12]
 801170a:	681b      	ldr	r3, [r3, #0]
 801170c:	330c      	adds	r3, #12
 801170e:	7812      	ldrb	r2, [r2, #0]
 8011710:	701a      	strb	r2, [r3, #0]
 8011712:	68fb      	ldr	r3, [r7, #12]
 8011714:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011716:	1c5a      	adds	r2, r3, #1
 8011718:	68fb      	ldr	r3, [r7, #12]
 801171a:	639a      	str	r2, [r3, #56]	@ 0x38
 801171c:	68fb      	ldr	r3, [r7, #12]
 801171e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011720:	b29b      	uxth	r3, r3
 8011722:	3b01      	subs	r3, #1
 8011724:	b29a      	uxth	r2, r3
 8011726:	68fb      	ldr	r3, [r7, #12]
 8011728:	87da      	strh	r2, [r3, #62]	@ 0x3e
 801172a:	e02d      	b.n	8011788 <HAL_SPI_Transmit+0x240>
 801172c:	68fb      	ldr	r3, [r7, #12]
 801172e:	681b      	ldr	r3, [r3, #0]
 8011730:	689b      	ldr	r3, [r3, #8]
 8011732:	2202      	movs	r2, #2
 8011734:	4013      	ands	r3, r2
 8011736:	2b02      	cmp	r3, #2
 8011738:	d113      	bne.n	8011762 <HAL_SPI_Transmit+0x21a>
 801173a:	68fb      	ldr	r3, [r7, #12]
 801173c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 801173e:	68fb      	ldr	r3, [r7, #12]
 8011740:	681b      	ldr	r3, [r3, #0]
 8011742:	330c      	adds	r3, #12
 8011744:	7812      	ldrb	r2, [r2, #0]
 8011746:	701a      	strb	r2, [r3, #0]
 8011748:	68fb      	ldr	r3, [r7, #12]
 801174a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801174c:	1c5a      	adds	r2, r3, #1
 801174e:	68fb      	ldr	r3, [r7, #12]
 8011750:	639a      	str	r2, [r3, #56]	@ 0x38
 8011752:	68fb      	ldr	r3, [r7, #12]
 8011754:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011756:	b29b      	uxth	r3, r3
 8011758:	3b01      	subs	r3, #1
 801175a:	b29a      	uxth	r2, r3
 801175c:	68fb      	ldr	r3, [r7, #12]
 801175e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8011760:	e012      	b.n	8011788 <HAL_SPI_Transmit+0x240>
 8011762:	f7fc fa85 	bl	800dc70 <HAL_GetTick>
 8011766:	0002      	movs	r2, r0
 8011768:	69bb      	ldr	r3, [r7, #24]
 801176a:	1ad3      	subs	r3, r2, r3
 801176c:	683a      	ldr	r2, [r7, #0]
 801176e:	429a      	cmp	r2, r3
 8011770:	d802      	bhi.n	8011778 <HAL_SPI_Transmit+0x230>
 8011772:	683b      	ldr	r3, [r7, #0]
 8011774:	3301      	adds	r3, #1
 8011776:	d102      	bne.n	801177e <HAL_SPI_Transmit+0x236>
 8011778:	683b      	ldr	r3, [r7, #0]
 801177a:	2b00      	cmp	r3, #0
 801177c:	d104      	bne.n	8011788 <HAL_SPI_Transmit+0x240>
 801177e:	231f      	movs	r3, #31
 8011780:	18fb      	adds	r3, r7, r3
 8011782:	2203      	movs	r2, #3
 8011784:	701a      	strb	r2, [r3, #0]
 8011786:	e028      	b.n	80117da <HAL_SPI_Transmit+0x292>
 8011788:	68fb      	ldr	r3, [r7, #12]
 801178a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 801178c:	b29b      	uxth	r3, r3
 801178e:	2b00      	cmp	r3, #0
 8011790:	d1cc      	bne.n	801172c <HAL_SPI_Transmit+0x1e4>
 8011792:	69ba      	ldr	r2, [r7, #24]
 8011794:	6839      	ldr	r1, [r7, #0]
 8011796:	68fb      	ldr	r3, [r7, #12]
 8011798:	0018      	movs	r0, r3
 801179a:	f000 fc37 	bl	801200c <SPI_EndRxTxTransaction>
 801179e:	1e03      	subs	r3, r0, #0
 80117a0:	d002      	beq.n	80117a8 <HAL_SPI_Transmit+0x260>
 80117a2:	68fb      	ldr	r3, [r7, #12]
 80117a4:	2220      	movs	r2, #32
 80117a6:	661a      	str	r2, [r3, #96]	@ 0x60
 80117a8:	68fb      	ldr	r3, [r7, #12]
 80117aa:	689b      	ldr	r3, [r3, #8]
 80117ac:	2b00      	cmp	r3, #0
 80117ae:	d10a      	bne.n	80117c6 <HAL_SPI_Transmit+0x27e>
 80117b0:	2300      	movs	r3, #0
 80117b2:	613b      	str	r3, [r7, #16]
 80117b4:	68fb      	ldr	r3, [r7, #12]
 80117b6:	681b      	ldr	r3, [r3, #0]
 80117b8:	68db      	ldr	r3, [r3, #12]
 80117ba:	613b      	str	r3, [r7, #16]
 80117bc:	68fb      	ldr	r3, [r7, #12]
 80117be:	681b      	ldr	r3, [r3, #0]
 80117c0:	689b      	ldr	r3, [r3, #8]
 80117c2:	613b      	str	r3, [r7, #16]
 80117c4:	693b      	ldr	r3, [r7, #16]
 80117c6:	68fb      	ldr	r3, [r7, #12]
 80117c8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80117ca:	2b00      	cmp	r3, #0
 80117cc:	d004      	beq.n	80117d8 <HAL_SPI_Transmit+0x290>
 80117ce:	231f      	movs	r3, #31
 80117d0:	18fb      	adds	r3, r7, r3
 80117d2:	2201      	movs	r2, #1
 80117d4:	701a      	strb	r2, [r3, #0]
 80117d6:	e000      	b.n	80117da <HAL_SPI_Transmit+0x292>
 80117d8:	46c0      	nop			@ (mov r8, r8)
 80117da:	68fb      	ldr	r3, [r7, #12]
 80117dc:	225d      	movs	r2, #93	@ 0x5d
 80117de:	2101      	movs	r1, #1
 80117e0:	5499      	strb	r1, [r3, r2]
 80117e2:	68fb      	ldr	r3, [r7, #12]
 80117e4:	225c      	movs	r2, #92	@ 0x5c
 80117e6:	2100      	movs	r1, #0
 80117e8:	5499      	strb	r1, [r3, r2]
 80117ea:	231f      	movs	r3, #31
 80117ec:	18fb      	adds	r3, r7, r3
 80117ee:	781b      	ldrb	r3, [r3, #0]
 80117f0:	0018      	movs	r0, r3
 80117f2:	46bd      	mov	sp, r7
 80117f4:	b008      	add	sp, #32
 80117f6:	bd80      	pop	{r7, pc}

080117f8 <HAL_SPI_TransmitReceive>:
 80117f8:	b580      	push	{r7, lr}
 80117fa:	b08a      	sub	sp, #40	@ 0x28
 80117fc:	af00      	add	r7, sp, #0
 80117fe:	60f8      	str	r0, [r7, #12]
 8011800:	60b9      	str	r1, [r7, #8]
 8011802:	607a      	str	r2, [r7, #4]
 8011804:	001a      	movs	r2, r3
 8011806:	1cbb      	adds	r3, r7, #2
 8011808:	801a      	strh	r2, [r3, #0]
 801180a:	2301      	movs	r3, #1
 801180c:	627b      	str	r3, [r7, #36]	@ 0x24
 801180e:	2323      	movs	r3, #35	@ 0x23
 8011810:	18fb      	adds	r3, r7, r3
 8011812:	2200      	movs	r2, #0
 8011814:	701a      	strb	r2, [r3, #0]
 8011816:	68fb      	ldr	r3, [r7, #12]
 8011818:	225c      	movs	r2, #92	@ 0x5c
 801181a:	5c9b      	ldrb	r3, [r3, r2]
 801181c:	2b01      	cmp	r3, #1
 801181e:	d101      	bne.n	8011824 <HAL_SPI_TransmitReceive+0x2c>
 8011820:	2302      	movs	r3, #2
 8011822:	e1b5      	b.n	8011b90 <HAL_SPI_TransmitReceive+0x398>
 8011824:	68fb      	ldr	r3, [r7, #12]
 8011826:	225c      	movs	r2, #92	@ 0x5c
 8011828:	2101      	movs	r1, #1
 801182a:	5499      	strb	r1, [r3, r2]
 801182c:	f7fc fa20 	bl	800dc70 <HAL_GetTick>
 8011830:	0003      	movs	r3, r0
 8011832:	61fb      	str	r3, [r7, #28]
 8011834:	201b      	movs	r0, #27
 8011836:	183b      	adds	r3, r7, r0
 8011838:	68fa      	ldr	r2, [r7, #12]
 801183a:	215d      	movs	r1, #93	@ 0x5d
 801183c:	5c52      	ldrb	r2, [r2, r1]
 801183e:	701a      	strb	r2, [r3, #0]
 8011840:	68fb      	ldr	r3, [r7, #12]
 8011842:	685b      	ldr	r3, [r3, #4]
 8011844:	617b      	str	r3, [r7, #20]
 8011846:	2312      	movs	r3, #18
 8011848:	18fb      	adds	r3, r7, r3
 801184a:	1cba      	adds	r2, r7, #2
 801184c:	8812      	ldrh	r2, [r2, #0]
 801184e:	801a      	strh	r2, [r3, #0]
 8011850:	183b      	adds	r3, r7, r0
 8011852:	781b      	ldrb	r3, [r3, #0]
 8011854:	2b01      	cmp	r3, #1
 8011856:	d011      	beq.n	801187c <HAL_SPI_TransmitReceive+0x84>
 8011858:	697a      	ldr	r2, [r7, #20]
 801185a:	2382      	movs	r3, #130	@ 0x82
 801185c:	005b      	lsls	r3, r3, #1
 801185e:	429a      	cmp	r2, r3
 8011860:	d107      	bne.n	8011872 <HAL_SPI_TransmitReceive+0x7a>
 8011862:	68fb      	ldr	r3, [r7, #12]
 8011864:	689b      	ldr	r3, [r3, #8]
 8011866:	2b00      	cmp	r3, #0
 8011868:	d103      	bne.n	8011872 <HAL_SPI_TransmitReceive+0x7a>
 801186a:	183b      	adds	r3, r7, r0
 801186c:	781b      	ldrb	r3, [r3, #0]
 801186e:	2b04      	cmp	r3, #4
 8011870:	d004      	beq.n	801187c <HAL_SPI_TransmitReceive+0x84>
 8011872:	2323      	movs	r3, #35	@ 0x23
 8011874:	18fb      	adds	r3, r7, r3
 8011876:	2202      	movs	r2, #2
 8011878:	701a      	strb	r2, [r3, #0]
 801187a:	e17e      	b.n	8011b7a <HAL_SPI_TransmitReceive+0x382>
 801187c:	68bb      	ldr	r3, [r7, #8]
 801187e:	2b00      	cmp	r3, #0
 8011880:	d006      	beq.n	8011890 <HAL_SPI_TransmitReceive+0x98>
 8011882:	687b      	ldr	r3, [r7, #4]
 8011884:	2b00      	cmp	r3, #0
 8011886:	d003      	beq.n	8011890 <HAL_SPI_TransmitReceive+0x98>
 8011888:	1cbb      	adds	r3, r7, #2
 801188a:	881b      	ldrh	r3, [r3, #0]
 801188c:	2b00      	cmp	r3, #0
 801188e:	d104      	bne.n	801189a <HAL_SPI_TransmitReceive+0xa2>
 8011890:	2323      	movs	r3, #35	@ 0x23
 8011892:	18fb      	adds	r3, r7, r3
 8011894:	2201      	movs	r2, #1
 8011896:	701a      	strb	r2, [r3, #0]
 8011898:	e16f      	b.n	8011b7a <HAL_SPI_TransmitReceive+0x382>
 801189a:	68fb      	ldr	r3, [r7, #12]
 801189c:	225d      	movs	r2, #93	@ 0x5d
 801189e:	5c9b      	ldrb	r3, [r3, r2]
 80118a0:	b2db      	uxtb	r3, r3
 80118a2:	2b04      	cmp	r3, #4
 80118a4:	d003      	beq.n	80118ae <HAL_SPI_TransmitReceive+0xb6>
 80118a6:	68fb      	ldr	r3, [r7, #12]
 80118a8:	225d      	movs	r2, #93	@ 0x5d
 80118aa:	2105      	movs	r1, #5
 80118ac:	5499      	strb	r1, [r3, r2]
 80118ae:	68fb      	ldr	r3, [r7, #12]
 80118b0:	2200      	movs	r2, #0
 80118b2:	661a      	str	r2, [r3, #96]	@ 0x60
 80118b4:	68fb      	ldr	r3, [r7, #12]
 80118b6:	687a      	ldr	r2, [r7, #4]
 80118b8:	641a      	str	r2, [r3, #64]	@ 0x40
 80118ba:	68fb      	ldr	r3, [r7, #12]
 80118bc:	1cba      	adds	r2, r7, #2
 80118be:	2146      	movs	r1, #70	@ 0x46
 80118c0:	8812      	ldrh	r2, [r2, #0]
 80118c2:	525a      	strh	r2, [r3, r1]
 80118c4:	68fb      	ldr	r3, [r7, #12]
 80118c6:	1cba      	adds	r2, r7, #2
 80118c8:	2144      	movs	r1, #68	@ 0x44
 80118ca:	8812      	ldrh	r2, [r2, #0]
 80118cc:	525a      	strh	r2, [r3, r1]
 80118ce:	68fb      	ldr	r3, [r7, #12]
 80118d0:	68ba      	ldr	r2, [r7, #8]
 80118d2:	639a      	str	r2, [r3, #56]	@ 0x38
 80118d4:	68fb      	ldr	r3, [r7, #12]
 80118d6:	1cba      	adds	r2, r7, #2
 80118d8:	8812      	ldrh	r2, [r2, #0]
 80118da:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80118dc:	68fb      	ldr	r3, [r7, #12]
 80118de:	1cba      	adds	r2, r7, #2
 80118e0:	8812      	ldrh	r2, [r2, #0]
 80118e2:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80118e4:	68fb      	ldr	r3, [r7, #12]
 80118e6:	2200      	movs	r2, #0
 80118e8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80118ea:	68fb      	ldr	r3, [r7, #12]
 80118ec:	2200      	movs	r2, #0
 80118ee:	651a      	str	r2, [r3, #80]	@ 0x50
 80118f0:	68fb      	ldr	r3, [r7, #12]
 80118f2:	68da      	ldr	r2, [r3, #12]
 80118f4:	23e0      	movs	r3, #224	@ 0xe0
 80118f6:	00db      	lsls	r3, r3, #3
 80118f8:	429a      	cmp	r2, r3
 80118fa:	d908      	bls.n	801190e <HAL_SPI_TransmitReceive+0x116>
 80118fc:	68fb      	ldr	r3, [r7, #12]
 80118fe:	681b      	ldr	r3, [r3, #0]
 8011900:	685a      	ldr	r2, [r3, #4]
 8011902:	68fb      	ldr	r3, [r7, #12]
 8011904:	681b      	ldr	r3, [r3, #0]
 8011906:	49a4      	ldr	r1, [pc, #656]	@ (8011b98 <HAL_SPI_TransmitReceive+0x3a0>)
 8011908:	400a      	ands	r2, r1
 801190a:	605a      	str	r2, [r3, #4]
 801190c:	e008      	b.n	8011920 <HAL_SPI_TransmitReceive+0x128>
 801190e:	68fb      	ldr	r3, [r7, #12]
 8011910:	681b      	ldr	r3, [r3, #0]
 8011912:	685a      	ldr	r2, [r3, #4]
 8011914:	68fb      	ldr	r3, [r7, #12]
 8011916:	681b      	ldr	r3, [r3, #0]
 8011918:	2180      	movs	r1, #128	@ 0x80
 801191a:	0149      	lsls	r1, r1, #5
 801191c:	430a      	orrs	r2, r1
 801191e:	605a      	str	r2, [r3, #4]
 8011920:	68fb      	ldr	r3, [r7, #12]
 8011922:	681b      	ldr	r3, [r3, #0]
 8011924:	681b      	ldr	r3, [r3, #0]
 8011926:	2240      	movs	r2, #64	@ 0x40
 8011928:	4013      	ands	r3, r2
 801192a:	2b40      	cmp	r3, #64	@ 0x40
 801192c:	d007      	beq.n	801193e <HAL_SPI_TransmitReceive+0x146>
 801192e:	68fb      	ldr	r3, [r7, #12]
 8011930:	681b      	ldr	r3, [r3, #0]
 8011932:	681a      	ldr	r2, [r3, #0]
 8011934:	68fb      	ldr	r3, [r7, #12]
 8011936:	681b      	ldr	r3, [r3, #0]
 8011938:	2140      	movs	r1, #64	@ 0x40
 801193a:	430a      	orrs	r2, r1
 801193c:	601a      	str	r2, [r3, #0]
 801193e:	68fb      	ldr	r3, [r7, #12]
 8011940:	68da      	ldr	r2, [r3, #12]
 8011942:	23e0      	movs	r3, #224	@ 0xe0
 8011944:	00db      	lsls	r3, r3, #3
 8011946:	429a      	cmp	r2, r3
 8011948:	d800      	bhi.n	801194c <HAL_SPI_TransmitReceive+0x154>
 801194a:	e07f      	b.n	8011a4c <HAL_SPI_TransmitReceive+0x254>
 801194c:	68fb      	ldr	r3, [r7, #12]
 801194e:	685b      	ldr	r3, [r3, #4]
 8011950:	2b00      	cmp	r3, #0
 8011952:	d005      	beq.n	8011960 <HAL_SPI_TransmitReceive+0x168>
 8011954:	2312      	movs	r3, #18
 8011956:	18fb      	adds	r3, r7, r3
 8011958:	881b      	ldrh	r3, [r3, #0]
 801195a:	2b01      	cmp	r3, #1
 801195c:	d000      	beq.n	8011960 <HAL_SPI_TransmitReceive+0x168>
 801195e:	e069      	b.n	8011a34 <HAL_SPI_TransmitReceive+0x23c>
 8011960:	68fb      	ldr	r3, [r7, #12]
 8011962:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011964:	881a      	ldrh	r2, [r3, #0]
 8011966:	68fb      	ldr	r3, [r7, #12]
 8011968:	681b      	ldr	r3, [r3, #0]
 801196a:	60da      	str	r2, [r3, #12]
 801196c:	68fb      	ldr	r3, [r7, #12]
 801196e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011970:	1c9a      	adds	r2, r3, #2
 8011972:	68fb      	ldr	r3, [r7, #12]
 8011974:	639a      	str	r2, [r3, #56]	@ 0x38
 8011976:	68fb      	ldr	r3, [r7, #12]
 8011978:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 801197a:	b29b      	uxth	r3, r3
 801197c:	3b01      	subs	r3, #1
 801197e:	b29a      	uxth	r2, r3
 8011980:	68fb      	ldr	r3, [r7, #12]
 8011982:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8011984:	e056      	b.n	8011a34 <HAL_SPI_TransmitReceive+0x23c>
 8011986:	68fb      	ldr	r3, [r7, #12]
 8011988:	681b      	ldr	r3, [r3, #0]
 801198a:	689b      	ldr	r3, [r3, #8]
 801198c:	2202      	movs	r2, #2
 801198e:	4013      	ands	r3, r2
 8011990:	2b02      	cmp	r3, #2
 8011992:	d11b      	bne.n	80119cc <HAL_SPI_TransmitReceive+0x1d4>
 8011994:	68fb      	ldr	r3, [r7, #12]
 8011996:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011998:	b29b      	uxth	r3, r3
 801199a:	2b00      	cmp	r3, #0
 801199c:	d016      	beq.n	80119cc <HAL_SPI_TransmitReceive+0x1d4>
 801199e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80119a0:	2b01      	cmp	r3, #1
 80119a2:	d113      	bne.n	80119cc <HAL_SPI_TransmitReceive+0x1d4>
 80119a4:	68fb      	ldr	r3, [r7, #12]
 80119a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80119a8:	881a      	ldrh	r2, [r3, #0]
 80119aa:	68fb      	ldr	r3, [r7, #12]
 80119ac:	681b      	ldr	r3, [r3, #0]
 80119ae:	60da      	str	r2, [r3, #12]
 80119b0:	68fb      	ldr	r3, [r7, #12]
 80119b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80119b4:	1c9a      	adds	r2, r3, #2
 80119b6:	68fb      	ldr	r3, [r7, #12]
 80119b8:	639a      	str	r2, [r3, #56]	@ 0x38
 80119ba:	68fb      	ldr	r3, [r7, #12]
 80119bc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80119be:	b29b      	uxth	r3, r3
 80119c0:	3b01      	subs	r3, #1
 80119c2:	b29a      	uxth	r2, r3
 80119c4:	68fb      	ldr	r3, [r7, #12]
 80119c6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80119c8:	2300      	movs	r3, #0
 80119ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80119cc:	68fb      	ldr	r3, [r7, #12]
 80119ce:	681b      	ldr	r3, [r3, #0]
 80119d0:	689b      	ldr	r3, [r3, #8]
 80119d2:	2201      	movs	r2, #1
 80119d4:	4013      	ands	r3, r2
 80119d6:	2b01      	cmp	r3, #1
 80119d8:	d11c      	bne.n	8011a14 <HAL_SPI_TransmitReceive+0x21c>
 80119da:	68fb      	ldr	r3, [r7, #12]
 80119dc:	2246      	movs	r2, #70	@ 0x46
 80119de:	5a9b      	ldrh	r3, [r3, r2]
 80119e0:	b29b      	uxth	r3, r3
 80119e2:	2b00      	cmp	r3, #0
 80119e4:	d016      	beq.n	8011a14 <HAL_SPI_TransmitReceive+0x21c>
 80119e6:	68fb      	ldr	r3, [r7, #12]
 80119e8:	681b      	ldr	r3, [r3, #0]
 80119ea:	68da      	ldr	r2, [r3, #12]
 80119ec:	68fb      	ldr	r3, [r7, #12]
 80119ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80119f0:	b292      	uxth	r2, r2
 80119f2:	801a      	strh	r2, [r3, #0]
 80119f4:	68fb      	ldr	r3, [r7, #12]
 80119f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80119f8:	1c9a      	adds	r2, r3, #2
 80119fa:	68fb      	ldr	r3, [r7, #12]
 80119fc:	641a      	str	r2, [r3, #64]	@ 0x40
 80119fe:	68fb      	ldr	r3, [r7, #12]
 8011a00:	2246      	movs	r2, #70	@ 0x46
 8011a02:	5a9b      	ldrh	r3, [r3, r2]
 8011a04:	b29b      	uxth	r3, r3
 8011a06:	3b01      	subs	r3, #1
 8011a08:	b299      	uxth	r1, r3
 8011a0a:	68fb      	ldr	r3, [r7, #12]
 8011a0c:	2246      	movs	r2, #70	@ 0x46
 8011a0e:	5299      	strh	r1, [r3, r2]
 8011a10:	2301      	movs	r3, #1
 8011a12:	627b      	str	r3, [r7, #36]	@ 0x24
 8011a14:	f7fc f92c 	bl	800dc70 <HAL_GetTick>
 8011a18:	0002      	movs	r2, r0
 8011a1a:	69fb      	ldr	r3, [r7, #28]
 8011a1c:	1ad3      	subs	r3, r2, r3
 8011a1e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8011a20:	429a      	cmp	r2, r3
 8011a22:	d807      	bhi.n	8011a34 <HAL_SPI_TransmitReceive+0x23c>
 8011a24:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8011a26:	3301      	adds	r3, #1
 8011a28:	d004      	beq.n	8011a34 <HAL_SPI_TransmitReceive+0x23c>
 8011a2a:	2323      	movs	r3, #35	@ 0x23
 8011a2c:	18fb      	adds	r3, r7, r3
 8011a2e:	2203      	movs	r2, #3
 8011a30:	701a      	strb	r2, [r3, #0]
 8011a32:	e0a2      	b.n	8011b7a <HAL_SPI_TransmitReceive+0x382>
 8011a34:	68fb      	ldr	r3, [r7, #12]
 8011a36:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011a38:	b29b      	uxth	r3, r3
 8011a3a:	2b00      	cmp	r3, #0
 8011a3c:	d1a3      	bne.n	8011986 <HAL_SPI_TransmitReceive+0x18e>
 8011a3e:	68fb      	ldr	r3, [r7, #12]
 8011a40:	2246      	movs	r2, #70	@ 0x46
 8011a42:	5a9b      	ldrh	r3, [r3, r2]
 8011a44:	b29b      	uxth	r3, r3
 8011a46:	2b00      	cmp	r3, #0
 8011a48:	d19d      	bne.n	8011986 <HAL_SPI_TransmitReceive+0x18e>
 8011a4a:	e085      	b.n	8011b58 <HAL_SPI_TransmitReceive+0x360>
 8011a4c:	68fb      	ldr	r3, [r7, #12]
 8011a4e:	685b      	ldr	r3, [r3, #4]
 8011a50:	2b00      	cmp	r3, #0
 8011a52:	d005      	beq.n	8011a60 <HAL_SPI_TransmitReceive+0x268>
 8011a54:	2312      	movs	r3, #18
 8011a56:	18fb      	adds	r3, r7, r3
 8011a58:	881b      	ldrh	r3, [r3, #0]
 8011a5a:	2b01      	cmp	r3, #1
 8011a5c:	d000      	beq.n	8011a60 <HAL_SPI_TransmitReceive+0x268>
 8011a5e:	e070      	b.n	8011b42 <HAL_SPI_TransmitReceive+0x34a>
 8011a60:	68fb      	ldr	r3, [r7, #12]
 8011a62:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8011a64:	68fb      	ldr	r3, [r7, #12]
 8011a66:	681b      	ldr	r3, [r3, #0]
 8011a68:	330c      	adds	r3, #12
 8011a6a:	7812      	ldrb	r2, [r2, #0]
 8011a6c:	701a      	strb	r2, [r3, #0]
 8011a6e:	68fb      	ldr	r3, [r7, #12]
 8011a70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011a72:	1c5a      	adds	r2, r3, #1
 8011a74:	68fb      	ldr	r3, [r7, #12]
 8011a76:	639a      	str	r2, [r3, #56]	@ 0x38
 8011a78:	68fb      	ldr	r3, [r7, #12]
 8011a7a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011a7c:	b29b      	uxth	r3, r3
 8011a7e:	3b01      	subs	r3, #1
 8011a80:	b29a      	uxth	r2, r3
 8011a82:	68fb      	ldr	r3, [r7, #12]
 8011a84:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8011a86:	e05c      	b.n	8011b42 <HAL_SPI_TransmitReceive+0x34a>
 8011a88:	68fb      	ldr	r3, [r7, #12]
 8011a8a:	681b      	ldr	r3, [r3, #0]
 8011a8c:	689b      	ldr	r3, [r3, #8]
 8011a8e:	2202      	movs	r2, #2
 8011a90:	4013      	ands	r3, r2
 8011a92:	2b02      	cmp	r3, #2
 8011a94:	d11c      	bne.n	8011ad0 <HAL_SPI_TransmitReceive+0x2d8>
 8011a96:	68fb      	ldr	r3, [r7, #12]
 8011a98:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011a9a:	b29b      	uxth	r3, r3
 8011a9c:	2b00      	cmp	r3, #0
 8011a9e:	d017      	beq.n	8011ad0 <HAL_SPI_TransmitReceive+0x2d8>
 8011aa0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011aa2:	2b01      	cmp	r3, #1
 8011aa4:	d114      	bne.n	8011ad0 <HAL_SPI_TransmitReceive+0x2d8>
 8011aa6:	68fb      	ldr	r3, [r7, #12]
 8011aa8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8011aaa:	68fb      	ldr	r3, [r7, #12]
 8011aac:	681b      	ldr	r3, [r3, #0]
 8011aae:	330c      	adds	r3, #12
 8011ab0:	7812      	ldrb	r2, [r2, #0]
 8011ab2:	701a      	strb	r2, [r3, #0]
 8011ab4:	68fb      	ldr	r3, [r7, #12]
 8011ab6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011ab8:	1c5a      	adds	r2, r3, #1
 8011aba:	68fb      	ldr	r3, [r7, #12]
 8011abc:	639a      	str	r2, [r3, #56]	@ 0x38
 8011abe:	68fb      	ldr	r3, [r7, #12]
 8011ac0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011ac2:	b29b      	uxth	r3, r3
 8011ac4:	3b01      	subs	r3, #1
 8011ac6:	b29a      	uxth	r2, r3
 8011ac8:	68fb      	ldr	r3, [r7, #12]
 8011aca:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8011acc:	2300      	movs	r3, #0
 8011ace:	627b      	str	r3, [r7, #36]	@ 0x24
 8011ad0:	68fb      	ldr	r3, [r7, #12]
 8011ad2:	681b      	ldr	r3, [r3, #0]
 8011ad4:	689b      	ldr	r3, [r3, #8]
 8011ad6:	2201      	movs	r2, #1
 8011ad8:	4013      	ands	r3, r2
 8011ada:	2b01      	cmp	r3, #1
 8011adc:	d11e      	bne.n	8011b1c <HAL_SPI_TransmitReceive+0x324>
 8011ade:	68fb      	ldr	r3, [r7, #12]
 8011ae0:	2246      	movs	r2, #70	@ 0x46
 8011ae2:	5a9b      	ldrh	r3, [r3, r2]
 8011ae4:	b29b      	uxth	r3, r3
 8011ae6:	2b00      	cmp	r3, #0
 8011ae8:	d018      	beq.n	8011b1c <HAL_SPI_TransmitReceive+0x324>
 8011aea:	68fb      	ldr	r3, [r7, #12]
 8011aec:	681b      	ldr	r3, [r3, #0]
 8011aee:	330c      	adds	r3, #12
 8011af0:	001a      	movs	r2, r3
 8011af2:	68fb      	ldr	r3, [r7, #12]
 8011af4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011af6:	7812      	ldrb	r2, [r2, #0]
 8011af8:	b2d2      	uxtb	r2, r2
 8011afa:	701a      	strb	r2, [r3, #0]
 8011afc:	68fb      	ldr	r3, [r7, #12]
 8011afe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011b00:	1c5a      	adds	r2, r3, #1
 8011b02:	68fb      	ldr	r3, [r7, #12]
 8011b04:	641a      	str	r2, [r3, #64]	@ 0x40
 8011b06:	68fb      	ldr	r3, [r7, #12]
 8011b08:	2246      	movs	r2, #70	@ 0x46
 8011b0a:	5a9b      	ldrh	r3, [r3, r2]
 8011b0c:	b29b      	uxth	r3, r3
 8011b0e:	3b01      	subs	r3, #1
 8011b10:	b299      	uxth	r1, r3
 8011b12:	68fb      	ldr	r3, [r7, #12]
 8011b14:	2246      	movs	r2, #70	@ 0x46
 8011b16:	5299      	strh	r1, [r3, r2]
 8011b18:	2301      	movs	r3, #1
 8011b1a:	627b      	str	r3, [r7, #36]	@ 0x24
 8011b1c:	f7fc f8a8 	bl	800dc70 <HAL_GetTick>
 8011b20:	0002      	movs	r2, r0
 8011b22:	69fb      	ldr	r3, [r7, #28]
 8011b24:	1ad3      	subs	r3, r2, r3
 8011b26:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8011b28:	429a      	cmp	r2, r3
 8011b2a:	d802      	bhi.n	8011b32 <HAL_SPI_TransmitReceive+0x33a>
 8011b2c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8011b2e:	3301      	adds	r3, #1
 8011b30:	d102      	bne.n	8011b38 <HAL_SPI_TransmitReceive+0x340>
 8011b32:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8011b34:	2b00      	cmp	r3, #0
 8011b36:	d104      	bne.n	8011b42 <HAL_SPI_TransmitReceive+0x34a>
 8011b38:	2323      	movs	r3, #35	@ 0x23
 8011b3a:	18fb      	adds	r3, r7, r3
 8011b3c:	2203      	movs	r2, #3
 8011b3e:	701a      	strb	r2, [r3, #0]
 8011b40:	e01b      	b.n	8011b7a <HAL_SPI_TransmitReceive+0x382>
 8011b42:	68fb      	ldr	r3, [r7, #12]
 8011b44:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011b46:	b29b      	uxth	r3, r3
 8011b48:	2b00      	cmp	r3, #0
 8011b4a:	d19d      	bne.n	8011a88 <HAL_SPI_TransmitReceive+0x290>
 8011b4c:	68fb      	ldr	r3, [r7, #12]
 8011b4e:	2246      	movs	r2, #70	@ 0x46
 8011b50:	5a9b      	ldrh	r3, [r3, r2]
 8011b52:	b29b      	uxth	r3, r3
 8011b54:	2b00      	cmp	r3, #0
 8011b56:	d197      	bne.n	8011a88 <HAL_SPI_TransmitReceive+0x290>
 8011b58:	69fa      	ldr	r2, [r7, #28]
 8011b5a:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8011b5c:	68fb      	ldr	r3, [r7, #12]
 8011b5e:	0018      	movs	r0, r3
 8011b60:	f000 fa54 	bl	801200c <SPI_EndRxTxTransaction>
 8011b64:	1e03      	subs	r3, r0, #0
 8011b66:	d007      	beq.n	8011b78 <HAL_SPI_TransmitReceive+0x380>
 8011b68:	2323      	movs	r3, #35	@ 0x23
 8011b6a:	18fb      	adds	r3, r7, r3
 8011b6c:	2201      	movs	r2, #1
 8011b6e:	701a      	strb	r2, [r3, #0]
 8011b70:	68fb      	ldr	r3, [r7, #12]
 8011b72:	2220      	movs	r2, #32
 8011b74:	661a      	str	r2, [r3, #96]	@ 0x60
 8011b76:	e000      	b.n	8011b7a <HAL_SPI_TransmitReceive+0x382>
 8011b78:	46c0      	nop			@ (mov r8, r8)
 8011b7a:	68fb      	ldr	r3, [r7, #12]
 8011b7c:	225d      	movs	r2, #93	@ 0x5d
 8011b7e:	2101      	movs	r1, #1
 8011b80:	5499      	strb	r1, [r3, r2]
 8011b82:	68fb      	ldr	r3, [r7, #12]
 8011b84:	225c      	movs	r2, #92	@ 0x5c
 8011b86:	2100      	movs	r1, #0
 8011b88:	5499      	strb	r1, [r3, r2]
 8011b8a:	2323      	movs	r3, #35	@ 0x23
 8011b8c:	18fb      	adds	r3, r7, r3
 8011b8e:	781b      	ldrb	r3, [r3, #0]
 8011b90:	0018      	movs	r0, r3
 8011b92:	46bd      	mov	sp, r7
 8011b94:	b00a      	add	sp, #40	@ 0x28
 8011b96:	bd80      	pop	{r7, pc}
 8011b98:	ffffefff 	.word	0xffffefff

08011b9c <HAL_SPI_IRQHandler>:
 8011b9c:	b580      	push	{r7, lr}
 8011b9e:	b088      	sub	sp, #32
 8011ba0:	af00      	add	r7, sp, #0
 8011ba2:	6078      	str	r0, [r7, #4]
 8011ba4:	687b      	ldr	r3, [r7, #4]
 8011ba6:	681b      	ldr	r3, [r3, #0]
 8011ba8:	685b      	ldr	r3, [r3, #4]
 8011baa:	61fb      	str	r3, [r7, #28]
 8011bac:	687b      	ldr	r3, [r7, #4]
 8011bae:	681b      	ldr	r3, [r3, #0]
 8011bb0:	689b      	ldr	r3, [r3, #8]
 8011bb2:	61bb      	str	r3, [r7, #24]
 8011bb4:	69bb      	ldr	r3, [r7, #24]
 8011bb6:	2240      	movs	r2, #64	@ 0x40
 8011bb8:	4013      	ands	r3, r2
 8011bba:	d10d      	bne.n	8011bd8 <HAL_SPI_IRQHandler+0x3c>
 8011bbc:	69bb      	ldr	r3, [r7, #24]
 8011bbe:	2201      	movs	r2, #1
 8011bc0:	4013      	ands	r3, r2
 8011bc2:	d009      	beq.n	8011bd8 <HAL_SPI_IRQHandler+0x3c>
 8011bc4:	69fb      	ldr	r3, [r7, #28]
 8011bc6:	2240      	movs	r2, #64	@ 0x40
 8011bc8:	4013      	ands	r3, r2
 8011bca:	d005      	beq.n	8011bd8 <HAL_SPI_IRQHandler+0x3c>
 8011bcc:	687b      	ldr	r3, [r7, #4]
 8011bce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011bd0:	687a      	ldr	r2, [r7, #4]
 8011bd2:	0010      	movs	r0, r2
 8011bd4:	4798      	blx	r3
 8011bd6:	e0c5      	b.n	8011d64 <HAL_SPI_IRQHandler+0x1c8>
 8011bd8:	69bb      	ldr	r3, [r7, #24]
 8011bda:	2202      	movs	r2, #2
 8011bdc:	4013      	ands	r3, r2
 8011bde:	d009      	beq.n	8011bf4 <HAL_SPI_IRQHandler+0x58>
 8011be0:	69fb      	ldr	r3, [r7, #28]
 8011be2:	2280      	movs	r2, #128	@ 0x80
 8011be4:	4013      	ands	r3, r2
 8011be6:	d005      	beq.n	8011bf4 <HAL_SPI_IRQHandler+0x58>
 8011be8:	687b      	ldr	r3, [r7, #4]
 8011bea:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011bec:	687a      	ldr	r2, [r7, #4]
 8011bee:	0010      	movs	r0, r2
 8011bf0:	4798      	blx	r3
 8011bf2:	e0b7      	b.n	8011d64 <HAL_SPI_IRQHandler+0x1c8>
 8011bf4:	69bb      	ldr	r3, [r7, #24]
 8011bf6:	2220      	movs	r2, #32
 8011bf8:	4013      	ands	r3, r2
 8011bfa:	d109      	bne.n	8011c10 <HAL_SPI_IRQHandler+0x74>
 8011bfc:	69bb      	ldr	r3, [r7, #24]
 8011bfe:	2240      	movs	r2, #64	@ 0x40
 8011c00:	4013      	ands	r3, r2
 8011c02:	d105      	bne.n	8011c10 <HAL_SPI_IRQHandler+0x74>
 8011c04:	69ba      	ldr	r2, [r7, #24]
 8011c06:	2380      	movs	r3, #128	@ 0x80
 8011c08:	005b      	lsls	r3, r3, #1
 8011c0a:	4013      	ands	r3, r2
 8011c0c:	d100      	bne.n	8011c10 <HAL_SPI_IRQHandler+0x74>
 8011c0e:	e0a9      	b.n	8011d64 <HAL_SPI_IRQHandler+0x1c8>
 8011c10:	69fb      	ldr	r3, [r7, #28]
 8011c12:	2220      	movs	r2, #32
 8011c14:	4013      	ands	r3, r2
 8011c16:	d100      	bne.n	8011c1a <HAL_SPI_IRQHandler+0x7e>
 8011c18:	e0a4      	b.n	8011d64 <HAL_SPI_IRQHandler+0x1c8>
 8011c1a:	69bb      	ldr	r3, [r7, #24]
 8011c1c:	2240      	movs	r2, #64	@ 0x40
 8011c1e:	4013      	ands	r3, r2
 8011c20:	d023      	beq.n	8011c6a <HAL_SPI_IRQHandler+0xce>
 8011c22:	687b      	ldr	r3, [r7, #4]
 8011c24:	225d      	movs	r2, #93	@ 0x5d
 8011c26:	5c9b      	ldrb	r3, [r3, r2]
 8011c28:	b2db      	uxtb	r3, r3
 8011c2a:	2b03      	cmp	r3, #3
 8011c2c:	d011      	beq.n	8011c52 <HAL_SPI_IRQHandler+0xb6>
 8011c2e:	687b      	ldr	r3, [r7, #4]
 8011c30:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011c32:	2204      	movs	r2, #4
 8011c34:	431a      	orrs	r2, r3
 8011c36:	687b      	ldr	r3, [r7, #4]
 8011c38:	661a      	str	r2, [r3, #96]	@ 0x60
 8011c3a:	2300      	movs	r3, #0
 8011c3c:	617b      	str	r3, [r7, #20]
 8011c3e:	687b      	ldr	r3, [r7, #4]
 8011c40:	681b      	ldr	r3, [r3, #0]
 8011c42:	68db      	ldr	r3, [r3, #12]
 8011c44:	617b      	str	r3, [r7, #20]
 8011c46:	687b      	ldr	r3, [r7, #4]
 8011c48:	681b      	ldr	r3, [r3, #0]
 8011c4a:	689b      	ldr	r3, [r3, #8]
 8011c4c:	617b      	str	r3, [r7, #20]
 8011c4e:	697b      	ldr	r3, [r7, #20]
 8011c50:	e00b      	b.n	8011c6a <HAL_SPI_IRQHandler+0xce>
 8011c52:	2300      	movs	r3, #0
 8011c54:	613b      	str	r3, [r7, #16]
 8011c56:	687b      	ldr	r3, [r7, #4]
 8011c58:	681b      	ldr	r3, [r3, #0]
 8011c5a:	68db      	ldr	r3, [r3, #12]
 8011c5c:	613b      	str	r3, [r7, #16]
 8011c5e:	687b      	ldr	r3, [r7, #4]
 8011c60:	681b      	ldr	r3, [r3, #0]
 8011c62:	689b      	ldr	r3, [r3, #8]
 8011c64:	613b      	str	r3, [r7, #16]
 8011c66:	693b      	ldr	r3, [r7, #16]
 8011c68:	e07c      	b.n	8011d64 <HAL_SPI_IRQHandler+0x1c8>
 8011c6a:	69bb      	ldr	r3, [r7, #24]
 8011c6c:	2220      	movs	r2, #32
 8011c6e:	4013      	ands	r3, r2
 8011c70:	d014      	beq.n	8011c9c <HAL_SPI_IRQHandler+0x100>
 8011c72:	687b      	ldr	r3, [r7, #4]
 8011c74:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011c76:	2201      	movs	r2, #1
 8011c78:	431a      	orrs	r2, r3
 8011c7a:	687b      	ldr	r3, [r7, #4]
 8011c7c:	661a      	str	r2, [r3, #96]	@ 0x60
 8011c7e:	2300      	movs	r3, #0
 8011c80:	60fb      	str	r3, [r7, #12]
 8011c82:	687b      	ldr	r3, [r7, #4]
 8011c84:	681b      	ldr	r3, [r3, #0]
 8011c86:	689b      	ldr	r3, [r3, #8]
 8011c88:	60fb      	str	r3, [r7, #12]
 8011c8a:	687b      	ldr	r3, [r7, #4]
 8011c8c:	681b      	ldr	r3, [r3, #0]
 8011c8e:	681a      	ldr	r2, [r3, #0]
 8011c90:	687b      	ldr	r3, [r7, #4]
 8011c92:	681b      	ldr	r3, [r3, #0]
 8011c94:	2140      	movs	r1, #64	@ 0x40
 8011c96:	438a      	bics	r2, r1
 8011c98:	601a      	str	r2, [r3, #0]
 8011c9a:	68fb      	ldr	r3, [r7, #12]
 8011c9c:	69ba      	ldr	r2, [r7, #24]
 8011c9e:	2380      	movs	r3, #128	@ 0x80
 8011ca0:	005b      	lsls	r3, r3, #1
 8011ca2:	4013      	ands	r3, r2
 8011ca4:	d00c      	beq.n	8011cc0 <HAL_SPI_IRQHandler+0x124>
 8011ca6:	687b      	ldr	r3, [r7, #4]
 8011ca8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011caa:	2208      	movs	r2, #8
 8011cac:	431a      	orrs	r2, r3
 8011cae:	687b      	ldr	r3, [r7, #4]
 8011cb0:	661a      	str	r2, [r3, #96]	@ 0x60
 8011cb2:	2300      	movs	r3, #0
 8011cb4:	60bb      	str	r3, [r7, #8]
 8011cb6:	687b      	ldr	r3, [r7, #4]
 8011cb8:	681b      	ldr	r3, [r3, #0]
 8011cba:	689b      	ldr	r3, [r3, #8]
 8011cbc:	60bb      	str	r3, [r7, #8]
 8011cbe:	68bb      	ldr	r3, [r7, #8]
 8011cc0:	687b      	ldr	r3, [r7, #4]
 8011cc2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011cc4:	2b00      	cmp	r3, #0
 8011cc6:	d04c      	beq.n	8011d62 <HAL_SPI_IRQHandler+0x1c6>
 8011cc8:	687b      	ldr	r3, [r7, #4]
 8011cca:	681b      	ldr	r3, [r3, #0]
 8011ccc:	685a      	ldr	r2, [r3, #4]
 8011cce:	687b      	ldr	r3, [r7, #4]
 8011cd0:	681b      	ldr	r3, [r3, #0]
 8011cd2:	21e0      	movs	r1, #224	@ 0xe0
 8011cd4:	438a      	bics	r2, r1
 8011cd6:	605a      	str	r2, [r3, #4]
 8011cd8:	687b      	ldr	r3, [r7, #4]
 8011cda:	225d      	movs	r2, #93	@ 0x5d
 8011cdc:	2101      	movs	r1, #1
 8011cde:	5499      	strb	r1, [r3, r2]
 8011ce0:	69fb      	ldr	r3, [r7, #28]
 8011ce2:	2202      	movs	r2, #2
 8011ce4:	4013      	ands	r3, r2
 8011ce6:	d103      	bne.n	8011cf0 <HAL_SPI_IRQHandler+0x154>
 8011ce8:	69fb      	ldr	r3, [r7, #28]
 8011cea:	2201      	movs	r2, #1
 8011cec:	4013      	ands	r3, r2
 8011cee:	d032      	beq.n	8011d56 <HAL_SPI_IRQHandler+0x1ba>
 8011cf0:	687b      	ldr	r3, [r7, #4]
 8011cf2:	681b      	ldr	r3, [r3, #0]
 8011cf4:	685a      	ldr	r2, [r3, #4]
 8011cf6:	687b      	ldr	r3, [r7, #4]
 8011cf8:	681b      	ldr	r3, [r3, #0]
 8011cfa:	2103      	movs	r1, #3
 8011cfc:	438a      	bics	r2, r1
 8011cfe:	605a      	str	r2, [r3, #4]
 8011d00:	687b      	ldr	r3, [r7, #4]
 8011d02:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8011d04:	2b00      	cmp	r3, #0
 8011d06:	d010      	beq.n	8011d2a <HAL_SPI_IRQHandler+0x18e>
 8011d08:	687b      	ldr	r3, [r7, #4]
 8011d0a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8011d0c:	4a17      	ldr	r2, [pc, #92]	@ (8011d6c <HAL_SPI_IRQHandler+0x1d0>)
 8011d0e:	639a      	str	r2, [r3, #56]	@ 0x38
 8011d10:	687b      	ldr	r3, [r7, #4]
 8011d12:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8011d14:	0018      	movs	r0, r3
 8011d16:	f7fc fa3f 	bl	800e198 <HAL_DMA_Abort_IT>
 8011d1a:	1e03      	subs	r3, r0, #0
 8011d1c:	d005      	beq.n	8011d2a <HAL_SPI_IRQHandler+0x18e>
 8011d1e:	687b      	ldr	r3, [r7, #4]
 8011d20:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011d22:	2240      	movs	r2, #64	@ 0x40
 8011d24:	431a      	orrs	r2, r3
 8011d26:	687b      	ldr	r3, [r7, #4]
 8011d28:	661a      	str	r2, [r3, #96]	@ 0x60
 8011d2a:	687b      	ldr	r3, [r7, #4]
 8011d2c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011d2e:	2b00      	cmp	r3, #0
 8011d30:	d016      	beq.n	8011d60 <HAL_SPI_IRQHandler+0x1c4>
 8011d32:	687b      	ldr	r3, [r7, #4]
 8011d34:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011d36:	4a0d      	ldr	r2, [pc, #52]	@ (8011d6c <HAL_SPI_IRQHandler+0x1d0>)
 8011d38:	639a      	str	r2, [r3, #56]	@ 0x38
 8011d3a:	687b      	ldr	r3, [r7, #4]
 8011d3c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011d3e:	0018      	movs	r0, r3
 8011d40:	f7fc fa2a 	bl	800e198 <HAL_DMA_Abort_IT>
 8011d44:	1e03      	subs	r3, r0, #0
 8011d46:	d00b      	beq.n	8011d60 <HAL_SPI_IRQHandler+0x1c4>
 8011d48:	687b      	ldr	r3, [r7, #4]
 8011d4a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011d4c:	2240      	movs	r2, #64	@ 0x40
 8011d4e:	431a      	orrs	r2, r3
 8011d50:	687b      	ldr	r3, [r7, #4]
 8011d52:	661a      	str	r2, [r3, #96]	@ 0x60
 8011d54:	e004      	b.n	8011d60 <HAL_SPI_IRQHandler+0x1c4>
 8011d56:	687b      	ldr	r3, [r7, #4]
 8011d58:	0018      	movs	r0, r3
 8011d5a:	f000 f809 	bl	8011d70 <HAL_SPI_ErrorCallback>
 8011d5e:	e000      	b.n	8011d62 <HAL_SPI_IRQHandler+0x1c6>
 8011d60:	46c0      	nop			@ (mov r8, r8)
 8011d62:	46c0      	nop			@ (mov r8, r8)
 8011d64:	46bd      	mov	sp, r7
 8011d66:	b008      	add	sp, #32
 8011d68:	bd80      	pop	{r7, pc}
 8011d6a:	46c0      	nop			@ (mov r8, r8)
 8011d6c:	08011d81 	.word	0x08011d81

08011d70 <HAL_SPI_ErrorCallback>:
 8011d70:	b580      	push	{r7, lr}
 8011d72:	b082      	sub	sp, #8
 8011d74:	af00      	add	r7, sp, #0
 8011d76:	6078      	str	r0, [r7, #4]
 8011d78:	46c0      	nop			@ (mov r8, r8)
 8011d7a:	46bd      	mov	sp, r7
 8011d7c:	b002      	add	sp, #8
 8011d7e:	bd80      	pop	{r7, pc}

08011d80 <SPI_DMAAbortOnError>:
 8011d80:	b580      	push	{r7, lr}
 8011d82:	b084      	sub	sp, #16
 8011d84:	af00      	add	r7, sp, #0
 8011d86:	6078      	str	r0, [r7, #4]
 8011d88:	687b      	ldr	r3, [r7, #4]
 8011d8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011d8c:	60fb      	str	r3, [r7, #12]
 8011d8e:	68fb      	ldr	r3, [r7, #12]
 8011d90:	2246      	movs	r2, #70	@ 0x46
 8011d92:	2100      	movs	r1, #0
 8011d94:	5299      	strh	r1, [r3, r2]
 8011d96:	68fb      	ldr	r3, [r7, #12]
 8011d98:	2200      	movs	r2, #0
 8011d9a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8011d9c:	68fb      	ldr	r3, [r7, #12]
 8011d9e:	0018      	movs	r0, r3
 8011da0:	f7ff ffe6 	bl	8011d70 <HAL_SPI_ErrorCallback>
 8011da4:	46c0      	nop			@ (mov r8, r8)
 8011da6:	46bd      	mov	sp, r7
 8011da8:	b004      	add	sp, #16
 8011daa:	bd80      	pop	{r7, pc}

08011dac <SPI_WaitFlagStateUntilTimeout>:
 8011dac:	b580      	push	{r7, lr}
 8011dae:	b088      	sub	sp, #32
 8011db0:	af00      	add	r7, sp, #0
 8011db2:	60f8      	str	r0, [r7, #12]
 8011db4:	60b9      	str	r1, [r7, #8]
 8011db6:	603b      	str	r3, [r7, #0]
 8011db8:	1dfb      	adds	r3, r7, #7
 8011dba:	701a      	strb	r2, [r3, #0]
 8011dbc:	f7fb ff58 	bl	800dc70 <HAL_GetTick>
 8011dc0:	0002      	movs	r2, r0
 8011dc2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011dc4:	1a9b      	subs	r3, r3, r2
 8011dc6:	683a      	ldr	r2, [r7, #0]
 8011dc8:	18d3      	adds	r3, r2, r3
 8011dca:	61fb      	str	r3, [r7, #28]
 8011dcc:	f7fb ff50 	bl	800dc70 <HAL_GetTick>
 8011dd0:	0003      	movs	r3, r0
 8011dd2:	61bb      	str	r3, [r7, #24]
 8011dd4:	4b3a      	ldr	r3, [pc, #232]	@ (8011ec0 <SPI_WaitFlagStateUntilTimeout+0x114>)
 8011dd6:	681b      	ldr	r3, [r3, #0]
 8011dd8:	015b      	lsls	r3, r3, #5
 8011dda:	0d1b      	lsrs	r3, r3, #20
 8011ddc:	69fa      	ldr	r2, [r7, #28]
 8011dde:	4353      	muls	r3, r2
 8011de0:	617b      	str	r3, [r7, #20]
 8011de2:	e058      	b.n	8011e96 <SPI_WaitFlagStateUntilTimeout+0xea>
 8011de4:	683b      	ldr	r3, [r7, #0]
 8011de6:	3301      	adds	r3, #1
 8011de8:	d055      	beq.n	8011e96 <SPI_WaitFlagStateUntilTimeout+0xea>
 8011dea:	f7fb ff41 	bl	800dc70 <HAL_GetTick>
 8011dee:	0002      	movs	r2, r0
 8011df0:	69bb      	ldr	r3, [r7, #24]
 8011df2:	1ad3      	subs	r3, r2, r3
 8011df4:	69fa      	ldr	r2, [r7, #28]
 8011df6:	429a      	cmp	r2, r3
 8011df8:	d902      	bls.n	8011e00 <SPI_WaitFlagStateUntilTimeout+0x54>
 8011dfa:	69fb      	ldr	r3, [r7, #28]
 8011dfc:	2b00      	cmp	r3, #0
 8011dfe:	d142      	bne.n	8011e86 <SPI_WaitFlagStateUntilTimeout+0xda>
 8011e00:	68fb      	ldr	r3, [r7, #12]
 8011e02:	681b      	ldr	r3, [r3, #0]
 8011e04:	685a      	ldr	r2, [r3, #4]
 8011e06:	68fb      	ldr	r3, [r7, #12]
 8011e08:	681b      	ldr	r3, [r3, #0]
 8011e0a:	21e0      	movs	r1, #224	@ 0xe0
 8011e0c:	438a      	bics	r2, r1
 8011e0e:	605a      	str	r2, [r3, #4]
 8011e10:	68fb      	ldr	r3, [r7, #12]
 8011e12:	685a      	ldr	r2, [r3, #4]
 8011e14:	2382      	movs	r3, #130	@ 0x82
 8011e16:	005b      	lsls	r3, r3, #1
 8011e18:	429a      	cmp	r2, r3
 8011e1a:	d113      	bne.n	8011e44 <SPI_WaitFlagStateUntilTimeout+0x98>
 8011e1c:	68fb      	ldr	r3, [r7, #12]
 8011e1e:	689a      	ldr	r2, [r3, #8]
 8011e20:	2380      	movs	r3, #128	@ 0x80
 8011e22:	021b      	lsls	r3, r3, #8
 8011e24:	429a      	cmp	r2, r3
 8011e26:	d005      	beq.n	8011e34 <SPI_WaitFlagStateUntilTimeout+0x88>
 8011e28:	68fb      	ldr	r3, [r7, #12]
 8011e2a:	689a      	ldr	r2, [r3, #8]
 8011e2c:	2380      	movs	r3, #128	@ 0x80
 8011e2e:	00db      	lsls	r3, r3, #3
 8011e30:	429a      	cmp	r2, r3
 8011e32:	d107      	bne.n	8011e44 <SPI_WaitFlagStateUntilTimeout+0x98>
 8011e34:	68fb      	ldr	r3, [r7, #12]
 8011e36:	681b      	ldr	r3, [r3, #0]
 8011e38:	681a      	ldr	r2, [r3, #0]
 8011e3a:	68fb      	ldr	r3, [r7, #12]
 8011e3c:	681b      	ldr	r3, [r3, #0]
 8011e3e:	2140      	movs	r1, #64	@ 0x40
 8011e40:	438a      	bics	r2, r1
 8011e42:	601a      	str	r2, [r3, #0]
 8011e44:	68fb      	ldr	r3, [r7, #12]
 8011e46:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8011e48:	2380      	movs	r3, #128	@ 0x80
 8011e4a:	019b      	lsls	r3, r3, #6
 8011e4c:	429a      	cmp	r2, r3
 8011e4e:	d110      	bne.n	8011e72 <SPI_WaitFlagStateUntilTimeout+0xc6>
 8011e50:	68fb      	ldr	r3, [r7, #12]
 8011e52:	681b      	ldr	r3, [r3, #0]
 8011e54:	681a      	ldr	r2, [r3, #0]
 8011e56:	68fb      	ldr	r3, [r7, #12]
 8011e58:	681b      	ldr	r3, [r3, #0]
 8011e5a:	491a      	ldr	r1, [pc, #104]	@ (8011ec4 <SPI_WaitFlagStateUntilTimeout+0x118>)
 8011e5c:	400a      	ands	r2, r1
 8011e5e:	601a      	str	r2, [r3, #0]
 8011e60:	68fb      	ldr	r3, [r7, #12]
 8011e62:	681b      	ldr	r3, [r3, #0]
 8011e64:	681a      	ldr	r2, [r3, #0]
 8011e66:	68fb      	ldr	r3, [r7, #12]
 8011e68:	681b      	ldr	r3, [r3, #0]
 8011e6a:	2180      	movs	r1, #128	@ 0x80
 8011e6c:	0189      	lsls	r1, r1, #6
 8011e6e:	430a      	orrs	r2, r1
 8011e70:	601a      	str	r2, [r3, #0]
 8011e72:	68fb      	ldr	r3, [r7, #12]
 8011e74:	225d      	movs	r2, #93	@ 0x5d
 8011e76:	2101      	movs	r1, #1
 8011e78:	5499      	strb	r1, [r3, r2]
 8011e7a:	68fb      	ldr	r3, [r7, #12]
 8011e7c:	225c      	movs	r2, #92	@ 0x5c
 8011e7e:	2100      	movs	r1, #0
 8011e80:	5499      	strb	r1, [r3, r2]
 8011e82:	2303      	movs	r3, #3
 8011e84:	e017      	b.n	8011eb6 <SPI_WaitFlagStateUntilTimeout+0x10a>
 8011e86:	697b      	ldr	r3, [r7, #20]
 8011e88:	2b00      	cmp	r3, #0
 8011e8a:	d101      	bne.n	8011e90 <SPI_WaitFlagStateUntilTimeout+0xe4>
 8011e8c:	2300      	movs	r3, #0
 8011e8e:	61fb      	str	r3, [r7, #28]
 8011e90:	697b      	ldr	r3, [r7, #20]
 8011e92:	3b01      	subs	r3, #1
 8011e94:	617b      	str	r3, [r7, #20]
 8011e96:	68fb      	ldr	r3, [r7, #12]
 8011e98:	681b      	ldr	r3, [r3, #0]
 8011e9a:	689b      	ldr	r3, [r3, #8]
 8011e9c:	68ba      	ldr	r2, [r7, #8]
 8011e9e:	4013      	ands	r3, r2
 8011ea0:	68ba      	ldr	r2, [r7, #8]
 8011ea2:	1ad3      	subs	r3, r2, r3
 8011ea4:	425a      	negs	r2, r3
 8011ea6:	4153      	adcs	r3, r2
 8011ea8:	b2db      	uxtb	r3, r3
 8011eaa:	001a      	movs	r2, r3
 8011eac:	1dfb      	adds	r3, r7, #7
 8011eae:	781b      	ldrb	r3, [r3, #0]
 8011eb0:	429a      	cmp	r2, r3
 8011eb2:	d197      	bne.n	8011de4 <SPI_WaitFlagStateUntilTimeout+0x38>
 8011eb4:	2300      	movs	r3, #0
 8011eb6:	0018      	movs	r0, r3
 8011eb8:	46bd      	mov	sp, r7
 8011eba:	b008      	add	sp, #32
 8011ebc:	bd80      	pop	{r7, pc}
 8011ebe:	46c0      	nop			@ (mov r8, r8)
 8011ec0:	20000494 	.word	0x20000494
 8011ec4:	ffffdfff 	.word	0xffffdfff

08011ec8 <SPI_WaitFifoStateUntilTimeout>:
 8011ec8:	b580      	push	{r7, lr}
 8011eca:	b08a      	sub	sp, #40	@ 0x28
 8011ecc:	af00      	add	r7, sp, #0
 8011ece:	60f8      	str	r0, [r7, #12]
 8011ed0:	60b9      	str	r1, [r7, #8]
 8011ed2:	607a      	str	r2, [r7, #4]
 8011ed4:	603b      	str	r3, [r7, #0]
 8011ed6:	2317      	movs	r3, #23
 8011ed8:	18fb      	adds	r3, r7, r3
 8011eda:	2200      	movs	r2, #0
 8011edc:	701a      	strb	r2, [r3, #0]
 8011ede:	f7fb fec7 	bl	800dc70 <HAL_GetTick>
 8011ee2:	0002      	movs	r2, r0
 8011ee4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8011ee6:	1a9b      	subs	r3, r3, r2
 8011ee8:	683a      	ldr	r2, [r7, #0]
 8011eea:	18d3      	adds	r3, r2, r3
 8011eec:	627b      	str	r3, [r7, #36]	@ 0x24
 8011eee:	f7fb febf 	bl	800dc70 <HAL_GetTick>
 8011ef2:	0003      	movs	r3, r0
 8011ef4:	623b      	str	r3, [r7, #32]
 8011ef6:	68fb      	ldr	r3, [r7, #12]
 8011ef8:	681b      	ldr	r3, [r3, #0]
 8011efa:	330c      	adds	r3, #12
 8011efc:	61fb      	str	r3, [r7, #28]
 8011efe:	4b41      	ldr	r3, [pc, #260]	@ (8012004 <SPI_WaitFifoStateUntilTimeout+0x13c>)
 8011f00:	681a      	ldr	r2, [r3, #0]
 8011f02:	0013      	movs	r3, r2
 8011f04:	009b      	lsls	r3, r3, #2
 8011f06:	189b      	adds	r3, r3, r2
 8011f08:	00da      	lsls	r2, r3, #3
 8011f0a:	1ad3      	subs	r3, r2, r3
 8011f0c:	0d1b      	lsrs	r3, r3, #20
 8011f0e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011f10:	4353      	muls	r3, r2
 8011f12:	61bb      	str	r3, [r7, #24]
 8011f14:	e068      	b.n	8011fe8 <SPI_WaitFifoStateUntilTimeout+0x120>
 8011f16:	68ba      	ldr	r2, [r7, #8]
 8011f18:	23c0      	movs	r3, #192	@ 0xc0
 8011f1a:	00db      	lsls	r3, r3, #3
 8011f1c:	429a      	cmp	r2, r3
 8011f1e:	d10a      	bne.n	8011f36 <SPI_WaitFifoStateUntilTimeout+0x6e>
 8011f20:	687b      	ldr	r3, [r7, #4]
 8011f22:	2b00      	cmp	r3, #0
 8011f24:	d107      	bne.n	8011f36 <SPI_WaitFifoStateUntilTimeout+0x6e>
 8011f26:	69fb      	ldr	r3, [r7, #28]
 8011f28:	781b      	ldrb	r3, [r3, #0]
 8011f2a:	b2da      	uxtb	r2, r3
 8011f2c:	2117      	movs	r1, #23
 8011f2e:	187b      	adds	r3, r7, r1
 8011f30:	701a      	strb	r2, [r3, #0]
 8011f32:	187b      	adds	r3, r7, r1
 8011f34:	781b      	ldrb	r3, [r3, #0]
 8011f36:	683b      	ldr	r3, [r7, #0]
 8011f38:	3301      	adds	r3, #1
 8011f3a:	d055      	beq.n	8011fe8 <SPI_WaitFifoStateUntilTimeout+0x120>
 8011f3c:	f7fb fe98 	bl	800dc70 <HAL_GetTick>
 8011f40:	0002      	movs	r2, r0
 8011f42:	6a3b      	ldr	r3, [r7, #32]
 8011f44:	1ad3      	subs	r3, r2, r3
 8011f46:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011f48:	429a      	cmp	r2, r3
 8011f4a:	d902      	bls.n	8011f52 <SPI_WaitFifoStateUntilTimeout+0x8a>
 8011f4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011f4e:	2b00      	cmp	r3, #0
 8011f50:	d142      	bne.n	8011fd8 <SPI_WaitFifoStateUntilTimeout+0x110>
 8011f52:	68fb      	ldr	r3, [r7, #12]
 8011f54:	681b      	ldr	r3, [r3, #0]
 8011f56:	685a      	ldr	r2, [r3, #4]
 8011f58:	68fb      	ldr	r3, [r7, #12]
 8011f5a:	681b      	ldr	r3, [r3, #0]
 8011f5c:	21e0      	movs	r1, #224	@ 0xe0
 8011f5e:	438a      	bics	r2, r1
 8011f60:	605a      	str	r2, [r3, #4]
 8011f62:	68fb      	ldr	r3, [r7, #12]
 8011f64:	685a      	ldr	r2, [r3, #4]
 8011f66:	2382      	movs	r3, #130	@ 0x82
 8011f68:	005b      	lsls	r3, r3, #1
 8011f6a:	429a      	cmp	r2, r3
 8011f6c:	d113      	bne.n	8011f96 <SPI_WaitFifoStateUntilTimeout+0xce>
 8011f6e:	68fb      	ldr	r3, [r7, #12]
 8011f70:	689a      	ldr	r2, [r3, #8]
 8011f72:	2380      	movs	r3, #128	@ 0x80
 8011f74:	021b      	lsls	r3, r3, #8
 8011f76:	429a      	cmp	r2, r3
 8011f78:	d005      	beq.n	8011f86 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8011f7a:	68fb      	ldr	r3, [r7, #12]
 8011f7c:	689a      	ldr	r2, [r3, #8]
 8011f7e:	2380      	movs	r3, #128	@ 0x80
 8011f80:	00db      	lsls	r3, r3, #3
 8011f82:	429a      	cmp	r2, r3
 8011f84:	d107      	bne.n	8011f96 <SPI_WaitFifoStateUntilTimeout+0xce>
 8011f86:	68fb      	ldr	r3, [r7, #12]
 8011f88:	681b      	ldr	r3, [r3, #0]
 8011f8a:	681a      	ldr	r2, [r3, #0]
 8011f8c:	68fb      	ldr	r3, [r7, #12]
 8011f8e:	681b      	ldr	r3, [r3, #0]
 8011f90:	2140      	movs	r1, #64	@ 0x40
 8011f92:	438a      	bics	r2, r1
 8011f94:	601a      	str	r2, [r3, #0]
 8011f96:	68fb      	ldr	r3, [r7, #12]
 8011f98:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8011f9a:	2380      	movs	r3, #128	@ 0x80
 8011f9c:	019b      	lsls	r3, r3, #6
 8011f9e:	429a      	cmp	r2, r3
 8011fa0:	d110      	bne.n	8011fc4 <SPI_WaitFifoStateUntilTimeout+0xfc>
 8011fa2:	68fb      	ldr	r3, [r7, #12]
 8011fa4:	681b      	ldr	r3, [r3, #0]
 8011fa6:	681a      	ldr	r2, [r3, #0]
 8011fa8:	68fb      	ldr	r3, [r7, #12]
 8011faa:	681b      	ldr	r3, [r3, #0]
 8011fac:	4916      	ldr	r1, [pc, #88]	@ (8012008 <SPI_WaitFifoStateUntilTimeout+0x140>)
 8011fae:	400a      	ands	r2, r1
 8011fb0:	601a      	str	r2, [r3, #0]
 8011fb2:	68fb      	ldr	r3, [r7, #12]
 8011fb4:	681b      	ldr	r3, [r3, #0]
 8011fb6:	681a      	ldr	r2, [r3, #0]
 8011fb8:	68fb      	ldr	r3, [r7, #12]
 8011fba:	681b      	ldr	r3, [r3, #0]
 8011fbc:	2180      	movs	r1, #128	@ 0x80
 8011fbe:	0189      	lsls	r1, r1, #6
 8011fc0:	430a      	orrs	r2, r1
 8011fc2:	601a      	str	r2, [r3, #0]
 8011fc4:	68fb      	ldr	r3, [r7, #12]
 8011fc6:	225d      	movs	r2, #93	@ 0x5d
 8011fc8:	2101      	movs	r1, #1
 8011fca:	5499      	strb	r1, [r3, r2]
 8011fcc:	68fb      	ldr	r3, [r7, #12]
 8011fce:	225c      	movs	r2, #92	@ 0x5c
 8011fd0:	2100      	movs	r1, #0
 8011fd2:	5499      	strb	r1, [r3, r2]
 8011fd4:	2303      	movs	r3, #3
 8011fd6:	e010      	b.n	8011ffa <SPI_WaitFifoStateUntilTimeout+0x132>
 8011fd8:	69bb      	ldr	r3, [r7, #24]
 8011fda:	2b00      	cmp	r3, #0
 8011fdc:	d101      	bne.n	8011fe2 <SPI_WaitFifoStateUntilTimeout+0x11a>
 8011fde:	2300      	movs	r3, #0
 8011fe0:	627b      	str	r3, [r7, #36]	@ 0x24
 8011fe2:	69bb      	ldr	r3, [r7, #24]
 8011fe4:	3b01      	subs	r3, #1
 8011fe6:	61bb      	str	r3, [r7, #24]
 8011fe8:	68fb      	ldr	r3, [r7, #12]
 8011fea:	681b      	ldr	r3, [r3, #0]
 8011fec:	689b      	ldr	r3, [r3, #8]
 8011fee:	68ba      	ldr	r2, [r7, #8]
 8011ff0:	4013      	ands	r3, r2
 8011ff2:	687a      	ldr	r2, [r7, #4]
 8011ff4:	429a      	cmp	r2, r3
 8011ff6:	d18e      	bne.n	8011f16 <SPI_WaitFifoStateUntilTimeout+0x4e>
 8011ff8:	2300      	movs	r3, #0
 8011ffa:	0018      	movs	r0, r3
 8011ffc:	46bd      	mov	sp, r7
 8011ffe:	b00a      	add	sp, #40	@ 0x28
 8012000:	bd80      	pop	{r7, pc}
 8012002:	46c0      	nop			@ (mov r8, r8)
 8012004:	20000494 	.word	0x20000494
 8012008:	ffffdfff 	.word	0xffffdfff

0801200c <SPI_EndRxTxTransaction>:
 801200c:	b580      	push	{r7, lr}
 801200e:	b086      	sub	sp, #24
 8012010:	af02      	add	r7, sp, #8
 8012012:	60f8      	str	r0, [r7, #12]
 8012014:	60b9      	str	r1, [r7, #8]
 8012016:	607a      	str	r2, [r7, #4]
 8012018:	68ba      	ldr	r2, [r7, #8]
 801201a:	23c0      	movs	r3, #192	@ 0xc0
 801201c:	0159      	lsls	r1, r3, #5
 801201e:	68f8      	ldr	r0, [r7, #12]
 8012020:	687b      	ldr	r3, [r7, #4]
 8012022:	9300      	str	r3, [sp, #0]
 8012024:	0013      	movs	r3, r2
 8012026:	2200      	movs	r2, #0
 8012028:	f7ff ff4e 	bl	8011ec8 <SPI_WaitFifoStateUntilTimeout>
 801202c:	1e03      	subs	r3, r0, #0
 801202e:	d007      	beq.n	8012040 <SPI_EndRxTxTransaction+0x34>
 8012030:	68fb      	ldr	r3, [r7, #12]
 8012032:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8012034:	2220      	movs	r2, #32
 8012036:	431a      	orrs	r2, r3
 8012038:	68fb      	ldr	r3, [r7, #12]
 801203a:	661a      	str	r2, [r3, #96]	@ 0x60
 801203c:	2303      	movs	r3, #3
 801203e:	e027      	b.n	8012090 <SPI_EndRxTxTransaction+0x84>
 8012040:	68ba      	ldr	r2, [r7, #8]
 8012042:	68f8      	ldr	r0, [r7, #12]
 8012044:	687b      	ldr	r3, [r7, #4]
 8012046:	9300      	str	r3, [sp, #0]
 8012048:	0013      	movs	r3, r2
 801204a:	2200      	movs	r2, #0
 801204c:	2180      	movs	r1, #128	@ 0x80
 801204e:	f7ff fead 	bl	8011dac <SPI_WaitFlagStateUntilTimeout>
 8012052:	1e03      	subs	r3, r0, #0
 8012054:	d007      	beq.n	8012066 <SPI_EndRxTxTransaction+0x5a>
 8012056:	68fb      	ldr	r3, [r7, #12]
 8012058:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801205a:	2220      	movs	r2, #32
 801205c:	431a      	orrs	r2, r3
 801205e:	68fb      	ldr	r3, [r7, #12]
 8012060:	661a      	str	r2, [r3, #96]	@ 0x60
 8012062:	2303      	movs	r3, #3
 8012064:	e014      	b.n	8012090 <SPI_EndRxTxTransaction+0x84>
 8012066:	68ba      	ldr	r2, [r7, #8]
 8012068:	23c0      	movs	r3, #192	@ 0xc0
 801206a:	00d9      	lsls	r1, r3, #3
 801206c:	68f8      	ldr	r0, [r7, #12]
 801206e:	687b      	ldr	r3, [r7, #4]
 8012070:	9300      	str	r3, [sp, #0]
 8012072:	0013      	movs	r3, r2
 8012074:	2200      	movs	r2, #0
 8012076:	f7ff ff27 	bl	8011ec8 <SPI_WaitFifoStateUntilTimeout>
 801207a:	1e03      	subs	r3, r0, #0
 801207c:	d007      	beq.n	801208e <SPI_EndRxTxTransaction+0x82>
 801207e:	68fb      	ldr	r3, [r7, #12]
 8012080:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8012082:	2220      	movs	r2, #32
 8012084:	431a      	orrs	r2, r3
 8012086:	68fb      	ldr	r3, [r7, #12]
 8012088:	661a      	str	r2, [r3, #96]	@ 0x60
 801208a:	2303      	movs	r3, #3
 801208c:	e000      	b.n	8012090 <SPI_EndRxTxTransaction+0x84>
 801208e:	2300      	movs	r3, #0
 8012090:	0018      	movs	r0, r3
 8012092:	46bd      	mov	sp, r7
 8012094:	b004      	add	sp, #16
 8012096:	bd80      	pop	{r7, pc}

08012098 <HAL_TIM_Base_Init>:
 8012098:	b580      	push	{r7, lr}
 801209a:	b082      	sub	sp, #8
 801209c:	af00      	add	r7, sp, #0
 801209e:	6078      	str	r0, [r7, #4]
 80120a0:	687b      	ldr	r3, [r7, #4]
 80120a2:	2b00      	cmp	r3, #0
 80120a4:	d101      	bne.n	80120aa <HAL_TIM_Base_Init+0x12>
 80120a6:	2301      	movs	r3, #1
 80120a8:	e04a      	b.n	8012140 <HAL_TIM_Base_Init+0xa8>
 80120aa:	687b      	ldr	r3, [r7, #4]
 80120ac:	223d      	movs	r2, #61	@ 0x3d
 80120ae:	5c9b      	ldrb	r3, [r3, r2]
 80120b0:	b2db      	uxtb	r3, r3
 80120b2:	2b00      	cmp	r3, #0
 80120b4:	d107      	bne.n	80120c6 <HAL_TIM_Base_Init+0x2e>
 80120b6:	687b      	ldr	r3, [r7, #4]
 80120b8:	223c      	movs	r2, #60	@ 0x3c
 80120ba:	2100      	movs	r1, #0
 80120bc:	5499      	strb	r1, [r3, r2]
 80120be:	687b      	ldr	r3, [r7, #4]
 80120c0:	0018      	movs	r0, r3
 80120c2:	f7fb fb91 	bl	800d7e8 <HAL_TIM_Base_MspInit>
 80120c6:	687b      	ldr	r3, [r7, #4]
 80120c8:	223d      	movs	r2, #61	@ 0x3d
 80120ca:	2102      	movs	r1, #2
 80120cc:	5499      	strb	r1, [r3, r2]
 80120ce:	687b      	ldr	r3, [r7, #4]
 80120d0:	681a      	ldr	r2, [r3, #0]
 80120d2:	687b      	ldr	r3, [r7, #4]
 80120d4:	3304      	adds	r3, #4
 80120d6:	0019      	movs	r1, r3
 80120d8:	0010      	movs	r0, r2
 80120da:	f000 fd19 	bl	8012b10 <TIM_Base_SetConfig>
 80120de:	687b      	ldr	r3, [r7, #4]
 80120e0:	2248      	movs	r2, #72	@ 0x48
 80120e2:	2101      	movs	r1, #1
 80120e4:	5499      	strb	r1, [r3, r2]
 80120e6:	687b      	ldr	r3, [r7, #4]
 80120e8:	223e      	movs	r2, #62	@ 0x3e
 80120ea:	2101      	movs	r1, #1
 80120ec:	5499      	strb	r1, [r3, r2]
 80120ee:	687b      	ldr	r3, [r7, #4]
 80120f0:	223f      	movs	r2, #63	@ 0x3f
 80120f2:	2101      	movs	r1, #1
 80120f4:	5499      	strb	r1, [r3, r2]
 80120f6:	687b      	ldr	r3, [r7, #4]
 80120f8:	2240      	movs	r2, #64	@ 0x40
 80120fa:	2101      	movs	r1, #1
 80120fc:	5499      	strb	r1, [r3, r2]
 80120fe:	687b      	ldr	r3, [r7, #4]
 8012100:	2241      	movs	r2, #65	@ 0x41
 8012102:	2101      	movs	r1, #1
 8012104:	5499      	strb	r1, [r3, r2]
 8012106:	687b      	ldr	r3, [r7, #4]
 8012108:	2242      	movs	r2, #66	@ 0x42
 801210a:	2101      	movs	r1, #1
 801210c:	5499      	strb	r1, [r3, r2]
 801210e:	687b      	ldr	r3, [r7, #4]
 8012110:	2243      	movs	r2, #67	@ 0x43
 8012112:	2101      	movs	r1, #1
 8012114:	5499      	strb	r1, [r3, r2]
 8012116:	687b      	ldr	r3, [r7, #4]
 8012118:	2244      	movs	r2, #68	@ 0x44
 801211a:	2101      	movs	r1, #1
 801211c:	5499      	strb	r1, [r3, r2]
 801211e:	687b      	ldr	r3, [r7, #4]
 8012120:	2245      	movs	r2, #69	@ 0x45
 8012122:	2101      	movs	r1, #1
 8012124:	5499      	strb	r1, [r3, r2]
 8012126:	687b      	ldr	r3, [r7, #4]
 8012128:	2246      	movs	r2, #70	@ 0x46
 801212a:	2101      	movs	r1, #1
 801212c:	5499      	strb	r1, [r3, r2]
 801212e:	687b      	ldr	r3, [r7, #4]
 8012130:	2247      	movs	r2, #71	@ 0x47
 8012132:	2101      	movs	r1, #1
 8012134:	5499      	strb	r1, [r3, r2]
 8012136:	687b      	ldr	r3, [r7, #4]
 8012138:	223d      	movs	r2, #61	@ 0x3d
 801213a:	2101      	movs	r1, #1
 801213c:	5499      	strb	r1, [r3, r2]
 801213e:	2300      	movs	r3, #0
 8012140:	0018      	movs	r0, r3
 8012142:	46bd      	mov	sp, r7
 8012144:	b002      	add	sp, #8
 8012146:	bd80      	pop	{r7, pc}

08012148 <HAL_TIM_Base_Start_IT>:
 8012148:	b580      	push	{r7, lr}
 801214a:	b084      	sub	sp, #16
 801214c:	af00      	add	r7, sp, #0
 801214e:	6078      	str	r0, [r7, #4]
 8012150:	687b      	ldr	r3, [r7, #4]
 8012152:	223d      	movs	r2, #61	@ 0x3d
 8012154:	5c9b      	ldrb	r3, [r3, r2]
 8012156:	b2db      	uxtb	r3, r3
 8012158:	2b01      	cmp	r3, #1
 801215a:	d001      	beq.n	8012160 <HAL_TIM_Base_Start_IT+0x18>
 801215c:	2301      	movs	r3, #1
 801215e:	e042      	b.n	80121e6 <HAL_TIM_Base_Start_IT+0x9e>
 8012160:	687b      	ldr	r3, [r7, #4]
 8012162:	223d      	movs	r2, #61	@ 0x3d
 8012164:	2102      	movs	r1, #2
 8012166:	5499      	strb	r1, [r3, r2]
 8012168:	687b      	ldr	r3, [r7, #4]
 801216a:	681b      	ldr	r3, [r3, #0]
 801216c:	68da      	ldr	r2, [r3, #12]
 801216e:	687b      	ldr	r3, [r7, #4]
 8012170:	681b      	ldr	r3, [r3, #0]
 8012172:	2101      	movs	r1, #1
 8012174:	430a      	orrs	r2, r1
 8012176:	60da      	str	r2, [r3, #12]
 8012178:	687b      	ldr	r3, [r7, #4]
 801217a:	681b      	ldr	r3, [r3, #0]
 801217c:	4a1c      	ldr	r2, [pc, #112]	@ (80121f0 <HAL_TIM_Base_Start_IT+0xa8>)
 801217e:	4293      	cmp	r3, r2
 8012180:	d00f      	beq.n	80121a2 <HAL_TIM_Base_Start_IT+0x5a>
 8012182:	687b      	ldr	r3, [r7, #4]
 8012184:	681a      	ldr	r2, [r3, #0]
 8012186:	2380      	movs	r3, #128	@ 0x80
 8012188:	05db      	lsls	r3, r3, #23
 801218a:	429a      	cmp	r2, r3
 801218c:	d009      	beq.n	80121a2 <HAL_TIM_Base_Start_IT+0x5a>
 801218e:	687b      	ldr	r3, [r7, #4]
 8012190:	681b      	ldr	r3, [r3, #0]
 8012192:	4a18      	ldr	r2, [pc, #96]	@ (80121f4 <HAL_TIM_Base_Start_IT+0xac>)
 8012194:	4293      	cmp	r3, r2
 8012196:	d004      	beq.n	80121a2 <HAL_TIM_Base_Start_IT+0x5a>
 8012198:	687b      	ldr	r3, [r7, #4]
 801219a:	681b      	ldr	r3, [r3, #0]
 801219c:	4a16      	ldr	r2, [pc, #88]	@ (80121f8 <HAL_TIM_Base_Start_IT+0xb0>)
 801219e:	4293      	cmp	r3, r2
 80121a0:	d116      	bne.n	80121d0 <HAL_TIM_Base_Start_IT+0x88>
 80121a2:	687b      	ldr	r3, [r7, #4]
 80121a4:	681b      	ldr	r3, [r3, #0]
 80121a6:	689b      	ldr	r3, [r3, #8]
 80121a8:	4a14      	ldr	r2, [pc, #80]	@ (80121fc <HAL_TIM_Base_Start_IT+0xb4>)
 80121aa:	4013      	ands	r3, r2
 80121ac:	60fb      	str	r3, [r7, #12]
 80121ae:	68fb      	ldr	r3, [r7, #12]
 80121b0:	2b06      	cmp	r3, #6
 80121b2:	d016      	beq.n	80121e2 <HAL_TIM_Base_Start_IT+0x9a>
 80121b4:	68fa      	ldr	r2, [r7, #12]
 80121b6:	2380      	movs	r3, #128	@ 0x80
 80121b8:	025b      	lsls	r3, r3, #9
 80121ba:	429a      	cmp	r2, r3
 80121bc:	d011      	beq.n	80121e2 <HAL_TIM_Base_Start_IT+0x9a>
 80121be:	687b      	ldr	r3, [r7, #4]
 80121c0:	681b      	ldr	r3, [r3, #0]
 80121c2:	681a      	ldr	r2, [r3, #0]
 80121c4:	687b      	ldr	r3, [r7, #4]
 80121c6:	681b      	ldr	r3, [r3, #0]
 80121c8:	2101      	movs	r1, #1
 80121ca:	430a      	orrs	r2, r1
 80121cc:	601a      	str	r2, [r3, #0]
 80121ce:	e008      	b.n	80121e2 <HAL_TIM_Base_Start_IT+0x9a>
 80121d0:	687b      	ldr	r3, [r7, #4]
 80121d2:	681b      	ldr	r3, [r3, #0]
 80121d4:	681a      	ldr	r2, [r3, #0]
 80121d6:	687b      	ldr	r3, [r7, #4]
 80121d8:	681b      	ldr	r3, [r3, #0]
 80121da:	2101      	movs	r1, #1
 80121dc:	430a      	orrs	r2, r1
 80121de:	601a      	str	r2, [r3, #0]
 80121e0:	e000      	b.n	80121e4 <HAL_TIM_Base_Start_IT+0x9c>
 80121e2:	46c0      	nop			@ (mov r8, r8)
 80121e4:	2300      	movs	r3, #0
 80121e6:	0018      	movs	r0, r3
 80121e8:	46bd      	mov	sp, r7
 80121ea:	b004      	add	sp, #16
 80121ec:	bd80      	pop	{r7, pc}
 80121ee:	46c0      	nop			@ (mov r8, r8)
 80121f0:	40012c00 	.word	0x40012c00
 80121f4:	40000400 	.word	0x40000400
 80121f8:	40014000 	.word	0x40014000
 80121fc:	00010007 	.word	0x00010007

08012200 <HAL_TIM_IC_Init>:
 8012200:	b580      	push	{r7, lr}
 8012202:	b082      	sub	sp, #8
 8012204:	af00      	add	r7, sp, #0
 8012206:	6078      	str	r0, [r7, #4]
 8012208:	687b      	ldr	r3, [r7, #4]
 801220a:	2b00      	cmp	r3, #0
 801220c:	d101      	bne.n	8012212 <HAL_TIM_IC_Init+0x12>
 801220e:	2301      	movs	r3, #1
 8012210:	e04a      	b.n	80122a8 <HAL_TIM_IC_Init+0xa8>
 8012212:	687b      	ldr	r3, [r7, #4]
 8012214:	223d      	movs	r2, #61	@ 0x3d
 8012216:	5c9b      	ldrb	r3, [r3, r2]
 8012218:	b2db      	uxtb	r3, r3
 801221a:	2b00      	cmp	r3, #0
 801221c:	d107      	bne.n	801222e <HAL_TIM_IC_Init+0x2e>
 801221e:	687b      	ldr	r3, [r7, #4]
 8012220:	223c      	movs	r2, #60	@ 0x3c
 8012222:	2100      	movs	r1, #0
 8012224:	5499      	strb	r1, [r3, r2]
 8012226:	687b      	ldr	r3, [r7, #4]
 8012228:	0018      	movs	r0, r3
 801222a:	f7fb fa33 	bl	800d694 <HAL_TIM_IC_MspInit>
 801222e:	687b      	ldr	r3, [r7, #4]
 8012230:	223d      	movs	r2, #61	@ 0x3d
 8012232:	2102      	movs	r1, #2
 8012234:	5499      	strb	r1, [r3, r2]
 8012236:	687b      	ldr	r3, [r7, #4]
 8012238:	681a      	ldr	r2, [r3, #0]
 801223a:	687b      	ldr	r3, [r7, #4]
 801223c:	3304      	adds	r3, #4
 801223e:	0019      	movs	r1, r3
 8012240:	0010      	movs	r0, r2
 8012242:	f000 fc65 	bl	8012b10 <TIM_Base_SetConfig>
 8012246:	687b      	ldr	r3, [r7, #4]
 8012248:	2248      	movs	r2, #72	@ 0x48
 801224a:	2101      	movs	r1, #1
 801224c:	5499      	strb	r1, [r3, r2]
 801224e:	687b      	ldr	r3, [r7, #4]
 8012250:	223e      	movs	r2, #62	@ 0x3e
 8012252:	2101      	movs	r1, #1
 8012254:	5499      	strb	r1, [r3, r2]
 8012256:	687b      	ldr	r3, [r7, #4]
 8012258:	223f      	movs	r2, #63	@ 0x3f
 801225a:	2101      	movs	r1, #1
 801225c:	5499      	strb	r1, [r3, r2]
 801225e:	687b      	ldr	r3, [r7, #4]
 8012260:	2240      	movs	r2, #64	@ 0x40
 8012262:	2101      	movs	r1, #1
 8012264:	5499      	strb	r1, [r3, r2]
 8012266:	687b      	ldr	r3, [r7, #4]
 8012268:	2241      	movs	r2, #65	@ 0x41
 801226a:	2101      	movs	r1, #1
 801226c:	5499      	strb	r1, [r3, r2]
 801226e:	687b      	ldr	r3, [r7, #4]
 8012270:	2242      	movs	r2, #66	@ 0x42
 8012272:	2101      	movs	r1, #1
 8012274:	5499      	strb	r1, [r3, r2]
 8012276:	687b      	ldr	r3, [r7, #4]
 8012278:	2243      	movs	r2, #67	@ 0x43
 801227a:	2101      	movs	r1, #1
 801227c:	5499      	strb	r1, [r3, r2]
 801227e:	687b      	ldr	r3, [r7, #4]
 8012280:	2244      	movs	r2, #68	@ 0x44
 8012282:	2101      	movs	r1, #1
 8012284:	5499      	strb	r1, [r3, r2]
 8012286:	687b      	ldr	r3, [r7, #4]
 8012288:	2245      	movs	r2, #69	@ 0x45
 801228a:	2101      	movs	r1, #1
 801228c:	5499      	strb	r1, [r3, r2]
 801228e:	687b      	ldr	r3, [r7, #4]
 8012290:	2246      	movs	r2, #70	@ 0x46
 8012292:	2101      	movs	r1, #1
 8012294:	5499      	strb	r1, [r3, r2]
 8012296:	687b      	ldr	r3, [r7, #4]
 8012298:	2247      	movs	r2, #71	@ 0x47
 801229a:	2101      	movs	r1, #1
 801229c:	5499      	strb	r1, [r3, r2]
 801229e:	687b      	ldr	r3, [r7, #4]
 80122a0:	223d      	movs	r2, #61	@ 0x3d
 80122a2:	2101      	movs	r1, #1
 80122a4:	5499      	strb	r1, [r3, r2]
 80122a6:	2300      	movs	r3, #0
 80122a8:	0018      	movs	r0, r3
 80122aa:	46bd      	mov	sp, r7
 80122ac:	b002      	add	sp, #8
 80122ae:	bd80      	pop	{r7, pc}

080122b0 <HAL_TIM_IC_Start_IT>:
 80122b0:	b580      	push	{r7, lr}
 80122b2:	b084      	sub	sp, #16
 80122b4:	af00      	add	r7, sp, #0
 80122b6:	6078      	str	r0, [r7, #4]
 80122b8:	6039      	str	r1, [r7, #0]
 80122ba:	230f      	movs	r3, #15
 80122bc:	18fb      	adds	r3, r7, r3
 80122be:	2200      	movs	r2, #0
 80122c0:	701a      	strb	r2, [r3, #0]
 80122c2:	683b      	ldr	r3, [r7, #0]
 80122c4:	2b00      	cmp	r3, #0
 80122c6:	d104      	bne.n	80122d2 <HAL_TIM_IC_Start_IT+0x22>
 80122c8:	687b      	ldr	r3, [r7, #4]
 80122ca:	223e      	movs	r2, #62	@ 0x3e
 80122cc:	5c9b      	ldrb	r3, [r3, r2]
 80122ce:	b2db      	uxtb	r3, r3
 80122d0:	e023      	b.n	801231a <HAL_TIM_IC_Start_IT+0x6a>
 80122d2:	683b      	ldr	r3, [r7, #0]
 80122d4:	2b04      	cmp	r3, #4
 80122d6:	d104      	bne.n	80122e2 <HAL_TIM_IC_Start_IT+0x32>
 80122d8:	687b      	ldr	r3, [r7, #4]
 80122da:	223f      	movs	r2, #63	@ 0x3f
 80122dc:	5c9b      	ldrb	r3, [r3, r2]
 80122de:	b2db      	uxtb	r3, r3
 80122e0:	e01b      	b.n	801231a <HAL_TIM_IC_Start_IT+0x6a>
 80122e2:	683b      	ldr	r3, [r7, #0]
 80122e4:	2b08      	cmp	r3, #8
 80122e6:	d104      	bne.n	80122f2 <HAL_TIM_IC_Start_IT+0x42>
 80122e8:	687b      	ldr	r3, [r7, #4]
 80122ea:	2240      	movs	r2, #64	@ 0x40
 80122ec:	5c9b      	ldrb	r3, [r3, r2]
 80122ee:	b2db      	uxtb	r3, r3
 80122f0:	e013      	b.n	801231a <HAL_TIM_IC_Start_IT+0x6a>
 80122f2:	683b      	ldr	r3, [r7, #0]
 80122f4:	2b0c      	cmp	r3, #12
 80122f6:	d104      	bne.n	8012302 <HAL_TIM_IC_Start_IT+0x52>
 80122f8:	687b      	ldr	r3, [r7, #4]
 80122fa:	2241      	movs	r2, #65	@ 0x41
 80122fc:	5c9b      	ldrb	r3, [r3, r2]
 80122fe:	b2db      	uxtb	r3, r3
 8012300:	e00b      	b.n	801231a <HAL_TIM_IC_Start_IT+0x6a>
 8012302:	683b      	ldr	r3, [r7, #0]
 8012304:	2b10      	cmp	r3, #16
 8012306:	d104      	bne.n	8012312 <HAL_TIM_IC_Start_IT+0x62>
 8012308:	687b      	ldr	r3, [r7, #4]
 801230a:	2242      	movs	r2, #66	@ 0x42
 801230c:	5c9b      	ldrb	r3, [r3, r2]
 801230e:	b2db      	uxtb	r3, r3
 8012310:	e003      	b.n	801231a <HAL_TIM_IC_Start_IT+0x6a>
 8012312:	687b      	ldr	r3, [r7, #4]
 8012314:	2243      	movs	r2, #67	@ 0x43
 8012316:	5c9b      	ldrb	r3, [r3, r2]
 8012318:	b2db      	uxtb	r3, r3
 801231a:	220e      	movs	r2, #14
 801231c:	18ba      	adds	r2, r7, r2
 801231e:	7013      	strb	r3, [r2, #0]
 8012320:	683b      	ldr	r3, [r7, #0]
 8012322:	2b00      	cmp	r3, #0
 8012324:	d104      	bne.n	8012330 <HAL_TIM_IC_Start_IT+0x80>
 8012326:	687b      	ldr	r3, [r7, #4]
 8012328:	2244      	movs	r2, #68	@ 0x44
 801232a:	5c9b      	ldrb	r3, [r3, r2]
 801232c:	b2db      	uxtb	r3, r3
 801232e:	e013      	b.n	8012358 <HAL_TIM_IC_Start_IT+0xa8>
 8012330:	683b      	ldr	r3, [r7, #0]
 8012332:	2b04      	cmp	r3, #4
 8012334:	d104      	bne.n	8012340 <HAL_TIM_IC_Start_IT+0x90>
 8012336:	687b      	ldr	r3, [r7, #4]
 8012338:	2245      	movs	r2, #69	@ 0x45
 801233a:	5c9b      	ldrb	r3, [r3, r2]
 801233c:	b2db      	uxtb	r3, r3
 801233e:	e00b      	b.n	8012358 <HAL_TIM_IC_Start_IT+0xa8>
 8012340:	683b      	ldr	r3, [r7, #0]
 8012342:	2b08      	cmp	r3, #8
 8012344:	d104      	bne.n	8012350 <HAL_TIM_IC_Start_IT+0xa0>
 8012346:	687b      	ldr	r3, [r7, #4]
 8012348:	2246      	movs	r2, #70	@ 0x46
 801234a:	5c9b      	ldrb	r3, [r3, r2]
 801234c:	b2db      	uxtb	r3, r3
 801234e:	e003      	b.n	8012358 <HAL_TIM_IC_Start_IT+0xa8>
 8012350:	687b      	ldr	r3, [r7, #4]
 8012352:	2247      	movs	r2, #71	@ 0x47
 8012354:	5c9b      	ldrb	r3, [r3, r2]
 8012356:	b2db      	uxtb	r3, r3
 8012358:	210d      	movs	r1, #13
 801235a:	187a      	adds	r2, r7, r1
 801235c:	7013      	strb	r3, [r2, #0]
 801235e:	230e      	movs	r3, #14
 8012360:	18fb      	adds	r3, r7, r3
 8012362:	781b      	ldrb	r3, [r3, #0]
 8012364:	2b01      	cmp	r3, #1
 8012366:	d103      	bne.n	8012370 <HAL_TIM_IC_Start_IT+0xc0>
 8012368:	187b      	adds	r3, r7, r1
 801236a:	781b      	ldrb	r3, [r3, #0]
 801236c:	2b01      	cmp	r3, #1
 801236e:	d001      	beq.n	8012374 <HAL_TIM_IC_Start_IT+0xc4>
 8012370:	2301      	movs	r3, #1
 8012372:	e0c8      	b.n	8012506 <HAL_TIM_IC_Start_IT+0x256>
 8012374:	683b      	ldr	r3, [r7, #0]
 8012376:	2b00      	cmp	r3, #0
 8012378:	d104      	bne.n	8012384 <HAL_TIM_IC_Start_IT+0xd4>
 801237a:	687b      	ldr	r3, [r7, #4]
 801237c:	223e      	movs	r2, #62	@ 0x3e
 801237e:	2102      	movs	r1, #2
 8012380:	5499      	strb	r1, [r3, r2]
 8012382:	e023      	b.n	80123cc <HAL_TIM_IC_Start_IT+0x11c>
 8012384:	683b      	ldr	r3, [r7, #0]
 8012386:	2b04      	cmp	r3, #4
 8012388:	d104      	bne.n	8012394 <HAL_TIM_IC_Start_IT+0xe4>
 801238a:	687b      	ldr	r3, [r7, #4]
 801238c:	223f      	movs	r2, #63	@ 0x3f
 801238e:	2102      	movs	r1, #2
 8012390:	5499      	strb	r1, [r3, r2]
 8012392:	e01b      	b.n	80123cc <HAL_TIM_IC_Start_IT+0x11c>
 8012394:	683b      	ldr	r3, [r7, #0]
 8012396:	2b08      	cmp	r3, #8
 8012398:	d104      	bne.n	80123a4 <HAL_TIM_IC_Start_IT+0xf4>
 801239a:	687b      	ldr	r3, [r7, #4]
 801239c:	2240      	movs	r2, #64	@ 0x40
 801239e:	2102      	movs	r1, #2
 80123a0:	5499      	strb	r1, [r3, r2]
 80123a2:	e013      	b.n	80123cc <HAL_TIM_IC_Start_IT+0x11c>
 80123a4:	683b      	ldr	r3, [r7, #0]
 80123a6:	2b0c      	cmp	r3, #12
 80123a8:	d104      	bne.n	80123b4 <HAL_TIM_IC_Start_IT+0x104>
 80123aa:	687b      	ldr	r3, [r7, #4]
 80123ac:	2241      	movs	r2, #65	@ 0x41
 80123ae:	2102      	movs	r1, #2
 80123b0:	5499      	strb	r1, [r3, r2]
 80123b2:	e00b      	b.n	80123cc <HAL_TIM_IC_Start_IT+0x11c>
 80123b4:	683b      	ldr	r3, [r7, #0]
 80123b6:	2b10      	cmp	r3, #16
 80123b8:	d104      	bne.n	80123c4 <HAL_TIM_IC_Start_IT+0x114>
 80123ba:	687b      	ldr	r3, [r7, #4]
 80123bc:	2242      	movs	r2, #66	@ 0x42
 80123be:	2102      	movs	r1, #2
 80123c0:	5499      	strb	r1, [r3, r2]
 80123c2:	e003      	b.n	80123cc <HAL_TIM_IC_Start_IT+0x11c>
 80123c4:	687b      	ldr	r3, [r7, #4]
 80123c6:	2243      	movs	r2, #67	@ 0x43
 80123c8:	2102      	movs	r1, #2
 80123ca:	5499      	strb	r1, [r3, r2]
 80123cc:	683b      	ldr	r3, [r7, #0]
 80123ce:	2b00      	cmp	r3, #0
 80123d0:	d104      	bne.n	80123dc <HAL_TIM_IC_Start_IT+0x12c>
 80123d2:	687b      	ldr	r3, [r7, #4]
 80123d4:	2244      	movs	r2, #68	@ 0x44
 80123d6:	2102      	movs	r1, #2
 80123d8:	5499      	strb	r1, [r3, r2]
 80123da:	e013      	b.n	8012404 <HAL_TIM_IC_Start_IT+0x154>
 80123dc:	683b      	ldr	r3, [r7, #0]
 80123de:	2b04      	cmp	r3, #4
 80123e0:	d104      	bne.n	80123ec <HAL_TIM_IC_Start_IT+0x13c>
 80123e2:	687b      	ldr	r3, [r7, #4]
 80123e4:	2245      	movs	r2, #69	@ 0x45
 80123e6:	2102      	movs	r1, #2
 80123e8:	5499      	strb	r1, [r3, r2]
 80123ea:	e00b      	b.n	8012404 <HAL_TIM_IC_Start_IT+0x154>
 80123ec:	683b      	ldr	r3, [r7, #0]
 80123ee:	2b08      	cmp	r3, #8
 80123f0:	d104      	bne.n	80123fc <HAL_TIM_IC_Start_IT+0x14c>
 80123f2:	687b      	ldr	r3, [r7, #4]
 80123f4:	2246      	movs	r2, #70	@ 0x46
 80123f6:	2102      	movs	r1, #2
 80123f8:	5499      	strb	r1, [r3, r2]
 80123fa:	e003      	b.n	8012404 <HAL_TIM_IC_Start_IT+0x154>
 80123fc:	687b      	ldr	r3, [r7, #4]
 80123fe:	2247      	movs	r2, #71	@ 0x47
 8012400:	2102      	movs	r1, #2
 8012402:	5499      	strb	r1, [r3, r2]
 8012404:	683b      	ldr	r3, [r7, #0]
 8012406:	2b0c      	cmp	r3, #12
 8012408:	d02a      	beq.n	8012460 <HAL_TIM_IC_Start_IT+0x1b0>
 801240a:	683b      	ldr	r3, [r7, #0]
 801240c:	2b0c      	cmp	r3, #12
 801240e:	d830      	bhi.n	8012472 <HAL_TIM_IC_Start_IT+0x1c2>
 8012410:	683b      	ldr	r3, [r7, #0]
 8012412:	2b08      	cmp	r3, #8
 8012414:	d01b      	beq.n	801244e <HAL_TIM_IC_Start_IT+0x19e>
 8012416:	683b      	ldr	r3, [r7, #0]
 8012418:	2b08      	cmp	r3, #8
 801241a:	d82a      	bhi.n	8012472 <HAL_TIM_IC_Start_IT+0x1c2>
 801241c:	683b      	ldr	r3, [r7, #0]
 801241e:	2b00      	cmp	r3, #0
 8012420:	d003      	beq.n	801242a <HAL_TIM_IC_Start_IT+0x17a>
 8012422:	683b      	ldr	r3, [r7, #0]
 8012424:	2b04      	cmp	r3, #4
 8012426:	d009      	beq.n	801243c <HAL_TIM_IC_Start_IT+0x18c>
 8012428:	e023      	b.n	8012472 <HAL_TIM_IC_Start_IT+0x1c2>
 801242a:	687b      	ldr	r3, [r7, #4]
 801242c:	681b      	ldr	r3, [r3, #0]
 801242e:	68da      	ldr	r2, [r3, #12]
 8012430:	687b      	ldr	r3, [r7, #4]
 8012432:	681b      	ldr	r3, [r3, #0]
 8012434:	2102      	movs	r1, #2
 8012436:	430a      	orrs	r2, r1
 8012438:	60da      	str	r2, [r3, #12]
 801243a:	e01f      	b.n	801247c <HAL_TIM_IC_Start_IT+0x1cc>
 801243c:	687b      	ldr	r3, [r7, #4]
 801243e:	681b      	ldr	r3, [r3, #0]
 8012440:	68da      	ldr	r2, [r3, #12]
 8012442:	687b      	ldr	r3, [r7, #4]
 8012444:	681b      	ldr	r3, [r3, #0]
 8012446:	2104      	movs	r1, #4
 8012448:	430a      	orrs	r2, r1
 801244a:	60da      	str	r2, [r3, #12]
 801244c:	e016      	b.n	801247c <HAL_TIM_IC_Start_IT+0x1cc>
 801244e:	687b      	ldr	r3, [r7, #4]
 8012450:	681b      	ldr	r3, [r3, #0]
 8012452:	68da      	ldr	r2, [r3, #12]
 8012454:	687b      	ldr	r3, [r7, #4]
 8012456:	681b      	ldr	r3, [r3, #0]
 8012458:	2108      	movs	r1, #8
 801245a:	430a      	orrs	r2, r1
 801245c:	60da      	str	r2, [r3, #12]
 801245e:	e00d      	b.n	801247c <HAL_TIM_IC_Start_IT+0x1cc>
 8012460:	687b      	ldr	r3, [r7, #4]
 8012462:	681b      	ldr	r3, [r3, #0]
 8012464:	68da      	ldr	r2, [r3, #12]
 8012466:	687b      	ldr	r3, [r7, #4]
 8012468:	681b      	ldr	r3, [r3, #0]
 801246a:	2110      	movs	r1, #16
 801246c:	430a      	orrs	r2, r1
 801246e:	60da      	str	r2, [r3, #12]
 8012470:	e004      	b.n	801247c <HAL_TIM_IC_Start_IT+0x1cc>
 8012472:	230f      	movs	r3, #15
 8012474:	18fb      	adds	r3, r7, r3
 8012476:	2201      	movs	r2, #1
 8012478:	701a      	strb	r2, [r3, #0]
 801247a:	46c0      	nop			@ (mov r8, r8)
 801247c:	230f      	movs	r3, #15
 801247e:	18fb      	adds	r3, r7, r3
 8012480:	781b      	ldrb	r3, [r3, #0]
 8012482:	2b00      	cmp	r3, #0
 8012484:	d13c      	bne.n	8012500 <HAL_TIM_IC_Start_IT+0x250>
 8012486:	687b      	ldr	r3, [r7, #4]
 8012488:	681b      	ldr	r3, [r3, #0]
 801248a:	6839      	ldr	r1, [r7, #0]
 801248c:	2201      	movs	r2, #1
 801248e:	0018      	movs	r0, r3
 8012490:	f000 fd7e 	bl	8012f90 <TIM_CCxChannelCmd>
 8012494:	687b      	ldr	r3, [r7, #4]
 8012496:	681b      	ldr	r3, [r3, #0]
 8012498:	4a1d      	ldr	r2, [pc, #116]	@ (8012510 <HAL_TIM_IC_Start_IT+0x260>)
 801249a:	4293      	cmp	r3, r2
 801249c:	d00f      	beq.n	80124be <HAL_TIM_IC_Start_IT+0x20e>
 801249e:	687b      	ldr	r3, [r7, #4]
 80124a0:	681a      	ldr	r2, [r3, #0]
 80124a2:	2380      	movs	r3, #128	@ 0x80
 80124a4:	05db      	lsls	r3, r3, #23
 80124a6:	429a      	cmp	r2, r3
 80124a8:	d009      	beq.n	80124be <HAL_TIM_IC_Start_IT+0x20e>
 80124aa:	687b      	ldr	r3, [r7, #4]
 80124ac:	681b      	ldr	r3, [r3, #0]
 80124ae:	4a19      	ldr	r2, [pc, #100]	@ (8012514 <HAL_TIM_IC_Start_IT+0x264>)
 80124b0:	4293      	cmp	r3, r2
 80124b2:	d004      	beq.n	80124be <HAL_TIM_IC_Start_IT+0x20e>
 80124b4:	687b      	ldr	r3, [r7, #4]
 80124b6:	681b      	ldr	r3, [r3, #0]
 80124b8:	4a17      	ldr	r2, [pc, #92]	@ (8012518 <HAL_TIM_IC_Start_IT+0x268>)
 80124ba:	4293      	cmp	r3, r2
 80124bc:	d116      	bne.n	80124ec <HAL_TIM_IC_Start_IT+0x23c>
 80124be:	687b      	ldr	r3, [r7, #4]
 80124c0:	681b      	ldr	r3, [r3, #0]
 80124c2:	689b      	ldr	r3, [r3, #8]
 80124c4:	4a15      	ldr	r2, [pc, #84]	@ (801251c <HAL_TIM_IC_Start_IT+0x26c>)
 80124c6:	4013      	ands	r3, r2
 80124c8:	60bb      	str	r3, [r7, #8]
 80124ca:	68bb      	ldr	r3, [r7, #8]
 80124cc:	2b06      	cmp	r3, #6
 80124ce:	d016      	beq.n	80124fe <HAL_TIM_IC_Start_IT+0x24e>
 80124d0:	68ba      	ldr	r2, [r7, #8]
 80124d2:	2380      	movs	r3, #128	@ 0x80
 80124d4:	025b      	lsls	r3, r3, #9
 80124d6:	429a      	cmp	r2, r3
 80124d8:	d011      	beq.n	80124fe <HAL_TIM_IC_Start_IT+0x24e>
 80124da:	687b      	ldr	r3, [r7, #4]
 80124dc:	681b      	ldr	r3, [r3, #0]
 80124de:	681a      	ldr	r2, [r3, #0]
 80124e0:	687b      	ldr	r3, [r7, #4]
 80124e2:	681b      	ldr	r3, [r3, #0]
 80124e4:	2101      	movs	r1, #1
 80124e6:	430a      	orrs	r2, r1
 80124e8:	601a      	str	r2, [r3, #0]
 80124ea:	e008      	b.n	80124fe <HAL_TIM_IC_Start_IT+0x24e>
 80124ec:	687b      	ldr	r3, [r7, #4]
 80124ee:	681b      	ldr	r3, [r3, #0]
 80124f0:	681a      	ldr	r2, [r3, #0]
 80124f2:	687b      	ldr	r3, [r7, #4]
 80124f4:	681b      	ldr	r3, [r3, #0]
 80124f6:	2101      	movs	r1, #1
 80124f8:	430a      	orrs	r2, r1
 80124fa:	601a      	str	r2, [r3, #0]
 80124fc:	e000      	b.n	8012500 <HAL_TIM_IC_Start_IT+0x250>
 80124fe:	46c0      	nop			@ (mov r8, r8)
 8012500:	230f      	movs	r3, #15
 8012502:	18fb      	adds	r3, r7, r3
 8012504:	781b      	ldrb	r3, [r3, #0]
 8012506:	0018      	movs	r0, r3
 8012508:	46bd      	mov	sp, r7
 801250a:	b004      	add	sp, #16
 801250c:	bd80      	pop	{r7, pc}
 801250e:	46c0      	nop			@ (mov r8, r8)
 8012510:	40012c00 	.word	0x40012c00
 8012514:	40000400 	.word	0x40000400
 8012518:	40014000 	.word	0x40014000
 801251c:	00010007 	.word	0x00010007

08012520 <HAL_TIM_IRQHandler>:
 8012520:	b580      	push	{r7, lr}
 8012522:	b082      	sub	sp, #8
 8012524:	af00      	add	r7, sp, #0
 8012526:	6078      	str	r0, [r7, #4]
 8012528:	687b      	ldr	r3, [r7, #4]
 801252a:	681b      	ldr	r3, [r3, #0]
 801252c:	691b      	ldr	r3, [r3, #16]
 801252e:	2202      	movs	r2, #2
 8012530:	4013      	ands	r3, r2
 8012532:	2b02      	cmp	r3, #2
 8012534:	d124      	bne.n	8012580 <HAL_TIM_IRQHandler+0x60>
 8012536:	687b      	ldr	r3, [r7, #4]
 8012538:	681b      	ldr	r3, [r3, #0]
 801253a:	68db      	ldr	r3, [r3, #12]
 801253c:	2202      	movs	r2, #2
 801253e:	4013      	ands	r3, r2
 8012540:	2b02      	cmp	r3, #2
 8012542:	d11d      	bne.n	8012580 <HAL_TIM_IRQHandler+0x60>
 8012544:	687b      	ldr	r3, [r7, #4]
 8012546:	681b      	ldr	r3, [r3, #0]
 8012548:	2203      	movs	r2, #3
 801254a:	4252      	negs	r2, r2
 801254c:	611a      	str	r2, [r3, #16]
 801254e:	687b      	ldr	r3, [r7, #4]
 8012550:	2201      	movs	r2, #1
 8012552:	771a      	strb	r2, [r3, #28]
 8012554:	687b      	ldr	r3, [r7, #4]
 8012556:	681b      	ldr	r3, [r3, #0]
 8012558:	699b      	ldr	r3, [r3, #24]
 801255a:	2203      	movs	r2, #3
 801255c:	4013      	ands	r3, r2
 801255e:	d004      	beq.n	801256a <HAL_TIM_IRQHandler+0x4a>
 8012560:	687b      	ldr	r3, [r7, #4]
 8012562:	0018      	movs	r0, r3
 8012564:	f7f1 fe0c 	bl	8004180 <HAL_TIM_IC_CaptureCallback>
 8012568:	e007      	b.n	801257a <HAL_TIM_IRQHandler+0x5a>
 801256a:	687b      	ldr	r3, [r7, #4]
 801256c:	0018      	movs	r0, r3
 801256e:	f000 fab7 	bl	8012ae0 <HAL_TIM_OC_DelayElapsedCallback>
 8012572:	687b      	ldr	r3, [r7, #4]
 8012574:	0018      	movs	r0, r3
 8012576:	f000 fabb 	bl	8012af0 <HAL_TIM_PWM_PulseFinishedCallback>
 801257a:	687b      	ldr	r3, [r7, #4]
 801257c:	2200      	movs	r2, #0
 801257e:	771a      	strb	r2, [r3, #28]
 8012580:	687b      	ldr	r3, [r7, #4]
 8012582:	681b      	ldr	r3, [r3, #0]
 8012584:	691b      	ldr	r3, [r3, #16]
 8012586:	2204      	movs	r2, #4
 8012588:	4013      	ands	r3, r2
 801258a:	2b04      	cmp	r3, #4
 801258c:	d125      	bne.n	80125da <HAL_TIM_IRQHandler+0xba>
 801258e:	687b      	ldr	r3, [r7, #4]
 8012590:	681b      	ldr	r3, [r3, #0]
 8012592:	68db      	ldr	r3, [r3, #12]
 8012594:	2204      	movs	r2, #4
 8012596:	4013      	ands	r3, r2
 8012598:	2b04      	cmp	r3, #4
 801259a:	d11e      	bne.n	80125da <HAL_TIM_IRQHandler+0xba>
 801259c:	687b      	ldr	r3, [r7, #4]
 801259e:	681b      	ldr	r3, [r3, #0]
 80125a0:	2205      	movs	r2, #5
 80125a2:	4252      	negs	r2, r2
 80125a4:	611a      	str	r2, [r3, #16]
 80125a6:	687b      	ldr	r3, [r7, #4]
 80125a8:	2202      	movs	r2, #2
 80125aa:	771a      	strb	r2, [r3, #28]
 80125ac:	687b      	ldr	r3, [r7, #4]
 80125ae:	681b      	ldr	r3, [r3, #0]
 80125b0:	699a      	ldr	r2, [r3, #24]
 80125b2:	23c0      	movs	r3, #192	@ 0xc0
 80125b4:	009b      	lsls	r3, r3, #2
 80125b6:	4013      	ands	r3, r2
 80125b8:	d004      	beq.n	80125c4 <HAL_TIM_IRQHandler+0xa4>
 80125ba:	687b      	ldr	r3, [r7, #4]
 80125bc:	0018      	movs	r0, r3
 80125be:	f7f1 fddf 	bl	8004180 <HAL_TIM_IC_CaptureCallback>
 80125c2:	e007      	b.n	80125d4 <HAL_TIM_IRQHandler+0xb4>
 80125c4:	687b      	ldr	r3, [r7, #4]
 80125c6:	0018      	movs	r0, r3
 80125c8:	f000 fa8a 	bl	8012ae0 <HAL_TIM_OC_DelayElapsedCallback>
 80125cc:	687b      	ldr	r3, [r7, #4]
 80125ce:	0018      	movs	r0, r3
 80125d0:	f000 fa8e 	bl	8012af0 <HAL_TIM_PWM_PulseFinishedCallback>
 80125d4:	687b      	ldr	r3, [r7, #4]
 80125d6:	2200      	movs	r2, #0
 80125d8:	771a      	strb	r2, [r3, #28]
 80125da:	687b      	ldr	r3, [r7, #4]
 80125dc:	681b      	ldr	r3, [r3, #0]
 80125de:	691b      	ldr	r3, [r3, #16]
 80125e0:	2208      	movs	r2, #8
 80125e2:	4013      	ands	r3, r2
 80125e4:	2b08      	cmp	r3, #8
 80125e6:	d124      	bne.n	8012632 <HAL_TIM_IRQHandler+0x112>
 80125e8:	687b      	ldr	r3, [r7, #4]
 80125ea:	681b      	ldr	r3, [r3, #0]
 80125ec:	68db      	ldr	r3, [r3, #12]
 80125ee:	2208      	movs	r2, #8
 80125f0:	4013      	ands	r3, r2
 80125f2:	2b08      	cmp	r3, #8
 80125f4:	d11d      	bne.n	8012632 <HAL_TIM_IRQHandler+0x112>
 80125f6:	687b      	ldr	r3, [r7, #4]
 80125f8:	681b      	ldr	r3, [r3, #0]
 80125fa:	2209      	movs	r2, #9
 80125fc:	4252      	negs	r2, r2
 80125fe:	611a      	str	r2, [r3, #16]
 8012600:	687b      	ldr	r3, [r7, #4]
 8012602:	2204      	movs	r2, #4
 8012604:	771a      	strb	r2, [r3, #28]
 8012606:	687b      	ldr	r3, [r7, #4]
 8012608:	681b      	ldr	r3, [r3, #0]
 801260a:	69db      	ldr	r3, [r3, #28]
 801260c:	2203      	movs	r2, #3
 801260e:	4013      	ands	r3, r2
 8012610:	d004      	beq.n	801261c <HAL_TIM_IRQHandler+0xfc>
 8012612:	687b      	ldr	r3, [r7, #4]
 8012614:	0018      	movs	r0, r3
 8012616:	f7f1 fdb3 	bl	8004180 <HAL_TIM_IC_CaptureCallback>
 801261a:	e007      	b.n	801262c <HAL_TIM_IRQHandler+0x10c>
 801261c:	687b      	ldr	r3, [r7, #4]
 801261e:	0018      	movs	r0, r3
 8012620:	f000 fa5e 	bl	8012ae0 <HAL_TIM_OC_DelayElapsedCallback>
 8012624:	687b      	ldr	r3, [r7, #4]
 8012626:	0018      	movs	r0, r3
 8012628:	f000 fa62 	bl	8012af0 <HAL_TIM_PWM_PulseFinishedCallback>
 801262c:	687b      	ldr	r3, [r7, #4]
 801262e:	2200      	movs	r2, #0
 8012630:	771a      	strb	r2, [r3, #28]
 8012632:	687b      	ldr	r3, [r7, #4]
 8012634:	681b      	ldr	r3, [r3, #0]
 8012636:	691b      	ldr	r3, [r3, #16]
 8012638:	2210      	movs	r2, #16
 801263a:	4013      	ands	r3, r2
 801263c:	2b10      	cmp	r3, #16
 801263e:	d125      	bne.n	801268c <HAL_TIM_IRQHandler+0x16c>
 8012640:	687b      	ldr	r3, [r7, #4]
 8012642:	681b      	ldr	r3, [r3, #0]
 8012644:	68db      	ldr	r3, [r3, #12]
 8012646:	2210      	movs	r2, #16
 8012648:	4013      	ands	r3, r2
 801264a:	2b10      	cmp	r3, #16
 801264c:	d11e      	bne.n	801268c <HAL_TIM_IRQHandler+0x16c>
 801264e:	687b      	ldr	r3, [r7, #4]
 8012650:	681b      	ldr	r3, [r3, #0]
 8012652:	2211      	movs	r2, #17
 8012654:	4252      	negs	r2, r2
 8012656:	611a      	str	r2, [r3, #16]
 8012658:	687b      	ldr	r3, [r7, #4]
 801265a:	2208      	movs	r2, #8
 801265c:	771a      	strb	r2, [r3, #28]
 801265e:	687b      	ldr	r3, [r7, #4]
 8012660:	681b      	ldr	r3, [r3, #0]
 8012662:	69da      	ldr	r2, [r3, #28]
 8012664:	23c0      	movs	r3, #192	@ 0xc0
 8012666:	009b      	lsls	r3, r3, #2
 8012668:	4013      	ands	r3, r2
 801266a:	d004      	beq.n	8012676 <HAL_TIM_IRQHandler+0x156>
 801266c:	687b      	ldr	r3, [r7, #4]
 801266e:	0018      	movs	r0, r3
 8012670:	f7f1 fd86 	bl	8004180 <HAL_TIM_IC_CaptureCallback>
 8012674:	e007      	b.n	8012686 <HAL_TIM_IRQHandler+0x166>
 8012676:	687b      	ldr	r3, [r7, #4]
 8012678:	0018      	movs	r0, r3
 801267a:	f000 fa31 	bl	8012ae0 <HAL_TIM_OC_DelayElapsedCallback>
 801267e:	687b      	ldr	r3, [r7, #4]
 8012680:	0018      	movs	r0, r3
 8012682:	f000 fa35 	bl	8012af0 <HAL_TIM_PWM_PulseFinishedCallback>
 8012686:	687b      	ldr	r3, [r7, #4]
 8012688:	2200      	movs	r2, #0
 801268a:	771a      	strb	r2, [r3, #28]
 801268c:	687b      	ldr	r3, [r7, #4]
 801268e:	681b      	ldr	r3, [r3, #0]
 8012690:	691b      	ldr	r3, [r3, #16]
 8012692:	2201      	movs	r2, #1
 8012694:	4013      	ands	r3, r2
 8012696:	2b01      	cmp	r3, #1
 8012698:	d10f      	bne.n	80126ba <HAL_TIM_IRQHandler+0x19a>
 801269a:	687b      	ldr	r3, [r7, #4]
 801269c:	681b      	ldr	r3, [r3, #0]
 801269e:	68db      	ldr	r3, [r3, #12]
 80126a0:	2201      	movs	r2, #1
 80126a2:	4013      	ands	r3, r2
 80126a4:	2b01      	cmp	r3, #1
 80126a6:	d108      	bne.n	80126ba <HAL_TIM_IRQHandler+0x19a>
 80126a8:	687b      	ldr	r3, [r7, #4]
 80126aa:	681b      	ldr	r3, [r3, #0]
 80126ac:	2202      	movs	r2, #2
 80126ae:	4252      	negs	r2, r2
 80126b0:	611a      	str	r2, [r3, #16]
 80126b2:	687b      	ldr	r3, [r7, #4]
 80126b4:	0018      	movs	r0, r3
 80126b6:	f7f1 fe1f 	bl	80042f8 <HAL_TIM_PeriodElapsedCallback>
 80126ba:	687b      	ldr	r3, [r7, #4]
 80126bc:	681b      	ldr	r3, [r3, #0]
 80126be:	691b      	ldr	r3, [r3, #16]
 80126c0:	2280      	movs	r2, #128	@ 0x80
 80126c2:	4013      	ands	r3, r2
 80126c4:	2b80      	cmp	r3, #128	@ 0x80
 80126c6:	d10f      	bne.n	80126e8 <HAL_TIM_IRQHandler+0x1c8>
 80126c8:	687b      	ldr	r3, [r7, #4]
 80126ca:	681b      	ldr	r3, [r3, #0]
 80126cc:	68db      	ldr	r3, [r3, #12]
 80126ce:	2280      	movs	r2, #128	@ 0x80
 80126d0:	4013      	ands	r3, r2
 80126d2:	2b80      	cmp	r3, #128	@ 0x80
 80126d4:	d108      	bne.n	80126e8 <HAL_TIM_IRQHandler+0x1c8>
 80126d6:	687b      	ldr	r3, [r7, #4]
 80126d8:	681b      	ldr	r3, [r3, #0]
 80126da:	2281      	movs	r2, #129	@ 0x81
 80126dc:	4252      	negs	r2, r2
 80126de:	611a      	str	r2, [r3, #16]
 80126e0:	687b      	ldr	r3, [r7, #4]
 80126e2:	0018      	movs	r0, r3
 80126e4:	f000 fcee 	bl	80130c4 <HAL_TIMEx_BreakCallback>
 80126e8:	687b      	ldr	r3, [r7, #4]
 80126ea:	681b      	ldr	r3, [r3, #0]
 80126ec:	691a      	ldr	r2, [r3, #16]
 80126ee:	2380      	movs	r3, #128	@ 0x80
 80126f0:	005b      	lsls	r3, r3, #1
 80126f2:	401a      	ands	r2, r3
 80126f4:	2380      	movs	r3, #128	@ 0x80
 80126f6:	005b      	lsls	r3, r3, #1
 80126f8:	429a      	cmp	r2, r3
 80126fa:	d10e      	bne.n	801271a <HAL_TIM_IRQHandler+0x1fa>
 80126fc:	687b      	ldr	r3, [r7, #4]
 80126fe:	681b      	ldr	r3, [r3, #0]
 8012700:	68db      	ldr	r3, [r3, #12]
 8012702:	2280      	movs	r2, #128	@ 0x80
 8012704:	4013      	ands	r3, r2
 8012706:	2b80      	cmp	r3, #128	@ 0x80
 8012708:	d107      	bne.n	801271a <HAL_TIM_IRQHandler+0x1fa>
 801270a:	687b      	ldr	r3, [r7, #4]
 801270c:	681b      	ldr	r3, [r3, #0]
 801270e:	4a1c      	ldr	r2, [pc, #112]	@ (8012780 <HAL_TIM_IRQHandler+0x260>)
 8012710:	611a      	str	r2, [r3, #16]
 8012712:	687b      	ldr	r3, [r7, #4]
 8012714:	0018      	movs	r0, r3
 8012716:	f000 fcdd 	bl	80130d4 <HAL_TIMEx_Break2Callback>
 801271a:	687b      	ldr	r3, [r7, #4]
 801271c:	681b      	ldr	r3, [r3, #0]
 801271e:	691b      	ldr	r3, [r3, #16]
 8012720:	2240      	movs	r2, #64	@ 0x40
 8012722:	4013      	ands	r3, r2
 8012724:	2b40      	cmp	r3, #64	@ 0x40
 8012726:	d10f      	bne.n	8012748 <HAL_TIM_IRQHandler+0x228>
 8012728:	687b      	ldr	r3, [r7, #4]
 801272a:	681b      	ldr	r3, [r3, #0]
 801272c:	68db      	ldr	r3, [r3, #12]
 801272e:	2240      	movs	r2, #64	@ 0x40
 8012730:	4013      	ands	r3, r2
 8012732:	2b40      	cmp	r3, #64	@ 0x40
 8012734:	d108      	bne.n	8012748 <HAL_TIM_IRQHandler+0x228>
 8012736:	687b      	ldr	r3, [r7, #4]
 8012738:	681b      	ldr	r3, [r3, #0]
 801273a:	2241      	movs	r2, #65	@ 0x41
 801273c:	4252      	negs	r2, r2
 801273e:	611a      	str	r2, [r3, #16]
 8012740:	687b      	ldr	r3, [r7, #4]
 8012742:	0018      	movs	r0, r3
 8012744:	f000 f9dc 	bl	8012b00 <HAL_TIM_TriggerCallback>
 8012748:	687b      	ldr	r3, [r7, #4]
 801274a:	681b      	ldr	r3, [r3, #0]
 801274c:	691b      	ldr	r3, [r3, #16]
 801274e:	2220      	movs	r2, #32
 8012750:	4013      	ands	r3, r2
 8012752:	2b20      	cmp	r3, #32
 8012754:	d10f      	bne.n	8012776 <HAL_TIM_IRQHandler+0x256>
 8012756:	687b      	ldr	r3, [r7, #4]
 8012758:	681b      	ldr	r3, [r3, #0]
 801275a:	68db      	ldr	r3, [r3, #12]
 801275c:	2220      	movs	r2, #32
 801275e:	4013      	ands	r3, r2
 8012760:	2b20      	cmp	r3, #32
 8012762:	d108      	bne.n	8012776 <HAL_TIM_IRQHandler+0x256>
 8012764:	687b      	ldr	r3, [r7, #4]
 8012766:	681b      	ldr	r3, [r3, #0]
 8012768:	2221      	movs	r2, #33	@ 0x21
 801276a:	4252      	negs	r2, r2
 801276c:	611a      	str	r2, [r3, #16]
 801276e:	687b      	ldr	r3, [r7, #4]
 8012770:	0018      	movs	r0, r3
 8012772:	f000 fc9f 	bl	80130b4 <HAL_TIMEx_CommutCallback>
 8012776:	46c0      	nop			@ (mov r8, r8)
 8012778:	46bd      	mov	sp, r7
 801277a:	b002      	add	sp, #8
 801277c:	bd80      	pop	{r7, pc}
 801277e:	46c0      	nop			@ (mov r8, r8)
 8012780:	fffffeff 	.word	0xfffffeff

08012784 <HAL_TIM_IC_ConfigChannel>:
 8012784:	b580      	push	{r7, lr}
 8012786:	b086      	sub	sp, #24
 8012788:	af00      	add	r7, sp, #0
 801278a:	60f8      	str	r0, [r7, #12]
 801278c:	60b9      	str	r1, [r7, #8]
 801278e:	607a      	str	r2, [r7, #4]
 8012790:	2317      	movs	r3, #23
 8012792:	18fb      	adds	r3, r7, r3
 8012794:	2200      	movs	r2, #0
 8012796:	701a      	strb	r2, [r3, #0]
 8012798:	68fb      	ldr	r3, [r7, #12]
 801279a:	223c      	movs	r2, #60	@ 0x3c
 801279c:	5c9b      	ldrb	r3, [r3, r2]
 801279e:	2b01      	cmp	r3, #1
 80127a0:	d101      	bne.n	80127a6 <HAL_TIM_IC_ConfigChannel+0x22>
 80127a2:	2302      	movs	r3, #2
 80127a4:	e08c      	b.n	80128c0 <HAL_TIM_IC_ConfigChannel+0x13c>
 80127a6:	68fb      	ldr	r3, [r7, #12]
 80127a8:	223c      	movs	r2, #60	@ 0x3c
 80127aa:	2101      	movs	r1, #1
 80127ac:	5499      	strb	r1, [r3, r2]
 80127ae:	687b      	ldr	r3, [r7, #4]
 80127b0:	2b00      	cmp	r3, #0
 80127b2:	d11b      	bne.n	80127ec <HAL_TIM_IC_ConfigChannel+0x68>
 80127b4:	68fb      	ldr	r3, [r7, #12]
 80127b6:	6818      	ldr	r0, [r3, #0]
 80127b8:	68bb      	ldr	r3, [r7, #8]
 80127ba:	6819      	ldr	r1, [r3, #0]
 80127bc:	68bb      	ldr	r3, [r7, #8]
 80127be:	685a      	ldr	r2, [r3, #4]
 80127c0:	68bb      	ldr	r3, [r7, #8]
 80127c2:	68db      	ldr	r3, [r3, #12]
 80127c4:	f000 fa24 	bl	8012c10 <TIM_TI1_SetConfig>
 80127c8:	68fb      	ldr	r3, [r7, #12]
 80127ca:	681b      	ldr	r3, [r3, #0]
 80127cc:	699a      	ldr	r2, [r3, #24]
 80127ce:	68fb      	ldr	r3, [r7, #12]
 80127d0:	681b      	ldr	r3, [r3, #0]
 80127d2:	210c      	movs	r1, #12
 80127d4:	438a      	bics	r2, r1
 80127d6:	619a      	str	r2, [r3, #24]
 80127d8:	68fb      	ldr	r3, [r7, #12]
 80127da:	681b      	ldr	r3, [r3, #0]
 80127dc:	6999      	ldr	r1, [r3, #24]
 80127de:	68bb      	ldr	r3, [r7, #8]
 80127e0:	689a      	ldr	r2, [r3, #8]
 80127e2:	68fb      	ldr	r3, [r7, #12]
 80127e4:	681b      	ldr	r3, [r3, #0]
 80127e6:	430a      	orrs	r2, r1
 80127e8:	619a      	str	r2, [r3, #24]
 80127ea:	e062      	b.n	80128b2 <HAL_TIM_IC_ConfigChannel+0x12e>
 80127ec:	687b      	ldr	r3, [r7, #4]
 80127ee:	2b04      	cmp	r3, #4
 80127f0:	d11c      	bne.n	801282c <HAL_TIM_IC_ConfigChannel+0xa8>
 80127f2:	68fb      	ldr	r3, [r7, #12]
 80127f4:	6818      	ldr	r0, [r3, #0]
 80127f6:	68bb      	ldr	r3, [r7, #8]
 80127f8:	6819      	ldr	r1, [r3, #0]
 80127fa:	68bb      	ldr	r3, [r7, #8]
 80127fc:	685a      	ldr	r2, [r3, #4]
 80127fe:	68bb      	ldr	r3, [r7, #8]
 8012800:	68db      	ldr	r3, [r3, #12]
 8012802:	f000 fa8f 	bl	8012d24 <TIM_TI2_SetConfig>
 8012806:	68fb      	ldr	r3, [r7, #12]
 8012808:	681b      	ldr	r3, [r3, #0]
 801280a:	699a      	ldr	r2, [r3, #24]
 801280c:	68fb      	ldr	r3, [r7, #12]
 801280e:	681b      	ldr	r3, [r3, #0]
 8012810:	492d      	ldr	r1, [pc, #180]	@ (80128c8 <HAL_TIM_IC_ConfigChannel+0x144>)
 8012812:	400a      	ands	r2, r1
 8012814:	619a      	str	r2, [r3, #24]
 8012816:	68fb      	ldr	r3, [r7, #12]
 8012818:	681b      	ldr	r3, [r3, #0]
 801281a:	6999      	ldr	r1, [r3, #24]
 801281c:	68bb      	ldr	r3, [r7, #8]
 801281e:	689b      	ldr	r3, [r3, #8]
 8012820:	021a      	lsls	r2, r3, #8
 8012822:	68fb      	ldr	r3, [r7, #12]
 8012824:	681b      	ldr	r3, [r3, #0]
 8012826:	430a      	orrs	r2, r1
 8012828:	619a      	str	r2, [r3, #24]
 801282a:	e042      	b.n	80128b2 <HAL_TIM_IC_ConfigChannel+0x12e>
 801282c:	687b      	ldr	r3, [r7, #4]
 801282e:	2b08      	cmp	r3, #8
 8012830:	d11b      	bne.n	801286a <HAL_TIM_IC_ConfigChannel+0xe6>
 8012832:	68fb      	ldr	r3, [r7, #12]
 8012834:	6818      	ldr	r0, [r3, #0]
 8012836:	68bb      	ldr	r3, [r7, #8]
 8012838:	6819      	ldr	r1, [r3, #0]
 801283a:	68bb      	ldr	r3, [r7, #8]
 801283c:	685a      	ldr	r2, [r3, #4]
 801283e:	68bb      	ldr	r3, [r7, #8]
 8012840:	68db      	ldr	r3, [r3, #12]
 8012842:	f000 fae3 	bl	8012e0c <TIM_TI3_SetConfig>
 8012846:	68fb      	ldr	r3, [r7, #12]
 8012848:	681b      	ldr	r3, [r3, #0]
 801284a:	69da      	ldr	r2, [r3, #28]
 801284c:	68fb      	ldr	r3, [r7, #12]
 801284e:	681b      	ldr	r3, [r3, #0]
 8012850:	210c      	movs	r1, #12
 8012852:	438a      	bics	r2, r1
 8012854:	61da      	str	r2, [r3, #28]
 8012856:	68fb      	ldr	r3, [r7, #12]
 8012858:	681b      	ldr	r3, [r3, #0]
 801285a:	69d9      	ldr	r1, [r3, #28]
 801285c:	68bb      	ldr	r3, [r7, #8]
 801285e:	689a      	ldr	r2, [r3, #8]
 8012860:	68fb      	ldr	r3, [r7, #12]
 8012862:	681b      	ldr	r3, [r3, #0]
 8012864:	430a      	orrs	r2, r1
 8012866:	61da      	str	r2, [r3, #28]
 8012868:	e023      	b.n	80128b2 <HAL_TIM_IC_ConfigChannel+0x12e>
 801286a:	687b      	ldr	r3, [r7, #4]
 801286c:	2b0c      	cmp	r3, #12
 801286e:	d11c      	bne.n	80128aa <HAL_TIM_IC_ConfigChannel+0x126>
 8012870:	68fb      	ldr	r3, [r7, #12]
 8012872:	6818      	ldr	r0, [r3, #0]
 8012874:	68bb      	ldr	r3, [r7, #8]
 8012876:	6819      	ldr	r1, [r3, #0]
 8012878:	68bb      	ldr	r3, [r7, #8]
 801287a:	685a      	ldr	r2, [r3, #4]
 801287c:	68bb      	ldr	r3, [r7, #8]
 801287e:	68db      	ldr	r3, [r3, #12]
 8012880:	f000 fb04 	bl	8012e8c <TIM_TI4_SetConfig>
 8012884:	68fb      	ldr	r3, [r7, #12]
 8012886:	681b      	ldr	r3, [r3, #0]
 8012888:	69da      	ldr	r2, [r3, #28]
 801288a:	68fb      	ldr	r3, [r7, #12]
 801288c:	681b      	ldr	r3, [r3, #0]
 801288e:	490e      	ldr	r1, [pc, #56]	@ (80128c8 <HAL_TIM_IC_ConfigChannel+0x144>)
 8012890:	400a      	ands	r2, r1
 8012892:	61da      	str	r2, [r3, #28]
 8012894:	68fb      	ldr	r3, [r7, #12]
 8012896:	681b      	ldr	r3, [r3, #0]
 8012898:	69d9      	ldr	r1, [r3, #28]
 801289a:	68bb      	ldr	r3, [r7, #8]
 801289c:	689b      	ldr	r3, [r3, #8]
 801289e:	021a      	lsls	r2, r3, #8
 80128a0:	68fb      	ldr	r3, [r7, #12]
 80128a2:	681b      	ldr	r3, [r3, #0]
 80128a4:	430a      	orrs	r2, r1
 80128a6:	61da      	str	r2, [r3, #28]
 80128a8:	e003      	b.n	80128b2 <HAL_TIM_IC_ConfigChannel+0x12e>
 80128aa:	2317      	movs	r3, #23
 80128ac:	18fb      	adds	r3, r7, r3
 80128ae:	2201      	movs	r2, #1
 80128b0:	701a      	strb	r2, [r3, #0]
 80128b2:	68fb      	ldr	r3, [r7, #12]
 80128b4:	223c      	movs	r2, #60	@ 0x3c
 80128b6:	2100      	movs	r1, #0
 80128b8:	5499      	strb	r1, [r3, r2]
 80128ba:	2317      	movs	r3, #23
 80128bc:	18fb      	adds	r3, r7, r3
 80128be:	781b      	ldrb	r3, [r3, #0]
 80128c0:	0018      	movs	r0, r3
 80128c2:	46bd      	mov	sp, r7
 80128c4:	b006      	add	sp, #24
 80128c6:	bd80      	pop	{r7, pc}
 80128c8:	fffff3ff 	.word	0xfffff3ff

080128cc <HAL_TIM_ConfigClockSource>:
 80128cc:	b580      	push	{r7, lr}
 80128ce:	b084      	sub	sp, #16
 80128d0:	af00      	add	r7, sp, #0
 80128d2:	6078      	str	r0, [r7, #4]
 80128d4:	6039      	str	r1, [r7, #0]
 80128d6:	230f      	movs	r3, #15
 80128d8:	18fb      	adds	r3, r7, r3
 80128da:	2200      	movs	r2, #0
 80128dc:	701a      	strb	r2, [r3, #0]
 80128de:	687b      	ldr	r3, [r7, #4]
 80128e0:	223c      	movs	r2, #60	@ 0x3c
 80128e2:	5c9b      	ldrb	r3, [r3, r2]
 80128e4:	2b01      	cmp	r3, #1
 80128e6:	d101      	bne.n	80128ec <HAL_TIM_ConfigClockSource+0x20>
 80128e8:	2302      	movs	r3, #2
 80128ea:	e0bc      	b.n	8012a66 <HAL_TIM_ConfigClockSource+0x19a>
 80128ec:	687b      	ldr	r3, [r7, #4]
 80128ee:	223c      	movs	r2, #60	@ 0x3c
 80128f0:	2101      	movs	r1, #1
 80128f2:	5499      	strb	r1, [r3, r2]
 80128f4:	687b      	ldr	r3, [r7, #4]
 80128f6:	223d      	movs	r2, #61	@ 0x3d
 80128f8:	2102      	movs	r1, #2
 80128fa:	5499      	strb	r1, [r3, r2]
 80128fc:	687b      	ldr	r3, [r7, #4]
 80128fe:	681b      	ldr	r3, [r3, #0]
 8012900:	689b      	ldr	r3, [r3, #8]
 8012902:	60bb      	str	r3, [r7, #8]
 8012904:	68bb      	ldr	r3, [r7, #8]
 8012906:	4a5a      	ldr	r2, [pc, #360]	@ (8012a70 <HAL_TIM_ConfigClockSource+0x1a4>)
 8012908:	4013      	ands	r3, r2
 801290a:	60bb      	str	r3, [r7, #8]
 801290c:	68bb      	ldr	r3, [r7, #8]
 801290e:	4a59      	ldr	r2, [pc, #356]	@ (8012a74 <HAL_TIM_ConfigClockSource+0x1a8>)
 8012910:	4013      	ands	r3, r2
 8012912:	60bb      	str	r3, [r7, #8]
 8012914:	687b      	ldr	r3, [r7, #4]
 8012916:	681b      	ldr	r3, [r3, #0]
 8012918:	68ba      	ldr	r2, [r7, #8]
 801291a:	609a      	str	r2, [r3, #8]
 801291c:	683b      	ldr	r3, [r7, #0]
 801291e:	681b      	ldr	r3, [r3, #0]
 8012920:	2280      	movs	r2, #128	@ 0x80
 8012922:	0192      	lsls	r2, r2, #6
 8012924:	4293      	cmp	r3, r2
 8012926:	d040      	beq.n	80129aa <HAL_TIM_ConfigClockSource+0xde>
 8012928:	2280      	movs	r2, #128	@ 0x80
 801292a:	0192      	lsls	r2, r2, #6
 801292c:	4293      	cmp	r3, r2
 801292e:	d900      	bls.n	8012932 <HAL_TIM_ConfigClockSource+0x66>
 8012930:	e088      	b.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 8012932:	2280      	movs	r2, #128	@ 0x80
 8012934:	0152      	lsls	r2, r2, #5
 8012936:	4293      	cmp	r3, r2
 8012938:	d100      	bne.n	801293c <HAL_TIM_ConfigClockSource+0x70>
 801293a:	e088      	b.n	8012a4e <HAL_TIM_ConfigClockSource+0x182>
 801293c:	2280      	movs	r2, #128	@ 0x80
 801293e:	0152      	lsls	r2, r2, #5
 8012940:	4293      	cmp	r3, r2
 8012942:	d900      	bls.n	8012946 <HAL_TIM_ConfigClockSource+0x7a>
 8012944:	e07e      	b.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 8012946:	2b70      	cmp	r3, #112	@ 0x70
 8012948:	d018      	beq.n	801297c <HAL_TIM_ConfigClockSource+0xb0>
 801294a:	d900      	bls.n	801294e <HAL_TIM_ConfigClockSource+0x82>
 801294c:	e07a      	b.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 801294e:	2b60      	cmp	r3, #96	@ 0x60
 8012950:	d04f      	beq.n	80129f2 <HAL_TIM_ConfigClockSource+0x126>
 8012952:	d900      	bls.n	8012956 <HAL_TIM_ConfigClockSource+0x8a>
 8012954:	e076      	b.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 8012956:	2b50      	cmp	r3, #80	@ 0x50
 8012958:	d03b      	beq.n	80129d2 <HAL_TIM_ConfigClockSource+0x106>
 801295a:	d900      	bls.n	801295e <HAL_TIM_ConfigClockSource+0x92>
 801295c:	e072      	b.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 801295e:	2b40      	cmp	r3, #64	@ 0x40
 8012960:	d057      	beq.n	8012a12 <HAL_TIM_ConfigClockSource+0x146>
 8012962:	d900      	bls.n	8012966 <HAL_TIM_ConfigClockSource+0x9a>
 8012964:	e06e      	b.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 8012966:	2b30      	cmp	r3, #48	@ 0x30
 8012968:	d063      	beq.n	8012a32 <HAL_TIM_ConfigClockSource+0x166>
 801296a:	d86b      	bhi.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 801296c:	2b20      	cmp	r3, #32
 801296e:	d060      	beq.n	8012a32 <HAL_TIM_ConfigClockSource+0x166>
 8012970:	d868      	bhi.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 8012972:	2b00      	cmp	r3, #0
 8012974:	d05d      	beq.n	8012a32 <HAL_TIM_ConfigClockSource+0x166>
 8012976:	2b10      	cmp	r3, #16
 8012978:	d05b      	beq.n	8012a32 <HAL_TIM_ConfigClockSource+0x166>
 801297a:	e063      	b.n	8012a44 <HAL_TIM_ConfigClockSource+0x178>
 801297c:	687b      	ldr	r3, [r7, #4]
 801297e:	6818      	ldr	r0, [r3, #0]
 8012980:	683b      	ldr	r3, [r7, #0]
 8012982:	6899      	ldr	r1, [r3, #8]
 8012984:	683b      	ldr	r3, [r7, #0]
 8012986:	685a      	ldr	r2, [r3, #4]
 8012988:	683b      	ldr	r3, [r7, #0]
 801298a:	68db      	ldr	r3, [r3, #12]
 801298c:	f000 fae0 	bl	8012f50 <TIM_ETR_SetConfig>
 8012990:	687b      	ldr	r3, [r7, #4]
 8012992:	681b      	ldr	r3, [r3, #0]
 8012994:	689b      	ldr	r3, [r3, #8]
 8012996:	60bb      	str	r3, [r7, #8]
 8012998:	68bb      	ldr	r3, [r7, #8]
 801299a:	2277      	movs	r2, #119	@ 0x77
 801299c:	4313      	orrs	r3, r2
 801299e:	60bb      	str	r3, [r7, #8]
 80129a0:	687b      	ldr	r3, [r7, #4]
 80129a2:	681b      	ldr	r3, [r3, #0]
 80129a4:	68ba      	ldr	r2, [r7, #8]
 80129a6:	609a      	str	r2, [r3, #8]
 80129a8:	e052      	b.n	8012a50 <HAL_TIM_ConfigClockSource+0x184>
 80129aa:	687b      	ldr	r3, [r7, #4]
 80129ac:	6818      	ldr	r0, [r3, #0]
 80129ae:	683b      	ldr	r3, [r7, #0]
 80129b0:	6899      	ldr	r1, [r3, #8]
 80129b2:	683b      	ldr	r3, [r7, #0]
 80129b4:	685a      	ldr	r2, [r3, #4]
 80129b6:	683b      	ldr	r3, [r7, #0]
 80129b8:	68db      	ldr	r3, [r3, #12]
 80129ba:	f000 fac9 	bl	8012f50 <TIM_ETR_SetConfig>
 80129be:	687b      	ldr	r3, [r7, #4]
 80129c0:	681b      	ldr	r3, [r3, #0]
 80129c2:	689a      	ldr	r2, [r3, #8]
 80129c4:	687b      	ldr	r3, [r7, #4]
 80129c6:	681b      	ldr	r3, [r3, #0]
 80129c8:	2180      	movs	r1, #128	@ 0x80
 80129ca:	01c9      	lsls	r1, r1, #7
 80129cc:	430a      	orrs	r2, r1
 80129ce:	609a      	str	r2, [r3, #8]
 80129d0:	e03e      	b.n	8012a50 <HAL_TIM_ConfigClockSource+0x184>
 80129d2:	687b      	ldr	r3, [r7, #4]
 80129d4:	6818      	ldr	r0, [r3, #0]
 80129d6:	683b      	ldr	r3, [r7, #0]
 80129d8:	6859      	ldr	r1, [r3, #4]
 80129da:	683b      	ldr	r3, [r7, #0]
 80129dc:	68db      	ldr	r3, [r3, #12]
 80129de:	001a      	movs	r2, r3
 80129e0:	f000 f972 	bl	8012cc8 <TIM_TI1_ConfigInputStage>
 80129e4:	687b      	ldr	r3, [r7, #4]
 80129e6:	681b      	ldr	r3, [r3, #0]
 80129e8:	2150      	movs	r1, #80	@ 0x50
 80129ea:	0018      	movs	r0, r3
 80129ec:	f000 fa94 	bl	8012f18 <TIM_ITRx_SetConfig>
 80129f0:	e02e      	b.n	8012a50 <HAL_TIM_ConfigClockSource+0x184>
 80129f2:	687b      	ldr	r3, [r7, #4]
 80129f4:	6818      	ldr	r0, [r3, #0]
 80129f6:	683b      	ldr	r3, [r7, #0]
 80129f8:	6859      	ldr	r1, [r3, #4]
 80129fa:	683b      	ldr	r3, [r7, #0]
 80129fc:	68db      	ldr	r3, [r3, #12]
 80129fe:	001a      	movs	r2, r3
 8012a00:	f000 f9d2 	bl	8012da8 <TIM_TI2_ConfigInputStage>
 8012a04:	687b      	ldr	r3, [r7, #4]
 8012a06:	681b      	ldr	r3, [r3, #0]
 8012a08:	2160      	movs	r1, #96	@ 0x60
 8012a0a:	0018      	movs	r0, r3
 8012a0c:	f000 fa84 	bl	8012f18 <TIM_ITRx_SetConfig>
 8012a10:	e01e      	b.n	8012a50 <HAL_TIM_ConfigClockSource+0x184>
 8012a12:	687b      	ldr	r3, [r7, #4]
 8012a14:	6818      	ldr	r0, [r3, #0]
 8012a16:	683b      	ldr	r3, [r7, #0]
 8012a18:	6859      	ldr	r1, [r3, #4]
 8012a1a:	683b      	ldr	r3, [r7, #0]
 8012a1c:	68db      	ldr	r3, [r3, #12]
 8012a1e:	001a      	movs	r2, r3
 8012a20:	f000 f952 	bl	8012cc8 <TIM_TI1_ConfigInputStage>
 8012a24:	687b      	ldr	r3, [r7, #4]
 8012a26:	681b      	ldr	r3, [r3, #0]
 8012a28:	2140      	movs	r1, #64	@ 0x40
 8012a2a:	0018      	movs	r0, r3
 8012a2c:	f000 fa74 	bl	8012f18 <TIM_ITRx_SetConfig>
 8012a30:	e00e      	b.n	8012a50 <HAL_TIM_ConfigClockSource+0x184>
 8012a32:	687b      	ldr	r3, [r7, #4]
 8012a34:	681a      	ldr	r2, [r3, #0]
 8012a36:	683b      	ldr	r3, [r7, #0]
 8012a38:	681b      	ldr	r3, [r3, #0]
 8012a3a:	0019      	movs	r1, r3
 8012a3c:	0010      	movs	r0, r2
 8012a3e:	f000 fa6b 	bl	8012f18 <TIM_ITRx_SetConfig>
 8012a42:	e005      	b.n	8012a50 <HAL_TIM_ConfigClockSource+0x184>
 8012a44:	230f      	movs	r3, #15
 8012a46:	18fb      	adds	r3, r7, r3
 8012a48:	2201      	movs	r2, #1
 8012a4a:	701a      	strb	r2, [r3, #0]
 8012a4c:	e000      	b.n	8012a50 <HAL_TIM_ConfigClockSource+0x184>
 8012a4e:	46c0      	nop			@ (mov r8, r8)
 8012a50:	687b      	ldr	r3, [r7, #4]
 8012a52:	223d      	movs	r2, #61	@ 0x3d
 8012a54:	2101      	movs	r1, #1
 8012a56:	5499      	strb	r1, [r3, r2]
 8012a58:	687b      	ldr	r3, [r7, #4]
 8012a5a:	223c      	movs	r2, #60	@ 0x3c
 8012a5c:	2100      	movs	r1, #0
 8012a5e:	5499      	strb	r1, [r3, r2]
 8012a60:	230f      	movs	r3, #15
 8012a62:	18fb      	adds	r3, r7, r3
 8012a64:	781b      	ldrb	r3, [r3, #0]
 8012a66:	0018      	movs	r0, r3
 8012a68:	46bd      	mov	sp, r7
 8012a6a:	b004      	add	sp, #16
 8012a6c:	bd80      	pop	{r7, pc}
 8012a6e:	46c0      	nop			@ (mov r8, r8)
 8012a70:	ffceff88 	.word	0xffceff88
 8012a74:	ffff00ff 	.word	0xffff00ff

08012a78 <HAL_TIM_ReadCapturedValue>:
 8012a78:	b580      	push	{r7, lr}
 8012a7a:	b084      	sub	sp, #16
 8012a7c:	af00      	add	r7, sp, #0
 8012a7e:	6078      	str	r0, [r7, #4]
 8012a80:	6039      	str	r1, [r7, #0]
 8012a82:	2300      	movs	r3, #0
 8012a84:	60fb      	str	r3, [r7, #12]
 8012a86:	683b      	ldr	r3, [r7, #0]
 8012a88:	2b0c      	cmp	r3, #12
 8012a8a:	d01e      	beq.n	8012aca <HAL_TIM_ReadCapturedValue+0x52>
 8012a8c:	683b      	ldr	r3, [r7, #0]
 8012a8e:	2b0c      	cmp	r3, #12
 8012a90:	d820      	bhi.n	8012ad4 <HAL_TIM_ReadCapturedValue+0x5c>
 8012a92:	683b      	ldr	r3, [r7, #0]
 8012a94:	2b08      	cmp	r3, #8
 8012a96:	d013      	beq.n	8012ac0 <HAL_TIM_ReadCapturedValue+0x48>
 8012a98:	683b      	ldr	r3, [r7, #0]
 8012a9a:	2b08      	cmp	r3, #8
 8012a9c:	d81a      	bhi.n	8012ad4 <HAL_TIM_ReadCapturedValue+0x5c>
 8012a9e:	683b      	ldr	r3, [r7, #0]
 8012aa0:	2b00      	cmp	r3, #0
 8012aa2:	d003      	beq.n	8012aac <HAL_TIM_ReadCapturedValue+0x34>
 8012aa4:	683b      	ldr	r3, [r7, #0]
 8012aa6:	2b04      	cmp	r3, #4
 8012aa8:	d005      	beq.n	8012ab6 <HAL_TIM_ReadCapturedValue+0x3e>
 8012aaa:	e013      	b.n	8012ad4 <HAL_TIM_ReadCapturedValue+0x5c>
 8012aac:	687b      	ldr	r3, [r7, #4]
 8012aae:	681b      	ldr	r3, [r3, #0]
 8012ab0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012ab2:	60fb      	str	r3, [r7, #12]
 8012ab4:	e00f      	b.n	8012ad6 <HAL_TIM_ReadCapturedValue+0x5e>
 8012ab6:	687b      	ldr	r3, [r7, #4]
 8012ab8:	681b      	ldr	r3, [r3, #0]
 8012aba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012abc:	60fb      	str	r3, [r7, #12]
 8012abe:	e00a      	b.n	8012ad6 <HAL_TIM_ReadCapturedValue+0x5e>
 8012ac0:	687b      	ldr	r3, [r7, #4]
 8012ac2:	681b      	ldr	r3, [r3, #0]
 8012ac4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012ac6:	60fb      	str	r3, [r7, #12]
 8012ac8:	e005      	b.n	8012ad6 <HAL_TIM_ReadCapturedValue+0x5e>
 8012aca:	687b      	ldr	r3, [r7, #4]
 8012acc:	681b      	ldr	r3, [r3, #0]
 8012ace:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012ad0:	60fb      	str	r3, [r7, #12]
 8012ad2:	e000      	b.n	8012ad6 <HAL_TIM_ReadCapturedValue+0x5e>
 8012ad4:	46c0      	nop			@ (mov r8, r8)
 8012ad6:	68fb      	ldr	r3, [r7, #12]
 8012ad8:	0018      	movs	r0, r3
 8012ada:	46bd      	mov	sp, r7
 8012adc:	b004      	add	sp, #16
 8012ade:	bd80      	pop	{r7, pc}

08012ae0 <HAL_TIM_OC_DelayElapsedCallback>:
 8012ae0:	b580      	push	{r7, lr}
 8012ae2:	b082      	sub	sp, #8
 8012ae4:	af00      	add	r7, sp, #0
 8012ae6:	6078      	str	r0, [r7, #4]
 8012ae8:	46c0      	nop			@ (mov r8, r8)
 8012aea:	46bd      	mov	sp, r7
 8012aec:	b002      	add	sp, #8
 8012aee:	bd80      	pop	{r7, pc}

08012af0 <HAL_TIM_PWM_PulseFinishedCallback>:
 8012af0:	b580      	push	{r7, lr}
 8012af2:	b082      	sub	sp, #8
 8012af4:	af00      	add	r7, sp, #0
 8012af6:	6078      	str	r0, [r7, #4]
 8012af8:	46c0      	nop			@ (mov r8, r8)
 8012afa:	46bd      	mov	sp, r7
 8012afc:	b002      	add	sp, #8
 8012afe:	bd80      	pop	{r7, pc}

08012b00 <HAL_TIM_TriggerCallback>:
 8012b00:	b580      	push	{r7, lr}
 8012b02:	b082      	sub	sp, #8
 8012b04:	af00      	add	r7, sp, #0
 8012b06:	6078      	str	r0, [r7, #4]
 8012b08:	46c0      	nop			@ (mov r8, r8)
 8012b0a:	46bd      	mov	sp, r7
 8012b0c:	b002      	add	sp, #8
 8012b0e:	bd80      	pop	{r7, pc}

08012b10 <TIM_Base_SetConfig>:
 8012b10:	b580      	push	{r7, lr}
 8012b12:	b084      	sub	sp, #16
 8012b14:	af00      	add	r7, sp, #0
 8012b16:	6078      	str	r0, [r7, #4]
 8012b18:	6039      	str	r1, [r7, #0]
 8012b1a:	687b      	ldr	r3, [r7, #4]
 8012b1c:	681b      	ldr	r3, [r3, #0]
 8012b1e:	60fb      	str	r3, [r7, #12]
 8012b20:	687b      	ldr	r3, [r7, #4]
 8012b22:	4a34      	ldr	r2, [pc, #208]	@ (8012bf4 <TIM_Base_SetConfig+0xe4>)
 8012b24:	4293      	cmp	r3, r2
 8012b26:	d008      	beq.n	8012b3a <TIM_Base_SetConfig+0x2a>
 8012b28:	687a      	ldr	r2, [r7, #4]
 8012b2a:	2380      	movs	r3, #128	@ 0x80
 8012b2c:	05db      	lsls	r3, r3, #23
 8012b2e:	429a      	cmp	r2, r3
 8012b30:	d003      	beq.n	8012b3a <TIM_Base_SetConfig+0x2a>
 8012b32:	687b      	ldr	r3, [r7, #4]
 8012b34:	4a30      	ldr	r2, [pc, #192]	@ (8012bf8 <TIM_Base_SetConfig+0xe8>)
 8012b36:	4293      	cmp	r3, r2
 8012b38:	d108      	bne.n	8012b4c <TIM_Base_SetConfig+0x3c>
 8012b3a:	68fb      	ldr	r3, [r7, #12]
 8012b3c:	2270      	movs	r2, #112	@ 0x70
 8012b3e:	4393      	bics	r3, r2
 8012b40:	60fb      	str	r3, [r7, #12]
 8012b42:	683b      	ldr	r3, [r7, #0]
 8012b44:	685b      	ldr	r3, [r3, #4]
 8012b46:	68fa      	ldr	r2, [r7, #12]
 8012b48:	4313      	orrs	r3, r2
 8012b4a:	60fb      	str	r3, [r7, #12]
 8012b4c:	687b      	ldr	r3, [r7, #4]
 8012b4e:	4a29      	ldr	r2, [pc, #164]	@ (8012bf4 <TIM_Base_SetConfig+0xe4>)
 8012b50:	4293      	cmp	r3, r2
 8012b52:	d018      	beq.n	8012b86 <TIM_Base_SetConfig+0x76>
 8012b54:	687a      	ldr	r2, [r7, #4]
 8012b56:	2380      	movs	r3, #128	@ 0x80
 8012b58:	05db      	lsls	r3, r3, #23
 8012b5a:	429a      	cmp	r2, r3
 8012b5c:	d013      	beq.n	8012b86 <TIM_Base_SetConfig+0x76>
 8012b5e:	687b      	ldr	r3, [r7, #4]
 8012b60:	4a25      	ldr	r2, [pc, #148]	@ (8012bf8 <TIM_Base_SetConfig+0xe8>)
 8012b62:	4293      	cmp	r3, r2
 8012b64:	d00f      	beq.n	8012b86 <TIM_Base_SetConfig+0x76>
 8012b66:	687b      	ldr	r3, [r7, #4]
 8012b68:	4a24      	ldr	r2, [pc, #144]	@ (8012bfc <TIM_Base_SetConfig+0xec>)
 8012b6a:	4293      	cmp	r3, r2
 8012b6c:	d00b      	beq.n	8012b86 <TIM_Base_SetConfig+0x76>
 8012b6e:	687b      	ldr	r3, [r7, #4]
 8012b70:	4a23      	ldr	r2, [pc, #140]	@ (8012c00 <TIM_Base_SetConfig+0xf0>)
 8012b72:	4293      	cmp	r3, r2
 8012b74:	d007      	beq.n	8012b86 <TIM_Base_SetConfig+0x76>
 8012b76:	687b      	ldr	r3, [r7, #4]
 8012b78:	4a22      	ldr	r2, [pc, #136]	@ (8012c04 <TIM_Base_SetConfig+0xf4>)
 8012b7a:	4293      	cmp	r3, r2
 8012b7c:	d003      	beq.n	8012b86 <TIM_Base_SetConfig+0x76>
 8012b7e:	687b      	ldr	r3, [r7, #4]
 8012b80:	4a21      	ldr	r2, [pc, #132]	@ (8012c08 <TIM_Base_SetConfig+0xf8>)
 8012b82:	4293      	cmp	r3, r2
 8012b84:	d108      	bne.n	8012b98 <TIM_Base_SetConfig+0x88>
 8012b86:	68fb      	ldr	r3, [r7, #12]
 8012b88:	4a20      	ldr	r2, [pc, #128]	@ (8012c0c <TIM_Base_SetConfig+0xfc>)
 8012b8a:	4013      	ands	r3, r2
 8012b8c:	60fb      	str	r3, [r7, #12]
 8012b8e:	683b      	ldr	r3, [r7, #0]
 8012b90:	68db      	ldr	r3, [r3, #12]
 8012b92:	68fa      	ldr	r2, [r7, #12]
 8012b94:	4313      	orrs	r3, r2
 8012b96:	60fb      	str	r3, [r7, #12]
 8012b98:	68fb      	ldr	r3, [r7, #12]
 8012b9a:	2280      	movs	r2, #128	@ 0x80
 8012b9c:	4393      	bics	r3, r2
 8012b9e:	001a      	movs	r2, r3
 8012ba0:	683b      	ldr	r3, [r7, #0]
 8012ba2:	695b      	ldr	r3, [r3, #20]
 8012ba4:	4313      	orrs	r3, r2
 8012ba6:	60fb      	str	r3, [r7, #12]
 8012ba8:	687b      	ldr	r3, [r7, #4]
 8012baa:	68fa      	ldr	r2, [r7, #12]
 8012bac:	601a      	str	r2, [r3, #0]
 8012bae:	683b      	ldr	r3, [r7, #0]
 8012bb0:	689a      	ldr	r2, [r3, #8]
 8012bb2:	687b      	ldr	r3, [r7, #4]
 8012bb4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8012bb6:	683b      	ldr	r3, [r7, #0]
 8012bb8:	681a      	ldr	r2, [r3, #0]
 8012bba:	687b      	ldr	r3, [r7, #4]
 8012bbc:	629a      	str	r2, [r3, #40]	@ 0x28
 8012bbe:	687b      	ldr	r3, [r7, #4]
 8012bc0:	4a0c      	ldr	r2, [pc, #48]	@ (8012bf4 <TIM_Base_SetConfig+0xe4>)
 8012bc2:	4293      	cmp	r3, r2
 8012bc4:	d00b      	beq.n	8012bde <TIM_Base_SetConfig+0xce>
 8012bc6:	687b      	ldr	r3, [r7, #4]
 8012bc8:	4a0d      	ldr	r2, [pc, #52]	@ (8012c00 <TIM_Base_SetConfig+0xf0>)
 8012bca:	4293      	cmp	r3, r2
 8012bcc:	d007      	beq.n	8012bde <TIM_Base_SetConfig+0xce>
 8012bce:	687b      	ldr	r3, [r7, #4]
 8012bd0:	4a0c      	ldr	r2, [pc, #48]	@ (8012c04 <TIM_Base_SetConfig+0xf4>)
 8012bd2:	4293      	cmp	r3, r2
 8012bd4:	d003      	beq.n	8012bde <TIM_Base_SetConfig+0xce>
 8012bd6:	687b      	ldr	r3, [r7, #4]
 8012bd8:	4a0b      	ldr	r2, [pc, #44]	@ (8012c08 <TIM_Base_SetConfig+0xf8>)
 8012bda:	4293      	cmp	r3, r2
 8012bdc:	d103      	bne.n	8012be6 <TIM_Base_SetConfig+0xd6>
 8012bde:	683b      	ldr	r3, [r7, #0]
 8012be0:	691a      	ldr	r2, [r3, #16]
 8012be2:	687b      	ldr	r3, [r7, #4]
 8012be4:	631a      	str	r2, [r3, #48]	@ 0x30
 8012be6:	687b      	ldr	r3, [r7, #4]
 8012be8:	2201      	movs	r2, #1
 8012bea:	615a      	str	r2, [r3, #20]
 8012bec:	46c0      	nop			@ (mov r8, r8)
 8012bee:	46bd      	mov	sp, r7
 8012bf0:	b004      	add	sp, #16
 8012bf2:	bd80      	pop	{r7, pc}
 8012bf4:	40012c00 	.word	0x40012c00
 8012bf8:	40000400 	.word	0x40000400
 8012bfc:	40002000 	.word	0x40002000
 8012c00:	40014000 	.word	0x40014000
 8012c04:	40014400 	.word	0x40014400
 8012c08:	40014800 	.word	0x40014800
 8012c0c:	fffffcff 	.word	0xfffffcff

08012c10 <TIM_TI1_SetConfig>:
 8012c10:	b580      	push	{r7, lr}
 8012c12:	b086      	sub	sp, #24
 8012c14:	af00      	add	r7, sp, #0
 8012c16:	60f8      	str	r0, [r7, #12]
 8012c18:	60b9      	str	r1, [r7, #8]
 8012c1a:	607a      	str	r2, [r7, #4]
 8012c1c:	603b      	str	r3, [r7, #0]
 8012c1e:	68fb      	ldr	r3, [r7, #12]
 8012c20:	6a1b      	ldr	r3, [r3, #32]
 8012c22:	2201      	movs	r2, #1
 8012c24:	4393      	bics	r3, r2
 8012c26:	001a      	movs	r2, r3
 8012c28:	68fb      	ldr	r3, [r7, #12]
 8012c2a:	621a      	str	r2, [r3, #32]
 8012c2c:	68fb      	ldr	r3, [r7, #12]
 8012c2e:	699b      	ldr	r3, [r3, #24]
 8012c30:	617b      	str	r3, [r7, #20]
 8012c32:	68fb      	ldr	r3, [r7, #12]
 8012c34:	6a1b      	ldr	r3, [r3, #32]
 8012c36:	613b      	str	r3, [r7, #16]
 8012c38:	68fb      	ldr	r3, [r7, #12]
 8012c3a:	4a20      	ldr	r2, [pc, #128]	@ (8012cbc <TIM_TI1_SetConfig+0xac>)
 8012c3c:	4293      	cmp	r3, r2
 8012c3e:	d00c      	beq.n	8012c5a <TIM_TI1_SetConfig+0x4a>
 8012c40:	68fa      	ldr	r2, [r7, #12]
 8012c42:	2380      	movs	r3, #128	@ 0x80
 8012c44:	05db      	lsls	r3, r3, #23
 8012c46:	429a      	cmp	r2, r3
 8012c48:	d007      	beq.n	8012c5a <TIM_TI1_SetConfig+0x4a>
 8012c4a:	68fb      	ldr	r3, [r7, #12]
 8012c4c:	4a1c      	ldr	r2, [pc, #112]	@ (8012cc0 <TIM_TI1_SetConfig+0xb0>)
 8012c4e:	4293      	cmp	r3, r2
 8012c50:	d003      	beq.n	8012c5a <TIM_TI1_SetConfig+0x4a>
 8012c52:	68fb      	ldr	r3, [r7, #12]
 8012c54:	4a1b      	ldr	r2, [pc, #108]	@ (8012cc4 <TIM_TI1_SetConfig+0xb4>)
 8012c56:	4293      	cmp	r3, r2
 8012c58:	d101      	bne.n	8012c5e <TIM_TI1_SetConfig+0x4e>
 8012c5a:	2301      	movs	r3, #1
 8012c5c:	e000      	b.n	8012c60 <TIM_TI1_SetConfig+0x50>
 8012c5e:	2300      	movs	r3, #0
 8012c60:	2b00      	cmp	r3, #0
 8012c62:	d008      	beq.n	8012c76 <TIM_TI1_SetConfig+0x66>
 8012c64:	697b      	ldr	r3, [r7, #20]
 8012c66:	2203      	movs	r2, #3
 8012c68:	4393      	bics	r3, r2
 8012c6a:	617b      	str	r3, [r7, #20]
 8012c6c:	697a      	ldr	r2, [r7, #20]
 8012c6e:	687b      	ldr	r3, [r7, #4]
 8012c70:	4313      	orrs	r3, r2
 8012c72:	617b      	str	r3, [r7, #20]
 8012c74:	e003      	b.n	8012c7e <TIM_TI1_SetConfig+0x6e>
 8012c76:	697b      	ldr	r3, [r7, #20]
 8012c78:	2201      	movs	r2, #1
 8012c7a:	4313      	orrs	r3, r2
 8012c7c:	617b      	str	r3, [r7, #20]
 8012c7e:	697b      	ldr	r3, [r7, #20]
 8012c80:	22f0      	movs	r2, #240	@ 0xf0
 8012c82:	4393      	bics	r3, r2
 8012c84:	617b      	str	r3, [r7, #20]
 8012c86:	683b      	ldr	r3, [r7, #0]
 8012c88:	011b      	lsls	r3, r3, #4
 8012c8a:	22ff      	movs	r2, #255	@ 0xff
 8012c8c:	4013      	ands	r3, r2
 8012c8e:	697a      	ldr	r2, [r7, #20]
 8012c90:	4313      	orrs	r3, r2
 8012c92:	617b      	str	r3, [r7, #20]
 8012c94:	693b      	ldr	r3, [r7, #16]
 8012c96:	220a      	movs	r2, #10
 8012c98:	4393      	bics	r3, r2
 8012c9a:	613b      	str	r3, [r7, #16]
 8012c9c:	68bb      	ldr	r3, [r7, #8]
 8012c9e:	220a      	movs	r2, #10
 8012ca0:	4013      	ands	r3, r2
 8012ca2:	693a      	ldr	r2, [r7, #16]
 8012ca4:	4313      	orrs	r3, r2
 8012ca6:	613b      	str	r3, [r7, #16]
 8012ca8:	68fb      	ldr	r3, [r7, #12]
 8012caa:	697a      	ldr	r2, [r7, #20]
 8012cac:	619a      	str	r2, [r3, #24]
 8012cae:	68fb      	ldr	r3, [r7, #12]
 8012cb0:	693a      	ldr	r2, [r7, #16]
 8012cb2:	621a      	str	r2, [r3, #32]
 8012cb4:	46c0      	nop			@ (mov r8, r8)
 8012cb6:	46bd      	mov	sp, r7
 8012cb8:	b006      	add	sp, #24
 8012cba:	bd80      	pop	{r7, pc}
 8012cbc:	40012c00 	.word	0x40012c00
 8012cc0:	40000400 	.word	0x40000400
 8012cc4:	40014000 	.word	0x40014000

08012cc8 <TIM_TI1_ConfigInputStage>:
 8012cc8:	b580      	push	{r7, lr}
 8012cca:	b086      	sub	sp, #24
 8012ccc:	af00      	add	r7, sp, #0
 8012cce:	60f8      	str	r0, [r7, #12]
 8012cd0:	60b9      	str	r1, [r7, #8]
 8012cd2:	607a      	str	r2, [r7, #4]
 8012cd4:	68fb      	ldr	r3, [r7, #12]
 8012cd6:	6a1b      	ldr	r3, [r3, #32]
 8012cd8:	617b      	str	r3, [r7, #20]
 8012cda:	68fb      	ldr	r3, [r7, #12]
 8012cdc:	6a1b      	ldr	r3, [r3, #32]
 8012cde:	2201      	movs	r2, #1
 8012ce0:	4393      	bics	r3, r2
 8012ce2:	001a      	movs	r2, r3
 8012ce4:	68fb      	ldr	r3, [r7, #12]
 8012ce6:	621a      	str	r2, [r3, #32]
 8012ce8:	68fb      	ldr	r3, [r7, #12]
 8012cea:	699b      	ldr	r3, [r3, #24]
 8012cec:	613b      	str	r3, [r7, #16]
 8012cee:	693b      	ldr	r3, [r7, #16]
 8012cf0:	22f0      	movs	r2, #240	@ 0xf0
 8012cf2:	4393      	bics	r3, r2
 8012cf4:	613b      	str	r3, [r7, #16]
 8012cf6:	687b      	ldr	r3, [r7, #4]
 8012cf8:	011b      	lsls	r3, r3, #4
 8012cfa:	693a      	ldr	r2, [r7, #16]
 8012cfc:	4313      	orrs	r3, r2
 8012cfe:	613b      	str	r3, [r7, #16]
 8012d00:	697b      	ldr	r3, [r7, #20]
 8012d02:	220a      	movs	r2, #10
 8012d04:	4393      	bics	r3, r2
 8012d06:	617b      	str	r3, [r7, #20]
 8012d08:	697a      	ldr	r2, [r7, #20]
 8012d0a:	68bb      	ldr	r3, [r7, #8]
 8012d0c:	4313      	orrs	r3, r2
 8012d0e:	617b      	str	r3, [r7, #20]
 8012d10:	68fb      	ldr	r3, [r7, #12]
 8012d12:	693a      	ldr	r2, [r7, #16]
 8012d14:	619a      	str	r2, [r3, #24]
 8012d16:	68fb      	ldr	r3, [r7, #12]
 8012d18:	697a      	ldr	r2, [r7, #20]
 8012d1a:	621a      	str	r2, [r3, #32]
 8012d1c:	46c0      	nop			@ (mov r8, r8)
 8012d1e:	46bd      	mov	sp, r7
 8012d20:	b006      	add	sp, #24
 8012d22:	bd80      	pop	{r7, pc}

08012d24 <TIM_TI2_SetConfig>:
 8012d24:	b580      	push	{r7, lr}
 8012d26:	b086      	sub	sp, #24
 8012d28:	af00      	add	r7, sp, #0
 8012d2a:	60f8      	str	r0, [r7, #12]
 8012d2c:	60b9      	str	r1, [r7, #8]
 8012d2e:	607a      	str	r2, [r7, #4]
 8012d30:	603b      	str	r3, [r7, #0]
 8012d32:	68fb      	ldr	r3, [r7, #12]
 8012d34:	6a1b      	ldr	r3, [r3, #32]
 8012d36:	2210      	movs	r2, #16
 8012d38:	4393      	bics	r3, r2
 8012d3a:	001a      	movs	r2, r3
 8012d3c:	68fb      	ldr	r3, [r7, #12]
 8012d3e:	621a      	str	r2, [r3, #32]
 8012d40:	68fb      	ldr	r3, [r7, #12]
 8012d42:	699b      	ldr	r3, [r3, #24]
 8012d44:	617b      	str	r3, [r7, #20]
 8012d46:	68fb      	ldr	r3, [r7, #12]
 8012d48:	6a1b      	ldr	r3, [r3, #32]
 8012d4a:	613b      	str	r3, [r7, #16]
 8012d4c:	697b      	ldr	r3, [r7, #20]
 8012d4e:	4a14      	ldr	r2, [pc, #80]	@ (8012da0 <TIM_TI2_SetConfig+0x7c>)
 8012d50:	4013      	ands	r3, r2
 8012d52:	617b      	str	r3, [r7, #20]
 8012d54:	687b      	ldr	r3, [r7, #4]
 8012d56:	021b      	lsls	r3, r3, #8
 8012d58:	697a      	ldr	r2, [r7, #20]
 8012d5a:	4313      	orrs	r3, r2
 8012d5c:	617b      	str	r3, [r7, #20]
 8012d5e:	697b      	ldr	r3, [r7, #20]
 8012d60:	4a10      	ldr	r2, [pc, #64]	@ (8012da4 <TIM_TI2_SetConfig+0x80>)
 8012d62:	4013      	ands	r3, r2
 8012d64:	617b      	str	r3, [r7, #20]
 8012d66:	683b      	ldr	r3, [r7, #0]
 8012d68:	031b      	lsls	r3, r3, #12
 8012d6a:	041b      	lsls	r3, r3, #16
 8012d6c:	0c1b      	lsrs	r3, r3, #16
 8012d6e:	697a      	ldr	r2, [r7, #20]
 8012d70:	4313      	orrs	r3, r2
 8012d72:	617b      	str	r3, [r7, #20]
 8012d74:	693b      	ldr	r3, [r7, #16]
 8012d76:	22a0      	movs	r2, #160	@ 0xa0
 8012d78:	4393      	bics	r3, r2
 8012d7a:	613b      	str	r3, [r7, #16]
 8012d7c:	68bb      	ldr	r3, [r7, #8]
 8012d7e:	011b      	lsls	r3, r3, #4
 8012d80:	22a0      	movs	r2, #160	@ 0xa0
 8012d82:	4013      	ands	r3, r2
 8012d84:	693a      	ldr	r2, [r7, #16]
 8012d86:	4313      	orrs	r3, r2
 8012d88:	613b      	str	r3, [r7, #16]
 8012d8a:	68fb      	ldr	r3, [r7, #12]
 8012d8c:	697a      	ldr	r2, [r7, #20]
 8012d8e:	619a      	str	r2, [r3, #24]
 8012d90:	68fb      	ldr	r3, [r7, #12]
 8012d92:	693a      	ldr	r2, [r7, #16]
 8012d94:	621a      	str	r2, [r3, #32]
 8012d96:	46c0      	nop			@ (mov r8, r8)
 8012d98:	46bd      	mov	sp, r7
 8012d9a:	b006      	add	sp, #24
 8012d9c:	bd80      	pop	{r7, pc}
 8012d9e:	46c0      	nop			@ (mov r8, r8)
 8012da0:	fffffcff 	.word	0xfffffcff
 8012da4:	ffff0fff 	.word	0xffff0fff

08012da8 <TIM_TI2_ConfigInputStage>:
 8012da8:	b580      	push	{r7, lr}
 8012daa:	b086      	sub	sp, #24
 8012dac:	af00      	add	r7, sp, #0
 8012dae:	60f8      	str	r0, [r7, #12]
 8012db0:	60b9      	str	r1, [r7, #8]
 8012db2:	607a      	str	r2, [r7, #4]
 8012db4:	68fb      	ldr	r3, [r7, #12]
 8012db6:	6a1b      	ldr	r3, [r3, #32]
 8012db8:	2210      	movs	r2, #16
 8012dba:	4393      	bics	r3, r2
 8012dbc:	001a      	movs	r2, r3
 8012dbe:	68fb      	ldr	r3, [r7, #12]
 8012dc0:	621a      	str	r2, [r3, #32]
 8012dc2:	68fb      	ldr	r3, [r7, #12]
 8012dc4:	699b      	ldr	r3, [r3, #24]
 8012dc6:	617b      	str	r3, [r7, #20]
 8012dc8:	68fb      	ldr	r3, [r7, #12]
 8012dca:	6a1b      	ldr	r3, [r3, #32]
 8012dcc:	613b      	str	r3, [r7, #16]
 8012dce:	697b      	ldr	r3, [r7, #20]
 8012dd0:	4a0d      	ldr	r2, [pc, #52]	@ (8012e08 <TIM_TI2_ConfigInputStage+0x60>)
 8012dd2:	4013      	ands	r3, r2
 8012dd4:	617b      	str	r3, [r7, #20]
 8012dd6:	687b      	ldr	r3, [r7, #4]
 8012dd8:	031b      	lsls	r3, r3, #12
 8012dda:	697a      	ldr	r2, [r7, #20]
 8012ddc:	4313      	orrs	r3, r2
 8012dde:	617b      	str	r3, [r7, #20]
 8012de0:	693b      	ldr	r3, [r7, #16]
 8012de2:	22a0      	movs	r2, #160	@ 0xa0
 8012de4:	4393      	bics	r3, r2
 8012de6:	613b      	str	r3, [r7, #16]
 8012de8:	68bb      	ldr	r3, [r7, #8]
 8012dea:	011b      	lsls	r3, r3, #4
 8012dec:	693a      	ldr	r2, [r7, #16]
 8012dee:	4313      	orrs	r3, r2
 8012df0:	613b      	str	r3, [r7, #16]
 8012df2:	68fb      	ldr	r3, [r7, #12]
 8012df4:	697a      	ldr	r2, [r7, #20]
 8012df6:	619a      	str	r2, [r3, #24]
 8012df8:	68fb      	ldr	r3, [r7, #12]
 8012dfa:	693a      	ldr	r2, [r7, #16]
 8012dfc:	621a      	str	r2, [r3, #32]
 8012dfe:	46c0      	nop			@ (mov r8, r8)
 8012e00:	46bd      	mov	sp, r7
 8012e02:	b006      	add	sp, #24
 8012e04:	bd80      	pop	{r7, pc}
 8012e06:	46c0      	nop			@ (mov r8, r8)
 8012e08:	ffff0fff 	.word	0xffff0fff

08012e0c <TIM_TI3_SetConfig>:
 8012e0c:	b580      	push	{r7, lr}
 8012e0e:	b086      	sub	sp, #24
 8012e10:	af00      	add	r7, sp, #0
 8012e12:	60f8      	str	r0, [r7, #12]
 8012e14:	60b9      	str	r1, [r7, #8]
 8012e16:	607a      	str	r2, [r7, #4]
 8012e18:	603b      	str	r3, [r7, #0]
 8012e1a:	68fb      	ldr	r3, [r7, #12]
 8012e1c:	6a1b      	ldr	r3, [r3, #32]
 8012e1e:	4a19      	ldr	r2, [pc, #100]	@ (8012e84 <TIM_TI3_SetConfig+0x78>)
 8012e20:	401a      	ands	r2, r3
 8012e22:	68fb      	ldr	r3, [r7, #12]
 8012e24:	621a      	str	r2, [r3, #32]
 8012e26:	68fb      	ldr	r3, [r7, #12]
 8012e28:	69db      	ldr	r3, [r3, #28]
 8012e2a:	617b      	str	r3, [r7, #20]
 8012e2c:	68fb      	ldr	r3, [r7, #12]
 8012e2e:	6a1b      	ldr	r3, [r3, #32]
 8012e30:	613b      	str	r3, [r7, #16]
 8012e32:	697b      	ldr	r3, [r7, #20]
 8012e34:	2203      	movs	r2, #3
 8012e36:	4393      	bics	r3, r2
 8012e38:	617b      	str	r3, [r7, #20]
 8012e3a:	697a      	ldr	r2, [r7, #20]
 8012e3c:	687b      	ldr	r3, [r7, #4]
 8012e3e:	4313      	orrs	r3, r2
 8012e40:	617b      	str	r3, [r7, #20]
 8012e42:	697b      	ldr	r3, [r7, #20]
 8012e44:	22f0      	movs	r2, #240	@ 0xf0
 8012e46:	4393      	bics	r3, r2
 8012e48:	617b      	str	r3, [r7, #20]
 8012e4a:	683b      	ldr	r3, [r7, #0]
 8012e4c:	011b      	lsls	r3, r3, #4
 8012e4e:	22ff      	movs	r2, #255	@ 0xff
 8012e50:	4013      	ands	r3, r2
 8012e52:	697a      	ldr	r2, [r7, #20]
 8012e54:	4313      	orrs	r3, r2
 8012e56:	617b      	str	r3, [r7, #20]
 8012e58:	693b      	ldr	r3, [r7, #16]
 8012e5a:	4a0b      	ldr	r2, [pc, #44]	@ (8012e88 <TIM_TI3_SetConfig+0x7c>)
 8012e5c:	4013      	ands	r3, r2
 8012e5e:	613b      	str	r3, [r7, #16]
 8012e60:	68bb      	ldr	r3, [r7, #8]
 8012e62:	021a      	lsls	r2, r3, #8
 8012e64:	23a0      	movs	r3, #160	@ 0xa0
 8012e66:	011b      	lsls	r3, r3, #4
 8012e68:	4013      	ands	r3, r2
 8012e6a:	693a      	ldr	r2, [r7, #16]
 8012e6c:	4313      	orrs	r3, r2
 8012e6e:	613b      	str	r3, [r7, #16]
 8012e70:	68fb      	ldr	r3, [r7, #12]
 8012e72:	697a      	ldr	r2, [r7, #20]
 8012e74:	61da      	str	r2, [r3, #28]
 8012e76:	68fb      	ldr	r3, [r7, #12]
 8012e78:	693a      	ldr	r2, [r7, #16]
 8012e7a:	621a      	str	r2, [r3, #32]
 8012e7c:	46c0      	nop			@ (mov r8, r8)
 8012e7e:	46bd      	mov	sp, r7
 8012e80:	b006      	add	sp, #24
 8012e82:	bd80      	pop	{r7, pc}
 8012e84:	fffffeff 	.word	0xfffffeff
 8012e88:	fffff5ff 	.word	0xfffff5ff

08012e8c <TIM_TI4_SetConfig>:
 8012e8c:	b580      	push	{r7, lr}
 8012e8e:	b086      	sub	sp, #24
 8012e90:	af00      	add	r7, sp, #0
 8012e92:	60f8      	str	r0, [r7, #12]
 8012e94:	60b9      	str	r1, [r7, #8]
 8012e96:	607a      	str	r2, [r7, #4]
 8012e98:	603b      	str	r3, [r7, #0]
 8012e9a:	68fb      	ldr	r3, [r7, #12]
 8012e9c:	6a1b      	ldr	r3, [r3, #32]
 8012e9e:	4a1a      	ldr	r2, [pc, #104]	@ (8012f08 <TIM_TI4_SetConfig+0x7c>)
 8012ea0:	401a      	ands	r2, r3
 8012ea2:	68fb      	ldr	r3, [r7, #12]
 8012ea4:	621a      	str	r2, [r3, #32]
 8012ea6:	68fb      	ldr	r3, [r7, #12]
 8012ea8:	69db      	ldr	r3, [r3, #28]
 8012eaa:	617b      	str	r3, [r7, #20]
 8012eac:	68fb      	ldr	r3, [r7, #12]
 8012eae:	6a1b      	ldr	r3, [r3, #32]
 8012eb0:	613b      	str	r3, [r7, #16]
 8012eb2:	697b      	ldr	r3, [r7, #20]
 8012eb4:	4a15      	ldr	r2, [pc, #84]	@ (8012f0c <TIM_TI4_SetConfig+0x80>)
 8012eb6:	4013      	ands	r3, r2
 8012eb8:	617b      	str	r3, [r7, #20]
 8012eba:	687b      	ldr	r3, [r7, #4]
 8012ebc:	021b      	lsls	r3, r3, #8
 8012ebe:	697a      	ldr	r2, [r7, #20]
 8012ec0:	4313      	orrs	r3, r2
 8012ec2:	617b      	str	r3, [r7, #20]
 8012ec4:	697b      	ldr	r3, [r7, #20]
 8012ec6:	4a12      	ldr	r2, [pc, #72]	@ (8012f10 <TIM_TI4_SetConfig+0x84>)
 8012ec8:	4013      	ands	r3, r2
 8012eca:	617b      	str	r3, [r7, #20]
 8012ecc:	683b      	ldr	r3, [r7, #0]
 8012ece:	031b      	lsls	r3, r3, #12
 8012ed0:	041b      	lsls	r3, r3, #16
 8012ed2:	0c1b      	lsrs	r3, r3, #16
 8012ed4:	697a      	ldr	r2, [r7, #20]
 8012ed6:	4313      	orrs	r3, r2
 8012ed8:	617b      	str	r3, [r7, #20]
 8012eda:	693b      	ldr	r3, [r7, #16]
 8012edc:	4a0d      	ldr	r2, [pc, #52]	@ (8012f14 <TIM_TI4_SetConfig+0x88>)
 8012ede:	4013      	ands	r3, r2
 8012ee0:	613b      	str	r3, [r7, #16]
 8012ee2:	68bb      	ldr	r3, [r7, #8]
 8012ee4:	031a      	lsls	r2, r3, #12
 8012ee6:	23a0      	movs	r3, #160	@ 0xa0
 8012ee8:	021b      	lsls	r3, r3, #8
 8012eea:	4013      	ands	r3, r2
 8012eec:	693a      	ldr	r2, [r7, #16]
 8012eee:	4313      	orrs	r3, r2
 8012ef0:	613b      	str	r3, [r7, #16]
 8012ef2:	68fb      	ldr	r3, [r7, #12]
 8012ef4:	697a      	ldr	r2, [r7, #20]
 8012ef6:	61da      	str	r2, [r3, #28]
 8012ef8:	68fb      	ldr	r3, [r7, #12]
 8012efa:	693a      	ldr	r2, [r7, #16]
 8012efc:	621a      	str	r2, [r3, #32]
 8012efe:	46c0      	nop			@ (mov r8, r8)
 8012f00:	46bd      	mov	sp, r7
 8012f02:	b006      	add	sp, #24
 8012f04:	bd80      	pop	{r7, pc}
 8012f06:	46c0      	nop			@ (mov r8, r8)
 8012f08:	ffffefff 	.word	0xffffefff
 8012f0c:	fffffcff 	.word	0xfffffcff
 8012f10:	ffff0fff 	.word	0xffff0fff
 8012f14:	ffff5fff 	.word	0xffff5fff

08012f18 <TIM_ITRx_SetConfig>:
 8012f18:	b580      	push	{r7, lr}
 8012f1a:	b084      	sub	sp, #16
 8012f1c:	af00      	add	r7, sp, #0
 8012f1e:	6078      	str	r0, [r7, #4]
 8012f20:	6039      	str	r1, [r7, #0]
 8012f22:	687b      	ldr	r3, [r7, #4]
 8012f24:	689b      	ldr	r3, [r3, #8]
 8012f26:	60fb      	str	r3, [r7, #12]
 8012f28:	68fb      	ldr	r3, [r7, #12]
 8012f2a:	4a08      	ldr	r2, [pc, #32]	@ (8012f4c <TIM_ITRx_SetConfig+0x34>)
 8012f2c:	4013      	ands	r3, r2
 8012f2e:	60fb      	str	r3, [r7, #12]
 8012f30:	683a      	ldr	r2, [r7, #0]
 8012f32:	68fb      	ldr	r3, [r7, #12]
 8012f34:	4313      	orrs	r3, r2
 8012f36:	2207      	movs	r2, #7
 8012f38:	4313      	orrs	r3, r2
 8012f3a:	60fb      	str	r3, [r7, #12]
 8012f3c:	687b      	ldr	r3, [r7, #4]
 8012f3e:	68fa      	ldr	r2, [r7, #12]
 8012f40:	609a      	str	r2, [r3, #8]
 8012f42:	46c0      	nop			@ (mov r8, r8)
 8012f44:	46bd      	mov	sp, r7
 8012f46:	b004      	add	sp, #16
 8012f48:	bd80      	pop	{r7, pc}
 8012f4a:	46c0      	nop			@ (mov r8, r8)
 8012f4c:	ffcfff8f 	.word	0xffcfff8f

08012f50 <TIM_ETR_SetConfig>:
 8012f50:	b580      	push	{r7, lr}
 8012f52:	b086      	sub	sp, #24
 8012f54:	af00      	add	r7, sp, #0
 8012f56:	60f8      	str	r0, [r7, #12]
 8012f58:	60b9      	str	r1, [r7, #8]
 8012f5a:	607a      	str	r2, [r7, #4]
 8012f5c:	603b      	str	r3, [r7, #0]
 8012f5e:	68fb      	ldr	r3, [r7, #12]
 8012f60:	689b      	ldr	r3, [r3, #8]
 8012f62:	617b      	str	r3, [r7, #20]
 8012f64:	697b      	ldr	r3, [r7, #20]
 8012f66:	4a09      	ldr	r2, [pc, #36]	@ (8012f8c <TIM_ETR_SetConfig+0x3c>)
 8012f68:	4013      	ands	r3, r2
 8012f6a:	617b      	str	r3, [r7, #20]
 8012f6c:	683b      	ldr	r3, [r7, #0]
 8012f6e:	021a      	lsls	r2, r3, #8
 8012f70:	687b      	ldr	r3, [r7, #4]
 8012f72:	431a      	orrs	r2, r3
 8012f74:	68bb      	ldr	r3, [r7, #8]
 8012f76:	4313      	orrs	r3, r2
 8012f78:	697a      	ldr	r2, [r7, #20]
 8012f7a:	4313      	orrs	r3, r2
 8012f7c:	617b      	str	r3, [r7, #20]
 8012f7e:	68fb      	ldr	r3, [r7, #12]
 8012f80:	697a      	ldr	r2, [r7, #20]
 8012f82:	609a      	str	r2, [r3, #8]
 8012f84:	46c0      	nop			@ (mov r8, r8)
 8012f86:	46bd      	mov	sp, r7
 8012f88:	b006      	add	sp, #24
 8012f8a:	bd80      	pop	{r7, pc}
 8012f8c:	ffff00ff 	.word	0xffff00ff

08012f90 <TIM_CCxChannelCmd>:
 8012f90:	b580      	push	{r7, lr}
 8012f92:	b086      	sub	sp, #24
 8012f94:	af00      	add	r7, sp, #0
 8012f96:	60f8      	str	r0, [r7, #12]
 8012f98:	60b9      	str	r1, [r7, #8]
 8012f9a:	607a      	str	r2, [r7, #4]
 8012f9c:	68bb      	ldr	r3, [r7, #8]
 8012f9e:	221f      	movs	r2, #31
 8012fa0:	4013      	ands	r3, r2
 8012fa2:	2201      	movs	r2, #1
 8012fa4:	409a      	lsls	r2, r3
 8012fa6:	0013      	movs	r3, r2
 8012fa8:	617b      	str	r3, [r7, #20]
 8012faa:	68fb      	ldr	r3, [r7, #12]
 8012fac:	6a1b      	ldr	r3, [r3, #32]
 8012fae:	697a      	ldr	r2, [r7, #20]
 8012fb0:	43d2      	mvns	r2, r2
 8012fb2:	401a      	ands	r2, r3
 8012fb4:	68fb      	ldr	r3, [r7, #12]
 8012fb6:	621a      	str	r2, [r3, #32]
 8012fb8:	68fb      	ldr	r3, [r7, #12]
 8012fba:	6a1a      	ldr	r2, [r3, #32]
 8012fbc:	68bb      	ldr	r3, [r7, #8]
 8012fbe:	211f      	movs	r1, #31
 8012fc0:	400b      	ands	r3, r1
 8012fc2:	6879      	ldr	r1, [r7, #4]
 8012fc4:	4099      	lsls	r1, r3
 8012fc6:	000b      	movs	r3, r1
 8012fc8:	431a      	orrs	r2, r3
 8012fca:	68fb      	ldr	r3, [r7, #12]
 8012fcc:	621a      	str	r2, [r3, #32]
 8012fce:	46c0      	nop			@ (mov r8, r8)
 8012fd0:	46bd      	mov	sp, r7
 8012fd2:	b006      	add	sp, #24
 8012fd4:	bd80      	pop	{r7, pc}
	...

08012fd8 <HAL_TIMEx_MasterConfigSynchronization>:
 8012fd8:	b580      	push	{r7, lr}
 8012fda:	b084      	sub	sp, #16
 8012fdc:	af00      	add	r7, sp, #0
 8012fde:	6078      	str	r0, [r7, #4]
 8012fe0:	6039      	str	r1, [r7, #0]
 8012fe2:	687b      	ldr	r3, [r7, #4]
 8012fe4:	223c      	movs	r2, #60	@ 0x3c
 8012fe6:	5c9b      	ldrb	r3, [r3, r2]
 8012fe8:	2b01      	cmp	r3, #1
 8012fea:	d101      	bne.n	8012ff0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8012fec:	2302      	movs	r3, #2
 8012fee:	e055      	b.n	801309c <HAL_TIMEx_MasterConfigSynchronization+0xc4>
 8012ff0:	687b      	ldr	r3, [r7, #4]
 8012ff2:	223c      	movs	r2, #60	@ 0x3c
 8012ff4:	2101      	movs	r1, #1
 8012ff6:	5499      	strb	r1, [r3, r2]
 8012ff8:	687b      	ldr	r3, [r7, #4]
 8012ffa:	223d      	movs	r2, #61	@ 0x3d
 8012ffc:	2102      	movs	r1, #2
 8012ffe:	5499      	strb	r1, [r3, r2]
 8013000:	687b      	ldr	r3, [r7, #4]
 8013002:	681b      	ldr	r3, [r3, #0]
 8013004:	685b      	ldr	r3, [r3, #4]
 8013006:	60fb      	str	r3, [r7, #12]
 8013008:	687b      	ldr	r3, [r7, #4]
 801300a:	681b      	ldr	r3, [r3, #0]
 801300c:	689b      	ldr	r3, [r3, #8]
 801300e:	60bb      	str	r3, [r7, #8]
 8013010:	687b      	ldr	r3, [r7, #4]
 8013012:	681b      	ldr	r3, [r3, #0]
 8013014:	4a23      	ldr	r2, [pc, #140]	@ (80130a4 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8013016:	4293      	cmp	r3, r2
 8013018:	d108      	bne.n	801302c <HAL_TIMEx_MasterConfigSynchronization+0x54>
 801301a:	68fb      	ldr	r3, [r7, #12]
 801301c:	4a22      	ldr	r2, [pc, #136]	@ (80130a8 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 801301e:	4013      	ands	r3, r2
 8013020:	60fb      	str	r3, [r7, #12]
 8013022:	683b      	ldr	r3, [r7, #0]
 8013024:	685b      	ldr	r3, [r3, #4]
 8013026:	68fa      	ldr	r2, [r7, #12]
 8013028:	4313      	orrs	r3, r2
 801302a:	60fb      	str	r3, [r7, #12]
 801302c:	68fb      	ldr	r3, [r7, #12]
 801302e:	2270      	movs	r2, #112	@ 0x70
 8013030:	4393      	bics	r3, r2
 8013032:	60fb      	str	r3, [r7, #12]
 8013034:	683b      	ldr	r3, [r7, #0]
 8013036:	681b      	ldr	r3, [r3, #0]
 8013038:	68fa      	ldr	r2, [r7, #12]
 801303a:	4313      	orrs	r3, r2
 801303c:	60fb      	str	r3, [r7, #12]
 801303e:	687b      	ldr	r3, [r7, #4]
 8013040:	681b      	ldr	r3, [r3, #0]
 8013042:	68fa      	ldr	r2, [r7, #12]
 8013044:	605a      	str	r2, [r3, #4]
 8013046:	687b      	ldr	r3, [r7, #4]
 8013048:	681b      	ldr	r3, [r3, #0]
 801304a:	4a16      	ldr	r2, [pc, #88]	@ (80130a4 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 801304c:	4293      	cmp	r3, r2
 801304e:	d00f      	beq.n	8013070 <HAL_TIMEx_MasterConfigSynchronization+0x98>
 8013050:	687b      	ldr	r3, [r7, #4]
 8013052:	681a      	ldr	r2, [r3, #0]
 8013054:	2380      	movs	r3, #128	@ 0x80
 8013056:	05db      	lsls	r3, r3, #23
 8013058:	429a      	cmp	r2, r3
 801305a:	d009      	beq.n	8013070 <HAL_TIMEx_MasterConfigSynchronization+0x98>
 801305c:	687b      	ldr	r3, [r7, #4]
 801305e:	681b      	ldr	r3, [r3, #0]
 8013060:	4a12      	ldr	r2, [pc, #72]	@ (80130ac <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8013062:	4293      	cmp	r3, r2
 8013064:	d004      	beq.n	8013070 <HAL_TIMEx_MasterConfigSynchronization+0x98>
 8013066:	687b      	ldr	r3, [r7, #4]
 8013068:	681b      	ldr	r3, [r3, #0]
 801306a:	4a11      	ldr	r2, [pc, #68]	@ (80130b0 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 801306c:	4293      	cmp	r3, r2
 801306e:	d10c      	bne.n	801308a <HAL_TIMEx_MasterConfigSynchronization+0xb2>
 8013070:	68bb      	ldr	r3, [r7, #8]
 8013072:	2280      	movs	r2, #128	@ 0x80
 8013074:	4393      	bics	r3, r2
 8013076:	60bb      	str	r3, [r7, #8]
 8013078:	683b      	ldr	r3, [r7, #0]
 801307a:	689b      	ldr	r3, [r3, #8]
 801307c:	68ba      	ldr	r2, [r7, #8]
 801307e:	4313      	orrs	r3, r2
 8013080:	60bb      	str	r3, [r7, #8]
 8013082:	687b      	ldr	r3, [r7, #4]
 8013084:	681b      	ldr	r3, [r3, #0]
 8013086:	68ba      	ldr	r2, [r7, #8]
 8013088:	609a      	str	r2, [r3, #8]
 801308a:	687b      	ldr	r3, [r7, #4]
 801308c:	223d      	movs	r2, #61	@ 0x3d
 801308e:	2101      	movs	r1, #1
 8013090:	5499      	strb	r1, [r3, r2]
 8013092:	687b      	ldr	r3, [r7, #4]
 8013094:	223c      	movs	r2, #60	@ 0x3c
 8013096:	2100      	movs	r1, #0
 8013098:	5499      	strb	r1, [r3, r2]
 801309a:	2300      	movs	r3, #0
 801309c:	0018      	movs	r0, r3
 801309e:	46bd      	mov	sp, r7
 80130a0:	b004      	add	sp, #16
 80130a2:	bd80      	pop	{r7, pc}
 80130a4:	40012c00 	.word	0x40012c00
 80130a8:	ff0fffff 	.word	0xff0fffff
 80130ac:	40000400 	.word	0x40000400
 80130b0:	40014000 	.word	0x40014000

080130b4 <HAL_TIMEx_CommutCallback>:
 80130b4:	b580      	push	{r7, lr}
 80130b6:	b082      	sub	sp, #8
 80130b8:	af00      	add	r7, sp, #0
 80130ba:	6078      	str	r0, [r7, #4]
 80130bc:	46c0      	nop			@ (mov r8, r8)
 80130be:	46bd      	mov	sp, r7
 80130c0:	b002      	add	sp, #8
 80130c2:	bd80      	pop	{r7, pc}

080130c4 <HAL_TIMEx_BreakCallback>:
 80130c4:	b580      	push	{r7, lr}
 80130c6:	b082      	sub	sp, #8
 80130c8:	af00      	add	r7, sp, #0
 80130ca:	6078      	str	r0, [r7, #4]
 80130cc:	46c0      	nop			@ (mov r8, r8)
 80130ce:	46bd      	mov	sp, r7
 80130d0:	b002      	add	sp, #8
 80130d2:	bd80      	pop	{r7, pc}

080130d4 <HAL_TIMEx_Break2Callback>:
 80130d4:	b580      	push	{r7, lr}
 80130d6:	b082      	sub	sp, #8
 80130d8:	af00      	add	r7, sp, #0
 80130da:	6078      	str	r0, [r7, #4]
 80130dc:	46c0      	nop			@ (mov r8, r8)
 80130de:	46bd      	mov	sp, r7
 80130e0:	b002      	add	sp, #8
 80130e2:	bd80      	pop	{r7, pc}

080130e4 <HAL_UART_Init>:
 80130e4:	b580      	push	{r7, lr}
 80130e6:	b082      	sub	sp, #8
 80130e8:	af00      	add	r7, sp, #0
 80130ea:	6078      	str	r0, [r7, #4]
 80130ec:	687b      	ldr	r3, [r7, #4]
 80130ee:	2b00      	cmp	r3, #0
 80130f0:	d101      	bne.n	80130f6 <HAL_UART_Init+0x12>
 80130f2:	2301      	movs	r3, #1
 80130f4:	e046      	b.n	8013184 <HAL_UART_Init+0xa0>
 80130f6:	687b      	ldr	r3, [r7, #4]
 80130f8:	2284      	movs	r2, #132	@ 0x84
 80130fa:	589b      	ldr	r3, [r3, r2]
 80130fc:	2b00      	cmp	r3, #0
 80130fe:	d107      	bne.n	8013110 <HAL_UART_Init+0x2c>
 8013100:	687b      	ldr	r3, [r7, #4]
 8013102:	2280      	movs	r2, #128	@ 0x80
 8013104:	2100      	movs	r1, #0
 8013106:	5499      	strb	r1, [r3, r2]
 8013108:	687b      	ldr	r3, [r7, #4]
 801310a:	0018      	movs	r0, r3
 801310c:	f7fa f89c 	bl	800d248 <HAL_UART_MspInit>
 8013110:	687b      	ldr	r3, [r7, #4]
 8013112:	2284      	movs	r2, #132	@ 0x84
 8013114:	2124      	movs	r1, #36	@ 0x24
 8013116:	5099      	str	r1, [r3, r2]
 8013118:	687b      	ldr	r3, [r7, #4]
 801311a:	681b      	ldr	r3, [r3, #0]
 801311c:	681a      	ldr	r2, [r3, #0]
 801311e:	687b      	ldr	r3, [r7, #4]
 8013120:	681b      	ldr	r3, [r3, #0]
 8013122:	2101      	movs	r1, #1
 8013124:	438a      	bics	r2, r1
 8013126:	601a      	str	r2, [r3, #0]
 8013128:	687b      	ldr	r3, [r7, #4]
 801312a:	0018      	movs	r0, r3
 801312c:	f000 fe28 	bl	8013d80 <UART_SetConfig>
 8013130:	0003      	movs	r3, r0
 8013132:	2b01      	cmp	r3, #1
 8013134:	d101      	bne.n	801313a <HAL_UART_Init+0x56>
 8013136:	2301      	movs	r3, #1
 8013138:	e024      	b.n	8013184 <HAL_UART_Init+0xa0>
 801313a:	687b      	ldr	r3, [r7, #4]
 801313c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801313e:	2b00      	cmp	r3, #0
 8013140:	d003      	beq.n	801314a <HAL_UART_Init+0x66>
 8013142:	687b      	ldr	r3, [r7, #4]
 8013144:	0018      	movs	r0, r3
 8013146:	f001 f8d9 	bl	80142fc <UART_AdvFeatureConfig>
 801314a:	687b      	ldr	r3, [r7, #4]
 801314c:	681b      	ldr	r3, [r3, #0]
 801314e:	685a      	ldr	r2, [r3, #4]
 8013150:	687b      	ldr	r3, [r7, #4]
 8013152:	681b      	ldr	r3, [r3, #0]
 8013154:	490d      	ldr	r1, [pc, #52]	@ (801318c <HAL_UART_Init+0xa8>)
 8013156:	400a      	ands	r2, r1
 8013158:	605a      	str	r2, [r3, #4]
 801315a:	687b      	ldr	r3, [r7, #4]
 801315c:	681b      	ldr	r3, [r3, #0]
 801315e:	689a      	ldr	r2, [r3, #8]
 8013160:	687b      	ldr	r3, [r7, #4]
 8013162:	681b      	ldr	r3, [r3, #0]
 8013164:	212a      	movs	r1, #42	@ 0x2a
 8013166:	438a      	bics	r2, r1
 8013168:	609a      	str	r2, [r3, #8]
 801316a:	687b      	ldr	r3, [r7, #4]
 801316c:	681b      	ldr	r3, [r3, #0]
 801316e:	681a      	ldr	r2, [r3, #0]
 8013170:	687b      	ldr	r3, [r7, #4]
 8013172:	681b      	ldr	r3, [r3, #0]
 8013174:	2101      	movs	r1, #1
 8013176:	430a      	orrs	r2, r1
 8013178:	601a      	str	r2, [r3, #0]
 801317a:	687b      	ldr	r3, [r7, #4]
 801317c:	0018      	movs	r0, r3
 801317e:	f001 f971 	bl	8014464 <UART_CheckIdleState>
 8013182:	0003      	movs	r3, r0
 8013184:	0018      	movs	r0, r3
 8013186:	46bd      	mov	sp, r7
 8013188:	b002      	add	sp, #8
 801318a:	bd80      	pop	{r7, pc}
 801318c:	ffffb7ff 	.word	0xffffb7ff

08013190 <HAL_UART_Transmit>:
 8013190:	b580      	push	{r7, lr}
 8013192:	b08a      	sub	sp, #40	@ 0x28
 8013194:	af02      	add	r7, sp, #8
 8013196:	60f8      	str	r0, [r7, #12]
 8013198:	60b9      	str	r1, [r7, #8]
 801319a:	603b      	str	r3, [r7, #0]
 801319c:	1dbb      	adds	r3, r7, #6
 801319e:	801a      	strh	r2, [r3, #0]
 80131a0:	68fb      	ldr	r3, [r7, #12]
 80131a2:	2284      	movs	r2, #132	@ 0x84
 80131a4:	589b      	ldr	r3, [r3, r2]
 80131a6:	2b20      	cmp	r3, #32
 80131a8:	d000      	beq.n	80131ac <HAL_UART_Transmit+0x1c>
 80131aa:	e097      	b.n	80132dc <HAL_UART_Transmit+0x14c>
 80131ac:	68bb      	ldr	r3, [r7, #8]
 80131ae:	2b00      	cmp	r3, #0
 80131b0:	d003      	beq.n	80131ba <HAL_UART_Transmit+0x2a>
 80131b2:	1dbb      	adds	r3, r7, #6
 80131b4:	881b      	ldrh	r3, [r3, #0]
 80131b6:	2b00      	cmp	r3, #0
 80131b8:	d101      	bne.n	80131be <HAL_UART_Transmit+0x2e>
 80131ba:	2301      	movs	r3, #1
 80131bc:	e08f      	b.n	80132de <HAL_UART_Transmit+0x14e>
 80131be:	68fb      	ldr	r3, [r7, #12]
 80131c0:	689a      	ldr	r2, [r3, #8]
 80131c2:	2380      	movs	r3, #128	@ 0x80
 80131c4:	015b      	lsls	r3, r3, #5
 80131c6:	429a      	cmp	r2, r3
 80131c8:	d109      	bne.n	80131de <HAL_UART_Transmit+0x4e>
 80131ca:	68fb      	ldr	r3, [r7, #12]
 80131cc:	691b      	ldr	r3, [r3, #16]
 80131ce:	2b00      	cmp	r3, #0
 80131d0:	d105      	bne.n	80131de <HAL_UART_Transmit+0x4e>
 80131d2:	68bb      	ldr	r3, [r7, #8]
 80131d4:	2201      	movs	r2, #1
 80131d6:	4013      	ands	r3, r2
 80131d8:	d001      	beq.n	80131de <HAL_UART_Transmit+0x4e>
 80131da:	2301      	movs	r3, #1
 80131dc:	e07f      	b.n	80132de <HAL_UART_Transmit+0x14e>
 80131de:	68fb      	ldr	r3, [r7, #12]
 80131e0:	2280      	movs	r2, #128	@ 0x80
 80131e2:	5c9b      	ldrb	r3, [r3, r2]
 80131e4:	2b01      	cmp	r3, #1
 80131e6:	d101      	bne.n	80131ec <HAL_UART_Transmit+0x5c>
 80131e8:	2302      	movs	r3, #2
 80131ea:	e078      	b.n	80132de <HAL_UART_Transmit+0x14e>
 80131ec:	68fb      	ldr	r3, [r7, #12]
 80131ee:	2280      	movs	r2, #128	@ 0x80
 80131f0:	2101      	movs	r1, #1
 80131f2:	5499      	strb	r1, [r3, r2]
 80131f4:	68fb      	ldr	r3, [r7, #12]
 80131f6:	228c      	movs	r2, #140	@ 0x8c
 80131f8:	2100      	movs	r1, #0
 80131fa:	5099      	str	r1, [r3, r2]
 80131fc:	68fb      	ldr	r3, [r7, #12]
 80131fe:	2284      	movs	r2, #132	@ 0x84
 8013200:	2121      	movs	r1, #33	@ 0x21
 8013202:	5099      	str	r1, [r3, r2]
 8013204:	f7fa fd34 	bl	800dc70 <HAL_GetTick>
 8013208:	0003      	movs	r3, r0
 801320a:	617b      	str	r3, [r7, #20]
 801320c:	68fb      	ldr	r3, [r7, #12]
 801320e:	1dba      	adds	r2, r7, #6
 8013210:	2154      	movs	r1, #84	@ 0x54
 8013212:	8812      	ldrh	r2, [r2, #0]
 8013214:	525a      	strh	r2, [r3, r1]
 8013216:	68fb      	ldr	r3, [r7, #12]
 8013218:	1dba      	adds	r2, r7, #6
 801321a:	2156      	movs	r1, #86	@ 0x56
 801321c:	8812      	ldrh	r2, [r2, #0]
 801321e:	525a      	strh	r2, [r3, r1]
 8013220:	68fb      	ldr	r3, [r7, #12]
 8013222:	689a      	ldr	r2, [r3, #8]
 8013224:	2380      	movs	r3, #128	@ 0x80
 8013226:	015b      	lsls	r3, r3, #5
 8013228:	429a      	cmp	r2, r3
 801322a:	d108      	bne.n	801323e <HAL_UART_Transmit+0xae>
 801322c:	68fb      	ldr	r3, [r7, #12]
 801322e:	691b      	ldr	r3, [r3, #16]
 8013230:	2b00      	cmp	r3, #0
 8013232:	d104      	bne.n	801323e <HAL_UART_Transmit+0xae>
 8013234:	2300      	movs	r3, #0
 8013236:	61fb      	str	r3, [r7, #28]
 8013238:	68bb      	ldr	r3, [r7, #8]
 801323a:	61bb      	str	r3, [r7, #24]
 801323c:	e003      	b.n	8013246 <HAL_UART_Transmit+0xb6>
 801323e:	68bb      	ldr	r3, [r7, #8]
 8013240:	61fb      	str	r3, [r7, #28]
 8013242:	2300      	movs	r3, #0
 8013244:	61bb      	str	r3, [r7, #24]
 8013246:	68fb      	ldr	r3, [r7, #12]
 8013248:	2280      	movs	r2, #128	@ 0x80
 801324a:	2100      	movs	r1, #0
 801324c:	5499      	strb	r1, [r3, r2]
 801324e:	e02c      	b.n	80132aa <HAL_UART_Transmit+0x11a>
 8013250:	697a      	ldr	r2, [r7, #20]
 8013252:	68f8      	ldr	r0, [r7, #12]
 8013254:	683b      	ldr	r3, [r7, #0]
 8013256:	9300      	str	r3, [sp, #0]
 8013258:	0013      	movs	r3, r2
 801325a:	2200      	movs	r2, #0
 801325c:	2180      	movs	r1, #128	@ 0x80
 801325e:	f001 f94b 	bl	80144f8 <UART_WaitOnFlagUntilTimeout>
 8013262:	1e03      	subs	r3, r0, #0
 8013264:	d001      	beq.n	801326a <HAL_UART_Transmit+0xda>
 8013266:	2303      	movs	r3, #3
 8013268:	e039      	b.n	80132de <HAL_UART_Transmit+0x14e>
 801326a:	69fb      	ldr	r3, [r7, #28]
 801326c:	2b00      	cmp	r3, #0
 801326e:	d10b      	bne.n	8013288 <HAL_UART_Transmit+0xf8>
 8013270:	69bb      	ldr	r3, [r7, #24]
 8013272:	881b      	ldrh	r3, [r3, #0]
 8013274:	001a      	movs	r2, r3
 8013276:	68fb      	ldr	r3, [r7, #12]
 8013278:	681b      	ldr	r3, [r3, #0]
 801327a:	05d2      	lsls	r2, r2, #23
 801327c:	0dd2      	lsrs	r2, r2, #23
 801327e:	629a      	str	r2, [r3, #40]	@ 0x28
 8013280:	69bb      	ldr	r3, [r7, #24]
 8013282:	3302      	adds	r3, #2
 8013284:	61bb      	str	r3, [r7, #24]
 8013286:	e007      	b.n	8013298 <HAL_UART_Transmit+0x108>
 8013288:	69fb      	ldr	r3, [r7, #28]
 801328a:	781a      	ldrb	r2, [r3, #0]
 801328c:	68fb      	ldr	r3, [r7, #12]
 801328e:	681b      	ldr	r3, [r3, #0]
 8013290:	629a      	str	r2, [r3, #40]	@ 0x28
 8013292:	69fb      	ldr	r3, [r7, #28]
 8013294:	3301      	adds	r3, #1
 8013296:	61fb      	str	r3, [r7, #28]
 8013298:	68fb      	ldr	r3, [r7, #12]
 801329a:	2256      	movs	r2, #86	@ 0x56
 801329c:	5a9b      	ldrh	r3, [r3, r2]
 801329e:	b29b      	uxth	r3, r3
 80132a0:	3b01      	subs	r3, #1
 80132a2:	b299      	uxth	r1, r3
 80132a4:	68fb      	ldr	r3, [r7, #12]
 80132a6:	2256      	movs	r2, #86	@ 0x56
 80132a8:	5299      	strh	r1, [r3, r2]
 80132aa:	68fb      	ldr	r3, [r7, #12]
 80132ac:	2256      	movs	r2, #86	@ 0x56
 80132ae:	5a9b      	ldrh	r3, [r3, r2]
 80132b0:	b29b      	uxth	r3, r3
 80132b2:	2b00      	cmp	r3, #0
 80132b4:	d1cc      	bne.n	8013250 <HAL_UART_Transmit+0xc0>
 80132b6:	697a      	ldr	r2, [r7, #20]
 80132b8:	68f8      	ldr	r0, [r7, #12]
 80132ba:	683b      	ldr	r3, [r7, #0]
 80132bc:	9300      	str	r3, [sp, #0]
 80132be:	0013      	movs	r3, r2
 80132c0:	2200      	movs	r2, #0
 80132c2:	2140      	movs	r1, #64	@ 0x40
 80132c4:	f001 f918 	bl	80144f8 <UART_WaitOnFlagUntilTimeout>
 80132c8:	1e03      	subs	r3, r0, #0
 80132ca:	d001      	beq.n	80132d0 <HAL_UART_Transmit+0x140>
 80132cc:	2303      	movs	r3, #3
 80132ce:	e006      	b.n	80132de <HAL_UART_Transmit+0x14e>
 80132d0:	68fb      	ldr	r3, [r7, #12]
 80132d2:	2284      	movs	r2, #132	@ 0x84
 80132d4:	2120      	movs	r1, #32
 80132d6:	5099      	str	r1, [r3, r2]
 80132d8:	2300      	movs	r3, #0
 80132da:	e000      	b.n	80132de <HAL_UART_Transmit+0x14e>
 80132dc:	2302      	movs	r3, #2
 80132de:	0018      	movs	r0, r3
 80132e0:	46bd      	mov	sp, r7
 80132e2:	b008      	add	sp, #32
 80132e4:	bd80      	pop	{r7, pc}
	...

080132e8 <HAL_UART_Receive_IT>:
 80132e8:	b580      	push	{r7, lr}
 80132ea:	b088      	sub	sp, #32
 80132ec:	af00      	add	r7, sp, #0
 80132ee:	60f8      	str	r0, [r7, #12]
 80132f0:	60b9      	str	r1, [r7, #8]
 80132f2:	1dbb      	adds	r3, r7, #6
 80132f4:	801a      	strh	r2, [r3, #0]
 80132f6:	68fb      	ldr	r3, [r7, #12]
 80132f8:	2288      	movs	r2, #136	@ 0x88
 80132fa:	589b      	ldr	r3, [r3, r2]
 80132fc:	2b20      	cmp	r3, #32
 80132fe:	d155      	bne.n	80133ac <HAL_UART_Receive_IT+0xc4>
 8013300:	68bb      	ldr	r3, [r7, #8]
 8013302:	2b00      	cmp	r3, #0
 8013304:	d003      	beq.n	801330e <HAL_UART_Receive_IT+0x26>
 8013306:	1dbb      	adds	r3, r7, #6
 8013308:	881b      	ldrh	r3, [r3, #0]
 801330a:	2b00      	cmp	r3, #0
 801330c:	d101      	bne.n	8013312 <HAL_UART_Receive_IT+0x2a>
 801330e:	2301      	movs	r3, #1
 8013310:	e04d      	b.n	80133ae <HAL_UART_Receive_IT+0xc6>
 8013312:	68fb      	ldr	r3, [r7, #12]
 8013314:	689a      	ldr	r2, [r3, #8]
 8013316:	2380      	movs	r3, #128	@ 0x80
 8013318:	015b      	lsls	r3, r3, #5
 801331a:	429a      	cmp	r2, r3
 801331c:	d109      	bne.n	8013332 <HAL_UART_Receive_IT+0x4a>
 801331e:	68fb      	ldr	r3, [r7, #12]
 8013320:	691b      	ldr	r3, [r3, #16]
 8013322:	2b00      	cmp	r3, #0
 8013324:	d105      	bne.n	8013332 <HAL_UART_Receive_IT+0x4a>
 8013326:	68bb      	ldr	r3, [r7, #8]
 8013328:	2201      	movs	r2, #1
 801332a:	4013      	ands	r3, r2
 801332c:	d001      	beq.n	8013332 <HAL_UART_Receive_IT+0x4a>
 801332e:	2301      	movs	r3, #1
 8013330:	e03d      	b.n	80133ae <HAL_UART_Receive_IT+0xc6>
 8013332:	68fb      	ldr	r3, [r7, #12]
 8013334:	2280      	movs	r2, #128	@ 0x80
 8013336:	5c9b      	ldrb	r3, [r3, r2]
 8013338:	2b01      	cmp	r3, #1
 801333a:	d101      	bne.n	8013340 <HAL_UART_Receive_IT+0x58>
 801333c:	2302      	movs	r3, #2
 801333e:	e036      	b.n	80133ae <HAL_UART_Receive_IT+0xc6>
 8013340:	68fb      	ldr	r3, [r7, #12]
 8013342:	2280      	movs	r2, #128	@ 0x80
 8013344:	2101      	movs	r1, #1
 8013346:	5499      	strb	r1, [r3, r2]
 8013348:	68fb      	ldr	r3, [r7, #12]
 801334a:	2200      	movs	r2, #0
 801334c:	66da      	str	r2, [r3, #108]	@ 0x6c
 801334e:	68fb      	ldr	r3, [r7, #12]
 8013350:	681b      	ldr	r3, [r3, #0]
 8013352:	4a19      	ldr	r2, [pc, #100]	@ (80133b8 <HAL_UART_Receive_IT+0xd0>)
 8013354:	4293      	cmp	r3, r2
 8013356:	d020      	beq.n	801339a <HAL_UART_Receive_IT+0xb2>
 8013358:	68fb      	ldr	r3, [r7, #12]
 801335a:	681b      	ldr	r3, [r3, #0]
 801335c:	685a      	ldr	r2, [r3, #4]
 801335e:	2380      	movs	r3, #128	@ 0x80
 8013360:	041b      	lsls	r3, r3, #16
 8013362:	4013      	ands	r3, r2
 8013364:	d019      	beq.n	801339a <HAL_UART_Receive_IT+0xb2>
 8013366:	f3ef 8310 	mrs	r3, PRIMASK
 801336a:	613b      	str	r3, [r7, #16]
 801336c:	693b      	ldr	r3, [r7, #16]
 801336e:	61fb      	str	r3, [r7, #28]
 8013370:	2301      	movs	r3, #1
 8013372:	617b      	str	r3, [r7, #20]
 8013374:	697b      	ldr	r3, [r7, #20]
 8013376:	f383 8810 	msr	PRIMASK, r3
 801337a:	46c0      	nop			@ (mov r8, r8)
 801337c:	68fb      	ldr	r3, [r7, #12]
 801337e:	681b      	ldr	r3, [r3, #0]
 8013380:	681a      	ldr	r2, [r3, #0]
 8013382:	68fb      	ldr	r3, [r7, #12]
 8013384:	681b      	ldr	r3, [r3, #0]
 8013386:	2180      	movs	r1, #128	@ 0x80
 8013388:	04c9      	lsls	r1, r1, #19
 801338a:	430a      	orrs	r2, r1
 801338c:	601a      	str	r2, [r3, #0]
 801338e:	69fb      	ldr	r3, [r7, #28]
 8013390:	61bb      	str	r3, [r7, #24]
 8013392:	69bb      	ldr	r3, [r7, #24]
 8013394:	f383 8810 	msr	PRIMASK, r3
 8013398:	46c0      	nop			@ (mov r8, r8)
 801339a:	1dbb      	adds	r3, r7, #6
 801339c:	881a      	ldrh	r2, [r3, #0]
 801339e:	68b9      	ldr	r1, [r7, #8]
 80133a0:	68fb      	ldr	r3, [r7, #12]
 80133a2:	0018      	movs	r0, r3
 80133a4:	f001 f970 	bl	8014688 <UART_Start_Receive_IT>
 80133a8:	0003      	movs	r3, r0
 80133aa:	e000      	b.n	80133ae <HAL_UART_Receive_IT+0xc6>
 80133ac:	2302      	movs	r3, #2
 80133ae:	0018      	movs	r0, r3
 80133b0:	46bd      	mov	sp, r7
 80133b2:	b008      	add	sp, #32
 80133b4:	bd80      	pop	{r7, pc}
 80133b6:	46c0      	nop			@ (mov r8, r8)
 80133b8:	40008000 	.word	0x40008000

080133bc <HAL_UART_Receive_DMA>:
 80133bc:	b580      	push	{r7, lr}
 80133be:	b088      	sub	sp, #32
 80133c0:	af00      	add	r7, sp, #0
 80133c2:	60f8      	str	r0, [r7, #12]
 80133c4:	60b9      	str	r1, [r7, #8]
 80133c6:	1dbb      	adds	r3, r7, #6
 80133c8:	801a      	strh	r2, [r3, #0]
 80133ca:	68fb      	ldr	r3, [r7, #12]
 80133cc:	2288      	movs	r2, #136	@ 0x88
 80133ce:	589b      	ldr	r3, [r3, r2]
 80133d0:	2b20      	cmp	r3, #32
 80133d2:	d155      	bne.n	8013480 <HAL_UART_Receive_DMA+0xc4>
 80133d4:	68bb      	ldr	r3, [r7, #8]
 80133d6:	2b00      	cmp	r3, #0
 80133d8:	d003      	beq.n	80133e2 <HAL_UART_Receive_DMA+0x26>
 80133da:	1dbb      	adds	r3, r7, #6
 80133dc:	881b      	ldrh	r3, [r3, #0]
 80133de:	2b00      	cmp	r3, #0
 80133e0:	d101      	bne.n	80133e6 <HAL_UART_Receive_DMA+0x2a>
 80133e2:	2301      	movs	r3, #1
 80133e4:	e04d      	b.n	8013482 <HAL_UART_Receive_DMA+0xc6>
 80133e6:	68fb      	ldr	r3, [r7, #12]
 80133e8:	689a      	ldr	r2, [r3, #8]
 80133ea:	2380      	movs	r3, #128	@ 0x80
 80133ec:	015b      	lsls	r3, r3, #5
 80133ee:	429a      	cmp	r2, r3
 80133f0:	d109      	bne.n	8013406 <HAL_UART_Receive_DMA+0x4a>
 80133f2:	68fb      	ldr	r3, [r7, #12]
 80133f4:	691b      	ldr	r3, [r3, #16]
 80133f6:	2b00      	cmp	r3, #0
 80133f8:	d105      	bne.n	8013406 <HAL_UART_Receive_DMA+0x4a>
 80133fa:	68bb      	ldr	r3, [r7, #8]
 80133fc:	2201      	movs	r2, #1
 80133fe:	4013      	ands	r3, r2
 8013400:	d001      	beq.n	8013406 <HAL_UART_Receive_DMA+0x4a>
 8013402:	2301      	movs	r3, #1
 8013404:	e03d      	b.n	8013482 <HAL_UART_Receive_DMA+0xc6>
 8013406:	68fb      	ldr	r3, [r7, #12]
 8013408:	2280      	movs	r2, #128	@ 0x80
 801340a:	5c9b      	ldrb	r3, [r3, r2]
 801340c:	2b01      	cmp	r3, #1
 801340e:	d101      	bne.n	8013414 <HAL_UART_Receive_DMA+0x58>
 8013410:	2302      	movs	r3, #2
 8013412:	e036      	b.n	8013482 <HAL_UART_Receive_DMA+0xc6>
 8013414:	68fb      	ldr	r3, [r7, #12]
 8013416:	2280      	movs	r2, #128	@ 0x80
 8013418:	2101      	movs	r1, #1
 801341a:	5499      	strb	r1, [r3, r2]
 801341c:	68fb      	ldr	r3, [r7, #12]
 801341e:	2200      	movs	r2, #0
 8013420:	66da      	str	r2, [r3, #108]	@ 0x6c
 8013422:	68fb      	ldr	r3, [r7, #12]
 8013424:	681b      	ldr	r3, [r3, #0]
 8013426:	4a19      	ldr	r2, [pc, #100]	@ (801348c <HAL_UART_Receive_DMA+0xd0>)
 8013428:	4293      	cmp	r3, r2
 801342a:	d020      	beq.n	801346e <HAL_UART_Receive_DMA+0xb2>
 801342c:	68fb      	ldr	r3, [r7, #12]
 801342e:	681b      	ldr	r3, [r3, #0]
 8013430:	685a      	ldr	r2, [r3, #4]
 8013432:	2380      	movs	r3, #128	@ 0x80
 8013434:	041b      	lsls	r3, r3, #16
 8013436:	4013      	ands	r3, r2
 8013438:	d019      	beq.n	801346e <HAL_UART_Receive_DMA+0xb2>
 801343a:	f3ef 8310 	mrs	r3, PRIMASK
 801343e:	613b      	str	r3, [r7, #16]
 8013440:	693b      	ldr	r3, [r7, #16]
 8013442:	61fb      	str	r3, [r7, #28]
 8013444:	2301      	movs	r3, #1
 8013446:	617b      	str	r3, [r7, #20]
 8013448:	697b      	ldr	r3, [r7, #20]
 801344a:	f383 8810 	msr	PRIMASK, r3
 801344e:	46c0      	nop			@ (mov r8, r8)
 8013450:	68fb      	ldr	r3, [r7, #12]
 8013452:	681b      	ldr	r3, [r3, #0]
 8013454:	681a      	ldr	r2, [r3, #0]
 8013456:	68fb      	ldr	r3, [r7, #12]
 8013458:	681b      	ldr	r3, [r3, #0]
 801345a:	2180      	movs	r1, #128	@ 0x80
 801345c:	04c9      	lsls	r1, r1, #19
 801345e:	430a      	orrs	r2, r1
 8013460:	601a      	str	r2, [r3, #0]
 8013462:	69fb      	ldr	r3, [r7, #28]
 8013464:	61bb      	str	r3, [r7, #24]
 8013466:	69bb      	ldr	r3, [r7, #24]
 8013468:	f383 8810 	msr	PRIMASK, r3
 801346c:	46c0      	nop			@ (mov r8, r8)
 801346e:	1dbb      	adds	r3, r7, #6
 8013470:	881a      	ldrh	r2, [r3, #0]
 8013472:	68b9      	ldr	r1, [r7, #8]
 8013474:	68fb      	ldr	r3, [r7, #12]
 8013476:	0018      	movs	r0, r3
 8013478:	f001 fa32 	bl	80148e0 <UART_Start_Receive_DMA>
 801347c:	0003      	movs	r3, r0
 801347e:	e000      	b.n	8013482 <HAL_UART_Receive_DMA+0xc6>
 8013480:	2302      	movs	r3, #2
 8013482:	0018      	movs	r0, r3
 8013484:	46bd      	mov	sp, r7
 8013486:	b008      	add	sp, #32
 8013488:	bd80      	pop	{r7, pc}
 801348a:	46c0      	nop			@ (mov r8, r8)
 801348c:	40008000 	.word	0x40008000

08013490 <HAL_UART_DMAStop>:
 8013490:	b580      	push	{r7, lr}
 8013492:	b08c      	sub	sp, #48	@ 0x30
 8013494:	af00      	add	r7, sp, #0
 8013496:	6078      	str	r0, [r7, #4]
 8013498:	687b      	ldr	r3, [r7, #4]
 801349a:	2284      	movs	r2, #132	@ 0x84
 801349c:	589b      	ldr	r3, [r3, r2]
 801349e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80134a0:	687b      	ldr	r3, [r7, #4]
 80134a2:	2288      	movs	r2, #136	@ 0x88
 80134a4:	589b      	ldr	r3, [r3, r2]
 80134a6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80134a8:	687b      	ldr	r3, [r7, #4]
 80134aa:	681b      	ldr	r3, [r3, #0]
 80134ac:	689b      	ldr	r3, [r3, #8]
 80134ae:	2280      	movs	r2, #128	@ 0x80
 80134b0:	4013      	ands	r3, r2
 80134b2:	2b80      	cmp	r3, #128	@ 0x80
 80134b4:	d138      	bne.n	8013528 <HAL_UART_DMAStop+0x98>
 80134b6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80134b8:	2b21      	cmp	r3, #33	@ 0x21
 80134ba:	d135      	bne.n	8013528 <HAL_UART_DMAStop+0x98>
 80134bc:	f3ef 8310 	mrs	r3, PRIMASK
 80134c0:	617b      	str	r3, [r7, #20]
 80134c2:	697b      	ldr	r3, [r7, #20]
 80134c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80134c6:	2301      	movs	r3, #1
 80134c8:	61bb      	str	r3, [r7, #24]
 80134ca:	69bb      	ldr	r3, [r7, #24]
 80134cc:	f383 8810 	msr	PRIMASK, r3
 80134d0:	46c0      	nop			@ (mov r8, r8)
 80134d2:	687b      	ldr	r3, [r7, #4]
 80134d4:	681b      	ldr	r3, [r3, #0]
 80134d6:	689a      	ldr	r2, [r3, #8]
 80134d8:	687b      	ldr	r3, [r7, #4]
 80134da:	681b      	ldr	r3, [r3, #0]
 80134dc:	2180      	movs	r1, #128	@ 0x80
 80134de:	438a      	bics	r2, r1
 80134e0:	609a      	str	r2, [r3, #8]
 80134e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80134e4:	61fb      	str	r3, [r7, #28]
 80134e6:	69fb      	ldr	r3, [r7, #28]
 80134e8:	f383 8810 	msr	PRIMASK, r3
 80134ec:	46c0      	nop			@ (mov r8, r8)
 80134ee:	687b      	ldr	r3, [r7, #4]
 80134f0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80134f2:	2b00      	cmp	r3, #0
 80134f4:	d014      	beq.n	8013520 <HAL_UART_DMAStop+0x90>
 80134f6:	687b      	ldr	r3, [r7, #4]
 80134f8:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80134fa:	0018      	movs	r0, r3
 80134fc:	f7fa fdea 	bl	800e0d4 <HAL_DMA_Abort>
 8013500:	1e03      	subs	r3, r0, #0
 8013502:	d00d      	beq.n	8013520 <HAL_UART_DMAStop+0x90>
 8013504:	687b      	ldr	r3, [r7, #4]
 8013506:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8013508:	0018      	movs	r0, r3
 801350a:	f7fa ff6d 	bl	800e3e8 <HAL_DMA_GetError>
 801350e:	0003      	movs	r3, r0
 8013510:	2b20      	cmp	r3, #32
 8013512:	d105      	bne.n	8013520 <HAL_UART_DMAStop+0x90>
 8013514:	687b      	ldr	r3, [r7, #4]
 8013516:	228c      	movs	r2, #140	@ 0x8c
 8013518:	2110      	movs	r1, #16
 801351a:	5099      	str	r1, [r3, r2]
 801351c:	2303      	movs	r3, #3
 801351e:	e044      	b.n	80135aa <HAL_UART_DMAStop+0x11a>
 8013520:	687b      	ldr	r3, [r7, #4]
 8013522:	0018      	movs	r0, r3
 8013524:	f001 fa84 	bl	8014a30 <UART_EndTxTransfer>
 8013528:	687b      	ldr	r3, [r7, #4]
 801352a:	681b      	ldr	r3, [r3, #0]
 801352c:	689b      	ldr	r3, [r3, #8]
 801352e:	2240      	movs	r2, #64	@ 0x40
 8013530:	4013      	ands	r3, r2
 8013532:	2b40      	cmp	r3, #64	@ 0x40
 8013534:	d138      	bne.n	80135a8 <HAL_UART_DMAStop+0x118>
 8013536:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8013538:	2b22      	cmp	r3, #34	@ 0x22
 801353a:	d135      	bne.n	80135a8 <HAL_UART_DMAStop+0x118>
 801353c:	f3ef 8310 	mrs	r3, PRIMASK
 8013540:	60bb      	str	r3, [r7, #8]
 8013542:	68bb      	ldr	r3, [r7, #8]
 8013544:	623b      	str	r3, [r7, #32]
 8013546:	2301      	movs	r3, #1
 8013548:	60fb      	str	r3, [r7, #12]
 801354a:	68fb      	ldr	r3, [r7, #12]
 801354c:	f383 8810 	msr	PRIMASK, r3
 8013550:	46c0      	nop			@ (mov r8, r8)
 8013552:	687b      	ldr	r3, [r7, #4]
 8013554:	681b      	ldr	r3, [r3, #0]
 8013556:	689a      	ldr	r2, [r3, #8]
 8013558:	687b      	ldr	r3, [r7, #4]
 801355a:	681b      	ldr	r3, [r3, #0]
 801355c:	2140      	movs	r1, #64	@ 0x40
 801355e:	438a      	bics	r2, r1
 8013560:	609a      	str	r2, [r3, #8]
 8013562:	6a3b      	ldr	r3, [r7, #32]
 8013564:	613b      	str	r3, [r7, #16]
 8013566:	693b      	ldr	r3, [r7, #16]
 8013568:	f383 8810 	msr	PRIMASK, r3
 801356c:	46c0      	nop			@ (mov r8, r8)
 801356e:	687b      	ldr	r3, [r7, #4]
 8013570:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013572:	2b00      	cmp	r3, #0
 8013574:	d014      	beq.n	80135a0 <HAL_UART_DMAStop+0x110>
 8013576:	687b      	ldr	r3, [r7, #4]
 8013578:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801357a:	0018      	movs	r0, r3
 801357c:	f7fa fdaa 	bl	800e0d4 <HAL_DMA_Abort>
 8013580:	1e03      	subs	r3, r0, #0
 8013582:	d00d      	beq.n	80135a0 <HAL_UART_DMAStop+0x110>
 8013584:	687b      	ldr	r3, [r7, #4]
 8013586:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013588:	0018      	movs	r0, r3
 801358a:	f7fa ff2d 	bl	800e3e8 <HAL_DMA_GetError>
 801358e:	0003      	movs	r3, r0
 8013590:	2b20      	cmp	r3, #32
 8013592:	d105      	bne.n	80135a0 <HAL_UART_DMAStop+0x110>
 8013594:	687b      	ldr	r3, [r7, #4]
 8013596:	228c      	movs	r2, #140	@ 0x8c
 8013598:	2110      	movs	r1, #16
 801359a:	5099      	str	r1, [r3, r2]
 801359c:	2303      	movs	r3, #3
 801359e:	e004      	b.n	80135aa <HAL_UART_DMAStop+0x11a>
 80135a0:	687b      	ldr	r3, [r7, #4]
 80135a2:	0018      	movs	r0, r3
 80135a4:	f001 fa84 	bl	8014ab0 <UART_EndRxTransfer>
 80135a8:	2300      	movs	r3, #0
 80135aa:	0018      	movs	r0, r3
 80135ac:	46bd      	mov	sp, r7
 80135ae:	b00c      	add	sp, #48	@ 0x30
 80135b0:	bd80      	pop	{r7, pc}
	...

080135b4 <HAL_UART_AbortReceive>:
 80135b4:	b580      	push	{r7, lr}
 80135b6:	b092      	sub	sp, #72	@ 0x48
 80135b8:	af00      	add	r7, sp, #0
 80135ba:	6078      	str	r0, [r7, #4]
 80135bc:	f3ef 8310 	mrs	r3, PRIMASK
 80135c0:	623b      	str	r3, [r7, #32]
 80135c2:	6a3b      	ldr	r3, [r7, #32]
 80135c4:	647b      	str	r3, [r7, #68]	@ 0x44
 80135c6:	2301      	movs	r3, #1
 80135c8:	627b      	str	r3, [r7, #36]	@ 0x24
 80135ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80135cc:	f383 8810 	msr	PRIMASK, r3
 80135d0:	46c0      	nop			@ (mov r8, r8)
 80135d2:	687b      	ldr	r3, [r7, #4]
 80135d4:	681b      	ldr	r3, [r3, #0]
 80135d6:	681a      	ldr	r2, [r3, #0]
 80135d8:	687b      	ldr	r3, [r7, #4]
 80135da:	681b      	ldr	r3, [r3, #0]
 80135dc:	494b      	ldr	r1, [pc, #300]	@ (801370c <HAL_UART_AbortReceive+0x158>)
 80135de:	400a      	ands	r2, r1
 80135e0:	601a      	str	r2, [r3, #0]
 80135e2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80135e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80135e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80135e8:	f383 8810 	msr	PRIMASK, r3
 80135ec:	46c0      	nop			@ (mov r8, r8)
 80135ee:	f3ef 8310 	mrs	r3, PRIMASK
 80135f2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80135f4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80135f6:	643b      	str	r3, [r7, #64]	@ 0x40
 80135f8:	2301      	movs	r3, #1
 80135fa:	633b      	str	r3, [r7, #48]	@ 0x30
 80135fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80135fe:	f383 8810 	msr	PRIMASK, r3
 8013602:	46c0      	nop			@ (mov r8, r8)
 8013604:	687b      	ldr	r3, [r7, #4]
 8013606:	681b      	ldr	r3, [r3, #0]
 8013608:	689a      	ldr	r2, [r3, #8]
 801360a:	687b      	ldr	r3, [r7, #4]
 801360c:	681b      	ldr	r3, [r3, #0]
 801360e:	4940      	ldr	r1, [pc, #256]	@ (8013710 <HAL_UART_AbortReceive+0x15c>)
 8013610:	400a      	ands	r2, r1
 8013612:	609a      	str	r2, [r3, #8]
 8013614:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8013616:	637b      	str	r3, [r7, #52]	@ 0x34
 8013618:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801361a:	f383 8810 	msr	PRIMASK, r3
 801361e:	46c0      	nop			@ (mov r8, r8)
 8013620:	687b      	ldr	r3, [r7, #4]
 8013622:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8013624:	2b01      	cmp	r3, #1
 8013626:	d118      	bne.n	801365a <HAL_UART_AbortReceive+0xa6>
 8013628:	f3ef 8310 	mrs	r3, PRIMASK
 801362c:	617b      	str	r3, [r7, #20]
 801362e:	697b      	ldr	r3, [r7, #20]
 8013630:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013632:	2301      	movs	r3, #1
 8013634:	61bb      	str	r3, [r7, #24]
 8013636:	69bb      	ldr	r3, [r7, #24]
 8013638:	f383 8810 	msr	PRIMASK, r3
 801363c:	46c0      	nop			@ (mov r8, r8)
 801363e:	687b      	ldr	r3, [r7, #4]
 8013640:	681b      	ldr	r3, [r3, #0]
 8013642:	681a      	ldr	r2, [r3, #0]
 8013644:	687b      	ldr	r3, [r7, #4]
 8013646:	681b      	ldr	r3, [r3, #0]
 8013648:	2110      	movs	r1, #16
 801364a:	438a      	bics	r2, r1
 801364c:	601a      	str	r2, [r3, #0]
 801364e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8013650:	61fb      	str	r3, [r7, #28]
 8013652:	69fb      	ldr	r3, [r7, #28]
 8013654:	f383 8810 	msr	PRIMASK, r3
 8013658:	46c0      	nop			@ (mov r8, r8)
 801365a:	687b      	ldr	r3, [r7, #4]
 801365c:	681b      	ldr	r3, [r3, #0]
 801365e:	689b      	ldr	r3, [r3, #8]
 8013660:	2240      	movs	r2, #64	@ 0x40
 8013662:	4013      	ands	r3, r2
 8013664:	2b40      	cmp	r3, #64	@ 0x40
 8013666:	d135      	bne.n	80136d4 <HAL_UART_AbortReceive+0x120>
 8013668:	f3ef 8310 	mrs	r3, PRIMASK
 801366c:	60bb      	str	r3, [r7, #8]
 801366e:	68bb      	ldr	r3, [r7, #8]
 8013670:	63bb      	str	r3, [r7, #56]	@ 0x38
 8013672:	2301      	movs	r3, #1
 8013674:	60fb      	str	r3, [r7, #12]
 8013676:	68fb      	ldr	r3, [r7, #12]
 8013678:	f383 8810 	msr	PRIMASK, r3
 801367c:	46c0      	nop			@ (mov r8, r8)
 801367e:	687b      	ldr	r3, [r7, #4]
 8013680:	681b      	ldr	r3, [r3, #0]
 8013682:	689a      	ldr	r2, [r3, #8]
 8013684:	687b      	ldr	r3, [r7, #4]
 8013686:	681b      	ldr	r3, [r3, #0]
 8013688:	2140      	movs	r1, #64	@ 0x40
 801368a:	438a      	bics	r2, r1
 801368c:	609a      	str	r2, [r3, #8]
 801368e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013690:	613b      	str	r3, [r7, #16]
 8013692:	693b      	ldr	r3, [r7, #16]
 8013694:	f383 8810 	msr	PRIMASK, r3
 8013698:	46c0      	nop			@ (mov r8, r8)
 801369a:	687b      	ldr	r3, [r7, #4]
 801369c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801369e:	2b00      	cmp	r3, #0
 80136a0:	d018      	beq.n	80136d4 <HAL_UART_AbortReceive+0x120>
 80136a2:	687b      	ldr	r3, [r7, #4]
 80136a4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80136a6:	2200      	movs	r2, #0
 80136a8:	639a      	str	r2, [r3, #56]	@ 0x38
 80136aa:	687b      	ldr	r3, [r7, #4]
 80136ac:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80136ae:	0018      	movs	r0, r3
 80136b0:	f7fa fd10 	bl	800e0d4 <HAL_DMA_Abort>
 80136b4:	1e03      	subs	r3, r0, #0
 80136b6:	d00d      	beq.n	80136d4 <HAL_UART_AbortReceive+0x120>
 80136b8:	687b      	ldr	r3, [r7, #4]
 80136ba:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80136bc:	0018      	movs	r0, r3
 80136be:	f7fa fe93 	bl	800e3e8 <HAL_DMA_GetError>
 80136c2:	0003      	movs	r3, r0
 80136c4:	2b20      	cmp	r3, #32
 80136c6:	d105      	bne.n	80136d4 <HAL_UART_AbortReceive+0x120>
 80136c8:	687b      	ldr	r3, [r7, #4]
 80136ca:	228c      	movs	r2, #140	@ 0x8c
 80136cc:	2110      	movs	r1, #16
 80136ce:	5099      	str	r1, [r3, r2]
 80136d0:	2303      	movs	r3, #3
 80136d2:	e017      	b.n	8013704 <HAL_UART_AbortReceive+0x150>
 80136d4:	687b      	ldr	r3, [r7, #4]
 80136d6:	225e      	movs	r2, #94	@ 0x5e
 80136d8:	2100      	movs	r1, #0
 80136da:	5299      	strh	r1, [r3, r2]
 80136dc:	687b      	ldr	r3, [r7, #4]
 80136de:	681b      	ldr	r3, [r3, #0]
 80136e0:	220f      	movs	r2, #15
 80136e2:	621a      	str	r2, [r3, #32]
 80136e4:	687b      	ldr	r3, [r7, #4]
 80136e6:	681b      	ldr	r3, [r3, #0]
 80136e8:	699a      	ldr	r2, [r3, #24]
 80136ea:	687b      	ldr	r3, [r7, #4]
 80136ec:	681b      	ldr	r3, [r3, #0]
 80136ee:	2108      	movs	r1, #8
 80136f0:	430a      	orrs	r2, r1
 80136f2:	619a      	str	r2, [r3, #24]
 80136f4:	687b      	ldr	r3, [r7, #4]
 80136f6:	2288      	movs	r2, #136	@ 0x88
 80136f8:	2120      	movs	r1, #32
 80136fa:	5099      	str	r1, [r3, r2]
 80136fc:	687b      	ldr	r3, [r7, #4]
 80136fe:	2200      	movs	r2, #0
 8013700:	66da      	str	r2, [r3, #108]	@ 0x6c
 8013702:	2300      	movs	r3, #0
 8013704:	0018      	movs	r0, r3
 8013706:	46bd      	mov	sp, r7
 8013708:	b012      	add	sp, #72	@ 0x48
 801370a:	bd80      	pop	{r7, pc}
 801370c:	fffffedf 	.word	0xfffffedf
 8013710:	effffffe 	.word	0xeffffffe

08013714 <HAL_UART_IRQHandler>:
 8013714:	b5b0      	push	{r4, r5, r7, lr}
 8013716:	b0aa      	sub	sp, #168	@ 0xa8
 8013718:	af00      	add	r7, sp, #0
 801371a:	6078      	str	r0, [r7, #4]
 801371c:	687b      	ldr	r3, [r7, #4]
 801371e:	681b      	ldr	r3, [r3, #0]
 8013720:	69db      	ldr	r3, [r3, #28]
 8013722:	22a4      	movs	r2, #164	@ 0xa4
 8013724:	18b9      	adds	r1, r7, r2
 8013726:	600b      	str	r3, [r1, #0]
 8013728:	687b      	ldr	r3, [r7, #4]
 801372a:	681b      	ldr	r3, [r3, #0]
 801372c:	681b      	ldr	r3, [r3, #0]
 801372e:	20a0      	movs	r0, #160	@ 0xa0
 8013730:	1839      	adds	r1, r7, r0
 8013732:	600b      	str	r3, [r1, #0]
 8013734:	687b      	ldr	r3, [r7, #4]
 8013736:	681b      	ldr	r3, [r3, #0]
 8013738:	689b      	ldr	r3, [r3, #8]
 801373a:	249c      	movs	r4, #156	@ 0x9c
 801373c:	1939      	adds	r1, r7, r4
 801373e:	600b      	str	r3, [r1, #0]
 8013740:	0011      	movs	r1, r2
 8013742:	18bb      	adds	r3, r7, r2
 8013744:	681b      	ldr	r3, [r3, #0]
 8013746:	4aa0      	ldr	r2, [pc, #640]	@ (80139c8 <HAL_UART_IRQHandler+0x2b4>)
 8013748:	4013      	ands	r3, r2
 801374a:	2298      	movs	r2, #152	@ 0x98
 801374c:	18bd      	adds	r5, r7, r2
 801374e:	602b      	str	r3, [r5, #0]
 8013750:	18bb      	adds	r3, r7, r2
 8013752:	681b      	ldr	r3, [r3, #0]
 8013754:	2b00      	cmp	r3, #0
 8013756:	d11a      	bne.n	801378e <HAL_UART_IRQHandler+0x7a>
 8013758:	187b      	adds	r3, r7, r1
 801375a:	681b      	ldr	r3, [r3, #0]
 801375c:	2220      	movs	r2, #32
 801375e:	4013      	ands	r3, r2
 8013760:	d015      	beq.n	801378e <HAL_UART_IRQHandler+0x7a>
 8013762:	183b      	adds	r3, r7, r0
 8013764:	681b      	ldr	r3, [r3, #0]
 8013766:	2220      	movs	r2, #32
 8013768:	4013      	ands	r3, r2
 801376a:	d105      	bne.n	8013778 <HAL_UART_IRQHandler+0x64>
 801376c:	193b      	adds	r3, r7, r4
 801376e:	681a      	ldr	r2, [r3, #0]
 8013770:	2380      	movs	r3, #128	@ 0x80
 8013772:	055b      	lsls	r3, r3, #21
 8013774:	4013      	ands	r3, r2
 8013776:	d00a      	beq.n	801378e <HAL_UART_IRQHandler+0x7a>
 8013778:	687b      	ldr	r3, [r7, #4]
 801377a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801377c:	2b00      	cmp	r3, #0
 801377e:	d100      	bne.n	8013782 <HAL_UART_IRQHandler+0x6e>
 8013780:	e2cf      	b.n	8013d22 <HAL_UART_IRQHandler+0x60e>
 8013782:	687b      	ldr	r3, [r7, #4]
 8013784:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8013786:	687a      	ldr	r2, [r7, #4]
 8013788:	0010      	movs	r0, r2
 801378a:	4798      	blx	r3
 801378c:	e2c9      	b.n	8013d22 <HAL_UART_IRQHandler+0x60e>
 801378e:	2398      	movs	r3, #152	@ 0x98
 8013790:	18fb      	adds	r3, r7, r3
 8013792:	681b      	ldr	r3, [r3, #0]
 8013794:	2b00      	cmp	r3, #0
 8013796:	d100      	bne.n	801379a <HAL_UART_IRQHandler+0x86>
 8013798:	e11e      	b.n	80139d8 <HAL_UART_IRQHandler+0x2c4>
 801379a:	239c      	movs	r3, #156	@ 0x9c
 801379c:	18fb      	adds	r3, r7, r3
 801379e:	681b      	ldr	r3, [r3, #0]
 80137a0:	4a8a      	ldr	r2, [pc, #552]	@ (80139cc <HAL_UART_IRQHandler+0x2b8>)
 80137a2:	4013      	ands	r3, r2
 80137a4:	d106      	bne.n	80137b4 <HAL_UART_IRQHandler+0xa0>
 80137a6:	23a0      	movs	r3, #160	@ 0xa0
 80137a8:	18fb      	adds	r3, r7, r3
 80137aa:	681b      	ldr	r3, [r3, #0]
 80137ac:	4a88      	ldr	r2, [pc, #544]	@ (80139d0 <HAL_UART_IRQHandler+0x2bc>)
 80137ae:	4013      	ands	r3, r2
 80137b0:	d100      	bne.n	80137b4 <HAL_UART_IRQHandler+0xa0>
 80137b2:	e111      	b.n	80139d8 <HAL_UART_IRQHandler+0x2c4>
 80137b4:	23a4      	movs	r3, #164	@ 0xa4
 80137b6:	18fb      	adds	r3, r7, r3
 80137b8:	681b      	ldr	r3, [r3, #0]
 80137ba:	2201      	movs	r2, #1
 80137bc:	4013      	ands	r3, r2
 80137be:	d012      	beq.n	80137e6 <HAL_UART_IRQHandler+0xd2>
 80137c0:	23a0      	movs	r3, #160	@ 0xa0
 80137c2:	18fb      	adds	r3, r7, r3
 80137c4:	681a      	ldr	r2, [r3, #0]
 80137c6:	2380      	movs	r3, #128	@ 0x80
 80137c8:	005b      	lsls	r3, r3, #1
 80137ca:	4013      	ands	r3, r2
 80137cc:	d00b      	beq.n	80137e6 <HAL_UART_IRQHandler+0xd2>
 80137ce:	687b      	ldr	r3, [r7, #4]
 80137d0:	681b      	ldr	r3, [r3, #0]
 80137d2:	2201      	movs	r2, #1
 80137d4:	621a      	str	r2, [r3, #32]
 80137d6:	687b      	ldr	r3, [r7, #4]
 80137d8:	228c      	movs	r2, #140	@ 0x8c
 80137da:	589b      	ldr	r3, [r3, r2]
 80137dc:	2201      	movs	r2, #1
 80137de:	431a      	orrs	r2, r3
 80137e0:	687b      	ldr	r3, [r7, #4]
 80137e2:	218c      	movs	r1, #140	@ 0x8c
 80137e4:	505a      	str	r2, [r3, r1]
 80137e6:	23a4      	movs	r3, #164	@ 0xa4
 80137e8:	18fb      	adds	r3, r7, r3
 80137ea:	681b      	ldr	r3, [r3, #0]
 80137ec:	2202      	movs	r2, #2
 80137ee:	4013      	ands	r3, r2
 80137f0:	d011      	beq.n	8013816 <HAL_UART_IRQHandler+0x102>
 80137f2:	239c      	movs	r3, #156	@ 0x9c
 80137f4:	18fb      	adds	r3, r7, r3
 80137f6:	681b      	ldr	r3, [r3, #0]
 80137f8:	2201      	movs	r2, #1
 80137fa:	4013      	ands	r3, r2
 80137fc:	d00b      	beq.n	8013816 <HAL_UART_IRQHandler+0x102>
 80137fe:	687b      	ldr	r3, [r7, #4]
 8013800:	681b      	ldr	r3, [r3, #0]
 8013802:	2202      	movs	r2, #2
 8013804:	621a      	str	r2, [r3, #32]
 8013806:	687b      	ldr	r3, [r7, #4]
 8013808:	228c      	movs	r2, #140	@ 0x8c
 801380a:	589b      	ldr	r3, [r3, r2]
 801380c:	2204      	movs	r2, #4
 801380e:	431a      	orrs	r2, r3
 8013810:	687b      	ldr	r3, [r7, #4]
 8013812:	218c      	movs	r1, #140	@ 0x8c
 8013814:	505a      	str	r2, [r3, r1]
 8013816:	23a4      	movs	r3, #164	@ 0xa4
 8013818:	18fb      	adds	r3, r7, r3
 801381a:	681b      	ldr	r3, [r3, #0]
 801381c:	2204      	movs	r2, #4
 801381e:	4013      	ands	r3, r2
 8013820:	d011      	beq.n	8013846 <HAL_UART_IRQHandler+0x132>
 8013822:	239c      	movs	r3, #156	@ 0x9c
 8013824:	18fb      	adds	r3, r7, r3
 8013826:	681b      	ldr	r3, [r3, #0]
 8013828:	2201      	movs	r2, #1
 801382a:	4013      	ands	r3, r2
 801382c:	d00b      	beq.n	8013846 <HAL_UART_IRQHandler+0x132>
 801382e:	687b      	ldr	r3, [r7, #4]
 8013830:	681b      	ldr	r3, [r3, #0]
 8013832:	2204      	movs	r2, #4
 8013834:	621a      	str	r2, [r3, #32]
 8013836:	687b      	ldr	r3, [r7, #4]
 8013838:	228c      	movs	r2, #140	@ 0x8c
 801383a:	589b      	ldr	r3, [r3, r2]
 801383c:	2202      	movs	r2, #2
 801383e:	431a      	orrs	r2, r3
 8013840:	687b      	ldr	r3, [r7, #4]
 8013842:	218c      	movs	r1, #140	@ 0x8c
 8013844:	505a      	str	r2, [r3, r1]
 8013846:	23a4      	movs	r3, #164	@ 0xa4
 8013848:	18fb      	adds	r3, r7, r3
 801384a:	681b      	ldr	r3, [r3, #0]
 801384c:	2208      	movs	r2, #8
 801384e:	4013      	ands	r3, r2
 8013850:	d017      	beq.n	8013882 <HAL_UART_IRQHandler+0x16e>
 8013852:	23a0      	movs	r3, #160	@ 0xa0
 8013854:	18fb      	adds	r3, r7, r3
 8013856:	681b      	ldr	r3, [r3, #0]
 8013858:	2220      	movs	r2, #32
 801385a:	4013      	ands	r3, r2
 801385c:	d105      	bne.n	801386a <HAL_UART_IRQHandler+0x156>
 801385e:	239c      	movs	r3, #156	@ 0x9c
 8013860:	18fb      	adds	r3, r7, r3
 8013862:	681b      	ldr	r3, [r3, #0]
 8013864:	4a59      	ldr	r2, [pc, #356]	@ (80139cc <HAL_UART_IRQHandler+0x2b8>)
 8013866:	4013      	ands	r3, r2
 8013868:	d00b      	beq.n	8013882 <HAL_UART_IRQHandler+0x16e>
 801386a:	687b      	ldr	r3, [r7, #4]
 801386c:	681b      	ldr	r3, [r3, #0]
 801386e:	2208      	movs	r2, #8
 8013870:	621a      	str	r2, [r3, #32]
 8013872:	687b      	ldr	r3, [r7, #4]
 8013874:	228c      	movs	r2, #140	@ 0x8c
 8013876:	589b      	ldr	r3, [r3, r2]
 8013878:	2208      	movs	r2, #8
 801387a:	431a      	orrs	r2, r3
 801387c:	687b      	ldr	r3, [r7, #4]
 801387e:	218c      	movs	r1, #140	@ 0x8c
 8013880:	505a      	str	r2, [r3, r1]
 8013882:	23a4      	movs	r3, #164	@ 0xa4
 8013884:	18fb      	adds	r3, r7, r3
 8013886:	681a      	ldr	r2, [r3, #0]
 8013888:	2380      	movs	r3, #128	@ 0x80
 801388a:	011b      	lsls	r3, r3, #4
 801388c:	4013      	ands	r3, r2
 801388e:	d013      	beq.n	80138b8 <HAL_UART_IRQHandler+0x1a4>
 8013890:	23a0      	movs	r3, #160	@ 0xa0
 8013892:	18fb      	adds	r3, r7, r3
 8013894:	681a      	ldr	r2, [r3, #0]
 8013896:	2380      	movs	r3, #128	@ 0x80
 8013898:	04db      	lsls	r3, r3, #19
 801389a:	4013      	ands	r3, r2
 801389c:	d00c      	beq.n	80138b8 <HAL_UART_IRQHandler+0x1a4>
 801389e:	687b      	ldr	r3, [r7, #4]
 80138a0:	681b      	ldr	r3, [r3, #0]
 80138a2:	2280      	movs	r2, #128	@ 0x80
 80138a4:	0112      	lsls	r2, r2, #4
 80138a6:	621a      	str	r2, [r3, #32]
 80138a8:	687b      	ldr	r3, [r7, #4]
 80138aa:	228c      	movs	r2, #140	@ 0x8c
 80138ac:	589b      	ldr	r3, [r3, r2]
 80138ae:	2220      	movs	r2, #32
 80138b0:	431a      	orrs	r2, r3
 80138b2:	687b      	ldr	r3, [r7, #4]
 80138b4:	218c      	movs	r1, #140	@ 0x8c
 80138b6:	505a      	str	r2, [r3, r1]
 80138b8:	687b      	ldr	r3, [r7, #4]
 80138ba:	228c      	movs	r2, #140	@ 0x8c
 80138bc:	589b      	ldr	r3, [r3, r2]
 80138be:	2b00      	cmp	r3, #0
 80138c0:	d100      	bne.n	80138c4 <HAL_UART_IRQHandler+0x1b0>
 80138c2:	e230      	b.n	8013d26 <HAL_UART_IRQHandler+0x612>
 80138c4:	23a4      	movs	r3, #164	@ 0xa4
 80138c6:	18fb      	adds	r3, r7, r3
 80138c8:	681b      	ldr	r3, [r3, #0]
 80138ca:	2220      	movs	r2, #32
 80138cc:	4013      	ands	r3, r2
 80138ce:	d015      	beq.n	80138fc <HAL_UART_IRQHandler+0x1e8>
 80138d0:	23a0      	movs	r3, #160	@ 0xa0
 80138d2:	18fb      	adds	r3, r7, r3
 80138d4:	681b      	ldr	r3, [r3, #0]
 80138d6:	2220      	movs	r2, #32
 80138d8:	4013      	ands	r3, r2
 80138da:	d106      	bne.n	80138ea <HAL_UART_IRQHandler+0x1d6>
 80138dc:	239c      	movs	r3, #156	@ 0x9c
 80138de:	18fb      	adds	r3, r7, r3
 80138e0:	681a      	ldr	r2, [r3, #0]
 80138e2:	2380      	movs	r3, #128	@ 0x80
 80138e4:	055b      	lsls	r3, r3, #21
 80138e6:	4013      	ands	r3, r2
 80138e8:	d008      	beq.n	80138fc <HAL_UART_IRQHandler+0x1e8>
 80138ea:	687b      	ldr	r3, [r7, #4]
 80138ec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80138ee:	2b00      	cmp	r3, #0
 80138f0:	d004      	beq.n	80138fc <HAL_UART_IRQHandler+0x1e8>
 80138f2:	687b      	ldr	r3, [r7, #4]
 80138f4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80138f6:	687a      	ldr	r2, [r7, #4]
 80138f8:	0010      	movs	r0, r2
 80138fa:	4798      	blx	r3
 80138fc:	687b      	ldr	r3, [r7, #4]
 80138fe:	228c      	movs	r2, #140	@ 0x8c
 8013900:	589b      	ldr	r3, [r3, r2]
 8013902:	2194      	movs	r1, #148	@ 0x94
 8013904:	187a      	adds	r2, r7, r1
 8013906:	6013      	str	r3, [r2, #0]
 8013908:	687b      	ldr	r3, [r7, #4]
 801390a:	681b      	ldr	r3, [r3, #0]
 801390c:	689b      	ldr	r3, [r3, #8]
 801390e:	2240      	movs	r2, #64	@ 0x40
 8013910:	4013      	ands	r3, r2
 8013912:	2b40      	cmp	r3, #64	@ 0x40
 8013914:	d004      	beq.n	8013920 <HAL_UART_IRQHandler+0x20c>
 8013916:	187b      	adds	r3, r7, r1
 8013918:	681b      	ldr	r3, [r3, #0]
 801391a:	2228      	movs	r2, #40	@ 0x28
 801391c:	4013      	ands	r3, r2
 801391e:	d047      	beq.n	80139b0 <HAL_UART_IRQHandler+0x29c>
 8013920:	687b      	ldr	r3, [r7, #4]
 8013922:	0018      	movs	r0, r3
 8013924:	f001 f8c4 	bl	8014ab0 <UART_EndRxTransfer>
 8013928:	687b      	ldr	r3, [r7, #4]
 801392a:	681b      	ldr	r3, [r3, #0]
 801392c:	689b      	ldr	r3, [r3, #8]
 801392e:	2240      	movs	r2, #64	@ 0x40
 8013930:	4013      	ands	r3, r2
 8013932:	2b40      	cmp	r3, #64	@ 0x40
 8013934:	d137      	bne.n	80139a6 <HAL_UART_IRQHandler+0x292>
 8013936:	f3ef 8310 	mrs	r3, PRIMASK
 801393a:	663b      	str	r3, [r7, #96]	@ 0x60
 801393c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 801393e:	2090      	movs	r0, #144	@ 0x90
 8013940:	183a      	adds	r2, r7, r0
 8013942:	6013      	str	r3, [r2, #0]
 8013944:	2301      	movs	r3, #1
 8013946:	667b      	str	r3, [r7, #100]	@ 0x64
 8013948:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801394a:	f383 8810 	msr	PRIMASK, r3
 801394e:	46c0      	nop			@ (mov r8, r8)
 8013950:	687b      	ldr	r3, [r7, #4]
 8013952:	681b      	ldr	r3, [r3, #0]
 8013954:	689a      	ldr	r2, [r3, #8]
 8013956:	687b      	ldr	r3, [r7, #4]
 8013958:	681b      	ldr	r3, [r3, #0]
 801395a:	2140      	movs	r1, #64	@ 0x40
 801395c:	438a      	bics	r2, r1
 801395e:	609a      	str	r2, [r3, #8]
 8013960:	183b      	adds	r3, r7, r0
 8013962:	681b      	ldr	r3, [r3, #0]
 8013964:	66bb      	str	r3, [r7, #104]	@ 0x68
 8013966:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8013968:	f383 8810 	msr	PRIMASK, r3
 801396c:	46c0      	nop			@ (mov r8, r8)
 801396e:	687b      	ldr	r3, [r7, #4]
 8013970:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013972:	2b00      	cmp	r3, #0
 8013974:	d012      	beq.n	801399c <HAL_UART_IRQHandler+0x288>
 8013976:	687b      	ldr	r3, [r7, #4]
 8013978:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801397a:	4a16      	ldr	r2, [pc, #88]	@ (80139d4 <HAL_UART_IRQHandler+0x2c0>)
 801397c:	639a      	str	r2, [r3, #56]	@ 0x38
 801397e:	687b      	ldr	r3, [r7, #4]
 8013980:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013982:	0018      	movs	r0, r3
 8013984:	f7fa fc08 	bl	800e198 <HAL_DMA_Abort_IT>
 8013988:	1e03      	subs	r3, r0, #0
 801398a:	d01a      	beq.n	80139c2 <HAL_UART_IRQHandler+0x2ae>
 801398c:	687b      	ldr	r3, [r7, #4]
 801398e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013990:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8013992:	687b      	ldr	r3, [r7, #4]
 8013994:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013996:	0018      	movs	r0, r3
 8013998:	4790      	blx	r2
 801399a:	e012      	b.n	80139c2 <HAL_UART_IRQHandler+0x2ae>
 801399c:	687b      	ldr	r3, [r7, #4]
 801399e:	0018      	movs	r0, r3
 80139a0:	f7f0 fb38 	bl	8004014 <HAL_UART_ErrorCallback>
 80139a4:	e00d      	b.n	80139c2 <HAL_UART_IRQHandler+0x2ae>
 80139a6:	687b      	ldr	r3, [r7, #4]
 80139a8:	0018      	movs	r0, r3
 80139aa:	f7f0 fb33 	bl	8004014 <HAL_UART_ErrorCallback>
 80139ae:	e008      	b.n	80139c2 <HAL_UART_IRQHandler+0x2ae>
 80139b0:	687b      	ldr	r3, [r7, #4]
 80139b2:	0018      	movs	r0, r3
 80139b4:	f7f0 fb2e 	bl	8004014 <HAL_UART_ErrorCallback>
 80139b8:	687b      	ldr	r3, [r7, #4]
 80139ba:	228c      	movs	r2, #140	@ 0x8c
 80139bc:	2100      	movs	r1, #0
 80139be:	5099      	str	r1, [r3, r2]
 80139c0:	e1b1      	b.n	8013d26 <HAL_UART_IRQHandler+0x612>
 80139c2:	46c0      	nop			@ (mov r8, r8)
 80139c4:	e1af      	b.n	8013d26 <HAL_UART_IRQHandler+0x612>
 80139c6:	46c0      	nop			@ (mov r8, r8)
 80139c8:	0000080f 	.word	0x0000080f
 80139cc:	10000001 	.word	0x10000001
 80139d0:	04000120 	.word	0x04000120
 80139d4:	08014d67 	.word	0x08014d67
 80139d8:	687b      	ldr	r3, [r7, #4]
 80139da:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80139dc:	2b01      	cmp	r3, #1
 80139de:	d000      	beq.n	80139e2 <HAL_UART_IRQHandler+0x2ce>
 80139e0:	e135      	b.n	8013c4e <HAL_UART_IRQHandler+0x53a>
 80139e2:	23a4      	movs	r3, #164	@ 0xa4
 80139e4:	18fb      	adds	r3, r7, r3
 80139e6:	681b      	ldr	r3, [r3, #0]
 80139e8:	2210      	movs	r2, #16
 80139ea:	4013      	ands	r3, r2
 80139ec:	d100      	bne.n	80139f0 <HAL_UART_IRQHandler+0x2dc>
 80139ee:	e12e      	b.n	8013c4e <HAL_UART_IRQHandler+0x53a>
 80139f0:	23a0      	movs	r3, #160	@ 0xa0
 80139f2:	18fb      	adds	r3, r7, r3
 80139f4:	681b      	ldr	r3, [r3, #0]
 80139f6:	2210      	movs	r2, #16
 80139f8:	4013      	ands	r3, r2
 80139fa:	d100      	bne.n	80139fe <HAL_UART_IRQHandler+0x2ea>
 80139fc:	e127      	b.n	8013c4e <HAL_UART_IRQHandler+0x53a>
 80139fe:	687b      	ldr	r3, [r7, #4]
 8013a00:	681b      	ldr	r3, [r3, #0]
 8013a02:	2210      	movs	r2, #16
 8013a04:	621a      	str	r2, [r3, #32]
 8013a06:	687b      	ldr	r3, [r7, #4]
 8013a08:	681b      	ldr	r3, [r3, #0]
 8013a0a:	689b      	ldr	r3, [r3, #8]
 8013a0c:	2240      	movs	r2, #64	@ 0x40
 8013a0e:	4013      	ands	r3, r2
 8013a10:	2b40      	cmp	r3, #64	@ 0x40
 8013a12:	d000      	beq.n	8013a16 <HAL_UART_IRQHandler+0x302>
 8013a14:	e09e      	b.n	8013b54 <HAL_UART_IRQHandler+0x440>
 8013a16:	687b      	ldr	r3, [r7, #4]
 8013a18:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013a1a:	681b      	ldr	r3, [r3, #0]
 8013a1c:	685a      	ldr	r2, [r3, #4]
 8013a1e:	217e      	movs	r1, #126	@ 0x7e
 8013a20:	187b      	adds	r3, r7, r1
 8013a22:	801a      	strh	r2, [r3, #0]
 8013a24:	187b      	adds	r3, r7, r1
 8013a26:	881b      	ldrh	r3, [r3, #0]
 8013a28:	2b00      	cmp	r3, #0
 8013a2a:	d100      	bne.n	8013a2e <HAL_UART_IRQHandler+0x31a>
 8013a2c:	e17d      	b.n	8013d2a <HAL_UART_IRQHandler+0x616>
 8013a2e:	687b      	ldr	r3, [r7, #4]
 8013a30:	225c      	movs	r2, #92	@ 0x5c
 8013a32:	5a9b      	ldrh	r3, [r3, r2]
 8013a34:	187a      	adds	r2, r7, r1
 8013a36:	8812      	ldrh	r2, [r2, #0]
 8013a38:	429a      	cmp	r2, r3
 8013a3a:	d300      	bcc.n	8013a3e <HAL_UART_IRQHandler+0x32a>
 8013a3c:	e175      	b.n	8013d2a <HAL_UART_IRQHandler+0x616>
 8013a3e:	687b      	ldr	r3, [r7, #4]
 8013a40:	187a      	adds	r2, r7, r1
 8013a42:	215e      	movs	r1, #94	@ 0x5e
 8013a44:	8812      	ldrh	r2, [r2, #0]
 8013a46:	525a      	strh	r2, [r3, r1]
 8013a48:	687b      	ldr	r3, [r7, #4]
 8013a4a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013a4c:	681b      	ldr	r3, [r3, #0]
 8013a4e:	681b      	ldr	r3, [r3, #0]
 8013a50:	2220      	movs	r2, #32
 8013a52:	4013      	ands	r3, r2
 8013a54:	d16f      	bne.n	8013b36 <HAL_UART_IRQHandler+0x422>
 8013a56:	f3ef 8310 	mrs	r3, PRIMASK
 8013a5a:	633b      	str	r3, [r7, #48]	@ 0x30
 8013a5c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8013a5e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8013a60:	2301      	movs	r3, #1
 8013a62:	637b      	str	r3, [r7, #52]	@ 0x34
 8013a64:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8013a66:	f383 8810 	msr	PRIMASK, r3
 8013a6a:	46c0      	nop			@ (mov r8, r8)
 8013a6c:	687b      	ldr	r3, [r7, #4]
 8013a6e:	681b      	ldr	r3, [r3, #0]
 8013a70:	681a      	ldr	r2, [r3, #0]
 8013a72:	687b      	ldr	r3, [r7, #4]
 8013a74:	681b      	ldr	r3, [r3, #0]
 8013a76:	49b1      	ldr	r1, [pc, #708]	@ (8013d3c <HAL_UART_IRQHandler+0x628>)
 8013a78:	400a      	ands	r2, r1
 8013a7a:	601a      	str	r2, [r3, #0]
 8013a7c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8013a7e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8013a80:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013a82:	f383 8810 	msr	PRIMASK, r3
 8013a86:	46c0      	nop			@ (mov r8, r8)
 8013a88:	f3ef 8310 	mrs	r3, PRIMASK
 8013a8c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013a8e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8013a90:	677b      	str	r3, [r7, #116]	@ 0x74
 8013a92:	2301      	movs	r3, #1
 8013a94:	643b      	str	r3, [r7, #64]	@ 0x40
 8013a96:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8013a98:	f383 8810 	msr	PRIMASK, r3
 8013a9c:	46c0      	nop			@ (mov r8, r8)
 8013a9e:	687b      	ldr	r3, [r7, #4]
 8013aa0:	681b      	ldr	r3, [r3, #0]
 8013aa2:	689a      	ldr	r2, [r3, #8]
 8013aa4:	687b      	ldr	r3, [r7, #4]
 8013aa6:	681b      	ldr	r3, [r3, #0]
 8013aa8:	2101      	movs	r1, #1
 8013aaa:	438a      	bics	r2, r1
 8013aac:	609a      	str	r2, [r3, #8]
 8013aae:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8013ab0:	647b      	str	r3, [r7, #68]	@ 0x44
 8013ab2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8013ab4:	f383 8810 	msr	PRIMASK, r3
 8013ab8:	46c0      	nop			@ (mov r8, r8)
 8013aba:	f3ef 8310 	mrs	r3, PRIMASK
 8013abe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8013ac0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8013ac2:	673b      	str	r3, [r7, #112]	@ 0x70
 8013ac4:	2301      	movs	r3, #1
 8013ac6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8013ac8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013aca:	f383 8810 	msr	PRIMASK, r3
 8013ace:	46c0      	nop			@ (mov r8, r8)
 8013ad0:	687b      	ldr	r3, [r7, #4]
 8013ad2:	681b      	ldr	r3, [r3, #0]
 8013ad4:	689a      	ldr	r2, [r3, #8]
 8013ad6:	687b      	ldr	r3, [r7, #4]
 8013ad8:	681b      	ldr	r3, [r3, #0]
 8013ada:	2140      	movs	r1, #64	@ 0x40
 8013adc:	438a      	bics	r2, r1
 8013ade:	609a      	str	r2, [r3, #8]
 8013ae0:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8013ae2:	653b      	str	r3, [r7, #80]	@ 0x50
 8013ae4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8013ae6:	f383 8810 	msr	PRIMASK, r3
 8013aea:	46c0      	nop			@ (mov r8, r8)
 8013aec:	687b      	ldr	r3, [r7, #4]
 8013aee:	2288      	movs	r2, #136	@ 0x88
 8013af0:	2120      	movs	r1, #32
 8013af2:	5099      	str	r1, [r3, r2]
 8013af4:	687b      	ldr	r3, [r7, #4]
 8013af6:	2200      	movs	r2, #0
 8013af8:	66da      	str	r2, [r3, #108]	@ 0x6c
 8013afa:	f3ef 8310 	mrs	r3, PRIMASK
 8013afe:	657b      	str	r3, [r7, #84]	@ 0x54
 8013b00:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8013b02:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8013b04:	2301      	movs	r3, #1
 8013b06:	65bb      	str	r3, [r7, #88]	@ 0x58
 8013b08:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8013b0a:	f383 8810 	msr	PRIMASK, r3
 8013b0e:	46c0      	nop			@ (mov r8, r8)
 8013b10:	687b      	ldr	r3, [r7, #4]
 8013b12:	681b      	ldr	r3, [r3, #0]
 8013b14:	681a      	ldr	r2, [r3, #0]
 8013b16:	687b      	ldr	r3, [r7, #4]
 8013b18:	681b      	ldr	r3, [r3, #0]
 8013b1a:	2110      	movs	r1, #16
 8013b1c:	438a      	bics	r2, r1
 8013b1e:	601a      	str	r2, [r3, #0]
 8013b20:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8013b22:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8013b24:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8013b26:	f383 8810 	msr	PRIMASK, r3
 8013b2a:	46c0      	nop			@ (mov r8, r8)
 8013b2c:	687b      	ldr	r3, [r7, #4]
 8013b2e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013b30:	0018      	movs	r0, r3
 8013b32:	f7fa facf 	bl	800e0d4 <HAL_DMA_Abort>
 8013b36:	687b      	ldr	r3, [r7, #4]
 8013b38:	225c      	movs	r2, #92	@ 0x5c
 8013b3a:	5a9a      	ldrh	r2, [r3, r2]
 8013b3c:	687b      	ldr	r3, [r7, #4]
 8013b3e:	215e      	movs	r1, #94	@ 0x5e
 8013b40:	5a5b      	ldrh	r3, [r3, r1]
 8013b42:	b29b      	uxth	r3, r3
 8013b44:	1ad3      	subs	r3, r2, r3
 8013b46:	b29a      	uxth	r2, r3
 8013b48:	687b      	ldr	r3, [r7, #4]
 8013b4a:	0011      	movs	r1, r2
 8013b4c:	0018      	movs	r0, r3
 8013b4e:	f000 f90b 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 8013b52:	e0ea      	b.n	8013d2a <HAL_UART_IRQHandler+0x616>
 8013b54:	687b      	ldr	r3, [r7, #4]
 8013b56:	225c      	movs	r2, #92	@ 0x5c
 8013b58:	5a99      	ldrh	r1, [r3, r2]
 8013b5a:	687b      	ldr	r3, [r7, #4]
 8013b5c:	225e      	movs	r2, #94	@ 0x5e
 8013b5e:	5a9b      	ldrh	r3, [r3, r2]
 8013b60:	b29a      	uxth	r2, r3
 8013b62:	208e      	movs	r0, #142	@ 0x8e
 8013b64:	183b      	adds	r3, r7, r0
 8013b66:	1a8a      	subs	r2, r1, r2
 8013b68:	801a      	strh	r2, [r3, #0]
 8013b6a:	687b      	ldr	r3, [r7, #4]
 8013b6c:	225e      	movs	r2, #94	@ 0x5e
 8013b6e:	5a9b      	ldrh	r3, [r3, r2]
 8013b70:	b29b      	uxth	r3, r3
 8013b72:	2b00      	cmp	r3, #0
 8013b74:	d100      	bne.n	8013b78 <HAL_UART_IRQHandler+0x464>
 8013b76:	e0da      	b.n	8013d2e <HAL_UART_IRQHandler+0x61a>
 8013b78:	183b      	adds	r3, r7, r0
 8013b7a:	881b      	ldrh	r3, [r3, #0]
 8013b7c:	2b00      	cmp	r3, #0
 8013b7e:	d100      	bne.n	8013b82 <HAL_UART_IRQHandler+0x46e>
 8013b80:	e0d5      	b.n	8013d2e <HAL_UART_IRQHandler+0x61a>
 8013b82:	f3ef 8310 	mrs	r3, PRIMASK
 8013b86:	60fb      	str	r3, [r7, #12]
 8013b88:	68fb      	ldr	r3, [r7, #12]
 8013b8a:	2488      	movs	r4, #136	@ 0x88
 8013b8c:	193a      	adds	r2, r7, r4
 8013b8e:	6013      	str	r3, [r2, #0]
 8013b90:	2301      	movs	r3, #1
 8013b92:	613b      	str	r3, [r7, #16]
 8013b94:	693b      	ldr	r3, [r7, #16]
 8013b96:	f383 8810 	msr	PRIMASK, r3
 8013b9a:	46c0      	nop			@ (mov r8, r8)
 8013b9c:	687b      	ldr	r3, [r7, #4]
 8013b9e:	681b      	ldr	r3, [r3, #0]
 8013ba0:	681a      	ldr	r2, [r3, #0]
 8013ba2:	687b      	ldr	r3, [r7, #4]
 8013ba4:	681b      	ldr	r3, [r3, #0]
 8013ba6:	4966      	ldr	r1, [pc, #408]	@ (8013d40 <HAL_UART_IRQHandler+0x62c>)
 8013ba8:	400a      	ands	r2, r1
 8013baa:	601a      	str	r2, [r3, #0]
 8013bac:	193b      	adds	r3, r7, r4
 8013bae:	681b      	ldr	r3, [r3, #0]
 8013bb0:	617b      	str	r3, [r7, #20]
 8013bb2:	697b      	ldr	r3, [r7, #20]
 8013bb4:	f383 8810 	msr	PRIMASK, r3
 8013bb8:	46c0      	nop			@ (mov r8, r8)
 8013bba:	f3ef 8310 	mrs	r3, PRIMASK
 8013bbe:	61bb      	str	r3, [r7, #24]
 8013bc0:	69bb      	ldr	r3, [r7, #24]
 8013bc2:	2484      	movs	r4, #132	@ 0x84
 8013bc4:	193a      	adds	r2, r7, r4
 8013bc6:	6013      	str	r3, [r2, #0]
 8013bc8:	2301      	movs	r3, #1
 8013bca:	61fb      	str	r3, [r7, #28]
 8013bcc:	69fb      	ldr	r3, [r7, #28]
 8013bce:	f383 8810 	msr	PRIMASK, r3
 8013bd2:	46c0      	nop			@ (mov r8, r8)
 8013bd4:	687b      	ldr	r3, [r7, #4]
 8013bd6:	681b      	ldr	r3, [r3, #0]
 8013bd8:	689a      	ldr	r2, [r3, #8]
 8013bda:	687b      	ldr	r3, [r7, #4]
 8013bdc:	681b      	ldr	r3, [r3, #0]
 8013bde:	4959      	ldr	r1, [pc, #356]	@ (8013d44 <HAL_UART_IRQHandler+0x630>)
 8013be0:	400a      	ands	r2, r1
 8013be2:	609a      	str	r2, [r3, #8]
 8013be4:	193b      	adds	r3, r7, r4
 8013be6:	681b      	ldr	r3, [r3, #0]
 8013be8:	623b      	str	r3, [r7, #32]
 8013bea:	6a3b      	ldr	r3, [r7, #32]
 8013bec:	f383 8810 	msr	PRIMASK, r3
 8013bf0:	46c0      	nop			@ (mov r8, r8)
 8013bf2:	687b      	ldr	r3, [r7, #4]
 8013bf4:	2288      	movs	r2, #136	@ 0x88
 8013bf6:	2120      	movs	r1, #32
 8013bf8:	5099      	str	r1, [r3, r2]
 8013bfa:	687b      	ldr	r3, [r7, #4]
 8013bfc:	2200      	movs	r2, #0
 8013bfe:	66da      	str	r2, [r3, #108]	@ 0x6c
 8013c00:	687b      	ldr	r3, [r7, #4]
 8013c02:	2200      	movs	r2, #0
 8013c04:	671a      	str	r2, [r3, #112]	@ 0x70
 8013c06:	f3ef 8310 	mrs	r3, PRIMASK
 8013c0a:	627b      	str	r3, [r7, #36]	@ 0x24
 8013c0c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013c0e:	2480      	movs	r4, #128	@ 0x80
 8013c10:	193a      	adds	r2, r7, r4
 8013c12:	6013      	str	r3, [r2, #0]
 8013c14:	2301      	movs	r3, #1
 8013c16:	62bb      	str	r3, [r7, #40]	@ 0x28
 8013c18:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8013c1a:	f383 8810 	msr	PRIMASK, r3
 8013c1e:	46c0      	nop			@ (mov r8, r8)
 8013c20:	687b      	ldr	r3, [r7, #4]
 8013c22:	681b      	ldr	r3, [r3, #0]
 8013c24:	681a      	ldr	r2, [r3, #0]
 8013c26:	687b      	ldr	r3, [r7, #4]
 8013c28:	681b      	ldr	r3, [r3, #0]
 8013c2a:	2110      	movs	r1, #16
 8013c2c:	438a      	bics	r2, r1
 8013c2e:	601a      	str	r2, [r3, #0]
 8013c30:	193b      	adds	r3, r7, r4
 8013c32:	681b      	ldr	r3, [r3, #0]
 8013c34:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013c36:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013c38:	f383 8810 	msr	PRIMASK, r3
 8013c3c:	46c0      	nop			@ (mov r8, r8)
 8013c3e:	183b      	adds	r3, r7, r0
 8013c40:	881a      	ldrh	r2, [r3, #0]
 8013c42:	687b      	ldr	r3, [r7, #4]
 8013c44:	0011      	movs	r1, r2
 8013c46:	0018      	movs	r0, r3
 8013c48:	f000 f88e 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 8013c4c:	e06f      	b.n	8013d2e <HAL_UART_IRQHandler+0x61a>
 8013c4e:	23a4      	movs	r3, #164	@ 0xa4
 8013c50:	18fb      	adds	r3, r7, r3
 8013c52:	681a      	ldr	r2, [r3, #0]
 8013c54:	2380      	movs	r3, #128	@ 0x80
 8013c56:	035b      	lsls	r3, r3, #13
 8013c58:	4013      	ands	r3, r2
 8013c5a:	d010      	beq.n	8013c7e <HAL_UART_IRQHandler+0x56a>
 8013c5c:	239c      	movs	r3, #156	@ 0x9c
 8013c5e:	18fb      	adds	r3, r7, r3
 8013c60:	681a      	ldr	r2, [r3, #0]
 8013c62:	2380      	movs	r3, #128	@ 0x80
 8013c64:	03db      	lsls	r3, r3, #15
 8013c66:	4013      	ands	r3, r2
 8013c68:	d009      	beq.n	8013c7e <HAL_UART_IRQHandler+0x56a>
 8013c6a:	687b      	ldr	r3, [r7, #4]
 8013c6c:	681b      	ldr	r3, [r3, #0]
 8013c6e:	2280      	movs	r2, #128	@ 0x80
 8013c70:	0352      	lsls	r2, r2, #13
 8013c72:	621a      	str	r2, [r3, #32]
 8013c74:	687b      	ldr	r3, [r7, #4]
 8013c76:	0018      	movs	r0, r3
 8013c78:	f001 fd08 	bl	801568c <HAL_UARTEx_WakeupCallback>
 8013c7c:	e05a      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013c7e:	23a4      	movs	r3, #164	@ 0xa4
 8013c80:	18fb      	adds	r3, r7, r3
 8013c82:	681b      	ldr	r3, [r3, #0]
 8013c84:	2280      	movs	r2, #128	@ 0x80
 8013c86:	4013      	ands	r3, r2
 8013c88:	d016      	beq.n	8013cb8 <HAL_UART_IRQHandler+0x5a4>
 8013c8a:	23a0      	movs	r3, #160	@ 0xa0
 8013c8c:	18fb      	adds	r3, r7, r3
 8013c8e:	681b      	ldr	r3, [r3, #0]
 8013c90:	2280      	movs	r2, #128	@ 0x80
 8013c92:	4013      	ands	r3, r2
 8013c94:	d106      	bne.n	8013ca4 <HAL_UART_IRQHandler+0x590>
 8013c96:	239c      	movs	r3, #156	@ 0x9c
 8013c98:	18fb      	adds	r3, r7, r3
 8013c9a:	681a      	ldr	r2, [r3, #0]
 8013c9c:	2380      	movs	r3, #128	@ 0x80
 8013c9e:	041b      	lsls	r3, r3, #16
 8013ca0:	4013      	ands	r3, r2
 8013ca2:	d009      	beq.n	8013cb8 <HAL_UART_IRQHandler+0x5a4>
 8013ca4:	687b      	ldr	r3, [r7, #4]
 8013ca6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8013ca8:	2b00      	cmp	r3, #0
 8013caa:	d042      	beq.n	8013d32 <HAL_UART_IRQHandler+0x61e>
 8013cac:	687b      	ldr	r3, [r7, #4]
 8013cae:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8013cb0:	687a      	ldr	r2, [r7, #4]
 8013cb2:	0010      	movs	r0, r2
 8013cb4:	4798      	blx	r3
 8013cb6:	e03c      	b.n	8013d32 <HAL_UART_IRQHandler+0x61e>
 8013cb8:	23a4      	movs	r3, #164	@ 0xa4
 8013cba:	18fb      	adds	r3, r7, r3
 8013cbc:	681b      	ldr	r3, [r3, #0]
 8013cbe:	2240      	movs	r2, #64	@ 0x40
 8013cc0:	4013      	ands	r3, r2
 8013cc2:	d00a      	beq.n	8013cda <HAL_UART_IRQHandler+0x5c6>
 8013cc4:	23a0      	movs	r3, #160	@ 0xa0
 8013cc6:	18fb      	adds	r3, r7, r3
 8013cc8:	681b      	ldr	r3, [r3, #0]
 8013cca:	2240      	movs	r2, #64	@ 0x40
 8013ccc:	4013      	ands	r3, r2
 8013cce:	d004      	beq.n	8013cda <HAL_UART_IRQHandler+0x5c6>
 8013cd0:	687b      	ldr	r3, [r7, #4]
 8013cd2:	0018      	movs	r0, r3
 8013cd4:	f001 f85e 	bl	8014d94 <UART_EndTransmit_IT>
 8013cd8:	e02c      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013cda:	23a4      	movs	r3, #164	@ 0xa4
 8013cdc:	18fb      	adds	r3, r7, r3
 8013cde:	681a      	ldr	r2, [r3, #0]
 8013ce0:	2380      	movs	r3, #128	@ 0x80
 8013ce2:	041b      	lsls	r3, r3, #16
 8013ce4:	4013      	ands	r3, r2
 8013ce6:	d00b      	beq.n	8013d00 <HAL_UART_IRQHandler+0x5ec>
 8013ce8:	23a0      	movs	r3, #160	@ 0xa0
 8013cea:	18fb      	adds	r3, r7, r3
 8013cec:	681a      	ldr	r2, [r3, #0]
 8013cee:	2380      	movs	r3, #128	@ 0x80
 8013cf0:	05db      	lsls	r3, r3, #23
 8013cf2:	4013      	ands	r3, r2
 8013cf4:	d004      	beq.n	8013d00 <HAL_UART_IRQHandler+0x5ec>
 8013cf6:	687b      	ldr	r3, [r7, #4]
 8013cf8:	0018      	movs	r0, r3
 8013cfa:	f001 fcd7 	bl	80156ac <HAL_UARTEx_TxFifoEmptyCallback>
 8013cfe:	e019      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d00:	23a4      	movs	r3, #164	@ 0xa4
 8013d02:	18fb      	adds	r3, r7, r3
 8013d04:	681a      	ldr	r2, [r3, #0]
 8013d06:	2380      	movs	r3, #128	@ 0x80
 8013d08:	045b      	lsls	r3, r3, #17
 8013d0a:	4013      	ands	r3, r2
 8013d0c:	d012      	beq.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d0e:	23a0      	movs	r3, #160	@ 0xa0
 8013d10:	18fb      	adds	r3, r7, r3
 8013d12:	681b      	ldr	r3, [r3, #0]
 8013d14:	2b00      	cmp	r3, #0
 8013d16:	da0d      	bge.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d18:	687b      	ldr	r3, [r7, #4]
 8013d1a:	0018      	movs	r0, r3
 8013d1c:	f001 fcbe 	bl	801569c <HAL_UARTEx_RxFifoFullCallback>
 8013d20:	e008      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d22:	46c0      	nop			@ (mov r8, r8)
 8013d24:	e006      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d26:	46c0      	nop			@ (mov r8, r8)
 8013d28:	e004      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d2a:	46c0      	nop			@ (mov r8, r8)
 8013d2c:	e002      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d2e:	46c0      	nop			@ (mov r8, r8)
 8013d30:	e000      	b.n	8013d34 <HAL_UART_IRQHandler+0x620>
 8013d32:	46c0      	nop			@ (mov r8, r8)
 8013d34:	46bd      	mov	sp, r7
 8013d36:	b02a      	add	sp, #168	@ 0xa8
 8013d38:	bdb0      	pop	{r4, r5, r7, pc}
 8013d3a:	46c0      	nop			@ (mov r8, r8)
 8013d3c:	fffffeff 	.word	0xfffffeff
 8013d40:	fffffedf 	.word	0xfffffedf
 8013d44:	effffffe 	.word	0xeffffffe

08013d48 <HAL_UART_TxCpltCallback>:
 8013d48:	b580      	push	{r7, lr}
 8013d4a:	b082      	sub	sp, #8
 8013d4c:	af00      	add	r7, sp, #0
 8013d4e:	6078      	str	r0, [r7, #4]
 8013d50:	46c0      	nop			@ (mov r8, r8)
 8013d52:	46bd      	mov	sp, r7
 8013d54:	b002      	add	sp, #8
 8013d56:	bd80      	pop	{r7, pc}

08013d58 <HAL_UART_RxHalfCpltCallback>:
 8013d58:	b580      	push	{r7, lr}
 8013d5a:	b082      	sub	sp, #8
 8013d5c:	af00      	add	r7, sp, #0
 8013d5e:	6078      	str	r0, [r7, #4]
 8013d60:	46c0      	nop			@ (mov r8, r8)
 8013d62:	46bd      	mov	sp, r7
 8013d64:	b002      	add	sp, #8
 8013d66:	bd80      	pop	{r7, pc}

08013d68 <HAL_UARTEx_RxEventCallback>:
 8013d68:	b580      	push	{r7, lr}
 8013d6a:	b082      	sub	sp, #8
 8013d6c:	af00      	add	r7, sp, #0
 8013d6e:	6078      	str	r0, [r7, #4]
 8013d70:	000a      	movs	r2, r1
 8013d72:	1cbb      	adds	r3, r7, #2
 8013d74:	801a      	strh	r2, [r3, #0]
 8013d76:	46c0      	nop			@ (mov r8, r8)
 8013d78:	46bd      	mov	sp, r7
 8013d7a:	b002      	add	sp, #8
 8013d7c:	bd80      	pop	{r7, pc}
	...

08013d80 <UART_SetConfig>:
 8013d80:	b5b0      	push	{r4, r5, r7, lr}
 8013d82:	b090      	sub	sp, #64	@ 0x40
 8013d84:	af00      	add	r7, sp, #0
 8013d86:	6278      	str	r0, [r7, #36]	@ 0x24
 8013d88:	231a      	movs	r3, #26
 8013d8a:	2220      	movs	r2, #32
 8013d8c:	189b      	adds	r3, r3, r2
 8013d8e:	19db      	adds	r3, r3, r7
 8013d90:	2200      	movs	r2, #0
 8013d92:	701a      	strb	r2, [r3, #0]
 8013d94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013d96:	689a      	ldr	r2, [r3, #8]
 8013d98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013d9a:	691b      	ldr	r3, [r3, #16]
 8013d9c:	431a      	orrs	r2, r3
 8013d9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013da0:	695b      	ldr	r3, [r3, #20]
 8013da2:	431a      	orrs	r2, r3
 8013da4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013da6:	69db      	ldr	r3, [r3, #28]
 8013da8:	4313      	orrs	r3, r2
 8013daa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013dac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013dae:	681b      	ldr	r3, [r3, #0]
 8013db0:	681b      	ldr	r3, [r3, #0]
 8013db2:	4aaf      	ldr	r2, [pc, #700]	@ (8014070 <UART_SetConfig+0x2f0>)
 8013db4:	4013      	ands	r3, r2
 8013db6:	0019      	movs	r1, r3
 8013db8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013dba:	681a      	ldr	r2, [r3, #0]
 8013dbc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8013dbe:	430b      	orrs	r3, r1
 8013dc0:	6013      	str	r3, [r2, #0]
 8013dc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013dc4:	681b      	ldr	r3, [r3, #0]
 8013dc6:	685b      	ldr	r3, [r3, #4]
 8013dc8:	4aaa      	ldr	r2, [pc, #680]	@ (8014074 <UART_SetConfig+0x2f4>)
 8013dca:	4013      	ands	r3, r2
 8013dcc:	0018      	movs	r0, r3
 8013dce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013dd0:	68d9      	ldr	r1, [r3, #12]
 8013dd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013dd4:	681a      	ldr	r2, [r3, #0]
 8013dd6:	0003      	movs	r3, r0
 8013dd8:	430b      	orrs	r3, r1
 8013dda:	6053      	str	r3, [r2, #4]
 8013ddc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013dde:	699b      	ldr	r3, [r3, #24]
 8013de0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013de2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013de4:	681b      	ldr	r3, [r3, #0]
 8013de6:	4aa4      	ldr	r2, [pc, #656]	@ (8014078 <UART_SetConfig+0x2f8>)
 8013de8:	4293      	cmp	r3, r2
 8013dea:	d004      	beq.n	8013df6 <UART_SetConfig+0x76>
 8013dec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013dee:	6a1b      	ldr	r3, [r3, #32]
 8013df0:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8013df2:	4313      	orrs	r3, r2
 8013df4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013df6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013df8:	681b      	ldr	r3, [r3, #0]
 8013dfa:	689b      	ldr	r3, [r3, #8]
 8013dfc:	4a9f      	ldr	r2, [pc, #636]	@ (801407c <UART_SetConfig+0x2fc>)
 8013dfe:	4013      	ands	r3, r2
 8013e00:	0019      	movs	r1, r3
 8013e02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013e04:	681a      	ldr	r2, [r3, #0]
 8013e06:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8013e08:	430b      	orrs	r3, r1
 8013e0a:	6093      	str	r3, [r2, #8]
 8013e0c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013e0e:	681b      	ldr	r3, [r3, #0]
 8013e10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013e12:	220f      	movs	r2, #15
 8013e14:	4393      	bics	r3, r2
 8013e16:	0018      	movs	r0, r3
 8013e18:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013e1a:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8013e1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013e1e:	681a      	ldr	r2, [r3, #0]
 8013e20:	0003      	movs	r3, r0
 8013e22:	430b      	orrs	r3, r1
 8013e24:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8013e26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013e28:	681b      	ldr	r3, [r3, #0]
 8013e2a:	4a95      	ldr	r2, [pc, #596]	@ (8014080 <UART_SetConfig+0x300>)
 8013e2c:	4293      	cmp	r3, r2
 8013e2e:	d131      	bne.n	8013e94 <UART_SetConfig+0x114>
 8013e30:	4b94      	ldr	r3, [pc, #592]	@ (8014084 <UART_SetConfig+0x304>)
 8013e32:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013e34:	2203      	movs	r2, #3
 8013e36:	4013      	ands	r3, r2
 8013e38:	2b03      	cmp	r3, #3
 8013e3a:	d01d      	beq.n	8013e78 <UART_SetConfig+0xf8>
 8013e3c:	d823      	bhi.n	8013e86 <UART_SetConfig+0x106>
 8013e3e:	2b02      	cmp	r3, #2
 8013e40:	d00c      	beq.n	8013e5c <UART_SetConfig+0xdc>
 8013e42:	d820      	bhi.n	8013e86 <UART_SetConfig+0x106>
 8013e44:	2b00      	cmp	r3, #0
 8013e46:	d002      	beq.n	8013e4e <UART_SetConfig+0xce>
 8013e48:	2b01      	cmp	r3, #1
 8013e4a:	d00e      	beq.n	8013e6a <UART_SetConfig+0xea>
 8013e4c:	e01b      	b.n	8013e86 <UART_SetConfig+0x106>
 8013e4e:	231b      	movs	r3, #27
 8013e50:	2220      	movs	r2, #32
 8013e52:	189b      	adds	r3, r3, r2
 8013e54:	19db      	adds	r3, r3, r7
 8013e56:	2200      	movs	r2, #0
 8013e58:	701a      	strb	r2, [r3, #0]
 8013e5a:	e0b4      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013e5c:	231b      	movs	r3, #27
 8013e5e:	2220      	movs	r2, #32
 8013e60:	189b      	adds	r3, r3, r2
 8013e62:	19db      	adds	r3, r3, r7
 8013e64:	2202      	movs	r2, #2
 8013e66:	701a      	strb	r2, [r3, #0]
 8013e68:	e0ad      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013e6a:	231b      	movs	r3, #27
 8013e6c:	2220      	movs	r2, #32
 8013e6e:	189b      	adds	r3, r3, r2
 8013e70:	19db      	adds	r3, r3, r7
 8013e72:	2204      	movs	r2, #4
 8013e74:	701a      	strb	r2, [r3, #0]
 8013e76:	e0a6      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013e78:	231b      	movs	r3, #27
 8013e7a:	2220      	movs	r2, #32
 8013e7c:	189b      	adds	r3, r3, r2
 8013e7e:	19db      	adds	r3, r3, r7
 8013e80:	2208      	movs	r2, #8
 8013e82:	701a      	strb	r2, [r3, #0]
 8013e84:	e09f      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013e86:	231b      	movs	r3, #27
 8013e88:	2220      	movs	r2, #32
 8013e8a:	189b      	adds	r3, r3, r2
 8013e8c:	19db      	adds	r3, r3, r7
 8013e8e:	2210      	movs	r2, #16
 8013e90:	701a      	strb	r2, [r3, #0]
 8013e92:	e098      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013e94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013e96:	681b      	ldr	r3, [r3, #0]
 8013e98:	4a7b      	ldr	r2, [pc, #492]	@ (8014088 <UART_SetConfig+0x308>)
 8013e9a:	4293      	cmp	r3, r2
 8013e9c:	d131      	bne.n	8013f02 <UART_SetConfig+0x182>
 8013e9e:	4b79      	ldr	r3, [pc, #484]	@ (8014084 <UART_SetConfig+0x304>)
 8013ea0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013ea2:	220c      	movs	r2, #12
 8013ea4:	4013      	ands	r3, r2
 8013ea6:	2b0c      	cmp	r3, #12
 8013ea8:	d01d      	beq.n	8013ee6 <UART_SetConfig+0x166>
 8013eaa:	d823      	bhi.n	8013ef4 <UART_SetConfig+0x174>
 8013eac:	2b08      	cmp	r3, #8
 8013eae:	d00c      	beq.n	8013eca <UART_SetConfig+0x14a>
 8013eb0:	d820      	bhi.n	8013ef4 <UART_SetConfig+0x174>
 8013eb2:	2b00      	cmp	r3, #0
 8013eb4:	d002      	beq.n	8013ebc <UART_SetConfig+0x13c>
 8013eb6:	2b04      	cmp	r3, #4
 8013eb8:	d00e      	beq.n	8013ed8 <UART_SetConfig+0x158>
 8013eba:	e01b      	b.n	8013ef4 <UART_SetConfig+0x174>
 8013ebc:	231b      	movs	r3, #27
 8013ebe:	2220      	movs	r2, #32
 8013ec0:	189b      	adds	r3, r3, r2
 8013ec2:	19db      	adds	r3, r3, r7
 8013ec4:	2200      	movs	r2, #0
 8013ec6:	701a      	strb	r2, [r3, #0]
 8013ec8:	e07d      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013eca:	231b      	movs	r3, #27
 8013ecc:	2220      	movs	r2, #32
 8013ece:	189b      	adds	r3, r3, r2
 8013ed0:	19db      	adds	r3, r3, r7
 8013ed2:	2202      	movs	r2, #2
 8013ed4:	701a      	strb	r2, [r3, #0]
 8013ed6:	e076      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013ed8:	231b      	movs	r3, #27
 8013eda:	2220      	movs	r2, #32
 8013edc:	189b      	adds	r3, r3, r2
 8013ede:	19db      	adds	r3, r3, r7
 8013ee0:	2204      	movs	r2, #4
 8013ee2:	701a      	strb	r2, [r3, #0]
 8013ee4:	e06f      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013ee6:	231b      	movs	r3, #27
 8013ee8:	2220      	movs	r2, #32
 8013eea:	189b      	adds	r3, r3, r2
 8013eec:	19db      	adds	r3, r3, r7
 8013eee:	2208      	movs	r2, #8
 8013ef0:	701a      	strb	r2, [r3, #0]
 8013ef2:	e068      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013ef4:	231b      	movs	r3, #27
 8013ef6:	2220      	movs	r2, #32
 8013ef8:	189b      	adds	r3, r3, r2
 8013efa:	19db      	adds	r3, r3, r7
 8013efc:	2210      	movs	r2, #16
 8013efe:	701a      	strb	r2, [r3, #0]
 8013f00:	e061      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013f02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013f04:	681b      	ldr	r3, [r3, #0]
 8013f06:	4a61      	ldr	r2, [pc, #388]	@ (801408c <UART_SetConfig+0x30c>)
 8013f08:	4293      	cmp	r3, r2
 8013f0a:	d106      	bne.n	8013f1a <UART_SetConfig+0x19a>
 8013f0c:	231b      	movs	r3, #27
 8013f0e:	2220      	movs	r2, #32
 8013f10:	189b      	adds	r3, r3, r2
 8013f12:	19db      	adds	r3, r3, r7
 8013f14:	2200      	movs	r2, #0
 8013f16:	701a      	strb	r2, [r3, #0]
 8013f18:	e055      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013f1a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013f1c:	681b      	ldr	r3, [r3, #0]
 8013f1e:	4a5c      	ldr	r2, [pc, #368]	@ (8014090 <UART_SetConfig+0x310>)
 8013f20:	4293      	cmp	r3, r2
 8013f22:	d106      	bne.n	8013f32 <UART_SetConfig+0x1b2>
 8013f24:	231b      	movs	r3, #27
 8013f26:	2220      	movs	r2, #32
 8013f28:	189b      	adds	r3, r3, r2
 8013f2a:	19db      	adds	r3, r3, r7
 8013f2c:	2200      	movs	r2, #0
 8013f2e:	701a      	strb	r2, [r3, #0]
 8013f30:	e049      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013f32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013f34:	681b      	ldr	r3, [r3, #0]
 8013f36:	4a50      	ldr	r2, [pc, #320]	@ (8014078 <UART_SetConfig+0x2f8>)
 8013f38:	4293      	cmp	r3, r2
 8013f3a:	d13e      	bne.n	8013fba <UART_SetConfig+0x23a>
 8013f3c:	4b51      	ldr	r3, [pc, #324]	@ (8014084 <UART_SetConfig+0x304>)
 8013f3e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8013f40:	23c0      	movs	r3, #192	@ 0xc0
 8013f42:	011b      	lsls	r3, r3, #4
 8013f44:	4013      	ands	r3, r2
 8013f46:	22c0      	movs	r2, #192	@ 0xc0
 8013f48:	0112      	lsls	r2, r2, #4
 8013f4a:	4293      	cmp	r3, r2
 8013f4c:	d027      	beq.n	8013f9e <UART_SetConfig+0x21e>
 8013f4e:	22c0      	movs	r2, #192	@ 0xc0
 8013f50:	0112      	lsls	r2, r2, #4
 8013f52:	4293      	cmp	r3, r2
 8013f54:	d82a      	bhi.n	8013fac <UART_SetConfig+0x22c>
 8013f56:	2280      	movs	r2, #128	@ 0x80
 8013f58:	0112      	lsls	r2, r2, #4
 8013f5a:	4293      	cmp	r3, r2
 8013f5c:	d011      	beq.n	8013f82 <UART_SetConfig+0x202>
 8013f5e:	2280      	movs	r2, #128	@ 0x80
 8013f60:	0112      	lsls	r2, r2, #4
 8013f62:	4293      	cmp	r3, r2
 8013f64:	d822      	bhi.n	8013fac <UART_SetConfig+0x22c>
 8013f66:	2b00      	cmp	r3, #0
 8013f68:	d004      	beq.n	8013f74 <UART_SetConfig+0x1f4>
 8013f6a:	2280      	movs	r2, #128	@ 0x80
 8013f6c:	00d2      	lsls	r2, r2, #3
 8013f6e:	4293      	cmp	r3, r2
 8013f70:	d00e      	beq.n	8013f90 <UART_SetConfig+0x210>
 8013f72:	e01b      	b.n	8013fac <UART_SetConfig+0x22c>
 8013f74:	231b      	movs	r3, #27
 8013f76:	2220      	movs	r2, #32
 8013f78:	189b      	adds	r3, r3, r2
 8013f7a:	19db      	adds	r3, r3, r7
 8013f7c:	2200      	movs	r2, #0
 8013f7e:	701a      	strb	r2, [r3, #0]
 8013f80:	e021      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013f82:	231b      	movs	r3, #27
 8013f84:	2220      	movs	r2, #32
 8013f86:	189b      	adds	r3, r3, r2
 8013f88:	19db      	adds	r3, r3, r7
 8013f8a:	2202      	movs	r2, #2
 8013f8c:	701a      	strb	r2, [r3, #0]
 8013f8e:	e01a      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013f90:	231b      	movs	r3, #27
 8013f92:	2220      	movs	r2, #32
 8013f94:	189b      	adds	r3, r3, r2
 8013f96:	19db      	adds	r3, r3, r7
 8013f98:	2204      	movs	r2, #4
 8013f9a:	701a      	strb	r2, [r3, #0]
 8013f9c:	e013      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013f9e:	231b      	movs	r3, #27
 8013fa0:	2220      	movs	r2, #32
 8013fa2:	189b      	adds	r3, r3, r2
 8013fa4:	19db      	adds	r3, r3, r7
 8013fa6:	2208      	movs	r2, #8
 8013fa8:	701a      	strb	r2, [r3, #0]
 8013faa:	e00c      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013fac:	231b      	movs	r3, #27
 8013fae:	2220      	movs	r2, #32
 8013fb0:	189b      	adds	r3, r3, r2
 8013fb2:	19db      	adds	r3, r3, r7
 8013fb4:	2210      	movs	r2, #16
 8013fb6:	701a      	strb	r2, [r3, #0]
 8013fb8:	e005      	b.n	8013fc6 <UART_SetConfig+0x246>
 8013fba:	231b      	movs	r3, #27
 8013fbc:	2220      	movs	r2, #32
 8013fbe:	189b      	adds	r3, r3, r2
 8013fc0:	19db      	adds	r3, r3, r7
 8013fc2:	2210      	movs	r2, #16
 8013fc4:	701a      	strb	r2, [r3, #0]
 8013fc6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013fc8:	681b      	ldr	r3, [r3, #0]
 8013fca:	4a2b      	ldr	r2, [pc, #172]	@ (8014078 <UART_SetConfig+0x2f8>)
 8013fcc:	4293      	cmp	r3, r2
 8013fce:	d000      	beq.n	8013fd2 <UART_SetConfig+0x252>
 8013fd0:	e0a9      	b.n	8014126 <UART_SetConfig+0x3a6>
 8013fd2:	231b      	movs	r3, #27
 8013fd4:	2220      	movs	r2, #32
 8013fd6:	189b      	adds	r3, r3, r2
 8013fd8:	19db      	adds	r3, r3, r7
 8013fda:	781b      	ldrb	r3, [r3, #0]
 8013fdc:	2b08      	cmp	r3, #8
 8013fde:	d015      	beq.n	801400c <UART_SetConfig+0x28c>
 8013fe0:	dc18      	bgt.n	8014014 <UART_SetConfig+0x294>
 8013fe2:	2b04      	cmp	r3, #4
 8013fe4:	d00d      	beq.n	8014002 <UART_SetConfig+0x282>
 8013fe6:	dc15      	bgt.n	8014014 <UART_SetConfig+0x294>
 8013fe8:	2b00      	cmp	r3, #0
 8013fea:	d002      	beq.n	8013ff2 <UART_SetConfig+0x272>
 8013fec:	2b02      	cmp	r3, #2
 8013fee:	d005      	beq.n	8013ffc <UART_SetConfig+0x27c>
 8013ff0:	e010      	b.n	8014014 <UART_SetConfig+0x294>
 8013ff2:	f7fd f823 	bl	801103c <HAL_RCC_GetPCLK1Freq>
 8013ff6:	0003      	movs	r3, r0
 8013ff8:	637b      	str	r3, [r7, #52]	@ 0x34
 8013ffa:	e014      	b.n	8014026 <UART_SetConfig+0x2a6>
 8013ffc:	4b25      	ldr	r3, [pc, #148]	@ (8014094 <UART_SetConfig+0x314>)
 8013ffe:	637b      	str	r3, [r7, #52]	@ 0x34
 8014000:	e011      	b.n	8014026 <UART_SetConfig+0x2a6>
 8014002:	f7fc ff8f 	bl	8010f24 <HAL_RCC_GetSysClockFreq>
 8014006:	0003      	movs	r3, r0
 8014008:	637b      	str	r3, [r7, #52]	@ 0x34
 801400a:	e00c      	b.n	8014026 <UART_SetConfig+0x2a6>
 801400c:	2380      	movs	r3, #128	@ 0x80
 801400e:	021b      	lsls	r3, r3, #8
 8014010:	637b      	str	r3, [r7, #52]	@ 0x34
 8014012:	e008      	b.n	8014026 <UART_SetConfig+0x2a6>
 8014014:	2300      	movs	r3, #0
 8014016:	637b      	str	r3, [r7, #52]	@ 0x34
 8014018:	231a      	movs	r3, #26
 801401a:	2220      	movs	r2, #32
 801401c:	189b      	adds	r3, r3, r2
 801401e:	19db      	adds	r3, r3, r7
 8014020:	2201      	movs	r2, #1
 8014022:	701a      	strb	r2, [r3, #0]
 8014024:	46c0      	nop			@ (mov r8, r8)
 8014026:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8014028:	2b00      	cmp	r3, #0
 801402a:	d100      	bne.n	801402e <UART_SetConfig+0x2ae>
 801402c:	e14b      	b.n	80142c6 <UART_SetConfig+0x546>
 801402e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014030:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8014032:	4b19      	ldr	r3, [pc, #100]	@ (8014098 <UART_SetConfig+0x318>)
 8014034:	0052      	lsls	r2, r2, #1
 8014036:	5ad3      	ldrh	r3, [r2, r3]
 8014038:	0019      	movs	r1, r3
 801403a:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 801403c:	f7ec f874 	bl	8000128 <__udivsi3>
 8014040:	0003      	movs	r3, r0
 8014042:	62bb      	str	r3, [r7, #40]	@ 0x28
 8014044:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014046:	685a      	ldr	r2, [r3, #4]
 8014048:	0013      	movs	r3, r2
 801404a:	005b      	lsls	r3, r3, #1
 801404c:	189b      	adds	r3, r3, r2
 801404e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8014050:	429a      	cmp	r2, r3
 8014052:	d305      	bcc.n	8014060 <UART_SetConfig+0x2e0>
 8014054:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014056:	685b      	ldr	r3, [r3, #4]
 8014058:	031b      	lsls	r3, r3, #12
 801405a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 801405c:	429a      	cmp	r2, r3
 801405e:	d91d      	bls.n	801409c <UART_SetConfig+0x31c>
 8014060:	231a      	movs	r3, #26
 8014062:	2220      	movs	r2, #32
 8014064:	189b      	adds	r3, r3, r2
 8014066:	19db      	adds	r3, r3, r7
 8014068:	2201      	movs	r2, #1
 801406a:	701a      	strb	r2, [r3, #0]
 801406c:	e12b      	b.n	80142c6 <UART_SetConfig+0x546>
 801406e:	46c0      	nop			@ (mov r8, r8)
 8014070:	cfff69f3 	.word	0xcfff69f3
 8014074:	ffffcfff 	.word	0xffffcfff
 8014078:	40008000 	.word	0x40008000
 801407c:	11fff4ff 	.word	0x11fff4ff
 8014080:	40013800 	.word	0x40013800
 8014084:	40021000 	.word	0x40021000
 8014088:	40004400 	.word	0x40004400
 801408c:	40004800 	.word	0x40004800
 8014090:	40004c00 	.word	0x40004c00
 8014094:	00f42400 	.word	0x00f42400
 8014098:	08019fa4 	.word	0x08019fa4
 801409c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801409e:	61bb      	str	r3, [r7, #24]
 80140a0:	2300      	movs	r3, #0
 80140a2:	61fb      	str	r3, [r7, #28]
 80140a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80140a6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80140a8:	4b92      	ldr	r3, [pc, #584]	@ (80142f4 <UART_SetConfig+0x574>)
 80140aa:	0052      	lsls	r2, r2, #1
 80140ac:	5ad3      	ldrh	r3, [r2, r3]
 80140ae:	613b      	str	r3, [r7, #16]
 80140b0:	2300      	movs	r3, #0
 80140b2:	617b      	str	r3, [r7, #20]
 80140b4:	693a      	ldr	r2, [r7, #16]
 80140b6:	697b      	ldr	r3, [r7, #20]
 80140b8:	69b8      	ldr	r0, [r7, #24]
 80140ba:	69f9      	ldr	r1, [r7, #28]
 80140bc:	f7ec fa22 	bl	8000504 <__aeabi_uldivmod>
 80140c0:	0002      	movs	r2, r0
 80140c2:	000b      	movs	r3, r1
 80140c4:	0e11      	lsrs	r1, r2, #24
 80140c6:	021d      	lsls	r5, r3, #8
 80140c8:	430d      	orrs	r5, r1
 80140ca:	0214      	lsls	r4, r2, #8
 80140cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80140ce:	685b      	ldr	r3, [r3, #4]
 80140d0:	085b      	lsrs	r3, r3, #1
 80140d2:	60bb      	str	r3, [r7, #8]
 80140d4:	2300      	movs	r3, #0
 80140d6:	60fb      	str	r3, [r7, #12]
 80140d8:	68b8      	ldr	r0, [r7, #8]
 80140da:	68f9      	ldr	r1, [r7, #12]
 80140dc:	1900      	adds	r0, r0, r4
 80140de:	4169      	adcs	r1, r5
 80140e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80140e2:	685b      	ldr	r3, [r3, #4]
 80140e4:	603b      	str	r3, [r7, #0]
 80140e6:	2300      	movs	r3, #0
 80140e8:	607b      	str	r3, [r7, #4]
 80140ea:	683a      	ldr	r2, [r7, #0]
 80140ec:	687b      	ldr	r3, [r7, #4]
 80140ee:	f7ec fa09 	bl	8000504 <__aeabi_uldivmod>
 80140f2:	0002      	movs	r2, r0
 80140f4:	000b      	movs	r3, r1
 80140f6:	0013      	movs	r3, r2
 80140f8:	633b      	str	r3, [r7, #48]	@ 0x30
 80140fa:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80140fc:	23c0      	movs	r3, #192	@ 0xc0
 80140fe:	009b      	lsls	r3, r3, #2
 8014100:	429a      	cmp	r2, r3
 8014102:	d309      	bcc.n	8014118 <UART_SetConfig+0x398>
 8014104:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8014106:	2380      	movs	r3, #128	@ 0x80
 8014108:	035b      	lsls	r3, r3, #13
 801410a:	429a      	cmp	r2, r3
 801410c:	d204      	bcs.n	8014118 <UART_SetConfig+0x398>
 801410e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014110:	681b      	ldr	r3, [r3, #0]
 8014112:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8014114:	60da      	str	r2, [r3, #12]
 8014116:	e0d6      	b.n	80142c6 <UART_SetConfig+0x546>
 8014118:	231a      	movs	r3, #26
 801411a:	2220      	movs	r2, #32
 801411c:	189b      	adds	r3, r3, r2
 801411e:	19db      	adds	r3, r3, r7
 8014120:	2201      	movs	r2, #1
 8014122:	701a      	strb	r2, [r3, #0]
 8014124:	e0cf      	b.n	80142c6 <UART_SetConfig+0x546>
 8014126:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014128:	69da      	ldr	r2, [r3, #28]
 801412a:	2380      	movs	r3, #128	@ 0x80
 801412c:	021b      	lsls	r3, r3, #8
 801412e:	429a      	cmp	r2, r3
 8014130:	d000      	beq.n	8014134 <UART_SetConfig+0x3b4>
 8014132:	e070      	b.n	8014216 <UART_SetConfig+0x496>
 8014134:	231b      	movs	r3, #27
 8014136:	2220      	movs	r2, #32
 8014138:	189b      	adds	r3, r3, r2
 801413a:	19db      	adds	r3, r3, r7
 801413c:	781b      	ldrb	r3, [r3, #0]
 801413e:	2b08      	cmp	r3, #8
 8014140:	d015      	beq.n	801416e <UART_SetConfig+0x3ee>
 8014142:	dc18      	bgt.n	8014176 <UART_SetConfig+0x3f6>
 8014144:	2b04      	cmp	r3, #4
 8014146:	d00d      	beq.n	8014164 <UART_SetConfig+0x3e4>
 8014148:	dc15      	bgt.n	8014176 <UART_SetConfig+0x3f6>
 801414a:	2b00      	cmp	r3, #0
 801414c:	d002      	beq.n	8014154 <UART_SetConfig+0x3d4>
 801414e:	2b02      	cmp	r3, #2
 8014150:	d005      	beq.n	801415e <UART_SetConfig+0x3de>
 8014152:	e010      	b.n	8014176 <UART_SetConfig+0x3f6>
 8014154:	f7fc ff72 	bl	801103c <HAL_RCC_GetPCLK1Freq>
 8014158:	0003      	movs	r3, r0
 801415a:	637b      	str	r3, [r7, #52]	@ 0x34
 801415c:	e014      	b.n	8014188 <UART_SetConfig+0x408>
 801415e:	4b66      	ldr	r3, [pc, #408]	@ (80142f8 <UART_SetConfig+0x578>)
 8014160:	637b      	str	r3, [r7, #52]	@ 0x34
 8014162:	e011      	b.n	8014188 <UART_SetConfig+0x408>
 8014164:	f7fc fede 	bl	8010f24 <HAL_RCC_GetSysClockFreq>
 8014168:	0003      	movs	r3, r0
 801416a:	637b      	str	r3, [r7, #52]	@ 0x34
 801416c:	e00c      	b.n	8014188 <UART_SetConfig+0x408>
 801416e:	2380      	movs	r3, #128	@ 0x80
 8014170:	021b      	lsls	r3, r3, #8
 8014172:	637b      	str	r3, [r7, #52]	@ 0x34
 8014174:	e008      	b.n	8014188 <UART_SetConfig+0x408>
 8014176:	2300      	movs	r3, #0
 8014178:	637b      	str	r3, [r7, #52]	@ 0x34
 801417a:	231a      	movs	r3, #26
 801417c:	2220      	movs	r2, #32
 801417e:	189b      	adds	r3, r3, r2
 8014180:	19db      	adds	r3, r3, r7
 8014182:	2201      	movs	r2, #1
 8014184:	701a      	strb	r2, [r3, #0]
 8014186:	46c0      	nop			@ (mov r8, r8)
 8014188:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801418a:	2b00      	cmp	r3, #0
 801418c:	d100      	bne.n	8014190 <UART_SetConfig+0x410>
 801418e:	e09a      	b.n	80142c6 <UART_SetConfig+0x546>
 8014190:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014192:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8014194:	4b57      	ldr	r3, [pc, #348]	@ (80142f4 <UART_SetConfig+0x574>)
 8014196:	0052      	lsls	r2, r2, #1
 8014198:	5ad3      	ldrh	r3, [r2, r3]
 801419a:	0019      	movs	r1, r3
 801419c:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 801419e:	f7eb ffc3 	bl	8000128 <__udivsi3>
 80141a2:	0003      	movs	r3, r0
 80141a4:	005a      	lsls	r2, r3, #1
 80141a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80141a8:	685b      	ldr	r3, [r3, #4]
 80141aa:	085b      	lsrs	r3, r3, #1
 80141ac:	18d2      	adds	r2, r2, r3
 80141ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80141b0:	685b      	ldr	r3, [r3, #4]
 80141b2:	0019      	movs	r1, r3
 80141b4:	0010      	movs	r0, r2
 80141b6:	f7eb ffb7 	bl	8000128 <__udivsi3>
 80141ba:	0003      	movs	r3, r0
 80141bc:	633b      	str	r3, [r7, #48]	@ 0x30
 80141be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80141c0:	2b0f      	cmp	r3, #15
 80141c2:	d921      	bls.n	8014208 <UART_SetConfig+0x488>
 80141c4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80141c6:	2380      	movs	r3, #128	@ 0x80
 80141c8:	025b      	lsls	r3, r3, #9
 80141ca:	429a      	cmp	r2, r3
 80141cc:	d21c      	bcs.n	8014208 <UART_SetConfig+0x488>
 80141ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80141d0:	b29a      	uxth	r2, r3
 80141d2:	200e      	movs	r0, #14
 80141d4:	2420      	movs	r4, #32
 80141d6:	1903      	adds	r3, r0, r4
 80141d8:	19db      	adds	r3, r3, r7
 80141da:	210f      	movs	r1, #15
 80141dc:	438a      	bics	r2, r1
 80141de:	801a      	strh	r2, [r3, #0]
 80141e0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80141e2:	085b      	lsrs	r3, r3, #1
 80141e4:	b29b      	uxth	r3, r3
 80141e6:	2207      	movs	r2, #7
 80141e8:	4013      	ands	r3, r2
 80141ea:	b299      	uxth	r1, r3
 80141ec:	1903      	adds	r3, r0, r4
 80141ee:	19db      	adds	r3, r3, r7
 80141f0:	1902      	adds	r2, r0, r4
 80141f2:	19d2      	adds	r2, r2, r7
 80141f4:	8812      	ldrh	r2, [r2, #0]
 80141f6:	430a      	orrs	r2, r1
 80141f8:	801a      	strh	r2, [r3, #0]
 80141fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80141fc:	681b      	ldr	r3, [r3, #0]
 80141fe:	1902      	adds	r2, r0, r4
 8014200:	19d2      	adds	r2, r2, r7
 8014202:	8812      	ldrh	r2, [r2, #0]
 8014204:	60da      	str	r2, [r3, #12]
 8014206:	e05e      	b.n	80142c6 <UART_SetConfig+0x546>
 8014208:	231a      	movs	r3, #26
 801420a:	2220      	movs	r2, #32
 801420c:	189b      	adds	r3, r3, r2
 801420e:	19db      	adds	r3, r3, r7
 8014210:	2201      	movs	r2, #1
 8014212:	701a      	strb	r2, [r3, #0]
 8014214:	e057      	b.n	80142c6 <UART_SetConfig+0x546>
 8014216:	231b      	movs	r3, #27
 8014218:	2220      	movs	r2, #32
 801421a:	189b      	adds	r3, r3, r2
 801421c:	19db      	adds	r3, r3, r7
 801421e:	781b      	ldrb	r3, [r3, #0]
 8014220:	2b08      	cmp	r3, #8
 8014222:	d015      	beq.n	8014250 <UART_SetConfig+0x4d0>
 8014224:	dc18      	bgt.n	8014258 <UART_SetConfig+0x4d8>
 8014226:	2b04      	cmp	r3, #4
 8014228:	d00d      	beq.n	8014246 <UART_SetConfig+0x4c6>
 801422a:	dc15      	bgt.n	8014258 <UART_SetConfig+0x4d8>
 801422c:	2b00      	cmp	r3, #0
 801422e:	d002      	beq.n	8014236 <UART_SetConfig+0x4b6>
 8014230:	2b02      	cmp	r3, #2
 8014232:	d005      	beq.n	8014240 <UART_SetConfig+0x4c0>
 8014234:	e010      	b.n	8014258 <UART_SetConfig+0x4d8>
 8014236:	f7fc ff01 	bl	801103c <HAL_RCC_GetPCLK1Freq>
 801423a:	0003      	movs	r3, r0
 801423c:	637b      	str	r3, [r7, #52]	@ 0x34
 801423e:	e014      	b.n	801426a <UART_SetConfig+0x4ea>
 8014240:	4b2d      	ldr	r3, [pc, #180]	@ (80142f8 <UART_SetConfig+0x578>)
 8014242:	637b      	str	r3, [r7, #52]	@ 0x34
 8014244:	e011      	b.n	801426a <UART_SetConfig+0x4ea>
 8014246:	f7fc fe6d 	bl	8010f24 <HAL_RCC_GetSysClockFreq>
 801424a:	0003      	movs	r3, r0
 801424c:	637b      	str	r3, [r7, #52]	@ 0x34
 801424e:	e00c      	b.n	801426a <UART_SetConfig+0x4ea>
 8014250:	2380      	movs	r3, #128	@ 0x80
 8014252:	021b      	lsls	r3, r3, #8
 8014254:	637b      	str	r3, [r7, #52]	@ 0x34
 8014256:	e008      	b.n	801426a <UART_SetConfig+0x4ea>
 8014258:	2300      	movs	r3, #0
 801425a:	637b      	str	r3, [r7, #52]	@ 0x34
 801425c:	231a      	movs	r3, #26
 801425e:	2220      	movs	r2, #32
 8014260:	189b      	adds	r3, r3, r2
 8014262:	19db      	adds	r3, r3, r7
 8014264:	2201      	movs	r2, #1
 8014266:	701a      	strb	r2, [r3, #0]
 8014268:	46c0      	nop			@ (mov r8, r8)
 801426a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801426c:	2b00      	cmp	r3, #0
 801426e:	d02a      	beq.n	80142c6 <UART_SetConfig+0x546>
 8014270:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014272:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8014274:	4b1f      	ldr	r3, [pc, #124]	@ (80142f4 <UART_SetConfig+0x574>)
 8014276:	0052      	lsls	r2, r2, #1
 8014278:	5ad3      	ldrh	r3, [r2, r3]
 801427a:	0019      	movs	r1, r3
 801427c:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 801427e:	f7eb ff53 	bl	8000128 <__udivsi3>
 8014282:	0003      	movs	r3, r0
 8014284:	001a      	movs	r2, r3
 8014286:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014288:	685b      	ldr	r3, [r3, #4]
 801428a:	085b      	lsrs	r3, r3, #1
 801428c:	18d2      	adds	r2, r2, r3
 801428e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014290:	685b      	ldr	r3, [r3, #4]
 8014292:	0019      	movs	r1, r3
 8014294:	0010      	movs	r0, r2
 8014296:	f7eb ff47 	bl	8000128 <__udivsi3>
 801429a:	0003      	movs	r3, r0
 801429c:	633b      	str	r3, [r7, #48]	@ 0x30
 801429e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80142a0:	2b0f      	cmp	r3, #15
 80142a2:	d90a      	bls.n	80142ba <UART_SetConfig+0x53a>
 80142a4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80142a6:	2380      	movs	r3, #128	@ 0x80
 80142a8:	025b      	lsls	r3, r3, #9
 80142aa:	429a      	cmp	r2, r3
 80142ac:	d205      	bcs.n	80142ba <UART_SetConfig+0x53a>
 80142ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80142b0:	b29a      	uxth	r2, r3
 80142b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80142b4:	681b      	ldr	r3, [r3, #0]
 80142b6:	60da      	str	r2, [r3, #12]
 80142b8:	e005      	b.n	80142c6 <UART_SetConfig+0x546>
 80142ba:	231a      	movs	r3, #26
 80142bc:	2220      	movs	r2, #32
 80142be:	189b      	adds	r3, r3, r2
 80142c0:	19db      	adds	r3, r3, r7
 80142c2:	2201      	movs	r2, #1
 80142c4:	701a      	strb	r2, [r3, #0]
 80142c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80142c8:	226a      	movs	r2, #106	@ 0x6a
 80142ca:	2101      	movs	r1, #1
 80142cc:	5299      	strh	r1, [r3, r2]
 80142ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80142d0:	2268      	movs	r2, #104	@ 0x68
 80142d2:	2101      	movs	r1, #1
 80142d4:	5299      	strh	r1, [r3, r2]
 80142d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80142d8:	2200      	movs	r2, #0
 80142da:	671a      	str	r2, [r3, #112]	@ 0x70
 80142dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80142de:	2200      	movs	r2, #0
 80142e0:	675a      	str	r2, [r3, #116]	@ 0x74
 80142e2:	231a      	movs	r3, #26
 80142e4:	2220      	movs	r2, #32
 80142e6:	189b      	adds	r3, r3, r2
 80142e8:	19db      	adds	r3, r3, r7
 80142ea:	781b      	ldrb	r3, [r3, #0]
 80142ec:	0018      	movs	r0, r3
 80142ee:	46bd      	mov	sp, r7
 80142f0:	b010      	add	sp, #64	@ 0x40
 80142f2:	bdb0      	pop	{r4, r5, r7, pc}
 80142f4:	08019fa4 	.word	0x08019fa4
 80142f8:	00f42400 	.word	0x00f42400

080142fc <UART_AdvFeatureConfig>:
 80142fc:	b580      	push	{r7, lr}
 80142fe:	b082      	sub	sp, #8
 8014300:	af00      	add	r7, sp, #0
 8014302:	6078      	str	r0, [r7, #4]
 8014304:	687b      	ldr	r3, [r7, #4]
 8014306:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014308:	2201      	movs	r2, #1
 801430a:	4013      	ands	r3, r2
 801430c:	d00b      	beq.n	8014326 <UART_AdvFeatureConfig+0x2a>
 801430e:	687b      	ldr	r3, [r7, #4]
 8014310:	681b      	ldr	r3, [r3, #0]
 8014312:	685b      	ldr	r3, [r3, #4]
 8014314:	4a4a      	ldr	r2, [pc, #296]	@ (8014440 <UART_AdvFeatureConfig+0x144>)
 8014316:	4013      	ands	r3, r2
 8014318:	0019      	movs	r1, r3
 801431a:	687b      	ldr	r3, [r7, #4]
 801431c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801431e:	687b      	ldr	r3, [r7, #4]
 8014320:	681b      	ldr	r3, [r3, #0]
 8014322:	430a      	orrs	r2, r1
 8014324:	605a      	str	r2, [r3, #4]
 8014326:	687b      	ldr	r3, [r7, #4]
 8014328:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801432a:	2202      	movs	r2, #2
 801432c:	4013      	ands	r3, r2
 801432e:	d00b      	beq.n	8014348 <UART_AdvFeatureConfig+0x4c>
 8014330:	687b      	ldr	r3, [r7, #4]
 8014332:	681b      	ldr	r3, [r3, #0]
 8014334:	685b      	ldr	r3, [r3, #4]
 8014336:	4a43      	ldr	r2, [pc, #268]	@ (8014444 <UART_AdvFeatureConfig+0x148>)
 8014338:	4013      	ands	r3, r2
 801433a:	0019      	movs	r1, r3
 801433c:	687b      	ldr	r3, [r7, #4]
 801433e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8014340:	687b      	ldr	r3, [r7, #4]
 8014342:	681b      	ldr	r3, [r3, #0]
 8014344:	430a      	orrs	r2, r1
 8014346:	605a      	str	r2, [r3, #4]
 8014348:	687b      	ldr	r3, [r7, #4]
 801434a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801434c:	2204      	movs	r2, #4
 801434e:	4013      	ands	r3, r2
 8014350:	d00b      	beq.n	801436a <UART_AdvFeatureConfig+0x6e>
 8014352:	687b      	ldr	r3, [r7, #4]
 8014354:	681b      	ldr	r3, [r3, #0]
 8014356:	685b      	ldr	r3, [r3, #4]
 8014358:	4a3b      	ldr	r2, [pc, #236]	@ (8014448 <UART_AdvFeatureConfig+0x14c>)
 801435a:	4013      	ands	r3, r2
 801435c:	0019      	movs	r1, r3
 801435e:	687b      	ldr	r3, [r7, #4]
 8014360:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8014362:	687b      	ldr	r3, [r7, #4]
 8014364:	681b      	ldr	r3, [r3, #0]
 8014366:	430a      	orrs	r2, r1
 8014368:	605a      	str	r2, [r3, #4]
 801436a:	687b      	ldr	r3, [r7, #4]
 801436c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801436e:	2208      	movs	r2, #8
 8014370:	4013      	ands	r3, r2
 8014372:	d00b      	beq.n	801438c <UART_AdvFeatureConfig+0x90>
 8014374:	687b      	ldr	r3, [r7, #4]
 8014376:	681b      	ldr	r3, [r3, #0]
 8014378:	685b      	ldr	r3, [r3, #4]
 801437a:	4a34      	ldr	r2, [pc, #208]	@ (801444c <UART_AdvFeatureConfig+0x150>)
 801437c:	4013      	ands	r3, r2
 801437e:	0019      	movs	r1, r3
 8014380:	687b      	ldr	r3, [r7, #4]
 8014382:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8014384:	687b      	ldr	r3, [r7, #4]
 8014386:	681b      	ldr	r3, [r3, #0]
 8014388:	430a      	orrs	r2, r1
 801438a:	605a      	str	r2, [r3, #4]
 801438c:	687b      	ldr	r3, [r7, #4]
 801438e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014390:	2210      	movs	r2, #16
 8014392:	4013      	ands	r3, r2
 8014394:	d00b      	beq.n	80143ae <UART_AdvFeatureConfig+0xb2>
 8014396:	687b      	ldr	r3, [r7, #4]
 8014398:	681b      	ldr	r3, [r3, #0]
 801439a:	689b      	ldr	r3, [r3, #8]
 801439c:	4a2c      	ldr	r2, [pc, #176]	@ (8014450 <UART_AdvFeatureConfig+0x154>)
 801439e:	4013      	ands	r3, r2
 80143a0:	0019      	movs	r1, r3
 80143a2:	687b      	ldr	r3, [r7, #4]
 80143a4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80143a6:	687b      	ldr	r3, [r7, #4]
 80143a8:	681b      	ldr	r3, [r3, #0]
 80143aa:	430a      	orrs	r2, r1
 80143ac:	609a      	str	r2, [r3, #8]
 80143ae:	687b      	ldr	r3, [r7, #4]
 80143b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80143b2:	2220      	movs	r2, #32
 80143b4:	4013      	ands	r3, r2
 80143b6:	d00b      	beq.n	80143d0 <UART_AdvFeatureConfig+0xd4>
 80143b8:	687b      	ldr	r3, [r7, #4]
 80143ba:	681b      	ldr	r3, [r3, #0]
 80143bc:	689b      	ldr	r3, [r3, #8]
 80143be:	4a25      	ldr	r2, [pc, #148]	@ (8014454 <UART_AdvFeatureConfig+0x158>)
 80143c0:	4013      	ands	r3, r2
 80143c2:	0019      	movs	r1, r3
 80143c4:	687b      	ldr	r3, [r7, #4]
 80143c6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80143c8:	687b      	ldr	r3, [r7, #4]
 80143ca:	681b      	ldr	r3, [r3, #0]
 80143cc:	430a      	orrs	r2, r1
 80143ce:	609a      	str	r2, [r3, #8]
 80143d0:	687b      	ldr	r3, [r7, #4]
 80143d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80143d4:	2240      	movs	r2, #64	@ 0x40
 80143d6:	4013      	ands	r3, r2
 80143d8:	d01d      	beq.n	8014416 <UART_AdvFeatureConfig+0x11a>
 80143da:	687b      	ldr	r3, [r7, #4]
 80143dc:	681b      	ldr	r3, [r3, #0]
 80143de:	685b      	ldr	r3, [r3, #4]
 80143e0:	4a1d      	ldr	r2, [pc, #116]	@ (8014458 <UART_AdvFeatureConfig+0x15c>)
 80143e2:	4013      	ands	r3, r2
 80143e4:	0019      	movs	r1, r3
 80143e6:	687b      	ldr	r3, [r7, #4]
 80143e8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80143ea:	687b      	ldr	r3, [r7, #4]
 80143ec:	681b      	ldr	r3, [r3, #0]
 80143ee:	430a      	orrs	r2, r1
 80143f0:	605a      	str	r2, [r3, #4]
 80143f2:	687b      	ldr	r3, [r7, #4]
 80143f4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80143f6:	2380      	movs	r3, #128	@ 0x80
 80143f8:	035b      	lsls	r3, r3, #13
 80143fa:	429a      	cmp	r2, r3
 80143fc:	d10b      	bne.n	8014416 <UART_AdvFeatureConfig+0x11a>
 80143fe:	687b      	ldr	r3, [r7, #4]
 8014400:	681b      	ldr	r3, [r3, #0]
 8014402:	685b      	ldr	r3, [r3, #4]
 8014404:	4a15      	ldr	r2, [pc, #84]	@ (801445c <UART_AdvFeatureConfig+0x160>)
 8014406:	4013      	ands	r3, r2
 8014408:	0019      	movs	r1, r3
 801440a:	687b      	ldr	r3, [r7, #4]
 801440c:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 801440e:	687b      	ldr	r3, [r7, #4]
 8014410:	681b      	ldr	r3, [r3, #0]
 8014412:	430a      	orrs	r2, r1
 8014414:	605a      	str	r2, [r3, #4]
 8014416:	687b      	ldr	r3, [r7, #4]
 8014418:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801441a:	2280      	movs	r2, #128	@ 0x80
 801441c:	4013      	ands	r3, r2
 801441e:	d00b      	beq.n	8014438 <UART_AdvFeatureConfig+0x13c>
 8014420:	687b      	ldr	r3, [r7, #4]
 8014422:	681b      	ldr	r3, [r3, #0]
 8014424:	685b      	ldr	r3, [r3, #4]
 8014426:	4a0e      	ldr	r2, [pc, #56]	@ (8014460 <UART_AdvFeatureConfig+0x164>)
 8014428:	4013      	ands	r3, r2
 801442a:	0019      	movs	r1, r3
 801442c:	687b      	ldr	r3, [r7, #4]
 801442e:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8014430:	687b      	ldr	r3, [r7, #4]
 8014432:	681b      	ldr	r3, [r3, #0]
 8014434:	430a      	orrs	r2, r1
 8014436:	605a      	str	r2, [r3, #4]
 8014438:	46c0      	nop			@ (mov r8, r8)
 801443a:	46bd      	mov	sp, r7
 801443c:	b002      	add	sp, #8
 801443e:	bd80      	pop	{r7, pc}
 8014440:	fffdffff 	.word	0xfffdffff
 8014444:	fffeffff 	.word	0xfffeffff
 8014448:	fffbffff 	.word	0xfffbffff
 801444c:	ffff7fff 	.word	0xffff7fff
 8014450:	ffffefff 	.word	0xffffefff
 8014454:	ffffdfff 	.word	0xffffdfff
 8014458:	ffefffff 	.word	0xffefffff
 801445c:	ff9fffff 	.word	0xff9fffff
 8014460:	fff7ffff 	.word	0xfff7ffff

08014464 <UART_CheckIdleState>:
 8014464:	b580      	push	{r7, lr}
 8014466:	b086      	sub	sp, #24
 8014468:	af02      	add	r7, sp, #8
 801446a:	6078      	str	r0, [r7, #4]
 801446c:	687b      	ldr	r3, [r7, #4]
 801446e:	228c      	movs	r2, #140	@ 0x8c
 8014470:	2100      	movs	r1, #0
 8014472:	5099      	str	r1, [r3, r2]
 8014474:	f7f9 fbfc 	bl	800dc70 <HAL_GetTick>
 8014478:	0003      	movs	r3, r0
 801447a:	60fb      	str	r3, [r7, #12]
 801447c:	687b      	ldr	r3, [r7, #4]
 801447e:	681b      	ldr	r3, [r3, #0]
 8014480:	681b      	ldr	r3, [r3, #0]
 8014482:	2208      	movs	r2, #8
 8014484:	4013      	ands	r3, r2
 8014486:	2b08      	cmp	r3, #8
 8014488:	d10c      	bne.n	80144a4 <UART_CheckIdleState+0x40>
 801448a:	68fb      	ldr	r3, [r7, #12]
 801448c:	2280      	movs	r2, #128	@ 0x80
 801448e:	0391      	lsls	r1, r2, #14
 8014490:	6878      	ldr	r0, [r7, #4]
 8014492:	4a18      	ldr	r2, [pc, #96]	@ (80144f4 <UART_CheckIdleState+0x90>)
 8014494:	9200      	str	r2, [sp, #0]
 8014496:	2200      	movs	r2, #0
 8014498:	f000 f82e 	bl	80144f8 <UART_WaitOnFlagUntilTimeout>
 801449c:	1e03      	subs	r3, r0, #0
 801449e:	d001      	beq.n	80144a4 <UART_CheckIdleState+0x40>
 80144a0:	2303      	movs	r3, #3
 80144a2:	e023      	b.n	80144ec <UART_CheckIdleState+0x88>
 80144a4:	687b      	ldr	r3, [r7, #4]
 80144a6:	681b      	ldr	r3, [r3, #0]
 80144a8:	681b      	ldr	r3, [r3, #0]
 80144aa:	2204      	movs	r2, #4
 80144ac:	4013      	ands	r3, r2
 80144ae:	2b04      	cmp	r3, #4
 80144b0:	d10c      	bne.n	80144cc <UART_CheckIdleState+0x68>
 80144b2:	68fb      	ldr	r3, [r7, #12]
 80144b4:	2280      	movs	r2, #128	@ 0x80
 80144b6:	03d1      	lsls	r1, r2, #15
 80144b8:	6878      	ldr	r0, [r7, #4]
 80144ba:	4a0e      	ldr	r2, [pc, #56]	@ (80144f4 <UART_CheckIdleState+0x90>)
 80144bc:	9200      	str	r2, [sp, #0]
 80144be:	2200      	movs	r2, #0
 80144c0:	f000 f81a 	bl	80144f8 <UART_WaitOnFlagUntilTimeout>
 80144c4:	1e03      	subs	r3, r0, #0
 80144c6:	d001      	beq.n	80144cc <UART_CheckIdleState+0x68>
 80144c8:	2303      	movs	r3, #3
 80144ca:	e00f      	b.n	80144ec <UART_CheckIdleState+0x88>
 80144cc:	687b      	ldr	r3, [r7, #4]
 80144ce:	2284      	movs	r2, #132	@ 0x84
 80144d0:	2120      	movs	r1, #32
 80144d2:	5099      	str	r1, [r3, r2]
 80144d4:	687b      	ldr	r3, [r7, #4]
 80144d6:	2288      	movs	r2, #136	@ 0x88
 80144d8:	2120      	movs	r1, #32
 80144da:	5099      	str	r1, [r3, r2]
 80144dc:	687b      	ldr	r3, [r7, #4]
 80144de:	2200      	movs	r2, #0
 80144e0:	66da      	str	r2, [r3, #108]	@ 0x6c
 80144e2:	687b      	ldr	r3, [r7, #4]
 80144e4:	2280      	movs	r2, #128	@ 0x80
 80144e6:	2100      	movs	r1, #0
 80144e8:	5499      	strb	r1, [r3, r2]
 80144ea:	2300      	movs	r3, #0
 80144ec:	0018      	movs	r0, r3
 80144ee:	46bd      	mov	sp, r7
 80144f0:	b004      	add	sp, #16
 80144f2:	bd80      	pop	{r7, pc}
 80144f4:	01ffffff 	.word	0x01ffffff

080144f8 <UART_WaitOnFlagUntilTimeout>:
 80144f8:	b580      	push	{r7, lr}
 80144fa:	b094      	sub	sp, #80	@ 0x50
 80144fc:	af00      	add	r7, sp, #0
 80144fe:	60f8      	str	r0, [r7, #12]
 8014500:	60b9      	str	r1, [r7, #8]
 8014502:	603b      	str	r3, [r7, #0]
 8014504:	1dfb      	adds	r3, r7, #7
 8014506:	701a      	strb	r2, [r3, #0]
 8014508:	e0a7      	b.n	801465a <UART_WaitOnFlagUntilTimeout+0x162>
 801450a:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 801450c:	3301      	adds	r3, #1
 801450e:	d100      	bne.n	8014512 <UART_WaitOnFlagUntilTimeout+0x1a>
 8014510:	e0a3      	b.n	801465a <UART_WaitOnFlagUntilTimeout+0x162>
 8014512:	f7f9 fbad 	bl	800dc70 <HAL_GetTick>
 8014516:	0002      	movs	r2, r0
 8014518:	683b      	ldr	r3, [r7, #0]
 801451a:	1ad3      	subs	r3, r2, r3
 801451c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 801451e:	429a      	cmp	r2, r3
 8014520:	d302      	bcc.n	8014528 <UART_WaitOnFlagUntilTimeout+0x30>
 8014522:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8014524:	2b00      	cmp	r3, #0
 8014526:	d13f      	bne.n	80145a8 <UART_WaitOnFlagUntilTimeout+0xb0>
 8014528:	f3ef 8310 	mrs	r3, PRIMASK
 801452c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801452e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8014530:	647b      	str	r3, [r7, #68]	@ 0x44
 8014532:	2301      	movs	r3, #1
 8014534:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8014536:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8014538:	f383 8810 	msr	PRIMASK, r3
 801453c:	46c0      	nop			@ (mov r8, r8)
 801453e:	68fb      	ldr	r3, [r7, #12]
 8014540:	681b      	ldr	r3, [r3, #0]
 8014542:	681a      	ldr	r2, [r3, #0]
 8014544:	68fb      	ldr	r3, [r7, #12]
 8014546:	681b      	ldr	r3, [r3, #0]
 8014548:	494e      	ldr	r1, [pc, #312]	@ (8014684 <UART_WaitOnFlagUntilTimeout+0x18c>)
 801454a:	400a      	ands	r2, r1
 801454c:	601a      	str	r2, [r3, #0]
 801454e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8014550:	633b      	str	r3, [r7, #48]	@ 0x30
 8014552:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8014554:	f383 8810 	msr	PRIMASK, r3
 8014558:	46c0      	nop			@ (mov r8, r8)
 801455a:	f3ef 8310 	mrs	r3, PRIMASK
 801455e:	637b      	str	r3, [r7, #52]	@ 0x34
 8014560:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8014562:	643b      	str	r3, [r7, #64]	@ 0x40
 8014564:	2301      	movs	r3, #1
 8014566:	63bb      	str	r3, [r7, #56]	@ 0x38
 8014568:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801456a:	f383 8810 	msr	PRIMASK, r3
 801456e:	46c0      	nop			@ (mov r8, r8)
 8014570:	68fb      	ldr	r3, [r7, #12]
 8014572:	681b      	ldr	r3, [r3, #0]
 8014574:	689a      	ldr	r2, [r3, #8]
 8014576:	68fb      	ldr	r3, [r7, #12]
 8014578:	681b      	ldr	r3, [r3, #0]
 801457a:	2101      	movs	r1, #1
 801457c:	438a      	bics	r2, r1
 801457e:	609a      	str	r2, [r3, #8]
 8014580:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8014582:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8014584:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8014586:	f383 8810 	msr	PRIMASK, r3
 801458a:	46c0      	nop			@ (mov r8, r8)
 801458c:	68fb      	ldr	r3, [r7, #12]
 801458e:	2284      	movs	r2, #132	@ 0x84
 8014590:	2120      	movs	r1, #32
 8014592:	5099      	str	r1, [r3, r2]
 8014594:	68fb      	ldr	r3, [r7, #12]
 8014596:	2288      	movs	r2, #136	@ 0x88
 8014598:	2120      	movs	r1, #32
 801459a:	5099      	str	r1, [r3, r2]
 801459c:	68fb      	ldr	r3, [r7, #12]
 801459e:	2280      	movs	r2, #128	@ 0x80
 80145a0:	2100      	movs	r1, #0
 80145a2:	5499      	strb	r1, [r3, r2]
 80145a4:	2303      	movs	r3, #3
 80145a6:	e069      	b.n	801467c <UART_WaitOnFlagUntilTimeout+0x184>
 80145a8:	68fb      	ldr	r3, [r7, #12]
 80145aa:	681b      	ldr	r3, [r3, #0]
 80145ac:	681b      	ldr	r3, [r3, #0]
 80145ae:	2204      	movs	r2, #4
 80145b0:	4013      	ands	r3, r2
 80145b2:	d052      	beq.n	801465a <UART_WaitOnFlagUntilTimeout+0x162>
 80145b4:	68fb      	ldr	r3, [r7, #12]
 80145b6:	681b      	ldr	r3, [r3, #0]
 80145b8:	69da      	ldr	r2, [r3, #28]
 80145ba:	2380      	movs	r3, #128	@ 0x80
 80145bc:	011b      	lsls	r3, r3, #4
 80145be:	401a      	ands	r2, r3
 80145c0:	2380      	movs	r3, #128	@ 0x80
 80145c2:	011b      	lsls	r3, r3, #4
 80145c4:	429a      	cmp	r2, r3
 80145c6:	d148      	bne.n	801465a <UART_WaitOnFlagUntilTimeout+0x162>
 80145c8:	68fb      	ldr	r3, [r7, #12]
 80145ca:	681b      	ldr	r3, [r3, #0]
 80145cc:	2280      	movs	r2, #128	@ 0x80
 80145ce:	0112      	lsls	r2, r2, #4
 80145d0:	621a      	str	r2, [r3, #32]
 80145d2:	f3ef 8310 	mrs	r3, PRIMASK
 80145d6:	613b      	str	r3, [r7, #16]
 80145d8:	693b      	ldr	r3, [r7, #16]
 80145da:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80145dc:	2301      	movs	r3, #1
 80145de:	617b      	str	r3, [r7, #20]
 80145e0:	697b      	ldr	r3, [r7, #20]
 80145e2:	f383 8810 	msr	PRIMASK, r3
 80145e6:	46c0      	nop			@ (mov r8, r8)
 80145e8:	68fb      	ldr	r3, [r7, #12]
 80145ea:	681b      	ldr	r3, [r3, #0]
 80145ec:	681a      	ldr	r2, [r3, #0]
 80145ee:	68fb      	ldr	r3, [r7, #12]
 80145f0:	681b      	ldr	r3, [r3, #0]
 80145f2:	4924      	ldr	r1, [pc, #144]	@ (8014684 <UART_WaitOnFlagUntilTimeout+0x18c>)
 80145f4:	400a      	ands	r2, r1
 80145f6:	601a      	str	r2, [r3, #0]
 80145f8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80145fa:	61bb      	str	r3, [r7, #24]
 80145fc:	69bb      	ldr	r3, [r7, #24]
 80145fe:	f383 8810 	msr	PRIMASK, r3
 8014602:	46c0      	nop			@ (mov r8, r8)
 8014604:	f3ef 8310 	mrs	r3, PRIMASK
 8014608:	61fb      	str	r3, [r7, #28]
 801460a:	69fb      	ldr	r3, [r7, #28]
 801460c:	64bb      	str	r3, [r7, #72]	@ 0x48
 801460e:	2301      	movs	r3, #1
 8014610:	623b      	str	r3, [r7, #32]
 8014612:	6a3b      	ldr	r3, [r7, #32]
 8014614:	f383 8810 	msr	PRIMASK, r3
 8014618:	46c0      	nop			@ (mov r8, r8)
 801461a:	68fb      	ldr	r3, [r7, #12]
 801461c:	681b      	ldr	r3, [r3, #0]
 801461e:	689a      	ldr	r2, [r3, #8]
 8014620:	68fb      	ldr	r3, [r7, #12]
 8014622:	681b      	ldr	r3, [r3, #0]
 8014624:	2101      	movs	r1, #1
 8014626:	438a      	bics	r2, r1
 8014628:	609a      	str	r2, [r3, #8]
 801462a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 801462c:	627b      	str	r3, [r7, #36]	@ 0x24
 801462e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014630:	f383 8810 	msr	PRIMASK, r3
 8014634:	46c0      	nop			@ (mov r8, r8)
 8014636:	68fb      	ldr	r3, [r7, #12]
 8014638:	2284      	movs	r2, #132	@ 0x84
 801463a:	2120      	movs	r1, #32
 801463c:	5099      	str	r1, [r3, r2]
 801463e:	68fb      	ldr	r3, [r7, #12]
 8014640:	2288      	movs	r2, #136	@ 0x88
 8014642:	2120      	movs	r1, #32
 8014644:	5099      	str	r1, [r3, r2]
 8014646:	68fb      	ldr	r3, [r7, #12]
 8014648:	228c      	movs	r2, #140	@ 0x8c
 801464a:	2120      	movs	r1, #32
 801464c:	5099      	str	r1, [r3, r2]
 801464e:	68fb      	ldr	r3, [r7, #12]
 8014650:	2280      	movs	r2, #128	@ 0x80
 8014652:	2100      	movs	r1, #0
 8014654:	5499      	strb	r1, [r3, r2]
 8014656:	2303      	movs	r3, #3
 8014658:	e010      	b.n	801467c <UART_WaitOnFlagUntilTimeout+0x184>
 801465a:	68fb      	ldr	r3, [r7, #12]
 801465c:	681b      	ldr	r3, [r3, #0]
 801465e:	69db      	ldr	r3, [r3, #28]
 8014660:	68ba      	ldr	r2, [r7, #8]
 8014662:	4013      	ands	r3, r2
 8014664:	68ba      	ldr	r2, [r7, #8]
 8014666:	1ad3      	subs	r3, r2, r3
 8014668:	425a      	negs	r2, r3
 801466a:	4153      	adcs	r3, r2
 801466c:	b2db      	uxtb	r3, r3
 801466e:	001a      	movs	r2, r3
 8014670:	1dfb      	adds	r3, r7, #7
 8014672:	781b      	ldrb	r3, [r3, #0]
 8014674:	429a      	cmp	r2, r3
 8014676:	d100      	bne.n	801467a <UART_WaitOnFlagUntilTimeout+0x182>
 8014678:	e747      	b.n	801450a <UART_WaitOnFlagUntilTimeout+0x12>
 801467a:	2300      	movs	r3, #0
 801467c:	0018      	movs	r0, r3
 801467e:	46bd      	mov	sp, r7
 8014680:	b014      	add	sp, #80	@ 0x50
 8014682:	bd80      	pop	{r7, pc}
 8014684:	fffffe5f 	.word	0xfffffe5f

08014688 <UART_Start_Receive_IT>:
 8014688:	b580      	push	{r7, lr}
 801468a:	b098      	sub	sp, #96	@ 0x60
 801468c:	af00      	add	r7, sp, #0
 801468e:	60f8      	str	r0, [r7, #12]
 8014690:	60b9      	str	r1, [r7, #8]
 8014692:	1dbb      	adds	r3, r7, #6
 8014694:	801a      	strh	r2, [r3, #0]
 8014696:	68fb      	ldr	r3, [r7, #12]
 8014698:	68ba      	ldr	r2, [r7, #8]
 801469a:	659a      	str	r2, [r3, #88]	@ 0x58
 801469c:	68fb      	ldr	r3, [r7, #12]
 801469e:	1dba      	adds	r2, r7, #6
 80146a0:	215c      	movs	r1, #92	@ 0x5c
 80146a2:	8812      	ldrh	r2, [r2, #0]
 80146a4:	525a      	strh	r2, [r3, r1]
 80146a6:	68fb      	ldr	r3, [r7, #12]
 80146a8:	1dba      	adds	r2, r7, #6
 80146aa:	215e      	movs	r1, #94	@ 0x5e
 80146ac:	8812      	ldrh	r2, [r2, #0]
 80146ae:	525a      	strh	r2, [r3, r1]
 80146b0:	68fb      	ldr	r3, [r7, #12]
 80146b2:	2200      	movs	r2, #0
 80146b4:	671a      	str	r2, [r3, #112]	@ 0x70
 80146b6:	68fb      	ldr	r3, [r7, #12]
 80146b8:	689a      	ldr	r2, [r3, #8]
 80146ba:	2380      	movs	r3, #128	@ 0x80
 80146bc:	015b      	lsls	r3, r3, #5
 80146be:	429a      	cmp	r2, r3
 80146c0:	d10d      	bne.n	80146de <UART_Start_Receive_IT+0x56>
 80146c2:	68fb      	ldr	r3, [r7, #12]
 80146c4:	691b      	ldr	r3, [r3, #16]
 80146c6:	2b00      	cmp	r3, #0
 80146c8:	d104      	bne.n	80146d4 <UART_Start_Receive_IT+0x4c>
 80146ca:	68fb      	ldr	r3, [r7, #12]
 80146cc:	2260      	movs	r2, #96	@ 0x60
 80146ce:	497f      	ldr	r1, [pc, #508]	@ (80148cc <UART_Start_Receive_IT+0x244>)
 80146d0:	5299      	strh	r1, [r3, r2]
 80146d2:	e02e      	b.n	8014732 <UART_Start_Receive_IT+0xaa>
 80146d4:	68fb      	ldr	r3, [r7, #12]
 80146d6:	2260      	movs	r2, #96	@ 0x60
 80146d8:	21ff      	movs	r1, #255	@ 0xff
 80146da:	5299      	strh	r1, [r3, r2]
 80146dc:	e029      	b.n	8014732 <UART_Start_Receive_IT+0xaa>
 80146de:	68fb      	ldr	r3, [r7, #12]
 80146e0:	689b      	ldr	r3, [r3, #8]
 80146e2:	2b00      	cmp	r3, #0
 80146e4:	d10d      	bne.n	8014702 <UART_Start_Receive_IT+0x7a>
 80146e6:	68fb      	ldr	r3, [r7, #12]
 80146e8:	691b      	ldr	r3, [r3, #16]
 80146ea:	2b00      	cmp	r3, #0
 80146ec:	d104      	bne.n	80146f8 <UART_Start_Receive_IT+0x70>
 80146ee:	68fb      	ldr	r3, [r7, #12]
 80146f0:	2260      	movs	r2, #96	@ 0x60
 80146f2:	21ff      	movs	r1, #255	@ 0xff
 80146f4:	5299      	strh	r1, [r3, r2]
 80146f6:	e01c      	b.n	8014732 <UART_Start_Receive_IT+0xaa>
 80146f8:	68fb      	ldr	r3, [r7, #12]
 80146fa:	2260      	movs	r2, #96	@ 0x60
 80146fc:	217f      	movs	r1, #127	@ 0x7f
 80146fe:	5299      	strh	r1, [r3, r2]
 8014700:	e017      	b.n	8014732 <UART_Start_Receive_IT+0xaa>
 8014702:	68fb      	ldr	r3, [r7, #12]
 8014704:	689a      	ldr	r2, [r3, #8]
 8014706:	2380      	movs	r3, #128	@ 0x80
 8014708:	055b      	lsls	r3, r3, #21
 801470a:	429a      	cmp	r2, r3
 801470c:	d10d      	bne.n	801472a <UART_Start_Receive_IT+0xa2>
 801470e:	68fb      	ldr	r3, [r7, #12]
 8014710:	691b      	ldr	r3, [r3, #16]
 8014712:	2b00      	cmp	r3, #0
 8014714:	d104      	bne.n	8014720 <UART_Start_Receive_IT+0x98>
 8014716:	68fb      	ldr	r3, [r7, #12]
 8014718:	2260      	movs	r2, #96	@ 0x60
 801471a:	217f      	movs	r1, #127	@ 0x7f
 801471c:	5299      	strh	r1, [r3, r2]
 801471e:	e008      	b.n	8014732 <UART_Start_Receive_IT+0xaa>
 8014720:	68fb      	ldr	r3, [r7, #12]
 8014722:	2260      	movs	r2, #96	@ 0x60
 8014724:	213f      	movs	r1, #63	@ 0x3f
 8014726:	5299      	strh	r1, [r3, r2]
 8014728:	e003      	b.n	8014732 <UART_Start_Receive_IT+0xaa>
 801472a:	68fb      	ldr	r3, [r7, #12]
 801472c:	2260      	movs	r2, #96	@ 0x60
 801472e:	2100      	movs	r1, #0
 8014730:	5299      	strh	r1, [r3, r2]
 8014732:	68fb      	ldr	r3, [r7, #12]
 8014734:	228c      	movs	r2, #140	@ 0x8c
 8014736:	2100      	movs	r1, #0
 8014738:	5099      	str	r1, [r3, r2]
 801473a:	68fb      	ldr	r3, [r7, #12]
 801473c:	2288      	movs	r2, #136	@ 0x88
 801473e:	2122      	movs	r1, #34	@ 0x22
 8014740:	5099      	str	r1, [r3, r2]
 8014742:	f3ef 8310 	mrs	r3, PRIMASK
 8014746:	643b      	str	r3, [r7, #64]	@ 0x40
 8014748:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 801474a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 801474c:	2301      	movs	r3, #1
 801474e:	647b      	str	r3, [r7, #68]	@ 0x44
 8014750:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8014752:	f383 8810 	msr	PRIMASK, r3
 8014756:	46c0      	nop			@ (mov r8, r8)
 8014758:	68fb      	ldr	r3, [r7, #12]
 801475a:	681b      	ldr	r3, [r3, #0]
 801475c:	689a      	ldr	r2, [r3, #8]
 801475e:	68fb      	ldr	r3, [r7, #12]
 8014760:	681b      	ldr	r3, [r3, #0]
 8014762:	2101      	movs	r1, #1
 8014764:	430a      	orrs	r2, r1
 8014766:	609a      	str	r2, [r3, #8]
 8014768:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 801476a:	64bb      	str	r3, [r7, #72]	@ 0x48
 801476c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 801476e:	f383 8810 	msr	PRIMASK, r3
 8014772:	46c0      	nop			@ (mov r8, r8)
 8014774:	68fb      	ldr	r3, [r7, #12]
 8014776:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8014778:	2380      	movs	r3, #128	@ 0x80
 801477a:	059b      	lsls	r3, r3, #22
 801477c:	429a      	cmp	r2, r3
 801477e:	d154      	bne.n	801482a <UART_Start_Receive_IT+0x1a2>
 8014780:	68fb      	ldr	r3, [r7, #12]
 8014782:	2268      	movs	r2, #104	@ 0x68
 8014784:	5a9b      	ldrh	r3, [r3, r2]
 8014786:	1dba      	adds	r2, r7, #6
 8014788:	8812      	ldrh	r2, [r2, #0]
 801478a:	429a      	cmp	r2, r3
 801478c:	d34d      	bcc.n	801482a <UART_Start_Receive_IT+0x1a2>
 801478e:	68fb      	ldr	r3, [r7, #12]
 8014790:	689a      	ldr	r2, [r3, #8]
 8014792:	2380      	movs	r3, #128	@ 0x80
 8014794:	015b      	lsls	r3, r3, #5
 8014796:	429a      	cmp	r2, r3
 8014798:	d107      	bne.n	80147aa <UART_Start_Receive_IT+0x122>
 801479a:	68fb      	ldr	r3, [r7, #12]
 801479c:	691b      	ldr	r3, [r3, #16]
 801479e:	2b00      	cmp	r3, #0
 80147a0:	d103      	bne.n	80147aa <UART_Start_Receive_IT+0x122>
 80147a2:	68fb      	ldr	r3, [r7, #12]
 80147a4:	4a4a      	ldr	r2, [pc, #296]	@ (80148d0 <UART_Start_Receive_IT+0x248>)
 80147a6:	671a      	str	r2, [r3, #112]	@ 0x70
 80147a8:	e002      	b.n	80147b0 <UART_Start_Receive_IT+0x128>
 80147aa:	68fb      	ldr	r3, [r7, #12]
 80147ac:	4a49      	ldr	r2, [pc, #292]	@ (80148d4 <UART_Start_Receive_IT+0x24c>)
 80147ae:	671a      	str	r2, [r3, #112]	@ 0x70
 80147b0:	68fb      	ldr	r3, [r7, #12]
 80147b2:	2280      	movs	r2, #128	@ 0x80
 80147b4:	2100      	movs	r1, #0
 80147b6:	5499      	strb	r1, [r3, r2]
 80147b8:	68fb      	ldr	r3, [r7, #12]
 80147ba:	691b      	ldr	r3, [r3, #16]
 80147bc:	2b00      	cmp	r3, #0
 80147be:	d019      	beq.n	80147f4 <UART_Start_Receive_IT+0x16c>
 80147c0:	f3ef 8310 	mrs	r3, PRIMASK
 80147c4:	637b      	str	r3, [r7, #52]	@ 0x34
 80147c6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80147c8:	65bb      	str	r3, [r7, #88]	@ 0x58
 80147ca:	2301      	movs	r3, #1
 80147cc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80147ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80147d0:	f383 8810 	msr	PRIMASK, r3
 80147d4:	46c0      	nop			@ (mov r8, r8)
 80147d6:	68fb      	ldr	r3, [r7, #12]
 80147d8:	681b      	ldr	r3, [r3, #0]
 80147da:	681a      	ldr	r2, [r3, #0]
 80147dc:	68fb      	ldr	r3, [r7, #12]
 80147de:	681b      	ldr	r3, [r3, #0]
 80147e0:	2180      	movs	r1, #128	@ 0x80
 80147e2:	0049      	lsls	r1, r1, #1
 80147e4:	430a      	orrs	r2, r1
 80147e6:	601a      	str	r2, [r3, #0]
 80147e8:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80147ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80147ec:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80147ee:	f383 8810 	msr	PRIMASK, r3
 80147f2:	46c0      	nop			@ (mov r8, r8)
 80147f4:	f3ef 8310 	mrs	r3, PRIMASK
 80147f8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80147fa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80147fc:	657b      	str	r3, [r7, #84]	@ 0x54
 80147fe:	2301      	movs	r3, #1
 8014800:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8014802:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8014804:	f383 8810 	msr	PRIMASK, r3
 8014808:	46c0      	nop			@ (mov r8, r8)
 801480a:	68fb      	ldr	r3, [r7, #12]
 801480c:	681b      	ldr	r3, [r3, #0]
 801480e:	689a      	ldr	r2, [r3, #8]
 8014810:	68fb      	ldr	r3, [r7, #12]
 8014812:	681b      	ldr	r3, [r3, #0]
 8014814:	2180      	movs	r1, #128	@ 0x80
 8014816:	0549      	lsls	r1, r1, #21
 8014818:	430a      	orrs	r2, r1
 801481a:	609a      	str	r2, [r3, #8]
 801481c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 801481e:	633b      	str	r3, [r7, #48]	@ 0x30
 8014820:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8014822:	f383 8810 	msr	PRIMASK, r3
 8014826:	46c0      	nop			@ (mov r8, r8)
 8014828:	e04b      	b.n	80148c2 <UART_Start_Receive_IT+0x23a>
 801482a:	68fb      	ldr	r3, [r7, #12]
 801482c:	689a      	ldr	r2, [r3, #8]
 801482e:	2380      	movs	r3, #128	@ 0x80
 8014830:	015b      	lsls	r3, r3, #5
 8014832:	429a      	cmp	r2, r3
 8014834:	d107      	bne.n	8014846 <UART_Start_Receive_IT+0x1be>
 8014836:	68fb      	ldr	r3, [r7, #12]
 8014838:	691b      	ldr	r3, [r3, #16]
 801483a:	2b00      	cmp	r3, #0
 801483c:	d103      	bne.n	8014846 <UART_Start_Receive_IT+0x1be>
 801483e:	68fb      	ldr	r3, [r7, #12]
 8014840:	4a25      	ldr	r2, [pc, #148]	@ (80148d8 <UART_Start_Receive_IT+0x250>)
 8014842:	671a      	str	r2, [r3, #112]	@ 0x70
 8014844:	e002      	b.n	801484c <UART_Start_Receive_IT+0x1c4>
 8014846:	68fb      	ldr	r3, [r7, #12]
 8014848:	4a24      	ldr	r2, [pc, #144]	@ (80148dc <UART_Start_Receive_IT+0x254>)
 801484a:	671a      	str	r2, [r3, #112]	@ 0x70
 801484c:	68fb      	ldr	r3, [r7, #12]
 801484e:	2280      	movs	r2, #128	@ 0x80
 8014850:	2100      	movs	r1, #0
 8014852:	5499      	strb	r1, [r3, r2]
 8014854:	68fb      	ldr	r3, [r7, #12]
 8014856:	691b      	ldr	r3, [r3, #16]
 8014858:	2b00      	cmp	r3, #0
 801485a:	d019      	beq.n	8014890 <UART_Start_Receive_IT+0x208>
 801485c:	f3ef 8310 	mrs	r3, PRIMASK
 8014860:	61fb      	str	r3, [r7, #28]
 8014862:	69fb      	ldr	r3, [r7, #28]
 8014864:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8014866:	2301      	movs	r3, #1
 8014868:	623b      	str	r3, [r7, #32]
 801486a:	6a3b      	ldr	r3, [r7, #32]
 801486c:	f383 8810 	msr	PRIMASK, r3
 8014870:	46c0      	nop			@ (mov r8, r8)
 8014872:	68fb      	ldr	r3, [r7, #12]
 8014874:	681b      	ldr	r3, [r3, #0]
 8014876:	681a      	ldr	r2, [r3, #0]
 8014878:	68fb      	ldr	r3, [r7, #12]
 801487a:	681b      	ldr	r3, [r3, #0]
 801487c:	2190      	movs	r1, #144	@ 0x90
 801487e:	0049      	lsls	r1, r1, #1
 8014880:	430a      	orrs	r2, r1
 8014882:	601a      	str	r2, [r3, #0]
 8014884:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014886:	627b      	str	r3, [r7, #36]	@ 0x24
 8014888:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801488a:	f383 8810 	msr	PRIMASK, r3
 801488e:	e018      	b.n	80148c2 <UART_Start_Receive_IT+0x23a>
 8014890:	f3ef 8310 	mrs	r3, PRIMASK
 8014894:	613b      	str	r3, [r7, #16]
 8014896:	693b      	ldr	r3, [r7, #16]
 8014898:	653b      	str	r3, [r7, #80]	@ 0x50
 801489a:	2301      	movs	r3, #1
 801489c:	617b      	str	r3, [r7, #20]
 801489e:	697b      	ldr	r3, [r7, #20]
 80148a0:	f383 8810 	msr	PRIMASK, r3
 80148a4:	46c0      	nop			@ (mov r8, r8)
 80148a6:	68fb      	ldr	r3, [r7, #12]
 80148a8:	681b      	ldr	r3, [r3, #0]
 80148aa:	681a      	ldr	r2, [r3, #0]
 80148ac:	68fb      	ldr	r3, [r7, #12]
 80148ae:	681b      	ldr	r3, [r3, #0]
 80148b0:	2120      	movs	r1, #32
 80148b2:	430a      	orrs	r2, r1
 80148b4:	601a      	str	r2, [r3, #0]
 80148b6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80148b8:	61bb      	str	r3, [r7, #24]
 80148ba:	69bb      	ldr	r3, [r7, #24]
 80148bc:	f383 8810 	msr	PRIMASK, r3
 80148c0:	46c0      	nop			@ (mov r8, r8)
 80148c2:	2300      	movs	r3, #0
 80148c4:	0018      	movs	r0, r3
 80148c6:	46bd      	mov	sp, r7
 80148c8:	b018      	add	sp, #96	@ 0x60
 80148ca:	bd80      	pop	{r7, pc}
 80148cc:	000001ff 	.word	0x000001ff
 80148d0:	080153a9 	.word	0x080153a9
 80148d4:	080150c5 	.word	0x080150c5
 80148d8:	08014f59 	.word	0x08014f59
 80148dc:	08014ded 	.word	0x08014ded

080148e0 <UART_Start_Receive_DMA>:
 80148e0:	b580      	push	{r7, lr}
 80148e2:	b090      	sub	sp, #64	@ 0x40
 80148e4:	af00      	add	r7, sp, #0
 80148e6:	60f8      	str	r0, [r7, #12]
 80148e8:	60b9      	str	r1, [r7, #8]
 80148ea:	1dbb      	adds	r3, r7, #6
 80148ec:	801a      	strh	r2, [r3, #0]
 80148ee:	68fb      	ldr	r3, [r7, #12]
 80148f0:	68ba      	ldr	r2, [r7, #8]
 80148f2:	659a      	str	r2, [r3, #88]	@ 0x58
 80148f4:	68fb      	ldr	r3, [r7, #12]
 80148f6:	1dba      	adds	r2, r7, #6
 80148f8:	215c      	movs	r1, #92	@ 0x5c
 80148fa:	8812      	ldrh	r2, [r2, #0]
 80148fc:	525a      	strh	r2, [r3, r1]
 80148fe:	68fb      	ldr	r3, [r7, #12]
 8014900:	228c      	movs	r2, #140	@ 0x8c
 8014902:	2100      	movs	r1, #0
 8014904:	5099      	str	r1, [r3, r2]
 8014906:	68fb      	ldr	r3, [r7, #12]
 8014908:	2288      	movs	r2, #136	@ 0x88
 801490a:	2122      	movs	r1, #34	@ 0x22
 801490c:	5099      	str	r1, [r3, r2]
 801490e:	68fb      	ldr	r3, [r7, #12]
 8014910:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8014912:	2b00      	cmp	r3, #0
 8014914:	d02c      	beq.n	8014970 <UART_Start_Receive_DMA+0x90>
 8014916:	68fb      	ldr	r3, [r7, #12]
 8014918:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801491a:	4a42      	ldr	r2, [pc, #264]	@ (8014a24 <UART_Start_Receive_DMA+0x144>)
 801491c:	62da      	str	r2, [r3, #44]	@ 0x2c
 801491e:	68fb      	ldr	r3, [r7, #12]
 8014920:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8014922:	4a41      	ldr	r2, [pc, #260]	@ (8014a28 <UART_Start_Receive_DMA+0x148>)
 8014924:	631a      	str	r2, [r3, #48]	@ 0x30
 8014926:	68fb      	ldr	r3, [r7, #12]
 8014928:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801492a:	4a40      	ldr	r2, [pc, #256]	@ (8014a2c <UART_Start_Receive_DMA+0x14c>)
 801492c:	635a      	str	r2, [r3, #52]	@ 0x34
 801492e:	68fb      	ldr	r3, [r7, #12]
 8014930:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8014932:	2200      	movs	r2, #0
 8014934:	639a      	str	r2, [r3, #56]	@ 0x38
 8014936:	68fb      	ldr	r3, [r7, #12]
 8014938:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
 801493a:	68fb      	ldr	r3, [r7, #12]
 801493c:	681b      	ldr	r3, [r3, #0]
 801493e:	3324      	adds	r3, #36	@ 0x24
 8014940:	0019      	movs	r1, r3
 8014942:	68fb      	ldr	r3, [r7, #12]
 8014944:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8014946:	001a      	movs	r2, r3
 8014948:	1dbb      	adds	r3, r7, #6
 801494a:	881b      	ldrh	r3, [r3, #0]
 801494c:	f7f9 fb3c 	bl	800dfc8 <HAL_DMA_Start_IT>
 8014950:	1e03      	subs	r3, r0, #0
 8014952:	d00d      	beq.n	8014970 <UART_Start_Receive_DMA+0x90>
 8014954:	68fb      	ldr	r3, [r7, #12]
 8014956:	228c      	movs	r2, #140	@ 0x8c
 8014958:	2110      	movs	r1, #16
 801495a:	5099      	str	r1, [r3, r2]
 801495c:	68fb      	ldr	r3, [r7, #12]
 801495e:	2280      	movs	r2, #128	@ 0x80
 8014960:	2100      	movs	r1, #0
 8014962:	5499      	strb	r1, [r3, r2]
 8014964:	68fb      	ldr	r3, [r7, #12]
 8014966:	2288      	movs	r2, #136	@ 0x88
 8014968:	2120      	movs	r1, #32
 801496a:	5099      	str	r1, [r3, r2]
 801496c:	2301      	movs	r3, #1
 801496e:	e054      	b.n	8014a1a <UART_Start_Receive_DMA+0x13a>
 8014970:	68fb      	ldr	r3, [r7, #12]
 8014972:	2280      	movs	r2, #128	@ 0x80
 8014974:	2100      	movs	r1, #0
 8014976:	5499      	strb	r1, [r3, r2]
 8014978:	68fb      	ldr	r3, [r7, #12]
 801497a:	691b      	ldr	r3, [r3, #16]
 801497c:	2b00      	cmp	r3, #0
 801497e:	d019      	beq.n	80149b4 <UART_Start_Receive_DMA+0xd4>
 8014980:	f3ef 8310 	mrs	r3, PRIMASK
 8014984:	62bb      	str	r3, [r7, #40]	@ 0x28
 8014986:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8014988:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801498a:	2301      	movs	r3, #1
 801498c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801498e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8014990:	f383 8810 	msr	PRIMASK, r3
 8014994:	46c0      	nop			@ (mov r8, r8)
 8014996:	68fb      	ldr	r3, [r7, #12]
 8014998:	681b      	ldr	r3, [r3, #0]
 801499a:	681a      	ldr	r2, [r3, #0]
 801499c:	68fb      	ldr	r3, [r7, #12]
 801499e:	681b      	ldr	r3, [r3, #0]
 80149a0:	2180      	movs	r1, #128	@ 0x80
 80149a2:	0049      	lsls	r1, r1, #1
 80149a4:	430a      	orrs	r2, r1
 80149a6:	601a      	str	r2, [r3, #0]
 80149a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80149aa:	633b      	str	r3, [r7, #48]	@ 0x30
 80149ac:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80149ae:	f383 8810 	msr	PRIMASK, r3
 80149b2:	46c0      	nop			@ (mov r8, r8)
 80149b4:	f3ef 8310 	mrs	r3, PRIMASK
 80149b8:	613b      	str	r3, [r7, #16]
 80149ba:	693b      	ldr	r3, [r7, #16]
 80149bc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80149be:	2301      	movs	r3, #1
 80149c0:	617b      	str	r3, [r7, #20]
 80149c2:	697b      	ldr	r3, [r7, #20]
 80149c4:	f383 8810 	msr	PRIMASK, r3
 80149c8:	46c0      	nop			@ (mov r8, r8)
 80149ca:	68fb      	ldr	r3, [r7, #12]
 80149cc:	681b      	ldr	r3, [r3, #0]
 80149ce:	689a      	ldr	r2, [r3, #8]
 80149d0:	68fb      	ldr	r3, [r7, #12]
 80149d2:	681b      	ldr	r3, [r3, #0]
 80149d4:	2101      	movs	r1, #1
 80149d6:	430a      	orrs	r2, r1
 80149d8:	609a      	str	r2, [r3, #8]
 80149da:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80149dc:	61bb      	str	r3, [r7, #24]
 80149de:	69bb      	ldr	r3, [r7, #24]
 80149e0:	f383 8810 	msr	PRIMASK, r3
 80149e4:	46c0      	nop			@ (mov r8, r8)
 80149e6:	f3ef 8310 	mrs	r3, PRIMASK
 80149ea:	61fb      	str	r3, [r7, #28]
 80149ec:	69fb      	ldr	r3, [r7, #28]
 80149ee:	637b      	str	r3, [r7, #52]	@ 0x34
 80149f0:	2301      	movs	r3, #1
 80149f2:	623b      	str	r3, [r7, #32]
 80149f4:	6a3b      	ldr	r3, [r7, #32]
 80149f6:	f383 8810 	msr	PRIMASK, r3
 80149fa:	46c0      	nop			@ (mov r8, r8)
 80149fc:	68fb      	ldr	r3, [r7, #12]
 80149fe:	681b      	ldr	r3, [r3, #0]
 8014a00:	689a      	ldr	r2, [r3, #8]
 8014a02:	68fb      	ldr	r3, [r7, #12]
 8014a04:	681b      	ldr	r3, [r3, #0]
 8014a06:	2140      	movs	r1, #64	@ 0x40
 8014a08:	430a      	orrs	r2, r1
 8014a0a:	609a      	str	r2, [r3, #8]
 8014a0c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8014a0e:	627b      	str	r3, [r7, #36]	@ 0x24
 8014a10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014a12:	f383 8810 	msr	PRIMASK, r3
 8014a16:	46c0      	nop			@ (mov r8, r8)
 8014a18:	2300      	movs	r3, #0
 8014a1a:	0018      	movs	r0, r3
 8014a1c:	46bd      	mov	sp, r7
 8014a1e:	b010      	add	sp, #64	@ 0x40
 8014a20:	bd80      	pop	{r7, pc}
 8014a22:	46c0      	nop			@ (mov r8, r8)
 8014a24:	08014b7d 	.word	0x08014b7d
 8014a28:	08014ca5 	.word	0x08014ca5
 8014a2c:	08014ce1 	.word	0x08014ce1

08014a30 <UART_EndTxTransfer>:
 8014a30:	b580      	push	{r7, lr}
 8014a32:	b08a      	sub	sp, #40	@ 0x28
 8014a34:	af00      	add	r7, sp, #0
 8014a36:	6078      	str	r0, [r7, #4]
 8014a38:	f3ef 8310 	mrs	r3, PRIMASK
 8014a3c:	60bb      	str	r3, [r7, #8]
 8014a3e:	68bb      	ldr	r3, [r7, #8]
 8014a40:	627b      	str	r3, [r7, #36]	@ 0x24
 8014a42:	2301      	movs	r3, #1
 8014a44:	60fb      	str	r3, [r7, #12]
 8014a46:	68fb      	ldr	r3, [r7, #12]
 8014a48:	f383 8810 	msr	PRIMASK, r3
 8014a4c:	46c0      	nop			@ (mov r8, r8)
 8014a4e:	687b      	ldr	r3, [r7, #4]
 8014a50:	681b      	ldr	r3, [r3, #0]
 8014a52:	681a      	ldr	r2, [r3, #0]
 8014a54:	687b      	ldr	r3, [r7, #4]
 8014a56:	681b      	ldr	r3, [r3, #0]
 8014a58:	21c0      	movs	r1, #192	@ 0xc0
 8014a5a:	438a      	bics	r2, r1
 8014a5c:	601a      	str	r2, [r3, #0]
 8014a5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014a60:	613b      	str	r3, [r7, #16]
 8014a62:	693b      	ldr	r3, [r7, #16]
 8014a64:	f383 8810 	msr	PRIMASK, r3
 8014a68:	46c0      	nop			@ (mov r8, r8)
 8014a6a:	f3ef 8310 	mrs	r3, PRIMASK
 8014a6e:	617b      	str	r3, [r7, #20]
 8014a70:	697b      	ldr	r3, [r7, #20]
 8014a72:	623b      	str	r3, [r7, #32]
 8014a74:	2301      	movs	r3, #1
 8014a76:	61bb      	str	r3, [r7, #24]
 8014a78:	69bb      	ldr	r3, [r7, #24]
 8014a7a:	f383 8810 	msr	PRIMASK, r3
 8014a7e:	46c0      	nop			@ (mov r8, r8)
 8014a80:	687b      	ldr	r3, [r7, #4]
 8014a82:	681b      	ldr	r3, [r3, #0]
 8014a84:	689a      	ldr	r2, [r3, #8]
 8014a86:	687b      	ldr	r3, [r7, #4]
 8014a88:	681b      	ldr	r3, [r3, #0]
 8014a8a:	4908      	ldr	r1, [pc, #32]	@ (8014aac <UART_EndTxTransfer+0x7c>)
 8014a8c:	400a      	ands	r2, r1
 8014a8e:	609a      	str	r2, [r3, #8]
 8014a90:	6a3b      	ldr	r3, [r7, #32]
 8014a92:	61fb      	str	r3, [r7, #28]
 8014a94:	69fb      	ldr	r3, [r7, #28]
 8014a96:	f383 8810 	msr	PRIMASK, r3
 8014a9a:	46c0      	nop			@ (mov r8, r8)
 8014a9c:	687b      	ldr	r3, [r7, #4]
 8014a9e:	2284      	movs	r2, #132	@ 0x84
 8014aa0:	2120      	movs	r1, #32
 8014aa2:	5099      	str	r1, [r3, r2]
 8014aa4:	46c0      	nop			@ (mov r8, r8)
 8014aa6:	46bd      	mov	sp, r7
 8014aa8:	b00a      	add	sp, #40	@ 0x28
 8014aaa:	bd80      	pop	{r7, pc}
 8014aac:	ff7fffff 	.word	0xff7fffff

08014ab0 <UART_EndRxTransfer>:
 8014ab0:	b580      	push	{r7, lr}
 8014ab2:	b08e      	sub	sp, #56	@ 0x38
 8014ab4:	af00      	add	r7, sp, #0
 8014ab6:	6078      	str	r0, [r7, #4]
 8014ab8:	f3ef 8310 	mrs	r3, PRIMASK
 8014abc:	617b      	str	r3, [r7, #20]
 8014abe:	697b      	ldr	r3, [r7, #20]
 8014ac0:	637b      	str	r3, [r7, #52]	@ 0x34
 8014ac2:	2301      	movs	r3, #1
 8014ac4:	61bb      	str	r3, [r7, #24]
 8014ac6:	69bb      	ldr	r3, [r7, #24]
 8014ac8:	f383 8810 	msr	PRIMASK, r3
 8014acc:	46c0      	nop			@ (mov r8, r8)
 8014ace:	687b      	ldr	r3, [r7, #4]
 8014ad0:	681b      	ldr	r3, [r3, #0]
 8014ad2:	681a      	ldr	r2, [r3, #0]
 8014ad4:	687b      	ldr	r3, [r7, #4]
 8014ad6:	681b      	ldr	r3, [r3, #0]
 8014ad8:	4926      	ldr	r1, [pc, #152]	@ (8014b74 <UART_EndRxTransfer+0xc4>)
 8014ada:	400a      	ands	r2, r1
 8014adc:	601a      	str	r2, [r3, #0]
 8014ade:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8014ae0:	61fb      	str	r3, [r7, #28]
 8014ae2:	69fb      	ldr	r3, [r7, #28]
 8014ae4:	f383 8810 	msr	PRIMASK, r3
 8014ae8:	46c0      	nop			@ (mov r8, r8)
 8014aea:	f3ef 8310 	mrs	r3, PRIMASK
 8014aee:	623b      	str	r3, [r7, #32]
 8014af0:	6a3b      	ldr	r3, [r7, #32]
 8014af2:	633b      	str	r3, [r7, #48]	@ 0x30
 8014af4:	2301      	movs	r3, #1
 8014af6:	627b      	str	r3, [r7, #36]	@ 0x24
 8014af8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014afa:	f383 8810 	msr	PRIMASK, r3
 8014afe:	46c0      	nop			@ (mov r8, r8)
 8014b00:	687b      	ldr	r3, [r7, #4]
 8014b02:	681b      	ldr	r3, [r3, #0]
 8014b04:	689a      	ldr	r2, [r3, #8]
 8014b06:	687b      	ldr	r3, [r7, #4]
 8014b08:	681b      	ldr	r3, [r3, #0]
 8014b0a:	491b      	ldr	r1, [pc, #108]	@ (8014b78 <UART_EndRxTransfer+0xc8>)
 8014b0c:	400a      	ands	r2, r1
 8014b0e:	609a      	str	r2, [r3, #8]
 8014b10:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8014b12:	62bb      	str	r3, [r7, #40]	@ 0x28
 8014b14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8014b16:	f383 8810 	msr	PRIMASK, r3
 8014b1a:	46c0      	nop			@ (mov r8, r8)
 8014b1c:	687b      	ldr	r3, [r7, #4]
 8014b1e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014b20:	2b01      	cmp	r3, #1
 8014b22:	d118      	bne.n	8014b56 <UART_EndRxTransfer+0xa6>
 8014b24:	f3ef 8310 	mrs	r3, PRIMASK
 8014b28:	60bb      	str	r3, [r7, #8]
 8014b2a:	68bb      	ldr	r3, [r7, #8]
 8014b2c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8014b2e:	2301      	movs	r3, #1
 8014b30:	60fb      	str	r3, [r7, #12]
 8014b32:	68fb      	ldr	r3, [r7, #12]
 8014b34:	f383 8810 	msr	PRIMASK, r3
 8014b38:	46c0      	nop			@ (mov r8, r8)
 8014b3a:	687b      	ldr	r3, [r7, #4]
 8014b3c:	681b      	ldr	r3, [r3, #0]
 8014b3e:	681a      	ldr	r2, [r3, #0]
 8014b40:	687b      	ldr	r3, [r7, #4]
 8014b42:	681b      	ldr	r3, [r3, #0]
 8014b44:	2110      	movs	r1, #16
 8014b46:	438a      	bics	r2, r1
 8014b48:	601a      	str	r2, [r3, #0]
 8014b4a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8014b4c:	613b      	str	r3, [r7, #16]
 8014b4e:	693b      	ldr	r3, [r7, #16]
 8014b50:	f383 8810 	msr	PRIMASK, r3
 8014b54:	46c0      	nop			@ (mov r8, r8)
 8014b56:	687b      	ldr	r3, [r7, #4]
 8014b58:	2288      	movs	r2, #136	@ 0x88
 8014b5a:	2120      	movs	r1, #32
 8014b5c:	5099      	str	r1, [r3, r2]
 8014b5e:	687b      	ldr	r3, [r7, #4]
 8014b60:	2200      	movs	r2, #0
 8014b62:	66da      	str	r2, [r3, #108]	@ 0x6c
 8014b64:	687b      	ldr	r3, [r7, #4]
 8014b66:	2200      	movs	r2, #0
 8014b68:	671a      	str	r2, [r3, #112]	@ 0x70
 8014b6a:	46c0      	nop			@ (mov r8, r8)
 8014b6c:	46bd      	mov	sp, r7
 8014b6e:	b00e      	add	sp, #56	@ 0x38
 8014b70:	bd80      	pop	{r7, pc}
 8014b72:	46c0      	nop			@ (mov r8, r8)
 8014b74:	fffffedf 	.word	0xfffffedf
 8014b78:	effffffe 	.word	0xeffffffe

08014b7c <UART_DMAReceiveCplt>:
 8014b7c:	b580      	push	{r7, lr}
 8014b7e:	b094      	sub	sp, #80	@ 0x50
 8014b80:	af00      	add	r7, sp, #0
 8014b82:	6078      	str	r0, [r7, #4]
 8014b84:	687b      	ldr	r3, [r7, #4]
 8014b86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014b88:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8014b8a:	687b      	ldr	r3, [r7, #4]
 8014b8c:	681b      	ldr	r3, [r3, #0]
 8014b8e:	681b      	ldr	r3, [r3, #0]
 8014b90:	2220      	movs	r2, #32
 8014b92:	4013      	ands	r3, r2
 8014b94:	d16f      	bne.n	8014c76 <UART_DMAReceiveCplt+0xfa>
 8014b96:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014b98:	225e      	movs	r2, #94	@ 0x5e
 8014b9a:	2100      	movs	r1, #0
 8014b9c:	5299      	strh	r1, [r3, r2]
 8014b9e:	f3ef 8310 	mrs	r3, PRIMASK
 8014ba2:	61bb      	str	r3, [r7, #24]
 8014ba4:	69bb      	ldr	r3, [r7, #24]
 8014ba6:	64bb      	str	r3, [r7, #72]	@ 0x48
 8014ba8:	2301      	movs	r3, #1
 8014baa:	61fb      	str	r3, [r7, #28]
 8014bac:	69fb      	ldr	r3, [r7, #28]
 8014bae:	f383 8810 	msr	PRIMASK, r3
 8014bb2:	46c0      	nop			@ (mov r8, r8)
 8014bb4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014bb6:	681b      	ldr	r3, [r3, #0]
 8014bb8:	681a      	ldr	r2, [r3, #0]
 8014bba:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014bbc:	681b      	ldr	r3, [r3, #0]
 8014bbe:	4938      	ldr	r1, [pc, #224]	@ (8014ca0 <UART_DMAReceiveCplt+0x124>)
 8014bc0:	400a      	ands	r2, r1
 8014bc2:	601a      	str	r2, [r3, #0]
 8014bc4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8014bc6:	623b      	str	r3, [r7, #32]
 8014bc8:	6a3b      	ldr	r3, [r7, #32]
 8014bca:	f383 8810 	msr	PRIMASK, r3
 8014bce:	46c0      	nop			@ (mov r8, r8)
 8014bd0:	f3ef 8310 	mrs	r3, PRIMASK
 8014bd4:	627b      	str	r3, [r7, #36]	@ 0x24
 8014bd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014bd8:	647b      	str	r3, [r7, #68]	@ 0x44
 8014bda:	2301      	movs	r3, #1
 8014bdc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8014bde:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8014be0:	f383 8810 	msr	PRIMASK, r3
 8014be4:	46c0      	nop			@ (mov r8, r8)
 8014be6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014be8:	681b      	ldr	r3, [r3, #0]
 8014bea:	689a      	ldr	r2, [r3, #8]
 8014bec:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014bee:	681b      	ldr	r3, [r3, #0]
 8014bf0:	2101      	movs	r1, #1
 8014bf2:	438a      	bics	r2, r1
 8014bf4:	609a      	str	r2, [r3, #8]
 8014bf6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8014bf8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8014bfa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8014bfc:	f383 8810 	msr	PRIMASK, r3
 8014c00:	46c0      	nop			@ (mov r8, r8)
 8014c02:	f3ef 8310 	mrs	r3, PRIMASK
 8014c06:	633b      	str	r3, [r7, #48]	@ 0x30
 8014c08:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8014c0a:	643b      	str	r3, [r7, #64]	@ 0x40
 8014c0c:	2301      	movs	r3, #1
 8014c0e:	637b      	str	r3, [r7, #52]	@ 0x34
 8014c10:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8014c12:	f383 8810 	msr	PRIMASK, r3
 8014c16:	46c0      	nop			@ (mov r8, r8)
 8014c18:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c1a:	681b      	ldr	r3, [r3, #0]
 8014c1c:	689a      	ldr	r2, [r3, #8]
 8014c1e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c20:	681b      	ldr	r3, [r3, #0]
 8014c22:	2140      	movs	r1, #64	@ 0x40
 8014c24:	438a      	bics	r2, r1
 8014c26:	609a      	str	r2, [r3, #8]
 8014c28:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8014c2a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8014c2c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8014c2e:	f383 8810 	msr	PRIMASK, r3
 8014c32:	46c0      	nop			@ (mov r8, r8)
 8014c34:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c36:	2288      	movs	r2, #136	@ 0x88
 8014c38:	2120      	movs	r1, #32
 8014c3a:	5099      	str	r1, [r3, r2]
 8014c3c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c3e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014c40:	2b01      	cmp	r3, #1
 8014c42:	d118      	bne.n	8014c76 <UART_DMAReceiveCplt+0xfa>
 8014c44:	f3ef 8310 	mrs	r3, PRIMASK
 8014c48:	60fb      	str	r3, [r7, #12]
 8014c4a:	68fb      	ldr	r3, [r7, #12]
 8014c4c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8014c4e:	2301      	movs	r3, #1
 8014c50:	613b      	str	r3, [r7, #16]
 8014c52:	693b      	ldr	r3, [r7, #16]
 8014c54:	f383 8810 	msr	PRIMASK, r3
 8014c58:	46c0      	nop			@ (mov r8, r8)
 8014c5a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c5c:	681b      	ldr	r3, [r3, #0]
 8014c5e:	681a      	ldr	r2, [r3, #0]
 8014c60:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c62:	681b      	ldr	r3, [r3, #0]
 8014c64:	2110      	movs	r1, #16
 8014c66:	438a      	bics	r2, r1
 8014c68:	601a      	str	r2, [r3, #0]
 8014c6a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8014c6c:	617b      	str	r3, [r7, #20]
 8014c6e:	697b      	ldr	r3, [r7, #20]
 8014c70:	f383 8810 	msr	PRIMASK, r3
 8014c74:	46c0      	nop			@ (mov r8, r8)
 8014c76:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c78:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014c7a:	2b01      	cmp	r3, #1
 8014c7c:	d108      	bne.n	8014c90 <UART_DMAReceiveCplt+0x114>
 8014c7e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c80:	225c      	movs	r2, #92	@ 0x5c
 8014c82:	5a9a      	ldrh	r2, [r3, r2]
 8014c84:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c86:	0011      	movs	r1, r2
 8014c88:	0018      	movs	r0, r3
 8014c8a:	f7ff f86d 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 8014c8e:	e003      	b.n	8014c98 <UART_DMAReceiveCplt+0x11c>
 8014c90:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8014c92:	0018      	movs	r0, r3
 8014c94:	f7ef f9d4 	bl	8004040 <HAL_UART_RxCpltCallback>
 8014c98:	46c0      	nop			@ (mov r8, r8)
 8014c9a:	46bd      	mov	sp, r7
 8014c9c:	b014      	add	sp, #80	@ 0x50
 8014c9e:	bd80      	pop	{r7, pc}
 8014ca0:	fffffeff 	.word	0xfffffeff

08014ca4 <UART_DMARxHalfCplt>:
 8014ca4:	b580      	push	{r7, lr}
 8014ca6:	b084      	sub	sp, #16
 8014ca8:	af00      	add	r7, sp, #0
 8014caa:	6078      	str	r0, [r7, #4]
 8014cac:	687b      	ldr	r3, [r7, #4]
 8014cae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014cb0:	60fb      	str	r3, [r7, #12]
 8014cb2:	68fb      	ldr	r3, [r7, #12]
 8014cb4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014cb6:	2b01      	cmp	r3, #1
 8014cb8:	d10a      	bne.n	8014cd0 <UART_DMARxHalfCplt+0x2c>
 8014cba:	68fb      	ldr	r3, [r7, #12]
 8014cbc:	225c      	movs	r2, #92	@ 0x5c
 8014cbe:	5a9b      	ldrh	r3, [r3, r2]
 8014cc0:	085b      	lsrs	r3, r3, #1
 8014cc2:	b29a      	uxth	r2, r3
 8014cc4:	68fb      	ldr	r3, [r7, #12]
 8014cc6:	0011      	movs	r1, r2
 8014cc8:	0018      	movs	r0, r3
 8014cca:	f7ff f84d 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 8014cce:	e003      	b.n	8014cd8 <UART_DMARxHalfCplt+0x34>
 8014cd0:	68fb      	ldr	r3, [r7, #12]
 8014cd2:	0018      	movs	r0, r3
 8014cd4:	f7ff f840 	bl	8013d58 <HAL_UART_RxHalfCpltCallback>
 8014cd8:	46c0      	nop			@ (mov r8, r8)
 8014cda:	46bd      	mov	sp, r7
 8014cdc:	b004      	add	sp, #16
 8014cde:	bd80      	pop	{r7, pc}

08014ce0 <UART_DMAError>:
 8014ce0:	b580      	push	{r7, lr}
 8014ce2:	b086      	sub	sp, #24
 8014ce4:	af00      	add	r7, sp, #0
 8014ce6:	6078      	str	r0, [r7, #4]
 8014ce8:	687b      	ldr	r3, [r7, #4]
 8014cea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014cec:	617b      	str	r3, [r7, #20]
 8014cee:	697b      	ldr	r3, [r7, #20]
 8014cf0:	2284      	movs	r2, #132	@ 0x84
 8014cf2:	589b      	ldr	r3, [r3, r2]
 8014cf4:	613b      	str	r3, [r7, #16]
 8014cf6:	697b      	ldr	r3, [r7, #20]
 8014cf8:	2288      	movs	r2, #136	@ 0x88
 8014cfa:	589b      	ldr	r3, [r3, r2]
 8014cfc:	60fb      	str	r3, [r7, #12]
 8014cfe:	697b      	ldr	r3, [r7, #20]
 8014d00:	681b      	ldr	r3, [r3, #0]
 8014d02:	689b      	ldr	r3, [r3, #8]
 8014d04:	2280      	movs	r2, #128	@ 0x80
 8014d06:	4013      	ands	r3, r2
 8014d08:	2b80      	cmp	r3, #128	@ 0x80
 8014d0a:	d10a      	bne.n	8014d22 <UART_DMAError+0x42>
 8014d0c:	693b      	ldr	r3, [r7, #16]
 8014d0e:	2b21      	cmp	r3, #33	@ 0x21
 8014d10:	d107      	bne.n	8014d22 <UART_DMAError+0x42>
 8014d12:	697b      	ldr	r3, [r7, #20]
 8014d14:	2256      	movs	r2, #86	@ 0x56
 8014d16:	2100      	movs	r1, #0
 8014d18:	5299      	strh	r1, [r3, r2]
 8014d1a:	697b      	ldr	r3, [r7, #20]
 8014d1c:	0018      	movs	r0, r3
 8014d1e:	f7ff fe87 	bl	8014a30 <UART_EndTxTransfer>
 8014d22:	697b      	ldr	r3, [r7, #20]
 8014d24:	681b      	ldr	r3, [r3, #0]
 8014d26:	689b      	ldr	r3, [r3, #8]
 8014d28:	2240      	movs	r2, #64	@ 0x40
 8014d2a:	4013      	ands	r3, r2
 8014d2c:	2b40      	cmp	r3, #64	@ 0x40
 8014d2e:	d10a      	bne.n	8014d46 <UART_DMAError+0x66>
 8014d30:	68fb      	ldr	r3, [r7, #12]
 8014d32:	2b22      	cmp	r3, #34	@ 0x22
 8014d34:	d107      	bne.n	8014d46 <UART_DMAError+0x66>
 8014d36:	697b      	ldr	r3, [r7, #20]
 8014d38:	225e      	movs	r2, #94	@ 0x5e
 8014d3a:	2100      	movs	r1, #0
 8014d3c:	5299      	strh	r1, [r3, r2]
 8014d3e:	697b      	ldr	r3, [r7, #20]
 8014d40:	0018      	movs	r0, r3
 8014d42:	f7ff feb5 	bl	8014ab0 <UART_EndRxTransfer>
 8014d46:	697b      	ldr	r3, [r7, #20]
 8014d48:	228c      	movs	r2, #140	@ 0x8c
 8014d4a:	589b      	ldr	r3, [r3, r2]
 8014d4c:	2210      	movs	r2, #16
 8014d4e:	431a      	orrs	r2, r3
 8014d50:	697b      	ldr	r3, [r7, #20]
 8014d52:	218c      	movs	r1, #140	@ 0x8c
 8014d54:	505a      	str	r2, [r3, r1]
 8014d56:	697b      	ldr	r3, [r7, #20]
 8014d58:	0018      	movs	r0, r3
 8014d5a:	f7ef f95b 	bl	8004014 <HAL_UART_ErrorCallback>
 8014d5e:	46c0      	nop			@ (mov r8, r8)
 8014d60:	46bd      	mov	sp, r7
 8014d62:	b006      	add	sp, #24
 8014d64:	bd80      	pop	{r7, pc}

08014d66 <UART_DMAAbortOnError>:
 8014d66:	b580      	push	{r7, lr}
 8014d68:	b084      	sub	sp, #16
 8014d6a:	af00      	add	r7, sp, #0
 8014d6c:	6078      	str	r0, [r7, #4]
 8014d6e:	687b      	ldr	r3, [r7, #4]
 8014d70:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014d72:	60fb      	str	r3, [r7, #12]
 8014d74:	68fb      	ldr	r3, [r7, #12]
 8014d76:	225e      	movs	r2, #94	@ 0x5e
 8014d78:	2100      	movs	r1, #0
 8014d7a:	5299      	strh	r1, [r3, r2]
 8014d7c:	68fb      	ldr	r3, [r7, #12]
 8014d7e:	2256      	movs	r2, #86	@ 0x56
 8014d80:	2100      	movs	r1, #0
 8014d82:	5299      	strh	r1, [r3, r2]
 8014d84:	68fb      	ldr	r3, [r7, #12]
 8014d86:	0018      	movs	r0, r3
 8014d88:	f7ef f944 	bl	8004014 <HAL_UART_ErrorCallback>
 8014d8c:	46c0      	nop			@ (mov r8, r8)
 8014d8e:	46bd      	mov	sp, r7
 8014d90:	b004      	add	sp, #16
 8014d92:	bd80      	pop	{r7, pc}

08014d94 <UART_EndTransmit_IT>:
 8014d94:	b580      	push	{r7, lr}
 8014d96:	b086      	sub	sp, #24
 8014d98:	af00      	add	r7, sp, #0
 8014d9a:	6078      	str	r0, [r7, #4]
 8014d9c:	f3ef 8310 	mrs	r3, PRIMASK
 8014da0:	60bb      	str	r3, [r7, #8]
 8014da2:	68bb      	ldr	r3, [r7, #8]
 8014da4:	617b      	str	r3, [r7, #20]
 8014da6:	2301      	movs	r3, #1
 8014da8:	60fb      	str	r3, [r7, #12]
 8014daa:	68fb      	ldr	r3, [r7, #12]
 8014dac:	f383 8810 	msr	PRIMASK, r3
 8014db0:	46c0      	nop			@ (mov r8, r8)
 8014db2:	687b      	ldr	r3, [r7, #4]
 8014db4:	681b      	ldr	r3, [r3, #0]
 8014db6:	681a      	ldr	r2, [r3, #0]
 8014db8:	687b      	ldr	r3, [r7, #4]
 8014dba:	681b      	ldr	r3, [r3, #0]
 8014dbc:	2140      	movs	r1, #64	@ 0x40
 8014dbe:	438a      	bics	r2, r1
 8014dc0:	601a      	str	r2, [r3, #0]
 8014dc2:	697b      	ldr	r3, [r7, #20]
 8014dc4:	613b      	str	r3, [r7, #16]
 8014dc6:	693b      	ldr	r3, [r7, #16]
 8014dc8:	f383 8810 	msr	PRIMASK, r3
 8014dcc:	46c0      	nop			@ (mov r8, r8)
 8014dce:	687b      	ldr	r3, [r7, #4]
 8014dd0:	2284      	movs	r2, #132	@ 0x84
 8014dd2:	2120      	movs	r1, #32
 8014dd4:	5099      	str	r1, [r3, r2]
 8014dd6:	687b      	ldr	r3, [r7, #4]
 8014dd8:	2200      	movs	r2, #0
 8014dda:	675a      	str	r2, [r3, #116]	@ 0x74
 8014ddc:	687b      	ldr	r3, [r7, #4]
 8014dde:	0018      	movs	r0, r3
 8014de0:	f7fe ffb2 	bl	8013d48 <HAL_UART_TxCpltCallback>
 8014de4:	46c0      	nop			@ (mov r8, r8)
 8014de6:	46bd      	mov	sp, r7
 8014de8:	b006      	add	sp, #24
 8014dea:	bd80      	pop	{r7, pc}

08014dec <UART_RxISR_8BIT>:
 8014dec:	b580      	push	{r7, lr}
 8014dee:	b090      	sub	sp, #64	@ 0x40
 8014df0:	af00      	add	r7, sp, #0
 8014df2:	6078      	str	r0, [r7, #4]
 8014df4:	203e      	movs	r0, #62	@ 0x3e
 8014df6:	183b      	adds	r3, r7, r0
 8014df8:	687a      	ldr	r2, [r7, #4]
 8014dfa:	2160      	movs	r1, #96	@ 0x60
 8014dfc:	5a52      	ldrh	r2, [r2, r1]
 8014dfe:	801a      	strh	r2, [r3, #0]
 8014e00:	687b      	ldr	r3, [r7, #4]
 8014e02:	2288      	movs	r2, #136	@ 0x88
 8014e04:	589b      	ldr	r3, [r3, r2]
 8014e06:	2b22      	cmp	r3, #34	@ 0x22
 8014e08:	d000      	beq.n	8014e0c <UART_RxISR_8BIT+0x20>
 8014e0a:	e097      	b.n	8014f3c <UART_RxISR_8BIT+0x150>
 8014e0c:	687b      	ldr	r3, [r7, #4]
 8014e0e:	681b      	ldr	r3, [r3, #0]
 8014e10:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8014e12:	213c      	movs	r1, #60	@ 0x3c
 8014e14:	187b      	adds	r3, r7, r1
 8014e16:	801a      	strh	r2, [r3, #0]
 8014e18:	187b      	adds	r3, r7, r1
 8014e1a:	881b      	ldrh	r3, [r3, #0]
 8014e1c:	b2da      	uxtb	r2, r3
 8014e1e:	183b      	adds	r3, r7, r0
 8014e20:	881b      	ldrh	r3, [r3, #0]
 8014e22:	b2d9      	uxtb	r1, r3
 8014e24:	687b      	ldr	r3, [r7, #4]
 8014e26:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8014e28:	400a      	ands	r2, r1
 8014e2a:	b2d2      	uxtb	r2, r2
 8014e2c:	701a      	strb	r2, [r3, #0]
 8014e2e:	687b      	ldr	r3, [r7, #4]
 8014e30:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8014e32:	1c5a      	adds	r2, r3, #1
 8014e34:	687b      	ldr	r3, [r7, #4]
 8014e36:	659a      	str	r2, [r3, #88]	@ 0x58
 8014e38:	687b      	ldr	r3, [r7, #4]
 8014e3a:	225e      	movs	r2, #94	@ 0x5e
 8014e3c:	5a9b      	ldrh	r3, [r3, r2]
 8014e3e:	b29b      	uxth	r3, r3
 8014e40:	3b01      	subs	r3, #1
 8014e42:	b299      	uxth	r1, r3
 8014e44:	687b      	ldr	r3, [r7, #4]
 8014e46:	225e      	movs	r2, #94	@ 0x5e
 8014e48:	5299      	strh	r1, [r3, r2]
 8014e4a:	687b      	ldr	r3, [r7, #4]
 8014e4c:	225e      	movs	r2, #94	@ 0x5e
 8014e4e:	5a9b      	ldrh	r3, [r3, r2]
 8014e50:	b29b      	uxth	r3, r3
 8014e52:	2b00      	cmp	r3, #0
 8014e54:	d000      	beq.n	8014e58 <UART_RxISR_8BIT+0x6c>
 8014e56:	e079      	b.n	8014f4c <UART_RxISR_8BIT+0x160>
 8014e58:	f3ef 8310 	mrs	r3, PRIMASK
 8014e5c:	61bb      	str	r3, [r7, #24]
 8014e5e:	69bb      	ldr	r3, [r7, #24]
 8014e60:	63bb      	str	r3, [r7, #56]	@ 0x38
 8014e62:	2301      	movs	r3, #1
 8014e64:	61fb      	str	r3, [r7, #28]
 8014e66:	69fb      	ldr	r3, [r7, #28]
 8014e68:	f383 8810 	msr	PRIMASK, r3
 8014e6c:	46c0      	nop			@ (mov r8, r8)
 8014e6e:	687b      	ldr	r3, [r7, #4]
 8014e70:	681b      	ldr	r3, [r3, #0]
 8014e72:	681a      	ldr	r2, [r3, #0]
 8014e74:	687b      	ldr	r3, [r7, #4]
 8014e76:	681b      	ldr	r3, [r3, #0]
 8014e78:	4936      	ldr	r1, [pc, #216]	@ (8014f54 <UART_RxISR_8BIT+0x168>)
 8014e7a:	400a      	ands	r2, r1
 8014e7c:	601a      	str	r2, [r3, #0]
 8014e7e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8014e80:	623b      	str	r3, [r7, #32]
 8014e82:	6a3b      	ldr	r3, [r7, #32]
 8014e84:	f383 8810 	msr	PRIMASK, r3
 8014e88:	46c0      	nop			@ (mov r8, r8)
 8014e8a:	f3ef 8310 	mrs	r3, PRIMASK
 8014e8e:	627b      	str	r3, [r7, #36]	@ 0x24
 8014e90:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014e92:	637b      	str	r3, [r7, #52]	@ 0x34
 8014e94:	2301      	movs	r3, #1
 8014e96:	62bb      	str	r3, [r7, #40]	@ 0x28
 8014e98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8014e9a:	f383 8810 	msr	PRIMASK, r3
 8014e9e:	46c0      	nop			@ (mov r8, r8)
 8014ea0:	687b      	ldr	r3, [r7, #4]
 8014ea2:	681b      	ldr	r3, [r3, #0]
 8014ea4:	689a      	ldr	r2, [r3, #8]
 8014ea6:	687b      	ldr	r3, [r7, #4]
 8014ea8:	681b      	ldr	r3, [r3, #0]
 8014eaa:	2101      	movs	r1, #1
 8014eac:	438a      	bics	r2, r1
 8014eae:	609a      	str	r2, [r3, #8]
 8014eb0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8014eb2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8014eb4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8014eb6:	f383 8810 	msr	PRIMASK, r3
 8014eba:	46c0      	nop			@ (mov r8, r8)
 8014ebc:	687b      	ldr	r3, [r7, #4]
 8014ebe:	2288      	movs	r2, #136	@ 0x88
 8014ec0:	2120      	movs	r1, #32
 8014ec2:	5099      	str	r1, [r3, r2]
 8014ec4:	687b      	ldr	r3, [r7, #4]
 8014ec6:	2200      	movs	r2, #0
 8014ec8:	671a      	str	r2, [r3, #112]	@ 0x70
 8014eca:	687b      	ldr	r3, [r7, #4]
 8014ecc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014ece:	2b01      	cmp	r3, #1
 8014ed0:	d12f      	bne.n	8014f32 <UART_RxISR_8BIT+0x146>
 8014ed2:	687b      	ldr	r3, [r7, #4]
 8014ed4:	2200      	movs	r2, #0
 8014ed6:	66da      	str	r2, [r3, #108]	@ 0x6c
 8014ed8:	f3ef 8310 	mrs	r3, PRIMASK
 8014edc:	60fb      	str	r3, [r7, #12]
 8014ede:	68fb      	ldr	r3, [r7, #12]
 8014ee0:	633b      	str	r3, [r7, #48]	@ 0x30
 8014ee2:	2301      	movs	r3, #1
 8014ee4:	613b      	str	r3, [r7, #16]
 8014ee6:	693b      	ldr	r3, [r7, #16]
 8014ee8:	f383 8810 	msr	PRIMASK, r3
 8014eec:	46c0      	nop			@ (mov r8, r8)
 8014eee:	687b      	ldr	r3, [r7, #4]
 8014ef0:	681b      	ldr	r3, [r3, #0]
 8014ef2:	681a      	ldr	r2, [r3, #0]
 8014ef4:	687b      	ldr	r3, [r7, #4]
 8014ef6:	681b      	ldr	r3, [r3, #0]
 8014ef8:	2110      	movs	r1, #16
 8014efa:	438a      	bics	r2, r1
 8014efc:	601a      	str	r2, [r3, #0]
 8014efe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8014f00:	617b      	str	r3, [r7, #20]
 8014f02:	697b      	ldr	r3, [r7, #20]
 8014f04:	f383 8810 	msr	PRIMASK, r3
 8014f08:	46c0      	nop			@ (mov r8, r8)
 8014f0a:	687b      	ldr	r3, [r7, #4]
 8014f0c:	681b      	ldr	r3, [r3, #0]
 8014f0e:	69db      	ldr	r3, [r3, #28]
 8014f10:	2210      	movs	r2, #16
 8014f12:	4013      	ands	r3, r2
 8014f14:	2b10      	cmp	r3, #16
 8014f16:	d103      	bne.n	8014f20 <UART_RxISR_8BIT+0x134>
 8014f18:	687b      	ldr	r3, [r7, #4]
 8014f1a:	681b      	ldr	r3, [r3, #0]
 8014f1c:	2210      	movs	r2, #16
 8014f1e:	621a      	str	r2, [r3, #32]
 8014f20:	687b      	ldr	r3, [r7, #4]
 8014f22:	225c      	movs	r2, #92	@ 0x5c
 8014f24:	5a9a      	ldrh	r2, [r3, r2]
 8014f26:	687b      	ldr	r3, [r7, #4]
 8014f28:	0011      	movs	r1, r2
 8014f2a:	0018      	movs	r0, r3
 8014f2c:	f7fe ff1c 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 8014f30:	e00c      	b.n	8014f4c <UART_RxISR_8BIT+0x160>
 8014f32:	687b      	ldr	r3, [r7, #4]
 8014f34:	0018      	movs	r0, r3
 8014f36:	f7ef f883 	bl	8004040 <HAL_UART_RxCpltCallback>
 8014f3a:	e007      	b.n	8014f4c <UART_RxISR_8BIT+0x160>
 8014f3c:	687b      	ldr	r3, [r7, #4]
 8014f3e:	681b      	ldr	r3, [r3, #0]
 8014f40:	699a      	ldr	r2, [r3, #24]
 8014f42:	687b      	ldr	r3, [r7, #4]
 8014f44:	681b      	ldr	r3, [r3, #0]
 8014f46:	2108      	movs	r1, #8
 8014f48:	430a      	orrs	r2, r1
 8014f4a:	619a      	str	r2, [r3, #24]
 8014f4c:	46c0      	nop			@ (mov r8, r8)
 8014f4e:	46bd      	mov	sp, r7
 8014f50:	b010      	add	sp, #64	@ 0x40
 8014f52:	bd80      	pop	{r7, pc}
 8014f54:	fffffedf 	.word	0xfffffedf

08014f58 <UART_RxISR_16BIT>:
 8014f58:	b580      	push	{r7, lr}
 8014f5a:	b090      	sub	sp, #64	@ 0x40
 8014f5c:	af00      	add	r7, sp, #0
 8014f5e:	6078      	str	r0, [r7, #4]
 8014f60:	203e      	movs	r0, #62	@ 0x3e
 8014f62:	183b      	adds	r3, r7, r0
 8014f64:	687a      	ldr	r2, [r7, #4]
 8014f66:	2160      	movs	r1, #96	@ 0x60
 8014f68:	5a52      	ldrh	r2, [r2, r1]
 8014f6a:	801a      	strh	r2, [r3, #0]
 8014f6c:	687b      	ldr	r3, [r7, #4]
 8014f6e:	2288      	movs	r2, #136	@ 0x88
 8014f70:	589b      	ldr	r3, [r3, r2]
 8014f72:	2b22      	cmp	r3, #34	@ 0x22
 8014f74:	d000      	beq.n	8014f78 <UART_RxISR_16BIT+0x20>
 8014f76:	e097      	b.n	80150a8 <UART_RxISR_16BIT+0x150>
 8014f78:	687b      	ldr	r3, [r7, #4]
 8014f7a:	681b      	ldr	r3, [r3, #0]
 8014f7c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8014f7e:	213c      	movs	r1, #60	@ 0x3c
 8014f80:	187b      	adds	r3, r7, r1
 8014f82:	801a      	strh	r2, [r3, #0]
 8014f84:	687b      	ldr	r3, [r7, #4]
 8014f86:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8014f88:	63bb      	str	r3, [r7, #56]	@ 0x38
 8014f8a:	187b      	adds	r3, r7, r1
 8014f8c:	183a      	adds	r2, r7, r0
 8014f8e:	881b      	ldrh	r3, [r3, #0]
 8014f90:	8812      	ldrh	r2, [r2, #0]
 8014f92:	4013      	ands	r3, r2
 8014f94:	b29a      	uxth	r2, r3
 8014f96:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8014f98:	801a      	strh	r2, [r3, #0]
 8014f9a:	687b      	ldr	r3, [r7, #4]
 8014f9c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8014f9e:	1c9a      	adds	r2, r3, #2
 8014fa0:	687b      	ldr	r3, [r7, #4]
 8014fa2:	659a      	str	r2, [r3, #88]	@ 0x58
 8014fa4:	687b      	ldr	r3, [r7, #4]
 8014fa6:	225e      	movs	r2, #94	@ 0x5e
 8014fa8:	5a9b      	ldrh	r3, [r3, r2]
 8014faa:	b29b      	uxth	r3, r3
 8014fac:	3b01      	subs	r3, #1
 8014fae:	b299      	uxth	r1, r3
 8014fb0:	687b      	ldr	r3, [r7, #4]
 8014fb2:	225e      	movs	r2, #94	@ 0x5e
 8014fb4:	5299      	strh	r1, [r3, r2]
 8014fb6:	687b      	ldr	r3, [r7, #4]
 8014fb8:	225e      	movs	r2, #94	@ 0x5e
 8014fba:	5a9b      	ldrh	r3, [r3, r2]
 8014fbc:	b29b      	uxth	r3, r3
 8014fbe:	2b00      	cmp	r3, #0
 8014fc0:	d000      	beq.n	8014fc4 <UART_RxISR_16BIT+0x6c>
 8014fc2:	e079      	b.n	80150b8 <UART_RxISR_16BIT+0x160>
 8014fc4:	f3ef 8310 	mrs	r3, PRIMASK
 8014fc8:	617b      	str	r3, [r7, #20]
 8014fca:	697b      	ldr	r3, [r7, #20]
 8014fcc:	637b      	str	r3, [r7, #52]	@ 0x34
 8014fce:	2301      	movs	r3, #1
 8014fd0:	61bb      	str	r3, [r7, #24]
 8014fd2:	69bb      	ldr	r3, [r7, #24]
 8014fd4:	f383 8810 	msr	PRIMASK, r3
 8014fd8:	46c0      	nop			@ (mov r8, r8)
 8014fda:	687b      	ldr	r3, [r7, #4]
 8014fdc:	681b      	ldr	r3, [r3, #0]
 8014fde:	681a      	ldr	r2, [r3, #0]
 8014fe0:	687b      	ldr	r3, [r7, #4]
 8014fe2:	681b      	ldr	r3, [r3, #0]
 8014fe4:	4936      	ldr	r1, [pc, #216]	@ (80150c0 <UART_RxISR_16BIT+0x168>)
 8014fe6:	400a      	ands	r2, r1
 8014fe8:	601a      	str	r2, [r3, #0]
 8014fea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8014fec:	61fb      	str	r3, [r7, #28]
 8014fee:	69fb      	ldr	r3, [r7, #28]
 8014ff0:	f383 8810 	msr	PRIMASK, r3
 8014ff4:	46c0      	nop			@ (mov r8, r8)
 8014ff6:	f3ef 8310 	mrs	r3, PRIMASK
 8014ffa:	623b      	str	r3, [r7, #32]
 8014ffc:	6a3b      	ldr	r3, [r7, #32]
 8014ffe:	633b      	str	r3, [r7, #48]	@ 0x30
 8015000:	2301      	movs	r3, #1
 8015002:	627b      	str	r3, [r7, #36]	@ 0x24
 8015004:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8015006:	f383 8810 	msr	PRIMASK, r3
 801500a:	46c0      	nop			@ (mov r8, r8)
 801500c:	687b      	ldr	r3, [r7, #4]
 801500e:	681b      	ldr	r3, [r3, #0]
 8015010:	689a      	ldr	r2, [r3, #8]
 8015012:	687b      	ldr	r3, [r7, #4]
 8015014:	681b      	ldr	r3, [r3, #0]
 8015016:	2101      	movs	r1, #1
 8015018:	438a      	bics	r2, r1
 801501a:	609a      	str	r2, [r3, #8]
 801501c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801501e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8015020:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8015022:	f383 8810 	msr	PRIMASK, r3
 8015026:	46c0      	nop			@ (mov r8, r8)
 8015028:	687b      	ldr	r3, [r7, #4]
 801502a:	2288      	movs	r2, #136	@ 0x88
 801502c:	2120      	movs	r1, #32
 801502e:	5099      	str	r1, [r3, r2]
 8015030:	687b      	ldr	r3, [r7, #4]
 8015032:	2200      	movs	r2, #0
 8015034:	671a      	str	r2, [r3, #112]	@ 0x70
 8015036:	687b      	ldr	r3, [r7, #4]
 8015038:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801503a:	2b01      	cmp	r3, #1
 801503c:	d12f      	bne.n	801509e <UART_RxISR_16BIT+0x146>
 801503e:	687b      	ldr	r3, [r7, #4]
 8015040:	2200      	movs	r2, #0
 8015042:	66da      	str	r2, [r3, #108]	@ 0x6c
 8015044:	f3ef 8310 	mrs	r3, PRIMASK
 8015048:	60bb      	str	r3, [r7, #8]
 801504a:	68bb      	ldr	r3, [r7, #8]
 801504c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801504e:	2301      	movs	r3, #1
 8015050:	60fb      	str	r3, [r7, #12]
 8015052:	68fb      	ldr	r3, [r7, #12]
 8015054:	f383 8810 	msr	PRIMASK, r3
 8015058:	46c0      	nop			@ (mov r8, r8)
 801505a:	687b      	ldr	r3, [r7, #4]
 801505c:	681b      	ldr	r3, [r3, #0]
 801505e:	681a      	ldr	r2, [r3, #0]
 8015060:	687b      	ldr	r3, [r7, #4]
 8015062:	681b      	ldr	r3, [r3, #0]
 8015064:	2110      	movs	r1, #16
 8015066:	438a      	bics	r2, r1
 8015068:	601a      	str	r2, [r3, #0]
 801506a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801506c:	613b      	str	r3, [r7, #16]
 801506e:	693b      	ldr	r3, [r7, #16]
 8015070:	f383 8810 	msr	PRIMASK, r3
 8015074:	46c0      	nop			@ (mov r8, r8)
 8015076:	687b      	ldr	r3, [r7, #4]
 8015078:	681b      	ldr	r3, [r3, #0]
 801507a:	69db      	ldr	r3, [r3, #28]
 801507c:	2210      	movs	r2, #16
 801507e:	4013      	ands	r3, r2
 8015080:	2b10      	cmp	r3, #16
 8015082:	d103      	bne.n	801508c <UART_RxISR_16BIT+0x134>
 8015084:	687b      	ldr	r3, [r7, #4]
 8015086:	681b      	ldr	r3, [r3, #0]
 8015088:	2210      	movs	r2, #16
 801508a:	621a      	str	r2, [r3, #32]
 801508c:	687b      	ldr	r3, [r7, #4]
 801508e:	225c      	movs	r2, #92	@ 0x5c
 8015090:	5a9a      	ldrh	r2, [r3, r2]
 8015092:	687b      	ldr	r3, [r7, #4]
 8015094:	0011      	movs	r1, r2
 8015096:	0018      	movs	r0, r3
 8015098:	f7fe fe66 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 801509c:	e00c      	b.n	80150b8 <UART_RxISR_16BIT+0x160>
 801509e:	687b      	ldr	r3, [r7, #4]
 80150a0:	0018      	movs	r0, r3
 80150a2:	f7ee ffcd 	bl	8004040 <HAL_UART_RxCpltCallback>
 80150a6:	e007      	b.n	80150b8 <UART_RxISR_16BIT+0x160>
 80150a8:	687b      	ldr	r3, [r7, #4]
 80150aa:	681b      	ldr	r3, [r3, #0]
 80150ac:	699a      	ldr	r2, [r3, #24]
 80150ae:	687b      	ldr	r3, [r7, #4]
 80150b0:	681b      	ldr	r3, [r3, #0]
 80150b2:	2108      	movs	r1, #8
 80150b4:	430a      	orrs	r2, r1
 80150b6:	619a      	str	r2, [r3, #24]
 80150b8:	46c0      	nop			@ (mov r8, r8)
 80150ba:	46bd      	mov	sp, r7
 80150bc:	b010      	add	sp, #64	@ 0x40
 80150be:	bd80      	pop	{r7, pc}
 80150c0:	fffffedf 	.word	0xfffffedf

080150c4 <UART_RxISR_8BIT_FIFOEN>:
 80150c4:	b580      	push	{r7, lr}
 80150c6:	b09c      	sub	sp, #112	@ 0x70
 80150c8:	af00      	add	r7, sp, #0
 80150ca:	6078      	str	r0, [r7, #4]
 80150cc:	236a      	movs	r3, #106	@ 0x6a
 80150ce:	18fb      	adds	r3, r7, r3
 80150d0:	687a      	ldr	r2, [r7, #4]
 80150d2:	2160      	movs	r1, #96	@ 0x60
 80150d4:	5a52      	ldrh	r2, [r2, r1]
 80150d6:	801a      	strh	r2, [r3, #0]
 80150d8:	687b      	ldr	r3, [r7, #4]
 80150da:	681b      	ldr	r3, [r3, #0]
 80150dc:	69db      	ldr	r3, [r3, #28]
 80150de:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80150e0:	687b      	ldr	r3, [r7, #4]
 80150e2:	681b      	ldr	r3, [r3, #0]
 80150e4:	681b      	ldr	r3, [r3, #0]
 80150e6:	667b      	str	r3, [r7, #100]	@ 0x64
 80150e8:	687b      	ldr	r3, [r7, #4]
 80150ea:	681b      	ldr	r3, [r3, #0]
 80150ec:	689b      	ldr	r3, [r3, #8]
 80150ee:	663b      	str	r3, [r7, #96]	@ 0x60
 80150f0:	687b      	ldr	r3, [r7, #4]
 80150f2:	2288      	movs	r2, #136	@ 0x88
 80150f4:	589b      	ldr	r3, [r3, r2]
 80150f6:	2b22      	cmp	r3, #34	@ 0x22
 80150f8:	d000      	beq.n	80150fc <UART_RxISR_8BIT_FIFOEN+0x38>
 80150fa:	e141      	b.n	8015380 <UART_RxISR_8BIT_FIFOEN+0x2bc>
 80150fc:	235e      	movs	r3, #94	@ 0x5e
 80150fe:	18fb      	adds	r3, r7, r3
 8015100:	687a      	ldr	r2, [r7, #4]
 8015102:	2168      	movs	r1, #104	@ 0x68
 8015104:	5a52      	ldrh	r2, [r2, r1]
 8015106:	801a      	strh	r2, [r3, #0]
 8015108:	e0e8      	b.n	80152dc <UART_RxISR_8BIT_FIFOEN+0x218>
 801510a:	687b      	ldr	r3, [r7, #4]
 801510c:	681b      	ldr	r3, [r3, #0]
 801510e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8015110:	215c      	movs	r1, #92	@ 0x5c
 8015112:	187b      	adds	r3, r7, r1
 8015114:	801a      	strh	r2, [r3, #0]
 8015116:	187b      	adds	r3, r7, r1
 8015118:	881b      	ldrh	r3, [r3, #0]
 801511a:	b2da      	uxtb	r2, r3
 801511c:	236a      	movs	r3, #106	@ 0x6a
 801511e:	18fb      	adds	r3, r7, r3
 8015120:	881b      	ldrh	r3, [r3, #0]
 8015122:	b2d9      	uxtb	r1, r3
 8015124:	687b      	ldr	r3, [r7, #4]
 8015126:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8015128:	400a      	ands	r2, r1
 801512a:	b2d2      	uxtb	r2, r2
 801512c:	701a      	strb	r2, [r3, #0]
 801512e:	687b      	ldr	r3, [r7, #4]
 8015130:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8015132:	1c5a      	adds	r2, r3, #1
 8015134:	687b      	ldr	r3, [r7, #4]
 8015136:	659a      	str	r2, [r3, #88]	@ 0x58
 8015138:	687b      	ldr	r3, [r7, #4]
 801513a:	225e      	movs	r2, #94	@ 0x5e
 801513c:	5a9b      	ldrh	r3, [r3, r2]
 801513e:	b29b      	uxth	r3, r3
 8015140:	3b01      	subs	r3, #1
 8015142:	b299      	uxth	r1, r3
 8015144:	687b      	ldr	r3, [r7, #4]
 8015146:	225e      	movs	r2, #94	@ 0x5e
 8015148:	5299      	strh	r1, [r3, r2]
 801514a:	687b      	ldr	r3, [r7, #4]
 801514c:	681b      	ldr	r3, [r3, #0]
 801514e:	69db      	ldr	r3, [r3, #28]
 8015150:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8015152:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8015154:	2207      	movs	r2, #7
 8015156:	4013      	ands	r3, r2
 8015158:	d049      	beq.n	80151ee <UART_RxISR_8BIT_FIFOEN+0x12a>
 801515a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 801515c:	2201      	movs	r2, #1
 801515e:	4013      	ands	r3, r2
 8015160:	d010      	beq.n	8015184 <UART_RxISR_8BIT_FIFOEN+0xc0>
 8015162:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8015164:	2380      	movs	r3, #128	@ 0x80
 8015166:	005b      	lsls	r3, r3, #1
 8015168:	4013      	ands	r3, r2
 801516a:	d00b      	beq.n	8015184 <UART_RxISR_8BIT_FIFOEN+0xc0>
 801516c:	687b      	ldr	r3, [r7, #4]
 801516e:	681b      	ldr	r3, [r3, #0]
 8015170:	2201      	movs	r2, #1
 8015172:	621a      	str	r2, [r3, #32]
 8015174:	687b      	ldr	r3, [r7, #4]
 8015176:	228c      	movs	r2, #140	@ 0x8c
 8015178:	589b      	ldr	r3, [r3, r2]
 801517a:	2201      	movs	r2, #1
 801517c:	431a      	orrs	r2, r3
 801517e:	687b      	ldr	r3, [r7, #4]
 8015180:	218c      	movs	r1, #140	@ 0x8c
 8015182:	505a      	str	r2, [r3, r1]
 8015184:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8015186:	2202      	movs	r2, #2
 8015188:	4013      	ands	r3, r2
 801518a:	d00f      	beq.n	80151ac <UART_RxISR_8BIT_FIFOEN+0xe8>
 801518c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 801518e:	2201      	movs	r2, #1
 8015190:	4013      	ands	r3, r2
 8015192:	d00b      	beq.n	80151ac <UART_RxISR_8BIT_FIFOEN+0xe8>
 8015194:	687b      	ldr	r3, [r7, #4]
 8015196:	681b      	ldr	r3, [r3, #0]
 8015198:	2202      	movs	r2, #2
 801519a:	621a      	str	r2, [r3, #32]
 801519c:	687b      	ldr	r3, [r7, #4]
 801519e:	228c      	movs	r2, #140	@ 0x8c
 80151a0:	589b      	ldr	r3, [r3, r2]
 80151a2:	2204      	movs	r2, #4
 80151a4:	431a      	orrs	r2, r3
 80151a6:	687b      	ldr	r3, [r7, #4]
 80151a8:	218c      	movs	r1, #140	@ 0x8c
 80151aa:	505a      	str	r2, [r3, r1]
 80151ac:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80151ae:	2204      	movs	r2, #4
 80151b0:	4013      	ands	r3, r2
 80151b2:	d00f      	beq.n	80151d4 <UART_RxISR_8BIT_FIFOEN+0x110>
 80151b4:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80151b6:	2201      	movs	r2, #1
 80151b8:	4013      	ands	r3, r2
 80151ba:	d00b      	beq.n	80151d4 <UART_RxISR_8BIT_FIFOEN+0x110>
 80151bc:	687b      	ldr	r3, [r7, #4]
 80151be:	681b      	ldr	r3, [r3, #0]
 80151c0:	2204      	movs	r2, #4
 80151c2:	621a      	str	r2, [r3, #32]
 80151c4:	687b      	ldr	r3, [r7, #4]
 80151c6:	228c      	movs	r2, #140	@ 0x8c
 80151c8:	589b      	ldr	r3, [r3, r2]
 80151ca:	2202      	movs	r2, #2
 80151cc:	431a      	orrs	r2, r3
 80151ce:	687b      	ldr	r3, [r7, #4]
 80151d0:	218c      	movs	r1, #140	@ 0x8c
 80151d2:	505a      	str	r2, [r3, r1]
 80151d4:	687b      	ldr	r3, [r7, #4]
 80151d6:	228c      	movs	r2, #140	@ 0x8c
 80151d8:	589b      	ldr	r3, [r3, r2]
 80151da:	2b00      	cmp	r3, #0
 80151dc:	d007      	beq.n	80151ee <UART_RxISR_8BIT_FIFOEN+0x12a>
 80151de:	687b      	ldr	r3, [r7, #4]
 80151e0:	0018      	movs	r0, r3
 80151e2:	f7ee ff17 	bl	8004014 <HAL_UART_ErrorCallback>
 80151e6:	687b      	ldr	r3, [r7, #4]
 80151e8:	228c      	movs	r2, #140	@ 0x8c
 80151ea:	2100      	movs	r1, #0
 80151ec:	5099      	str	r1, [r3, r2]
 80151ee:	687b      	ldr	r3, [r7, #4]
 80151f0:	225e      	movs	r2, #94	@ 0x5e
 80151f2:	5a9b      	ldrh	r3, [r3, r2]
 80151f4:	b29b      	uxth	r3, r3
 80151f6:	2b00      	cmp	r3, #0
 80151f8:	d170      	bne.n	80152dc <UART_RxISR_8BIT_FIFOEN+0x218>
 80151fa:	f3ef 8310 	mrs	r3, PRIMASK
 80151fe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8015200:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8015202:	65bb      	str	r3, [r7, #88]	@ 0x58
 8015204:	2301      	movs	r3, #1
 8015206:	633b      	str	r3, [r7, #48]	@ 0x30
 8015208:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801520a:	f383 8810 	msr	PRIMASK, r3
 801520e:	46c0      	nop			@ (mov r8, r8)
 8015210:	687b      	ldr	r3, [r7, #4]
 8015212:	681b      	ldr	r3, [r3, #0]
 8015214:	681a      	ldr	r2, [r3, #0]
 8015216:	687b      	ldr	r3, [r7, #4]
 8015218:	681b      	ldr	r3, [r3, #0]
 801521a:	495f      	ldr	r1, [pc, #380]	@ (8015398 <UART_RxISR_8BIT_FIFOEN+0x2d4>)
 801521c:	400a      	ands	r2, r1
 801521e:	601a      	str	r2, [r3, #0]
 8015220:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8015222:	637b      	str	r3, [r7, #52]	@ 0x34
 8015224:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8015226:	f383 8810 	msr	PRIMASK, r3
 801522a:	46c0      	nop			@ (mov r8, r8)
 801522c:	f3ef 8310 	mrs	r3, PRIMASK
 8015230:	63bb      	str	r3, [r7, #56]	@ 0x38
 8015232:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8015234:	657b      	str	r3, [r7, #84]	@ 0x54
 8015236:	2301      	movs	r3, #1
 8015238:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801523a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801523c:	f383 8810 	msr	PRIMASK, r3
 8015240:	46c0      	nop			@ (mov r8, r8)
 8015242:	687b      	ldr	r3, [r7, #4]
 8015244:	681b      	ldr	r3, [r3, #0]
 8015246:	689a      	ldr	r2, [r3, #8]
 8015248:	687b      	ldr	r3, [r7, #4]
 801524a:	681b      	ldr	r3, [r3, #0]
 801524c:	4953      	ldr	r1, [pc, #332]	@ (801539c <UART_RxISR_8BIT_FIFOEN+0x2d8>)
 801524e:	400a      	ands	r2, r1
 8015250:	609a      	str	r2, [r3, #8]
 8015252:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8015254:	643b      	str	r3, [r7, #64]	@ 0x40
 8015256:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8015258:	f383 8810 	msr	PRIMASK, r3
 801525c:	46c0      	nop			@ (mov r8, r8)
 801525e:	687b      	ldr	r3, [r7, #4]
 8015260:	2288      	movs	r2, #136	@ 0x88
 8015262:	2120      	movs	r1, #32
 8015264:	5099      	str	r1, [r3, r2]
 8015266:	687b      	ldr	r3, [r7, #4]
 8015268:	2200      	movs	r2, #0
 801526a:	671a      	str	r2, [r3, #112]	@ 0x70
 801526c:	687b      	ldr	r3, [r7, #4]
 801526e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8015270:	2b01      	cmp	r3, #1
 8015272:	d12f      	bne.n	80152d4 <UART_RxISR_8BIT_FIFOEN+0x210>
 8015274:	687b      	ldr	r3, [r7, #4]
 8015276:	2200      	movs	r2, #0
 8015278:	66da      	str	r2, [r3, #108]	@ 0x6c
 801527a:	f3ef 8310 	mrs	r3, PRIMASK
 801527e:	623b      	str	r3, [r7, #32]
 8015280:	6a3b      	ldr	r3, [r7, #32]
 8015282:	653b      	str	r3, [r7, #80]	@ 0x50
 8015284:	2301      	movs	r3, #1
 8015286:	627b      	str	r3, [r7, #36]	@ 0x24
 8015288:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801528a:	f383 8810 	msr	PRIMASK, r3
 801528e:	46c0      	nop			@ (mov r8, r8)
 8015290:	687b      	ldr	r3, [r7, #4]
 8015292:	681b      	ldr	r3, [r3, #0]
 8015294:	681a      	ldr	r2, [r3, #0]
 8015296:	687b      	ldr	r3, [r7, #4]
 8015298:	681b      	ldr	r3, [r3, #0]
 801529a:	2110      	movs	r1, #16
 801529c:	438a      	bics	r2, r1
 801529e:	601a      	str	r2, [r3, #0]
 80152a0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80152a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80152a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80152a6:	f383 8810 	msr	PRIMASK, r3
 80152aa:	46c0      	nop			@ (mov r8, r8)
 80152ac:	687b      	ldr	r3, [r7, #4]
 80152ae:	681b      	ldr	r3, [r3, #0]
 80152b0:	69db      	ldr	r3, [r3, #28]
 80152b2:	2210      	movs	r2, #16
 80152b4:	4013      	ands	r3, r2
 80152b6:	2b10      	cmp	r3, #16
 80152b8:	d103      	bne.n	80152c2 <UART_RxISR_8BIT_FIFOEN+0x1fe>
 80152ba:	687b      	ldr	r3, [r7, #4]
 80152bc:	681b      	ldr	r3, [r3, #0]
 80152be:	2210      	movs	r2, #16
 80152c0:	621a      	str	r2, [r3, #32]
 80152c2:	687b      	ldr	r3, [r7, #4]
 80152c4:	225c      	movs	r2, #92	@ 0x5c
 80152c6:	5a9a      	ldrh	r2, [r3, r2]
 80152c8:	687b      	ldr	r3, [r7, #4]
 80152ca:	0011      	movs	r1, r2
 80152cc:	0018      	movs	r0, r3
 80152ce:	f7fe fd4b 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 80152d2:	e003      	b.n	80152dc <UART_RxISR_8BIT_FIFOEN+0x218>
 80152d4:	687b      	ldr	r3, [r7, #4]
 80152d6:	0018      	movs	r0, r3
 80152d8:	f7ee feb2 	bl	8004040 <HAL_UART_RxCpltCallback>
 80152dc:	235e      	movs	r3, #94	@ 0x5e
 80152de:	18fb      	adds	r3, r7, r3
 80152e0:	881b      	ldrh	r3, [r3, #0]
 80152e2:	2b00      	cmp	r3, #0
 80152e4:	d004      	beq.n	80152f0 <UART_RxISR_8BIT_FIFOEN+0x22c>
 80152e6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80152e8:	2220      	movs	r2, #32
 80152ea:	4013      	ands	r3, r2
 80152ec:	d000      	beq.n	80152f0 <UART_RxISR_8BIT_FIFOEN+0x22c>
 80152ee:	e70c      	b.n	801510a <UART_RxISR_8BIT_FIFOEN+0x46>
 80152f0:	204e      	movs	r0, #78	@ 0x4e
 80152f2:	183b      	adds	r3, r7, r0
 80152f4:	687a      	ldr	r2, [r7, #4]
 80152f6:	215e      	movs	r1, #94	@ 0x5e
 80152f8:	5a52      	ldrh	r2, [r2, r1]
 80152fa:	801a      	strh	r2, [r3, #0]
 80152fc:	0001      	movs	r1, r0
 80152fe:	187b      	adds	r3, r7, r1
 8015300:	881b      	ldrh	r3, [r3, #0]
 8015302:	2b00      	cmp	r3, #0
 8015304:	d044      	beq.n	8015390 <UART_RxISR_8BIT_FIFOEN+0x2cc>
 8015306:	687b      	ldr	r3, [r7, #4]
 8015308:	2268      	movs	r2, #104	@ 0x68
 801530a:	5a9b      	ldrh	r3, [r3, r2]
 801530c:	187a      	adds	r2, r7, r1
 801530e:	8812      	ldrh	r2, [r2, #0]
 8015310:	429a      	cmp	r2, r3
 8015312:	d23d      	bcs.n	8015390 <UART_RxISR_8BIT_FIFOEN+0x2cc>
 8015314:	f3ef 8310 	mrs	r3, PRIMASK
 8015318:	60bb      	str	r3, [r7, #8]
 801531a:	68bb      	ldr	r3, [r7, #8]
 801531c:	64bb      	str	r3, [r7, #72]	@ 0x48
 801531e:	2301      	movs	r3, #1
 8015320:	60fb      	str	r3, [r7, #12]
 8015322:	68fb      	ldr	r3, [r7, #12]
 8015324:	f383 8810 	msr	PRIMASK, r3
 8015328:	46c0      	nop			@ (mov r8, r8)
 801532a:	687b      	ldr	r3, [r7, #4]
 801532c:	681b      	ldr	r3, [r3, #0]
 801532e:	689a      	ldr	r2, [r3, #8]
 8015330:	687b      	ldr	r3, [r7, #4]
 8015332:	681b      	ldr	r3, [r3, #0]
 8015334:	491a      	ldr	r1, [pc, #104]	@ (80153a0 <UART_RxISR_8BIT_FIFOEN+0x2dc>)
 8015336:	400a      	ands	r2, r1
 8015338:	609a      	str	r2, [r3, #8]
 801533a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 801533c:	613b      	str	r3, [r7, #16]
 801533e:	693b      	ldr	r3, [r7, #16]
 8015340:	f383 8810 	msr	PRIMASK, r3
 8015344:	46c0      	nop			@ (mov r8, r8)
 8015346:	687b      	ldr	r3, [r7, #4]
 8015348:	4a16      	ldr	r2, [pc, #88]	@ (80153a4 <UART_RxISR_8BIT_FIFOEN+0x2e0>)
 801534a:	671a      	str	r2, [r3, #112]	@ 0x70
 801534c:	f3ef 8310 	mrs	r3, PRIMASK
 8015350:	617b      	str	r3, [r7, #20]
 8015352:	697b      	ldr	r3, [r7, #20]
 8015354:	647b      	str	r3, [r7, #68]	@ 0x44
 8015356:	2301      	movs	r3, #1
 8015358:	61bb      	str	r3, [r7, #24]
 801535a:	69bb      	ldr	r3, [r7, #24]
 801535c:	f383 8810 	msr	PRIMASK, r3
 8015360:	46c0      	nop			@ (mov r8, r8)
 8015362:	687b      	ldr	r3, [r7, #4]
 8015364:	681b      	ldr	r3, [r3, #0]
 8015366:	681a      	ldr	r2, [r3, #0]
 8015368:	687b      	ldr	r3, [r7, #4]
 801536a:	681b      	ldr	r3, [r3, #0]
 801536c:	2120      	movs	r1, #32
 801536e:	430a      	orrs	r2, r1
 8015370:	601a      	str	r2, [r3, #0]
 8015372:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8015374:	61fb      	str	r3, [r7, #28]
 8015376:	69fb      	ldr	r3, [r7, #28]
 8015378:	f383 8810 	msr	PRIMASK, r3
 801537c:	46c0      	nop			@ (mov r8, r8)
 801537e:	e007      	b.n	8015390 <UART_RxISR_8BIT_FIFOEN+0x2cc>
 8015380:	687b      	ldr	r3, [r7, #4]
 8015382:	681b      	ldr	r3, [r3, #0]
 8015384:	699a      	ldr	r2, [r3, #24]
 8015386:	687b      	ldr	r3, [r7, #4]
 8015388:	681b      	ldr	r3, [r3, #0]
 801538a:	2108      	movs	r1, #8
 801538c:	430a      	orrs	r2, r1
 801538e:	619a      	str	r2, [r3, #24]
 8015390:	46c0      	nop			@ (mov r8, r8)
 8015392:	46bd      	mov	sp, r7
 8015394:	b01c      	add	sp, #112	@ 0x70
 8015396:	bd80      	pop	{r7, pc}
 8015398:	fffffeff 	.word	0xfffffeff
 801539c:	effffffe 	.word	0xeffffffe
 80153a0:	efffffff 	.word	0xefffffff
 80153a4:	08014ded 	.word	0x08014ded

080153a8 <UART_RxISR_16BIT_FIFOEN>:
 80153a8:	b580      	push	{r7, lr}
 80153aa:	b09e      	sub	sp, #120	@ 0x78
 80153ac:	af00      	add	r7, sp, #0
 80153ae:	6078      	str	r0, [r7, #4]
 80153b0:	2372      	movs	r3, #114	@ 0x72
 80153b2:	18fb      	adds	r3, r7, r3
 80153b4:	687a      	ldr	r2, [r7, #4]
 80153b6:	2160      	movs	r1, #96	@ 0x60
 80153b8:	5a52      	ldrh	r2, [r2, r1]
 80153ba:	801a      	strh	r2, [r3, #0]
 80153bc:	687b      	ldr	r3, [r7, #4]
 80153be:	681b      	ldr	r3, [r3, #0]
 80153c0:	69db      	ldr	r3, [r3, #28]
 80153c2:	677b      	str	r3, [r7, #116]	@ 0x74
 80153c4:	687b      	ldr	r3, [r7, #4]
 80153c6:	681b      	ldr	r3, [r3, #0]
 80153c8:	681b      	ldr	r3, [r3, #0]
 80153ca:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80153cc:	687b      	ldr	r3, [r7, #4]
 80153ce:	681b      	ldr	r3, [r3, #0]
 80153d0:	689b      	ldr	r3, [r3, #8]
 80153d2:	66bb      	str	r3, [r7, #104]	@ 0x68
 80153d4:	687b      	ldr	r3, [r7, #4]
 80153d6:	2288      	movs	r2, #136	@ 0x88
 80153d8:	589b      	ldr	r3, [r3, r2]
 80153da:	2b22      	cmp	r3, #34	@ 0x22
 80153dc:	d000      	beq.n	80153e0 <UART_RxISR_16BIT_FIFOEN+0x38>
 80153de:	e141      	b.n	8015664 <UART_RxISR_16BIT_FIFOEN+0x2bc>
 80153e0:	2366      	movs	r3, #102	@ 0x66
 80153e2:	18fb      	adds	r3, r7, r3
 80153e4:	687a      	ldr	r2, [r7, #4]
 80153e6:	2168      	movs	r1, #104	@ 0x68
 80153e8:	5a52      	ldrh	r2, [r2, r1]
 80153ea:	801a      	strh	r2, [r3, #0]
 80153ec:	e0e8      	b.n	80155c0 <UART_RxISR_16BIT_FIFOEN+0x218>
 80153ee:	687b      	ldr	r3, [r7, #4]
 80153f0:	681b      	ldr	r3, [r3, #0]
 80153f2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80153f4:	2164      	movs	r1, #100	@ 0x64
 80153f6:	187b      	adds	r3, r7, r1
 80153f8:	801a      	strh	r2, [r3, #0]
 80153fa:	687b      	ldr	r3, [r7, #4]
 80153fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80153fe:	663b      	str	r3, [r7, #96]	@ 0x60
 8015400:	187b      	adds	r3, r7, r1
 8015402:	2272      	movs	r2, #114	@ 0x72
 8015404:	18ba      	adds	r2, r7, r2
 8015406:	881b      	ldrh	r3, [r3, #0]
 8015408:	8812      	ldrh	r2, [r2, #0]
 801540a:	4013      	ands	r3, r2
 801540c:	b29a      	uxth	r2, r3
 801540e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8015410:	801a      	strh	r2, [r3, #0]
 8015412:	687b      	ldr	r3, [r7, #4]
 8015414:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8015416:	1c9a      	adds	r2, r3, #2
 8015418:	687b      	ldr	r3, [r7, #4]
 801541a:	659a      	str	r2, [r3, #88]	@ 0x58
 801541c:	687b      	ldr	r3, [r7, #4]
 801541e:	225e      	movs	r2, #94	@ 0x5e
 8015420:	5a9b      	ldrh	r3, [r3, r2]
 8015422:	b29b      	uxth	r3, r3
 8015424:	3b01      	subs	r3, #1
 8015426:	b299      	uxth	r1, r3
 8015428:	687b      	ldr	r3, [r7, #4]
 801542a:	225e      	movs	r2, #94	@ 0x5e
 801542c:	5299      	strh	r1, [r3, r2]
 801542e:	687b      	ldr	r3, [r7, #4]
 8015430:	681b      	ldr	r3, [r3, #0]
 8015432:	69db      	ldr	r3, [r3, #28]
 8015434:	677b      	str	r3, [r7, #116]	@ 0x74
 8015436:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8015438:	2207      	movs	r2, #7
 801543a:	4013      	ands	r3, r2
 801543c:	d049      	beq.n	80154d2 <UART_RxISR_16BIT_FIFOEN+0x12a>
 801543e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8015440:	2201      	movs	r2, #1
 8015442:	4013      	ands	r3, r2
 8015444:	d010      	beq.n	8015468 <UART_RxISR_16BIT_FIFOEN+0xc0>
 8015446:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8015448:	2380      	movs	r3, #128	@ 0x80
 801544a:	005b      	lsls	r3, r3, #1
 801544c:	4013      	ands	r3, r2
 801544e:	d00b      	beq.n	8015468 <UART_RxISR_16BIT_FIFOEN+0xc0>
 8015450:	687b      	ldr	r3, [r7, #4]
 8015452:	681b      	ldr	r3, [r3, #0]
 8015454:	2201      	movs	r2, #1
 8015456:	621a      	str	r2, [r3, #32]
 8015458:	687b      	ldr	r3, [r7, #4]
 801545a:	228c      	movs	r2, #140	@ 0x8c
 801545c:	589b      	ldr	r3, [r3, r2]
 801545e:	2201      	movs	r2, #1
 8015460:	431a      	orrs	r2, r3
 8015462:	687b      	ldr	r3, [r7, #4]
 8015464:	218c      	movs	r1, #140	@ 0x8c
 8015466:	505a      	str	r2, [r3, r1]
 8015468:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 801546a:	2202      	movs	r2, #2
 801546c:	4013      	ands	r3, r2
 801546e:	d00f      	beq.n	8015490 <UART_RxISR_16BIT_FIFOEN+0xe8>
 8015470:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8015472:	2201      	movs	r2, #1
 8015474:	4013      	ands	r3, r2
 8015476:	d00b      	beq.n	8015490 <UART_RxISR_16BIT_FIFOEN+0xe8>
 8015478:	687b      	ldr	r3, [r7, #4]
 801547a:	681b      	ldr	r3, [r3, #0]
 801547c:	2202      	movs	r2, #2
 801547e:	621a      	str	r2, [r3, #32]
 8015480:	687b      	ldr	r3, [r7, #4]
 8015482:	228c      	movs	r2, #140	@ 0x8c
 8015484:	589b      	ldr	r3, [r3, r2]
 8015486:	2204      	movs	r2, #4
 8015488:	431a      	orrs	r2, r3
 801548a:	687b      	ldr	r3, [r7, #4]
 801548c:	218c      	movs	r1, #140	@ 0x8c
 801548e:	505a      	str	r2, [r3, r1]
 8015490:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8015492:	2204      	movs	r2, #4
 8015494:	4013      	ands	r3, r2
 8015496:	d00f      	beq.n	80154b8 <UART_RxISR_16BIT_FIFOEN+0x110>
 8015498:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 801549a:	2201      	movs	r2, #1
 801549c:	4013      	ands	r3, r2
 801549e:	d00b      	beq.n	80154b8 <UART_RxISR_16BIT_FIFOEN+0x110>
 80154a0:	687b      	ldr	r3, [r7, #4]
 80154a2:	681b      	ldr	r3, [r3, #0]
 80154a4:	2204      	movs	r2, #4
 80154a6:	621a      	str	r2, [r3, #32]
 80154a8:	687b      	ldr	r3, [r7, #4]
 80154aa:	228c      	movs	r2, #140	@ 0x8c
 80154ac:	589b      	ldr	r3, [r3, r2]
 80154ae:	2202      	movs	r2, #2
 80154b0:	431a      	orrs	r2, r3
 80154b2:	687b      	ldr	r3, [r7, #4]
 80154b4:	218c      	movs	r1, #140	@ 0x8c
 80154b6:	505a      	str	r2, [r3, r1]
 80154b8:	687b      	ldr	r3, [r7, #4]
 80154ba:	228c      	movs	r2, #140	@ 0x8c
 80154bc:	589b      	ldr	r3, [r3, r2]
 80154be:	2b00      	cmp	r3, #0
 80154c0:	d007      	beq.n	80154d2 <UART_RxISR_16BIT_FIFOEN+0x12a>
 80154c2:	687b      	ldr	r3, [r7, #4]
 80154c4:	0018      	movs	r0, r3
 80154c6:	f7ee fda5 	bl	8004014 <HAL_UART_ErrorCallback>
 80154ca:	687b      	ldr	r3, [r7, #4]
 80154cc:	228c      	movs	r2, #140	@ 0x8c
 80154ce:	2100      	movs	r1, #0
 80154d0:	5099      	str	r1, [r3, r2]
 80154d2:	687b      	ldr	r3, [r7, #4]
 80154d4:	225e      	movs	r2, #94	@ 0x5e
 80154d6:	5a9b      	ldrh	r3, [r3, r2]
 80154d8:	b29b      	uxth	r3, r3
 80154da:	2b00      	cmp	r3, #0
 80154dc:	d170      	bne.n	80155c0 <UART_RxISR_16BIT_FIFOEN+0x218>
 80154de:	f3ef 8310 	mrs	r3, PRIMASK
 80154e2:	633b      	str	r3, [r7, #48]	@ 0x30
 80154e4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80154e6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80154e8:	2301      	movs	r3, #1
 80154ea:	637b      	str	r3, [r7, #52]	@ 0x34
 80154ec:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80154ee:	f383 8810 	msr	PRIMASK, r3
 80154f2:	46c0      	nop			@ (mov r8, r8)
 80154f4:	687b      	ldr	r3, [r7, #4]
 80154f6:	681b      	ldr	r3, [r3, #0]
 80154f8:	681a      	ldr	r2, [r3, #0]
 80154fa:	687b      	ldr	r3, [r7, #4]
 80154fc:	681b      	ldr	r3, [r3, #0]
 80154fe:	495f      	ldr	r1, [pc, #380]	@ (801567c <UART_RxISR_16BIT_FIFOEN+0x2d4>)
 8015500:	400a      	ands	r2, r1
 8015502:	601a      	str	r2, [r3, #0]
 8015504:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8015506:	63bb      	str	r3, [r7, #56]	@ 0x38
 8015508:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801550a:	f383 8810 	msr	PRIMASK, r3
 801550e:	46c0      	nop			@ (mov r8, r8)
 8015510:	f3ef 8310 	mrs	r3, PRIMASK
 8015514:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8015516:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8015518:	65bb      	str	r3, [r7, #88]	@ 0x58
 801551a:	2301      	movs	r3, #1
 801551c:	643b      	str	r3, [r7, #64]	@ 0x40
 801551e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8015520:	f383 8810 	msr	PRIMASK, r3
 8015524:	46c0      	nop			@ (mov r8, r8)
 8015526:	687b      	ldr	r3, [r7, #4]
 8015528:	681b      	ldr	r3, [r3, #0]
 801552a:	689a      	ldr	r2, [r3, #8]
 801552c:	687b      	ldr	r3, [r7, #4]
 801552e:	681b      	ldr	r3, [r3, #0]
 8015530:	4953      	ldr	r1, [pc, #332]	@ (8015680 <UART_RxISR_16BIT_FIFOEN+0x2d8>)
 8015532:	400a      	ands	r2, r1
 8015534:	609a      	str	r2, [r3, #8]
 8015536:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8015538:	647b      	str	r3, [r7, #68]	@ 0x44
 801553a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 801553c:	f383 8810 	msr	PRIMASK, r3
 8015540:	46c0      	nop			@ (mov r8, r8)
 8015542:	687b      	ldr	r3, [r7, #4]
 8015544:	2288      	movs	r2, #136	@ 0x88
 8015546:	2120      	movs	r1, #32
 8015548:	5099      	str	r1, [r3, r2]
 801554a:	687b      	ldr	r3, [r7, #4]
 801554c:	2200      	movs	r2, #0
 801554e:	671a      	str	r2, [r3, #112]	@ 0x70
 8015550:	687b      	ldr	r3, [r7, #4]
 8015552:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8015554:	2b01      	cmp	r3, #1
 8015556:	d12f      	bne.n	80155b8 <UART_RxISR_16BIT_FIFOEN+0x210>
 8015558:	687b      	ldr	r3, [r7, #4]
 801555a:	2200      	movs	r2, #0
 801555c:	66da      	str	r2, [r3, #108]	@ 0x6c
 801555e:	f3ef 8310 	mrs	r3, PRIMASK
 8015562:	627b      	str	r3, [r7, #36]	@ 0x24
 8015564:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8015566:	657b      	str	r3, [r7, #84]	@ 0x54
 8015568:	2301      	movs	r3, #1
 801556a:	62bb      	str	r3, [r7, #40]	@ 0x28
 801556c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801556e:	f383 8810 	msr	PRIMASK, r3
 8015572:	46c0      	nop			@ (mov r8, r8)
 8015574:	687b      	ldr	r3, [r7, #4]
 8015576:	681b      	ldr	r3, [r3, #0]
 8015578:	681a      	ldr	r2, [r3, #0]
 801557a:	687b      	ldr	r3, [r7, #4]
 801557c:	681b      	ldr	r3, [r3, #0]
 801557e:	2110      	movs	r1, #16
 8015580:	438a      	bics	r2, r1
 8015582:	601a      	str	r2, [r3, #0]
 8015584:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8015586:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8015588:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801558a:	f383 8810 	msr	PRIMASK, r3
 801558e:	46c0      	nop			@ (mov r8, r8)
 8015590:	687b      	ldr	r3, [r7, #4]
 8015592:	681b      	ldr	r3, [r3, #0]
 8015594:	69db      	ldr	r3, [r3, #28]
 8015596:	2210      	movs	r2, #16
 8015598:	4013      	ands	r3, r2
 801559a:	2b10      	cmp	r3, #16
 801559c:	d103      	bne.n	80155a6 <UART_RxISR_16BIT_FIFOEN+0x1fe>
 801559e:	687b      	ldr	r3, [r7, #4]
 80155a0:	681b      	ldr	r3, [r3, #0]
 80155a2:	2210      	movs	r2, #16
 80155a4:	621a      	str	r2, [r3, #32]
 80155a6:	687b      	ldr	r3, [r7, #4]
 80155a8:	225c      	movs	r2, #92	@ 0x5c
 80155aa:	5a9a      	ldrh	r2, [r3, r2]
 80155ac:	687b      	ldr	r3, [r7, #4]
 80155ae:	0011      	movs	r1, r2
 80155b0:	0018      	movs	r0, r3
 80155b2:	f7fe fbd9 	bl	8013d68 <HAL_UARTEx_RxEventCallback>
 80155b6:	e003      	b.n	80155c0 <UART_RxISR_16BIT_FIFOEN+0x218>
 80155b8:	687b      	ldr	r3, [r7, #4]
 80155ba:	0018      	movs	r0, r3
 80155bc:	f7ee fd40 	bl	8004040 <HAL_UART_RxCpltCallback>
 80155c0:	2366      	movs	r3, #102	@ 0x66
 80155c2:	18fb      	adds	r3, r7, r3
 80155c4:	881b      	ldrh	r3, [r3, #0]
 80155c6:	2b00      	cmp	r3, #0
 80155c8:	d004      	beq.n	80155d4 <UART_RxISR_16BIT_FIFOEN+0x22c>
 80155ca:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80155cc:	2220      	movs	r2, #32
 80155ce:	4013      	ands	r3, r2
 80155d0:	d000      	beq.n	80155d4 <UART_RxISR_16BIT_FIFOEN+0x22c>
 80155d2:	e70c      	b.n	80153ee <UART_RxISR_16BIT_FIFOEN+0x46>
 80155d4:	2052      	movs	r0, #82	@ 0x52
 80155d6:	183b      	adds	r3, r7, r0
 80155d8:	687a      	ldr	r2, [r7, #4]
 80155da:	215e      	movs	r1, #94	@ 0x5e
 80155dc:	5a52      	ldrh	r2, [r2, r1]
 80155de:	801a      	strh	r2, [r3, #0]
 80155e0:	0001      	movs	r1, r0
 80155e2:	187b      	adds	r3, r7, r1
 80155e4:	881b      	ldrh	r3, [r3, #0]
 80155e6:	2b00      	cmp	r3, #0
 80155e8:	d044      	beq.n	8015674 <UART_RxISR_16BIT_FIFOEN+0x2cc>
 80155ea:	687b      	ldr	r3, [r7, #4]
 80155ec:	2268      	movs	r2, #104	@ 0x68
 80155ee:	5a9b      	ldrh	r3, [r3, r2]
 80155f0:	187a      	adds	r2, r7, r1
 80155f2:	8812      	ldrh	r2, [r2, #0]
 80155f4:	429a      	cmp	r2, r3
 80155f6:	d23d      	bcs.n	8015674 <UART_RxISR_16BIT_FIFOEN+0x2cc>
 80155f8:	f3ef 8310 	mrs	r3, PRIMASK
 80155fc:	60fb      	str	r3, [r7, #12]
 80155fe:	68fb      	ldr	r3, [r7, #12]
 8015600:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8015602:	2301      	movs	r3, #1
 8015604:	613b      	str	r3, [r7, #16]
 8015606:	693b      	ldr	r3, [r7, #16]
 8015608:	f383 8810 	msr	PRIMASK, r3
 801560c:	46c0      	nop			@ (mov r8, r8)
 801560e:	687b      	ldr	r3, [r7, #4]
 8015610:	681b      	ldr	r3, [r3, #0]
 8015612:	689a      	ldr	r2, [r3, #8]
 8015614:	687b      	ldr	r3, [r7, #4]
 8015616:	681b      	ldr	r3, [r3, #0]
 8015618:	491a      	ldr	r1, [pc, #104]	@ (8015684 <UART_RxISR_16BIT_FIFOEN+0x2dc>)
 801561a:	400a      	ands	r2, r1
 801561c:	609a      	str	r2, [r3, #8]
 801561e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8015620:	617b      	str	r3, [r7, #20]
 8015622:	697b      	ldr	r3, [r7, #20]
 8015624:	f383 8810 	msr	PRIMASK, r3
 8015628:	46c0      	nop			@ (mov r8, r8)
 801562a:	687b      	ldr	r3, [r7, #4]
 801562c:	4a16      	ldr	r2, [pc, #88]	@ (8015688 <UART_RxISR_16BIT_FIFOEN+0x2e0>)
 801562e:	671a      	str	r2, [r3, #112]	@ 0x70
 8015630:	f3ef 8310 	mrs	r3, PRIMASK
 8015634:	61bb      	str	r3, [r7, #24]
 8015636:	69bb      	ldr	r3, [r7, #24]
 8015638:	64bb      	str	r3, [r7, #72]	@ 0x48
 801563a:	2301      	movs	r3, #1
 801563c:	61fb      	str	r3, [r7, #28]
 801563e:	69fb      	ldr	r3, [r7, #28]
 8015640:	f383 8810 	msr	PRIMASK, r3
 8015644:	46c0      	nop			@ (mov r8, r8)
 8015646:	687b      	ldr	r3, [r7, #4]
 8015648:	681b      	ldr	r3, [r3, #0]
 801564a:	681a      	ldr	r2, [r3, #0]
 801564c:	687b      	ldr	r3, [r7, #4]
 801564e:	681b      	ldr	r3, [r3, #0]
 8015650:	2120      	movs	r1, #32
 8015652:	430a      	orrs	r2, r1
 8015654:	601a      	str	r2, [r3, #0]
 8015656:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8015658:	623b      	str	r3, [r7, #32]
 801565a:	6a3b      	ldr	r3, [r7, #32]
 801565c:	f383 8810 	msr	PRIMASK, r3
 8015660:	46c0      	nop			@ (mov r8, r8)
 8015662:	e007      	b.n	8015674 <UART_RxISR_16BIT_FIFOEN+0x2cc>
 8015664:	687b      	ldr	r3, [r7, #4]
 8015666:	681b      	ldr	r3, [r3, #0]
 8015668:	699a      	ldr	r2, [r3, #24]
 801566a:	687b      	ldr	r3, [r7, #4]
 801566c:	681b      	ldr	r3, [r3, #0]
 801566e:	2108      	movs	r1, #8
 8015670:	430a      	orrs	r2, r1
 8015672:	619a      	str	r2, [r3, #24]
 8015674:	46c0      	nop			@ (mov r8, r8)
 8015676:	46bd      	mov	sp, r7
 8015678:	b01e      	add	sp, #120	@ 0x78
 801567a:	bd80      	pop	{r7, pc}
 801567c:	fffffeff 	.word	0xfffffeff
 8015680:	effffffe 	.word	0xeffffffe
 8015684:	efffffff 	.word	0xefffffff
 8015688:	08014f59 	.word	0x08014f59

0801568c <HAL_UARTEx_WakeupCallback>:
 801568c:	b580      	push	{r7, lr}
 801568e:	b082      	sub	sp, #8
 8015690:	af00      	add	r7, sp, #0
 8015692:	6078      	str	r0, [r7, #4]
 8015694:	46c0      	nop			@ (mov r8, r8)
 8015696:	46bd      	mov	sp, r7
 8015698:	b002      	add	sp, #8
 801569a:	bd80      	pop	{r7, pc}

0801569c <HAL_UARTEx_RxFifoFullCallback>:
 801569c:	b580      	push	{r7, lr}
 801569e:	b082      	sub	sp, #8
 80156a0:	af00      	add	r7, sp, #0
 80156a2:	6078      	str	r0, [r7, #4]
 80156a4:	46c0      	nop			@ (mov r8, r8)
 80156a6:	46bd      	mov	sp, r7
 80156a8:	b002      	add	sp, #8
 80156aa:	bd80      	pop	{r7, pc}

080156ac <HAL_UARTEx_TxFifoEmptyCallback>:
 80156ac:	b580      	push	{r7, lr}
 80156ae:	b082      	sub	sp, #8
 80156b0:	af00      	add	r7, sp, #0
 80156b2:	6078      	str	r0, [r7, #4]
 80156b4:	46c0      	nop			@ (mov r8, r8)
 80156b6:	46bd      	mov	sp, r7
 80156b8:	b002      	add	sp, #8
 80156ba:	bd80      	pop	{r7, pc}

080156bc <HAL_UARTEx_DisableFifoMode>:
 80156bc:	b580      	push	{r7, lr}
 80156be:	b084      	sub	sp, #16
 80156c0:	af00      	add	r7, sp, #0
 80156c2:	6078      	str	r0, [r7, #4]
 80156c4:	687b      	ldr	r3, [r7, #4]
 80156c6:	2280      	movs	r2, #128	@ 0x80
 80156c8:	5c9b      	ldrb	r3, [r3, r2]
 80156ca:	2b01      	cmp	r3, #1
 80156cc:	d101      	bne.n	80156d2 <HAL_UARTEx_DisableFifoMode+0x16>
 80156ce:	2302      	movs	r3, #2
 80156d0:	e027      	b.n	8015722 <HAL_UARTEx_DisableFifoMode+0x66>
 80156d2:	687b      	ldr	r3, [r7, #4]
 80156d4:	2280      	movs	r2, #128	@ 0x80
 80156d6:	2101      	movs	r1, #1
 80156d8:	5499      	strb	r1, [r3, r2]
 80156da:	687b      	ldr	r3, [r7, #4]
 80156dc:	2284      	movs	r2, #132	@ 0x84
 80156de:	2124      	movs	r1, #36	@ 0x24
 80156e0:	5099      	str	r1, [r3, r2]
 80156e2:	687b      	ldr	r3, [r7, #4]
 80156e4:	681b      	ldr	r3, [r3, #0]
 80156e6:	681b      	ldr	r3, [r3, #0]
 80156e8:	60fb      	str	r3, [r7, #12]
 80156ea:	687b      	ldr	r3, [r7, #4]
 80156ec:	681b      	ldr	r3, [r3, #0]
 80156ee:	681a      	ldr	r2, [r3, #0]
 80156f0:	687b      	ldr	r3, [r7, #4]
 80156f2:	681b      	ldr	r3, [r3, #0]
 80156f4:	2101      	movs	r1, #1
 80156f6:	438a      	bics	r2, r1
 80156f8:	601a      	str	r2, [r3, #0]
 80156fa:	68fb      	ldr	r3, [r7, #12]
 80156fc:	4a0b      	ldr	r2, [pc, #44]	@ (801572c <HAL_UARTEx_DisableFifoMode+0x70>)
 80156fe:	4013      	ands	r3, r2
 8015700:	60fb      	str	r3, [r7, #12]
 8015702:	687b      	ldr	r3, [r7, #4]
 8015704:	2200      	movs	r2, #0
 8015706:	665a      	str	r2, [r3, #100]	@ 0x64
 8015708:	687b      	ldr	r3, [r7, #4]
 801570a:	681b      	ldr	r3, [r3, #0]
 801570c:	68fa      	ldr	r2, [r7, #12]
 801570e:	601a      	str	r2, [r3, #0]
 8015710:	687b      	ldr	r3, [r7, #4]
 8015712:	2284      	movs	r2, #132	@ 0x84
 8015714:	2120      	movs	r1, #32
 8015716:	5099      	str	r1, [r3, r2]
 8015718:	687b      	ldr	r3, [r7, #4]
 801571a:	2280      	movs	r2, #128	@ 0x80
 801571c:	2100      	movs	r1, #0
 801571e:	5499      	strb	r1, [r3, r2]
 8015720:	2300      	movs	r3, #0
 8015722:	0018      	movs	r0, r3
 8015724:	46bd      	mov	sp, r7
 8015726:	b004      	add	sp, #16
 8015728:	bd80      	pop	{r7, pc}
 801572a:	46c0      	nop			@ (mov r8, r8)
 801572c:	dfffffff 	.word	0xdfffffff

08015730 <HAL_UARTEx_SetTxFifoThreshold>:
 8015730:	b580      	push	{r7, lr}
 8015732:	b084      	sub	sp, #16
 8015734:	af00      	add	r7, sp, #0
 8015736:	6078      	str	r0, [r7, #4]
 8015738:	6039      	str	r1, [r7, #0]
 801573a:	687b      	ldr	r3, [r7, #4]
 801573c:	2280      	movs	r2, #128	@ 0x80
 801573e:	5c9b      	ldrb	r3, [r3, r2]
 8015740:	2b01      	cmp	r3, #1
 8015742:	d101      	bne.n	8015748 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 8015744:	2302      	movs	r3, #2
 8015746:	e02e      	b.n	80157a6 <HAL_UARTEx_SetTxFifoThreshold+0x76>
 8015748:	687b      	ldr	r3, [r7, #4]
 801574a:	2280      	movs	r2, #128	@ 0x80
 801574c:	2101      	movs	r1, #1
 801574e:	5499      	strb	r1, [r3, r2]
 8015750:	687b      	ldr	r3, [r7, #4]
 8015752:	2284      	movs	r2, #132	@ 0x84
 8015754:	2124      	movs	r1, #36	@ 0x24
 8015756:	5099      	str	r1, [r3, r2]
 8015758:	687b      	ldr	r3, [r7, #4]
 801575a:	681b      	ldr	r3, [r3, #0]
 801575c:	681b      	ldr	r3, [r3, #0]
 801575e:	60fb      	str	r3, [r7, #12]
 8015760:	687b      	ldr	r3, [r7, #4]
 8015762:	681b      	ldr	r3, [r3, #0]
 8015764:	681a      	ldr	r2, [r3, #0]
 8015766:	687b      	ldr	r3, [r7, #4]
 8015768:	681b      	ldr	r3, [r3, #0]
 801576a:	2101      	movs	r1, #1
 801576c:	438a      	bics	r2, r1
 801576e:	601a      	str	r2, [r3, #0]
 8015770:	687b      	ldr	r3, [r7, #4]
 8015772:	681b      	ldr	r3, [r3, #0]
 8015774:	689b      	ldr	r3, [r3, #8]
 8015776:	00db      	lsls	r3, r3, #3
 8015778:	08d9      	lsrs	r1, r3, #3
 801577a:	687b      	ldr	r3, [r7, #4]
 801577c:	681b      	ldr	r3, [r3, #0]
 801577e:	683a      	ldr	r2, [r7, #0]
 8015780:	430a      	orrs	r2, r1
 8015782:	609a      	str	r2, [r3, #8]
 8015784:	687b      	ldr	r3, [r7, #4]
 8015786:	0018      	movs	r0, r3
 8015788:	f000 f854 	bl	8015834 <UARTEx_SetNbDataToProcess>
 801578c:	687b      	ldr	r3, [r7, #4]
 801578e:	681b      	ldr	r3, [r3, #0]
 8015790:	68fa      	ldr	r2, [r7, #12]
 8015792:	601a      	str	r2, [r3, #0]
 8015794:	687b      	ldr	r3, [r7, #4]
 8015796:	2284      	movs	r2, #132	@ 0x84
 8015798:	2120      	movs	r1, #32
 801579a:	5099      	str	r1, [r3, r2]
 801579c:	687b      	ldr	r3, [r7, #4]
 801579e:	2280      	movs	r2, #128	@ 0x80
 80157a0:	2100      	movs	r1, #0
 80157a2:	5499      	strb	r1, [r3, r2]
 80157a4:	2300      	movs	r3, #0
 80157a6:	0018      	movs	r0, r3
 80157a8:	46bd      	mov	sp, r7
 80157aa:	b004      	add	sp, #16
 80157ac:	bd80      	pop	{r7, pc}
	...

080157b0 <HAL_UARTEx_SetRxFifoThreshold>:
 80157b0:	b580      	push	{r7, lr}
 80157b2:	b084      	sub	sp, #16
 80157b4:	af00      	add	r7, sp, #0
 80157b6:	6078      	str	r0, [r7, #4]
 80157b8:	6039      	str	r1, [r7, #0]
 80157ba:	687b      	ldr	r3, [r7, #4]
 80157bc:	2280      	movs	r2, #128	@ 0x80
 80157be:	5c9b      	ldrb	r3, [r3, r2]
 80157c0:	2b01      	cmp	r3, #1
 80157c2:	d101      	bne.n	80157c8 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 80157c4:	2302      	movs	r3, #2
 80157c6:	e02f      	b.n	8015828 <HAL_UARTEx_SetRxFifoThreshold+0x78>
 80157c8:	687b      	ldr	r3, [r7, #4]
 80157ca:	2280      	movs	r2, #128	@ 0x80
 80157cc:	2101      	movs	r1, #1
 80157ce:	5499      	strb	r1, [r3, r2]
 80157d0:	687b      	ldr	r3, [r7, #4]
 80157d2:	2284      	movs	r2, #132	@ 0x84
 80157d4:	2124      	movs	r1, #36	@ 0x24
 80157d6:	5099      	str	r1, [r3, r2]
 80157d8:	687b      	ldr	r3, [r7, #4]
 80157da:	681b      	ldr	r3, [r3, #0]
 80157dc:	681b      	ldr	r3, [r3, #0]
 80157de:	60fb      	str	r3, [r7, #12]
 80157e0:	687b      	ldr	r3, [r7, #4]
 80157e2:	681b      	ldr	r3, [r3, #0]
 80157e4:	681a      	ldr	r2, [r3, #0]
 80157e6:	687b      	ldr	r3, [r7, #4]
 80157e8:	681b      	ldr	r3, [r3, #0]
 80157ea:	2101      	movs	r1, #1
 80157ec:	438a      	bics	r2, r1
 80157ee:	601a      	str	r2, [r3, #0]
 80157f0:	687b      	ldr	r3, [r7, #4]
 80157f2:	681b      	ldr	r3, [r3, #0]
 80157f4:	689b      	ldr	r3, [r3, #8]
 80157f6:	4a0e      	ldr	r2, [pc, #56]	@ (8015830 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 80157f8:	4013      	ands	r3, r2
 80157fa:	0019      	movs	r1, r3
 80157fc:	687b      	ldr	r3, [r7, #4]
 80157fe:	681b      	ldr	r3, [r3, #0]
 8015800:	683a      	ldr	r2, [r7, #0]
 8015802:	430a      	orrs	r2, r1
 8015804:	609a      	str	r2, [r3, #8]
 8015806:	687b      	ldr	r3, [r7, #4]
 8015808:	0018      	movs	r0, r3
 801580a:	f000 f813 	bl	8015834 <UARTEx_SetNbDataToProcess>
 801580e:	687b      	ldr	r3, [r7, #4]
 8015810:	681b      	ldr	r3, [r3, #0]
 8015812:	68fa      	ldr	r2, [r7, #12]
 8015814:	601a      	str	r2, [r3, #0]
 8015816:	687b      	ldr	r3, [r7, #4]
 8015818:	2284      	movs	r2, #132	@ 0x84
 801581a:	2120      	movs	r1, #32
 801581c:	5099      	str	r1, [r3, r2]
 801581e:	687b      	ldr	r3, [r7, #4]
 8015820:	2280      	movs	r2, #128	@ 0x80
 8015822:	2100      	movs	r1, #0
 8015824:	5499      	strb	r1, [r3, r2]
 8015826:	2300      	movs	r3, #0
 8015828:	0018      	movs	r0, r3
 801582a:	46bd      	mov	sp, r7
 801582c:	b004      	add	sp, #16
 801582e:	bd80      	pop	{r7, pc}
 8015830:	f1ffffff 	.word	0xf1ffffff

08015834 <UARTEx_SetNbDataToProcess>:
 8015834:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015836:	b085      	sub	sp, #20
 8015838:	af00      	add	r7, sp, #0
 801583a:	6078      	str	r0, [r7, #4]
 801583c:	687b      	ldr	r3, [r7, #4]
 801583e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8015840:	2b00      	cmp	r3, #0
 8015842:	d108      	bne.n	8015856 <UARTEx_SetNbDataToProcess+0x22>
 8015844:	687b      	ldr	r3, [r7, #4]
 8015846:	226a      	movs	r2, #106	@ 0x6a
 8015848:	2101      	movs	r1, #1
 801584a:	5299      	strh	r1, [r3, r2]
 801584c:	687b      	ldr	r3, [r7, #4]
 801584e:	2268      	movs	r2, #104	@ 0x68
 8015850:	2101      	movs	r1, #1
 8015852:	5299      	strh	r1, [r3, r2]
 8015854:	e043      	b.n	80158de <UARTEx_SetNbDataToProcess+0xaa>
 8015856:	260f      	movs	r6, #15
 8015858:	19bb      	adds	r3, r7, r6
 801585a:	2208      	movs	r2, #8
 801585c:	701a      	strb	r2, [r3, #0]
 801585e:	200e      	movs	r0, #14
 8015860:	183b      	adds	r3, r7, r0
 8015862:	2208      	movs	r2, #8
 8015864:	701a      	strb	r2, [r3, #0]
 8015866:	687b      	ldr	r3, [r7, #4]
 8015868:	681b      	ldr	r3, [r3, #0]
 801586a:	689b      	ldr	r3, [r3, #8]
 801586c:	0e5b      	lsrs	r3, r3, #25
 801586e:	b2da      	uxtb	r2, r3
 8015870:	240d      	movs	r4, #13
 8015872:	193b      	adds	r3, r7, r4
 8015874:	2107      	movs	r1, #7
 8015876:	400a      	ands	r2, r1
 8015878:	701a      	strb	r2, [r3, #0]
 801587a:	687b      	ldr	r3, [r7, #4]
 801587c:	681b      	ldr	r3, [r3, #0]
 801587e:	689b      	ldr	r3, [r3, #8]
 8015880:	0f5b      	lsrs	r3, r3, #29
 8015882:	b2da      	uxtb	r2, r3
 8015884:	250c      	movs	r5, #12
 8015886:	197b      	adds	r3, r7, r5
 8015888:	2107      	movs	r1, #7
 801588a:	400a      	ands	r2, r1
 801588c:	701a      	strb	r2, [r3, #0]
 801588e:	183b      	adds	r3, r7, r0
 8015890:	781b      	ldrb	r3, [r3, #0]
 8015892:	197a      	adds	r2, r7, r5
 8015894:	7812      	ldrb	r2, [r2, #0]
 8015896:	4914      	ldr	r1, [pc, #80]	@ (80158e8 <UARTEx_SetNbDataToProcess+0xb4>)
 8015898:	5c8a      	ldrb	r2, [r1, r2]
 801589a:	435a      	muls	r2, r3
 801589c:	0010      	movs	r0, r2
 801589e:	197b      	adds	r3, r7, r5
 80158a0:	781b      	ldrb	r3, [r3, #0]
 80158a2:	4a12      	ldr	r2, [pc, #72]	@ (80158ec <UARTEx_SetNbDataToProcess+0xb8>)
 80158a4:	5cd3      	ldrb	r3, [r2, r3]
 80158a6:	0019      	movs	r1, r3
 80158a8:	f7ea fcc8 	bl	800023c <__divsi3>
 80158ac:	0003      	movs	r3, r0
 80158ae:	b299      	uxth	r1, r3
 80158b0:	687b      	ldr	r3, [r7, #4]
 80158b2:	226a      	movs	r2, #106	@ 0x6a
 80158b4:	5299      	strh	r1, [r3, r2]
 80158b6:	19bb      	adds	r3, r7, r6
 80158b8:	781b      	ldrb	r3, [r3, #0]
 80158ba:	193a      	adds	r2, r7, r4
 80158bc:	7812      	ldrb	r2, [r2, #0]
 80158be:	490a      	ldr	r1, [pc, #40]	@ (80158e8 <UARTEx_SetNbDataToProcess+0xb4>)
 80158c0:	5c8a      	ldrb	r2, [r1, r2]
 80158c2:	435a      	muls	r2, r3
 80158c4:	0010      	movs	r0, r2
 80158c6:	193b      	adds	r3, r7, r4
 80158c8:	781b      	ldrb	r3, [r3, #0]
 80158ca:	4a08      	ldr	r2, [pc, #32]	@ (80158ec <UARTEx_SetNbDataToProcess+0xb8>)
 80158cc:	5cd3      	ldrb	r3, [r2, r3]
 80158ce:	0019      	movs	r1, r3
 80158d0:	f7ea fcb4 	bl	800023c <__divsi3>
 80158d4:	0003      	movs	r3, r0
 80158d6:	b299      	uxth	r1, r3
 80158d8:	687b      	ldr	r3, [r7, #4]
 80158da:	2268      	movs	r2, #104	@ 0x68
 80158dc:	5299      	strh	r1, [r3, r2]
 80158de:	46c0      	nop			@ (mov r8, r8)
 80158e0:	46bd      	mov	sp, r7
 80158e2:	b005      	add	sp, #20
 80158e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80158e6:	46c0      	nop			@ (mov r8, r8)
 80158e8:	08019fbc 	.word	0x08019fbc
 80158ec:	08019fc4 	.word	0x08019fc4

080158f0 <MX_FATFS_Init>:
 80158f0:	b580      	push	{r7, lr}
 80158f2:	af00      	add	r7, sp, #0
 80158f4:	4a08      	ldr	r2, [pc, #32]	@ (8015918 <MX_FATFS_Init+0x28>)
 80158f6:	4b09      	ldr	r3, [pc, #36]	@ (801591c <MX_FATFS_Init+0x2c>)
 80158f8:	0011      	movs	r1, r2
 80158fa:	0018      	movs	r0, r3
 80158fc:	f002 ff46 	bl	801878c <FATFS_LinkDriver>
 8015900:	1e03      	subs	r3, r0, #0
 8015902:	d002      	beq.n	801590a <MX_FATFS_Init+0x1a>
 8015904:	2301      	movs	r3, #1
 8015906:	425b      	negs	r3, r3
 8015908:	e003      	b.n	8015912 <MX_FATFS_Init+0x22>
 801590a:	4b05      	ldr	r3, [pc, #20]	@ (8015920 <MX_FATFS_Init+0x30>)
 801590c:	2201      	movs	r2, #1
 801590e:	701a      	strb	r2, [r3, #0]
 8015910:	2300      	movs	r3, #0
 8015912:	0018      	movs	r0, r3
 8015914:	46bd      	mov	sp, r7
 8015916:	bd80      	pop	{r7, pc}
 8015918:	20003478 	.word	0x20003478
 801591c:	200004a0 	.word	0x200004a0
 8015920:	2000347c 	.word	0x2000347c

08015924 <get_fattime>:
 8015924:	b580      	push	{r7, lr}
 8015926:	af00      	add	r7, sp, #0
 8015928:	2300      	movs	r3, #0
 801592a:	0018      	movs	r0, r3
 801592c:	46bd      	mov	sp, r7
 801592e:	bd80      	pop	{r7, pc}

08015930 <USER_initialize>:
 8015930:	b580      	push	{r7, lr}
 8015932:	b082      	sub	sp, #8
 8015934:	af00      	add	r7, sp, #0
 8015936:	0002      	movs	r2, r0
 8015938:	1dfb      	adds	r3, r7, #7
 801593a:	701a      	strb	r2, [r3, #0]
 801593c:	1dfb      	adds	r3, r7, #7
 801593e:	781b      	ldrb	r3, [r3, #0]
 8015940:	0018      	movs	r0, r3
 8015942:	f7ed ff7f 	bl	8003844 <SD_disk_initialize>
 8015946:	0003      	movs	r3, r0
 8015948:	0018      	movs	r0, r3
 801594a:	46bd      	mov	sp, r7
 801594c:	b002      	add	sp, #8
 801594e:	bd80      	pop	{r7, pc}

08015950 <USER_status>:
 8015950:	b580      	push	{r7, lr}
 8015952:	b082      	sub	sp, #8
 8015954:	af00      	add	r7, sp, #0
 8015956:	0002      	movs	r2, r0
 8015958:	1dfb      	adds	r3, r7, #7
 801595a:	701a      	strb	r2, [r3, #0]
 801595c:	1dfb      	adds	r3, r7, #7
 801595e:	781b      	ldrb	r3, [r3, #0]
 8015960:	0018      	movs	r0, r3
 8015962:	f7ee f87d 	bl	8003a60 <SD_disk_status>
 8015966:	0003      	movs	r3, r0
 8015968:	0018      	movs	r0, r3
 801596a:	46bd      	mov	sp, r7
 801596c:	b002      	add	sp, #8
 801596e:	bd80      	pop	{r7, pc}

08015970 <USER_read>:
 8015970:	b5b0      	push	{r4, r5, r7, lr}
 8015972:	b084      	sub	sp, #16
 8015974:	af00      	add	r7, sp, #0
 8015976:	60b9      	str	r1, [r7, #8]
 8015978:	607a      	str	r2, [r7, #4]
 801597a:	603b      	str	r3, [r7, #0]
 801597c:	250f      	movs	r5, #15
 801597e:	197b      	adds	r3, r7, r5
 8015980:	1c02      	adds	r2, r0, #0
 8015982:	701a      	strb	r2, [r3, #0]
 8015984:	683c      	ldr	r4, [r7, #0]
 8015986:	687a      	ldr	r2, [r7, #4]
 8015988:	68b9      	ldr	r1, [r7, #8]
 801598a:	197b      	adds	r3, r7, r5
 801598c:	7818      	ldrb	r0, [r3, #0]
 801598e:	0023      	movs	r3, r4
 8015990:	f7ee f87c 	bl	8003a8c <SD_disk_read>
 8015994:	0003      	movs	r3, r0
 8015996:	0018      	movs	r0, r3
 8015998:	46bd      	mov	sp, r7
 801599a:	b004      	add	sp, #16
 801599c:	bdb0      	pop	{r4, r5, r7, pc}

0801599e <USER_write>:
 801599e:	b5b0      	push	{r4, r5, r7, lr}
 80159a0:	b084      	sub	sp, #16
 80159a2:	af00      	add	r7, sp, #0
 80159a4:	60b9      	str	r1, [r7, #8]
 80159a6:	607a      	str	r2, [r7, #4]
 80159a8:	603b      	str	r3, [r7, #0]
 80159aa:	250f      	movs	r5, #15
 80159ac:	197b      	adds	r3, r7, r5
 80159ae:	1c02      	adds	r2, r0, #0
 80159b0:	701a      	strb	r2, [r3, #0]
 80159b2:	683c      	ldr	r4, [r7, #0]
 80159b4:	687a      	ldr	r2, [r7, #4]
 80159b6:	68b9      	ldr	r1, [r7, #8]
 80159b8:	197b      	adds	r3, r7, r5
 80159ba:	7818      	ldrb	r0, [r3, #0]
 80159bc:	0023      	movs	r3, r4
 80159be:	f7ee f8d5 	bl	8003b6c <SD_disk_write>
 80159c2:	0003      	movs	r3, r0
 80159c4:	0018      	movs	r0, r3
 80159c6:	46bd      	mov	sp, r7
 80159c8:	b004      	add	sp, #16
 80159ca:	bdb0      	pop	{r4, r5, r7, pc}

080159cc <USER_ioctl>:
 80159cc:	b580      	push	{r7, lr}
 80159ce:	b082      	sub	sp, #8
 80159d0:	af00      	add	r7, sp, #0
 80159d2:	603a      	str	r2, [r7, #0]
 80159d4:	1dfb      	adds	r3, r7, #7
 80159d6:	1c02      	adds	r2, r0, #0
 80159d8:	701a      	strb	r2, [r3, #0]
 80159da:	1dbb      	adds	r3, r7, #6
 80159dc:	1c0a      	adds	r2, r1, #0
 80159de:	701a      	strb	r2, [r3, #0]
 80159e0:	683a      	ldr	r2, [r7, #0]
 80159e2:	1dbb      	adds	r3, r7, #6
 80159e4:	7819      	ldrb	r1, [r3, #0]
 80159e6:	1dfb      	adds	r3, r7, #7
 80159e8:	781b      	ldrb	r3, [r3, #0]
 80159ea:	0018      	movs	r0, r3
 80159ec:	f7ee f946 	bl	8003c7c <SD_disk_ioctl>
 80159f0:	0003      	movs	r3, r0
 80159f2:	0018      	movs	r0, r3
 80159f4:	46bd      	mov	sp, r7
 80159f6:	b002      	add	sp, #8
 80159f8:	bd80      	pop	{r7, pc}
	...

080159fc <disk_status>:
 80159fc:	b5b0      	push	{r4, r5, r7, lr}
 80159fe:	b084      	sub	sp, #16
 8015a00:	af00      	add	r7, sp, #0
 8015a02:	0002      	movs	r2, r0
 8015a04:	1dfb      	adds	r3, r7, #7
 8015a06:	701a      	strb	r2, [r3, #0]
 8015a08:	1dfb      	adds	r3, r7, #7
 8015a0a:	781b      	ldrb	r3, [r3, #0]
 8015a0c:	4a0b      	ldr	r2, [pc, #44]	@ (8015a3c <disk_status+0x40>)
 8015a0e:	009b      	lsls	r3, r3, #2
 8015a10:	18d3      	adds	r3, r2, r3
 8015a12:	3304      	adds	r3, #4
 8015a14:	681b      	ldr	r3, [r3, #0]
 8015a16:	685b      	ldr	r3, [r3, #4]
 8015a18:	1dfa      	adds	r2, r7, #7
 8015a1a:	7812      	ldrb	r2, [r2, #0]
 8015a1c:	4907      	ldr	r1, [pc, #28]	@ (8015a3c <disk_status+0x40>)
 8015a1e:	188a      	adds	r2, r1, r2
 8015a20:	7a12      	ldrb	r2, [r2, #8]
 8015a22:	250f      	movs	r5, #15
 8015a24:	197c      	adds	r4, r7, r5
 8015a26:	0010      	movs	r0, r2
 8015a28:	4798      	blx	r3
 8015a2a:	0003      	movs	r3, r0
 8015a2c:	7023      	strb	r3, [r4, #0]
 8015a2e:	197b      	adds	r3, r7, r5
 8015a30:	781b      	ldrb	r3, [r3, #0]
 8015a32:	0018      	movs	r0, r3
 8015a34:	46bd      	mov	sp, r7
 8015a36:	b004      	add	sp, #16
 8015a38:	bdb0      	pop	{r4, r5, r7, pc}
 8015a3a:	46c0      	nop			@ (mov r8, r8)
 8015a3c:	200034a8 	.word	0x200034a8

08015a40 <disk_initialize>:
 8015a40:	b590      	push	{r4, r7, lr}
 8015a42:	b085      	sub	sp, #20
 8015a44:	af00      	add	r7, sp, #0
 8015a46:	0002      	movs	r2, r0
 8015a48:	1dfb      	adds	r3, r7, #7
 8015a4a:	701a      	strb	r2, [r3, #0]
 8015a4c:	200f      	movs	r0, #15
 8015a4e:	183b      	adds	r3, r7, r0
 8015a50:	2200      	movs	r2, #0
 8015a52:	701a      	strb	r2, [r3, #0]
 8015a54:	1dfb      	adds	r3, r7, #7
 8015a56:	781b      	ldrb	r3, [r3, #0]
 8015a58:	4a10      	ldr	r2, [pc, #64]	@ (8015a9c <disk_initialize+0x5c>)
 8015a5a:	5cd3      	ldrb	r3, [r2, r3]
 8015a5c:	2b00      	cmp	r3, #0
 8015a5e:	d116      	bne.n	8015a8e <disk_initialize+0x4e>
 8015a60:	1dfb      	adds	r3, r7, #7
 8015a62:	781b      	ldrb	r3, [r3, #0]
 8015a64:	4a0d      	ldr	r2, [pc, #52]	@ (8015a9c <disk_initialize+0x5c>)
 8015a66:	2101      	movs	r1, #1
 8015a68:	54d1      	strb	r1, [r2, r3]
 8015a6a:	1dfb      	adds	r3, r7, #7
 8015a6c:	781b      	ldrb	r3, [r3, #0]
 8015a6e:	4a0b      	ldr	r2, [pc, #44]	@ (8015a9c <disk_initialize+0x5c>)
 8015a70:	009b      	lsls	r3, r3, #2
 8015a72:	18d3      	adds	r3, r2, r3
 8015a74:	3304      	adds	r3, #4
 8015a76:	681b      	ldr	r3, [r3, #0]
 8015a78:	681b      	ldr	r3, [r3, #0]
 8015a7a:	1dfa      	adds	r2, r7, #7
 8015a7c:	7812      	ldrb	r2, [r2, #0]
 8015a7e:	4907      	ldr	r1, [pc, #28]	@ (8015a9c <disk_initialize+0x5c>)
 8015a80:	188a      	adds	r2, r1, r2
 8015a82:	7a12      	ldrb	r2, [r2, #8]
 8015a84:	183c      	adds	r4, r7, r0
 8015a86:	0010      	movs	r0, r2
 8015a88:	4798      	blx	r3
 8015a8a:	0003      	movs	r3, r0
 8015a8c:	7023      	strb	r3, [r4, #0]
 8015a8e:	230f      	movs	r3, #15
 8015a90:	18fb      	adds	r3, r7, r3
 8015a92:	781b      	ldrb	r3, [r3, #0]
 8015a94:	0018      	movs	r0, r3
 8015a96:	46bd      	mov	sp, r7
 8015a98:	b005      	add	sp, #20
 8015a9a:	bd90      	pop	{r4, r7, pc}
 8015a9c:	200034a8 	.word	0x200034a8

08015aa0 <disk_read>:
 8015aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015aa2:	b087      	sub	sp, #28
 8015aa4:	af00      	add	r7, sp, #0
 8015aa6:	60b9      	str	r1, [r7, #8]
 8015aa8:	607a      	str	r2, [r7, #4]
 8015aaa:	603b      	str	r3, [r7, #0]
 8015aac:	210f      	movs	r1, #15
 8015aae:	187b      	adds	r3, r7, r1
 8015ab0:	1c02      	adds	r2, r0, #0
 8015ab2:	701a      	strb	r2, [r3, #0]
 8015ab4:	187b      	adds	r3, r7, r1
 8015ab6:	781b      	ldrb	r3, [r3, #0]
 8015ab8:	4a0c      	ldr	r2, [pc, #48]	@ (8015aec <disk_read+0x4c>)
 8015aba:	009b      	lsls	r3, r3, #2
 8015abc:	18d3      	adds	r3, r2, r3
 8015abe:	3304      	adds	r3, #4
 8015ac0:	681b      	ldr	r3, [r3, #0]
 8015ac2:	689d      	ldr	r5, [r3, #8]
 8015ac4:	187b      	adds	r3, r7, r1
 8015ac6:	781b      	ldrb	r3, [r3, #0]
 8015ac8:	4a08      	ldr	r2, [pc, #32]	@ (8015aec <disk_read+0x4c>)
 8015aca:	18d3      	adds	r3, r2, r3
 8015acc:	7a18      	ldrb	r0, [r3, #8]
 8015ace:	2617      	movs	r6, #23
 8015ad0:	19bc      	adds	r4, r7, r6
 8015ad2:	683b      	ldr	r3, [r7, #0]
 8015ad4:	687a      	ldr	r2, [r7, #4]
 8015ad6:	68b9      	ldr	r1, [r7, #8]
 8015ad8:	47a8      	blx	r5
 8015ada:	0003      	movs	r3, r0
 8015adc:	7023      	strb	r3, [r4, #0]
 8015ade:	19bb      	adds	r3, r7, r6
 8015ae0:	781b      	ldrb	r3, [r3, #0]
 8015ae2:	0018      	movs	r0, r3
 8015ae4:	46bd      	mov	sp, r7
 8015ae6:	b007      	add	sp, #28
 8015ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015aea:	46c0      	nop			@ (mov r8, r8)
 8015aec:	200034a8 	.word	0x200034a8

08015af0 <disk_write>:
 8015af0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015af2:	b087      	sub	sp, #28
 8015af4:	af00      	add	r7, sp, #0
 8015af6:	60b9      	str	r1, [r7, #8]
 8015af8:	607a      	str	r2, [r7, #4]
 8015afa:	603b      	str	r3, [r7, #0]
 8015afc:	210f      	movs	r1, #15
 8015afe:	187b      	adds	r3, r7, r1
 8015b00:	1c02      	adds	r2, r0, #0
 8015b02:	701a      	strb	r2, [r3, #0]
 8015b04:	187b      	adds	r3, r7, r1
 8015b06:	781b      	ldrb	r3, [r3, #0]
 8015b08:	4a0c      	ldr	r2, [pc, #48]	@ (8015b3c <disk_write+0x4c>)
 8015b0a:	009b      	lsls	r3, r3, #2
 8015b0c:	18d3      	adds	r3, r2, r3
 8015b0e:	3304      	adds	r3, #4
 8015b10:	681b      	ldr	r3, [r3, #0]
 8015b12:	68dd      	ldr	r5, [r3, #12]
 8015b14:	187b      	adds	r3, r7, r1
 8015b16:	781b      	ldrb	r3, [r3, #0]
 8015b18:	4a08      	ldr	r2, [pc, #32]	@ (8015b3c <disk_write+0x4c>)
 8015b1a:	18d3      	adds	r3, r2, r3
 8015b1c:	7a18      	ldrb	r0, [r3, #8]
 8015b1e:	2617      	movs	r6, #23
 8015b20:	19bc      	adds	r4, r7, r6
 8015b22:	683b      	ldr	r3, [r7, #0]
 8015b24:	687a      	ldr	r2, [r7, #4]
 8015b26:	68b9      	ldr	r1, [r7, #8]
 8015b28:	47a8      	blx	r5
 8015b2a:	0003      	movs	r3, r0
 8015b2c:	7023      	strb	r3, [r4, #0]
 8015b2e:	19bb      	adds	r3, r7, r6
 8015b30:	781b      	ldrb	r3, [r3, #0]
 8015b32:	0018      	movs	r0, r3
 8015b34:	46bd      	mov	sp, r7
 8015b36:	b007      	add	sp, #28
 8015b38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015b3a:	46c0      	nop			@ (mov r8, r8)
 8015b3c:	200034a8 	.word	0x200034a8

08015b40 <disk_ioctl>:
 8015b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015b42:	b085      	sub	sp, #20
 8015b44:	af00      	add	r7, sp, #0
 8015b46:	603a      	str	r2, [r7, #0]
 8015b48:	1dfb      	adds	r3, r7, #7
 8015b4a:	1c02      	adds	r2, r0, #0
 8015b4c:	701a      	strb	r2, [r3, #0]
 8015b4e:	1dbb      	adds	r3, r7, #6
 8015b50:	1c0a      	adds	r2, r1, #0
 8015b52:	701a      	strb	r2, [r3, #0]
 8015b54:	1dfb      	adds	r3, r7, #7
 8015b56:	781b      	ldrb	r3, [r3, #0]
 8015b58:	4a0c      	ldr	r2, [pc, #48]	@ (8015b8c <disk_ioctl+0x4c>)
 8015b5a:	009b      	lsls	r3, r3, #2
 8015b5c:	18d3      	adds	r3, r2, r3
 8015b5e:	3304      	adds	r3, #4
 8015b60:	681b      	ldr	r3, [r3, #0]
 8015b62:	691b      	ldr	r3, [r3, #16]
 8015b64:	1dfa      	adds	r2, r7, #7
 8015b66:	7812      	ldrb	r2, [r2, #0]
 8015b68:	4908      	ldr	r1, [pc, #32]	@ (8015b8c <disk_ioctl+0x4c>)
 8015b6a:	188a      	adds	r2, r1, r2
 8015b6c:	7a10      	ldrb	r0, [r2, #8]
 8015b6e:	260f      	movs	r6, #15
 8015b70:	19bc      	adds	r4, r7, r6
 8015b72:	683d      	ldr	r5, [r7, #0]
 8015b74:	1dba      	adds	r2, r7, #6
 8015b76:	7811      	ldrb	r1, [r2, #0]
 8015b78:	002a      	movs	r2, r5
 8015b7a:	4798      	blx	r3
 8015b7c:	0003      	movs	r3, r0
 8015b7e:	7023      	strb	r3, [r4, #0]
 8015b80:	19bb      	adds	r3, r7, r6
 8015b82:	781b      	ldrb	r3, [r3, #0]
 8015b84:	0018      	movs	r0, r3
 8015b86:	46bd      	mov	sp, r7
 8015b88:	b005      	add	sp, #20
 8015b8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015b8c:	200034a8 	.word	0x200034a8

08015b90 <ld_word>:
 8015b90:	b580      	push	{r7, lr}
 8015b92:	b084      	sub	sp, #16
 8015b94:	af00      	add	r7, sp, #0
 8015b96:	6078      	str	r0, [r7, #4]
 8015b98:	687b      	ldr	r3, [r7, #4]
 8015b9a:	3301      	adds	r3, #1
 8015b9c:	781a      	ldrb	r2, [r3, #0]
 8015b9e:	210e      	movs	r1, #14
 8015ba0:	187b      	adds	r3, r7, r1
 8015ba2:	801a      	strh	r2, [r3, #0]
 8015ba4:	187b      	adds	r3, r7, r1
 8015ba6:	881b      	ldrh	r3, [r3, #0]
 8015ba8:	021b      	lsls	r3, r3, #8
 8015baa:	b21a      	sxth	r2, r3
 8015bac:	687b      	ldr	r3, [r7, #4]
 8015bae:	781b      	ldrb	r3, [r3, #0]
 8015bb0:	b21b      	sxth	r3, r3
 8015bb2:	4313      	orrs	r3, r2
 8015bb4:	b21a      	sxth	r2, r3
 8015bb6:	187b      	adds	r3, r7, r1
 8015bb8:	801a      	strh	r2, [r3, #0]
 8015bba:	187b      	adds	r3, r7, r1
 8015bbc:	881b      	ldrh	r3, [r3, #0]
 8015bbe:	0018      	movs	r0, r3
 8015bc0:	46bd      	mov	sp, r7
 8015bc2:	b004      	add	sp, #16
 8015bc4:	bd80      	pop	{r7, pc}

08015bc6 <ld_dword>:
 8015bc6:	b580      	push	{r7, lr}
 8015bc8:	b084      	sub	sp, #16
 8015bca:	af00      	add	r7, sp, #0
 8015bcc:	6078      	str	r0, [r7, #4]
 8015bce:	687b      	ldr	r3, [r7, #4]
 8015bd0:	3303      	adds	r3, #3
 8015bd2:	781b      	ldrb	r3, [r3, #0]
 8015bd4:	60fb      	str	r3, [r7, #12]
 8015bd6:	68fb      	ldr	r3, [r7, #12]
 8015bd8:	021b      	lsls	r3, r3, #8
 8015bda:	687a      	ldr	r2, [r7, #4]
 8015bdc:	3202      	adds	r2, #2
 8015bde:	7812      	ldrb	r2, [r2, #0]
 8015be0:	4313      	orrs	r3, r2
 8015be2:	60fb      	str	r3, [r7, #12]
 8015be4:	68fb      	ldr	r3, [r7, #12]
 8015be6:	021b      	lsls	r3, r3, #8
 8015be8:	687a      	ldr	r2, [r7, #4]
 8015bea:	3201      	adds	r2, #1
 8015bec:	7812      	ldrb	r2, [r2, #0]
 8015bee:	4313      	orrs	r3, r2
 8015bf0:	60fb      	str	r3, [r7, #12]
 8015bf2:	68fb      	ldr	r3, [r7, #12]
 8015bf4:	021b      	lsls	r3, r3, #8
 8015bf6:	687a      	ldr	r2, [r7, #4]
 8015bf8:	7812      	ldrb	r2, [r2, #0]
 8015bfa:	4313      	orrs	r3, r2
 8015bfc:	60fb      	str	r3, [r7, #12]
 8015bfe:	68fb      	ldr	r3, [r7, #12]
 8015c00:	0018      	movs	r0, r3
 8015c02:	46bd      	mov	sp, r7
 8015c04:	b004      	add	sp, #16
 8015c06:	bd80      	pop	{r7, pc}

08015c08 <st_word>:
 8015c08:	b580      	push	{r7, lr}
 8015c0a:	b082      	sub	sp, #8
 8015c0c:	af00      	add	r7, sp, #0
 8015c0e:	6078      	str	r0, [r7, #4]
 8015c10:	000a      	movs	r2, r1
 8015c12:	1cbb      	adds	r3, r7, #2
 8015c14:	801a      	strh	r2, [r3, #0]
 8015c16:	687b      	ldr	r3, [r7, #4]
 8015c18:	1c5a      	adds	r2, r3, #1
 8015c1a:	607a      	str	r2, [r7, #4]
 8015c1c:	1cba      	adds	r2, r7, #2
 8015c1e:	8812      	ldrh	r2, [r2, #0]
 8015c20:	b2d2      	uxtb	r2, r2
 8015c22:	701a      	strb	r2, [r3, #0]
 8015c24:	1cbb      	adds	r3, r7, #2
 8015c26:	1cba      	adds	r2, r7, #2
 8015c28:	8812      	ldrh	r2, [r2, #0]
 8015c2a:	0a12      	lsrs	r2, r2, #8
 8015c2c:	801a      	strh	r2, [r3, #0]
 8015c2e:	687b      	ldr	r3, [r7, #4]
 8015c30:	1c5a      	adds	r2, r3, #1
 8015c32:	607a      	str	r2, [r7, #4]
 8015c34:	1cba      	adds	r2, r7, #2
 8015c36:	8812      	ldrh	r2, [r2, #0]
 8015c38:	b2d2      	uxtb	r2, r2
 8015c3a:	701a      	strb	r2, [r3, #0]
 8015c3c:	46c0      	nop			@ (mov r8, r8)
 8015c3e:	46bd      	mov	sp, r7
 8015c40:	b002      	add	sp, #8
 8015c42:	bd80      	pop	{r7, pc}

08015c44 <st_dword>:
 8015c44:	b580      	push	{r7, lr}
 8015c46:	b082      	sub	sp, #8
 8015c48:	af00      	add	r7, sp, #0
 8015c4a:	6078      	str	r0, [r7, #4]
 8015c4c:	6039      	str	r1, [r7, #0]
 8015c4e:	687b      	ldr	r3, [r7, #4]
 8015c50:	1c5a      	adds	r2, r3, #1
 8015c52:	607a      	str	r2, [r7, #4]
 8015c54:	683a      	ldr	r2, [r7, #0]
 8015c56:	b2d2      	uxtb	r2, r2
 8015c58:	701a      	strb	r2, [r3, #0]
 8015c5a:	683b      	ldr	r3, [r7, #0]
 8015c5c:	0a1b      	lsrs	r3, r3, #8
 8015c5e:	603b      	str	r3, [r7, #0]
 8015c60:	687b      	ldr	r3, [r7, #4]
 8015c62:	1c5a      	adds	r2, r3, #1
 8015c64:	607a      	str	r2, [r7, #4]
 8015c66:	683a      	ldr	r2, [r7, #0]
 8015c68:	b2d2      	uxtb	r2, r2
 8015c6a:	701a      	strb	r2, [r3, #0]
 8015c6c:	683b      	ldr	r3, [r7, #0]
 8015c6e:	0a1b      	lsrs	r3, r3, #8
 8015c70:	603b      	str	r3, [r7, #0]
 8015c72:	687b      	ldr	r3, [r7, #4]
 8015c74:	1c5a      	adds	r2, r3, #1
 8015c76:	607a      	str	r2, [r7, #4]
 8015c78:	683a      	ldr	r2, [r7, #0]
 8015c7a:	b2d2      	uxtb	r2, r2
 8015c7c:	701a      	strb	r2, [r3, #0]
 8015c7e:	683b      	ldr	r3, [r7, #0]
 8015c80:	0a1b      	lsrs	r3, r3, #8
 8015c82:	603b      	str	r3, [r7, #0]
 8015c84:	687b      	ldr	r3, [r7, #4]
 8015c86:	1c5a      	adds	r2, r3, #1
 8015c88:	607a      	str	r2, [r7, #4]
 8015c8a:	683a      	ldr	r2, [r7, #0]
 8015c8c:	b2d2      	uxtb	r2, r2
 8015c8e:	701a      	strb	r2, [r3, #0]
 8015c90:	46c0      	nop			@ (mov r8, r8)
 8015c92:	46bd      	mov	sp, r7
 8015c94:	b002      	add	sp, #8
 8015c96:	bd80      	pop	{r7, pc}

08015c98 <mem_cpy>:
 8015c98:	b580      	push	{r7, lr}
 8015c9a:	b086      	sub	sp, #24
 8015c9c:	af00      	add	r7, sp, #0
 8015c9e:	60f8      	str	r0, [r7, #12]
 8015ca0:	60b9      	str	r1, [r7, #8]
 8015ca2:	607a      	str	r2, [r7, #4]
 8015ca4:	68fb      	ldr	r3, [r7, #12]
 8015ca6:	617b      	str	r3, [r7, #20]
 8015ca8:	68bb      	ldr	r3, [r7, #8]
 8015caa:	613b      	str	r3, [r7, #16]
 8015cac:	687b      	ldr	r3, [r7, #4]
 8015cae:	2b00      	cmp	r3, #0
 8015cb0:	d00d      	beq.n	8015cce <mem_cpy+0x36>
 8015cb2:	693a      	ldr	r2, [r7, #16]
 8015cb4:	1c53      	adds	r3, r2, #1
 8015cb6:	613b      	str	r3, [r7, #16]
 8015cb8:	697b      	ldr	r3, [r7, #20]
 8015cba:	1c59      	adds	r1, r3, #1
 8015cbc:	6179      	str	r1, [r7, #20]
 8015cbe:	7812      	ldrb	r2, [r2, #0]
 8015cc0:	701a      	strb	r2, [r3, #0]
 8015cc2:	687b      	ldr	r3, [r7, #4]
 8015cc4:	3b01      	subs	r3, #1
 8015cc6:	607b      	str	r3, [r7, #4]
 8015cc8:	687b      	ldr	r3, [r7, #4]
 8015cca:	2b00      	cmp	r3, #0
 8015ccc:	d1f1      	bne.n	8015cb2 <mem_cpy+0x1a>
 8015cce:	46c0      	nop			@ (mov r8, r8)
 8015cd0:	46bd      	mov	sp, r7
 8015cd2:	b006      	add	sp, #24
 8015cd4:	bd80      	pop	{r7, pc}

08015cd6 <mem_set>:
 8015cd6:	b580      	push	{r7, lr}
 8015cd8:	b086      	sub	sp, #24
 8015cda:	af00      	add	r7, sp, #0
 8015cdc:	60f8      	str	r0, [r7, #12]
 8015cde:	60b9      	str	r1, [r7, #8]
 8015ce0:	607a      	str	r2, [r7, #4]
 8015ce2:	68fb      	ldr	r3, [r7, #12]
 8015ce4:	617b      	str	r3, [r7, #20]
 8015ce6:	697b      	ldr	r3, [r7, #20]
 8015ce8:	1c5a      	adds	r2, r3, #1
 8015cea:	617a      	str	r2, [r7, #20]
 8015cec:	68ba      	ldr	r2, [r7, #8]
 8015cee:	b2d2      	uxtb	r2, r2
 8015cf0:	701a      	strb	r2, [r3, #0]
 8015cf2:	687b      	ldr	r3, [r7, #4]
 8015cf4:	3b01      	subs	r3, #1
 8015cf6:	607b      	str	r3, [r7, #4]
 8015cf8:	687b      	ldr	r3, [r7, #4]
 8015cfa:	2b00      	cmp	r3, #0
 8015cfc:	d1f3      	bne.n	8015ce6 <mem_set+0x10>
 8015cfe:	46c0      	nop			@ (mov r8, r8)
 8015d00:	46c0      	nop			@ (mov r8, r8)
 8015d02:	46bd      	mov	sp, r7
 8015d04:	b006      	add	sp, #24
 8015d06:	bd80      	pop	{r7, pc}

08015d08 <mem_cmp>:
 8015d08:	b580      	push	{r7, lr}
 8015d0a:	b088      	sub	sp, #32
 8015d0c:	af00      	add	r7, sp, #0
 8015d0e:	60f8      	str	r0, [r7, #12]
 8015d10:	60b9      	str	r1, [r7, #8]
 8015d12:	607a      	str	r2, [r7, #4]
 8015d14:	68fb      	ldr	r3, [r7, #12]
 8015d16:	61fb      	str	r3, [r7, #28]
 8015d18:	68bb      	ldr	r3, [r7, #8]
 8015d1a:	61bb      	str	r3, [r7, #24]
 8015d1c:	2300      	movs	r3, #0
 8015d1e:	617b      	str	r3, [r7, #20]
 8015d20:	69fb      	ldr	r3, [r7, #28]
 8015d22:	1c5a      	adds	r2, r3, #1
 8015d24:	61fa      	str	r2, [r7, #28]
 8015d26:	781b      	ldrb	r3, [r3, #0]
 8015d28:	0019      	movs	r1, r3
 8015d2a:	69bb      	ldr	r3, [r7, #24]
 8015d2c:	1c5a      	adds	r2, r3, #1
 8015d2e:	61ba      	str	r2, [r7, #24]
 8015d30:	781b      	ldrb	r3, [r3, #0]
 8015d32:	1acb      	subs	r3, r1, r3
 8015d34:	617b      	str	r3, [r7, #20]
 8015d36:	687b      	ldr	r3, [r7, #4]
 8015d38:	3b01      	subs	r3, #1
 8015d3a:	607b      	str	r3, [r7, #4]
 8015d3c:	687b      	ldr	r3, [r7, #4]
 8015d3e:	2b00      	cmp	r3, #0
 8015d40:	d002      	beq.n	8015d48 <mem_cmp+0x40>
 8015d42:	697b      	ldr	r3, [r7, #20]
 8015d44:	2b00      	cmp	r3, #0
 8015d46:	d0eb      	beq.n	8015d20 <mem_cmp+0x18>
 8015d48:	697b      	ldr	r3, [r7, #20]
 8015d4a:	0018      	movs	r0, r3
 8015d4c:	46bd      	mov	sp, r7
 8015d4e:	b008      	add	sp, #32
 8015d50:	bd80      	pop	{r7, pc}

08015d52 <chk_chr>:
 8015d52:	b580      	push	{r7, lr}
 8015d54:	b082      	sub	sp, #8
 8015d56:	af00      	add	r7, sp, #0
 8015d58:	6078      	str	r0, [r7, #4]
 8015d5a:	6039      	str	r1, [r7, #0]
 8015d5c:	e002      	b.n	8015d64 <chk_chr+0x12>
 8015d5e:	687b      	ldr	r3, [r7, #4]
 8015d60:	3301      	adds	r3, #1
 8015d62:	607b      	str	r3, [r7, #4]
 8015d64:	687b      	ldr	r3, [r7, #4]
 8015d66:	781b      	ldrb	r3, [r3, #0]
 8015d68:	2b00      	cmp	r3, #0
 8015d6a:	d005      	beq.n	8015d78 <chk_chr+0x26>
 8015d6c:	687b      	ldr	r3, [r7, #4]
 8015d6e:	781b      	ldrb	r3, [r3, #0]
 8015d70:	001a      	movs	r2, r3
 8015d72:	683b      	ldr	r3, [r7, #0]
 8015d74:	4293      	cmp	r3, r2
 8015d76:	d1f2      	bne.n	8015d5e <chk_chr+0xc>
 8015d78:	687b      	ldr	r3, [r7, #4]
 8015d7a:	781b      	ldrb	r3, [r3, #0]
 8015d7c:	0018      	movs	r0, r3
 8015d7e:	46bd      	mov	sp, r7
 8015d80:	b002      	add	sp, #8
 8015d82:	bd80      	pop	{r7, pc}

08015d84 <chk_lock>:
 8015d84:	b580      	push	{r7, lr}
 8015d86:	b084      	sub	sp, #16
 8015d88:	af00      	add	r7, sp, #0
 8015d8a:	6078      	str	r0, [r7, #4]
 8015d8c:	6039      	str	r1, [r7, #0]
 8015d8e:	2300      	movs	r3, #0
 8015d90:	60bb      	str	r3, [r7, #8]
 8015d92:	68bb      	ldr	r3, [r7, #8]
 8015d94:	60fb      	str	r3, [r7, #12]
 8015d96:	e027      	b.n	8015de8 <chk_lock+0x64>
 8015d98:	4b25      	ldr	r3, [pc, #148]	@ (8015e30 <chk_lock+0xac>)
 8015d9a:	68fa      	ldr	r2, [r7, #12]
 8015d9c:	0112      	lsls	r2, r2, #4
 8015d9e:	58d3      	ldr	r3, [r2, r3]
 8015da0:	2b00      	cmp	r3, #0
 8015da2:	d01c      	beq.n	8015dde <chk_lock+0x5a>
 8015da4:	4b22      	ldr	r3, [pc, #136]	@ (8015e30 <chk_lock+0xac>)
 8015da6:	68fa      	ldr	r2, [r7, #12]
 8015da8:	0112      	lsls	r2, r2, #4
 8015daa:	58d2      	ldr	r2, [r2, r3]
 8015dac:	687b      	ldr	r3, [r7, #4]
 8015dae:	681b      	ldr	r3, [r3, #0]
 8015db0:	429a      	cmp	r2, r3
 8015db2:	d116      	bne.n	8015de2 <chk_lock+0x5e>
 8015db4:	4a1e      	ldr	r2, [pc, #120]	@ (8015e30 <chk_lock+0xac>)
 8015db6:	68fb      	ldr	r3, [r7, #12]
 8015db8:	011b      	lsls	r3, r3, #4
 8015dba:	18d3      	adds	r3, r2, r3
 8015dbc:	3304      	adds	r3, #4
 8015dbe:	681a      	ldr	r2, [r3, #0]
 8015dc0:	687b      	ldr	r3, [r7, #4]
 8015dc2:	689b      	ldr	r3, [r3, #8]
 8015dc4:	429a      	cmp	r2, r3
 8015dc6:	d10c      	bne.n	8015de2 <chk_lock+0x5e>
 8015dc8:	4a19      	ldr	r2, [pc, #100]	@ (8015e30 <chk_lock+0xac>)
 8015dca:	68fb      	ldr	r3, [r7, #12]
 8015dcc:	011b      	lsls	r3, r3, #4
 8015dce:	18d3      	adds	r3, r2, r3
 8015dd0:	3308      	adds	r3, #8
 8015dd2:	681a      	ldr	r2, [r3, #0]
 8015dd4:	687b      	ldr	r3, [r7, #4]
 8015dd6:	695b      	ldr	r3, [r3, #20]
 8015dd8:	429a      	cmp	r2, r3
 8015dda:	d102      	bne.n	8015de2 <chk_lock+0x5e>
 8015ddc:	e007      	b.n	8015dee <chk_lock+0x6a>
 8015dde:	2301      	movs	r3, #1
 8015de0:	60bb      	str	r3, [r7, #8]
 8015de2:	68fb      	ldr	r3, [r7, #12]
 8015de4:	3301      	adds	r3, #1
 8015de6:	60fb      	str	r3, [r7, #12]
 8015de8:	68fb      	ldr	r3, [r7, #12]
 8015dea:	2b01      	cmp	r3, #1
 8015dec:	d9d4      	bls.n	8015d98 <chk_lock+0x14>
 8015dee:	68fb      	ldr	r3, [r7, #12]
 8015df0:	2b02      	cmp	r3, #2
 8015df2:	d109      	bne.n	8015e08 <chk_lock+0x84>
 8015df4:	68bb      	ldr	r3, [r7, #8]
 8015df6:	2b00      	cmp	r3, #0
 8015df8:	d102      	bne.n	8015e00 <chk_lock+0x7c>
 8015dfa:	683b      	ldr	r3, [r7, #0]
 8015dfc:	2b02      	cmp	r3, #2
 8015dfe:	d101      	bne.n	8015e04 <chk_lock+0x80>
 8015e00:	2300      	movs	r3, #0
 8015e02:	e011      	b.n	8015e28 <chk_lock+0xa4>
 8015e04:	2312      	movs	r3, #18
 8015e06:	e00f      	b.n	8015e28 <chk_lock+0xa4>
 8015e08:	683b      	ldr	r3, [r7, #0]
 8015e0a:	2b00      	cmp	r3, #0
 8015e0c:	d109      	bne.n	8015e22 <chk_lock+0x9e>
 8015e0e:	4a08      	ldr	r2, [pc, #32]	@ (8015e30 <chk_lock+0xac>)
 8015e10:	68fb      	ldr	r3, [r7, #12]
 8015e12:	011b      	lsls	r3, r3, #4
 8015e14:	18d3      	adds	r3, r2, r3
 8015e16:	330c      	adds	r3, #12
 8015e18:	881a      	ldrh	r2, [r3, #0]
 8015e1a:	2380      	movs	r3, #128	@ 0x80
 8015e1c:	005b      	lsls	r3, r3, #1
 8015e1e:	429a      	cmp	r2, r3
 8015e20:	d101      	bne.n	8015e26 <chk_lock+0xa2>
 8015e22:	2310      	movs	r3, #16
 8015e24:	e000      	b.n	8015e28 <chk_lock+0xa4>
 8015e26:	2300      	movs	r3, #0
 8015e28:	0018      	movs	r0, r3
 8015e2a:	46bd      	mov	sp, r7
 8015e2c:	b004      	add	sp, #16
 8015e2e:	bd80      	pop	{r7, pc}
 8015e30:	20003488 	.word	0x20003488

08015e34 <enq_lock>:
 8015e34:	b580      	push	{r7, lr}
 8015e36:	b082      	sub	sp, #8
 8015e38:	af00      	add	r7, sp, #0
 8015e3a:	2300      	movs	r3, #0
 8015e3c:	607b      	str	r3, [r7, #4]
 8015e3e:	e002      	b.n	8015e46 <enq_lock+0x12>
 8015e40:	687b      	ldr	r3, [r7, #4]
 8015e42:	3301      	adds	r3, #1
 8015e44:	607b      	str	r3, [r7, #4]
 8015e46:	687b      	ldr	r3, [r7, #4]
 8015e48:	2b01      	cmp	r3, #1
 8015e4a:	d805      	bhi.n	8015e58 <enq_lock+0x24>
 8015e4c:	4b07      	ldr	r3, [pc, #28]	@ (8015e6c <enq_lock+0x38>)
 8015e4e:	687a      	ldr	r2, [r7, #4]
 8015e50:	0112      	lsls	r2, r2, #4
 8015e52:	58d3      	ldr	r3, [r2, r3]
 8015e54:	2b00      	cmp	r3, #0
 8015e56:	d1f3      	bne.n	8015e40 <enq_lock+0xc>
 8015e58:	687b      	ldr	r3, [r7, #4]
 8015e5a:	3b02      	subs	r3, #2
 8015e5c:	1e5a      	subs	r2, r3, #1
 8015e5e:	4193      	sbcs	r3, r2
 8015e60:	b2db      	uxtb	r3, r3
 8015e62:	0018      	movs	r0, r3
 8015e64:	46bd      	mov	sp, r7
 8015e66:	b002      	add	sp, #8
 8015e68:	bd80      	pop	{r7, pc}
 8015e6a:	46c0      	nop			@ (mov r8, r8)
 8015e6c:	20003488 	.word	0x20003488

08015e70 <inc_lock>:
 8015e70:	b580      	push	{r7, lr}
 8015e72:	b084      	sub	sp, #16
 8015e74:	af00      	add	r7, sp, #0
 8015e76:	6078      	str	r0, [r7, #4]
 8015e78:	6039      	str	r1, [r7, #0]
 8015e7a:	2300      	movs	r3, #0
 8015e7c:	60fb      	str	r3, [r7, #12]
 8015e7e:	e01e      	b.n	8015ebe <inc_lock+0x4e>
 8015e80:	4b3f      	ldr	r3, [pc, #252]	@ (8015f80 <inc_lock+0x110>)
 8015e82:	68fa      	ldr	r2, [r7, #12]
 8015e84:	0112      	lsls	r2, r2, #4
 8015e86:	58d2      	ldr	r2, [r2, r3]
 8015e88:	687b      	ldr	r3, [r7, #4]
 8015e8a:	681b      	ldr	r3, [r3, #0]
 8015e8c:	429a      	cmp	r2, r3
 8015e8e:	d113      	bne.n	8015eb8 <inc_lock+0x48>
 8015e90:	4a3b      	ldr	r2, [pc, #236]	@ (8015f80 <inc_lock+0x110>)
 8015e92:	68fb      	ldr	r3, [r7, #12]
 8015e94:	011b      	lsls	r3, r3, #4
 8015e96:	18d3      	adds	r3, r2, r3
 8015e98:	3304      	adds	r3, #4
 8015e9a:	681a      	ldr	r2, [r3, #0]
 8015e9c:	687b      	ldr	r3, [r7, #4]
 8015e9e:	689b      	ldr	r3, [r3, #8]
 8015ea0:	429a      	cmp	r2, r3
 8015ea2:	d109      	bne.n	8015eb8 <inc_lock+0x48>
 8015ea4:	4a36      	ldr	r2, [pc, #216]	@ (8015f80 <inc_lock+0x110>)
 8015ea6:	68fb      	ldr	r3, [r7, #12]
 8015ea8:	011b      	lsls	r3, r3, #4
 8015eaa:	18d3      	adds	r3, r2, r3
 8015eac:	3308      	adds	r3, #8
 8015eae:	681a      	ldr	r2, [r3, #0]
 8015eb0:	687b      	ldr	r3, [r7, #4]
 8015eb2:	695b      	ldr	r3, [r3, #20]
 8015eb4:	429a      	cmp	r2, r3
 8015eb6:	d006      	beq.n	8015ec6 <inc_lock+0x56>
 8015eb8:	68fb      	ldr	r3, [r7, #12]
 8015eba:	3301      	adds	r3, #1
 8015ebc:	60fb      	str	r3, [r7, #12]
 8015ebe:	68fb      	ldr	r3, [r7, #12]
 8015ec0:	2b01      	cmp	r3, #1
 8015ec2:	d9dd      	bls.n	8015e80 <inc_lock+0x10>
 8015ec4:	e000      	b.n	8015ec8 <inc_lock+0x58>
 8015ec6:	46c0      	nop			@ (mov r8, r8)
 8015ec8:	68fb      	ldr	r3, [r7, #12]
 8015eca:	2b02      	cmp	r3, #2
 8015ecc:	d130      	bne.n	8015f30 <inc_lock+0xc0>
 8015ece:	2300      	movs	r3, #0
 8015ed0:	60fb      	str	r3, [r7, #12]
 8015ed2:	e002      	b.n	8015eda <inc_lock+0x6a>
 8015ed4:	68fb      	ldr	r3, [r7, #12]
 8015ed6:	3301      	adds	r3, #1
 8015ed8:	60fb      	str	r3, [r7, #12]
 8015eda:	68fb      	ldr	r3, [r7, #12]
 8015edc:	2b01      	cmp	r3, #1
 8015ede:	d805      	bhi.n	8015eec <inc_lock+0x7c>
 8015ee0:	4b27      	ldr	r3, [pc, #156]	@ (8015f80 <inc_lock+0x110>)
 8015ee2:	68fa      	ldr	r2, [r7, #12]
 8015ee4:	0112      	lsls	r2, r2, #4
 8015ee6:	58d3      	ldr	r3, [r2, r3]
 8015ee8:	2b00      	cmp	r3, #0
 8015eea:	d1f3      	bne.n	8015ed4 <inc_lock+0x64>
 8015eec:	68fb      	ldr	r3, [r7, #12]
 8015eee:	2b02      	cmp	r3, #2
 8015ef0:	d101      	bne.n	8015ef6 <inc_lock+0x86>
 8015ef2:	2300      	movs	r3, #0
 8015ef4:	e03f      	b.n	8015f76 <inc_lock+0x106>
 8015ef6:	687b      	ldr	r3, [r7, #4]
 8015ef8:	6819      	ldr	r1, [r3, #0]
 8015efa:	4b21      	ldr	r3, [pc, #132]	@ (8015f80 <inc_lock+0x110>)
 8015efc:	68fa      	ldr	r2, [r7, #12]
 8015efe:	0112      	lsls	r2, r2, #4
 8015f00:	50d1      	str	r1, [r2, r3]
 8015f02:	687b      	ldr	r3, [r7, #4]
 8015f04:	689a      	ldr	r2, [r3, #8]
 8015f06:	491e      	ldr	r1, [pc, #120]	@ (8015f80 <inc_lock+0x110>)
 8015f08:	68fb      	ldr	r3, [r7, #12]
 8015f0a:	011b      	lsls	r3, r3, #4
 8015f0c:	18cb      	adds	r3, r1, r3
 8015f0e:	3304      	adds	r3, #4
 8015f10:	601a      	str	r2, [r3, #0]
 8015f12:	687b      	ldr	r3, [r7, #4]
 8015f14:	695a      	ldr	r2, [r3, #20]
 8015f16:	491a      	ldr	r1, [pc, #104]	@ (8015f80 <inc_lock+0x110>)
 8015f18:	68fb      	ldr	r3, [r7, #12]
 8015f1a:	011b      	lsls	r3, r3, #4
 8015f1c:	18cb      	adds	r3, r1, r3
 8015f1e:	3308      	adds	r3, #8
 8015f20:	601a      	str	r2, [r3, #0]
 8015f22:	4a17      	ldr	r2, [pc, #92]	@ (8015f80 <inc_lock+0x110>)
 8015f24:	68fb      	ldr	r3, [r7, #12]
 8015f26:	011b      	lsls	r3, r3, #4
 8015f28:	18d3      	adds	r3, r2, r3
 8015f2a:	330c      	adds	r3, #12
 8015f2c:	2200      	movs	r2, #0
 8015f2e:	801a      	strh	r2, [r3, #0]
 8015f30:	683b      	ldr	r3, [r7, #0]
 8015f32:	2b00      	cmp	r3, #0
 8015f34:	d009      	beq.n	8015f4a <inc_lock+0xda>
 8015f36:	4a12      	ldr	r2, [pc, #72]	@ (8015f80 <inc_lock+0x110>)
 8015f38:	68fb      	ldr	r3, [r7, #12]
 8015f3a:	011b      	lsls	r3, r3, #4
 8015f3c:	18d3      	adds	r3, r2, r3
 8015f3e:	330c      	adds	r3, #12
 8015f40:	881b      	ldrh	r3, [r3, #0]
 8015f42:	2b00      	cmp	r3, #0
 8015f44:	d001      	beq.n	8015f4a <inc_lock+0xda>
 8015f46:	2300      	movs	r3, #0
 8015f48:	e015      	b.n	8015f76 <inc_lock+0x106>
 8015f4a:	683b      	ldr	r3, [r7, #0]
 8015f4c:	2b00      	cmp	r3, #0
 8015f4e:	d108      	bne.n	8015f62 <inc_lock+0xf2>
 8015f50:	4a0b      	ldr	r2, [pc, #44]	@ (8015f80 <inc_lock+0x110>)
 8015f52:	68fb      	ldr	r3, [r7, #12]
 8015f54:	011b      	lsls	r3, r3, #4
 8015f56:	18d3      	adds	r3, r2, r3
 8015f58:	330c      	adds	r3, #12
 8015f5a:	881b      	ldrh	r3, [r3, #0]
 8015f5c:	3301      	adds	r3, #1
 8015f5e:	b29b      	uxth	r3, r3
 8015f60:	e001      	b.n	8015f66 <inc_lock+0xf6>
 8015f62:	2380      	movs	r3, #128	@ 0x80
 8015f64:	005b      	lsls	r3, r3, #1
 8015f66:	4906      	ldr	r1, [pc, #24]	@ (8015f80 <inc_lock+0x110>)
 8015f68:	68fa      	ldr	r2, [r7, #12]
 8015f6a:	0112      	lsls	r2, r2, #4
 8015f6c:	188a      	adds	r2, r1, r2
 8015f6e:	320c      	adds	r2, #12
 8015f70:	8013      	strh	r3, [r2, #0]
 8015f72:	68fb      	ldr	r3, [r7, #12]
 8015f74:	3301      	adds	r3, #1
 8015f76:	0018      	movs	r0, r3
 8015f78:	46bd      	mov	sp, r7
 8015f7a:	b004      	add	sp, #16
 8015f7c:	bd80      	pop	{r7, pc}
 8015f7e:	46c0      	nop			@ (mov r8, r8)
 8015f80:	20003488 	.word	0x20003488

08015f84 <dec_lock>:
 8015f84:	b580      	push	{r7, lr}
 8015f86:	b084      	sub	sp, #16
 8015f88:	af00      	add	r7, sp, #0
 8015f8a:	6078      	str	r0, [r7, #4]
 8015f8c:	687b      	ldr	r3, [r7, #4]
 8015f8e:	3b01      	subs	r3, #1
 8015f90:	607b      	str	r3, [r7, #4]
 8015f92:	687b      	ldr	r3, [r7, #4]
 8015f94:	2b01      	cmp	r3, #1
 8015f96:	d832      	bhi.n	8015ffe <dec_lock+0x7a>
 8015f98:	200e      	movs	r0, #14
 8015f9a:	183b      	adds	r3, r7, r0
 8015f9c:	491d      	ldr	r1, [pc, #116]	@ (8016014 <dec_lock+0x90>)
 8015f9e:	687a      	ldr	r2, [r7, #4]
 8015fa0:	0112      	lsls	r2, r2, #4
 8015fa2:	188a      	adds	r2, r1, r2
 8015fa4:	320c      	adds	r2, #12
 8015fa6:	8812      	ldrh	r2, [r2, #0]
 8015fa8:	801a      	strh	r2, [r3, #0]
 8015faa:	183b      	adds	r3, r7, r0
 8015fac:	881a      	ldrh	r2, [r3, #0]
 8015fae:	2380      	movs	r3, #128	@ 0x80
 8015fb0:	005b      	lsls	r3, r3, #1
 8015fb2:	429a      	cmp	r2, r3
 8015fb4:	d102      	bne.n	8015fbc <dec_lock+0x38>
 8015fb6:	183b      	adds	r3, r7, r0
 8015fb8:	2200      	movs	r2, #0
 8015fba:	801a      	strh	r2, [r3, #0]
 8015fbc:	210e      	movs	r1, #14
 8015fbe:	187b      	adds	r3, r7, r1
 8015fc0:	881b      	ldrh	r3, [r3, #0]
 8015fc2:	2b00      	cmp	r3, #0
 8015fc4:	d004      	beq.n	8015fd0 <dec_lock+0x4c>
 8015fc6:	187b      	adds	r3, r7, r1
 8015fc8:	881a      	ldrh	r2, [r3, #0]
 8015fca:	187b      	adds	r3, r7, r1
 8015fcc:	3a01      	subs	r2, #1
 8015fce:	801a      	strh	r2, [r3, #0]
 8015fd0:	4a10      	ldr	r2, [pc, #64]	@ (8016014 <dec_lock+0x90>)
 8015fd2:	687b      	ldr	r3, [r7, #4]
 8015fd4:	011b      	lsls	r3, r3, #4
 8015fd6:	18d3      	adds	r3, r2, r3
 8015fd8:	330c      	adds	r3, #12
 8015fda:	210e      	movs	r1, #14
 8015fdc:	187a      	adds	r2, r7, r1
 8015fde:	8812      	ldrh	r2, [r2, #0]
 8015fe0:	801a      	strh	r2, [r3, #0]
 8015fe2:	187b      	adds	r3, r7, r1
 8015fe4:	881b      	ldrh	r3, [r3, #0]
 8015fe6:	2b00      	cmp	r3, #0
 8015fe8:	d104      	bne.n	8015ff4 <dec_lock+0x70>
 8015fea:	4b0a      	ldr	r3, [pc, #40]	@ (8016014 <dec_lock+0x90>)
 8015fec:	687a      	ldr	r2, [r7, #4]
 8015fee:	0112      	lsls	r2, r2, #4
 8015ff0:	2100      	movs	r1, #0
 8015ff2:	50d1      	str	r1, [r2, r3]
 8015ff4:	230d      	movs	r3, #13
 8015ff6:	18fb      	adds	r3, r7, r3
 8015ff8:	2200      	movs	r2, #0
 8015ffa:	701a      	strb	r2, [r3, #0]
 8015ffc:	e003      	b.n	8016006 <dec_lock+0x82>
 8015ffe:	230d      	movs	r3, #13
 8016000:	18fb      	adds	r3, r7, r3
 8016002:	2202      	movs	r2, #2
 8016004:	701a      	strb	r2, [r3, #0]
 8016006:	230d      	movs	r3, #13
 8016008:	18fb      	adds	r3, r7, r3
 801600a:	781b      	ldrb	r3, [r3, #0]
 801600c:	0018      	movs	r0, r3
 801600e:	46bd      	mov	sp, r7
 8016010:	b004      	add	sp, #16
 8016012:	bd80      	pop	{r7, pc}
 8016014:	20003488 	.word	0x20003488

08016018 <clear_lock>:
 8016018:	b580      	push	{r7, lr}
 801601a:	b084      	sub	sp, #16
 801601c:	af00      	add	r7, sp, #0
 801601e:	6078      	str	r0, [r7, #4]
 8016020:	2300      	movs	r3, #0
 8016022:	60fb      	str	r3, [r7, #12]
 8016024:	e00e      	b.n	8016044 <clear_lock+0x2c>
 8016026:	4b0b      	ldr	r3, [pc, #44]	@ (8016054 <clear_lock+0x3c>)
 8016028:	68fa      	ldr	r2, [r7, #12]
 801602a:	0112      	lsls	r2, r2, #4
 801602c:	58d3      	ldr	r3, [r2, r3]
 801602e:	687a      	ldr	r2, [r7, #4]
 8016030:	429a      	cmp	r2, r3
 8016032:	d104      	bne.n	801603e <clear_lock+0x26>
 8016034:	4b07      	ldr	r3, [pc, #28]	@ (8016054 <clear_lock+0x3c>)
 8016036:	68fa      	ldr	r2, [r7, #12]
 8016038:	0112      	lsls	r2, r2, #4
 801603a:	2100      	movs	r1, #0
 801603c:	50d1      	str	r1, [r2, r3]
 801603e:	68fb      	ldr	r3, [r7, #12]
 8016040:	3301      	adds	r3, #1
 8016042:	60fb      	str	r3, [r7, #12]
 8016044:	68fb      	ldr	r3, [r7, #12]
 8016046:	2b01      	cmp	r3, #1
 8016048:	d9ed      	bls.n	8016026 <clear_lock+0xe>
 801604a:	46c0      	nop			@ (mov r8, r8)
 801604c:	46c0      	nop			@ (mov r8, r8)
 801604e:	46bd      	mov	sp, r7
 8016050:	b004      	add	sp, #16
 8016052:	bd80      	pop	{r7, pc}
 8016054:	20003488 	.word	0x20003488

08016058 <sync_window>:
 8016058:	b590      	push	{r4, r7, lr}
 801605a:	b087      	sub	sp, #28
 801605c:	af00      	add	r7, sp, #0
 801605e:	6078      	str	r0, [r7, #4]
 8016060:	240f      	movs	r4, #15
 8016062:	193b      	adds	r3, r7, r4
 8016064:	2200      	movs	r2, #0
 8016066:	701a      	strb	r2, [r3, #0]
 8016068:	687b      	ldr	r3, [r7, #4]
 801606a:	78db      	ldrb	r3, [r3, #3]
 801606c:	2b00      	cmp	r3, #0
 801606e:	d034      	beq.n	80160da <sync_window+0x82>
 8016070:	687b      	ldr	r3, [r7, #4]
 8016072:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016074:	617b      	str	r3, [r7, #20]
 8016076:	687b      	ldr	r3, [r7, #4]
 8016078:	7858      	ldrb	r0, [r3, #1]
 801607a:	687b      	ldr	r3, [r7, #4]
 801607c:	3334      	adds	r3, #52	@ 0x34
 801607e:	0019      	movs	r1, r3
 8016080:	697a      	ldr	r2, [r7, #20]
 8016082:	2301      	movs	r3, #1
 8016084:	f7ff fd34 	bl	8015af0 <disk_write>
 8016088:	1e03      	subs	r3, r0, #0
 801608a:	d003      	beq.n	8016094 <sync_window+0x3c>
 801608c:	193b      	adds	r3, r7, r4
 801608e:	2201      	movs	r2, #1
 8016090:	701a      	strb	r2, [r3, #0]
 8016092:	e022      	b.n	80160da <sync_window+0x82>
 8016094:	687b      	ldr	r3, [r7, #4]
 8016096:	2200      	movs	r2, #0
 8016098:	70da      	strb	r2, [r3, #3]
 801609a:	687b      	ldr	r3, [r7, #4]
 801609c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801609e:	697a      	ldr	r2, [r7, #20]
 80160a0:	1ad2      	subs	r2, r2, r3
 80160a2:	687b      	ldr	r3, [r7, #4]
 80160a4:	69db      	ldr	r3, [r3, #28]
 80160a6:	429a      	cmp	r2, r3
 80160a8:	d217      	bcs.n	80160da <sync_window+0x82>
 80160aa:	687b      	ldr	r3, [r7, #4]
 80160ac:	789b      	ldrb	r3, [r3, #2]
 80160ae:	613b      	str	r3, [r7, #16]
 80160b0:	e010      	b.n	80160d4 <sync_window+0x7c>
 80160b2:	687b      	ldr	r3, [r7, #4]
 80160b4:	69db      	ldr	r3, [r3, #28]
 80160b6:	697a      	ldr	r2, [r7, #20]
 80160b8:	18d3      	adds	r3, r2, r3
 80160ba:	617b      	str	r3, [r7, #20]
 80160bc:	687b      	ldr	r3, [r7, #4]
 80160be:	7858      	ldrb	r0, [r3, #1]
 80160c0:	687b      	ldr	r3, [r7, #4]
 80160c2:	3334      	adds	r3, #52	@ 0x34
 80160c4:	0019      	movs	r1, r3
 80160c6:	697a      	ldr	r2, [r7, #20]
 80160c8:	2301      	movs	r3, #1
 80160ca:	f7ff fd11 	bl	8015af0 <disk_write>
 80160ce:	693b      	ldr	r3, [r7, #16]
 80160d0:	3b01      	subs	r3, #1
 80160d2:	613b      	str	r3, [r7, #16]
 80160d4:	693b      	ldr	r3, [r7, #16]
 80160d6:	2b01      	cmp	r3, #1
 80160d8:	d8eb      	bhi.n	80160b2 <sync_window+0x5a>
 80160da:	230f      	movs	r3, #15
 80160dc:	18fb      	adds	r3, r7, r3
 80160de:	781b      	ldrb	r3, [r3, #0]
 80160e0:	0018      	movs	r0, r3
 80160e2:	46bd      	mov	sp, r7
 80160e4:	b007      	add	sp, #28
 80160e6:	bd90      	pop	{r4, r7, pc}

080160e8 <move_window>:
 80160e8:	b5b0      	push	{r4, r5, r7, lr}
 80160ea:	b084      	sub	sp, #16
 80160ec:	af00      	add	r7, sp, #0
 80160ee:	6078      	str	r0, [r7, #4]
 80160f0:	6039      	str	r1, [r7, #0]
 80160f2:	250f      	movs	r5, #15
 80160f4:	197b      	adds	r3, r7, r5
 80160f6:	2200      	movs	r2, #0
 80160f8:	701a      	strb	r2, [r3, #0]
 80160fa:	687b      	ldr	r3, [r7, #4]
 80160fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80160fe:	683a      	ldr	r2, [r7, #0]
 8016100:	429a      	cmp	r2, r3
 8016102:	d01f      	beq.n	8016144 <move_window+0x5c>
 8016104:	197c      	adds	r4, r7, r5
 8016106:	687b      	ldr	r3, [r7, #4]
 8016108:	0018      	movs	r0, r3
 801610a:	f7ff ffa5 	bl	8016058 <sync_window>
 801610e:	0003      	movs	r3, r0
 8016110:	7023      	strb	r3, [r4, #0]
 8016112:	002c      	movs	r4, r5
 8016114:	193b      	adds	r3, r7, r4
 8016116:	781b      	ldrb	r3, [r3, #0]
 8016118:	2b00      	cmp	r3, #0
 801611a:	d113      	bne.n	8016144 <move_window+0x5c>
 801611c:	687b      	ldr	r3, [r7, #4]
 801611e:	7858      	ldrb	r0, [r3, #1]
 8016120:	687b      	ldr	r3, [r7, #4]
 8016122:	3334      	adds	r3, #52	@ 0x34
 8016124:	0019      	movs	r1, r3
 8016126:	683a      	ldr	r2, [r7, #0]
 8016128:	2301      	movs	r3, #1
 801612a:	f7ff fcb9 	bl	8015aa0 <disk_read>
 801612e:	1e03      	subs	r3, r0, #0
 8016130:	d005      	beq.n	801613e <move_window+0x56>
 8016132:	2301      	movs	r3, #1
 8016134:	425b      	negs	r3, r3
 8016136:	603b      	str	r3, [r7, #0]
 8016138:	193b      	adds	r3, r7, r4
 801613a:	2201      	movs	r2, #1
 801613c:	701a      	strb	r2, [r3, #0]
 801613e:	687b      	ldr	r3, [r7, #4]
 8016140:	683a      	ldr	r2, [r7, #0]
 8016142:	631a      	str	r2, [r3, #48]	@ 0x30
 8016144:	230f      	movs	r3, #15
 8016146:	18fb      	adds	r3, r7, r3
 8016148:	781b      	ldrb	r3, [r3, #0]
 801614a:	0018      	movs	r0, r3
 801614c:	46bd      	mov	sp, r7
 801614e:	b004      	add	sp, #16
 8016150:	bdb0      	pop	{r4, r5, r7, pc}
	...

08016154 <sync_fs>:
 8016154:	b5b0      	push	{r4, r5, r7, lr}
 8016156:	b084      	sub	sp, #16
 8016158:	af00      	add	r7, sp, #0
 801615a:	6078      	str	r0, [r7, #4]
 801615c:	250f      	movs	r5, #15
 801615e:	197c      	adds	r4, r7, r5
 8016160:	687b      	ldr	r3, [r7, #4]
 8016162:	0018      	movs	r0, r3
 8016164:	f7ff ff78 	bl	8016058 <sync_window>
 8016168:	0003      	movs	r3, r0
 801616a:	7023      	strb	r3, [r4, #0]
 801616c:	197b      	adds	r3, r7, r5
 801616e:	781b      	ldrb	r3, [r3, #0]
 8016170:	2b00      	cmp	r3, #0
 8016172:	d15e      	bne.n	8016232 <sync_fs+0xde>
 8016174:	687b      	ldr	r3, [r7, #4]
 8016176:	781b      	ldrb	r3, [r3, #0]
 8016178:	2b03      	cmp	r3, #3
 801617a:	d14d      	bne.n	8016218 <sync_fs+0xc4>
 801617c:	687b      	ldr	r3, [r7, #4]
 801617e:	791b      	ldrb	r3, [r3, #4]
 8016180:	2b01      	cmp	r3, #1
 8016182:	d149      	bne.n	8016218 <sync_fs+0xc4>
 8016184:	687b      	ldr	r3, [r7, #4]
 8016186:	3334      	adds	r3, #52	@ 0x34
 8016188:	0018      	movs	r0, r3
 801618a:	687b      	ldr	r3, [r7, #4]
 801618c:	899b      	ldrh	r3, [r3, #12]
 801618e:	001a      	movs	r2, r3
 8016190:	2100      	movs	r1, #0
 8016192:	f7ff fda0 	bl	8015cd6 <mem_set>
 8016196:	687b      	ldr	r3, [r7, #4]
 8016198:	3334      	adds	r3, #52	@ 0x34
 801619a:	33ff      	adds	r3, #255	@ 0xff
 801619c:	33ff      	adds	r3, #255	@ 0xff
 801619e:	4a28      	ldr	r2, [pc, #160]	@ (8016240 <sync_fs+0xec>)
 80161a0:	0011      	movs	r1, r2
 80161a2:	0018      	movs	r0, r3
 80161a4:	f7ff fd30 	bl	8015c08 <st_word>
 80161a8:	687b      	ldr	r3, [r7, #4]
 80161aa:	3334      	adds	r3, #52	@ 0x34
 80161ac:	4a25      	ldr	r2, [pc, #148]	@ (8016244 <sync_fs+0xf0>)
 80161ae:	0011      	movs	r1, r2
 80161b0:	0018      	movs	r0, r3
 80161b2:	f7ff fd47 	bl	8015c44 <st_dword>
 80161b6:	687b      	ldr	r3, [r7, #4]
 80161b8:	3334      	adds	r3, #52	@ 0x34
 80161ba:	33e5      	adds	r3, #229	@ 0xe5
 80161bc:	33ff      	adds	r3, #255	@ 0xff
 80161be:	4a22      	ldr	r2, [pc, #136]	@ (8016248 <sync_fs+0xf4>)
 80161c0:	0011      	movs	r1, r2
 80161c2:	0018      	movs	r0, r3
 80161c4:	f7ff fd3e 	bl	8015c44 <st_dword>
 80161c8:	687b      	ldr	r3, [r7, #4]
 80161ca:	3334      	adds	r3, #52	@ 0x34
 80161cc:	33e9      	adds	r3, #233	@ 0xe9
 80161ce:	33ff      	adds	r3, #255	@ 0xff
 80161d0:	001a      	movs	r2, r3
 80161d2:	687b      	ldr	r3, [r7, #4]
 80161d4:	695b      	ldr	r3, [r3, #20]
 80161d6:	0019      	movs	r1, r3
 80161d8:	0010      	movs	r0, r2
 80161da:	f7ff fd33 	bl	8015c44 <st_dword>
 80161de:	687b      	ldr	r3, [r7, #4]
 80161e0:	3334      	adds	r3, #52	@ 0x34
 80161e2:	33ed      	adds	r3, #237	@ 0xed
 80161e4:	33ff      	adds	r3, #255	@ 0xff
 80161e6:	001a      	movs	r2, r3
 80161e8:	687b      	ldr	r3, [r7, #4]
 80161ea:	691b      	ldr	r3, [r3, #16]
 80161ec:	0019      	movs	r1, r3
 80161ee:	0010      	movs	r0, r2
 80161f0:	f7ff fd28 	bl	8015c44 <st_dword>
 80161f4:	687b      	ldr	r3, [r7, #4]
 80161f6:	6a1b      	ldr	r3, [r3, #32]
 80161f8:	1c5a      	adds	r2, r3, #1
 80161fa:	687b      	ldr	r3, [r7, #4]
 80161fc:	631a      	str	r2, [r3, #48]	@ 0x30
 80161fe:	687b      	ldr	r3, [r7, #4]
 8016200:	7858      	ldrb	r0, [r3, #1]
 8016202:	687b      	ldr	r3, [r7, #4]
 8016204:	3334      	adds	r3, #52	@ 0x34
 8016206:	0019      	movs	r1, r3
 8016208:	687b      	ldr	r3, [r7, #4]
 801620a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 801620c:	2301      	movs	r3, #1
 801620e:	f7ff fc6f 	bl	8015af0 <disk_write>
 8016212:	687b      	ldr	r3, [r7, #4]
 8016214:	2200      	movs	r2, #0
 8016216:	711a      	strb	r2, [r3, #4]
 8016218:	687b      	ldr	r3, [r7, #4]
 801621a:	785b      	ldrb	r3, [r3, #1]
 801621c:	2200      	movs	r2, #0
 801621e:	2100      	movs	r1, #0
 8016220:	0018      	movs	r0, r3
 8016222:	f7ff fc8d 	bl	8015b40 <disk_ioctl>
 8016226:	1e03      	subs	r3, r0, #0
 8016228:	d003      	beq.n	8016232 <sync_fs+0xde>
 801622a:	230f      	movs	r3, #15
 801622c:	18fb      	adds	r3, r7, r3
 801622e:	2201      	movs	r2, #1
 8016230:	701a      	strb	r2, [r3, #0]
 8016232:	230f      	movs	r3, #15
 8016234:	18fb      	adds	r3, r7, r3
 8016236:	781b      	ldrb	r3, [r3, #0]
 8016238:	0018      	movs	r0, r3
 801623a:	46bd      	mov	sp, r7
 801623c:	b004      	add	sp, #16
 801623e:	bdb0      	pop	{r4, r5, r7, pc}
 8016240:	0000aa55 	.word	0x0000aa55
 8016244:	41615252 	.word	0x41615252
 8016248:	61417272 	.word	0x61417272

0801624c <clust2sect>:
 801624c:	b580      	push	{r7, lr}
 801624e:	b082      	sub	sp, #8
 8016250:	af00      	add	r7, sp, #0
 8016252:	6078      	str	r0, [r7, #4]
 8016254:	6039      	str	r1, [r7, #0]
 8016256:	683b      	ldr	r3, [r7, #0]
 8016258:	3b02      	subs	r3, #2
 801625a:	603b      	str	r3, [r7, #0]
 801625c:	687b      	ldr	r3, [r7, #4]
 801625e:	699b      	ldr	r3, [r3, #24]
 8016260:	3b02      	subs	r3, #2
 8016262:	683a      	ldr	r2, [r7, #0]
 8016264:	429a      	cmp	r2, r3
 8016266:	d301      	bcc.n	801626c <clust2sect+0x20>
 8016268:	2300      	movs	r3, #0
 801626a:	e007      	b.n	801627c <clust2sect+0x30>
 801626c:	687b      	ldr	r3, [r7, #4]
 801626e:	895b      	ldrh	r3, [r3, #10]
 8016270:	001a      	movs	r2, r3
 8016272:	683b      	ldr	r3, [r7, #0]
 8016274:	435a      	muls	r2, r3
 8016276:	687b      	ldr	r3, [r7, #4]
 8016278:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801627a:	18d3      	adds	r3, r2, r3
 801627c:	0018      	movs	r0, r3
 801627e:	46bd      	mov	sp, r7
 8016280:	b002      	add	sp, #8
 8016282:	bd80      	pop	{r7, pc}

08016284 <get_fat>:
 8016284:	b590      	push	{r4, r7, lr}
 8016286:	b087      	sub	sp, #28
 8016288:	af00      	add	r7, sp, #0
 801628a:	6078      	str	r0, [r7, #4]
 801628c:	6039      	str	r1, [r7, #0]
 801628e:	687b      	ldr	r3, [r7, #4]
 8016290:	681b      	ldr	r3, [r3, #0]
 8016292:	613b      	str	r3, [r7, #16]
 8016294:	683b      	ldr	r3, [r7, #0]
 8016296:	2b01      	cmp	r3, #1
 8016298:	d904      	bls.n	80162a4 <get_fat+0x20>
 801629a:	693b      	ldr	r3, [r7, #16]
 801629c:	699b      	ldr	r3, [r3, #24]
 801629e:	683a      	ldr	r2, [r7, #0]
 80162a0:	429a      	cmp	r2, r3
 80162a2:	d302      	bcc.n	80162aa <get_fat+0x26>
 80162a4:	2301      	movs	r3, #1
 80162a6:	617b      	str	r3, [r7, #20]
 80162a8:	e0c1      	b.n	801642e <get_fat+0x1aa>
 80162aa:	2301      	movs	r3, #1
 80162ac:	425b      	negs	r3, r3
 80162ae:	617b      	str	r3, [r7, #20]
 80162b0:	693b      	ldr	r3, [r7, #16]
 80162b2:	781b      	ldrb	r3, [r3, #0]
 80162b4:	2b03      	cmp	r3, #3
 80162b6:	d100      	bne.n	80162ba <get_fat+0x36>
 80162b8:	e087      	b.n	80163ca <get_fat+0x146>
 80162ba:	dd00      	ble.n	80162be <get_fat+0x3a>
 80162bc:	e0ad      	b.n	801641a <get_fat+0x196>
 80162be:	2b01      	cmp	r3, #1
 80162c0:	d002      	beq.n	80162c8 <get_fat+0x44>
 80162c2:	2b02      	cmp	r3, #2
 80162c4:	d05b      	beq.n	801637e <get_fat+0xfa>
 80162c6:	e0a8      	b.n	801641a <get_fat+0x196>
 80162c8:	683b      	ldr	r3, [r7, #0]
 80162ca:	60fb      	str	r3, [r7, #12]
 80162cc:	68fb      	ldr	r3, [r7, #12]
 80162ce:	085b      	lsrs	r3, r3, #1
 80162d0:	68fa      	ldr	r2, [r7, #12]
 80162d2:	18d3      	adds	r3, r2, r3
 80162d4:	60fb      	str	r3, [r7, #12]
 80162d6:	693b      	ldr	r3, [r7, #16]
 80162d8:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 80162da:	693b      	ldr	r3, [r7, #16]
 80162dc:	899b      	ldrh	r3, [r3, #12]
 80162de:	0019      	movs	r1, r3
 80162e0:	68f8      	ldr	r0, [r7, #12]
 80162e2:	f7e9 ff21 	bl	8000128 <__udivsi3>
 80162e6:	0003      	movs	r3, r0
 80162e8:	18e2      	adds	r2, r4, r3
 80162ea:	693b      	ldr	r3, [r7, #16]
 80162ec:	0011      	movs	r1, r2
 80162ee:	0018      	movs	r0, r3
 80162f0:	f7ff fefa 	bl	80160e8 <move_window>
 80162f4:	1e03      	subs	r3, r0, #0
 80162f6:	d000      	beq.n	80162fa <get_fat+0x76>
 80162f8:	e092      	b.n	8016420 <get_fat+0x19c>
 80162fa:	68fb      	ldr	r3, [r7, #12]
 80162fc:	1c5a      	adds	r2, r3, #1
 80162fe:	60fa      	str	r2, [r7, #12]
 8016300:	693a      	ldr	r2, [r7, #16]
 8016302:	8992      	ldrh	r2, [r2, #12]
 8016304:	0011      	movs	r1, r2
 8016306:	0018      	movs	r0, r3
 8016308:	f7e9 ff94 	bl	8000234 <__aeabi_uidivmod>
 801630c:	000b      	movs	r3, r1
 801630e:	0019      	movs	r1, r3
 8016310:	693b      	ldr	r3, [r7, #16]
 8016312:	2234      	movs	r2, #52	@ 0x34
 8016314:	185b      	adds	r3, r3, r1
 8016316:	189b      	adds	r3, r3, r2
 8016318:	781b      	ldrb	r3, [r3, #0]
 801631a:	60bb      	str	r3, [r7, #8]
 801631c:	693b      	ldr	r3, [r7, #16]
 801631e:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8016320:	693b      	ldr	r3, [r7, #16]
 8016322:	899b      	ldrh	r3, [r3, #12]
 8016324:	0019      	movs	r1, r3
 8016326:	68f8      	ldr	r0, [r7, #12]
 8016328:	f7e9 fefe 	bl	8000128 <__udivsi3>
 801632c:	0003      	movs	r3, r0
 801632e:	18e2      	adds	r2, r4, r3
 8016330:	693b      	ldr	r3, [r7, #16]
 8016332:	0011      	movs	r1, r2
 8016334:	0018      	movs	r0, r3
 8016336:	f7ff fed7 	bl	80160e8 <move_window>
 801633a:	1e03      	subs	r3, r0, #0
 801633c:	d000      	beq.n	8016340 <get_fat+0xbc>
 801633e:	e071      	b.n	8016424 <get_fat+0x1a0>
 8016340:	693b      	ldr	r3, [r7, #16]
 8016342:	899b      	ldrh	r3, [r3, #12]
 8016344:	001a      	movs	r2, r3
 8016346:	68fb      	ldr	r3, [r7, #12]
 8016348:	0011      	movs	r1, r2
 801634a:	0018      	movs	r0, r3
 801634c:	f7e9 ff72 	bl	8000234 <__aeabi_uidivmod>
 8016350:	000b      	movs	r3, r1
 8016352:	0019      	movs	r1, r3
 8016354:	693b      	ldr	r3, [r7, #16]
 8016356:	2234      	movs	r2, #52	@ 0x34
 8016358:	185b      	adds	r3, r3, r1
 801635a:	189b      	adds	r3, r3, r2
 801635c:	781b      	ldrb	r3, [r3, #0]
 801635e:	021b      	lsls	r3, r3, #8
 8016360:	68ba      	ldr	r2, [r7, #8]
 8016362:	4313      	orrs	r3, r2
 8016364:	60bb      	str	r3, [r7, #8]
 8016366:	683b      	ldr	r3, [r7, #0]
 8016368:	2201      	movs	r2, #1
 801636a:	4013      	ands	r3, r2
 801636c:	d002      	beq.n	8016374 <get_fat+0xf0>
 801636e:	68bb      	ldr	r3, [r7, #8]
 8016370:	091b      	lsrs	r3, r3, #4
 8016372:	e002      	b.n	801637a <get_fat+0xf6>
 8016374:	68bb      	ldr	r3, [r7, #8]
 8016376:	051b      	lsls	r3, r3, #20
 8016378:	0d1b      	lsrs	r3, r3, #20
 801637a:	617b      	str	r3, [r7, #20]
 801637c:	e057      	b.n	801642e <get_fat+0x1aa>
 801637e:	693b      	ldr	r3, [r7, #16]
 8016380:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8016382:	693b      	ldr	r3, [r7, #16]
 8016384:	899b      	ldrh	r3, [r3, #12]
 8016386:	085b      	lsrs	r3, r3, #1
 8016388:	b29b      	uxth	r3, r3
 801638a:	0019      	movs	r1, r3
 801638c:	6838      	ldr	r0, [r7, #0]
 801638e:	f7e9 fecb 	bl	8000128 <__udivsi3>
 8016392:	0003      	movs	r3, r0
 8016394:	18e2      	adds	r2, r4, r3
 8016396:	693b      	ldr	r3, [r7, #16]
 8016398:	0011      	movs	r1, r2
 801639a:	0018      	movs	r0, r3
 801639c:	f7ff fea4 	bl	80160e8 <move_window>
 80163a0:	1e03      	subs	r3, r0, #0
 80163a2:	d141      	bne.n	8016428 <get_fat+0x1a4>
 80163a4:	693b      	ldr	r3, [r7, #16]
 80163a6:	3334      	adds	r3, #52	@ 0x34
 80163a8:	001c      	movs	r4, r3
 80163aa:	683b      	ldr	r3, [r7, #0]
 80163ac:	005a      	lsls	r2, r3, #1
 80163ae:	693b      	ldr	r3, [r7, #16]
 80163b0:	899b      	ldrh	r3, [r3, #12]
 80163b2:	0019      	movs	r1, r3
 80163b4:	0010      	movs	r0, r2
 80163b6:	f7e9 ff3d 	bl	8000234 <__aeabi_uidivmod>
 80163ba:	000b      	movs	r3, r1
 80163bc:	18e3      	adds	r3, r4, r3
 80163be:	0018      	movs	r0, r3
 80163c0:	f7ff fbe6 	bl	8015b90 <ld_word>
 80163c4:	0003      	movs	r3, r0
 80163c6:	617b      	str	r3, [r7, #20]
 80163c8:	e031      	b.n	801642e <get_fat+0x1aa>
 80163ca:	693b      	ldr	r3, [r7, #16]
 80163cc:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 80163ce:	693b      	ldr	r3, [r7, #16]
 80163d0:	899b      	ldrh	r3, [r3, #12]
 80163d2:	089b      	lsrs	r3, r3, #2
 80163d4:	b29b      	uxth	r3, r3
 80163d6:	0019      	movs	r1, r3
 80163d8:	6838      	ldr	r0, [r7, #0]
 80163da:	f7e9 fea5 	bl	8000128 <__udivsi3>
 80163de:	0003      	movs	r3, r0
 80163e0:	18e2      	adds	r2, r4, r3
 80163e2:	693b      	ldr	r3, [r7, #16]
 80163e4:	0011      	movs	r1, r2
 80163e6:	0018      	movs	r0, r3
 80163e8:	f7ff fe7e 	bl	80160e8 <move_window>
 80163ec:	1e03      	subs	r3, r0, #0
 80163ee:	d11d      	bne.n	801642c <get_fat+0x1a8>
 80163f0:	693b      	ldr	r3, [r7, #16]
 80163f2:	3334      	adds	r3, #52	@ 0x34
 80163f4:	001c      	movs	r4, r3
 80163f6:	683b      	ldr	r3, [r7, #0]
 80163f8:	009a      	lsls	r2, r3, #2
 80163fa:	693b      	ldr	r3, [r7, #16]
 80163fc:	899b      	ldrh	r3, [r3, #12]
 80163fe:	0019      	movs	r1, r3
 8016400:	0010      	movs	r0, r2
 8016402:	f7e9 ff17 	bl	8000234 <__aeabi_uidivmod>
 8016406:	000b      	movs	r3, r1
 8016408:	18e3      	adds	r3, r4, r3
 801640a:	0018      	movs	r0, r3
 801640c:	f7ff fbdb 	bl	8015bc6 <ld_dword>
 8016410:	0003      	movs	r3, r0
 8016412:	011b      	lsls	r3, r3, #4
 8016414:	091b      	lsrs	r3, r3, #4
 8016416:	617b      	str	r3, [r7, #20]
 8016418:	e009      	b.n	801642e <get_fat+0x1aa>
 801641a:	2301      	movs	r3, #1
 801641c:	617b      	str	r3, [r7, #20]
 801641e:	e006      	b.n	801642e <get_fat+0x1aa>
 8016420:	46c0      	nop			@ (mov r8, r8)
 8016422:	e004      	b.n	801642e <get_fat+0x1aa>
 8016424:	46c0      	nop			@ (mov r8, r8)
 8016426:	e002      	b.n	801642e <get_fat+0x1aa>
 8016428:	46c0      	nop			@ (mov r8, r8)
 801642a:	e000      	b.n	801642e <get_fat+0x1aa>
 801642c:	46c0      	nop			@ (mov r8, r8)
 801642e:	697b      	ldr	r3, [r7, #20]
 8016430:	0018      	movs	r0, r3
 8016432:	46bd      	mov	sp, r7
 8016434:	b007      	add	sp, #28
 8016436:	bd90      	pop	{r4, r7, pc}

08016438 <put_fat>:
 8016438:	b5b0      	push	{r4, r5, r7, lr}
 801643a:	b088      	sub	sp, #32
 801643c:	af00      	add	r7, sp, #0
 801643e:	60f8      	str	r0, [r7, #12]
 8016440:	60b9      	str	r1, [r7, #8]
 8016442:	607a      	str	r2, [r7, #4]
 8016444:	231f      	movs	r3, #31
 8016446:	18fb      	adds	r3, r7, r3
 8016448:	2202      	movs	r2, #2
 801644a:	701a      	strb	r2, [r3, #0]
 801644c:	68bb      	ldr	r3, [r7, #8]
 801644e:	2b01      	cmp	r3, #1
 8016450:	d800      	bhi.n	8016454 <put_fat+0x1c>
 8016452:	e11a      	b.n	801668a <put_fat+0x252>
 8016454:	68fb      	ldr	r3, [r7, #12]
 8016456:	699b      	ldr	r3, [r3, #24]
 8016458:	68ba      	ldr	r2, [r7, #8]
 801645a:	429a      	cmp	r2, r3
 801645c:	d300      	bcc.n	8016460 <put_fat+0x28>
 801645e:	e114      	b.n	801668a <put_fat+0x252>
 8016460:	68fb      	ldr	r3, [r7, #12]
 8016462:	781b      	ldrb	r3, [r3, #0]
 8016464:	2b03      	cmp	r3, #3
 8016466:	d100      	bne.n	801646a <put_fat+0x32>
 8016468:	e0c1      	b.n	80165ee <put_fat+0x1b6>
 801646a:	dd00      	ble.n	801646e <put_fat+0x36>
 801646c:	e10d      	b.n	801668a <put_fat+0x252>
 801646e:	2b01      	cmp	r3, #1
 8016470:	d003      	beq.n	801647a <put_fat+0x42>
 8016472:	2b02      	cmp	r3, #2
 8016474:	d100      	bne.n	8016478 <put_fat+0x40>
 8016476:	e08a      	b.n	801658e <put_fat+0x156>
 8016478:	e107      	b.n	801668a <put_fat+0x252>
 801647a:	68bb      	ldr	r3, [r7, #8]
 801647c:	61bb      	str	r3, [r7, #24]
 801647e:	69bb      	ldr	r3, [r7, #24]
 8016480:	085b      	lsrs	r3, r3, #1
 8016482:	69ba      	ldr	r2, [r7, #24]
 8016484:	18d3      	adds	r3, r2, r3
 8016486:	61bb      	str	r3, [r7, #24]
 8016488:	68fb      	ldr	r3, [r7, #12]
 801648a:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 801648c:	68fb      	ldr	r3, [r7, #12]
 801648e:	899b      	ldrh	r3, [r3, #12]
 8016490:	0019      	movs	r1, r3
 8016492:	69b8      	ldr	r0, [r7, #24]
 8016494:	f7e9 fe48 	bl	8000128 <__udivsi3>
 8016498:	0003      	movs	r3, r0
 801649a:	18e2      	adds	r2, r4, r3
 801649c:	251f      	movs	r5, #31
 801649e:	197c      	adds	r4, r7, r5
 80164a0:	68fb      	ldr	r3, [r7, #12]
 80164a2:	0011      	movs	r1, r2
 80164a4:	0018      	movs	r0, r3
 80164a6:	f7ff fe1f 	bl	80160e8 <move_window>
 80164aa:	0003      	movs	r3, r0
 80164ac:	7023      	strb	r3, [r4, #0]
 80164ae:	197b      	adds	r3, r7, r5
 80164b0:	781b      	ldrb	r3, [r3, #0]
 80164b2:	2b00      	cmp	r3, #0
 80164b4:	d000      	beq.n	80164b8 <put_fat+0x80>
 80164b6:	e0e1      	b.n	801667c <put_fat+0x244>
 80164b8:	68fb      	ldr	r3, [r7, #12]
 80164ba:	3334      	adds	r3, #52	@ 0x34
 80164bc:	001c      	movs	r4, r3
 80164be:	69bb      	ldr	r3, [r7, #24]
 80164c0:	1c5a      	adds	r2, r3, #1
 80164c2:	61ba      	str	r2, [r7, #24]
 80164c4:	68fa      	ldr	r2, [r7, #12]
 80164c6:	8992      	ldrh	r2, [r2, #12]
 80164c8:	0011      	movs	r1, r2
 80164ca:	0018      	movs	r0, r3
 80164cc:	f7e9 feb2 	bl	8000234 <__aeabi_uidivmod>
 80164d0:	000b      	movs	r3, r1
 80164d2:	18e3      	adds	r3, r4, r3
 80164d4:	617b      	str	r3, [r7, #20]
 80164d6:	68bb      	ldr	r3, [r7, #8]
 80164d8:	2201      	movs	r2, #1
 80164da:	4013      	ands	r3, r2
 80164dc:	d00d      	beq.n	80164fa <put_fat+0xc2>
 80164de:	697b      	ldr	r3, [r7, #20]
 80164e0:	781b      	ldrb	r3, [r3, #0]
 80164e2:	b25b      	sxtb	r3, r3
 80164e4:	220f      	movs	r2, #15
 80164e6:	4013      	ands	r3, r2
 80164e8:	b25a      	sxtb	r2, r3
 80164ea:	687b      	ldr	r3, [r7, #4]
 80164ec:	b2db      	uxtb	r3, r3
 80164ee:	011b      	lsls	r3, r3, #4
 80164f0:	b25b      	sxtb	r3, r3
 80164f2:	4313      	orrs	r3, r2
 80164f4:	b25b      	sxtb	r3, r3
 80164f6:	b2db      	uxtb	r3, r3
 80164f8:	e001      	b.n	80164fe <put_fat+0xc6>
 80164fa:	687b      	ldr	r3, [r7, #4]
 80164fc:	b2db      	uxtb	r3, r3
 80164fe:	697a      	ldr	r2, [r7, #20]
 8016500:	7013      	strb	r3, [r2, #0]
 8016502:	68fb      	ldr	r3, [r7, #12]
 8016504:	2201      	movs	r2, #1
 8016506:	70da      	strb	r2, [r3, #3]
 8016508:	68fb      	ldr	r3, [r7, #12]
 801650a:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 801650c:	68fb      	ldr	r3, [r7, #12]
 801650e:	899b      	ldrh	r3, [r3, #12]
 8016510:	0019      	movs	r1, r3
 8016512:	69b8      	ldr	r0, [r7, #24]
 8016514:	f7e9 fe08 	bl	8000128 <__udivsi3>
 8016518:	0003      	movs	r3, r0
 801651a:	18e2      	adds	r2, r4, r3
 801651c:	251f      	movs	r5, #31
 801651e:	197c      	adds	r4, r7, r5
 8016520:	68fb      	ldr	r3, [r7, #12]
 8016522:	0011      	movs	r1, r2
 8016524:	0018      	movs	r0, r3
 8016526:	f7ff fddf 	bl	80160e8 <move_window>
 801652a:	0003      	movs	r3, r0
 801652c:	7023      	strb	r3, [r4, #0]
 801652e:	197b      	adds	r3, r7, r5
 8016530:	781b      	ldrb	r3, [r3, #0]
 8016532:	2b00      	cmp	r3, #0
 8016534:	d000      	beq.n	8016538 <put_fat+0x100>
 8016536:	e0a3      	b.n	8016680 <put_fat+0x248>
 8016538:	68fb      	ldr	r3, [r7, #12]
 801653a:	3334      	adds	r3, #52	@ 0x34
 801653c:	001c      	movs	r4, r3
 801653e:	68fb      	ldr	r3, [r7, #12]
 8016540:	899b      	ldrh	r3, [r3, #12]
 8016542:	001a      	movs	r2, r3
 8016544:	69bb      	ldr	r3, [r7, #24]
 8016546:	0011      	movs	r1, r2
 8016548:	0018      	movs	r0, r3
 801654a:	f7e9 fe73 	bl	8000234 <__aeabi_uidivmod>
 801654e:	000b      	movs	r3, r1
 8016550:	18e3      	adds	r3, r4, r3
 8016552:	617b      	str	r3, [r7, #20]
 8016554:	68bb      	ldr	r3, [r7, #8]
 8016556:	2201      	movs	r2, #1
 8016558:	4013      	ands	r3, r2
 801655a:	d003      	beq.n	8016564 <put_fat+0x12c>
 801655c:	687b      	ldr	r3, [r7, #4]
 801655e:	091b      	lsrs	r3, r3, #4
 8016560:	b2db      	uxtb	r3, r3
 8016562:	e00e      	b.n	8016582 <put_fat+0x14a>
 8016564:	697b      	ldr	r3, [r7, #20]
 8016566:	781b      	ldrb	r3, [r3, #0]
 8016568:	b25b      	sxtb	r3, r3
 801656a:	220f      	movs	r2, #15
 801656c:	4393      	bics	r3, r2
 801656e:	b25a      	sxtb	r2, r3
 8016570:	687b      	ldr	r3, [r7, #4]
 8016572:	0a1b      	lsrs	r3, r3, #8
 8016574:	b25b      	sxtb	r3, r3
 8016576:	210f      	movs	r1, #15
 8016578:	400b      	ands	r3, r1
 801657a:	b25b      	sxtb	r3, r3
 801657c:	4313      	orrs	r3, r2
 801657e:	b25b      	sxtb	r3, r3
 8016580:	b2db      	uxtb	r3, r3
 8016582:	697a      	ldr	r2, [r7, #20]
 8016584:	7013      	strb	r3, [r2, #0]
 8016586:	68fb      	ldr	r3, [r7, #12]
 8016588:	2201      	movs	r2, #1
 801658a:	70da      	strb	r2, [r3, #3]
 801658c:	e07d      	b.n	801668a <put_fat+0x252>
 801658e:	68fb      	ldr	r3, [r7, #12]
 8016590:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8016592:	68fb      	ldr	r3, [r7, #12]
 8016594:	899b      	ldrh	r3, [r3, #12]
 8016596:	085b      	lsrs	r3, r3, #1
 8016598:	b29b      	uxth	r3, r3
 801659a:	0019      	movs	r1, r3
 801659c:	68b8      	ldr	r0, [r7, #8]
 801659e:	f7e9 fdc3 	bl	8000128 <__udivsi3>
 80165a2:	0003      	movs	r3, r0
 80165a4:	18e2      	adds	r2, r4, r3
 80165a6:	251f      	movs	r5, #31
 80165a8:	197c      	adds	r4, r7, r5
 80165aa:	68fb      	ldr	r3, [r7, #12]
 80165ac:	0011      	movs	r1, r2
 80165ae:	0018      	movs	r0, r3
 80165b0:	f7ff fd9a 	bl	80160e8 <move_window>
 80165b4:	0003      	movs	r3, r0
 80165b6:	7023      	strb	r3, [r4, #0]
 80165b8:	197b      	adds	r3, r7, r5
 80165ba:	781b      	ldrb	r3, [r3, #0]
 80165bc:	2b00      	cmp	r3, #0
 80165be:	d161      	bne.n	8016684 <put_fat+0x24c>
 80165c0:	68fb      	ldr	r3, [r7, #12]
 80165c2:	3334      	adds	r3, #52	@ 0x34
 80165c4:	001c      	movs	r4, r3
 80165c6:	68bb      	ldr	r3, [r7, #8]
 80165c8:	005a      	lsls	r2, r3, #1
 80165ca:	68fb      	ldr	r3, [r7, #12]
 80165cc:	899b      	ldrh	r3, [r3, #12]
 80165ce:	0019      	movs	r1, r3
 80165d0:	0010      	movs	r0, r2
 80165d2:	f7e9 fe2f 	bl	8000234 <__aeabi_uidivmod>
 80165d6:	000b      	movs	r3, r1
 80165d8:	18e3      	adds	r3, r4, r3
 80165da:	687a      	ldr	r2, [r7, #4]
 80165dc:	b292      	uxth	r2, r2
 80165de:	0011      	movs	r1, r2
 80165e0:	0018      	movs	r0, r3
 80165e2:	f7ff fb11 	bl	8015c08 <st_word>
 80165e6:	68fb      	ldr	r3, [r7, #12]
 80165e8:	2201      	movs	r2, #1
 80165ea:	70da      	strb	r2, [r3, #3]
 80165ec:	e04d      	b.n	801668a <put_fat+0x252>
 80165ee:	68fb      	ldr	r3, [r7, #12]
 80165f0:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 80165f2:	68fb      	ldr	r3, [r7, #12]
 80165f4:	899b      	ldrh	r3, [r3, #12]
 80165f6:	089b      	lsrs	r3, r3, #2
 80165f8:	b29b      	uxth	r3, r3
 80165fa:	0019      	movs	r1, r3
 80165fc:	68b8      	ldr	r0, [r7, #8]
 80165fe:	f7e9 fd93 	bl	8000128 <__udivsi3>
 8016602:	0003      	movs	r3, r0
 8016604:	18e2      	adds	r2, r4, r3
 8016606:	251f      	movs	r5, #31
 8016608:	197c      	adds	r4, r7, r5
 801660a:	68fb      	ldr	r3, [r7, #12]
 801660c:	0011      	movs	r1, r2
 801660e:	0018      	movs	r0, r3
 8016610:	f7ff fd6a 	bl	80160e8 <move_window>
 8016614:	0003      	movs	r3, r0
 8016616:	7023      	strb	r3, [r4, #0]
 8016618:	197b      	adds	r3, r7, r5
 801661a:	781b      	ldrb	r3, [r3, #0]
 801661c:	2b00      	cmp	r3, #0
 801661e:	d133      	bne.n	8016688 <put_fat+0x250>
 8016620:	687b      	ldr	r3, [r7, #4]
 8016622:	011b      	lsls	r3, r3, #4
 8016624:	091c      	lsrs	r4, r3, #4
 8016626:	68fb      	ldr	r3, [r7, #12]
 8016628:	3334      	adds	r3, #52	@ 0x34
 801662a:	001d      	movs	r5, r3
 801662c:	68bb      	ldr	r3, [r7, #8]
 801662e:	009a      	lsls	r2, r3, #2
 8016630:	68fb      	ldr	r3, [r7, #12]
 8016632:	899b      	ldrh	r3, [r3, #12]
 8016634:	0019      	movs	r1, r3
 8016636:	0010      	movs	r0, r2
 8016638:	f7e9 fdfc 	bl	8000234 <__aeabi_uidivmod>
 801663c:	000b      	movs	r3, r1
 801663e:	18eb      	adds	r3, r5, r3
 8016640:	0018      	movs	r0, r3
 8016642:	f7ff fac0 	bl	8015bc6 <ld_dword>
 8016646:	0003      	movs	r3, r0
 8016648:	0f1b      	lsrs	r3, r3, #28
 801664a:	071b      	lsls	r3, r3, #28
 801664c:	4323      	orrs	r3, r4
 801664e:	607b      	str	r3, [r7, #4]
 8016650:	68fb      	ldr	r3, [r7, #12]
 8016652:	3334      	adds	r3, #52	@ 0x34
 8016654:	001c      	movs	r4, r3
 8016656:	68bb      	ldr	r3, [r7, #8]
 8016658:	009a      	lsls	r2, r3, #2
 801665a:	68fb      	ldr	r3, [r7, #12]
 801665c:	899b      	ldrh	r3, [r3, #12]
 801665e:	0019      	movs	r1, r3
 8016660:	0010      	movs	r0, r2
 8016662:	f7e9 fde7 	bl	8000234 <__aeabi_uidivmod>
 8016666:	000b      	movs	r3, r1
 8016668:	18e3      	adds	r3, r4, r3
 801666a:	687a      	ldr	r2, [r7, #4]
 801666c:	0011      	movs	r1, r2
 801666e:	0018      	movs	r0, r3
 8016670:	f7ff fae8 	bl	8015c44 <st_dword>
 8016674:	68fb      	ldr	r3, [r7, #12]
 8016676:	2201      	movs	r2, #1
 8016678:	70da      	strb	r2, [r3, #3]
 801667a:	e006      	b.n	801668a <put_fat+0x252>
 801667c:	46c0      	nop			@ (mov r8, r8)
 801667e:	e004      	b.n	801668a <put_fat+0x252>
 8016680:	46c0      	nop			@ (mov r8, r8)
 8016682:	e002      	b.n	801668a <put_fat+0x252>
 8016684:	46c0      	nop			@ (mov r8, r8)
 8016686:	e000      	b.n	801668a <put_fat+0x252>
 8016688:	46c0      	nop			@ (mov r8, r8)
 801668a:	231f      	movs	r3, #31
 801668c:	18fb      	adds	r3, r7, r3
 801668e:	781b      	ldrb	r3, [r3, #0]
 8016690:	0018      	movs	r0, r3
 8016692:	46bd      	mov	sp, r7
 8016694:	b008      	add	sp, #32
 8016696:	bdb0      	pop	{r4, r5, r7, pc}

08016698 <remove_chain>:
 8016698:	b5b0      	push	{r4, r5, r7, lr}
 801669a:	b088      	sub	sp, #32
 801669c:	af00      	add	r7, sp, #0
 801669e:	60f8      	str	r0, [r7, #12]
 80166a0:	60b9      	str	r1, [r7, #8]
 80166a2:	607a      	str	r2, [r7, #4]
 80166a4:	231f      	movs	r3, #31
 80166a6:	18fb      	adds	r3, r7, r3
 80166a8:	2200      	movs	r2, #0
 80166aa:	701a      	strb	r2, [r3, #0]
 80166ac:	68fb      	ldr	r3, [r7, #12]
 80166ae:	681b      	ldr	r3, [r3, #0]
 80166b0:	61bb      	str	r3, [r7, #24]
 80166b2:	68bb      	ldr	r3, [r7, #8]
 80166b4:	2b01      	cmp	r3, #1
 80166b6:	d904      	bls.n	80166c2 <remove_chain+0x2a>
 80166b8:	69bb      	ldr	r3, [r7, #24]
 80166ba:	699b      	ldr	r3, [r3, #24]
 80166bc:	68ba      	ldr	r2, [r7, #8]
 80166be:	429a      	cmp	r2, r3
 80166c0:	d301      	bcc.n	80166c6 <remove_chain+0x2e>
 80166c2:	2302      	movs	r3, #2
 80166c4:	e057      	b.n	8016776 <remove_chain+0xde>
 80166c6:	687b      	ldr	r3, [r7, #4]
 80166c8:	2b00      	cmp	r3, #0
 80166ca:	d011      	beq.n	80166f0 <remove_chain+0x58>
 80166cc:	251f      	movs	r5, #31
 80166ce:	197c      	adds	r4, r7, r5
 80166d0:	2301      	movs	r3, #1
 80166d2:	425a      	negs	r2, r3
 80166d4:	6879      	ldr	r1, [r7, #4]
 80166d6:	69bb      	ldr	r3, [r7, #24]
 80166d8:	0018      	movs	r0, r3
 80166da:	f7ff fead 	bl	8016438 <put_fat>
 80166de:	0003      	movs	r3, r0
 80166e0:	7023      	strb	r3, [r4, #0]
 80166e2:	197b      	adds	r3, r7, r5
 80166e4:	781b      	ldrb	r3, [r3, #0]
 80166e6:	2b00      	cmp	r3, #0
 80166e8:	d002      	beq.n	80166f0 <remove_chain+0x58>
 80166ea:	197b      	adds	r3, r7, r5
 80166ec:	781b      	ldrb	r3, [r3, #0]
 80166ee:	e042      	b.n	8016776 <remove_chain+0xde>
 80166f0:	68ba      	ldr	r2, [r7, #8]
 80166f2:	68fb      	ldr	r3, [r7, #12]
 80166f4:	0011      	movs	r1, r2
 80166f6:	0018      	movs	r0, r3
 80166f8:	f7ff fdc4 	bl	8016284 <get_fat>
 80166fc:	0003      	movs	r3, r0
 80166fe:	617b      	str	r3, [r7, #20]
 8016700:	697b      	ldr	r3, [r7, #20]
 8016702:	2b00      	cmp	r3, #0
 8016704:	d035      	beq.n	8016772 <remove_chain+0xda>
 8016706:	697b      	ldr	r3, [r7, #20]
 8016708:	2b01      	cmp	r3, #1
 801670a:	d101      	bne.n	8016710 <remove_chain+0x78>
 801670c:	2302      	movs	r3, #2
 801670e:	e032      	b.n	8016776 <remove_chain+0xde>
 8016710:	697b      	ldr	r3, [r7, #20]
 8016712:	3301      	adds	r3, #1
 8016714:	d101      	bne.n	801671a <remove_chain+0x82>
 8016716:	2301      	movs	r3, #1
 8016718:	e02d      	b.n	8016776 <remove_chain+0xde>
 801671a:	251f      	movs	r5, #31
 801671c:	197c      	adds	r4, r7, r5
 801671e:	68b9      	ldr	r1, [r7, #8]
 8016720:	69bb      	ldr	r3, [r7, #24]
 8016722:	2200      	movs	r2, #0
 8016724:	0018      	movs	r0, r3
 8016726:	f7ff fe87 	bl	8016438 <put_fat>
 801672a:	0003      	movs	r3, r0
 801672c:	7023      	strb	r3, [r4, #0]
 801672e:	197b      	adds	r3, r7, r5
 8016730:	781b      	ldrb	r3, [r3, #0]
 8016732:	2b00      	cmp	r3, #0
 8016734:	d002      	beq.n	801673c <remove_chain+0xa4>
 8016736:	197b      	adds	r3, r7, r5
 8016738:	781b      	ldrb	r3, [r3, #0]
 801673a:	e01c      	b.n	8016776 <remove_chain+0xde>
 801673c:	69bb      	ldr	r3, [r7, #24]
 801673e:	695a      	ldr	r2, [r3, #20]
 8016740:	69bb      	ldr	r3, [r7, #24]
 8016742:	699b      	ldr	r3, [r3, #24]
 8016744:	3b02      	subs	r3, #2
 8016746:	429a      	cmp	r2, r3
 8016748:	d20b      	bcs.n	8016762 <remove_chain+0xca>
 801674a:	69bb      	ldr	r3, [r7, #24]
 801674c:	695b      	ldr	r3, [r3, #20]
 801674e:	1c5a      	adds	r2, r3, #1
 8016750:	69bb      	ldr	r3, [r7, #24]
 8016752:	615a      	str	r2, [r3, #20]
 8016754:	69bb      	ldr	r3, [r7, #24]
 8016756:	791b      	ldrb	r3, [r3, #4]
 8016758:	2201      	movs	r2, #1
 801675a:	4313      	orrs	r3, r2
 801675c:	b2da      	uxtb	r2, r3
 801675e:	69bb      	ldr	r3, [r7, #24]
 8016760:	711a      	strb	r2, [r3, #4]
 8016762:	697b      	ldr	r3, [r7, #20]
 8016764:	60bb      	str	r3, [r7, #8]
 8016766:	69bb      	ldr	r3, [r7, #24]
 8016768:	699b      	ldr	r3, [r3, #24]
 801676a:	68ba      	ldr	r2, [r7, #8]
 801676c:	429a      	cmp	r2, r3
 801676e:	d3bf      	bcc.n	80166f0 <remove_chain+0x58>
 8016770:	e000      	b.n	8016774 <remove_chain+0xdc>
 8016772:	46c0      	nop			@ (mov r8, r8)
 8016774:	2300      	movs	r3, #0
 8016776:	0018      	movs	r0, r3
 8016778:	46bd      	mov	sp, r7
 801677a:	b008      	add	sp, #32
 801677c:	bdb0      	pop	{r4, r5, r7, pc}

0801677e <create_chain>:
 801677e:	b5b0      	push	{r4, r5, r7, lr}
 8016780:	b088      	sub	sp, #32
 8016782:	af00      	add	r7, sp, #0
 8016784:	6078      	str	r0, [r7, #4]
 8016786:	6039      	str	r1, [r7, #0]
 8016788:	687b      	ldr	r3, [r7, #4]
 801678a:	681b      	ldr	r3, [r3, #0]
 801678c:	613b      	str	r3, [r7, #16]
 801678e:	683b      	ldr	r3, [r7, #0]
 8016790:	2b00      	cmp	r3, #0
 8016792:	d10d      	bne.n	80167b0 <create_chain+0x32>
 8016794:	693b      	ldr	r3, [r7, #16]
 8016796:	691b      	ldr	r3, [r3, #16]
 8016798:	61bb      	str	r3, [r7, #24]
 801679a:	69bb      	ldr	r3, [r7, #24]
 801679c:	2b00      	cmp	r3, #0
 801679e:	d004      	beq.n	80167aa <create_chain+0x2c>
 80167a0:	693b      	ldr	r3, [r7, #16]
 80167a2:	699b      	ldr	r3, [r3, #24]
 80167a4:	69ba      	ldr	r2, [r7, #24]
 80167a6:	429a      	cmp	r2, r3
 80167a8:	d31d      	bcc.n	80167e6 <create_chain+0x68>
 80167aa:	2301      	movs	r3, #1
 80167ac:	61bb      	str	r3, [r7, #24]
 80167ae:	e01a      	b.n	80167e6 <create_chain+0x68>
 80167b0:	683a      	ldr	r2, [r7, #0]
 80167b2:	687b      	ldr	r3, [r7, #4]
 80167b4:	0011      	movs	r1, r2
 80167b6:	0018      	movs	r0, r3
 80167b8:	f7ff fd64 	bl	8016284 <get_fat>
 80167bc:	0003      	movs	r3, r0
 80167be:	60fb      	str	r3, [r7, #12]
 80167c0:	68fb      	ldr	r3, [r7, #12]
 80167c2:	2b01      	cmp	r3, #1
 80167c4:	d801      	bhi.n	80167ca <create_chain+0x4c>
 80167c6:	2301      	movs	r3, #1
 80167c8:	e07b      	b.n	80168c2 <create_chain+0x144>
 80167ca:	68fb      	ldr	r3, [r7, #12]
 80167cc:	3301      	adds	r3, #1
 80167ce:	d101      	bne.n	80167d4 <create_chain+0x56>
 80167d0:	68fb      	ldr	r3, [r7, #12]
 80167d2:	e076      	b.n	80168c2 <create_chain+0x144>
 80167d4:	693b      	ldr	r3, [r7, #16]
 80167d6:	699b      	ldr	r3, [r3, #24]
 80167d8:	68fa      	ldr	r2, [r7, #12]
 80167da:	429a      	cmp	r2, r3
 80167dc:	d201      	bcs.n	80167e2 <create_chain+0x64>
 80167de:	68fb      	ldr	r3, [r7, #12]
 80167e0:	e06f      	b.n	80168c2 <create_chain+0x144>
 80167e2:	683b      	ldr	r3, [r7, #0]
 80167e4:	61bb      	str	r3, [r7, #24]
 80167e6:	69bb      	ldr	r3, [r7, #24]
 80167e8:	61fb      	str	r3, [r7, #28]
 80167ea:	69fb      	ldr	r3, [r7, #28]
 80167ec:	3301      	adds	r3, #1
 80167ee:	61fb      	str	r3, [r7, #28]
 80167f0:	693b      	ldr	r3, [r7, #16]
 80167f2:	699b      	ldr	r3, [r3, #24]
 80167f4:	69fa      	ldr	r2, [r7, #28]
 80167f6:	429a      	cmp	r2, r3
 80167f8:	d307      	bcc.n	801680a <create_chain+0x8c>
 80167fa:	2302      	movs	r3, #2
 80167fc:	61fb      	str	r3, [r7, #28]
 80167fe:	69fa      	ldr	r2, [r7, #28]
 8016800:	69bb      	ldr	r3, [r7, #24]
 8016802:	429a      	cmp	r2, r3
 8016804:	d901      	bls.n	801680a <create_chain+0x8c>
 8016806:	2300      	movs	r3, #0
 8016808:	e05b      	b.n	80168c2 <create_chain+0x144>
 801680a:	69fa      	ldr	r2, [r7, #28]
 801680c:	687b      	ldr	r3, [r7, #4]
 801680e:	0011      	movs	r1, r2
 8016810:	0018      	movs	r0, r3
 8016812:	f7ff fd37 	bl	8016284 <get_fat>
 8016816:	0003      	movs	r3, r0
 8016818:	60fb      	str	r3, [r7, #12]
 801681a:	68fb      	ldr	r3, [r7, #12]
 801681c:	2b00      	cmp	r3, #0
 801681e:	d00d      	beq.n	801683c <create_chain+0xbe>
 8016820:	68fb      	ldr	r3, [r7, #12]
 8016822:	2b01      	cmp	r3, #1
 8016824:	d002      	beq.n	801682c <create_chain+0xae>
 8016826:	68fb      	ldr	r3, [r7, #12]
 8016828:	3301      	adds	r3, #1
 801682a:	d101      	bne.n	8016830 <create_chain+0xb2>
 801682c:	68fb      	ldr	r3, [r7, #12]
 801682e:	e048      	b.n	80168c2 <create_chain+0x144>
 8016830:	69fa      	ldr	r2, [r7, #28]
 8016832:	69bb      	ldr	r3, [r7, #24]
 8016834:	429a      	cmp	r2, r3
 8016836:	d1d8      	bne.n	80167ea <create_chain+0x6c>
 8016838:	2300      	movs	r3, #0
 801683a:	e042      	b.n	80168c2 <create_chain+0x144>
 801683c:	46c0      	nop			@ (mov r8, r8)
 801683e:	2517      	movs	r5, #23
 8016840:	197c      	adds	r4, r7, r5
 8016842:	2301      	movs	r3, #1
 8016844:	425a      	negs	r2, r3
 8016846:	69f9      	ldr	r1, [r7, #28]
 8016848:	693b      	ldr	r3, [r7, #16]
 801684a:	0018      	movs	r0, r3
 801684c:	f7ff fdf4 	bl	8016438 <put_fat>
 8016850:	0003      	movs	r3, r0
 8016852:	7023      	strb	r3, [r4, #0]
 8016854:	197b      	adds	r3, r7, r5
 8016856:	781b      	ldrb	r3, [r3, #0]
 8016858:	2b00      	cmp	r3, #0
 801685a:	d10b      	bne.n	8016874 <create_chain+0xf6>
 801685c:	683b      	ldr	r3, [r7, #0]
 801685e:	2b00      	cmp	r3, #0
 8016860:	d008      	beq.n	8016874 <create_chain+0xf6>
 8016862:	197c      	adds	r4, r7, r5
 8016864:	69fa      	ldr	r2, [r7, #28]
 8016866:	6839      	ldr	r1, [r7, #0]
 8016868:	693b      	ldr	r3, [r7, #16]
 801686a:	0018      	movs	r0, r3
 801686c:	f7ff fde4 	bl	8016438 <put_fat>
 8016870:	0003      	movs	r3, r0
 8016872:	7023      	strb	r3, [r4, #0]
 8016874:	2317      	movs	r3, #23
 8016876:	18fb      	adds	r3, r7, r3
 8016878:	781b      	ldrb	r3, [r3, #0]
 801687a:	2b00      	cmp	r3, #0
 801687c:	d116      	bne.n	80168ac <create_chain+0x12e>
 801687e:	693b      	ldr	r3, [r7, #16]
 8016880:	69fa      	ldr	r2, [r7, #28]
 8016882:	611a      	str	r2, [r3, #16]
 8016884:	693b      	ldr	r3, [r7, #16]
 8016886:	695a      	ldr	r2, [r3, #20]
 8016888:	693b      	ldr	r3, [r7, #16]
 801688a:	699b      	ldr	r3, [r3, #24]
 801688c:	3b02      	subs	r3, #2
 801688e:	429a      	cmp	r2, r3
 8016890:	d804      	bhi.n	801689c <create_chain+0x11e>
 8016892:	693b      	ldr	r3, [r7, #16]
 8016894:	695b      	ldr	r3, [r3, #20]
 8016896:	1e5a      	subs	r2, r3, #1
 8016898:	693b      	ldr	r3, [r7, #16]
 801689a:	615a      	str	r2, [r3, #20]
 801689c:	693b      	ldr	r3, [r7, #16]
 801689e:	791b      	ldrb	r3, [r3, #4]
 80168a0:	2201      	movs	r2, #1
 80168a2:	4313      	orrs	r3, r2
 80168a4:	b2da      	uxtb	r2, r3
 80168a6:	693b      	ldr	r3, [r7, #16]
 80168a8:	711a      	strb	r2, [r3, #4]
 80168aa:	e009      	b.n	80168c0 <create_chain+0x142>
 80168ac:	2317      	movs	r3, #23
 80168ae:	18fb      	adds	r3, r7, r3
 80168b0:	781b      	ldrb	r3, [r3, #0]
 80168b2:	2b01      	cmp	r3, #1
 80168b4:	d102      	bne.n	80168bc <create_chain+0x13e>
 80168b6:	2301      	movs	r3, #1
 80168b8:	425b      	negs	r3, r3
 80168ba:	e000      	b.n	80168be <create_chain+0x140>
 80168bc:	2301      	movs	r3, #1
 80168be:	61fb      	str	r3, [r7, #28]
 80168c0:	69fb      	ldr	r3, [r7, #28]
 80168c2:	0018      	movs	r0, r3
 80168c4:	46bd      	mov	sp, r7
 80168c6:	b008      	add	sp, #32
 80168c8:	bdb0      	pop	{r4, r5, r7, pc}

080168ca <clmt_clust>:
 80168ca:	b580      	push	{r7, lr}
 80168cc:	b086      	sub	sp, #24
 80168ce:	af00      	add	r7, sp, #0
 80168d0:	6078      	str	r0, [r7, #4]
 80168d2:	6039      	str	r1, [r7, #0]
 80168d4:	687b      	ldr	r3, [r7, #4]
 80168d6:	681b      	ldr	r3, [r3, #0]
 80168d8:	60fb      	str	r3, [r7, #12]
 80168da:	687b      	ldr	r3, [r7, #4]
 80168dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80168de:	3304      	adds	r3, #4
 80168e0:	613b      	str	r3, [r7, #16]
 80168e2:	68fb      	ldr	r3, [r7, #12]
 80168e4:	899b      	ldrh	r3, [r3, #12]
 80168e6:	0019      	movs	r1, r3
 80168e8:	6838      	ldr	r0, [r7, #0]
 80168ea:	f7e9 fc1d 	bl	8000128 <__udivsi3>
 80168ee:	0003      	movs	r3, r0
 80168f0:	001a      	movs	r2, r3
 80168f2:	68fb      	ldr	r3, [r7, #12]
 80168f4:	895b      	ldrh	r3, [r3, #10]
 80168f6:	0019      	movs	r1, r3
 80168f8:	0010      	movs	r0, r2
 80168fa:	f7e9 fc15 	bl	8000128 <__udivsi3>
 80168fe:	0003      	movs	r3, r0
 8016900:	617b      	str	r3, [r7, #20]
 8016902:	693b      	ldr	r3, [r7, #16]
 8016904:	1d1a      	adds	r2, r3, #4
 8016906:	613a      	str	r2, [r7, #16]
 8016908:	681b      	ldr	r3, [r3, #0]
 801690a:	60bb      	str	r3, [r7, #8]
 801690c:	68bb      	ldr	r3, [r7, #8]
 801690e:	2b00      	cmp	r3, #0
 8016910:	d101      	bne.n	8016916 <clmt_clust+0x4c>
 8016912:	2300      	movs	r3, #0
 8016914:	e010      	b.n	8016938 <clmt_clust+0x6e>
 8016916:	697a      	ldr	r2, [r7, #20]
 8016918:	68bb      	ldr	r3, [r7, #8]
 801691a:	429a      	cmp	r2, r3
 801691c:	d307      	bcc.n	801692e <clmt_clust+0x64>
 801691e:	697a      	ldr	r2, [r7, #20]
 8016920:	68bb      	ldr	r3, [r7, #8]
 8016922:	1ad3      	subs	r3, r2, r3
 8016924:	617b      	str	r3, [r7, #20]
 8016926:	693b      	ldr	r3, [r7, #16]
 8016928:	3304      	adds	r3, #4
 801692a:	613b      	str	r3, [r7, #16]
 801692c:	e7e9      	b.n	8016902 <clmt_clust+0x38>
 801692e:	46c0      	nop			@ (mov r8, r8)
 8016930:	693b      	ldr	r3, [r7, #16]
 8016932:	681a      	ldr	r2, [r3, #0]
 8016934:	697b      	ldr	r3, [r7, #20]
 8016936:	18d3      	adds	r3, r2, r3
 8016938:	0018      	movs	r0, r3
 801693a:	46bd      	mov	sp, r7
 801693c:	b006      	add	sp, #24
 801693e:	bd80      	pop	{r7, pc}

08016940 <dir_sdi>:
 8016940:	b590      	push	{r4, r7, lr}
 8016942:	b087      	sub	sp, #28
 8016944:	af00      	add	r7, sp, #0
 8016946:	6078      	str	r0, [r7, #4]
 8016948:	6039      	str	r1, [r7, #0]
 801694a:	687b      	ldr	r3, [r7, #4]
 801694c:	681b      	ldr	r3, [r3, #0]
 801694e:	613b      	str	r3, [r7, #16]
 8016950:	683a      	ldr	r2, [r7, #0]
 8016952:	2380      	movs	r3, #128	@ 0x80
 8016954:	039b      	lsls	r3, r3, #14
 8016956:	429a      	cmp	r2, r3
 8016958:	d203      	bcs.n	8016962 <dir_sdi+0x22>
 801695a:	683b      	ldr	r3, [r7, #0]
 801695c:	221f      	movs	r2, #31
 801695e:	4013      	ands	r3, r2
 8016960:	d001      	beq.n	8016966 <dir_sdi+0x26>
 8016962:	2302      	movs	r3, #2
 8016964:	e074      	b.n	8016a50 <dir_sdi+0x110>
 8016966:	687b      	ldr	r3, [r7, #4]
 8016968:	683a      	ldr	r2, [r7, #0]
 801696a:	615a      	str	r2, [r3, #20]
 801696c:	687b      	ldr	r3, [r7, #4]
 801696e:	689b      	ldr	r3, [r3, #8]
 8016970:	617b      	str	r3, [r7, #20]
 8016972:	697b      	ldr	r3, [r7, #20]
 8016974:	2b00      	cmp	r3, #0
 8016976:	d106      	bne.n	8016986 <dir_sdi+0x46>
 8016978:	693b      	ldr	r3, [r7, #16]
 801697a:	781b      	ldrb	r3, [r3, #0]
 801697c:	2b02      	cmp	r3, #2
 801697e:	d902      	bls.n	8016986 <dir_sdi+0x46>
 8016980:	693b      	ldr	r3, [r7, #16]
 8016982:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016984:	617b      	str	r3, [r7, #20]
 8016986:	697b      	ldr	r3, [r7, #20]
 8016988:	2b00      	cmp	r3, #0
 801698a:	d10c      	bne.n	80169a6 <dir_sdi+0x66>
 801698c:	683b      	ldr	r3, [r7, #0]
 801698e:	095b      	lsrs	r3, r3, #5
 8016990:	693a      	ldr	r2, [r7, #16]
 8016992:	8912      	ldrh	r2, [r2, #8]
 8016994:	4293      	cmp	r3, r2
 8016996:	d301      	bcc.n	801699c <dir_sdi+0x5c>
 8016998:	2302      	movs	r3, #2
 801699a:	e059      	b.n	8016a50 <dir_sdi+0x110>
 801699c:	693b      	ldr	r3, [r7, #16]
 801699e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80169a0:	687b      	ldr	r3, [r7, #4]
 80169a2:	61da      	str	r2, [r3, #28]
 80169a4:	e02f      	b.n	8016a06 <dir_sdi+0xc6>
 80169a6:	693b      	ldr	r3, [r7, #16]
 80169a8:	895b      	ldrh	r3, [r3, #10]
 80169aa:	001a      	movs	r2, r3
 80169ac:	693b      	ldr	r3, [r7, #16]
 80169ae:	899b      	ldrh	r3, [r3, #12]
 80169b0:	4353      	muls	r3, r2
 80169b2:	60fb      	str	r3, [r7, #12]
 80169b4:	e01a      	b.n	80169ec <dir_sdi+0xac>
 80169b6:	687b      	ldr	r3, [r7, #4]
 80169b8:	697a      	ldr	r2, [r7, #20]
 80169ba:	0011      	movs	r1, r2
 80169bc:	0018      	movs	r0, r3
 80169be:	f7ff fc61 	bl	8016284 <get_fat>
 80169c2:	0003      	movs	r3, r0
 80169c4:	617b      	str	r3, [r7, #20]
 80169c6:	697b      	ldr	r3, [r7, #20]
 80169c8:	3301      	adds	r3, #1
 80169ca:	d101      	bne.n	80169d0 <dir_sdi+0x90>
 80169cc:	2301      	movs	r3, #1
 80169ce:	e03f      	b.n	8016a50 <dir_sdi+0x110>
 80169d0:	697b      	ldr	r3, [r7, #20]
 80169d2:	2b01      	cmp	r3, #1
 80169d4:	d904      	bls.n	80169e0 <dir_sdi+0xa0>
 80169d6:	693b      	ldr	r3, [r7, #16]
 80169d8:	699b      	ldr	r3, [r3, #24]
 80169da:	697a      	ldr	r2, [r7, #20]
 80169dc:	429a      	cmp	r2, r3
 80169de:	d301      	bcc.n	80169e4 <dir_sdi+0xa4>
 80169e0:	2302      	movs	r3, #2
 80169e2:	e035      	b.n	8016a50 <dir_sdi+0x110>
 80169e4:	683a      	ldr	r2, [r7, #0]
 80169e6:	68fb      	ldr	r3, [r7, #12]
 80169e8:	1ad3      	subs	r3, r2, r3
 80169ea:	603b      	str	r3, [r7, #0]
 80169ec:	683a      	ldr	r2, [r7, #0]
 80169ee:	68fb      	ldr	r3, [r7, #12]
 80169f0:	429a      	cmp	r2, r3
 80169f2:	d2e0      	bcs.n	80169b6 <dir_sdi+0x76>
 80169f4:	697a      	ldr	r2, [r7, #20]
 80169f6:	693b      	ldr	r3, [r7, #16]
 80169f8:	0011      	movs	r1, r2
 80169fa:	0018      	movs	r0, r3
 80169fc:	f7ff fc26 	bl	801624c <clust2sect>
 8016a00:	0002      	movs	r2, r0
 8016a02:	687b      	ldr	r3, [r7, #4]
 8016a04:	61da      	str	r2, [r3, #28]
 8016a06:	687b      	ldr	r3, [r7, #4]
 8016a08:	697a      	ldr	r2, [r7, #20]
 8016a0a:	619a      	str	r2, [r3, #24]
 8016a0c:	687b      	ldr	r3, [r7, #4]
 8016a0e:	69db      	ldr	r3, [r3, #28]
 8016a10:	2b00      	cmp	r3, #0
 8016a12:	d101      	bne.n	8016a18 <dir_sdi+0xd8>
 8016a14:	2302      	movs	r3, #2
 8016a16:	e01b      	b.n	8016a50 <dir_sdi+0x110>
 8016a18:	687b      	ldr	r3, [r7, #4]
 8016a1a:	69dc      	ldr	r4, [r3, #28]
 8016a1c:	693b      	ldr	r3, [r7, #16]
 8016a1e:	899b      	ldrh	r3, [r3, #12]
 8016a20:	0019      	movs	r1, r3
 8016a22:	6838      	ldr	r0, [r7, #0]
 8016a24:	f7e9 fb80 	bl	8000128 <__udivsi3>
 8016a28:	0003      	movs	r3, r0
 8016a2a:	18e2      	adds	r2, r4, r3
 8016a2c:	687b      	ldr	r3, [r7, #4]
 8016a2e:	61da      	str	r2, [r3, #28]
 8016a30:	693b      	ldr	r3, [r7, #16]
 8016a32:	3334      	adds	r3, #52	@ 0x34
 8016a34:	001c      	movs	r4, r3
 8016a36:	693b      	ldr	r3, [r7, #16]
 8016a38:	899b      	ldrh	r3, [r3, #12]
 8016a3a:	001a      	movs	r2, r3
 8016a3c:	683b      	ldr	r3, [r7, #0]
 8016a3e:	0011      	movs	r1, r2
 8016a40:	0018      	movs	r0, r3
 8016a42:	f7e9 fbf7 	bl	8000234 <__aeabi_uidivmod>
 8016a46:	000b      	movs	r3, r1
 8016a48:	18e2      	adds	r2, r4, r3
 8016a4a:	687b      	ldr	r3, [r7, #4]
 8016a4c:	621a      	str	r2, [r3, #32]
 8016a4e:	2300      	movs	r3, #0
 8016a50:	0018      	movs	r0, r3
 8016a52:	46bd      	mov	sp, r7
 8016a54:	b007      	add	sp, #28
 8016a56:	bd90      	pop	{r4, r7, pc}

08016a58 <dir_next>:
 8016a58:	b590      	push	{r4, r7, lr}
 8016a5a:	b087      	sub	sp, #28
 8016a5c:	af00      	add	r7, sp, #0
 8016a5e:	6078      	str	r0, [r7, #4]
 8016a60:	6039      	str	r1, [r7, #0]
 8016a62:	687b      	ldr	r3, [r7, #4]
 8016a64:	681b      	ldr	r3, [r3, #0]
 8016a66:	60fb      	str	r3, [r7, #12]
 8016a68:	687b      	ldr	r3, [r7, #4]
 8016a6a:	695b      	ldr	r3, [r3, #20]
 8016a6c:	3320      	adds	r3, #32
 8016a6e:	60bb      	str	r3, [r7, #8]
 8016a70:	687b      	ldr	r3, [r7, #4]
 8016a72:	69db      	ldr	r3, [r3, #28]
 8016a74:	2b00      	cmp	r3, #0
 8016a76:	d004      	beq.n	8016a82 <dir_next+0x2a>
 8016a78:	68ba      	ldr	r2, [r7, #8]
 8016a7a:	2380      	movs	r3, #128	@ 0x80
 8016a7c:	039b      	lsls	r3, r3, #14
 8016a7e:	429a      	cmp	r2, r3
 8016a80:	d301      	bcc.n	8016a86 <dir_next+0x2e>
 8016a82:	2304      	movs	r3, #4
 8016a84:	e0c0      	b.n	8016c08 <dir_next+0x1b0>
 8016a86:	68fb      	ldr	r3, [r7, #12]
 8016a88:	899b      	ldrh	r3, [r3, #12]
 8016a8a:	001a      	movs	r2, r3
 8016a8c:	68bb      	ldr	r3, [r7, #8]
 8016a8e:	0011      	movs	r1, r2
 8016a90:	0018      	movs	r0, r3
 8016a92:	f7e9 fbcf 	bl	8000234 <__aeabi_uidivmod>
 8016a96:	1e0b      	subs	r3, r1, #0
 8016a98:	d000      	beq.n	8016a9c <dir_next+0x44>
 8016a9a:	e0a2      	b.n	8016be2 <dir_next+0x18a>
 8016a9c:	687b      	ldr	r3, [r7, #4]
 8016a9e:	69db      	ldr	r3, [r3, #28]
 8016aa0:	1c5a      	adds	r2, r3, #1
 8016aa2:	687b      	ldr	r3, [r7, #4]
 8016aa4:	61da      	str	r2, [r3, #28]
 8016aa6:	687b      	ldr	r3, [r7, #4]
 8016aa8:	699b      	ldr	r3, [r3, #24]
 8016aaa:	2b00      	cmp	r3, #0
 8016aac:	d10b      	bne.n	8016ac6 <dir_next+0x6e>
 8016aae:	68bb      	ldr	r3, [r7, #8]
 8016ab0:	095b      	lsrs	r3, r3, #5
 8016ab2:	68fa      	ldr	r2, [r7, #12]
 8016ab4:	8912      	ldrh	r2, [r2, #8]
 8016ab6:	4293      	cmp	r3, r2
 8016ab8:	d200      	bcs.n	8016abc <dir_next+0x64>
 8016aba:	e092      	b.n	8016be2 <dir_next+0x18a>
 8016abc:	687b      	ldr	r3, [r7, #4]
 8016abe:	2200      	movs	r2, #0
 8016ac0:	61da      	str	r2, [r3, #28]
 8016ac2:	2304      	movs	r3, #4
 8016ac4:	e0a0      	b.n	8016c08 <dir_next+0x1b0>
 8016ac6:	68fb      	ldr	r3, [r7, #12]
 8016ac8:	899b      	ldrh	r3, [r3, #12]
 8016aca:	0019      	movs	r1, r3
 8016acc:	68b8      	ldr	r0, [r7, #8]
 8016ace:	f7e9 fb2b 	bl	8000128 <__udivsi3>
 8016ad2:	0003      	movs	r3, r0
 8016ad4:	001a      	movs	r2, r3
 8016ad6:	68fb      	ldr	r3, [r7, #12]
 8016ad8:	895b      	ldrh	r3, [r3, #10]
 8016ada:	3b01      	subs	r3, #1
 8016adc:	4013      	ands	r3, r2
 8016ade:	d000      	beq.n	8016ae2 <dir_next+0x8a>
 8016ae0:	e07f      	b.n	8016be2 <dir_next+0x18a>
 8016ae2:	687a      	ldr	r2, [r7, #4]
 8016ae4:	687b      	ldr	r3, [r7, #4]
 8016ae6:	699b      	ldr	r3, [r3, #24]
 8016ae8:	0019      	movs	r1, r3
 8016aea:	0010      	movs	r0, r2
 8016aec:	f7ff fbca 	bl	8016284 <get_fat>
 8016af0:	0003      	movs	r3, r0
 8016af2:	617b      	str	r3, [r7, #20]
 8016af4:	697b      	ldr	r3, [r7, #20]
 8016af6:	2b01      	cmp	r3, #1
 8016af8:	d801      	bhi.n	8016afe <dir_next+0xa6>
 8016afa:	2302      	movs	r3, #2
 8016afc:	e084      	b.n	8016c08 <dir_next+0x1b0>
 8016afe:	697b      	ldr	r3, [r7, #20]
 8016b00:	3301      	adds	r3, #1
 8016b02:	d101      	bne.n	8016b08 <dir_next+0xb0>
 8016b04:	2301      	movs	r3, #1
 8016b06:	e07f      	b.n	8016c08 <dir_next+0x1b0>
 8016b08:	68fb      	ldr	r3, [r7, #12]
 8016b0a:	699b      	ldr	r3, [r3, #24]
 8016b0c:	697a      	ldr	r2, [r7, #20]
 8016b0e:	429a      	cmp	r2, r3
 8016b10:	d35b      	bcc.n	8016bca <dir_next+0x172>
 8016b12:	683b      	ldr	r3, [r7, #0]
 8016b14:	2b00      	cmp	r3, #0
 8016b16:	d104      	bne.n	8016b22 <dir_next+0xca>
 8016b18:	687b      	ldr	r3, [r7, #4]
 8016b1a:	2200      	movs	r2, #0
 8016b1c:	61da      	str	r2, [r3, #28]
 8016b1e:	2304      	movs	r3, #4
 8016b20:	e072      	b.n	8016c08 <dir_next+0x1b0>
 8016b22:	687a      	ldr	r2, [r7, #4]
 8016b24:	687b      	ldr	r3, [r7, #4]
 8016b26:	699b      	ldr	r3, [r3, #24]
 8016b28:	0019      	movs	r1, r3
 8016b2a:	0010      	movs	r0, r2
 8016b2c:	f7ff fe27 	bl	801677e <create_chain>
 8016b30:	0003      	movs	r3, r0
 8016b32:	617b      	str	r3, [r7, #20]
 8016b34:	697b      	ldr	r3, [r7, #20]
 8016b36:	2b00      	cmp	r3, #0
 8016b38:	d101      	bne.n	8016b3e <dir_next+0xe6>
 8016b3a:	2307      	movs	r3, #7
 8016b3c:	e064      	b.n	8016c08 <dir_next+0x1b0>
 8016b3e:	697b      	ldr	r3, [r7, #20]
 8016b40:	2b01      	cmp	r3, #1
 8016b42:	d101      	bne.n	8016b48 <dir_next+0xf0>
 8016b44:	2302      	movs	r3, #2
 8016b46:	e05f      	b.n	8016c08 <dir_next+0x1b0>
 8016b48:	697b      	ldr	r3, [r7, #20]
 8016b4a:	3301      	adds	r3, #1
 8016b4c:	d101      	bne.n	8016b52 <dir_next+0xfa>
 8016b4e:	2301      	movs	r3, #1
 8016b50:	e05a      	b.n	8016c08 <dir_next+0x1b0>
 8016b52:	68fb      	ldr	r3, [r7, #12]
 8016b54:	0018      	movs	r0, r3
 8016b56:	f7ff fa7f 	bl	8016058 <sync_window>
 8016b5a:	1e03      	subs	r3, r0, #0
 8016b5c:	d001      	beq.n	8016b62 <dir_next+0x10a>
 8016b5e:	2301      	movs	r3, #1
 8016b60:	e052      	b.n	8016c08 <dir_next+0x1b0>
 8016b62:	68fb      	ldr	r3, [r7, #12]
 8016b64:	3334      	adds	r3, #52	@ 0x34
 8016b66:	0018      	movs	r0, r3
 8016b68:	68fb      	ldr	r3, [r7, #12]
 8016b6a:	899b      	ldrh	r3, [r3, #12]
 8016b6c:	001a      	movs	r2, r3
 8016b6e:	2100      	movs	r1, #0
 8016b70:	f7ff f8b1 	bl	8015cd6 <mem_set>
 8016b74:	2300      	movs	r3, #0
 8016b76:	613b      	str	r3, [r7, #16]
 8016b78:	697a      	ldr	r2, [r7, #20]
 8016b7a:	68fb      	ldr	r3, [r7, #12]
 8016b7c:	0011      	movs	r1, r2
 8016b7e:	0018      	movs	r0, r3
 8016b80:	f7ff fb64 	bl	801624c <clust2sect>
 8016b84:	0002      	movs	r2, r0
 8016b86:	68fb      	ldr	r3, [r7, #12]
 8016b88:	631a      	str	r2, [r3, #48]	@ 0x30
 8016b8a:	e012      	b.n	8016bb2 <dir_next+0x15a>
 8016b8c:	68fb      	ldr	r3, [r7, #12]
 8016b8e:	2201      	movs	r2, #1
 8016b90:	70da      	strb	r2, [r3, #3]
 8016b92:	68fb      	ldr	r3, [r7, #12]
 8016b94:	0018      	movs	r0, r3
 8016b96:	f7ff fa5f 	bl	8016058 <sync_window>
 8016b9a:	1e03      	subs	r3, r0, #0
 8016b9c:	d001      	beq.n	8016ba2 <dir_next+0x14a>
 8016b9e:	2301      	movs	r3, #1
 8016ba0:	e032      	b.n	8016c08 <dir_next+0x1b0>
 8016ba2:	693b      	ldr	r3, [r7, #16]
 8016ba4:	3301      	adds	r3, #1
 8016ba6:	613b      	str	r3, [r7, #16]
 8016ba8:	68fb      	ldr	r3, [r7, #12]
 8016baa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016bac:	1c5a      	adds	r2, r3, #1
 8016bae:	68fb      	ldr	r3, [r7, #12]
 8016bb0:	631a      	str	r2, [r3, #48]	@ 0x30
 8016bb2:	68fb      	ldr	r3, [r7, #12]
 8016bb4:	895b      	ldrh	r3, [r3, #10]
 8016bb6:	001a      	movs	r2, r3
 8016bb8:	693b      	ldr	r3, [r7, #16]
 8016bba:	4293      	cmp	r3, r2
 8016bbc:	d3e6      	bcc.n	8016b8c <dir_next+0x134>
 8016bbe:	68fb      	ldr	r3, [r7, #12]
 8016bc0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8016bc2:	693b      	ldr	r3, [r7, #16]
 8016bc4:	1ad2      	subs	r2, r2, r3
 8016bc6:	68fb      	ldr	r3, [r7, #12]
 8016bc8:	631a      	str	r2, [r3, #48]	@ 0x30
 8016bca:	687b      	ldr	r3, [r7, #4]
 8016bcc:	697a      	ldr	r2, [r7, #20]
 8016bce:	619a      	str	r2, [r3, #24]
 8016bd0:	697a      	ldr	r2, [r7, #20]
 8016bd2:	68fb      	ldr	r3, [r7, #12]
 8016bd4:	0011      	movs	r1, r2
 8016bd6:	0018      	movs	r0, r3
 8016bd8:	f7ff fb38 	bl	801624c <clust2sect>
 8016bdc:	0002      	movs	r2, r0
 8016bde:	687b      	ldr	r3, [r7, #4]
 8016be0:	61da      	str	r2, [r3, #28]
 8016be2:	687b      	ldr	r3, [r7, #4]
 8016be4:	68ba      	ldr	r2, [r7, #8]
 8016be6:	615a      	str	r2, [r3, #20]
 8016be8:	68fb      	ldr	r3, [r7, #12]
 8016bea:	3334      	adds	r3, #52	@ 0x34
 8016bec:	001c      	movs	r4, r3
 8016bee:	68fb      	ldr	r3, [r7, #12]
 8016bf0:	899b      	ldrh	r3, [r3, #12]
 8016bf2:	001a      	movs	r2, r3
 8016bf4:	68bb      	ldr	r3, [r7, #8]
 8016bf6:	0011      	movs	r1, r2
 8016bf8:	0018      	movs	r0, r3
 8016bfa:	f7e9 fb1b 	bl	8000234 <__aeabi_uidivmod>
 8016bfe:	000b      	movs	r3, r1
 8016c00:	18e2      	adds	r2, r4, r3
 8016c02:	687b      	ldr	r3, [r7, #4]
 8016c04:	621a      	str	r2, [r3, #32]
 8016c06:	2300      	movs	r3, #0
 8016c08:	0018      	movs	r0, r3
 8016c0a:	46bd      	mov	sp, r7
 8016c0c:	b007      	add	sp, #28
 8016c0e:	bd90      	pop	{r4, r7, pc}

08016c10 <dir_alloc>:
 8016c10:	b5b0      	push	{r4, r5, r7, lr}
 8016c12:	b086      	sub	sp, #24
 8016c14:	af00      	add	r7, sp, #0
 8016c16:	6078      	str	r0, [r7, #4]
 8016c18:	6039      	str	r1, [r7, #0]
 8016c1a:	687b      	ldr	r3, [r7, #4]
 8016c1c:	681b      	ldr	r3, [r3, #0]
 8016c1e:	60fb      	str	r3, [r7, #12]
 8016c20:	2517      	movs	r5, #23
 8016c22:	197c      	adds	r4, r7, r5
 8016c24:	687b      	ldr	r3, [r7, #4]
 8016c26:	2100      	movs	r1, #0
 8016c28:	0018      	movs	r0, r3
 8016c2a:	f7ff fe89 	bl	8016940 <dir_sdi>
 8016c2e:	0003      	movs	r3, r0
 8016c30:	7023      	strb	r3, [r4, #0]
 8016c32:	197b      	adds	r3, r7, r5
 8016c34:	781b      	ldrb	r3, [r3, #0]
 8016c36:	2b00      	cmp	r3, #0
 8016c38:	d133      	bne.n	8016ca2 <dir_alloc+0x92>
 8016c3a:	2300      	movs	r3, #0
 8016c3c:	613b      	str	r3, [r7, #16]
 8016c3e:	687b      	ldr	r3, [r7, #4]
 8016c40:	69da      	ldr	r2, [r3, #28]
 8016c42:	2517      	movs	r5, #23
 8016c44:	197c      	adds	r4, r7, r5
 8016c46:	68fb      	ldr	r3, [r7, #12]
 8016c48:	0011      	movs	r1, r2
 8016c4a:	0018      	movs	r0, r3
 8016c4c:	f7ff fa4c 	bl	80160e8 <move_window>
 8016c50:	0003      	movs	r3, r0
 8016c52:	7023      	strb	r3, [r4, #0]
 8016c54:	197b      	adds	r3, r7, r5
 8016c56:	781b      	ldrb	r3, [r3, #0]
 8016c58:	2b00      	cmp	r3, #0
 8016c5a:	d121      	bne.n	8016ca0 <dir_alloc+0x90>
 8016c5c:	687b      	ldr	r3, [r7, #4]
 8016c5e:	6a1b      	ldr	r3, [r3, #32]
 8016c60:	781b      	ldrb	r3, [r3, #0]
 8016c62:	2be5      	cmp	r3, #229	@ 0xe5
 8016c64:	d004      	beq.n	8016c70 <dir_alloc+0x60>
 8016c66:	687b      	ldr	r3, [r7, #4]
 8016c68:	6a1b      	ldr	r3, [r3, #32]
 8016c6a:	781b      	ldrb	r3, [r3, #0]
 8016c6c:	2b00      	cmp	r3, #0
 8016c6e:	d107      	bne.n	8016c80 <dir_alloc+0x70>
 8016c70:	693b      	ldr	r3, [r7, #16]
 8016c72:	3301      	adds	r3, #1
 8016c74:	613b      	str	r3, [r7, #16]
 8016c76:	693a      	ldr	r2, [r7, #16]
 8016c78:	683b      	ldr	r3, [r7, #0]
 8016c7a:	429a      	cmp	r2, r3
 8016c7c:	d102      	bne.n	8016c84 <dir_alloc+0x74>
 8016c7e:	e010      	b.n	8016ca2 <dir_alloc+0x92>
 8016c80:	2300      	movs	r3, #0
 8016c82:	613b      	str	r3, [r7, #16]
 8016c84:	2517      	movs	r5, #23
 8016c86:	197c      	adds	r4, r7, r5
 8016c88:	687b      	ldr	r3, [r7, #4]
 8016c8a:	2101      	movs	r1, #1
 8016c8c:	0018      	movs	r0, r3
 8016c8e:	f7ff fee3 	bl	8016a58 <dir_next>
 8016c92:	0003      	movs	r3, r0
 8016c94:	7023      	strb	r3, [r4, #0]
 8016c96:	197b      	adds	r3, r7, r5
 8016c98:	781b      	ldrb	r3, [r3, #0]
 8016c9a:	2b00      	cmp	r3, #0
 8016c9c:	d0cf      	beq.n	8016c3e <dir_alloc+0x2e>
 8016c9e:	e000      	b.n	8016ca2 <dir_alloc+0x92>
 8016ca0:	46c0      	nop			@ (mov r8, r8)
 8016ca2:	2217      	movs	r2, #23
 8016ca4:	18bb      	adds	r3, r7, r2
 8016ca6:	781b      	ldrb	r3, [r3, #0]
 8016ca8:	2b04      	cmp	r3, #4
 8016caa:	d102      	bne.n	8016cb2 <dir_alloc+0xa2>
 8016cac:	18bb      	adds	r3, r7, r2
 8016cae:	2207      	movs	r2, #7
 8016cb0:	701a      	strb	r2, [r3, #0]
 8016cb2:	2317      	movs	r3, #23
 8016cb4:	18fb      	adds	r3, r7, r3
 8016cb6:	781b      	ldrb	r3, [r3, #0]
 8016cb8:	0018      	movs	r0, r3
 8016cba:	46bd      	mov	sp, r7
 8016cbc:	b006      	add	sp, #24
 8016cbe:	bdb0      	pop	{r4, r5, r7, pc}

08016cc0 <ld_clust>:
 8016cc0:	b580      	push	{r7, lr}
 8016cc2:	b084      	sub	sp, #16
 8016cc4:	af00      	add	r7, sp, #0
 8016cc6:	6078      	str	r0, [r7, #4]
 8016cc8:	6039      	str	r1, [r7, #0]
 8016cca:	683b      	ldr	r3, [r7, #0]
 8016ccc:	331a      	adds	r3, #26
 8016cce:	0018      	movs	r0, r3
 8016cd0:	f7fe ff5e 	bl	8015b90 <ld_word>
 8016cd4:	0003      	movs	r3, r0
 8016cd6:	60fb      	str	r3, [r7, #12]
 8016cd8:	687b      	ldr	r3, [r7, #4]
 8016cda:	781b      	ldrb	r3, [r3, #0]
 8016cdc:	2b03      	cmp	r3, #3
 8016cde:	d109      	bne.n	8016cf4 <ld_clust+0x34>
 8016ce0:	683b      	ldr	r3, [r7, #0]
 8016ce2:	3314      	adds	r3, #20
 8016ce4:	0018      	movs	r0, r3
 8016ce6:	f7fe ff53 	bl	8015b90 <ld_word>
 8016cea:	0003      	movs	r3, r0
 8016cec:	041b      	lsls	r3, r3, #16
 8016cee:	68fa      	ldr	r2, [r7, #12]
 8016cf0:	4313      	orrs	r3, r2
 8016cf2:	60fb      	str	r3, [r7, #12]
 8016cf4:	68fb      	ldr	r3, [r7, #12]
 8016cf6:	0018      	movs	r0, r3
 8016cf8:	46bd      	mov	sp, r7
 8016cfa:	b004      	add	sp, #16
 8016cfc:	bd80      	pop	{r7, pc}

08016cfe <st_clust>:
 8016cfe:	b580      	push	{r7, lr}
 8016d00:	b084      	sub	sp, #16
 8016d02:	af00      	add	r7, sp, #0
 8016d04:	60f8      	str	r0, [r7, #12]
 8016d06:	60b9      	str	r1, [r7, #8]
 8016d08:	607a      	str	r2, [r7, #4]
 8016d0a:	68bb      	ldr	r3, [r7, #8]
 8016d0c:	331a      	adds	r3, #26
 8016d0e:	687a      	ldr	r2, [r7, #4]
 8016d10:	b292      	uxth	r2, r2
 8016d12:	0011      	movs	r1, r2
 8016d14:	0018      	movs	r0, r3
 8016d16:	f7fe ff77 	bl	8015c08 <st_word>
 8016d1a:	68fb      	ldr	r3, [r7, #12]
 8016d1c:	781b      	ldrb	r3, [r3, #0]
 8016d1e:	2b03      	cmp	r3, #3
 8016d20:	d109      	bne.n	8016d36 <st_clust+0x38>
 8016d22:	68bb      	ldr	r3, [r7, #8]
 8016d24:	3314      	adds	r3, #20
 8016d26:	001a      	movs	r2, r3
 8016d28:	687b      	ldr	r3, [r7, #4]
 8016d2a:	0c1b      	lsrs	r3, r3, #16
 8016d2c:	b29b      	uxth	r3, r3
 8016d2e:	0019      	movs	r1, r3
 8016d30:	0010      	movs	r0, r2
 8016d32:	f7fe ff69 	bl	8015c08 <st_word>
 8016d36:	46c0      	nop			@ (mov r8, r8)
 8016d38:	46bd      	mov	sp, r7
 8016d3a:	b004      	add	sp, #16
 8016d3c:	bd80      	pop	{r7, pc}

08016d3e <dir_find>:
 8016d3e:	b5b0      	push	{r4, r5, r7, lr}
 8016d40:	b086      	sub	sp, #24
 8016d42:	af00      	add	r7, sp, #0
 8016d44:	6078      	str	r0, [r7, #4]
 8016d46:	687b      	ldr	r3, [r7, #4]
 8016d48:	681b      	ldr	r3, [r3, #0]
 8016d4a:	613b      	str	r3, [r7, #16]
 8016d4c:	2517      	movs	r5, #23
 8016d4e:	197c      	adds	r4, r7, r5
 8016d50:	687b      	ldr	r3, [r7, #4]
 8016d52:	2100      	movs	r1, #0
 8016d54:	0018      	movs	r0, r3
 8016d56:	f7ff fdf3 	bl	8016940 <dir_sdi>
 8016d5a:	0003      	movs	r3, r0
 8016d5c:	7023      	strb	r3, [r4, #0]
 8016d5e:	197b      	adds	r3, r7, r5
 8016d60:	781b      	ldrb	r3, [r3, #0]
 8016d62:	2b00      	cmp	r3, #0
 8016d64:	d002      	beq.n	8016d6c <dir_find+0x2e>
 8016d66:	197b      	adds	r3, r7, r5
 8016d68:	781b      	ldrb	r3, [r3, #0]
 8016d6a:	e04c      	b.n	8016e06 <dir_find+0xc8>
 8016d6c:	687b      	ldr	r3, [r7, #4]
 8016d6e:	69da      	ldr	r2, [r3, #28]
 8016d70:	2517      	movs	r5, #23
 8016d72:	197c      	adds	r4, r7, r5
 8016d74:	693b      	ldr	r3, [r7, #16]
 8016d76:	0011      	movs	r1, r2
 8016d78:	0018      	movs	r0, r3
 8016d7a:	f7ff f9b5 	bl	80160e8 <move_window>
 8016d7e:	0003      	movs	r3, r0
 8016d80:	7023      	strb	r3, [r4, #0]
 8016d82:	0029      	movs	r1, r5
 8016d84:	187b      	adds	r3, r7, r1
 8016d86:	781b      	ldrb	r3, [r3, #0]
 8016d88:	2b00      	cmp	r3, #0
 8016d8a:	d136      	bne.n	8016dfa <dir_find+0xbc>
 8016d8c:	687b      	ldr	r3, [r7, #4]
 8016d8e:	6a1a      	ldr	r2, [r3, #32]
 8016d90:	200f      	movs	r0, #15
 8016d92:	183b      	adds	r3, r7, r0
 8016d94:	7812      	ldrb	r2, [r2, #0]
 8016d96:	701a      	strb	r2, [r3, #0]
 8016d98:	183b      	adds	r3, r7, r0
 8016d9a:	781b      	ldrb	r3, [r3, #0]
 8016d9c:	2b00      	cmp	r3, #0
 8016d9e:	d103      	bne.n	8016da8 <dir_find+0x6a>
 8016da0:	187b      	adds	r3, r7, r1
 8016da2:	2204      	movs	r2, #4
 8016da4:	701a      	strb	r2, [r3, #0]
 8016da6:	e02b      	b.n	8016e00 <dir_find+0xc2>
 8016da8:	687b      	ldr	r3, [r7, #4]
 8016daa:	6a1b      	ldr	r3, [r3, #32]
 8016dac:	330b      	adds	r3, #11
 8016dae:	781b      	ldrb	r3, [r3, #0]
 8016db0:	223f      	movs	r2, #63	@ 0x3f
 8016db2:	4013      	ands	r3, r2
 8016db4:	b2da      	uxtb	r2, r3
 8016db6:	687b      	ldr	r3, [r7, #4]
 8016db8:	719a      	strb	r2, [r3, #6]
 8016dba:	687b      	ldr	r3, [r7, #4]
 8016dbc:	6a1b      	ldr	r3, [r3, #32]
 8016dbe:	330b      	adds	r3, #11
 8016dc0:	781b      	ldrb	r3, [r3, #0]
 8016dc2:	001a      	movs	r2, r3
 8016dc4:	2308      	movs	r3, #8
 8016dc6:	4013      	ands	r3, r2
 8016dc8:	d109      	bne.n	8016dde <dir_find+0xa0>
 8016dca:	687b      	ldr	r3, [r7, #4]
 8016dcc:	6a18      	ldr	r0, [r3, #32]
 8016dce:	687b      	ldr	r3, [r7, #4]
 8016dd0:	3324      	adds	r3, #36	@ 0x24
 8016dd2:	220b      	movs	r2, #11
 8016dd4:	0019      	movs	r1, r3
 8016dd6:	f7fe ff97 	bl	8015d08 <mem_cmp>
 8016dda:	1e03      	subs	r3, r0, #0
 8016ddc:	d00f      	beq.n	8016dfe <dir_find+0xc0>
 8016dde:	2517      	movs	r5, #23
 8016de0:	197c      	adds	r4, r7, r5
 8016de2:	687b      	ldr	r3, [r7, #4]
 8016de4:	2100      	movs	r1, #0
 8016de6:	0018      	movs	r0, r3
 8016de8:	f7ff fe36 	bl	8016a58 <dir_next>
 8016dec:	0003      	movs	r3, r0
 8016dee:	7023      	strb	r3, [r4, #0]
 8016df0:	197b      	adds	r3, r7, r5
 8016df2:	781b      	ldrb	r3, [r3, #0]
 8016df4:	2b00      	cmp	r3, #0
 8016df6:	d0b9      	beq.n	8016d6c <dir_find+0x2e>
 8016df8:	e002      	b.n	8016e00 <dir_find+0xc2>
 8016dfa:	46c0      	nop			@ (mov r8, r8)
 8016dfc:	e000      	b.n	8016e00 <dir_find+0xc2>
 8016dfe:	46c0      	nop			@ (mov r8, r8)
 8016e00:	2317      	movs	r3, #23
 8016e02:	18fb      	adds	r3, r7, r3
 8016e04:	781b      	ldrb	r3, [r3, #0]
 8016e06:	0018      	movs	r0, r3
 8016e08:	46bd      	mov	sp, r7
 8016e0a:	b006      	add	sp, #24
 8016e0c:	bdb0      	pop	{r4, r5, r7, pc}

08016e0e <dir_register>:
 8016e0e:	b5b0      	push	{r4, r5, r7, lr}
 8016e10:	b084      	sub	sp, #16
 8016e12:	af00      	add	r7, sp, #0
 8016e14:	6078      	str	r0, [r7, #4]
 8016e16:	687b      	ldr	r3, [r7, #4]
 8016e18:	681b      	ldr	r3, [r3, #0]
 8016e1a:	60bb      	str	r3, [r7, #8]
 8016e1c:	250f      	movs	r5, #15
 8016e1e:	197c      	adds	r4, r7, r5
 8016e20:	687b      	ldr	r3, [r7, #4]
 8016e22:	2101      	movs	r1, #1
 8016e24:	0018      	movs	r0, r3
 8016e26:	f7ff fef3 	bl	8016c10 <dir_alloc>
 8016e2a:	0003      	movs	r3, r0
 8016e2c:	7023      	strb	r3, [r4, #0]
 8016e2e:	197b      	adds	r3, r7, r5
 8016e30:	781b      	ldrb	r3, [r3, #0]
 8016e32:	2b00      	cmp	r3, #0
 8016e34:	d11f      	bne.n	8016e76 <dir_register+0x68>
 8016e36:	687b      	ldr	r3, [r7, #4]
 8016e38:	69da      	ldr	r2, [r3, #28]
 8016e3a:	197c      	adds	r4, r7, r5
 8016e3c:	68bb      	ldr	r3, [r7, #8]
 8016e3e:	0011      	movs	r1, r2
 8016e40:	0018      	movs	r0, r3
 8016e42:	f7ff f951 	bl	80160e8 <move_window>
 8016e46:	0003      	movs	r3, r0
 8016e48:	7023      	strb	r3, [r4, #0]
 8016e4a:	197b      	adds	r3, r7, r5
 8016e4c:	781b      	ldrb	r3, [r3, #0]
 8016e4e:	2b00      	cmp	r3, #0
 8016e50:	d111      	bne.n	8016e76 <dir_register+0x68>
 8016e52:	687b      	ldr	r3, [r7, #4]
 8016e54:	6a1b      	ldr	r3, [r3, #32]
 8016e56:	2220      	movs	r2, #32
 8016e58:	2100      	movs	r1, #0
 8016e5a:	0018      	movs	r0, r3
 8016e5c:	f7fe ff3b 	bl	8015cd6 <mem_set>
 8016e60:	687b      	ldr	r3, [r7, #4]
 8016e62:	6a18      	ldr	r0, [r3, #32]
 8016e64:	687b      	ldr	r3, [r7, #4]
 8016e66:	3324      	adds	r3, #36	@ 0x24
 8016e68:	220b      	movs	r2, #11
 8016e6a:	0019      	movs	r1, r3
 8016e6c:	f7fe ff14 	bl	8015c98 <mem_cpy>
 8016e70:	68bb      	ldr	r3, [r7, #8]
 8016e72:	2201      	movs	r2, #1
 8016e74:	70da      	strb	r2, [r3, #3]
 8016e76:	230f      	movs	r3, #15
 8016e78:	18fb      	adds	r3, r7, r3
 8016e7a:	781b      	ldrb	r3, [r3, #0]
 8016e7c:	0018      	movs	r0, r3
 8016e7e:	46bd      	mov	sp, r7
 8016e80:	b004      	add	sp, #16
 8016e82:	bdb0      	pop	{r4, r5, r7, pc}

08016e84 <create_name>:
 8016e84:	b580      	push	{r7, lr}
 8016e86:	b088      	sub	sp, #32
 8016e88:	af00      	add	r7, sp, #0
 8016e8a:	6078      	str	r0, [r7, #4]
 8016e8c:	6039      	str	r1, [r7, #0]
 8016e8e:	683b      	ldr	r3, [r7, #0]
 8016e90:	681b      	ldr	r3, [r3, #0]
 8016e92:	60fb      	str	r3, [r7, #12]
 8016e94:	687b      	ldr	r3, [r7, #4]
 8016e96:	3324      	adds	r3, #36	@ 0x24
 8016e98:	60bb      	str	r3, [r7, #8]
 8016e9a:	68bb      	ldr	r3, [r7, #8]
 8016e9c:	220b      	movs	r2, #11
 8016e9e:	2120      	movs	r1, #32
 8016ea0:	0018      	movs	r0, r3
 8016ea2:	f7fe ff18 	bl	8015cd6 <mem_set>
 8016ea6:	2300      	movs	r3, #0
 8016ea8:	613b      	str	r3, [r7, #16]
 8016eaa:	693b      	ldr	r3, [r7, #16]
 8016eac:	61fb      	str	r3, [r7, #28]
 8016eae:	2308      	movs	r3, #8
 8016eb0:	617b      	str	r3, [r7, #20]
 8016eb2:	69fb      	ldr	r3, [r7, #28]
 8016eb4:	1c5a      	adds	r2, r3, #1
 8016eb6:	61fa      	str	r2, [r7, #28]
 8016eb8:	68fa      	ldr	r2, [r7, #12]
 8016eba:	18d2      	adds	r2, r2, r3
 8016ebc:	211b      	movs	r1, #27
 8016ebe:	187b      	adds	r3, r7, r1
 8016ec0:	7812      	ldrb	r2, [r2, #0]
 8016ec2:	701a      	strb	r2, [r3, #0]
 8016ec4:	000a      	movs	r2, r1
 8016ec6:	18bb      	adds	r3, r7, r2
 8016ec8:	781b      	ldrb	r3, [r3, #0]
 8016eca:	2b20      	cmp	r3, #32
 8016ecc:	d800      	bhi.n	8016ed0 <create_name+0x4c>
 8016ece:	e062      	b.n	8016f96 <create_name+0x112>
 8016ed0:	18bb      	adds	r3, r7, r2
 8016ed2:	781b      	ldrb	r3, [r3, #0]
 8016ed4:	2b2f      	cmp	r3, #47	@ 0x2f
 8016ed6:	d007      	beq.n	8016ee8 <create_name+0x64>
 8016ed8:	18bb      	adds	r3, r7, r2
 8016eda:	781b      	ldrb	r3, [r3, #0]
 8016edc:	2b5c      	cmp	r3, #92	@ 0x5c
 8016ede:	d110      	bne.n	8016f02 <create_name+0x7e>
 8016ee0:	e002      	b.n	8016ee8 <create_name+0x64>
 8016ee2:	69fb      	ldr	r3, [r7, #28]
 8016ee4:	3301      	adds	r3, #1
 8016ee6:	61fb      	str	r3, [r7, #28]
 8016ee8:	68fa      	ldr	r2, [r7, #12]
 8016eea:	69fb      	ldr	r3, [r7, #28]
 8016eec:	18d3      	adds	r3, r2, r3
 8016eee:	781b      	ldrb	r3, [r3, #0]
 8016ef0:	2b2f      	cmp	r3, #47	@ 0x2f
 8016ef2:	d0f6      	beq.n	8016ee2 <create_name+0x5e>
 8016ef4:	68fa      	ldr	r2, [r7, #12]
 8016ef6:	69fb      	ldr	r3, [r7, #28]
 8016ef8:	18d3      	adds	r3, r2, r3
 8016efa:	781b      	ldrb	r3, [r3, #0]
 8016efc:	2b5c      	cmp	r3, #92	@ 0x5c
 8016efe:	d0f0      	beq.n	8016ee2 <create_name+0x5e>
 8016f00:	e04a      	b.n	8016f98 <create_name+0x114>
 8016f02:	231b      	movs	r3, #27
 8016f04:	18fb      	adds	r3, r7, r3
 8016f06:	781b      	ldrb	r3, [r3, #0]
 8016f08:	2b2e      	cmp	r3, #46	@ 0x2e
 8016f0a:	d003      	beq.n	8016f14 <create_name+0x90>
 8016f0c:	693a      	ldr	r2, [r7, #16]
 8016f0e:	697b      	ldr	r3, [r7, #20]
 8016f10:	429a      	cmp	r2, r3
 8016f12:	d30e      	bcc.n	8016f32 <create_name+0xae>
 8016f14:	697b      	ldr	r3, [r7, #20]
 8016f16:	2b0b      	cmp	r3, #11
 8016f18:	d004      	beq.n	8016f24 <create_name+0xa0>
 8016f1a:	231b      	movs	r3, #27
 8016f1c:	18fb      	adds	r3, r7, r3
 8016f1e:	781b      	ldrb	r3, [r3, #0]
 8016f20:	2b2e      	cmp	r3, #46	@ 0x2e
 8016f22:	d001      	beq.n	8016f28 <create_name+0xa4>
 8016f24:	2306      	movs	r3, #6
 8016f26:	e054      	b.n	8016fd2 <create_name+0x14e>
 8016f28:	2308      	movs	r3, #8
 8016f2a:	613b      	str	r3, [r7, #16]
 8016f2c:	230b      	movs	r3, #11
 8016f2e:	617b      	str	r3, [r7, #20]
 8016f30:	e030      	b.n	8016f94 <create_name+0x110>
 8016f32:	211b      	movs	r1, #27
 8016f34:	187b      	adds	r3, r7, r1
 8016f36:	781b      	ldrb	r3, [r3, #0]
 8016f38:	b25b      	sxtb	r3, r3
 8016f3a:	2b00      	cmp	r3, #0
 8016f3c:	da07      	bge.n	8016f4e <create_name+0xca>
 8016f3e:	187b      	adds	r3, r7, r1
 8016f40:	781b      	ldrb	r3, [r3, #0]
 8016f42:	3b80      	subs	r3, #128	@ 0x80
 8016f44:	001a      	movs	r2, r3
 8016f46:	187b      	adds	r3, r7, r1
 8016f48:	4924      	ldr	r1, [pc, #144]	@ (8016fdc <create_name+0x158>)
 8016f4a:	5c8a      	ldrb	r2, [r1, r2]
 8016f4c:	701a      	strb	r2, [r3, #0]
 8016f4e:	231b      	movs	r3, #27
 8016f50:	18fb      	adds	r3, r7, r3
 8016f52:	781a      	ldrb	r2, [r3, #0]
 8016f54:	4b22      	ldr	r3, [pc, #136]	@ (8016fe0 <create_name+0x15c>)
 8016f56:	0011      	movs	r1, r2
 8016f58:	0018      	movs	r0, r3
 8016f5a:	f7fe fefa 	bl	8015d52 <chk_chr>
 8016f5e:	1e03      	subs	r3, r0, #0
 8016f60:	d001      	beq.n	8016f66 <create_name+0xe2>
 8016f62:	2306      	movs	r3, #6
 8016f64:	e035      	b.n	8016fd2 <create_name+0x14e>
 8016f66:	221b      	movs	r2, #27
 8016f68:	18bb      	adds	r3, r7, r2
 8016f6a:	781b      	ldrb	r3, [r3, #0]
 8016f6c:	2b60      	cmp	r3, #96	@ 0x60
 8016f6e:	d908      	bls.n	8016f82 <create_name+0xfe>
 8016f70:	18bb      	adds	r3, r7, r2
 8016f72:	781b      	ldrb	r3, [r3, #0]
 8016f74:	2b7a      	cmp	r3, #122	@ 0x7a
 8016f76:	d804      	bhi.n	8016f82 <create_name+0xfe>
 8016f78:	18bb      	adds	r3, r7, r2
 8016f7a:	18ba      	adds	r2, r7, r2
 8016f7c:	7812      	ldrb	r2, [r2, #0]
 8016f7e:	3a20      	subs	r2, #32
 8016f80:	701a      	strb	r2, [r3, #0]
 8016f82:	693b      	ldr	r3, [r7, #16]
 8016f84:	1c5a      	adds	r2, r3, #1
 8016f86:	613a      	str	r2, [r7, #16]
 8016f88:	68ba      	ldr	r2, [r7, #8]
 8016f8a:	18d3      	adds	r3, r2, r3
 8016f8c:	221b      	movs	r2, #27
 8016f8e:	18ba      	adds	r2, r7, r2
 8016f90:	7812      	ldrb	r2, [r2, #0]
 8016f92:	701a      	strb	r2, [r3, #0]
 8016f94:	e78d      	b.n	8016eb2 <create_name+0x2e>
 8016f96:	46c0      	nop			@ (mov r8, r8)
 8016f98:	68fa      	ldr	r2, [r7, #12]
 8016f9a:	69fb      	ldr	r3, [r7, #28]
 8016f9c:	18d2      	adds	r2, r2, r3
 8016f9e:	683b      	ldr	r3, [r7, #0]
 8016fa0:	601a      	str	r2, [r3, #0]
 8016fa2:	693b      	ldr	r3, [r7, #16]
 8016fa4:	2b00      	cmp	r3, #0
 8016fa6:	d101      	bne.n	8016fac <create_name+0x128>
 8016fa8:	2306      	movs	r3, #6
 8016faa:	e012      	b.n	8016fd2 <create_name+0x14e>
 8016fac:	68bb      	ldr	r3, [r7, #8]
 8016fae:	781b      	ldrb	r3, [r3, #0]
 8016fb0:	2be5      	cmp	r3, #229	@ 0xe5
 8016fb2:	d102      	bne.n	8016fba <create_name+0x136>
 8016fb4:	68bb      	ldr	r3, [r7, #8]
 8016fb6:	2205      	movs	r2, #5
 8016fb8:	701a      	strb	r2, [r3, #0]
 8016fba:	231b      	movs	r3, #27
 8016fbc:	18fb      	adds	r3, r7, r3
 8016fbe:	781b      	ldrb	r3, [r3, #0]
 8016fc0:	2b20      	cmp	r3, #32
 8016fc2:	d801      	bhi.n	8016fc8 <create_name+0x144>
 8016fc4:	2204      	movs	r2, #4
 8016fc6:	e000      	b.n	8016fca <create_name+0x146>
 8016fc8:	2200      	movs	r2, #0
 8016fca:	68bb      	ldr	r3, [r7, #8]
 8016fcc:	330b      	adds	r3, #11
 8016fce:	701a      	strb	r2, [r3, #0]
 8016fd0:	2300      	movs	r3, #0
 8016fd2:	0018      	movs	r0, r3
 8016fd4:	46bd      	mov	sp, r7
 8016fd6:	b008      	add	sp, #32
 8016fd8:	bd80      	pop	{r7, pc}
 8016fda:	46c0      	nop			@ (mov r8, r8)
 8016fdc:	08019fcc 	.word	0x08019fcc
 8016fe0:	08019da0 	.word	0x08019da0

08016fe4 <follow_path>:
 8016fe4:	b5b0      	push	{r4, r5, r7, lr}
 8016fe6:	b086      	sub	sp, #24
 8016fe8:	af00      	add	r7, sp, #0
 8016fea:	6078      	str	r0, [r7, #4]
 8016fec:	6039      	str	r1, [r7, #0]
 8016fee:	687b      	ldr	r3, [r7, #4]
 8016ff0:	613b      	str	r3, [r7, #16]
 8016ff2:	693b      	ldr	r3, [r7, #16]
 8016ff4:	681b      	ldr	r3, [r3, #0]
 8016ff6:	60fb      	str	r3, [r7, #12]
 8016ff8:	e002      	b.n	8017000 <follow_path+0x1c>
 8016ffa:	683b      	ldr	r3, [r7, #0]
 8016ffc:	3301      	adds	r3, #1
 8016ffe:	603b      	str	r3, [r7, #0]
 8017000:	683b      	ldr	r3, [r7, #0]
 8017002:	781b      	ldrb	r3, [r3, #0]
 8017004:	2b2f      	cmp	r3, #47	@ 0x2f
 8017006:	d0f8      	beq.n	8016ffa <follow_path+0x16>
 8017008:	683b      	ldr	r3, [r7, #0]
 801700a:	781b      	ldrb	r3, [r3, #0]
 801700c:	2b5c      	cmp	r3, #92	@ 0x5c
 801700e:	d0f4      	beq.n	8016ffa <follow_path+0x16>
 8017010:	693b      	ldr	r3, [r7, #16]
 8017012:	2200      	movs	r2, #0
 8017014:	609a      	str	r2, [r3, #8]
 8017016:	683b      	ldr	r3, [r7, #0]
 8017018:	781b      	ldrb	r3, [r3, #0]
 801701a:	2b1f      	cmp	r3, #31
 801701c:	d80d      	bhi.n	801703a <follow_path+0x56>
 801701e:	687b      	ldr	r3, [r7, #4]
 8017020:	222f      	movs	r2, #47	@ 0x2f
 8017022:	2180      	movs	r1, #128	@ 0x80
 8017024:	5499      	strb	r1, [r3, r2]
 8017026:	2317      	movs	r3, #23
 8017028:	18fc      	adds	r4, r7, r3
 801702a:	687b      	ldr	r3, [r7, #4]
 801702c:	2100      	movs	r1, #0
 801702e:	0018      	movs	r0, r3
 8017030:	f7ff fc86 	bl	8016940 <dir_sdi>
 8017034:	0003      	movs	r3, r0
 8017036:	7023      	strb	r3, [r4, #0]
 8017038:	e057      	b.n	80170ea <follow_path+0x106>
 801703a:	2517      	movs	r5, #23
 801703c:	197c      	adds	r4, r7, r5
 801703e:	003a      	movs	r2, r7
 8017040:	687b      	ldr	r3, [r7, #4]
 8017042:	0011      	movs	r1, r2
 8017044:	0018      	movs	r0, r3
 8017046:	f7ff ff1d 	bl	8016e84 <create_name>
 801704a:	0003      	movs	r3, r0
 801704c:	7023      	strb	r3, [r4, #0]
 801704e:	197b      	adds	r3, r7, r5
 8017050:	781b      	ldrb	r3, [r3, #0]
 8017052:	2b00      	cmp	r3, #0
 8017054:	d144      	bne.n	80170e0 <follow_path+0xfc>
 8017056:	197c      	adds	r4, r7, r5
 8017058:	687b      	ldr	r3, [r7, #4]
 801705a:	0018      	movs	r0, r3
 801705c:	f7ff fe6f 	bl	8016d3e <dir_find>
 8017060:	0003      	movs	r3, r0
 8017062:	7023      	strb	r3, [r4, #0]
 8017064:	200b      	movs	r0, #11
 8017066:	183b      	adds	r3, r7, r0
 8017068:	687a      	ldr	r2, [r7, #4]
 801706a:	212f      	movs	r1, #47	@ 0x2f
 801706c:	5c52      	ldrb	r2, [r2, r1]
 801706e:	701a      	strb	r2, [r3, #0]
 8017070:	197b      	adds	r3, r7, r5
 8017072:	781b      	ldrb	r3, [r3, #0]
 8017074:	2b00      	cmp	r3, #0
 8017076:	d00c      	beq.n	8017092 <follow_path+0xae>
 8017078:	197b      	adds	r3, r7, r5
 801707a:	781b      	ldrb	r3, [r3, #0]
 801707c:	2b04      	cmp	r3, #4
 801707e:	d131      	bne.n	80170e4 <follow_path+0x100>
 8017080:	183b      	adds	r3, r7, r0
 8017082:	781b      	ldrb	r3, [r3, #0]
 8017084:	2204      	movs	r2, #4
 8017086:	4013      	ands	r3, r2
 8017088:	d12c      	bne.n	80170e4 <follow_path+0x100>
 801708a:	197b      	adds	r3, r7, r5
 801708c:	2205      	movs	r2, #5
 801708e:	701a      	strb	r2, [r3, #0]
 8017090:	e028      	b.n	80170e4 <follow_path+0x100>
 8017092:	230b      	movs	r3, #11
 8017094:	18fb      	adds	r3, r7, r3
 8017096:	781b      	ldrb	r3, [r3, #0]
 8017098:	2204      	movs	r2, #4
 801709a:	4013      	ands	r3, r2
 801709c:	d124      	bne.n	80170e8 <follow_path+0x104>
 801709e:	693b      	ldr	r3, [r7, #16]
 80170a0:	799b      	ldrb	r3, [r3, #6]
 80170a2:	001a      	movs	r2, r3
 80170a4:	2310      	movs	r3, #16
 80170a6:	4013      	ands	r3, r2
 80170a8:	d104      	bne.n	80170b4 <follow_path+0xd0>
 80170aa:	2317      	movs	r3, #23
 80170ac:	18fb      	adds	r3, r7, r3
 80170ae:	2205      	movs	r2, #5
 80170b0:	701a      	strb	r2, [r3, #0]
 80170b2:	e01a      	b.n	80170ea <follow_path+0x106>
 80170b4:	68fb      	ldr	r3, [r7, #12]
 80170b6:	3334      	adds	r3, #52	@ 0x34
 80170b8:	001c      	movs	r4, r3
 80170ba:	687b      	ldr	r3, [r7, #4]
 80170bc:	695a      	ldr	r2, [r3, #20]
 80170be:	68fb      	ldr	r3, [r7, #12]
 80170c0:	899b      	ldrh	r3, [r3, #12]
 80170c2:	0019      	movs	r1, r3
 80170c4:	0010      	movs	r0, r2
 80170c6:	f7e9 f8b5 	bl	8000234 <__aeabi_uidivmod>
 80170ca:	000b      	movs	r3, r1
 80170cc:	18e2      	adds	r2, r4, r3
 80170ce:	68fb      	ldr	r3, [r7, #12]
 80170d0:	0011      	movs	r1, r2
 80170d2:	0018      	movs	r0, r3
 80170d4:	f7ff fdf4 	bl	8016cc0 <ld_clust>
 80170d8:	0002      	movs	r2, r0
 80170da:	693b      	ldr	r3, [r7, #16]
 80170dc:	609a      	str	r2, [r3, #8]
 80170de:	e7ac      	b.n	801703a <follow_path+0x56>
 80170e0:	46c0      	nop			@ (mov r8, r8)
 80170e2:	e002      	b.n	80170ea <follow_path+0x106>
 80170e4:	46c0      	nop			@ (mov r8, r8)
 80170e6:	e000      	b.n	80170ea <follow_path+0x106>
 80170e8:	46c0      	nop			@ (mov r8, r8)
 80170ea:	2317      	movs	r3, #23
 80170ec:	18fb      	adds	r3, r7, r3
 80170ee:	781b      	ldrb	r3, [r3, #0]
 80170f0:	0018      	movs	r0, r3
 80170f2:	46bd      	mov	sp, r7
 80170f4:	b006      	add	sp, #24
 80170f6:	bdb0      	pop	{r4, r5, r7, pc}

080170f8 <get_ldnumber>:
 80170f8:	b580      	push	{r7, lr}
 80170fa:	b086      	sub	sp, #24
 80170fc:	af00      	add	r7, sp, #0
 80170fe:	6078      	str	r0, [r7, #4]
 8017100:	2301      	movs	r3, #1
 8017102:	425b      	negs	r3, r3
 8017104:	613b      	str	r3, [r7, #16]
 8017106:	687b      	ldr	r3, [r7, #4]
 8017108:	681b      	ldr	r3, [r3, #0]
 801710a:	2b00      	cmp	r3, #0
 801710c:	d031      	beq.n	8017172 <get_ldnumber+0x7a>
 801710e:	687b      	ldr	r3, [r7, #4]
 8017110:	681b      	ldr	r3, [r3, #0]
 8017112:	617b      	str	r3, [r7, #20]
 8017114:	e002      	b.n	801711c <get_ldnumber+0x24>
 8017116:	697b      	ldr	r3, [r7, #20]
 8017118:	3301      	adds	r3, #1
 801711a:	617b      	str	r3, [r7, #20]
 801711c:	697b      	ldr	r3, [r7, #20]
 801711e:	781b      	ldrb	r3, [r3, #0]
 8017120:	2b20      	cmp	r3, #32
 8017122:	d903      	bls.n	801712c <get_ldnumber+0x34>
 8017124:	697b      	ldr	r3, [r7, #20]
 8017126:	781b      	ldrb	r3, [r3, #0]
 8017128:	2b3a      	cmp	r3, #58	@ 0x3a
 801712a:	d1f4      	bne.n	8017116 <get_ldnumber+0x1e>
 801712c:	697b      	ldr	r3, [r7, #20]
 801712e:	781b      	ldrb	r3, [r3, #0]
 8017130:	2b3a      	cmp	r3, #58	@ 0x3a
 8017132:	d11c      	bne.n	801716e <get_ldnumber+0x76>
 8017134:	687b      	ldr	r3, [r7, #4]
 8017136:	681b      	ldr	r3, [r3, #0]
 8017138:	60fb      	str	r3, [r7, #12]
 801713a:	68fb      	ldr	r3, [r7, #12]
 801713c:	1c5a      	adds	r2, r3, #1
 801713e:	60fa      	str	r2, [r7, #12]
 8017140:	781b      	ldrb	r3, [r3, #0]
 8017142:	3b30      	subs	r3, #48	@ 0x30
 8017144:	60bb      	str	r3, [r7, #8]
 8017146:	68bb      	ldr	r3, [r7, #8]
 8017148:	2b09      	cmp	r3, #9
 801714a:	d80e      	bhi.n	801716a <get_ldnumber+0x72>
 801714c:	68fa      	ldr	r2, [r7, #12]
 801714e:	697b      	ldr	r3, [r7, #20]
 8017150:	429a      	cmp	r2, r3
 8017152:	d10a      	bne.n	801716a <get_ldnumber+0x72>
 8017154:	68bb      	ldr	r3, [r7, #8]
 8017156:	2b00      	cmp	r3, #0
 8017158:	d107      	bne.n	801716a <get_ldnumber+0x72>
 801715a:	68bb      	ldr	r3, [r7, #8]
 801715c:	613b      	str	r3, [r7, #16]
 801715e:	697b      	ldr	r3, [r7, #20]
 8017160:	3301      	adds	r3, #1
 8017162:	617b      	str	r3, [r7, #20]
 8017164:	687b      	ldr	r3, [r7, #4]
 8017166:	697a      	ldr	r2, [r7, #20]
 8017168:	601a      	str	r2, [r3, #0]
 801716a:	693b      	ldr	r3, [r7, #16]
 801716c:	e002      	b.n	8017174 <get_ldnumber+0x7c>
 801716e:	2300      	movs	r3, #0
 8017170:	613b      	str	r3, [r7, #16]
 8017172:	693b      	ldr	r3, [r7, #16]
 8017174:	0018      	movs	r0, r3
 8017176:	46bd      	mov	sp, r7
 8017178:	b006      	add	sp, #24
 801717a:	bd80      	pop	{r7, pc}

0801717c <check_fs>:
 801717c:	b580      	push	{r7, lr}
 801717e:	b082      	sub	sp, #8
 8017180:	af00      	add	r7, sp, #0
 8017182:	6078      	str	r0, [r7, #4]
 8017184:	6039      	str	r1, [r7, #0]
 8017186:	687b      	ldr	r3, [r7, #4]
 8017188:	2200      	movs	r2, #0
 801718a:	70da      	strb	r2, [r3, #3]
 801718c:	687b      	ldr	r3, [r7, #4]
 801718e:	2201      	movs	r2, #1
 8017190:	4252      	negs	r2, r2
 8017192:	631a      	str	r2, [r3, #48]	@ 0x30
 8017194:	683a      	ldr	r2, [r7, #0]
 8017196:	687b      	ldr	r3, [r7, #4]
 8017198:	0011      	movs	r1, r2
 801719a:	0018      	movs	r0, r3
 801719c:	f7fe ffa4 	bl	80160e8 <move_window>
 80171a0:	1e03      	subs	r3, r0, #0
 80171a2:	d001      	beq.n	80171a8 <check_fs+0x2c>
 80171a4:	2304      	movs	r3, #4
 80171a6:	e037      	b.n	8017218 <check_fs+0x9c>
 80171a8:	687b      	ldr	r3, [r7, #4]
 80171aa:	3334      	adds	r3, #52	@ 0x34
 80171ac:	33ff      	adds	r3, #255	@ 0xff
 80171ae:	33ff      	adds	r3, #255	@ 0xff
 80171b0:	0018      	movs	r0, r3
 80171b2:	f7fe fced 	bl	8015b90 <ld_word>
 80171b6:	0003      	movs	r3, r0
 80171b8:	001a      	movs	r2, r3
 80171ba:	4b19      	ldr	r3, [pc, #100]	@ (8017220 <check_fs+0xa4>)
 80171bc:	429a      	cmp	r2, r3
 80171be:	d001      	beq.n	80171c4 <check_fs+0x48>
 80171c0:	2303      	movs	r3, #3
 80171c2:	e029      	b.n	8017218 <check_fs+0x9c>
 80171c4:	687b      	ldr	r3, [r7, #4]
 80171c6:	2234      	movs	r2, #52	@ 0x34
 80171c8:	5c9b      	ldrb	r3, [r3, r2]
 80171ca:	2be9      	cmp	r3, #233	@ 0xe9
 80171cc:	d009      	beq.n	80171e2 <check_fs+0x66>
 80171ce:	687b      	ldr	r3, [r7, #4]
 80171d0:	2234      	movs	r2, #52	@ 0x34
 80171d2:	5c9b      	ldrb	r3, [r3, r2]
 80171d4:	2beb      	cmp	r3, #235	@ 0xeb
 80171d6:	d11e      	bne.n	8017216 <check_fs+0x9a>
 80171d8:	687b      	ldr	r3, [r7, #4]
 80171da:	2236      	movs	r2, #54	@ 0x36
 80171dc:	5c9b      	ldrb	r3, [r3, r2]
 80171de:	2b90      	cmp	r3, #144	@ 0x90
 80171e0:	d119      	bne.n	8017216 <check_fs+0x9a>
 80171e2:	687b      	ldr	r3, [r7, #4]
 80171e4:	3334      	adds	r3, #52	@ 0x34
 80171e6:	3336      	adds	r3, #54	@ 0x36
 80171e8:	0018      	movs	r0, r3
 80171ea:	f7fe fcec 	bl	8015bc6 <ld_dword>
 80171ee:	0003      	movs	r3, r0
 80171f0:	021b      	lsls	r3, r3, #8
 80171f2:	0a1b      	lsrs	r3, r3, #8
 80171f4:	4a0b      	ldr	r2, [pc, #44]	@ (8017224 <check_fs+0xa8>)
 80171f6:	4293      	cmp	r3, r2
 80171f8:	d101      	bne.n	80171fe <check_fs+0x82>
 80171fa:	2300      	movs	r3, #0
 80171fc:	e00c      	b.n	8017218 <check_fs+0x9c>
 80171fe:	687b      	ldr	r3, [r7, #4]
 8017200:	3334      	adds	r3, #52	@ 0x34
 8017202:	3352      	adds	r3, #82	@ 0x52
 8017204:	0018      	movs	r0, r3
 8017206:	f7fe fcde 	bl	8015bc6 <ld_dword>
 801720a:	0003      	movs	r3, r0
 801720c:	4a06      	ldr	r2, [pc, #24]	@ (8017228 <check_fs+0xac>)
 801720e:	4293      	cmp	r3, r2
 8017210:	d101      	bne.n	8017216 <check_fs+0x9a>
 8017212:	2300      	movs	r3, #0
 8017214:	e000      	b.n	8017218 <check_fs+0x9c>
 8017216:	2302      	movs	r3, #2
 8017218:	0018      	movs	r0, r3
 801721a:	46bd      	mov	sp, r7
 801721c:	b002      	add	sp, #8
 801721e:	bd80      	pop	{r7, pc}
 8017220:	0000aa55 	.word	0x0000aa55
 8017224:	00544146 	.word	0x00544146
 8017228:	33544146 	.word	0x33544146

0801722c <find_volume>:
 801722c:	b5b0      	push	{r4, r5, r7, lr}
 801722e:	b096      	sub	sp, #88	@ 0x58
 8017230:	af00      	add	r7, sp, #0
 8017232:	60f8      	str	r0, [r7, #12]
 8017234:	60b9      	str	r1, [r7, #8]
 8017236:	1dfb      	adds	r3, r7, #7
 8017238:	701a      	strb	r2, [r3, #0]
 801723a:	68bb      	ldr	r3, [r7, #8]
 801723c:	2200      	movs	r2, #0
 801723e:	601a      	str	r2, [r3, #0]
 8017240:	68fb      	ldr	r3, [r7, #12]
 8017242:	0018      	movs	r0, r3
 8017244:	f7ff ff58 	bl	80170f8 <get_ldnumber>
 8017248:	0003      	movs	r3, r0
 801724a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801724c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801724e:	2b00      	cmp	r3, #0
 8017250:	da01      	bge.n	8017256 <find_volume+0x2a>
 8017252:	230b      	movs	r3, #11
 8017254:	e280      	b.n	8017758 <find_volume+0x52c>
 8017256:	4bc2      	ldr	r3, [pc, #776]	@ (8017560 <find_volume+0x334>)
 8017258:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 801725a:	0092      	lsls	r2, r2, #2
 801725c:	58d3      	ldr	r3, [r2, r3]
 801725e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8017260:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017262:	2b00      	cmp	r3, #0
 8017264:	d101      	bne.n	801726a <find_volume+0x3e>
 8017266:	230c      	movs	r3, #12
 8017268:	e276      	b.n	8017758 <find_volume+0x52c>
 801726a:	68bb      	ldr	r3, [r7, #8]
 801726c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 801726e:	601a      	str	r2, [r3, #0]
 8017270:	1dfb      	adds	r3, r7, #7
 8017272:	1dfa      	adds	r2, r7, #7
 8017274:	7812      	ldrb	r2, [r2, #0]
 8017276:	2101      	movs	r1, #1
 8017278:	438a      	bics	r2, r1
 801727a:	701a      	strb	r2, [r3, #0]
 801727c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801727e:	781b      	ldrb	r3, [r3, #0]
 8017280:	2b00      	cmp	r3, #0
 8017282:	d01b      	beq.n	80172bc <find_volume+0x90>
 8017284:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017286:	785b      	ldrb	r3, [r3, #1]
 8017288:	2537      	movs	r5, #55	@ 0x37
 801728a:	197c      	adds	r4, r7, r5
 801728c:	0018      	movs	r0, r3
 801728e:	f7fe fbb5 	bl	80159fc <disk_status>
 8017292:	0003      	movs	r3, r0
 8017294:	7023      	strb	r3, [r4, #0]
 8017296:	0029      	movs	r1, r5
 8017298:	187b      	adds	r3, r7, r1
 801729a:	781b      	ldrb	r3, [r3, #0]
 801729c:	2201      	movs	r2, #1
 801729e:	4013      	ands	r3, r2
 80172a0:	d10c      	bne.n	80172bc <find_volume+0x90>
 80172a2:	1dfb      	adds	r3, r7, #7
 80172a4:	781b      	ldrb	r3, [r3, #0]
 80172a6:	2b00      	cmp	r3, #0
 80172a8:	d006      	beq.n	80172b8 <find_volume+0x8c>
 80172aa:	187b      	adds	r3, r7, r1
 80172ac:	781b      	ldrb	r3, [r3, #0]
 80172ae:	2204      	movs	r2, #4
 80172b0:	4013      	ands	r3, r2
 80172b2:	d001      	beq.n	80172b8 <find_volume+0x8c>
 80172b4:	230a      	movs	r3, #10
 80172b6:	e24f      	b.n	8017758 <find_volume+0x52c>
 80172b8:	2300      	movs	r3, #0
 80172ba:	e24d      	b.n	8017758 <find_volume+0x52c>
 80172bc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80172be:	2200      	movs	r2, #0
 80172c0:	701a      	strb	r2, [r3, #0]
 80172c2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80172c4:	b2da      	uxtb	r2, r3
 80172c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80172c8:	705a      	strb	r2, [r3, #1]
 80172ca:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80172cc:	785b      	ldrb	r3, [r3, #1]
 80172ce:	2537      	movs	r5, #55	@ 0x37
 80172d0:	197c      	adds	r4, r7, r5
 80172d2:	0018      	movs	r0, r3
 80172d4:	f7fe fbb4 	bl	8015a40 <disk_initialize>
 80172d8:	0003      	movs	r3, r0
 80172da:	7023      	strb	r3, [r4, #0]
 80172dc:	197b      	adds	r3, r7, r5
 80172de:	781b      	ldrb	r3, [r3, #0]
 80172e0:	2201      	movs	r2, #1
 80172e2:	4013      	ands	r3, r2
 80172e4:	d001      	beq.n	80172ea <find_volume+0xbe>
 80172e6:	2303      	movs	r3, #3
 80172e8:	e236      	b.n	8017758 <find_volume+0x52c>
 80172ea:	1dfb      	adds	r3, r7, #7
 80172ec:	781b      	ldrb	r3, [r3, #0]
 80172ee:	2b00      	cmp	r3, #0
 80172f0:	d007      	beq.n	8017302 <find_volume+0xd6>
 80172f2:	2337      	movs	r3, #55	@ 0x37
 80172f4:	18fb      	adds	r3, r7, r3
 80172f6:	781b      	ldrb	r3, [r3, #0]
 80172f8:	2204      	movs	r2, #4
 80172fa:	4013      	ands	r3, r2
 80172fc:	d001      	beq.n	8017302 <find_volume+0xd6>
 80172fe:	230a      	movs	r3, #10
 8017300:	e22a      	b.n	8017758 <find_volume+0x52c>
 8017302:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017304:	7858      	ldrb	r0, [r3, #1]
 8017306:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017308:	330c      	adds	r3, #12
 801730a:	001a      	movs	r2, r3
 801730c:	2102      	movs	r1, #2
 801730e:	f7fe fc17 	bl	8015b40 <disk_ioctl>
 8017312:	1e03      	subs	r3, r0, #0
 8017314:	d001      	beq.n	801731a <find_volume+0xee>
 8017316:	2301      	movs	r3, #1
 8017318:	e21e      	b.n	8017758 <find_volume+0x52c>
 801731a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801731c:	899a      	ldrh	r2, [r3, #12]
 801731e:	2380      	movs	r3, #128	@ 0x80
 8017320:	015b      	lsls	r3, r3, #5
 8017322:	429a      	cmp	r2, r3
 8017324:	d80d      	bhi.n	8017342 <find_volume+0x116>
 8017326:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017328:	899a      	ldrh	r2, [r3, #12]
 801732a:	2380      	movs	r3, #128	@ 0x80
 801732c:	009b      	lsls	r3, r3, #2
 801732e:	429a      	cmp	r2, r3
 8017330:	d307      	bcc.n	8017342 <find_volume+0x116>
 8017332:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017334:	899b      	ldrh	r3, [r3, #12]
 8017336:	001a      	movs	r2, r3
 8017338:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801733a:	899b      	ldrh	r3, [r3, #12]
 801733c:	3b01      	subs	r3, #1
 801733e:	4013      	ands	r3, r2
 8017340:	d001      	beq.n	8017346 <find_volume+0x11a>
 8017342:	2301      	movs	r3, #1
 8017344:	e208      	b.n	8017758 <find_volume+0x52c>
 8017346:	2300      	movs	r3, #0
 8017348:	653b      	str	r3, [r7, #80]	@ 0x50
 801734a:	2557      	movs	r5, #87	@ 0x57
 801734c:	197c      	adds	r4, r7, r5
 801734e:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8017350:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017352:	0011      	movs	r1, r2
 8017354:	0018      	movs	r0, r3
 8017356:	f7ff ff11 	bl	801717c <check_fs>
 801735a:	0003      	movs	r3, r0
 801735c:	7023      	strb	r3, [r4, #0]
 801735e:	197b      	adds	r3, r7, r5
 8017360:	781b      	ldrb	r3, [r3, #0]
 8017362:	2b02      	cmp	r3, #2
 8017364:	d14b      	bne.n	80173fe <find_volume+0x1d2>
 8017366:	2300      	movs	r3, #0
 8017368:	643b      	str	r3, [r7, #64]	@ 0x40
 801736a:	e01d      	b.n	80173a8 <find_volume+0x17c>
 801736c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801736e:	3334      	adds	r3, #52	@ 0x34
 8017370:	001a      	movs	r2, r3
 8017372:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8017374:	011b      	lsls	r3, r3, #4
 8017376:	33bf      	adds	r3, #191	@ 0xbf
 8017378:	33ff      	adds	r3, #255	@ 0xff
 801737a:	18d3      	adds	r3, r2, r3
 801737c:	633b      	str	r3, [r7, #48]	@ 0x30
 801737e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017380:	3304      	adds	r3, #4
 8017382:	781b      	ldrb	r3, [r3, #0]
 8017384:	2b00      	cmp	r3, #0
 8017386:	d006      	beq.n	8017396 <find_volume+0x16a>
 8017388:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801738a:	3308      	adds	r3, #8
 801738c:	0018      	movs	r0, r3
 801738e:	f7fe fc1a 	bl	8015bc6 <ld_dword>
 8017392:	0003      	movs	r3, r0
 8017394:	e000      	b.n	8017398 <find_volume+0x16c>
 8017396:	2300      	movs	r3, #0
 8017398:	2214      	movs	r2, #20
 801739a:	18ba      	adds	r2, r7, r2
 801739c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 801739e:	0089      	lsls	r1, r1, #2
 80173a0:	508b      	str	r3, [r1, r2]
 80173a2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80173a4:	3301      	adds	r3, #1
 80173a6:	643b      	str	r3, [r7, #64]	@ 0x40
 80173a8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80173aa:	2b03      	cmp	r3, #3
 80173ac:	d9de      	bls.n	801736c <find_volume+0x140>
 80173ae:	2300      	movs	r3, #0
 80173b0:	643b      	str	r3, [r7, #64]	@ 0x40
 80173b2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80173b4:	2b00      	cmp	r3, #0
 80173b6:	d002      	beq.n	80173be <find_volume+0x192>
 80173b8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80173ba:	3b01      	subs	r3, #1
 80173bc:	643b      	str	r3, [r7, #64]	@ 0x40
 80173be:	2314      	movs	r3, #20
 80173c0:	18fb      	adds	r3, r7, r3
 80173c2:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80173c4:	0092      	lsls	r2, r2, #2
 80173c6:	58d3      	ldr	r3, [r2, r3]
 80173c8:	653b      	str	r3, [r7, #80]	@ 0x50
 80173ca:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80173cc:	2b00      	cmp	r3, #0
 80173ce:	d008      	beq.n	80173e2 <find_volume+0x1b6>
 80173d0:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 80173d2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80173d4:	0011      	movs	r1, r2
 80173d6:	0018      	movs	r0, r3
 80173d8:	f7ff fed0 	bl	801717c <check_fs>
 80173dc:	0003      	movs	r3, r0
 80173de:	001a      	movs	r2, r3
 80173e0:	e000      	b.n	80173e4 <find_volume+0x1b8>
 80173e2:	2203      	movs	r2, #3
 80173e4:	2157      	movs	r1, #87	@ 0x57
 80173e6:	187b      	adds	r3, r7, r1
 80173e8:	701a      	strb	r2, [r3, #0]
 80173ea:	187b      	adds	r3, r7, r1
 80173ec:	781b      	ldrb	r3, [r3, #0]
 80173ee:	2b01      	cmp	r3, #1
 80173f0:	d905      	bls.n	80173fe <find_volume+0x1d2>
 80173f2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80173f4:	3301      	adds	r3, #1
 80173f6:	643b      	str	r3, [r7, #64]	@ 0x40
 80173f8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80173fa:	2b03      	cmp	r3, #3
 80173fc:	d9df      	bls.n	80173be <find_volume+0x192>
 80173fe:	2357      	movs	r3, #87	@ 0x57
 8017400:	18fb      	adds	r3, r7, r3
 8017402:	781b      	ldrb	r3, [r3, #0]
 8017404:	2b04      	cmp	r3, #4
 8017406:	d101      	bne.n	801740c <find_volume+0x1e0>
 8017408:	2301      	movs	r3, #1
 801740a:	e1a5      	b.n	8017758 <find_volume+0x52c>
 801740c:	2357      	movs	r3, #87	@ 0x57
 801740e:	18fb      	adds	r3, r7, r3
 8017410:	781b      	ldrb	r3, [r3, #0]
 8017412:	2b01      	cmp	r3, #1
 8017414:	d901      	bls.n	801741a <find_volume+0x1ee>
 8017416:	230d      	movs	r3, #13
 8017418:	e19e      	b.n	8017758 <find_volume+0x52c>
 801741a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801741c:	3334      	adds	r3, #52	@ 0x34
 801741e:	330b      	adds	r3, #11
 8017420:	0018      	movs	r0, r3
 8017422:	f7fe fbb5 	bl	8015b90 <ld_word>
 8017426:	0003      	movs	r3, r0
 8017428:	001a      	movs	r2, r3
 801742a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801742c:	899b      	ldrh	r3, [r3, #12]
 801742e:	429a      	cmp	r2, r3
 8017430:	d001      	beq.n	8017436 <find_volume+0x20a>
 8017432:	230d      	movs	r3, #13
 8017434:	e190      	b.n	8017758 <find_volume+0x52c>
 8017436:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017438:	3334      	adds	r3, #52	@ 0x34
 801743a:	3316      	adds	r3, #22
 801743c:	0018      	movs	r0, r3
 801743e:	f7fe fba7 	bl	8015b90 <ld_word>
 8017442:	0003      	movs	r3, r0
 8017444:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8017446:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8017448:	2b00      	cmp	r3, #0
 801744a:	d107      	bne.n	801745c <find_volume+0x230>
 801744c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801744e:	3334      	adds	r3, #52	@ 0x34
 8017450:	3324      	adds	r3, #36	@ 0x24
 8017452:	0018      	movs	r0, r3
 8017454:	f7fe fbb7 	bl	8015bc6 <ld_dword>
 8017458:	0003      	movs	r3, r0
 801745a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 801745c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801745e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8017460:	61da      	str	r2, [r3, #28]
 8017462:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017464:	2244      	movs	r2, #68	@ 0x44
 8017466:	5c9a      	ldrb	r2, [r3, r2]
 8017468:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801746a:	709a      	strb	r2, [r3, #2]
 801746c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801746e:	789b      	ldrb	r3, [r3, #2]
 8017470:	2b01      	cmp	r3, #1
 8017472:	d005      	beq.n	8017480 <find_volume+0x254>
 8017474:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017476:	789b      	ldrb	r3, [r3, #2]
 8017478:	2b02      	cmp	r3, #2
 801747a:	d001      	beq.n	8017480 <find_volume+0x254>
 801747c:	230d      	movs	r3, #13
 801747e:	e16b      	b.n	8017758 <find_volume+0x52c>
 8017480:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017482:	789b      	ldrb	r3, [r3, #2]
 8017484:	001a      	movs	r2, r3
 8017486:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8017488:	4353      	muls	r3, r2
 801748a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 801748c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801748e:	2241      	movs	r2, #65	@ 0x41
 8017490:	5c9b      	ldrb	r3, [r3, r2]
 8017492:	001a      	movs	r2, r3
 8017494:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017496:	815a      	strh	r2, [r3, #10]
 8017498:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801749a:	895b      	ldrh	r3, [r3, #10]
 801749c:	2b00      	cmp	r3, #0
 801749e:	d007      	beq.n	80174b0 <find_volume+0x284>
 80174a0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80174a2:	895b      	ldrh	r3, [r3, #10]
 80174a4:	001a      	movs	r2, r3
 80174a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80174a8:	895b      	ldrh	r3, [r3, #10]
 80174aa:	3b01      	subs	r3, #1
 80174ac:	4013      	ands	r3, r2
 80174ae:	d001      	beq.n	80174b4 <find_volume+0x288>
 80174b0:	230d      	movs	r3, #13
 80174b2:	e151      	b.n	8017758 <find_volume+0x52c>
 80174b4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80174b6:	3334      	adds	r3, #52	@ 0x34
 80174b8:	3311      	adds	r3, #17
 80174ba:	0018      	movs	r0, r3
 80174bc:	f7fe fb68 	bl	8015b90 <ld_word>
 80174c0:	0003      	movs	r3, r0
 80174c2:	001a      	movs	r2, r3
 80174c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80174c6:	811a      	strh	r2, [r3, #8]
 80174c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80174ca:	891a      	ldrh	r2, [r3, #8]
 80174cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80174ce:	899b      	ldrh	r3, [r3, #12]
 80174d0:	095b      	lsrs	r3, r3, #5
 80174d2:	b29b      	uxth	r3, r3
 80174d4:	0019      	movs	r1, r3
 80174d6:	0010      	movs	r0, r2
 80174d8:	f7e8 feac 	bl	8000234 <__aeabi_uidivmod>
 80174dc:	000b      	movs	r3, r1
 80174de:	b29b      	uxth	r3, r3
 80174e0:	2b00      	cmp	r3, #0
 80174e2:	d001      	beq.n	80174e8 <find_volume+0x2bc>
 80174e4:	230d      	movs	r3, #13
 80174e6:	e137      	b.n	8017758 <find_volume+0x52c>
 80174e8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80174ea:	3334      	adds	r3, #52	@ 0x34
 80174ec:	3313      	adds	r3, #19
 80174ee:	0018      	movs	r0, r3
 80174f0:	f7fe fb4e 	bl	8015b90 <ld_word>
 80174f4:	0003      	movs	r3, r0
 80174f6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80174f8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80174fa:	2b00      	cmp	r3, #0
 80174fc:	d107      	bne.n	801750e <find_volume+0x2e2>
 80174fe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017500:	3334      	adds	r3, #52	@ 0x34
 8017502:	3320      	adds	r3, #32
 8017504:	0018      	movs	r0, r3
 8017506:	f7fe fb5e 	bl	8015bc6 <ld_dword>
 801750a:	0003      	movs	r3, r0
 801750c:	64bb      	str	r3, [r7, #72]	@ 0x48
 801750e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017510:	3334      	adds	r3, #52	@ 0x34
 8017512:	330e      	adds	r3, #14
 8017514:	252e      	movs	r5, #46	@ 0x2e
 8017516:	197c      	adds	r4, r7, r5
 8017518:	0018      	movs	r0, r3
 801751a:	f7fe fb39 	bl	8015b90 <ld_word>
 801751e:	0003      	movs	r3, r0
 8017520:	8023      	strh	r3, [r4, #0]
 8017522:	197b      	adds	r3, r7, r5
 8017524:	881b      	ldrh	r3, [r3, #0]
 8017526:	2b00      	cmp	r3, #0
 8017528:	d101      	bne.n	801752e <find_volume+0x302>
 801752a:	230d      	movs	r3, #13
 801752c:	e114      	b.n	8017758 <find_volume+0x52c>
 801752e:	232e      	movs	r3, #46	@ 0x2e
 8017530:	18fb      	adds	r3, r7, r3
 8017532:	881a      	ldrh	r2, [r3, #0]
 8017534:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8017536:	18d4      	adds	r4, r2, r3
 8017538:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801753a:	891a      	ldrh	r2, [r3, #8]
 801753c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801753e:	899b      	ldrh	r3, [r3, #12]
 8017540:	095b      	lsrs	r3, r3, #5
 8017542:	b29b      	uxth	r3, r3
 8017544:	0019      	movs	r1, r3
 8017546:	0010      	movs	r0, r2
 8017548:	f7e8 fdee 	bl	8000128 <__udivsi3>
 801754c:	0003      	movs	r3, r0
 801754e:	b29b      	uxth	r3, r3
 8017550:	18e3      	adds	r3, r4, r3
 8017552:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017554:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8017556:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017558:	429a      	cmp	r2, r3
 801755a:	d203      	bcs.n	8017564 <find_volume+0x338>
 801755c:	230d      	movs	r3, #13
 801755e:	e0fb      	b.n	8017758 <find_volume+0x52c>
 8017560:	20003480 	.word	0x20003480
 8017564:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8017566:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017568:	1ad2      	subs	r2, r2, r3
 801756a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801756c:	895b      	ldrh	r3, [r3, #10]
 801756e:	0019      	movs	r1, r3
 8017570:	0010      	movs	r0, r2
 8017572:	f7e8 fdd9 	bl	8000128 <__udivsi3>
 8017576:	0003      	movs	r3, r0
 8017578:	627b      	str	r3, [r7, #36]	@ 0x24
 801757a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801757c:	2b00      	cmp	r3, #0
 801757e:	d101      	bne.n	8017584 <find_volume+0x358>
 8017580:	230d      	movs	r3, #13
 8017582:	e0e9      	b.n	8017758 <find_volume+0x52c>
 8017584:	2157      	movs	r1, #87	@ 0x57
 8017586:	187b      	adds	r3, r7, r1
 8017588:	2203      	movs	r2, #3
 801758a:	701a      	strb	r2, [r3, #0]
 801758c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801758e:	4a74      	ldr	r2, [pc, #464]	@ (8017760 <find_volume+0x534>)
 8017590:	4293      	cmp	r3, r2
 8017592:	d802      	bhi.n	801759a <find_volume+0x36e>
 8017594:	187b      	adds	r3, r7, r1
 8017596:	2202      	movs	r2, #2
 8017598:	701a      	strb	r2, [r3, #0]
 801759a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801759c:	4a71      	ldr	r2, [pc, #452]	@ (8017764 <find_volume+0x538>)
 801759e:	4293      	cmp	r3, r2
 80175a0:	d803      	bhi.n	80175aa <find_volume+0x37e>
 80175a2:	2357      	movs	r3, #87	@ 0x57
 80175a4:	18fb      	adds	r3, r7, r3
 80175a6:	2201      	movs	r2, #1
 80175a8:	701a      	strb	r2, [r3, #0]
 80175aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80175ac:	1c9a      	adds	r2, r3, #2
 80175ae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80175b0:	619a      	str	r2, [r3, #24]
 80175b2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80175b4:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 80175b6:	621a      	str	r2, [r3, #32]
 80175b8:	232e      	movs	r3, #46	@ 0x2e
 80175ba:	18fb      	adds	r3, r7, r3
 80175bc:	881a      	ldrh	r2, [r3, #0]
 80175be:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80175c0:	18d2      	adds	r2, r2, r3
 80175c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80175c4:	625a      	str	r2, [r3, #36]	@ 0x24
 80175c6:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 80175c8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80175ca:	18d2      	adds	r2, r2, r3
 80175cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80175ce:	62da      	str	r2, [r3, #44]	@ 0x2c
 80175d0:	2357      	movs	r3, #87	@ 0x57
 80175d2:	18fb      	adds	r3, r7, r3
 80175d4:	781b      	ldrb	r3, [r3, #0]
 80175d6:	2b03      	cmp	r3, #3
 80175d8:	d11d      	bne.n	8017616 <find_volume+0x3ea>
 80175da:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80175dc:	3334      	adds	r3, #52	@ 0x34
 80175de:	332a      	adds	r3, #42	@ 0x2a
 80175e0:	0018      	movs	r0, r3
 80175e2:	f7fe fad5 	bl	8015b90 <ld_word>
 80175e6:	1e03      	subs	r3, r0, #0
 80175e8:	d001      	beq.n	80175ee <find_volume+0x3c2>
 80175ea:	230d      	movs	r3, #13
 80175ec:	e0b4      	b.n	8017758 <find_volume+0x52c>
 80175ee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80175f0:	891b      	ldrh	r3, [r3, #8]
 80175f2:	2b00      	cmp	r3, #0
 80175f4:	d001      	beq.n	80175fa <find_volume+0x3ce>
 80175f6:	230d      	movs	r3, #13
 80175f8:	e0ae      	b.n	8017758 <find_volume+0x52c>
 80175fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80175fc:	3334      	adds	r3, #52	@ 0x34
 80175fe:	332c      	adds	r3, #44	@ 0x2c
 8017600:	0018      	movs	r0, r3
 8017602:	f7fe fae0 	bl	8015bc6 <ld_dword>
 8017606:	0002      	movs	r2, r0
 8017608:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801760a:	629a      	str	r2, [r3, #40]	@ 0x28
 801760c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801760e:	699b      	ldr	r3, [r3, #24]
 8017610:	009b      	lsls	r3, r3, #2
 8017612:	647b      	str	r3, [r7, #68]	@ 0x44
 8017614:	e020      	b.n	8017658 <find_volume+0x42c>
 8017616:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017618:	891b      	ldrh	r3, [r3, #8]
 801761a:	2b00      	cmp	r3, #0
 801761c:	d101      	bne.n	8017622 <find_volume+0x3f6>
 801761e:	230d      	movs	r3, #13
 8017620:	e09a      	b.n	8017758 <find_volume+0x52c>
 8017622:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017624:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8017626:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8017628:	18d2      	adds	r2, r2, r3
 801762a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801762c:	629a      	str	r2, [r3, #40]	@ 0x28
 801762e:	2357      	movs	r3, #87	@ 0x57
 8017630:	18fb      	adds	r3, r7, r3
 8017632:	781b      	ldrb	r3, [r3, #0]
 8017634:	2b02      	cmp	r3, #2
 8017636:	d103      	bne.n	8017640 <find_volume+0x414>
 8017638:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801763a:	699b      	ldr	r3, [r3, #24]
 801763c:	005b      	lsls	r3, r3, #1
 801763e:	e00a      	b.n	8017656 <find_volume+0x42a>
 8017640:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017642:	699a      	ldr	r2, [r3, #24]
 8017644:	0013      	movs	r3, r2
 8017646:	005b      	lsls	r3, r3, #1
 8017648:	189b      	adds	r3, r3, r2
 801764a:	085a      	lsrs	r2, r3, #1
 801764c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801764e:	699b      	ldr	r3, [r3, #24]
 8017650:	2101      	movs	r1, #1
 8017652:	400b      	ands	r3, r1
 8017654:	18d3      	adds	r3, r2, r3
 8017656:	647b      	str	r3, [r7, #68]	@ 0x44
 8017658:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801765a:	69dc      	ldr	r4, [r3, #28]
 801765c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801765e:	899b      	ldrh	r3, [r3, #12]
 8017660:	001a      	movs	r2, r3
 8017662:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8017664:	18d3      	adds	r3, r2, r3
 8017666:	1e5a      	subs	r2, r3, #1
 8017668:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801766a:	899b      	ldrh	r3, [r3, #12]
 801766c:	0019      	movs	r1, r3
 801766e:	0010      	movs	r0, r2
 8017670:	f7e8 fd5a 	bl	8000128 <__udivsi3>
 8017674:	0003      	movs	r3, r0
 8017676:	429c      	cmp	r4, r3
 8017678:	d201      	bcs.n	801767e <find_volume+0x452>
 801767a:	230d      	movs	r3, #13
 801767c:	e06c      	b.n	8017758 <find_volume+0x52c>
 801767e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017680:	2201      	movs	r2, #1
 8017682:	4252      	negs	r2, r2
 8017684:	615a      	str	r2, [r3, #20]
 8017686:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017688:	695a      	ldr	r2, [r3, #20]
 801768a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801768c:	611a      	str	r2, [r3, #16]
 801768e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017690:	2280      	movs	r2, #128	@ 0x80
 8017692:	711a      	strb	r2, [r3, #4]
 8017694:	2357      	movs	r3, #87	@ 0x57
 8017696:	18fb      	adds	r3, r7, r3
 8017698:	781b      	ldrb	r3, [r3, #0]
 801769a:	2b03      	cmp	r3, #3
 801769c:	d148      	bne.n	8017730 <find_volume+0x504>
 801769e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80176a0:	3334      	adds	r3, #52	@ 0x34
 80176a2:	3330      	adds	r3, #48	@ 0x30
 80176a4:	0018      	movs	r0, r3
 80176a6:	f7fe fa73 	bl	8015b90 <ld_word>
 80176aa:	0003      	movs	r3, r0
 80176ac:	2b01      	cmp	r3, #1
 80176ae:	d13f      	bne.n	8017730 <find_volume+0x504>
 80176b0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80176b2:	1c5a      	adds	r2, r3, #1
 80176b4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80176b6:	0011      	movs	r1, r2
 80176b8:	0018      	movs	r0, r3
 80176ba:	f7fe fd15 	bl	80160e8 <move_window>
 80176be:	1e03      	subs	r3, r0, #0
 80176c0:	d136      	bne.n	8017730 <find_volume+0x504>
 80176c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80176c4:	2200      	movs	r2, #0
 80176c6:	711a      	strb	r2, [r3, #4]
 80176c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80176ca:	3334      	adds	r3, #52	@ 0x34
 80176cc:	33ff      	adds	r3, #255	@ 0xff
 80176ce:	33ff      	adds	r3, #255	@ 0xff
 80176d0:	0018      	movs	r0, r3
 80176d2:	f7fe fa5d 	bl	8015b90 <ld_word>
 80176d6:	0003      	movs	r3, r0
 80176d8:	001a      	movs	r2, r3
 80176da:	4b23      	ldr	r3, [pc, #140]	@ (8017768 <find_volume+0x53c>)
 80176dc:	429a      	cmp	r2, r3
 80176de:	d127      	bne.n	8017730 <find_volume+0x504>
 80176e0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80176e2:	3334      	adds	r3, #52	@ 0x34
 80176e4:	0018      	movs	r0, r3
 80176e6:	f7fe fa6e 	bl	8015bc6 <ld_dword>
 80176ea:	0003      	movs	r3, r0
 80176ec:	4a1f      	ldr	r2, [pc, #124]	@ (801776c <find_volume+0x540>)
 80176ee:	4293      	cmp	r3, r2
 80176f0:	d11e      	bne.n	8017730 <find_volume+0x504>
 80176f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80176f4:	3334      	adds	r3, #52	@ 0x34
 80176f6:	33e5      	adds	r3, #229	@ 0xe5
 80176f8:	33ff      	adds	r3, #255	@ 0xff
 80176fa:	0018      	movs	r0, r3
 80176fc:	f7fe fa63 	bl	8015bc6 <ld_dword>
 8017700:	0003      	movs	r3, r0
 8017702:	4a1b      	ldr	r2, [pc, #108]	@ (8017770 <find_volume+0x544>)
 8017704:	4293      	cmp	r3, r2
 8017706:	d113      	bne.n	8017730 <find_volume+0x504>
 8017708:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801770a:	3334      	adds	r3, #52	@ 0x34
 801770c:	33e9      	adds	r3, #233	@ 0xe9
 801770e:	33ff      	adds	r3, #255	@ 0xff
 8017710:	0018      	movs	r0, r3
 8017712:	f7fe fa58 	bl	8015bc6 <ld_dword>
 8017716:	0002      	movs	r2, r0
 8017718:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801771a:	615a      	str	r2, [r3, #20]
 801771c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801771e:	3334      	adds	r3, #52	@ 0x34
 8017720:	33ed      	adds	r3, #237	@ 0xed
 8017722:	33ff      	adds	r3, #255	@ 0xff
 8017724:	0018      	movs	r0, r3
 8017726:	f7fe fa4e 	bl	8015bc6 <ld_dword>
 801772a:	0002      	movs	r2, r0
 801772c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801772e:	611a      	str	r2, [r3, #16]
 8017730:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017732:	2257      	movs	r2, #87	@ 0x57
 8017734:	18ba      	adds	r2, r7, r2
 8017736:	7812      	ldrb	r2, [r2, #0]
 8017738:	701a      	strb	r2, [r3, #0]
 801773a:	4b0e      	ldr	r3, [pc, #56]	@ (8017774 <find_volume+0x548>)
 801773c:	881b      	ldrh	r3, [r3, #0]
 801773e:	3301      	adds	r3, #1
 8017740:	b29a      	uxth	r2, r3
 8017742:	4b0c      	ldr	r3, [pc, #48]	@ (8017774 <find_volume+0x548>)
 8017744:	801a      	strh	r2, [r3, #0]
 8017746:	4b0b      	ldr	r3, [pc, #44]	@ (8017774 <find_volume+0x548>)
 8017748:	881a      	ldrh	r2, [r3, #0]
 801774a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801774c:	80da      	strh	r2, [r3, #6]
 801774e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017750:	0018      	movs	r0, r3
 8017752:	f7fe fc61 	bl	8016018 <clear_lock>
 8017756:	2300      	movs	r3, #0
 8017758:	0018      	movs	r0, r3
 801775a:	46bd      	mov	sp, r7
 801775c:	b016      	add	sp, #88	@ 0x58
 801775e:	bdb0      	pop	{r4, r5, r7, pc}
 8017760:	0000fff5 	.word	0x0000fff5
 8017764:	00000ff5 	.word	0x00000ff5
 8017768:	0000aa55 	.word	0x0000aa55
 801776c:	41615252 	.word	0x41615252
 8017770:	61417272 	.word	0x61417272
 8017774:	20003484 	.word	0x20003484

08017778 <validate>:
 8017778:	b590      	push	{r4, r7, lr}
 801777a:	b085      	sub	sp, #20
 801777c:	af00      	add	r7, sp, #0
 801777e:	6078      	str	r0, [r7, #4]
 8017780:	6039      	str	r1, [r7, #0]
 8017782:	240f      	movs	r4, #15
 8017784:	193b      	adds	r3, r7, r4
 8017786:	2209      	movs	r2, #9
 8017788:	701a      	strb	r2, [r3, #0]
 801778a:	687b      	ldr	r3, [r7, #4]
 801778c:	2b00      	cmp	r3, #0
 801778e:	d01d      	beq.n	80177cc <validate+0x54>
 8017790:	687b      	ldr	r3, [r7, #4]
 8017792:	681b      	ldr	r3, [r3, #0]
 8017794:	2b00      	cmp	r3, #0
 8017796:	d019      	beq.n	80177cc <validate+0x54>
 8017798:	687b      	ldr	r3, [r7, #4]
 801779a:	681b      	ldr	r3, [r3, #0]
 801779c:	781b      	ldrb	r3, [r3, #0]
 801779e:	2b00      	cmp	r3, #0
 80177a0:	d014      	beq.n	80177cc <validate+0x54>
 80177a2:	687b      	ldr	r3, [r7, #4]
 80177a4:	889a      	ldrh	r2, [r3, #4]
 80177a6:	687b      	ldr	r3, [r7, #4]
 80177a8:	681b      	ldr	r3, [r3, #0]
 80177aa:	88db      	ldrh	r3, [r3, #6]
 80177ac:	429a      	cmp	r2, r3
 80177ae:	d10d      	bne.n	80177cc <validate+0x54>
 80177b0:	687b      	ldr	r3, [r7, #4]
 80177b2:	681b      	ldr	r3, [r3, #0]
 80177b4:	785b      	ldrb	r3, [r3, #1]
 80177b6:	0018      	movs	r0, r3
 80177b8:	f7fe f920 	bl	80159fc <disk_status>
 80177bc:	0003      	movs	r3, r0
 80177be:	001a      	movs	r2, r3
 80177c0:	2301      	movs	r3, #1
 80177c2:	4013      	ands	r3, r2
 80177c4:	d102      	bne.n	80177cc <validate+0x54>
 80177c6:	193b      	adds	r3, r7, r4
 80177c8:	2200      	movs	r2, #0
 80177ca:	701a      	strb	r2, [r3, #0]
 80177cc:	230f      	movs	r3, #15
 80177ce:	18fb      	adds	r3, r7, r3
 80177d0:	781b      	ldrb	r3, [r3, #0]
 80177d2:	2b00      	cmp	r3, #0
 80177d4:	d102      	bne.n	80177dc <validate+0x64>
 80177d6:	687b      	ldr	r3, [r7, #4]
 80177d8:	681a      	ldr	r2, [r3, #0]
 80177da:	e000      	b.n	80177de <validate+0x66>
 80177dc:	2200      	movs	r2, #0
 80177de:	683b      	ldr	r3, [r7, #0]
 80177e0:	601a      	str	r2, [r3, #0]
 80177e2:	230f      	movs	r3, #15
 80177e4:	18fb      	adds	r3, r7, r3
 80177e6:	781b      	ldrb	r3, [r3, #0]
 80177e8:	0018      	movs	r0, r3
 80177ea:	46bd      	mov	sp, r7
 80177ec:	b005      	add	sp, #20
 80177ee:	bd90      	pop	{r4, r7, pc}

080177f0 <f_mount>:
 80177f0:	b5b0      	push	{r4, r5, r7, lr}
 80177f2:	b088      	sub	sp, #32
 80177f4:	af00      	add	r7, sp, #0
 80177f6:	60f8      	str	r0, [r7, #12]
 80177f8:	60b9      	str	r1, [r7, #8]
 80177fa:	1dfb      	adds	r3, r7, #7
 80177fc:	701a      	strb	r2, [r3, #0]
 80177fe:	68bb      	ldr	r3, [r7, #8]
 8017800:	613b      	str	r3, [r7, #16]
 8017802:	2310      	movs	r3, #16
 8017804:	18fb      	adds	r3, r7, r3
 8017806:	0018      	movs	r0, r3
 8017808:	f7ff fc76 	bl	80170f8 <get_ldnumber>
 801780c:	0003      	movs	r3, r0
 801780e:	61fb      	str	r3, [r7, #28]
 8017810:	69fb      	ldr	r3, [r7, #28]
 8017812:	2b00      	cmp	r3, #0
 8017814:	da01      	bge.n	801781a <f_mount+0x2a>
 8017816:	230b      	movs	r3, #11
 8017818:	e030      	b.n	801787c <f_mount+0x8c>
 801781a:	4b1a      	ldr	r3, [pc, #104]	@ (8017884 <f_mount+0x94>)
 801781c:	69fa      	ldr	r2, [r7, #28]
 801781e:	0092      	lsls	r2, r2, #2
 8017820:	58d3      	ldr	r3, [r2, r3]
 8017822:	61bb      	str	r3, [r7, #24]
 8017824:	69bb      	ldr	r3, [r7, #24]
 8017826:	2b00      	cmp	r3, #0
 8017828:	d006      	beq.n	8017838 <f_mount+0x48>
 801782a:	69bb      	ldr	r3, [r7, #24]
 801782c:	0018      	movs	r0, r3
 801782e:	f7fe fbf3 	bl	8016018 <clear_lock>
 8017832:	69bb      	ldr	r3, [r7, #24]
 8017834:	2200      	movs	r2, #0
 8017836:	701a      	strb	r2, [r3, #0]
 8017838:	68fb      	ldr	r3, [r7, #12]
 801783a:	2b00      	cmp	r3, #0
 801783c:	d002      	beq.n	8017844 <f_mount+0x54>
 801783e:	68fb      	ldr	r3, [r7, #12]
 8017840:	2200      	movs	r2, #0
 8017842:	701a      	strb	r2, [r3, #0]
 8017844:	68f9      	ldr	r1, [r7, #12]
 8017846:	4b0f      	ldr	r3, [pc, #60]	@ (8017884 <f_mount+0x94>)
 8017848:	69fa      	ldr	r2, [r7, #28]
 801784a:	0092      	lsls	r2, r2, #2
 801784c:	50d1      	str	r1, [r2, r3]
 801784e:	68fb      	ldr	r3, [r7, #12]
 8017850:	2b00      	cmp	r3, #0
 8017852:	d003      	beq.n	801785c <f_mount+0x6c>
 8017854:	1dfb      	adds	r3, r7, #7
 8017856:	781b      	ldrb	r3, [r3, #0]
 8017858:	2b01      	cmp	r3, #1
 801785a:	d001      	beq.n	8017860 <f_mount+0x70>
 801785c:	2300      	movs	r3, #0
 801785e:	e00d      	b.n	801787c <f_mount+0x8c>
 8017860:	2517      	movs	r5, #23
 8017862:	197c      	adds	r4, r7, r5
 8017864:	230c      	movs	r3, #12
 8017866:	18f9      	adds	r1, r7, r3
 8017868:	2308      	movs	r3, #8
 801786a:	18fb      	adds	r3, r7, r3
 801786c:	2200      	movs	r2, #0
 801786e:	0018      	movs	r0, r3
 8017870:	f7ff fcdc 	bl	801722c <find_volume>
 8017874:	0003      	movs	r3, r0
 8017876:	7023      	strb	r3, [r4, #0]
 8017878:	197b      	adds	r3, r7, r5
 801787a:	781b      	ldrb	r3, [r3, #0]
 801787c:	0018      	movs	r0, r3
 801787e:	46bd      	mov	sp, r7
 8017880:	b008      	add	sp, #32
 8017882:	bdb0      	pop	{r4, r5, r7, pc}
 8017884:	20003480 	.word	0x20003480

08017888 <f_open>:
 8017888:	b5f0      	push	{r4, r5, r6, r7, lr}
 801788a:	b099      	sub	sp, #100	@ 0x64
 801788c:	af00      	add	r7, sp, #0
 801788e:	60f8      	str	r0, [r7, #12]
 8017890:	60b9      	str	r1, [r7, #8]
 8017892:	1dfb      	adds	r3, r7, #7
 8017894:	701a      	strb	r2, [r3, #0]
 8017896:	68fb      	ldr	r3, [r7, #12]
 8017898:	2b00      	cmp	r3, #0
 801789a:	d101      	bne.n	80178a0 <f_open+0x18>
 801789c:	2309      	movs	r3, #9
 801789e:	e1f4      	b.n	8017c8a <f_open+0x402>
 80178a0:	1dfb      	adds	r3, r7, #7
 80178a2:	1dfa      	adds	r2, r7, #7
 80178a4:	7812      	ldrb	r2, [r2, #0]
 80178a6:	213f      	movs	r1, #63	@ 0x3f
 80178a8:	400a      	ands	r2, r1
 80178aa:	701a      	strb	r2, [r3, #0]
 80178ac:	255f      	movs	r5, #95	@ 0x5f
 80178ae:	197c      	adds	r4, r7, r5
 80178b0:	1dfb      	adds	r3, r7, #7
 80178b2:	781a      	ldrb	r2, [r3, #0]
 80178b4:	2310      	movs	r3, #16
 80178b6:	18f9      	adds	r1, r7, r3
 80178b8:	2308      	movs	r3, #8
 80178ba:	18fb      	adds	r3, r7, r3
 80178bc:	0018      	movs	r0, r3
 80178be:	f7ff fcb5 	bl	801722c <find_volume>
 80178c2:	0003      	movs	r3, r0
 80178c4:	7023      	strb	r3, [r4, #0]
 80178c6:	197b      	adds	r3, r7, r5
 80178c8:	781b      	ldrb	r3, [r3, #0]
 80178ca:	2b00      	cmp	r3, #0
 80178cc:	d000      	beq.n	80178d0 <f_open+0x48>
 80178ce:	e1d1      	b.n	8017c74 <f_open+0x3ec>
 80178d0:	693a      	ldr	r2, [r7, #16]
 80178d2:	2614      	movs	r6, #20
 80178d4:	19bb      	adds	r3, r7, r6
 80178d6:	601a      	str	r2, [r3, #0]
 80178d8:	68ba      	ldr	r2, [r7, #8]
 80178da:	197c      	adds	r4, r7, r5
 80178dc:	19bb      	adds	r3, r7, r6
 80178de:	0011      	movs	r1, r2
 80178e0:	0018      	movs	r0, r3
 80178e2:	f7ff fb7f 	bl	8016fe4 <follow_path>
 80178e6:	0003      	movs	r3, r0
 80178e8:	7023      	strb	r3, [r4, #0]
 80178ea:	0029      	movs	r1, r5
 80178ec:	197b      	adds	r3, r7, r5
 80178ee:	781b      	ldrb	r3, [r3, #0]
 80178f0:	2b00      	cmp	r3, #0
 80178f2:	d11b      	bne.n	801792c <f_open+0xa4>
 80178f4:	19bb      	adds	r3, r7, r6
 80178f6:	222f      	movs	r2, #47	@ 0x2f
 80178f8:	5c9b      	ldrb	r3, [r3, r2]
 80178fa:	b25b      	sxtb	r3, r3
 80178fc:	2b00      	cmp	r3, #0
 80178fe:	da03      	bge.n	8017908 <f_open+0x80>
 8017900:	187b      	adds	r3, r7, r1
 8017902:	2206      	movs	r2, #6
 8017904:	701a      	strb	r2, [r3, #0]
 8017906:	e011      	b.n	801792c <f_open+0xa4>
 8017908:	1dfb      	adds	r3, r7, #7
 801790a:	781b      	ldrb	r3, [r3, #0]
 801790c:	2201      	movs	r2, #1
 801790e:	429a      	cmp	r2, r3
 8017910:	419b      	sbcs	r3, r3
 8017912:	425b      	negs	r3, r3
 8017914:	b2db      	uxtb	r3, r3
 8017916:	001a      	movs	r2, r3
 8017918:	235f      	movs	r3, #95	@ 0x5f
 801791a:	18fc      	adds	r4, r7, r3
 801791c:	2314      	movs	r3, #20
 801791e:	18fb      	adds	r3, r7, r3
 8017920:	0011      	movs	r1, r2
 8017922:	0018      	movs	r0, r3
 8017924:	f7fe fa2e 	bl	8015d84 <chk_lock>
 8017928:	0003      	movs	r3, r0
 801792a:	7023      	strb	r3, [r4, #0]
 801792c:	1dfb      	adds	r3, r7, #7
 801792e:	781b      	ldrb	r3, [r3, #0]
 8017930:	221c      	movs	r2, #28
 8017932:	4013      	ands	r3, r2
 8017934:	d100      	bne.n	8017938 <f_open+0xb0>
 8017936:	e096      	b.n	8017a66 <f_open+0x1de>
 8017938:	225f      	movs	r2, #95	@ 0x5f
 801793a:	18bb      	adds	r3, r7, r2
 801793c:	781b      	ldrb	r3, [r3, #0]
 801793e:	2b00      	cmp	r3, #0
 8017940:	d01a      	beq.n	8017978 <f_open+0xf0>
 8017942:	18bb      	adds	r3, r7, r2
 8017944:	781b      	ldrb	r3, [r3, #0]
 8017946:	2b04      	cmp	r3, #4
 8017948:	d10f      	bne.n	801796a <f_open+0xe2>
 801794a:	f7fe fa73 	bl	8015e34 <enq_lock>
 801794e:	1e03      	subs	r3, r0, #0
 8017950:	d007      	beq.n	8017962 <f_open+0xda>
 8017952:	2314      	movs	r3, #20
 8017954:	18fb      	adds	r3, r7, r3
 8017956:	0018      	movs	r0, r3
 8017958:	f7ff fa59 	bl	8016e0e <dir_register>
 801795c:	0003      	movs	r3, r0
 801795e:	001a      	movs	r2, r3
 8017960:	e000      	b.n	8017964 <f_open+0xdc>
 8017962:	2212      	movs	r2, #18
 8017964:	235f      	movs	r3, #95	@ 0x5f
 8017966:	18fb      	adds	r3, r7, r3
 8017968:	701a      	strb	r2, [r3, #0]
 801796a:	1dfb      	adds	r3, r7, #7
 801796c:	1dfa      	adds	r2, r7, #7
 801796e:	7812      	ldrb	r2, [r2, #0]
 8017970:	2108      	movs	r1, #8
 8017972:	430a      	orrs	r2, r1
 8017974:	701a      	strb	r2, [r3, #0]
 8017976:	e014      	b.n	80179a2 <f_open+0x11a>
 8017978:	2314      	movs	r3, #20
 801797a:	18fb      	adds	r3, r7, r3
 801797c:	799b      	ldrb	r3, [r3, #6]
 801797e:	001a      	movs	r2, r3
 8017980:	2311      	movs	r3, #17
 8017982:	4013      	ands	r3, r2
 8017984:	d004      	beq.n	8017990 <f_open+0x108>
 8017986:	235f      	movs	r3, #95	@ 0x5f
 8017988:	18fb      	adds	r3, r7, r3
 801798a:	2207      	movs	r2, #7
 801798c:	701a      	strb	r2, [r3, #0]
 801798e:	e008      	b.n	80179a2 <f_open+0x11a>
 8017990:	1dfb      	adds	r3, r7, #7
 8017992:	781b      	ldrb	r3, [r3, #0]
 8017994:	2204      	movs	r2, #4
 8017996:	4013      	ands	r3, r2
 8017998:	d003      	beq.n	80179a2 <f_open+0x11a>
 801799a:	235f      	movs	r3, #95	@ 0x5f
 801799c:	18fb      	adds	r3, r7, r3
 801799e:	2208      	movs	r2, #8
 80179a0:	701a      	strb	r2, [r3, #0]
 80179a2:	245f      	movs	r4, #95	@ 0x5f
 80179a4:	193b      	adds	r3, r7, r4
 80179a6:	781b      	ldrb	r3, [r3, #0]
 80179a8:	2b00      	cmp	r3, #0
 80179aa:	d000      	beq.n	80179ae <f_open+0x126>
 80179ac:	e07b      	b.n	8017aa6 <f_open+0x21e>
 80179ae:	1dfb      	adds	r3, r7, #7
 80179b0:	781b      	ldrb	r3, [r3, #0]
 80179b2:	2208      	movs	r2, #8
 80179b4:	4013      	ands	r3, r2
 80179b6:	d100      	bne.n	80179ba <f_open+0x132>
 80179b8:	e075      	b.n	8017aa6 <f_open+0x21e>
 80179ba:	f7fd ffb3 	bl	8015924 <get_fattime>
 80179be:	0003      	movs	r3, r0
 80179c0:	653b      	str	r3, [r7, #80]	@ 0x50
 80179c2:	2514      	movs	r5, #20
 80179c4:	197b      	adds	r3, r7, r5
 80179c6:	6a1b      	ldr	r3, [r3, #32]
 80179c8:	330e      	adds	r3, #14
 80179ca:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 80179cc:	0011      	movs	r1, r2
 80179ce:	0018      	movs	r0, r3
 80179d0:	f7fe f938 	bl	8015c44 <st_dword>
 80179d4:	197b      	adds	r3, r7, r5
 80179d6:	6a1b      	ldr	r3, [r3, #32]
 80179d8:	3316      	adds	r3, #22
 80179da:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 80179dc:	0011      	movs	r1, r2
 80179de:	0018      	movs	r0, r3
 80179e0:	f7fe f930 	bl	8015c44 <st_dword>
 80179e4:	197b      	adds	r3, r7, r5
 80179e6:	6a1b      	ldr	r3, [r3, #32]
 80179e8:	330b      	adds	r3, #11
 80179ea:	2220      	movs	r2, #32
 80179ec:	701a      	strb	r2, [r3, #0]
 80179ee:	693a      	ldr	r2, [r7, #16]
 80179f0:	197b      	adds	r3, r7, r5
 80179f2:	6a1b      	ldr	r3, [r3, #32]
 80179f4:	0019      	movs	r1, r3
 80179f6:	0010      	movs	r0, r2
 80179f8:	f7ff f962 	bl	8016cc0 <ld_clust>
 80179fc:	0003      	movs	r3, r0
 80179fe:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8017a00:	6938      	ldr	r0, [r7, #16]
 8017a02:	197b      	adds	r3, r7, r5
 8017a04:	6a1b      	ldr	r3, [r3, #32]
 8017a06:	2200      	movs	r2, #0
 8017a08:	0019      	movs	r1, r3
 8017a0a:	f7ff f978 	bl	8016cfe <st_clust>
 8017a0e:	197b      	adds	r3, r7, r5
 8017a10:	6a1b      	ldr	r3, [r3, #32]
 8017a12:	331c      	adds	r3, #28
 8017a14:	2100      	movs	r1, #0
 8017a16:	0018      	movs	r0, r3
 8017a18:	f7fe f914 	bl	8015c44 <st_dword>
 8017a1c:	693b      	ldr	r3, [r7, #16]
 8017a1e:	2201      	movs	r2, #1
 8017a20:	70da      	strb	r2, [r3, #3]
 8017a22:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8017a24:	2b00      	cmp	r3, #0
 8017a26:	d03e      	beq.n	8017aa6 <f_open+0x21e>
 8017a28:	693b      	ldr	r3, [r7, #16]
 8017a2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017a2c:	653b      	str	r3, [r7, #80]	@ 0x50
 8017a2e:	0026      	movs	r6, r4
 8017a30:	193c      	adds	r4, r7, r4
 8017a32:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 8017a34:	197b      	adds	r3, r7, r5
 8017a36:	2200      	movs	r2, #0
 8017a38:	0018      	movs	r0, r3
 8017a3a:	f7fe fe2d 	bl	8016698 <remove_chain>
 8017a3e:	0003      	movs	r3, r0
 8017a40:	7023      	strb	r3, [r4, #0]
 8017a42:	19bb      	adds	r3, r7, r6
 8017a44:	781b      	ldrb	r3, [r3, #0]
 8017a46:	2b00      	cmp	r3, #0
 8017a48:	d12d      	bne.n	8017aa6 <f_open+0x21e>
 8017a4a:	693b      	ldr	r3, [r7, #16]
 8017a4c:	19bc      	adds	r4, r7, r6
 8017a4e:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8017a50:	0011      	movs	r1, r2
 8017a52:	0018      	movs	r0, r3
 8017a54:	f7fe fb48 	bl	80160e8 <move_window>
 8017a58:	0003      	movs	r3, r0
 8017a5a:	7023      	strb	r3, [r4, #0]
 8017a5c:	693b      	ldr	r3, [r7, #16]
 8017a5e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8017a60:	3a01      	subs	r2, #1
 8017a62:	611a      	str	r2, [r3, #16]
 8017a64:	e01f      	b.n	8017aa6 <f_open+0x21e>
 8017a66:	215f      	movs	r1, #95	@ 0x5f
 8017a68:	187b      	adds	r3, r7, r1
 8017a6a:	781b      	ldrb	r3, [r3, #0]
 8017a6c:	2b00      	cmp	r3, #0
 8017a6e:	d11a      	bne.n	8017aa6 <f_open+0x21e>
 8017a70:	2314      	movs	r3, #20
 8017a72:	18fb      	adds	r3, r7, r3
 8017a74:	799b      	ldrb	r3, [r3, #6]
 8017a76:	001a      	movs	r2, r3
 8017a78:	2310      	movs	r3, #16
 8017a7a:	4013      	ands	r3, r2
 8017a7c:	d003      	beq.n	8017a86 <f_open+0x1fe>
 8017a7e:	187b      	adds	r3, r7, r1
 8017a80:	2204      	movs	r2, #4
 8017a82:	701a      	strb	r2, [r3, #0]
 8017a84:	e00f      	b.n	8017aa6 <f_open+0x21e>
 8017a86:	1dfb      	adds	r3, r7, #7
 8017a88:	781b      	ldrb	r3, [r3, #0]
 8017a8a:	2202      	movs	r2, #2
 8017a8c:	4013      	ands	r3, r2
 8017a8e:	d00a      	beq.n	8017aa6 <f_open+0x21e>
 8017a90:	2314      	movs	r3, #20
 8017a92:	18fb      	adds	r3, r7, r3
 8017a94:	799b      	ldrb	r3, [r3, #6]
 8017a96:	001a      	movs	r2, r3
 8017a98:	2301      	movs	r3, #1
 8017a9a:	4013      	ands	r3, r2
 8017a9c:	d003      	beq.n	8017aa6 <f_open+0x21e>
 8017a9e:	235f      	movs	r3, #95	@ 0x5f
 8017aa0:	18fb      	adds	r3, r7, r3
 8017aa2:	2207      	movs	r2, #7
 8017aa4:	701a      	strb	r2, [r3, #0]
 8017aa6:	235f      	movs	r3, #95	@ 0x5f
 8017aa8:	18fb      	adds	r3, r7, r3
 8017aaa:	781b      	ldrb	r3, [r3, #0]
 8017aac:	2b00      	cmp	r3, #0
 8017aae:	d12b      	bne.n	8017b08 <f_open+0x280>
 8017ab0:	1dfb      	adds	r3, r7, #7
 8017ab2:	781b      	ldrb	r3, [r3, #0]
 8017ab4:	2208      	movs	r2, #8
 8017ab6:	4013      	ands	r3, r2
 8017ab8:	d005      	beq.n	8017ac6 <f_open+0x23e>
 8017aba:	1dfb      	adds	r3, r7, #7
 8017abc:	1dfa      	adds	r2, r7, #7
 8017abe:	7812      	ldrb	r2, [r2, #0]
 8017ac0:	2140      	movs	r1, #64	@ 0x40
 8017ac2:	430a      	orrs	r2, r1
 8017ac4:	701a      	strb	r2, [r3, #0]
 8017ac6:	693b      	ldr	r3, [r7, #16]
 8017ac8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8017aca:	68fb      	ldr	r3, [r7, #12]
 8017acc:	625a      	str	r2, [r3, #36]	@ 0x24
 8017ace:	2114      	movs	r1, #20
 8017ad0:	187b      	adds	r3, r7, r1
 8017ad2:	6a1a      	ldr	r2, [r3, #32]
 8017ad4:	68fb      	ldr	r3, [r7, #12]
 8017ad6:	629a      	str	r2, [r3, #40]	@ 0x28
 8017ad8:	1dfb      	adds	r3, r7, #7
 8017ada:	781b      	ldrb	r3, [r3, #0]
 8017adc:	2201      	movs	r2, #1
 8017ade:	429a      	cmp	r2, r3
 8017ae0:	419b      	sbcs	r3, r3
 8017ae2:	425b      	negs	r3, r3
 8017ae4:	b2db      	uxtb	r3, r3
 8017ae6:	001a      	movs	r2, r3
 8017ae8:	187b      	adds	r3, r7, r1
 8017aea:	0011      	movs	r1, r2
 8017aec:	0018      	movs	r0, r3
 8017aee:	f7fe f9bf 	bl	8015e70 <inc_lock>
 8017af2:	0002      	movs	r2, r0
 8017af4:	68fb      	ldr	r3, [r7, #12]
 8017af6:	611a      	str	r2, [r3, #16]
 8017af8:	68fb      	ldr	r3, [r7, #12]
 8017afa:	691b      	ldr	r3, [r3, #16]
 8017afc:	2b00      	cmp	r3, #0
 8017afe:	d103      	bne.n	8017b08 <f_open+0x280>
 8017b00:	235f      	movs	r3, #95	@ 0x5f
 8017b02:	18fb      	adds	r3, r7, r3
 8017b04:	2202      	movs	r2, #2
 8017b06:	701a      	strb	r2, [r3, #0]
 8017b08:	235f      	movs	r3, #95	@ 0x5f
 8017b0a:	18fb      	adds	r3, r7, r3
 8017b0c:	781b      	ldrb	r3, [r3, #0]
 8017b0e:	2b00      	cmp	r3, #0
 8017b10:	d000      	beq.n	8017b14 <f_open+0x28c>
 8017b12:	e0af      	b.n	8017c74 <f_open+0x3ec>
 8017b14:	693a      	ldr	r2, [r7, #16]
 8017b16:	2414      	movs	r4, #20
 8017b18:	193b      	adds	r3, r7, r4
 8017b1a:	6a1b      	ldr	r3, [r3, #32]
 8017b1c:	0019      	movs	r1, r3
 8017b1e:	0010      	movs	r0, r2
 8017b20:	f7ff f8ce 	bl	8016cc0 <ld_clust>
 8017b24:	0002      	movs	r2, r0
 8017b26:	68fb      	ldr	r3, [r7, #12]
 8017b28:	609a      	str	r2, [r3, #8]
 8017b2a:	193b      	adds	r3, r7, r4
 8017b2c:	6a1b      	ldr	r3, [r3, #32]
 8017b2e:	331c      	adds	r3, #28
 8017b30:	0018      	movs	r0, r3
 8017b32:	f7fe f848 	bl	8015bc6 <ld_dword>
 8017b36:	0002      	movs	r2, r0
 8017b38:	68fb      	ldr	r3, [r7, #12]
 8017b3a:	60da      	str	r2, [r3, #12]
 8017b3c:	68fb      	ldr	r3, [r7, #12]
 8017b3e:	2200      	movs	r2, #0
 8017b40:	62da      	str	r2, [r3, #44]	@ 0x2c
 8017b42:	693a      	ldr	r2, [r7, #16]
 8017b44:	68fb      	ldr	r3, [r7, #12]
 8017b46:	601a      	str	r2, [r3, #0]
 8017b48:	693b      	ldr	r3, [r7, #16]
 8017b4a:	88da      	ldrh	r2, [r3, #6]
 8017b4c:	68fb      	ldr	r3, [r7, #12]
 8017b4e:	809a      	strh	r2, [r3, #4]
 8017b50:	68fb      	ldr	r3, [r7, #12]
 8017b52:	1dfa      	adds	r2, r7, #7
 8017b54:	7812      	ldrb	r2, [r2, #0]
 8017b56:	751a      	strb	r2, [r3, #20]
 8017b58:	68fb      	ldr	r3, [r7, #12]
 8017b5a:	2200      	movs	r2, #0
 8017b5c:	755a      	strb	r2, [r3, #21]
 8017b5e:	68fb      	ldr	r3, [r7, #12]
 8017b60:	2200      	movs	r2, #0
 8017b62:	621a      	str	r2, [r3, #32]
 8017b64:	68fb      	ldr	r3, [r7, #12]
 8017b66:	2200      	movs	r2, #0
 8017b68:	619a      	str	r2, [r3, #24]
 8017b6a:	68fb      	ldr	r3, [r7, #12]
 8017b6c:	3330      	adds	r3, #48	@ 0x30
 8017b6e:	2280      	movs	r2, #128	@ 0x80
 8017b70:	0152      	lsls	r2, r2, #5
 8017b72:	2100      	movs	r1, #0
 8017b74:	0018      	movs	r0, r3
 8017b76:	f7fe f8ae 	bl	8015cd6 <mem_set>
 8017b7a:	1dfb      	adds	r3, r7, #7
 8017b7c:	781b      	ldrb	r3, [r3, #0]
 8017b7e:	2220      	movs	r2, #32
 8017b80:	4013      	ands	r3, r2
 8017b82:	d100      	bne.n	8017b86 <f_open+0x2fe>
 8017b84:	e076      	b.n	8017c74 <f_open+0x3ec>
 8017b86:	68fb      	ldr	r3, [r7, #12]
 8017b88:	68db      	ldr	r3, [r3, #12]
 8017b8a:	2b00      	cmp	r3, #0
 8017b8c:	d100      	bne.n	8017b90 <f_open+0x308>
 8017b8e:	e071      	b.n	8017c74 <f_open+0x3ec>
 8017b90:	68fb      	ldr	r3, [r7, #12]
 8017b92:	68da      	ldr	r2, [r3, #12]
 8017b94:	68fb      	ldr	r3, [r7, #12]
 8017b96:	619a      	str	r2, [r3, #24]
 8017b98:	693b      	ldr	r3, [r7, #16]
 8017b9a:	895b      	ldrh	r3, [r3, #10]
 8017b9c:	001a      	movs	r2, r3
 8017b9e:	693b      	ldr	r3, [r7, #16]
 8017ba0:	899b      	ldrh	r3, [r3, #12]
 8017ba2:	4353      	muls	r3, r2
 8017ba4:	64bb      	str	r3, [r7, #72]	@ 0x48
 8017ba6:	68fb      	ldr	r3, [r7, #12]
 8017ba8:	689b      	ldr	r3, [r3, #8]
 8017baa:	65bb      	str	r3, [r7, #88]	@ 0x58
 8017bac:	68fb      	ldr	r3, [r7, #12]
 8017bae:	68db      	ldr	r3, [r3, #12]
 8017bb0:	657b      	str	r3, [r7, #84]	@ 0x54
 8017bb2:	e019      	b.n	8017be8 <f_open+0x360>
 8017bb4:	68fb      	ldr	r3, [r7, #12]
 8017bb6:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8017bb8:	0011      	movs	r1, r2
 8017bba:	0018      	movs	r0, r3
 8017bbc:	f7fe fb62 	bl	8016284 <get_fat>
 8017bc0:	0003      	movs	r3, r0
 8017bc2:	65bb      	str	r3, [r7, #88]	@ 0x58
 8017bc4:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8017bc6:	2b01      	cmp	r3, #1
 8017bc8:	d803      	bhi.n	8017bd2 <f_open+0x34a>
 8017bca:	235f      	movs	r3, #95	@ 0x5f
 8017bcc:	18fb      	adds	r3, r7, r3
 8017bce:	2202      	movs	r2, #2
 8017bd0:	701a      	strb	r2, [r3, #0]
 8017bd2:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8017bd4:	3301      	adds	r3, #1
 8017bd6:	d103      	bne.n	8017be0 <f_open+0x358>
 8017bd8:	235f      	movs	r3, #95	@ 0x5f
 8017bda:	18fb      	adds	r3, r7, r3
 8017bdc:	2201      	movs	r2, #1
 8017bde:	701a      	strb	r2, [r3, #0]
 8017be0:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8017be2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8017be4:	1ad3      	subs	r3, r2, r3
 8017be6:	657b      	str	r3, [r7, #84]	@ 0x54
 8017be8:	235f      	movs	r3, #95	@ 0x5f
 8017bea:	18fb      	adds	r3, r7, r3
 8017bec:	781b      	ldrb	r3, [r3, #0]
 8017bee:	2b00      	cmp	r3, #0
 8017bf0:	d103      	bne.n	8017bfa <f_open+0x372>
 8017bf2:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8017bf4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8017bf6:	429a      	cmp	r2, r3
 8017bf8:	d8dc      	bhi.n	8017bb4 <f_open+0x32c>
 8017bfa:	68fb      	ldr	r3, [r7, #12]
 8017bfc:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8017bfe:	61da      	str	r2, [r3, #28]
 8017c00:	245f      	movs	r4, #95	@ 0x5f
 8017c02:	193b      	adds	r3, r7, r4
 8017c04:	781b      	ldrb	r3, [r3, #0]
 8017c06:	2b00      	cmp	r3, #0
 8017c08:	d134      	bne.n	8017c74 <f_open+0x3ec>
 8017c0a:	693b      	ldr	r3, [r7, #16]
 8017c0c:	899b      	ldrh	r3, [r3, #12]
 8017c0e:	001a      	movs	r2, r3
 8017c10:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8017c12:	0011      	movs	r1, r2
 8017c14:	0018      	movs	r0, r3
 8017c16:	f7e8 fb0d 	bl	8000234 <__aeabi_uidivmod>
 8017c1a:	1e0b      	subs	r3, r1, #0
 8017c1c:	d02a      	beq.n	8017c74 <f_open+0x3ec>
 8017c1e:	693b      	ldr	r3, [r7, #16]
 8017c20:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8017c22:	0011      	movs	r1, r2
 8017c24:	0018      	movs	r0, r3
 8017c26:	f7fe fb11 	bl	801624c <clust2sect>
 8017c2a:	0003      	movs	r3, r0
 8017c2c:	647b      	str	r3, [r7, #68]	@ 0x44
 8017c2e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8017c30:	2b00      	cmp	r3, #0
 8017c32:	d103      	bne.n	8017c3c <f_open+0x3b4>
 8017c34:	193b      	adds	r3, r7, r4
 8017c36:	2202      	movs	r2, #2
 8017c38:	701a      	strb	r2, [r3, #0]
 8017c3a:	e01b      	b.n	8017c74 <f_open+0x3ec>
 8017c3c:	693b      	ldr	r3, [r7, #16]
 8017c3e:	899b      	ldrh	r3, [r3, #12]
 8017c40:	0019      	movs	r1, r3
 8017c42:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8017c44:	f7e8 fa70 	bl	8000128 <__udivsi3>
 8017c48:	0003      	movs	r3, r0
 8017c4a:	001a      	movs	r2, r3
 8017c4c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8017c4e:	18d2      	adds	r2, r2, r3
 8017c50:	68fb      	ldr	r3, [r7, #12]
 8017c52:	621a      	str	r2, [r3, #32]
 8017c54:	693b      	ldr	r3, [r7, #16]
 8017c56:	7858      	ldrb	r0, [r3, #1]
 8017c58:	68fb      	ldr	r3, [r7, #12]
 8017c5a:	3330      	adds	r3, #48	@ 0x30
 8017c5c:	0019      	movs	r1, r3
 8017c5e:	68fb      	ldr	r3, [r7, #12]
 8017c60:	6a1a      	ldr	r2, [r3, #32]
 8017c62:	2301      	movs	r3, #1
 8017c64:	f7fd ff1c 	bl	8015aa0 <disk_read>
 8017c68:	1e03      	subs	r3, r0, #0
 8017c6a:	d003      	beq.n	8017c74 <f_open+0x3ec>
 8017c6c:	235f      	movs	r3, #95	@ 0x5f
 8017c6e:	18fb      	adds	r3, r7, r3
 8017c70:	2201      	movs	r2, #1
 8017c72:	701a      	strb	r2, [r3, #0]
 8017c74:	235f      	movs	r3, #95	@ 0x5f
 8017c76:	18fb      	adds	r3, r7, r3
 8017c78:	781b      	ldrb	r3, [r3, #0]
 8017c7a:	2b00      	cmp	r3, #0
 8017c7c:	d002      	beq.n	8017c84 <f_open+0x3fc>
 8017c7e:	68fb      	ldr	r3, [r7, #12]
 8017c80:	2200      	movs	r2, #0
 8017c82:	601a      	str	r2, [r3, #0]
 8017c84:	235f      	movs	r3, #95	@ 0x5f
 8017c86:	18fb      	adds	r3, r7, r3
 8017c88:	781b      	ldrb	r3, [r3, #0]
 8017c8a:	0018      	movs	r0, r3
 8017c8c:	46bd      	mov	sp, r7
 8017c8e:	b019      	add	sp, #100	@ 0x64
 8017c90:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017c92 <f_write>:
 8017c92:	b5b0      	push	{r4, r5, r7, lr}
 8017c94:	b08c      	sub	sp, #48	@ 0x30
 8017c96:	af00      	add	r7, sp, #0
 8017c98:	60f8      	str	r0, [r7, #12]
 8017c9a:	60b9      	str	r1, [r7, #8]
 8017c9c:	607a      	str	r2, [r7, #4]
 8017c9e:	603b      	str	r3, [r7, #0]
 8017ca0:	68bb      	ldr	r3, [r7, #8]
 8017ca2:	61fb      	str	r3, [r7, #28]
 8017ca4:	683b      	ldr	r3, [r7, #0]
 8017ca6:	2200      	movs	r2, #0
 8017ca8:	601a      	str	r2, [r3, #0]
 8017caa:	68fb      	ldr	r3, [r7, #12]
 8017cac:	252f      	movs	r5, #47	@ 0x2f
 8017cae:	197c      	adds	r4, r7, r5
 8017cb0:	2210      	movs	r2, #16
 8017cb2:	18ba      	adds	r2, r7, r2
 8017cb4:	0011      	movs	r1, r2
 8017cb6:	0018      	movs	r0, r3
 8017cb8:	f7ff fd5e 	bl	8017778 <validate>
 8017cbc:	0003      	movs	r3, r0
 8017cbe:	7023      	strb	r3, [r4, #0]
 8017cc0:	197b      	adds	r3, r7, r5
 8017cc2:	781b      	ldrb	r3, [r3, #0]
 8017cc4:	2b00      	cmp	r3, #0
 8017cc6:	d107      	bne.n	8017cd8 <f_write+0x46>
 8017cc8:	197b      	adds	r3, r7, r5
 8017cca:	68fa      	ldr	r2, [r7, #12]
 8017ccc:	7d52      	ldrb	r2, [r2, #21]
 8017cce:	701a      	strb	r2, [r3, #0]
 8017cd0:	197b      	adds	r3, r7, r5
 8017cd2:	781b      	ldrb	r3, [r3, #0]
 8017cd4:	2b00      	cmp	r3, #0
 8017cd6:	d003      	beq.n	8017ce0 <f_write+0x4e>
 8017cd8:	232f      	movs	r3, #47	@ 0x2f
 8017cda:	18fb      	adds	r3, r7, r3
 8017cdc:	781b      	ldrb	r3, [r3, #0]
 8017cde:	e16f      	b.n	8017fc0 <f_write+0x32e>
 8017ce0:	68fb      	ldr	r3, [r7, #12]
 8017ce2:	7d1b      	ldrb	r3, [r3, #20]
 8017ce4:	001a      	movs	r2, r3
 8017ce6:	2302      	movs	r3, #2
 8017ce8:	4013      	ands	r3, r2
 8017cea:	d101      	bne.n	8017cf0 <f_write+0x5e>
 8017cec:	2307      	movs	r3, #7
 8017cee:	e167      	b.n	8017fc0 <f_write+0x32e>
 8017cf0:	68fb      	ldr	r3, [r7, #12]
 8017cf2:	699a      	ldr	r2, [r3, #24]
 8017cf4:	687b      	ldr	r3, [r7, #4]
 8017cf6:	18d2      	adds	r2, r2, r3
 8017cf8:	68fb      	ldr	r3, [r7, #12]
 8017cfa:	699b      	ldr	r3, [r3, #24]
 8017cfc:	429a      	cmp	r2, r3
 8017cfe:	d300      	bcc.n	8017d02 <f_write+0x70>
 8017d00:	e150      	b.n	8017fa4 <f_write+0x312>
 8017d02:	68fb      	ldr	r3, [r7, #12]
 8017d04:	699b      	ldr	r3, [r3, #24]
 8017d06:	43db      	mvns	r3, r3
 8017d08:	607b      	str	r3, [r7, #4]
 8017d0a:	e14b      	b.n	8017fa4 <f_write+0x312>
 8017d0c:	68fb      	ldr	r3, [r7, #12]
 8017d0e:	699a      	ldr	r2, [r3, #24]
 8017d10:	693b      	ldr	r3, [r7, #16]
 8017d12:	899b      	ldrh	r3, [r3, #12]
 8017d14:	0019      	movs	r1, r3
 8017d16:	0010      	movs	r0, r2
 8017d18:	f7e8 fa8c 	bl	8000234 <__aeabi_uidivmod>
 8017d1c:	1e0b      	subs	r3, r1, #0
 8017d1e:	d000      	beq.n	8017d22 <f_write+0x90>
 8017d20:	e0f4      	b.n	8017f0c <f_write+0x27a>
 8017d22:	68fb      	ldr	r3, [r7, #12]
 8017d24:	699a      	ldr	r2, [r3, #24]
 8017d26:	693b      	ldr	r3, [r7, #16]
 8017d28:	899b      	ldrh	r3, [r3, #12]
 8017d2a:	0019      	movs	r1, r3
 8017d2c:	0010      	movs	r0, r2
 8017d2e:	f7e8 f9fb 	bl	8000128 <__udivsi3>
 8017d32:	0003      	movs	r3, r0
 8017d34:	001a      	movs	r2, r3
 8017d36:	693b      	ldr	r3, [r7, #16]
 8017d38:	895b      	ldrh	r3, [r3, #10]
 8017d3a:	3b01      	subs	r3, #1
 8017d3c:	4013      	ands	r3, r2
 8017d3e:	61bb      	str	r3, [r7, #24]
 8017d40:	69bb      	ldr	r3, [r7, #24]
 8017d42:	2b00      	cmp	r3, #0
 8017d44:	d146      	bne.n	8017dd4 <f_write+0x142>
 8017d46:	68fb      	ldr	r3, [r7, #12]
 8017d48:	699b      	ldr	r3, [r3, #24]
 8017d4a:	2b00      	cmp	r3, #0
 8017d4c:	d10d      	bne.n	8017d6a <f_write+0xd8>
 8017d4e:	68fb      	ldr	r3, [r7, #12]
 8017d50:	689b      	ldr	r3, [r3, #8]
 8017d52:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017d54:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017d56:	2b00      	cmp	r3, #0
 8017d58:	d11e      	bne.n	8017d98 <f_write+0x106>
 8017d5a:	68fb      	ldr	r3, [r7, #12]
 8017d5c:	2100      	movs	r1, #0
 8017d5e:	0018      	movs	r0, r3
 8017d60:	f7fe fd0d 	bl	801677e <create_chain>
 8017d64:	0003      	movs	r3, r0
 8017d66:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017d68:	e016      	b.n	8017d98 <f_write+0x106>
 8017d6a:	68fb      	ldr	r3, [r7, #12]
 8017d6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017d6e:	2b00      	cmp	r3, #0
 8017d70:	d009      	beq.n	8017d86 <f_write+0xf4>
 8017d72:	68fb      	ldr	r3, [r7, #12]
 8017d74:	699a      	ldr	r2, [r3, #24]
 8017d76:	68fb      	ldr	r3, [r7, #12]
 8017d78:	0011      	movs	r1, r2
 8017d7a:	0018      	movs	r0, r3
 8017d7c:	f7fe fda5 	bl	80168ca <clmt_clust>
 8017d80:	0003      	movs	r3, r0
 8017d82:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017d84:	e008      	b.n	8017d98 <f_write+0x106>
 8017d86:	68fa      	ldr	r2, [r7, #12]
 8017d88:	68fb      	ldr	r3, [r7, #12]
 8017d8a:	69db      	ldr	r3, [r3, #28]
 8017d8c:	0019      	movs	r1, r3
 8017d8e:	0010      	movs	r0, r2
 8017d90:	f7fe fcf5 	bl	801677e <create_chain>
 8017d94:	0003      	movs	r3, r0
 8017d96:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017d98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017d9a:	2b00      	cmp	r3, #0
 8017d9c:	d100      	bne.n	8017da0 <f_write+0x10e>
 8017d9e:	e106      	b.n	8017fae <f_write+0x31c>
 8017da0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017da2:	2b01      	cmp	r3, #1
 8017da4:	d104      	bne.n	8017db0 <f_write+0x11e>
 8017da6:	68fb      	ldr	r3, [r7, #12]
 8017da8:	2202      	movs	r2, #2
 8017daa:	755a      	strb	r2, [r3, #21]
 8017dac:	2302      	movs	r3, #2
 8017dae:	e107      	b.n	8017fc0 <f_write+0x32e>
 8017db0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017db2:	3301      	adds	r3, #1
 8017db4:	d104      	bne.n	8017dc0 <f_write+0x12e>
 8017db6:	68fb      	ldr	r3, [r7, #12]
 8017db8:	2201      	movs	r2, #1
 8017dba:	755a      	strb	r2, [r3, #21]
 8017dbc:	2301      	movs	r3, #1
 8017dbe:	e0ff      	b.n	8017fc0 <f_write+0x32e>
 8017dc0:	68fb      	ldr	r3, [r7, #12]
 8017dc2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8017dc4:	61da      	str	r2, [r3, #28]
 8017dc6:	68fb      	ldr	r3, [r7, #12]
 8017dc8:	689b      	ldr	r3, [r3, #8]
 8017dca:	2b00      	cmp	r3, #0
 8017dcc:	d102      	bne.n	8017dd4 <f_write+0x142>
 8017dce:	68fb      	ldr	r3, [r7, #12]
 8017dd0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8017dd2:	609a      	str	r2, [r3, #8]
 8017dd4:	68fb      	ldr	r3, [r7, #12]
 8017dd6:	7d1b      	ldrb	r3, [r3, #20]
 8017dd8:	b25b      	sxtb	r3, r3
 8017dda:	2b00      	cmp	r3, #0
 8017ddc:	da17      	bge.n	8017e0e <f_write+0x17c>
 8017dde:	693b      	ldr	r3, [r7, #16]
 8017de0:	7858      	ldrb	r0, [r3, #1]
 8017de2:	68fb      	ldr	r3, [r7, #12]
 8017de4:	3330      	adds	r3, #48	@ 0x30
 8017de6:	0019      	movs	r1, r3
 8017de8:	68fb      	ldr	r3, [r7, #12]
 8017dea:	6a1a      	ldr	r2, [r3, #32]
 8017dec:	2301      	movs	r3, #1
 8017dee:	f7fd fe7f 	bl	8015af0 <disk_write>
 8017df2:	1e03      	subs	r3, r0, #0
 8017df4:	d004      	beq.n	8017e00 <f_write+0x16e>
 8017df6:	68fb      	ldr	r3, [r7, #12]
 8017df8:	2201      	movs	r2, #1
 8017dfa:	755a      	strb	r2, [r3, #21]
 8017dfc:	2301      	movs	r3, #1
 8017dfe:	e0df      	b.n	8017fc0 <f_write+0x32e>
 8017e00:	68fb      	ldr	r3, [r7, #12]
 8017e02:	7d1b      	ldrb	r3, [r3, #20]
 8017e04:	227f      	movs	r2, #127	@ 0x7f
 8017e06:	4013      	ands	r3, r2
 8017e08:	b2da      	uxtb	r2, r3
 8017e0a:	68fb      	ldr	r3, [r7, #12]
 8017e0c:	751a      	strb	r2, [r3, #20]
 8017e0e:	693a      	ldr	r2, [r7, #16]
 8017e10:	68fb      	ldr	r3, [r7, #12]
 8017e12:	69db      	ldr	r3, [r3, #28]
 8017e14:	0019      	movs	r1, r3
 8017e16:	0010      	movs	r0, r2
 8017e18:	f7fe fa18 	bl	801624c <clust2sect>
 8017e1c:	0003      	movs	r3, r0
 8017e1e:	617b      	str	r3, [r7, #20]
 8017e20:	697b      	ldr	r3, [r7, #20]
 8017e22:	2b00      	cmp	r3, #0
 8017e24:	d104      	bne.n	8017e30 <f_write+0x19e>
 8017e26:	68fb      	ldr	r3, [r7, #12]
 8017e28:	2202      	movs	r2, #2
 8017e2a:	755a      	strb	r2, [r3, #21]
 8017e2c:	2302      	movs	r3, #2
 8017e2e:	e0c7      	b.n	8017fc0 <f_write+0x32e>
 8017e30:	697a      	ldr	r2, [r7, #20]
 8017e32:	69bb      	ldr	r3, [r7, #24]
 8017e34:	18d3      	adds	r3, r2, r3
 8017e36:	617b      	str	r3, [r7, #20]
 8017e38:	693b      	ldr	r3, [r7, #16]
 8017e3a:	899b      	ldrh	r3, [r3, #12]
 8017e3c:	0019      	movs	r1, r3
 8017e3e:	6878      	ldr	r0, [r7, #4]
 8017e40:	f7e8 f972 	bl	8000128 <__udivsi3>
 8017e44:	0003      	movs	r3, r0
 8017e46:	623b      	str	r3, [r7, #32]
 8017e48:	6a3b      	ldr	r3, [r7, #32]
 8017e4a:	2b00      	cmp	r3, #0
 8017e4c:	d040      	beq.n	8017ed0 <f_write+0x23e>
 8017e4e:	69ba      	ldr	r2, [r7, #24]
 8017e50:	6a3b      	ldr	r3, [r7, #32]
 8017e52:	18d3      	adds	r3, r2, r3
 8017e54:	693a      	ldr	r2, [r7, #16]
 8017e56:	8952      	ldrh	r2, [r2, #10]
 8017e58:	4293      	cmp	r3, r2
 8017e5a:	d905      	bls.n	8017e68 <f_write+0x1d6>
 8017e5c:	693b      	ldr	r3, [r7, #16]
 8017e5e:	895b      	ldrh	r3, [r3, #10]
 8017e60:	001a      	movs	r2, r3
 8017e62:	69bb      	ldr	r3, [r7, #24]
 8017e64:	1ad3      	subs	r3, r2, r3
 8017e66:	623b      	str	r3, [r7, #32]
 8017e68:	693b      	ldr	r3, [r7, #16]
 8017e6a:	7858      	ldrb	r0, [r3, #1]
 8017e6c:	6a3b      	ldr	r3, [r7, #32]
 8017e6e:	697a      	ldr	r2, [r7, #20]
 8017e70:	69f9      	ldr	r1, [r7, #28]
 8017e72:	f7fd fe3d 	bl	8015af0 <disk_write>
 8017e76:	1e03      	subs	r3, r0, #0
 8017e78:	d004      	beq.n	8017e84 <f_write+0x1f2>
 8017e7a:	68fb      	ldr	r3, [r7, #12]
 8017e7c:	2201      	movs	r2, #1
 8017e7e:	755a      	strb	r2, [r3, #21]
 8017e80:	2301      	movs	r3, #1
 8017e82:	e09d      	b.n	8017fc0 <f_write+0x32e>
 8017e84:	68fb      	ldr	r3, [r7, #12]
 8017e86:	6a1a      	ldr	r2, [r3, #32]
 8017e88:	697b      	ldr	r3, [r7, #20]
 8017e8a:	1ad3      	subs	r3, r2, r3
 8017e8c:	6a3a      	ldr	r2, [r7, #32]
 8017e8e:	429a      	cmp	r2, r3
 8017e90:	d917      	bls.n	8017ec2 <f_write+0x230>
 8017e92:	68fb      	ldr	r3, [r7, #12]
 8017e94:	3330      	adds	r3, #48	@ 0x30
 8017e96:	0018      	movs	r0, r3
 8017e98:	68fb      	ldr	r3, [r7, #12]
 8017e9a:	6a1a      	ldr	r2, [r3, #32]
 8017e9c:	697b      	ldr	r3, [r7, #20]
 8017e9e:	1ad3      	subs	r3, r2, r3
 8017ea0:	693a      	ldr	r2, [r7, #16]
 8017ea2:	8992      	ldrh	r2, [r2, #12]
 8017ea4:	4353      	muls	r3, r2
 8017ea6:	69fa      	ldr	r2, [r7, #28]
 8017ea8:	18d1      	adds	r1, r2, r3
 8017eaa:	693b      	ldr	r3, [r7, #16]
 8017eac:	899b      	ldrh	r3, [r3, #12]
 8017eae:	001a      	movs	r2, r3
 8017eb0:	f7fd fef2 	bl	8015c98 <mem_cpy>
 8017eb4:	68fb      	ldr	r3, [r7, #12]
 8017eb6:	7d1b      	ldrb	r3, [r3, #20]
 8017eb8:	227f      	movs	r2, #127	@ 0x7f
 8017eba:	4013      	ands	r3, r2
 8017ebc:	b2da      	uxtb	r2, r3
 8017ebe:	68fb      	ldr	r3, [r7, #12]
 8017ec0:	751a      	strb	r2, [r3, #20]
 8017ec2:	693b      	ldr	r3, [r7, #16]
 8017ec4:	899b      	ldrh	r3, [r3, #12]
 8017ec6:	001a      	movs	r2, r3
 8017ec8:	6a3b      	ldr	r3, [r7, #32]
 8017eca:	4353      	muls	r3, r2
 8017ecc:	627b      	str	r3, [r7, #36]	@ 0x24
 8017ece:	e04b      	b.n	8017f68 <f_write+0x2d6>
 8017ed0:	68fb      	ldr	r3, [r7, #12]
 8017ed2:	6a1b      	ldr	r3, [r3, #32]
 8017ed4:	697a      	ldr	r2, [r7, #20]
 8017ed6:	429a      	cmp	r2, r3
 8017ed8:	d015      	beq.n	8017f06 <f_write+0x274>
 8017eda:	68fb      	ldr	r3, [r7, #12]
 8017edc:	699a      	ldr	r2, [r3, #24]
 8017ede:	68fb      	ldr	r3, [r7, #12]
 8017ee0:	68db      	ldr	r3, [r3, #12]
 8017ee2:	429a      	cmp	r2, r3
 8017ee4:	d20f      	bcs.n	8017f06 <f_write+0x274>
 8017ee6:	693b      	ldr	r3, [r7, #16]
 8017ee8:	7858      	ldrb	r0, [r3, #1]
 8017eea:	68fb      	ldr	r3, [r7, #12]
 8017eec:	3330      	adds	r3, #48	@ 0x30
 8017eee:	0019      	movs	r1, r3
 8017ef0:	697a      	ldr	r2, [r7, #20]
 8017ef2:	2301      	movs	r3, #1
 8017ef4:	f7fd fdd4 	bl	8015aa0 <disk_read>
 8017ef8:	1e03      	subs	r3, r0, #0
 8017efa:	d004      	beq.n	8017f06 <f_write+0x274>
 8017efc:	68fb      	ldr	r3, [r7, #12]
 8017efe:	2201      	movs	r2, #1
 8017f00:	755a      	strb	r2, [r3, #21]
 8017f02:	2301      	movs	r3, #1
 8017f04:	e05c      	b.n	8017fc0 <f_write+0x32e>
 8017f06:	68fb      	ldr	r3, [r7, #12]
 8017f08:	697a      	ldr	r2, [r7, #20]
 8017f0a:	621a      	str	r2, [r3, #32]
 8017f0c:	693b      	ldr	r3, [r7, #16]
 8017f0e:	899b      	ldrh	r3, [r3, #12]
 8017f10:	001c      	movs	r4, r3
 8017f12:	68fb      	ldr	r3, [r7, #12]
 8017f14:	699a      	ldr	r2, [r3, #24]
 8017f16:	693b      	ldr	r3, [r7, #16]
 8017f18:	899b      	ldrh	r3, [r3, #12]
 8017f1a:	0019      	movs	r1, r3
 8017f1c:	0010      	movs	r0, r2
 8017f1e:	f7e8 f989 	bl	8000234 <__aeabi_uidivmod>
 8017f22:	000b      	movs	r3, r1
 8017f24:	1ae3      	subs	r3, r4, r3
 8017f26:	627b      	str	r3, [r7, #36]	@ 0x24
 8017f28:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8017f2a:	687b      	ldr	r3, [r7, #4]
 8017f2c:	429a      	cmp	r2, r3
 8017f2e:	d901      	bls.n	8017f34 <f_write+0x2a2>
 8017f30:	687b      	ldr	r3, [r7, #4]
 8017f32:	627b      	str	r3, [r7, #36]	@ 0x24
 8017f34:	68fb      	ldr	r3, [r7, #12]
 8017f36:	3330      	adds	r3, #48	@ 0x30
 8017f38:	001c      	movs	r4, r3
 8017f3a:	68fb      	ldr	r3, [r7, #12]
 8017f3c:	699a      	ldr	r2, [r3, #24]
 8017f3e:	693b      	ldr	r3, [r7, #16]
 8017f40:	899b      	ldrh	r3, [r3, #12]
 8017f42:	0019      	movs	r1, r3
 8017f44:	0010      	movs	r0, r2
 8017f46:	f7e8 f975 	bl	8000234 <__aeabi_uidivmod>
 8017f4a:	000b      	movs	r3, r1
 8017f4c:	18e3      	adds	r3, r4, r3
 8017f4e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8017f50:	69f9      	ldr	r1, [r7, #28]
 8017f52:	0018      	movs	r0, r3
 8017f54:	f7fd fea0 	bl	8015c98 <mem_cpy>
 8017f58:	68fb      	ldr	r3, [r7, #12]
 8017f5a:	7d1b      	ldrb	r3, [r3, #20]
 8017f5c:	2280      	movs	r2, #128	@ 0x80
 8017f5e:	4252      	negs	r2, r2
 8017f60:	4313      	orrs	r3, r2
 8017f62:	b2da      	uxtb	r2, r3
 8017f64:	68fb      	ldr	r3, [r7, #12]
 8017f66:	751a      	strb	r2, [r3, #20]
 8017f68:	69fa      	ldr	r2, [r7, #28]
 8017f6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f6c:	18d3      	adds	r3, r2, r3
 8017f6e:	61fb      	str	r3, [r7, #28]
 8017f70:	68fb      	ldr	r3, [r7, #12]
 8017f72:	699a      	ldr	r2, [r3, #24]
 8017f74:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f76:	18d2      	adds	r2, r2, r3
 8017f78:	68fb      	ldr	r3, [r7, #12]
 8017f7a:	619a      	str	r2, [r3, #24]
 8017f7c:	68fb      	ldr	r3, [r7, #12]
 8017f7e:	68d9      	ldr	r1, [r3, #12]
 8017f80:	68fb      	ldr	r3, [r7, #12]
 8017f82:	699a      	ldr	r2, [r3, #24]
 8017f84:	000b      	movs	r3, r1
 8017f86:	4293      	cmp	r3, r2
 8017f88:	d200      	bcs.n	8017f8c <f_write+0x2fa>
 8017f8a:	0013      	movs	r3, r2
 8017f8c:	68fa      	ldr	r2, [r7, #12]
 8017f8e:	60d3      	str	r3, [r2, #12]
 8017f90:	683b      	ldr	r3, [r7, #0]
 8017f92:	681a      	ldr	r2, [r3, #0]
 8017f94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f96:	18d2      	adds	r2, r2, r3
 8017f98:	683b      	ldr	r3, [r7, #0]
 8017f9a:	601a      	str	r2, [r3, #0]
 8017f9c:	687a      	ldr	r2, [r7, #4]
 8017f9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017fa0:	1ad3      	subs	r3, r2, r3
 8017fa2:	607b      	str	r3, [r7, #4]
 8017fa4:	687b      	ldr	r3, [r7, #4]
 8017fa6:	2b00      	cmp	r3, #0
 8017fa8:	d000      	beq.n	8017fac <f_write+0x31a>
 8017faa:	e6af      	b.n	8017d0c <f_write+0x7a>
 8017fac:	e000      	b.n	8017fb0 <f_write+0x31e>
 8017fae:	46c0      	nop			@ (mov r8, r8)
 8017fb0:	68fb      	ldr	r3, [r7, #12]
 8017fb2:	7d1b      	ldrb	r3, [r3, #20]
 8017fb4:	2240      	movs	r2, #64	@ 0x40
 8017fb6:	4313      	orrs	r3, r2
 8017fb8:	b2da      	uxtb	r2, r3
 8017fba:	68fb      	ldr	r3, [r7, #12]
 8017fbc:	751a      	strb	r2, [r3, #20]
 8017fbe:	2300      	movs	r3, #0
 8017fc0:	0018      	movs	r0, r3
 8017fc2:	46bd      	mov	sp, r7
 8017fc4:	b00c      	add	sp, #48	@ 0x30
 8017fc6:	bdb0      	pop	{r4, r5, r7, pc}

08017fc8 <f_sync>:
 8017fc8:	b5b0      	push	{r4, r5, r7, lr}
 8017fca:	b086      	sub	sp, #24
 8017fcc:	af00      	add	r7, sp, #0
 8017fce:	6078      	str	r0, [r7, #4]
 8017fd0:	687b      	ldr	r3, [r7, #4]
 8017fd2:	2517      	movs	r5, #23
 8017fd4:	197c      	adds	r4, r7, r5
 8017fd6:	2208      	movs	r2, #8
 8017fd8:	18ba      	adds	r2, r7, r2
 8017fda:	0011      	movs	r1, r2
 8017fdc:	0018      	movs	r0, r3
 8017fde:	f7ff fbcb 	bl	8017778 <validate>
 8017fe2:	0003      	movs	r3, r0
 8017fe4:	7023      	strb	r3, [r4, #0]
 8017fe6:	197b      	adds	r3, r7, r5
 8017fe8:	781b      	ldrb	r3, [r3, #0]
 8017fea:	2b00      	cmp	r3, #0
 8017fec:	d16e      	bne.n	80180cc <f_sync+0x104>
 8017fee:	687b      	ldr	r3, [r7, #4]
 8017ff0:	7d1b      	ldrb	r3, [r3, #20]
 8017ff2:	001a      	movs	r2, r3
 8017ff4:	2340      	movs	r3, #64	@ 0x40
 8017ff6:	4013      	ands	r3, r2
 8017ff8:	d068      	beq.n	80180cc <f_sync+0x104>
 8017ffa:	687b      	ldr	r3, [r7, #4]
 8017ffc:	7d1b      	ldrb	r3, [r3, #20]
 8017ffe:	b25b      	sxtb	r3, r3
 8018000:	2b00      	cmp	r3, #0
 8018002:	da14      	bge.n	801802e <f_sync+0x66>
 8018004:	68bb      	ldr	r3, [r7, #8]
 8018006:	7858      	ldrb	r0, [r3, #1]
 8018008:	687b      	ldr	r3, [r7, #4]
 801800a:	3330      	adds	r3, #48	@ 0x30
 801800c:	0019      	movs	r1, r3
 801800e:	687b      	ldr	r3, [r7, #4]
 8018010:	6a1a      	ldr	r2, [r3, #32]
 8018012:	2301      	movs	r3, #1
 8018014:	f7fd fd6c 	bl	8015af0 <disk_write>
 8018018:	1e03      	subs	r3, r0, #0
 801801a:	d001      	beq.n	8018020 <f_sync+0x58>
 801801c:	2301      	movs	r3, #1
 801801e:	e058      	b.n	80180d2 <f_sync+0x10a>
 8018020:	687b      	ldr	r3, [r7, #4]
 8018022:	7d1b      	ldrb	r3, [r3, #20]
 8018024:	227f      	movs	r2, #127	@ 0x7f
 8018026:	4013      	ands	r3, r2
 8018028:	b2da      	uxtb	r2, r3
 801802a:	687b      	ldr	r3, [r7, #4]
 801802c:	751a      	strb	r2, [r3, #20]
 801802e:	f7fd fc79 	bl	8015924 <get_fattime>
 8018032:	0003      	movs	r3, r0
 8018034:	613b      	str	r3, [r7, #16]
 8018036:	68ba      	ldr	r2, [r7, #8]
 8018038:	687b      	ldr	r3, [r7, #4]
 801803a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801803c:	2517      	movs	r5, #23
 801803e:	197c      	adds	r4, r7, r5
 8018040:	0019      	movs	r1, r3
 8018042:	0010      	movs	r0, r2
 8018044:	f7fe f850 	bl	80160e8 <move_window>
 8018048:	0003      	movs	r3, r0
 801804a:	7023      	strb	r3, [r4, #0]
 801804c:	002c      	movs	r4, r5
 801804e:	193b      	adds	r3, r7, r4
 8018050:	781b      	ldrb	r3, [r3, #0]
 8018052:	2b00      	cmp	r3, #0
 8018054:	d13a      	bne.n	80180cc <f_sync+0x104>
 8018056:	687b      	ldr	r3, [r7, #4]
 8018058:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801805a:	60fb      	str	r3, [r7, #12]
 801805c:	68fb      	ldr	r3, [r7, #12]
 801805e:	330b      	adds	r3, #11
 8018060:	781a      	ldrb	r2, [r3, #0]
 8018062:	68fb      	ldr	r3, [r7, #12]
 8018064:	330b      	adds	r3, #11
 8018066:	2120      	movs	r1, #32
 8018068:	430a      	orrs	r2, r1
 801806a:	b2d2      	uxtb	r2, r2
 801806c:	701a      	strb	r2, [r3, #0]
 801806e:	687b      	ldr	r3, [r7, #4]
 8018070:	6818      	ldr	r0, [r3, #0]
 8018072:	687b      	ldr	r3, [r7, #4]
 8018074:	689a      	ldr	r2, [r3, #8]
 8018076:	68fb      	ldr	r3, [r7, #12]
 8018078:	0019      	movs	r1, r3
 801807a:	f7fe fe40 	bl	8016cfe <st_clust>
 801807e:	68fb      	ldr	r3, [r7, #12]
 8018080:	331c      	adds	r3, #28
 8018082:	001a      	movs	r2, r3
 8018084:	687b      	ldr	r3, [r7, #4]
 8018086:	68db      	ldr	r3, [r3, #12]
 8018088:	0019      	movs	r1, r3
 801808a:	0010      	movs	r0, r2
 801808c:	f7fd fdda 	bl	8015c44 <st_dword>
 8018090:	68fb      	ldr	r3, [r7, #12]
 8018092:	3316      	adds	r3, #22
 8018094:	693a      	ldr	r2, [r7, #16]
 8018096:	0011      	movs	r1, r2
 8018098:	0018      	movs	r0, r3
 801809a:	f7fd fdd3 	bl	8015c44 <st_dword>
 801809e:	68fb      	ldr	r3, [r7, #12]
 80180a0:	3312      	adds	r3, #18
 80180a2:	2100      	movs	r1, #0
 80180a4:	0018      	movs	r0, r3
 80180a6:	f7fd fdaf 	bl	8015c08 <st_word>
 80180aa:	68bb      	ldr	r3, [r7, #8]
 80180ac:	2201      	movs	r2, #1
 80180ae:	70da      	strb	r2, [r3, #3]
 80180b0:	68bb      	ldr	r3, [r7, #8]
 80180b2:	193c      	adds	r4, r7, r4
 80180b4:	0018      	movs	r0, r3
 80180b6:	f7fe f84d 	bl	8016154 <sync_fs>
 80180ba:	0003      	movs	r3, r0
 80180bc:	7023      	strb	r3, [r4, #0]
 80180be:	687b      	ldr	r3, [r7, #4]
 80180c0:	7d1b      	ldrb	r3, [r3, #20]
 80180c2:	2240      	movs	r2, #64	@ 0x40
 80180c4:	4393      	bics	r3, r2
 80180c6:	b2da      	uxtb	r2, r3
 80180c8:	687b      	ldr	r3, [r7, #4]
 80180ca:	751a      	strb	r2, [r3, #20]
 80180cc:	2317      	movs	r3, #23
 80180ce:	18fb      	adds	r3, r7, r3
 80180d0:	781b      	ldrb	r3, [r3, #0]
 80180d2:	0018      	movs	r0, r3
 80180d4:	46bd      	mov	sp, r7
 80180d6:	b006      	add	sp, #24
 80180d8:	bdb0      	pop	{r4, r5, r7, pc}

080180da <f_close>:
 80180da:	b5b0      	push	{r4, r5, r7, lr}
 80180dc:	b084      	sub	sp, #16
 80180de:	af00      	add	r7, sp, #0
 80180e0:	6078      	str	r0, [r7, #4]
 80180e2:	250f      	movs	r5, #15
 80180e4:	197c      	adds	r4, r7, r5
 80180e6:	687b      	ldr	r3, [r7, #4]
 80180e8:	0018      	movs	r0, r3
 80180ea:	f7ff ff6d 	bl	8017fc8 <f_sync>
 80180ee:	0003      	movs	r3, r0
 80180f0:	7023      	strb	r3, [r4, #0]
 80180f2:	197b      	adds	r3, r7, r5
 80180f4:	781b      	ldrb	r3, [r3, #0]
 80180f6:	2b00      	cmp	r3, #0
 80180f8:	d11c      	bne.n	8018134 <f_close+0x5a>
 80180fa:	687b      	ldr	r3, [r7, #4]
 80180fc:	197c      	adds	r4, r7, r5
 80180fe:	2208      	movs	r2, #8
 8018100:	18ba      	adds	r2, r7, r2
 8018102:	0011      	movs	r1, r2
 8018104:	0018      	movs	r0, r3
 8018106:	f7ff fb37 	bl	8017778 <validate>
 801810a:	0003      	movs	r3, r0
 801810c:	7023      	strb	r3, [r4, #0]
 801810e:	197b      	adds	r3, r7, r5
 8018110:	781b      	ldrb	r3, [r3, #0]
 8018112:	2b00      	cmp	r3, #0
 8018114:	d10e      	bne.n	8018134 <f_close+0x5a>
 8018116:	687b      	ldr	r3, [r7, #4]
 8018118:	691b      	ldr	r3, [r3, #16]
 801811a:	197c      	adds	r4, r7, r5
 801811c:	0018      	movs	r0, r3
 801811e:	f7fd ff31 	bl	8015f84 <dec_lock>
 8018122:	0003      	movs	r3, r0
 8018124:	7023      	strb	r3, [r4, #0]
 8018126:	197b      	adds	r3, r7, r5
 8018128:	781b      	ldrb	r3, [r3, #0]
 801812a:	2b00      	cmp	r3, #0
 801812c:	d102      	bne.n	8018134 <f_close+0x5a>
 801812e:	687b      	ldr	r3, [r7, #4]
 8018130:	2200      	movs	r2, #0
 8018132:	601a      	str	r2, [r3, #0]
 8018134:	230f      	movs	r3, #15
 8018136:	18fb      	adds	r3, r7, r3
 8018138:	781b      	ldrb	r3, [r3, #0]
 801813a:	0018      	movs	r0, r3
 801813c:	46bd      	mov	sp, r7
 801813e:	b004      	add	sp, #16
 8018140:	bdb0      	pop	{r4, r5, r7, pc}

08018142 <f_lseek>:
 8018142:	b5b0      	push	{r4, r5, r7, lr}
 8018144:	b090      	sub	sp, #64	@ 0x40
 8018146:	af00      	add	r7, sp, #0
 8018148:	6078      	str	r0, [r7, #4]
 801814a:	6039      	str	r1, [r7, #0]
 801814c:	687b      	ldr	r3, [r7, #4]
 801814e:	253f      	movs	r5, #63	@ 0x3f
 8018150:	197c      	adds	r4, r7, r5
 8018152:	2208      	movs	r2, #8
 8018154:	18ba      	adds	r2, r7, r2
 8018156:	0011      	movs	r1, r2
 8018158:	0018      	movs	r0, r3
 801815a:	f7ff fb0d 	bl	8017778 <validate>
 801815e:	0003      	movs	r3, r0
 8018160:	7023      	strb	r3, [r4, #0]
 8018162:	197b      	adds	r3, r7, r5
 8018164:	781b      	ldrb	r3, [r3, #0]
 8018166:	2b00      	cmp	r3, #0
 8018168:	d103      	bne.n	8018172 <f_lseek+0x30>
 801816a:	197b      	adds	r3, r7, r5
 801816c:	687a      	ldr	r2, [r7, #4]
 801816e:	7d52      	ldrb	r2, [r2, #21]
 8018170:	701a      	strb	r2, [r3, #0]
 8018172:	223f      	movs	r2, #63	@ 0x3f
 8018174:	18bb      	adds	r3, r7, r2
 8018176:	781b      	ldrb	r3, [r3, #0]
 8018178:	2b00      	cmp	r3, #0
 801817a:	d002      	beq.n	8018182 <f_lseek+0x40>
 801817c:	18bb      	adds	r3, r7, r2
 801817e:	781b      	ldrb	r3, [r3, #0]
 8018180:	e20e      	b.n	80185a0 <f_lseek+0x45e>
 8018182:	687b      	ldr	r3, [r7, #4]
 8018184:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018186:	2b00      	cmp	r3, #0
 8018188:	d100      	bne.n	801818c <f_lseek+0x4a>
 801818a:	e0dc      	b.n	8018346 <f_lseek+0x204>
 801818c:	683b      	ldr	r3, [r7, #0]
 801818e:	3301      	adds	r3, #1
 8018190:	d15c      	bne.n	801824c <f_lseek+0x10a>
 8018192:	687b      	ldr	r3, [r7, #4]
 8018194:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018196:	627b      	str	r3, [r7, #36]	@ 0x24
 8018198:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801819a:	1d1a      	adds	r2, r3, #4
 801819c:	627a      	str	r2, [r7, #36]	@ 0x24
 801819e:	681b      	ldr	r3, [r3, #0]
 80181a0:	617b      	str	r3, [r7, #20]
 80181a2:	2302      	movs	r3, #2
 80181a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80181a6:	687b      	ldr	r3, [r7, #4]
 80181a8:	689b      	ldr	r3, [r3, #8]
 80181aa:	633b      	str	r3, [r7, #48]	@ 0x30
 80181ac:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181ae:	2b00      	cmp	r3, #0
 80181b0:	d03b      	beq.n	801822a <f_lseek+0xe8>
 80181b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181b4:	613b      	str	r3, [r7, #16]
 80181b6:	2300      	movs	r3, #0
 80181b8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80181ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80181bc:	3302      	adds	r3, #2
 80181be:	62bb      	str	r3, [r7, #40]	@ 0x28
 80181c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181c2:	60fb      	str	r3, [r7, #12]
 80181c4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80181c6:	3301      	adds	r3, #1
 80181c8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80181ca:	687b      	ldr	r3, [r7, #4]
 80181cc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80181ce:	0011      	movs	r1, r2
 80181d0:	0018      	movs	r0, r3
 80181d2:	f7fe f857 	bl	8016284 <get_fat>
 80181d6:	0003      	movs	r3, r0
 80181d8:	633b      	str	r3, [r7, #48]	@ 0x30
 80181da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181dc:	2b01      	cmp	r3, #1
 80181de:	d804      	bhi.n	80181ea <f_lseek+0xa8>
 80181e0:	687b      	ldr	r3, [r7, #4]
 80181e2:	2202      	movs	r2, #2
 80181e4:	755a      	strb	r2, [r3, #21]
 80181e6:	2302      	movs	r3, #2
 80181e8:	e1da      	b.n	80185a0 <f_lseek+0x45e>
 80181ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181ec:	3301      	adds	r3, #1
 80181ee:	d104      	bne.n	80181fa <f_lseek+0xb8>
 80181f0:	687b      	ldr	r3, [r7, #4]
 80181f2:	2201      	movs	r2, #1
 80181f4:	755a      	strb	r2, [r3, #21]
 80181f6:	2301      	movs	r3, #1
 80181f8:	e1d2      	b.n	80185a0 <f_lseek+0x45e>
 80181fa:	68fb      	ldr	r3, [r7, #12]
 80181fc:	3301      	adds	r3, #1
 80181fe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8018200:	429a      	cmp	r2, r3
 8018202:	d0dd      	beq.n	80181c0 <f_lseek+0x7e>
 8018204:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8018206:	697b      	ldr	r3, [r7, #20]
 8018208:	429a      	cmp	r2, r3
 801820a:	d809      	bhi.n	8018220 <f_lseek+0xde>
 801820c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801820e:	1d1a      	adds	r2, r3, #4
 8018210:	627a      	str	r2, [r7, #36]	@ 0x24
 8018212:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8018214:	601a      	str	r2, [r3, #0]
 8018216:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8018218:	1d1a      	adds	r2, r3, #4
 801821a:	627a      	str	r2, [r7, #36]	@ 0x24
 801821c:	693a      	ldr	r2, [r7, #16]
 801821e:	601a      	str	r2, [r3, #0]
 8018220:	68bb      	ldr	r3, [r7, #8]
 8018222:	699b      	ldr	r3, [r3, #24]
 8018224:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8018226:	429a      	cmp	r2, r3
 8018228:	d3c3      	bcc.n	80181b2 <f_lseek+0x70>
 801822a:	687b      	ldr	r3, [r7, #4]
 801822c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801822e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8018230:	601a      	str	r2, [r3, #0]
 8018232:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8018234:	697b      	ldr	r3, [r7, #20]
 8018236:	429a      	cmp	r2, r3
 8018238:	d803      	bhi.n	8018242 <f_lseek+0x100>
 801823a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801823c:	2200      	movs	r2, #0
 801823e:	601a      	str	r2, [r3, #0]
 8018240:	e1ab      	b.n	801859a <f_lseek+0x458>
 8018242:	233f      	movs	r3, #63	@ 0x3f
 8018244:	18fb      	adds	r3, r7, r3
 8018246:	2211      	movs	r2, #17
 8018248:	701a      	strb	r2, [r3, #0]
 801824a:	e1a6      	b.n	801859a <f_lseek+0x458>
 801824c:	687b      	ldr	r3, [r7, #4]
 801824e:	68db      	ldr	r3, [r3, #12]
 8018250:	683a      	ldr	r2, [r7, #0]
 8018252:	429a      	cmp	r2, r3
 8018254:	d902      	bls.n	801825c <f_lseek+0x11a>
 8018256:	687b      	ldr	r3, [r7, #4]
 8018258:	68db      	ldr	r3, [r3, #12]
 801825a:	603b      	str	r3, [r7, #0]
 801825c:	687b      	ldr	r3, [r7, #4]
 801825e:	683a      	ldr	r2, [r7, #0]
 8018260:	619a      	str	r2, [r3, #24]
 8018262:	683b      	ldr	r3, [r7, #0]
 8018264:	2b00      	cmp	r3, #0
 8018266:	d100      	bne.n	801826a <f_lseek+0x128>
 8018268:	e197      	b.n	801859a <f_lseek+0x458>
 801826a:	683b      	ldr	r3, [r7, #0]
 801826c:	1e5a      	subs	r2, r3, #1
 801826e:	687b      	ldr	r3, [r7, #4]
 8018270:	0011      	movs	r1, r2
 8018272:	0018      	movs	r0, r3
 8018274:	f7fe fb29 	bl	80168ca <clmt_clust>
 8018278:	0002      	movs	r2, r0
 801827a:	687b      	ldr	r3, [r7, #4]
 801827c:	61da      	str	r2, [r3, #28]
 801827e:	68ba      	ldr	r2, [r7, #8]
 8018280:	687b      	ldr	r3, [r7, #4]
 8018282:	69db      	ldr	r3, [r3, #28]
 8018284:	0019      	movs	r1, r3
 8018286:	0010      	movs	r0, r2
 8018288:	f7fd ffe0 	bl	801624c <clust2sect>
 801828c:	0003      	movs	r3, r0
 801828e:	61bb      	str	r3, [r7, #24]
 8018290:	69bb      	ldr	r3, [r7, #24]
 8018292:	2b00      	cmp	r3, #0
 8018294:	d104      	bne.n	80182a0 <f_lseek+0x15e>
 8018296:	687b      	ldr	r3, [r7, #4]
 8018298:	2202      	movs	r2, #2
 801829a:	755a      	strb	r2, [r3, #21]
 801829c:	2302      	movs	r3, #2
 801829e:	e17f      	b.n	80185a0 <f_lseek+0x45e>
 80182a0:	683b      	ldr	r3, [r7, #0]
 80182a2:	1e5a      	subs	r2, r3, #1
 80182a4:	68bb      	ldr	r3, [r7, #8]
 80182a6:	899b      	ldrh	r3, [r3, #12]
 80182a8:	0019      	movs	r1, r3
 80182aa:	0010      	movs	r0, r2
 80182ac:	f7e7 ff3c 	bl	8000128 <__udivsi3>
 80182b0:	0003      	movs	r3, r0
 80182b2:	001a      	movs	r2, r3
 80182b4:	68bb      	ldr	r3, [r7, #8]
 80182b6:	895b      	ldrh	r3, [r3, #10]
 80182b8:	3b01      	subs	r3, #1
 80182ba:	4013      	ands	r3, r2
 80182bc:	69ba      	ldr	r2, [r7, #24]
 80182be:	18d3      	adds	r3, r2, r3
 80182c0:	61bb      	str	r3, [r7, #24]
 80182c2:	687b      	ldr	r3, [r7, #4]
 80182c4:	699a      	ldr	r2, [r3, #24]
 80182c6:	68bb      	ldr	r3, [r7, #8]
 80182c8:	899b      	ldrh	r3, [r3, #12]
 80182ca:	0019      	movs	r1, r3
 80182cc:	0010      	movs	r0, r2
 80182ce:	f7e7 ffb1 	bl	8000234 <__aeabi_uidivmod>
 80182d2:	1e0b      	subs	r3, r1, #0
 80182d4:	d100      	bne.n	80182d8 <f_lseek+0x196>
 80182d6:	e160      	b.n	801859a <f_lseek+0x458>
 80182d8:	687b      	ldr	r3, [r7, #4]
 80182da:	6a1b      	ldr	r3, [r3, #32]
 80182dc:	69ba      	ldr	r2, [r7, #24]
 80182de:	429a      	cmp	r2, r3
 80182e0:	d100      	bne.n	80182e4 <f_lseek+0x1a2>
 80182e2:	e15a      	b.n	801859a <f_lseek+0x458>
 80182e4:	687b      	ldr	r3, [r7, #4]
 80182e6:	7d1b      	ldrb	r3, [r3, #20]
 80182e8:	b25b      	sxtb	r3, r3
 80182ea:	2b00      	cmp	r3, #0
 80182ec:	da17      	bge.n	801831e <f_lseek+0x1dc>
 80182ee:	68bb      	ldr	r3, [r7, #8]
 80182f0:	7858      	ldrb	r0, [r3, #1]
 80182f2:	687b      	ldr	r3, [r7, #4]
 80182f4:	3330      	adds	r3, #48	@ 0x30
 80182f6:	0019      	movs	r1, r3
 80182f8:	687b      	ldr	r3, [r7, #4]
 80182fa:	6a1a      	ldr	r2, [r3, #32]
 80182fc:	2301      	movs	r3, #1
 80182fe:	f7fd fbf7 	bl	8015af0 <disk_write>
 8018302:	1e03      	subs	r3, r0, #0
 8018304:	d004      	beq.n	8018310 <f_lseek+0x1ce>
 8018306:	687b      	ldr	r3, [r7, #4]
 8018308:	2201      	movs	r2, #1
 801830a:	755a      	strb	r2, [r3, #21]
 801830c:	2301      	movs	r3, #1
 801830e:	e147      	b.n	80185a0 <f_lseek+0x45e>
 8018310:	687b      	ldr	r3, [r7, #4]
 8018312:	7d1b      	ldrb	r3, [r3, #20]
 8018314:	227f      	movs	r2, #127	@ 0x7f
 8018316:	4013      	ands	r3, r2
 8018318:	b2da      	uxtb	r2, r3
 801831a:	687b      	ldr	r3, [r7, #4]
 801831c:	751a      	strb	r2, [r3, #20]
 801831e:	68bb      	ldr	r3, [r7, #8]
 8018320:	7858      	ldrb	r0, [r3, #1]
 8018322:	687b      	ldr	r3, [r7, #4]
 8018324:	3330      	adds	r3, #48	@ 0x30
 8018326:	0019      	movs	r1, r3
 8018328:	69ba      	ldr	r2, [r7, #24]
 801832a:	2301      	movs	r3, #1
 801832c:	f7fd fbb8 	bl	8015aa0 <disk_read>
 8018330:	1e03      	subs	r3, r0, #0
 8018332:	d004      	beq.n	801833e <f_lseek+0x1fc>
 8018334:	687b      	ldr	r3, [r7, #4]
 8018336:	2201      	movs	r2, #1
 8018338:	755a      	strb	r2, [r3, #21]
 801833a:	2301      	movs	r3, #1
 801833c:	e130      	b.n	80185a0 <f_lseek+0x45e>
 801833e:	687b      	ldr	r3, [r7, #4]
 8018340:	69ba      	ldr	r2, [r7, #24]
 8018342:	621a      	str	r2, [r3, #32]
 8018344:	e129      	b.n	801859a <f_lseek+0x458>
 8018346:	687b      	ldr	r3, [r7, #4]
 8018348:	68db      	ldr	r3, [r3, #12]
 801834a:	683a      	ldr	r2, [r7, #0]
 801834c:	429a      	cmp	r2, r3
 801834e:	d908      	bls.n	8018362 <f_lseek+0x220>
 8018350:	687b      	ldr	r3, [r7, #4]
 8018352:	7d1b      	ldrb	r3, [r3, #20]
 8018354:	001a      	movs	r2, r3
 8018356:	2302      	movs	r3, #2
 8018358:	4013      	ands	r3, r2
 801835a:	d102      	bne.n	8018362 <f_lseek+0x220>
 801835c:	687b      	ldr	r3, [r7, #4]
 801835e:	68db      	ldr	r3, [r3, #12]
 8018360:	603b      	str	r3, [r7, #0]
 8018362:	687b      	ldr	r3, [r7, #4]
 8018364:	699b      	ldr	r3, [r3, #24]
 8018366:	623b      	str	r3, [r7, #32]
 8018368:	2300      	movs	r3, #0
 801836a:	637b      	str	r3, [r7, #52]	@ 0x34
 801836c:	687b      	ldr	r3, [r7, #4]
 801836e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8018370:	619a      	str	r2, [r3, #24]
 8018372:	683b      	ldr	r3, [r7, #0]
 8018374:	2b00      	cmp	r3, #0
 8018376:	d100      	bne.n	801837a <f_lseek+0x238>
 8018378:	e0bf      	b.n	80184fa <f_lseek+0x3b8>
 801837a:	68bb      	ldr	r3, [r7, #8]
 801837c:	895b      	ldrh	r3, [r3, #10]
 801837e:	001a      	movs	r2, r3
 8018380:	68bb      	ldr	r3, [r7, #8]
 8018382:	899b      	ldrh	r3, [r3, #12]
 8018384:	4353      	muls	r3, r2
 8018386:	61fb      	str	r3, [r7, #28]
 8018388:	6a3b      	ldr	r3, [r7, #32]
 801838a:	2b00      	cmp	r3, #0
 801838c:	d020      	beq.n	80183d0 <f_lseek+0x28e>
 801838e:	683b      	ldr	r3, [r7, #0]
 8018390:	3b01      	subs	r3, #1
 8018392:	69f9      	ldr	r1, [r7, #28]
 8018394:	0018      	movs	r0, r3
 8018396:	f7e7 fec7 	bl	8000128 <__udivsi3>
 801839a:	0003      	movs	r3, r0
 801839c:	001c      	movs	r4, r3
 801839e:	6a3b      	ldr	r3, [r7, #32]
 80183a0:	3b01      	subs	r3, #1
 80183a2:	69f9      	ldr	r1, [r7, #28]
 80183a4:	0018      	movs	r0, r3
 80183a6:	f7e7 febf 	bl	8000128 <__udivsi3>
 80183aa:	0003      	movs	r3, r0
 80183ac:	429c      	cmp	r4, r3
 80183ae:	d30f      	bcc.n	80183d0 <f_lseek+0x28e>
 80183b0:	6a3b      	ldr	r3, [r7, #32]
 80183b2:	3b01      	subs	r3, #1
 80183b4:	69fa      	ldr	r2, [r7, #28]
 80183b6:	4252      	negs	r2, r2
 80183b8:	401a      	ands	r2, r3
 80183ba:	687b      	ldr	r3, [r7, #4]
 80183bc:	619a      	str	r2, [r3, #24]
 80183be:	687b      	ldr	r3, [r7, #4]
 80183c0:	699b      	ldr	r3, [r3, #24]
 80183c2:	683a      	ldr	r2, [r7, #0]
 80183c4:	1ad3      	subs	r3, r2, r3
 80183c6:	603b      	str	r3, [r7, #0]
 80183c8:	687b      	ldr	r3, [r7, #4]
 80183ca:	69db      	ldr	r3, [r3, #28]
 80183cc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80183ce:	e022      	b.n	8018416 <f_lseek+0x2d4>
 80183d0:	687b      	ldr	r3, [r7, #4]
 80183d2:	689b      	ldr	r3, [r3, #8]
 80183d4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80183d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80183d8:	2b00      	cmp	r3, #0
 80183da:	d119      	bne.n	8018410 <f_lseek+0x2ce>
 80183dc:	687b      	ldr	r3, [r7, #4]
 80183de:	2100      	movs	r1, #0
 80183e0:	0018      	movs	r0, r3
 80183e2:	f7fe f9cc 	bl	801677e <create_chain>
 80183e6:	0003      	movs	r3, r0
 80183e8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80183ea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80183ec:	2b01      	cmp	r3, #1
 80183ee:	d104      	bne.n	80183fa <f_lseek+0x2b8>
 80183f0:	687b      	ldr	r3, [r7, #4]
 80183f2:	2202      	movs	r2, #2
 80183f4:	755a      	strb	r2, [r3, #21]
 80183f6:	2302      	movs	r3, #2
 80183f8:	e0d2      	b.n	80185a0 <f_lseek+0x45e>
 80183fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80183fc:	3301      	adds	r3, #1
 80183fe:	d104      	bne.n	801840a <f_lseek+0x2c8>
 8018400:	687b      	ldr	r3, [r7, #4]
 8018402:	2201      	movs	r2, #1
 8018404:	755a      	strb	r2, [r3, #21]
 8018406:	2301      	movs	r3, #1
 8018408:	e0ca      	b.n	80185a0 <f_lseek+0x45e>
 801840a:	687b      	ldr	r3, [r7, #4]
 801840c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 801840e:	609a      	str	r2, [r3, #8]
 8018410:	687b      	ldr	r3, [r7, #4]
 8018412:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8018414:	61da      	str	r2, [r3, #28]
 8018416:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8018418:	2b00      	cmp	r3, #0
 801841a:	d100      	bne.n	801841e <f_lseek+0x2dc>
 801841c:	e06d      	b.n	80184fa <f_lseek+0x3b8>
 801841e:	e03d      	b.n	801849c <f_lseek+0x35a>
 8018420:	683a      	ldr	r2, [r7, #0]
 8018422:	69fb      	ldr	r3, [r7, #28]
 8018424:	1ad3      	subs	r3, r2, r3
 8018426:	603b      	str	r3, [r7, #0]
 8018428:	687b      	ldr	r3, [r7, #4]
 801842a:	699a      	ldr	r2, [r3, #24]
 801842c:	69fb      	ldr	r3, [r7, #28]
 801842e:	18d2      	adds	r2, r2, r3
 8018430:	687b      	ldr	r3, [r7, #4]
 8018432:	619a      	str	r2, [r3, #24]
 8018434:	687b      	ldr	r3, [r7, #4]
 8018436:	7d1b      	ldrb	r3, [r3, #20]
 8018438:	001a      	movs	r2, r3
 801843a:	2302      	movs	r3, #2
 801843c:	4013      	ands	r3, r2
 801843e:	d00d      	beq.n	801845c <f_lseek+0x31a>
 8018440:	687b      	ldr	r3, [r7, #4]
 8018442:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8018444:	0011      	movs	r1, r2
 8018446:	0018      	movs	r0, r3
 8018448:	f7fe f999 	bl	801677e <create_chain>
 801844c:	0003      	movs	r3, r0
 801844e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8018450:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8018452:	2b00      	cmp	r3, #0
 8018454:	d10a      	bne.n	801846c <f_lseek+0x32a>
 8018456:	2300      	movs	r3, #0
 8018458:	603b      	str	r3, [r7, #0]
 801845a:	e023      	b.n	80184a4 <f_lseek+0x362>
 801845c:	687b      	ldr	r3, [r7, #4]
 801845e:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8018460:	0011      	movs	r1, r2
 8018462:	0018      	movs	r0, r3
 8018464:	f7fd ff0e 	bl	8016284 <get_fat>
 8018468:	0003      	movs	r3, r0
 801846a:	63bb      	str	r3, [r7, #56]	@ 0x38
 801846c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801846e:	3301      	adds	r3, #1
 8018470:	d104      	bne.n	801847c <f_lseek+0x33a>
 8018472:	687b      	ldr	r3, [r7, #4]
 8018474:	2201      	movs	r2, #1
 8018476:	755a      	strb	r2, [r3, #21]
 8018478:	2301      	movs	r3, #1
 801847a:	e091      	b.n	80185a0 <f_lseek+0x45e>
 801847c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801847e:	2b01      	cmp	r3, #1
 8018480:	d904      	bls.n	801848c <f_lseek+0x34a>
 8018482:	68bb      	ldr	r3, [r7, #8]
 8018484:	699b      	ldr	r3, [r3, #24]
 8018486:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8018488:	429a      	cmp	r2, r3
 801848a:	d304      	bcc.n	8018496 <f_lseek+0x354>
 801848c:	687b      	ldr	r3, [r7, #4]
 801848e:	2202      	movs	r2, #2
 8018490:	755a      	strb	r2, [r3, #21]
 8018492:	2302      	movs	r3, #2
 8018494:	e084      	b.n	80185a0 <f_lseek+0x45e>
 8018496:	687b      	ldr	r3, [r7, #4]
 8018498:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 801849a:	61da      	str	r2, [r3, #28]
 801849c:	683a      	ldr	r2, [r7, #0]
 801849e:	69fb      	ldr	r3, [r7, #28]
 80184a0:	429a      	cmp	r2, r3
 80184a2:	d8bd      	bhi.n	8018420 <f_lseek+0x2de>
 80184a4:	687b      	ldr	r3, [r7, #4]
 80184a6:	699a      	ldr	r2, [r3, #24]
 80184a8:	683b      	ldr	r3, [r7, #0]
 80184aa:	18d2      	adds	r2, r2, r3
 80184ac:	687b      	ldr	r3, [r7, #4]
 80184ae:	619a      	str	r2, [r3, #24]
 80184b0:	68bb      	ldr	r3, [r7, #8]
 80184b2:	899b      	ldrh	r3, [r3, #12]
 80184b4:	001a      	movs	r2, r3
 80184b6:	683b      	ldr	r3, [r7, #0]
 80184b8:	0011      	movs	r1, r2
 80184ba:	0018      	movs	r0, r3
 80184bc:	f7e7 feba 	bl	8000234 <__aeabi_uidivmod>
 80184c0:	1e0b      	subs	r3, r1, #0
 80184c2:	d01a      	beq.n	80184fa <f_lseek+0x3b8>
 80184c4:	68bb      	ldr	r3, [r7, #8]
 80184c6:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80184c8:	0011      	movs	r1, r2
 80184ca:	0018      	movs	r0, r3
 80184cc:	f7fd febe 	bl	801624c <clust2sect>
 80184d0:	0003      	movs	r3, r0
 80184d2:	637b      	str	r3, [r7, #52]	@ 0x34
 80184d4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80184d6:	2b00      	cmp	r3, #0
 80184d8:	d104      	bne.n	80184e4 <f_lseek+0x3a2>
 80184da:	687b      	ldr	r3, [r7, #4]
 80184dc:	2202      	movs	r2, #2
 80184de:	755a      	strb	r2, [r3, #21]
 80184e0:	2302      	movs	r3, #2
 80184e2:	e05d      	b.n	80185a0 <f_lseek+0x45e>
 80184e4:	68bb      	ldr	r3, [r7, #8]
 80184e6:	899b      	ldrh	r3, [r3, #12]
 80184e8:	0019      	movs	r1, r3
 80184ea:	6838      	ldr	r0, [r7, #0]
 80184ec:	f7e7 fe1c 	bl	8000128 <__udivsi3>
 80184f0:	0003      	movs	r3, r0
 80184f2:	001a      	movs	r2, r3
 80184f4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80184f6:	189b      	adds	r3, r3, r2
 80184f8:	637b      	str	r3, [r7, #52]	@ 0x34
 80184fa:	687b      	ldr	r3, [r7, #4]
 80184fc:	699a      	ldr	r2, [r3, #24]
 80184fe:	687b      	ldr	r3, [r7, #4]
 8018500:	68db      	ldr	r3, [r3, #12]
 8018502:	429a      	cmp	r2, r3
 8018504:	d90a      	bls.n	801851c <f_lseek+0x3da>
 8018506:	687b      	ldr	r3, [r7, #4]
 8018508:	699a      	ldr	r2, [r3, #24]
 801850a:	687b      	ldr	r3, [r7, #4]
 801850c:	60da      	str	r2, [r3, #12]
 801850e:	687b      	ldr	r3, [r7, #4]
 8018510:	7d1b      	ldrb	r3, [r3, #20]
 8018512:	2240      	movs	r2, #64	@ 0x40
 8018514:	4313      	orrs	r3, r2
 8018516:	b2da      	uxtb	r2, r3
 8018518:	687b      	ldr	r3, [r7, #4]
 801851a:	751a      	strb	r2, [r3, #20]
 801851c:	687b      	ldr	r3, [r7, #4]
 801851e:	699a      	ldr	r2, [r3, #24]
 8018520:	68bb      	ldr	r3, [r7, #8]
 8018522:	899b      	ldrh	r3, [r3, #12]
 8018524:	0019      	movs	r1, r3
 8018526:	0010      	movs	r0, r2
 8018528:	f7e7 fe84 	bl	8000234 <__aeabi_uidivmod>
 801852c:	1e0b      	subs	r3, r1, #0
 801852e:	d034      	beq.n	801859a <f_lseek+0x458>
 8018530:	687b      	ldr	r3, [r7, #4]
 8018532:	6a1b      	ldr	r3, [r3, #32]
 8018534:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8018536:	429a      	cmp	r2, r3
 8018538:	d02f      	beq.n	801859a <f_lseek+0x458>
 801853a:	687b      	ldr	r3, [r7, #4]
 801853c:	7d1b      	ldrb	r3, [r3, #20]
 801853e:	b25b      	sxtb	r3, r3
 8018540:	2b00      	cmp	r3, #0
 8018542:	da17      	bge.n	8018574 <f_lseek+0x432>
 8018544:	68bb      	ldr	r3, [r7, #8]
 8018546:	7858      	ldrb	r0, [r3, #1]
 8018548:	687b      	ldr	r3, [r7, #4]
 801854a:	3330      	adds	r3, #48	@ 0x30
 801854c:	0019      	movs	r1, r3
 801854e:	687b      	ldr	r3, [r7, #4]
 8018550:	6a1a      	ldr	r2, [r3, #32]
 8018552:	2301      	movs	r3, #1
 8018554:	f7fd facc 	bl	8015af0 <disk_write>
 8018558:	1e03      	subs	r3, r0, #0
 801855a:	d004      	beq.n	8018566 <f_lseek+0x424>
 801855c:	687b      	ldr	r3, [r7, #4]
 801855e:	2201      	movs	r2, #1
 8018560:	755a      	strb	r2, [r3, #21]
 8018562:	2301      	movs	r3, #1
 8018564:	e01c      	b.n	80185a0 <f_lseek+0x45e>
 8018566:	687b      	ldr	r3, [r7, #4]
 8018568:	7d1b      	ldrb	r3, [r3, #20]
 801856a:	227f      	movs	r2, #127	@ 0x7f
 801856c:	4013      	ands	r3, r2
 801856e:	b2da      	uxtb	r2, r3
 8018570:	687b      	ldr	r3, [r7, #4]
 8018572:	751a      	strb	r2, [r3, #20]
 8018574:	68bb      	ldr	r3, [r7, #8]
 8018576:	7858      	ldrb	r0, [r3, #1]
 8018578:	687b      	ldr	r3, [r7, #4]
 801857a:	3330      	adds	r3, #48	@ 0x30
 801857c:	0019      	movs	r1, r3
 801857e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8018580:	2301      	movs	r3, #1
 8018582:	f7fd fa8d 	bl	8015aa0 <disk_read>
 8018586:	1e03      	subs	r3, r0, #0
 8018588:	d004      	beq.n	8018594 <f_lseek+0x452>
 801858a:	687b      	ldr	r3, [r7, #4]
 801858c:	2201      	movs	r2, #1
 801858e:	755a      	strb	r2, [r3, #21]
 8018590:	2301      	movs	r3, #1
 8018592:	e005      	b.n	80185a0 <f_lseek+0x45e>
 8018594:	687b      	ldr	r3, [r7, #4]
 8018596:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8018598:	621a      	str	r2, [r3, #32]
 801859a:	233f      	movs	r3, #63	@ 0x3f
 801859c:	18fb      	adds	r3, r7, r3
 801859e:	781b      	ldrb	r3, [r3, #0]
 80185a0:	0018      	movs	r0, r3
 80185a2:	46bd      	mov	sp, r7
 80185a4:	b010      	add	sp, #64	@ 0x40
 80185a6:	bdb0      	pop	{r4, r5, r7, pc}

080185a8 <putc_bfd>:
 80185a8:	b580      	push	{r7, lr}
 80185aa:	b084      	sub	sp, #16
 80185ac:	af00      	add	r7, sp, #0
 80185ae:	6078      	str	r0, [r7, #4]
 80185b0:	000a      	movs	r2, r1
 80185b2:	1cfb      	adds	r3, r7, #3
 80185b4:	701a      	strb	r2, [r3, #0]
 80185b6:	1cfb      	adds	r3, r7, #3
 80185b8:	781b      	ldrb	r3, [r3, #0]
 80185ba:	2b0a      	cmp	r3, #10
 80185bc:	d104      	bne.n	80185c8 <putc_bfd+0x20>
 80185be:	687b      	ldr	r3, [r7, #4]
 80185c0:	210d      	movs	r1, #13
 80185c2:	0018      	movs	r0, r3
 80185c4:	f7ff fff0 	bl	80185a8 <putc_bfd>
 80185c8:	687b      	ldr	r3, [r7, #4]
 80185ca:	685b      	ldr	r3, [r3, #4]
 80185cc:	60fb      	str	r3, [r7, #12]
 80185ce:	68fb      	ldr	r3, [r7, #12]
 80185d0:	2b00      	cmp	r3, #0
 80185d2:	db26      	blt.n	8018622 <putc_bfd+0x7a>
 80185d4:	68fb      	ldr	r3, [r7, #12]
 80185d6:	1c5a      	adds	r2, r3, #1
 80185d8:	60fa      	str	r2, [r7, #12]
 80185da:	687a      	ldr	r2, [r7, #4]
 80185dc:	18d3      	adds	r3, r2, r3
 80185de:	1cfa      	adds	r2, r7, #3
 80185e0:	7812      	ldrb	r2, [r2, #0]
 80185e2:	731a      	strb	r2, [r3, #12]
 80185e4:	68fb      	ldr	r3, [r7, #12]
 80185e6:	2b3c      	cmp	r3, #60	@ 0x3c
 80185e8:	dd12      	ble.n	8018610 <putc_bfd+0x68>
 80185ea:	687b      	ldr	r3, [r7, #4]
 80185ec:	6818      	ldr	r0, [r3, #0]
 80185ee:	687b      	ldr	r3, [r7, #4]
 80185f0:	330c      	adds	r3, #12
 80185f2:	0019      	movs	r1, r3
 80185f4:	68fa      	ldr	r2, [r7, #12]
 80185f6:	2308      	movs	r3, #8
 80185f8:	18fb      	adds	r3, r7, r3
 80185fa:	f7ff fb4a 	bl	8017c92 <f_write>
 80185fe:	68ba      	ldr	r2, [r7, #8]
 8018600:	68fb      	ldr	r3, [r7, #12]
 8018602:	429a      	cmp	r2, r3
 8018604:	d101      	bne.n	801860a <putc_bfd+0x62>
 8018606:	2300      	movs	r3, #0
 8018608:	e001      	b.n	801860e <putc_bfd+0x66>
 801860a:	2301      	movs	r3, #1
 801860c:	425b      	negs	r3, r3
 801860e:	60fb      	str	r3, [r7, #12]
 8018610:	687b      	ldr	r3, [r7, #4]
 8018612:	68fa      	ldr	r2, [r7, #12]
 8018614:	605a      	str	r2, [r3, #4]
 8018616:	687b      	ldr	r3, [r7, #4]
 8018618:	689b      	ldr	r3, [r3, #8]
 801861a:	1c5a      	adds	r2, r3, #1
 801861c:	687b      	ldr	r3, [r7, #4]
 801861e:	609a      	str	r2, [r3, #8]
 8018620:	e000      	b.n	8018624 <putc_bfd+0x7c>
 8018622:	46c0      	nop			@ (mov r8, r8)
 8018624:	46bd      	mov	sp, r7
 8018626:	b004      	add	sp, #16
 8018628:	bd80      	pop	{r7, pc}

0801862a <putc_flush>:
 801862a:	b580      	push	{r7, lr}
 801862c:	b084      	sub	sp, #16
 801862e:	af00      	add	r7, sp, #0
 8018630:	6078      	str	r0, [r7, #4]
 8018632:	687b      	ldr	r3, [r7, #4]
 8018634:	685b      	ldr	r3, [r3, #4]
 8018636:	2b00      	cmp	r3, #0
 8018638:	db15      	blt.n	8018666 <putc_flush+0x3c>
 801863a:	687b      	ldr	r3, [r7, #4]
 801863c:	6818      	ldr	r0, [r3, #0]
 801863e:	687b      	ldr	r3, [r7, #4]
 8018640:	330c      	adds	r3, #12
 8018642:	0019      	movs	r1, r3
 8018644:	687b      	ldr	r3, [r7, #4]
 8018646:	685b      	ldr	r3, [r3, #4]
 8018648:	001a      	movs	r2, r3
 801864a:	230c      	movs	r3, #12
 801864c:	18fb      	adds	r3, r7, r3
 801864e:	f7ff fb20 	bl	8017c92 <f_write>
 8018652:	1e03      	subs	r3, r0, #0
 8018654:	d107      	bne.n	8018666 <putc_flush+0x3c>
 8018656:	687b      	ldr	r3, [r7, #4]
 8018658:	685b      	ldr	r3, [r3, #4]
 801865a:	68fa      	ldr	r2, [r7, #12]
 801865c:	4293      	cmp	r3, r2
 801865e:	d102      	bne.n	8018666 <putc_flush+0x3c>
 8018660:	687b      	ldr	r3, [r7, #4]
 8018662:	689b      	ldr	r3, [r3, #8]
 8018664:	e001      	b.n	801866a <putc_flush+0x40>
 8018666:	2301      	movs	r3, #1
 8018668:	425b      	negs	r3, r3
 801866a:	0018      	movs	r0, r3
 801866c:	46bd      	mov	sp, r7
 801866e:	b004      	add	sp, #16
 8018670:	bd80      	pop	{r7, pc}

08018672 <putc_init>:
 8018672:	b580      	push	{r7, lr}
 8018674:	b082      	sub	sp, #8
 8018676:	af00      	add	r7, sp, #0
 8018678:	6078      	str	r0, [r7, #4]
 801867a:	6039      	str	r1, [r7, #0]
 801867c:	687b      	ldr	r3, [r7, #4]
 801867e:	683a      	ldr	r2, [r7, #0]
 8018680:	601a      	str	r2, [r3, #0]
 8018682:	687b      	ldr	r3, [r7, #4]
 8018684:	2200      	movs	r2, #0
 8018686:	605a      	str	r2, [r3, #4]
 8018688:	687b      	ldr	r3, [r7, #4]
 801868a:	685a      	ldr	r2, [r3, #4]
 801868c:	687b      	ldr	r3, [r7, #4]
 801868e:	609a      	str	r2, [r3, #8]
 8018690:	46c0      	nop			@ (mov r8, r8)
 8018692:	46bd      	mov	sp, r7
 8018694:	b002      	add	sp, #8
 8018696:	bd80      	pop	{r7, pc}

08018698 <f_puts>:
 8018698:	b580      	push	{r7, lr}
 801869a:	b096      	sub	sp, #88	@ 0x58
 801869c:	af00      	add	r7, sp, #0
 801869e:	6078      	str	r0, [r7, #4]
 80186a0:	6039      	str	r1, [r7, #0]
 80186a2:	683a      	ldr	r2, [r7, #0]
 80186a4:	230c      	movs	r3, #12
 80186a6:	18fb      	adds	r3, r7, r3
 80186a8:	0011      	movs	r1, r2
 80186aa:	0018      	movs	r0, r3
 80186ac:	f7ff ffe1 	bl	8018672 <putc_init>
 80186b0:	e009      	b.n	80186c6 <f_puts+0x2e>
 80186b2:	687b      	ldr	r3, [r7, #4]
 80186b4:	1c5a      	adds	r2, r3, #1
 80186b6:	607a      	str	r2, [r7, #4]
 80186b8:	781a      	ldrb	r2, [r3, #0]
 80186ba:	230c      	movs	r3, #12
 80186bc:	18fb      	adds	r3, r7, r3
 80186be:	0011      	movs	r1, r2
 80186c0:	0018      	movs	r0, r3
 80186c2:	f7ff ff71 	bl	80185a8 <putc_bfd>
 80186c6:	687b      	ldr	r3, [r7, #4]
 80186c8:	781b      	ldrb	r3, [r3, #0]
 80186ca:	2b00      	cmp	r3, #0
 80186cc:	d1f1      	bne.n	80186b2 <f_puts+0x1a>
 80186ce:	230c      	movs	r3, #12
 80186d0:	18fb      	adds	r3, r7, r3
 80186d2:	0018      	movs	r0, r3
 80186d4:	f7ff ffa9 	bl	801862a <putc_flush>
 80186d8:	0003      	movs	r3, r0
 80186da:	0018      	movs	r0, r3
 80186dc:	46bd      	mov	sp, r7
 80186de:	b016      	add	sp, #88	@ 0x58
 80186e0:	bd80      	pop	{r7, pc}
	...

080186e4 <FATFS_LinkDriverEx>:
 80186e4:	b590      	push	{r4, r7, lr}
 80186e6:	b087      	sub	sp, #28
 80186e8:	af00      	add	r7, sp, #0
 80186ea:	60f8      	str	r0, [r7, #12]
 80186ec:	60b9      	str	r1, [r7, #8]
 80186ee:	1dfb      	adds	r3, r7, #7
 80186f0:	701a      	strb	r2, [r3, #0]
 80186f2:	2417      	movs	r4, #23
 80186f4:	193b      	adds	r3, r7, r4
 80186f6:	2201      	movs	r2, #1
 80186f8:	701a      	strb	r2, [r3, #0]
 80186fa:	2016      	movs	r0, #22
 80186fc:	183b      	adds	r3, r7, r0
 80186fe:	2200      	movs	r2, #0
 8018700:	701a      	strb	r2, [r3, #0]
 8018702:	4b21      	ldr	r3, [pc, #132]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 8018704:	7a5b      	ldrb	r3, [r3, #9]
 8018706:	b2db      	uxtb	r3, r3
 8018708:	2b00      	cmp	r3, #0
 801870a:	d136      	bne.n	801877a <FATFS_LinkDriverEx+0x96>
 801870c:	4b1e      	ldr	r3, [pc, #120]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 801870e:	7a5b      	ldrb	r3, [r3, #9]
 8018710:	b2db      	uxtb	r3, r3
 8018712:	001a      	movs	r2, r3
 8018714:	4b1c      	ldr	r3, [pc, #112]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 8018716:	2100      	movs	r1, #0
 8018718:	5499      	strb	r1, [r3, r2]
 801871a:	4b1b      	ldr	r3, [pc, #108]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 801871c:	7a5b      	ldrb	r3, [r3, #9]
 801871e:	b2db      	uxtb	r3, r3
 8018720:	4a19      	ldr	r2, [pc, #100]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 8018722:	009b      	lsls	r3, r3, #2
 8018724:	18d3      	adds	r3, r2, r3
 8018726:	3304      	adds	r3, #4
 8018728:	68fa      	ldr	r2, [r7, #12]
 801872a:	601a      	str	r2, [r3, #0]
 801872c:	4b16      	ldr	r3, [pc, #88]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 801872e:	7a5b      	ldrb	r3, [r3, #9]
 8018730:	b2db      	uxtb	r3, r3
 8018732:	001a      	movs	r2, r3
 8018734:	4b14      	ldr	r3, [pc, #80]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 8018736:	189b      	adds	r3, r3, r2
 8018738:	1dfa      	adds	r2, r7, #7
 801873a:	7812      	ldrb	r2, [r2, #0]
 801873c:	721a      	strb	r2, [r3, #8]
 801873e:	4b12      	ldr	r3, [pc, #72]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 8018740:	7a5b      	ldrb	r3, [r3, #9]
 8018742:	b2db      	uxtb	r3, r3
 8018744:	1c5a      	adds	r2, r3, #1
 8018746:	b2d1      	uxtb	r1, r2
 8018748:	4a0f      	ldr	r2, [pc, #60]	@ (8018788 <FATFS_LinkDriverEx+0xa4>)
 801874a:	7251      	strb	r1, [r2, #9]
 801874c:	183a      	adds	r2, r7, r0
 801874e:	7013      	strb	r3, [r2, #0]
 8018750:	183b      	adds	r3, r7, r0
 8018752:	781b      	ldrb	r3, [r3, #0]
 8018754:	3330      	adds	r3, #48	@ 0x30
 8018756:	b2da      	uxtb	r2, r3
 8018758:	68bb      	ldr	r3, [r7, #8]
 801875a:	701a      	strb	r2, [r3, #0]
 801875c:	68bb      	ldr	r3, [r7, #8]
 801875e:	3301      	adds	r3, #1
 8018760:	223a      	movs	r2, #58	@ 0x3a
 8018762:	701a      	strb	r2, [r3, #0]
 8018764:	68bb      	ldr	r3, [r7, #8]
 8018766:	3302      	adds	r3, #2
 8018768:	222f      	movs	r2, #47	@ 0x2f
 801876a:	701a      	strb	r2, [r3, #0]
 801876c:	68bb      	ldr	r3, [r7, #8]
 801876e:	3303      	adds	r3, #3
 8018770:	2200      	movs	r2, #0
 8018772:	701a      	strb	r2, [r3, #0]
 8018774:	193b      	adds	r3, r7, r4
 8018776:	2200      	movs	r2, #0
 8018778:	701a      	strb	r2, [r3, #0]
 801877a:	2317      	movs	r3, #23
 801877c:	18fb      	adds	r3, r7, r3
 801877e:	781b      	ldrb	r3, [r3, #0]
 8018780:	0018      	movs	r0, r3
 8018782:	46bd      	mov	sp, r7
 8018784:	b007      	add	sp, #28
 8018786:	bd90      	pop	{r4, r7, pc}
 8018788:	200034a8 	.word	0x200034a8

0801878c <FATFS_LinkDriver>:
 801878c:	b580      	push	{r7, lr}
 801878e:	b082      	sub	sp, #8
 8018790:	af00      	add	r7, sp, #0
 8018792:	6078      	str	r0, [r7, #4]
 8018794:	6039      	str	r1, [r7, #0]
 8018796:	6839      	ldr	r1, [r7, #0]
 8018798:	687b      	ldr	r3, [r7, #4]
 801879a:	2200      	movs	r2, #0
 801879c:	0018      	movs	r0, r3
 801879e:	f7ff ffa1 	bl	80186e4 <FATFS_LinkDriverEx>
 80187a2:	0003      	movs	r3, r0
 80187a4:	0018      	movs	r0, r3
 80187a6:	46bd      	mov	sp, r7
 80187a8:	b002      	add	sp, #8
 80187aa:	bd80      	pop	{r7, pc}

080187ac <std>:
 80187ac:	2300      	movs	r3, #0
 80187ae:	b510      	push	{r4, lr}
 80187b0:	0004      	movs	r4, r0
 80187b2:	6003      	str	r3, [r0, #0]
 80187b4:	6043      	str	r3, [r0, #4]
 80187b6:	6083      	str	r3, [r0, #8]
 80187b8:	8181      	strh	r1, [r0, #12]
 80187ba:	6643      	str	r3, [r0, #100]	@ 0x64
 80187bc:	81c2      	strh	r2, [r0, #14]
 80187be:	6103      	str	r3, [r0, #16]
 80187c0:	6143      	str	r3, [r0, #20]
 80187c2:	6183      	str	r3, [r0, #24]
 80187c4:	0019      	movs	r1, r3
 80187c6:	2208      	movs	r2, #8
 80187c8:	305c      	adds	r0, #92	@ 0x5c
 80187ca:	f000 fa41 	bl	8018c50 <memset>
 80187ce:	4b0b      	ldr	r3, [pc, #44]	@ (80187fc <std+0x50>)
 80187d0:	6224      	str	r4, [r4, #32]
 80187d2:	6263      	str	r3, [r4, #36]	@ 0x24
 80187d4:	4b0a      	ldr	r3, [pc, #40]	@ (8018800 <std+0x54>)
 80187d6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80187d8:	4b0a      	ldr	r3, [pc, #40]	@ (8018804 <std+0x58>)
 80187da:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80187dc:	4b0a      	ldr	r3, [pc, #40]	@ (8018808 <std+0x5c>)
 80187de:	6323      	str	r3, [r4, #48]	@ 0x30
 80187e0:	4b0a      	ldr	r3, [pc, #40]	@ (801880c <std+0x60>)
 80187e2:	429c      	cmp	r4, r3
 80187e4:	d005      	beq.n	80187f2 <std+0x46>
 80187e6:	4b0a      	ldr	r3, [pc, #40]	@ (8018810 <std+0x64>)
 80187e8:	429c      	cmp	r4, r3
 80187ea:	d002      	beq.n	80187f2 <std+0x46>
 80187ec:	4b09      	ldr	r3, [pc, #36]	@ (8018814 <std+0x68>)
 80187ee:	429c      	cmp	r4, r3
 80187f0:	d103      	bne.n	80187fa <std+0x4e>
 80187f2:	0020      	movs	r0, r4
 80187f4:	3058      	adds	r0, #88	@ 0x58
 80187f6:	f000 faab 	bl	8018d50 <__retarget_lock_init_recursive>
 80187fa:	bd10      	pop	{r4, pc}
 80187fc:	08018a5d 	.word	0x08018a5d
 8018800:	08018a85 	.word	0x08018a85
 8018804:	08018abd 	.word	0x08018abd
 8018808:	08018ae9 	.word	0x08018ae9
 801880c:	200034b4 	.word	0x200034b4
 8018810:	2000351c 	.word	0x2000351c
 8018814:	20003584 	.word	0x20003584

08018818 <stdio_exit_handler>:
 8018818:	b510      	push	{r4, lr}
 801881a:	4a03      	ldr	r2, [pc, #12]	@ (8018828 <stdio_exit_handler+0x10>)
 801881c:	4903      	ldr	r1, [pc, #12]	@ (801882c <stdio_exit_handler+0x14>)
 801881e:	4804      	ldr	r0, [pc, #16]	@ (8018830 <stdio_exit_handler+0x18>)
 8018820:	f000 f86c 	bl	80188fc <_fwalk_sglue>
 8018824:	bd10      	pop	{r4, pc}
 8018826:	46c0      	nop			@ (mov r8, r8)
 8018828:	200004b4 	.word	0x200004b4
 801882c:	08019625 	.word	0x08019625
 8018830:	200004c4 	.word	0x200004c4

08018834 <cleanup_stdio>:
 8018834:	6841      	ldr	r1, [r0, #4]
 8018836:	4b0b      	ldr	r3, [pc, #44]	@ (8018864 <cleanup_stdio+0x30>)
 8018838:	b510      	push	{r4, lr}
 801883a:	0004      	movs	r4, r0
 801883c:	4299      	cmp	r1, r3
 801883e:	d001      	beq.n	8018844 <cleanup_stdio+0x10>
 8018840:	f000 fef0 	bl	8019624 <_fflush_r>
 8018844:	68a1      	ldr	r1, [r4, #8]
 8018846:	4b08      	ldr	r3, [pc, #32]	@ (8018868 <cleanup_stdio+0x34>)
 8018848:	4299      	cmp	r1, r3
 801884a:	d002      	beq.n	8018852 <cleanup_stdio+0x1e>
 801884c:	0020      	movs	r0, r4
 801884e:	f000 fee9 	bl	8019624 <_fflush_r>
 8018852:	68e1      	ldr	r1, [r4, #12]
 8018854:	4b05      	ldr	r3, [pc, #20]	@ (801886c <cleanup_stdio+0x38>)
 8018856:	4299      	cmp	r1, r3
 8018858:	d002      	beq.n	8018860 <cleanup_stdio+0x2c>
 801885a:	0020      	movs	r0, r4
 801885c:	f000 fee2 	bl	8019624 <_fflush_r>
 8018860:	bd10      	pop	{r4, pc}
 8018862:	46c0      	nop			@ (mov r8, r8)
 8018864:	200034b4 	.word	0x200034b4
 8018868:	2000351c 	.word	0x2000351c
 801886c:	20003584 	.word	0x20003584

08018870 <global_stdio_init.part.0>:
 8018870:	b510      	push	{r4, lr}
 8018872:	4b09      	ldr	r3, [pc, #36]	@ (8018898 <global_stdio_init.part.0+0x28>)
 8018874:	4a09      	ldr	r2, [pc, #36]	@ (801889c <global_stdio_init.part.0+0x2c>)
 8018876:	2104      	movs	r1, #4
 8018878:	601a      	str	r2, [r3, #0]
 801887a:	4809      	ldr	r0, [pc, #36]	@ (80188a0 <global_stdio_init.part.0+0x30>)
 801887c:	2200      	movs	r2, #0
 801887e:	f7ff ff95 	bl	80187ac <std>
 8018882:	2201      	movs	r2, #1
 8018884:	2109      	movs	r1, #9
 8018886:	4807      	ldr	r0, [pc, #28]	@ (80188a4 <global_stdio_init.part.0+0x34>)
 8018888:	f7ff ff90 	bl	80187ac <std>
 801888c:	2202      	movs	r2, #2
 801888e:	2112      	movs	r1, #18
 8018890:	4805      	ldr	r0, [pc, #20]	@ (80188a8 <global_stdio_init.part.0+0x38>)
 8018892:	f7ff ff8b 	bl	80187ac <std>
 8018896:	bd10      	pop	{r4, pc}
 8018898:	200035ec 	.word	0x200035ec
 801889c:	08018819 	.word	0x08018819
 80188a0:	200034b4 	.word	0x200034b4
 80188a4:	2000351c 	.word	0x2000351c
 80188a8:	20003584 	.word	0x20003584

080188ac <__sfp_lock_acquire>:
 80188ac:	b510      	push	{r4, lr}
 80188ae:	4802      	ldr	r0, [pc, #8]	@ (80188b8 <__sfp_lock_acquire+0xc>)
 80188b0:	f000 fa4f 	bl	8018d52 <__retarget_lock_acquire_recursive>
 80188b4:	bd10      	pop	{r4, pc}
 80188b6:	46c0      	nop			@ (mov r8, r8)
 80188b8:	200035f5 	.word	0x200035f5

080188bc <__sfp_lock_release>:
 80188bc:	b510      	push	{r4, lr}
 80188be:	4802      	ldr	r0, [pc, #8]	@ (80188c8 <__sfp_lock_release+0xc>)
 80188c0:	f000 fa48 	bl	8018d54 <__retarget_lock_release_recursive>
 80188c4:	bd10      	pop	{r4, pc}
 80188c6:	46c0      	nop			@ (mov r8, r8)
 80188c8:	200035f5 	.word	0x200035f5

080188cc <__sinit>:
 80188cc:	b510      	push	{r4, lr}
 80188ce:	0004      	movs	r4, r0
 80188d0:	f7ff ffec 	bl	80188ac <__sfp_lock_acquire>
 80188d4:	6a23      	ldr	r3, [r4, #32]
 80188d6:	2b00      	cmp	r3, #0
 80188d8:	d002      	beq.n	80188e0 <__sinit+0x14>
 80188da:	f7ff ffef 	bl	80188bc <__sfp_lock_release>
 80188de:	bd10      	pop	{r4, pc}
 80188e0:	4b04      	ldr	r3, [pc, #16]	@ (80188f4 <__sinit+0x28>)
 80188e2:	6223      	str	r3, [r4, #32]
 80188e4:	4b04      	ldr	r3, [pc, #16]	@ (80188f8 <__sinit+0x2c>)
 80188e6:	681b      	ldr	r3, [r3, #0]
 80188e8:	2b00      	cmp	r3, #0
 80188ea:	d1f6      	bne.n	80188da <__sinit+0xe>
 80188ec:	f7ff ffc0 	bl	8018870 <global_stdio_init.part.0>
 80188f0:	e7f3      	b.n	80188da <__sinit+0xe>
 80188f2:	46c0      	nop			@ (mov r8, r8)
 80188f4:	08018835 	.word	0x08018835
 80188f8:	200035ec 	.word	0x200035ec

080188fc <_fwalk_sglue>:
 80188fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80188fe:	0014      	movs	r4, r2
 8018900:	2600      	movs	r6, #0
 8018902:	9000      	str	r0, [sp, #0]
 8018904:	9101      	str	r1, [sp, #4]
 8018906:	68a5      	ldr	r5, [r4, #8]
 8018908:	6867      	ldr	r7, [r4, #4]
 801890a:	3f01      	subs	r7, #1
 801890c:	d504      	bpl.n	8018918 <_fwalk_sglue+0x1c>
 801890e:	6824      	ldr	r4, [r4, #0]
 8018910:	2c00      	cmp	r4, #0
 8018912:	d1f8      	bne.n	8018906 <_fwalk_sglue+0xa>
 8018914:	0030      	movs	r0, r6
 8018916:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8018918:	89ab      	ldrh	r3, [r5, #12]
 801891a:	2b01      	cmp	r3, #1
 801891c:	d908      	bls.n	8018930 <_fwalk_sglue+0x34>
 801891e:	220e      	movs	r2, #14
 8018920:	5eab      	ldrsh	r3, [r5, r2]
 8018922:	3301      	adds	r3, #1
 8018924:	d004      	beq.n	8018930 <_fwalk_sglue+0x34>
 8018926:	0029      	movs	r1, r5
 8018928:	9800      	ldr	r0, [sp, #0]
 801892a:	9b01      	ldr	r3, [sp, #4]
 801892c:	4798      	blx	r3
 801892e:	4306      	orrs	r6, r0
 8018930:	3568      	adds	r5, #104	@ 0x68
 8018932:	e7ea      	b.n	801890a <_fwalk_sglue+0xe>

08018934 <_puts_r>:
 8018934:	6a03      	ldr	r3, [r0, #32]
 8018936:	b570      	push	{r4, r5, r6, lr}
 8018938:	0005      	movs	r5, r0
 801893a:	000e      	movs	r6, r1
 801893c:	6884      	ldr	r4, [r0, #8]
 801893e:	2b00      	cmp	r3, #0
 8018940:	d101      	bne.n	8018946 <_puts_r+0x12>
 8018942:	f7ff ffc3 	bl	80188cc <__sinit>
 8018946:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8018948:	07db      	lsls	r3, r3, #31
 801894a:	d405      	bmi.n	8018958 <_puts_r+0x24>
 801894c:	89a3      	ldrh	r3, [r4, #12]
 801894e:	059b      	lsls	r3, r3, #22
 8018950:	d402      	bmi.n	8018958 <_puts_r+0x24>
 8018952:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8018954:	f000 f9fd 	bl	8018d52 <__retarget_lock_acquire_recursive>
 8018958:	89a3      	ldrh	r3, [r4, #12]
 801895a:	071b      	lsls	r3, r3, #28
 801895c:	d502      	bpl.n	8018964 <_puts_r+0x30>
 801895e:	6923      	ldr	r3, [r4, #16]
 8018960:	2b00      	cmp	r3, #0
 8018962:	d11f      	bne.n	80189a4 <_puts_r+0x70>
 8018964:	0021      	movs	r1, r4
 8018966:	0028      	movs	r0, r5
 8018968:	f000 f906 	bl	8018b78 <__swsetup_r>
 801896c:	2800      	cmp	r0, #0
 801896e:	d019      	beq.n	80189a4 <_puts_r+0x70>
 8018970:	2501      	movs	r5, #1
 8018972:	426d      	negs	r5, r5
 8018974:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8018976:	07db      	lsls	r3, r3, #31
 8018978:	d405      	bmi.n	8018986 <_puts_r+0x52>
 801897a:	89a3      	ldrh	r3, [r4, #12]
 801897c:	059b      	lsls	r3, r3, #22
 801897e:	d402      	bmi.n	8018986 <_puts_r+0x52>
 8018980:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8018982:	f000 f9e7 	bl	8018d54 <__retarget_lock_release_recursive>
 8018986:	0028      	movs	r0, r5
 8018988:	bd70      	pop	{r4, r5, r6, pc}
 801898a:	3601      	adds	r6, #1
 801898c:	60a3      	str	r3, [r4, #8]
 801898e:	2b00      	cmp	r3, #0
 8018990:	da04      	bge.n	801899c <_puts_r+0x68>
 8018992:	69a2      	ldr	r2, [r4, #24]
 8018994:	429a      	cmp	r2, r3
 8018996:	dc16      	bgt.n	80189c6 <_puts_r+0x92>
 8018998:	290a      	cmp	r1, #10
 801899a:	d014      	beq.n	80189c6 <_puts_r+0x92>
 801899c:	6823      	ldr	r3, [r4, #0]
 801899e:	1c5a      	adds	r2, r3, #1
 80189a0:	6022      	str	r2, [r4, #0]
 80189a2:	7019      	strb	r1, [r3, #0]
 80189a4:	68a3      	ldr	r3, [r4, #8]
 80189a6:	7831      	ldrb	r1, [r6, #0]
 80189a8:	3b01      	subs	r3, #1
 80189aa:	2900      	cmp	r1, #0
 80189ac:	d1ed      	bne.n	801898a <_puts_r+0x56>
 80189ae:	60a3      	str	r3, [r4, #8]
 80189b0:	2b00      	cmp	r3, #0
 80189b2:	da0f      	bge.n	80189d4 <_puts_r+0xa0>
 80189b4:	0022      	movs	r2, r4
 80189b6:	0028      	movs	r0, r5
 80189b8:	310a      	adds	r1, #10
 80189ba:	f000 f89b 	bl	8018af4 <__swbuf_r>
 80189be:	3001      	adds	r0, #1
 80189c0:	d0d6      	beq.n	8018970 <_puts_r+0x3c>
 80189c2:	250a      	movs	r5, #10
 80189c4:	e7d6      	b.n	8018974 <_puts_r+0x40>
 80189c6:	0022      	movs	r2, r4
 80189c8:	0028      	movs	r0, r5
 80189ca:	f000 f893 	bl	8018af4 <__swbuf_r>
 80189ce:	3001      	adds	r0, #1
 80189d0:	d1e8      	bne.n	80189a4 <_puts_r+0x70>
 80189d2:	e7cd      	b.n	8018970 <_puts_r+0x3c>
 80189d4:	6823      	ldr	r3, [r4, #0]
 80189d6:	1c5a      	adds	r2, r3, #1
 80189d8:	6022      	str	r2, [r4, #0]
 80189da:	220a      	movs	r2, #10
 80189dc:	701a      	strb	r2, [r3, #0]
 80189de:	e7f0      	b.n	80189c2 <_puts_r+0x8e>

080189e0 <puts>:
 80189e0:	b510      	push	{r4, lr}
 80189e2:	4b03      	ldr	r3, [pc, #12]	@ (80189f0 <puts+0x10>)
 80189e4:	0001      	movs	r1, r0
 80189e6:	6818      	ldr	r0, [r3, #0]
 80189e8:	f7ff ffa4 	bl	8018934 <_puts_r>
 80189ec:	bd10      	pop	{r4, pc}
 80189ee:	46c0      	nop			@ (mov r8, r8)
 80189f0:	200004c0 	.word	0x200004c0

080189f4 <sniprintf>:
 80189f4:	b40c      	push	{r2, r3}
 80189f6:	b530      	push	{r4, r5, lr}
 80189f8:	4b17      	ldr	r3, [pc, #92]	@ (8018a58 <sniprintf+0x64>)
 80189fa:	000c      	movs	r4, r1
 80189fc:	681d      	ldr	r5, [r3, #0]
 80189fe:	b09d      	sub	sp, #116	@ 0x74
 8018a00:	2900      	cmp	r1, #0
 8018a02:	da08      	bge.n	8018a16 <sniprintf+0x22>
 8018a04:	238b      	movs	r3, #139	@ 0x8b
 8018a06:	2001      	movs	r0, #1
 8018a08:	602b      	str	r3, [r5, #0]
 8018a0a:	4240      	negs	r0, r0
 8018a0c:	b01d      	add	sp, #116	@ 0x74
 8018a0e:	bc30      	pop	{r4, r5}
 8018a10:	bc08      	pop	{r3}
 8018a12:	b002      	add	sp, #8
 8018a14:	4718      	bx	r3
 8018a16:	2382      	movs	r3, #130	@ 0x82
 8018a18:	466a      	mov	r2, sp
 8018a1a:	009b      	lsls	r3, r3, #2
 8018a1c:	8293      	strh	r3, [r2, #20]
 8018a1e:	2300      	movs	r3, #0
 8018a20:	9002      	str	r0, [sp, #8]
 8018a22:	9006      	str	r0, [sp, #24]
 8018a24:	4299      	cmp	r1, r3
 8018a26:	d000      	beq.n	8018a2a <sniprintf+0x36>
 8018a28:	1e4b      	subs	r3, r1, #1
 8018a2a:	9304      	str	r3, [sp, #16]
 8018a2c:	9307      	str	r3, [sp, #28]
 8018a2e:	2301      	movs	r3, #1
 8018a30:	466a      	mov	r2, sp
 8018a32:	425b      	negs	r3, r3
 8018a34:	82d3      	strh	r3, [r2, #22]
 8018a36:	0028      	movs	r0, r5
 8018a38:	ab21      	add	r3, sp, #132	@ 0x84
 8018a3a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8018a3c:	a902      	add	r1, sp, #8
 8018a3e:	9301      	str	r3, [sp, #4]
 8018a40:	f000 faee 	bl	8019020 <_svfiprintf_r>
 8018a44:	1c43      	adds	r3, r0, #1
 8018a46:	da01      	bge.n	8018a4c <sniprintf+0x58>
 8018a48:	238b      	movs	r3, #139	@ 0x8b
 8018a4a:	602b      	str	r3, [r5, #0]
 8018a4c:	2c00      	cmp	r4, #0
 8018a4e:	d0dd      	beq.n	8018a0c <sniprintf+0x18>
 8018a50:	2200      	movs	r2, #0
 8018a52:	9b02      	ldr	r3, [sp, #8]
 8018a54:	701a      	strb	r2, [r3, #0]
 8018a56:	e7d9      	b.n	8018a0c <sniprintf+0x18>
 8018a58:	200004c0 	.word	0x200004c0

08018a5c <__sread>:
 8018a5c:	b570      	push	{r4, r5, r6, lr}
 8018a5e:	000c      	movs	r4, r1
 8018a60:	250e      	movs	r5, #14
 8018a62:	5f49      	ldrsh	r1, [r1, r5]
 8018a64:	f000 f922 	bl	8018cac <_read_r>
 8018a68:	2800      	cmp	r0, #0
 8018a6a:	db03      	blt.n	8018a74 <__sread+0x18>
 8018a6c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8018a6e:	181b      	adds	r3, r3, r0
 8018a70:	6563      	str	r3, [r4, #84]	@ 0x54
 8018a72:	bd70      	pop	{r4, r5, r6, pc}
 8018a74:	89a3      	ldrh	r3, [r4, #12]
 8018a76:	4a02      	ldr	r2, [pc, #8]	@ (8018a80 <__sread+0x24>)
 8018a78:	4013      	ands	r3, r2
 8018a7a:	81a3      	strh	r3, [r4, #12]
 8018a7c:	e7f9      	b.n	8018a72 <__sread+0x16>
 8018a7e:	46c0      	nop			@ (mov r8, r8)
 8018a80:	ffffefff 	.word	0xffffefff

08018a84 <__swrite>:
 8018a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a86:	001f      	movs	r7, r3
 8018a88:	898b      	ldrh	r3, [r1, #12]
 8018a8a:	0005      	movs	r5, r0
 8018a8c:	000c      	movs	r4, r1
 8018a8e:	0016      	movs	r6, r2
 8018a90:	05db      	lsls	r3, r3, #23
 8018a92:	d505      	bpl.n	8018aa0 <__swrite+0x1c>
 8018a94:	230e      	movs	r3, #14
 8018a96:	5ec9      	ldrsh	r1, [r1, r3]
 8018a98:	2200      	movs	r2, #0
 8018a9a:	2302      	movs	r3, #2
 8018a9c:	f000 f8f2 	bl	8018c84 <_lseek_r>
 8018aa0:	89a3      	ldrh	r3, [r4, #12]
 8018aa2:	4a05      	ldr	r2, [pc, #20]	@ (8018ab8 <__swrite+0x34>)
 8018aa4:	0028      	movs	r0, r5
 8018aa6:	4013      	ands	r3, r2
 8018aa8:	81a3      	strh	r3, [r4, #12]
 8018aaa:	0032      	movs	r2, r6
 8018aac:	230e      	movs	r3, #14
 8018aae:	5ee1      	ldrsh	r1, [r4, r3]
 8018ab0:	003b      	movs	r3, r7
 8018ab2:	f000 f90f 	bl	8018cd4 <_write_r>
 8018ab6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018ab8:	ffffefff 	.word	0xffffefff

08018abc <__sseek>:
 8018abc:	b570      	push	{r4, r5, r6, lr}
 8018abe:	000c      	movs	r4, r1
 8018ac0:	250e      	movs	r5, #14
 8018ac2:	5f49      	ldrsh	r1, [r1, r5]
 8018ac4:	f000 f8de 	bl	8018c84 <_lseek_r>
 8018ac8:	89a3      	ldrh	r3, [r4, #12]
 8018aca:	1c42      	adds	r2, r0, #1
 8018acc:	d103      	bne.n	8018ad6 <__sseek+0x1a>
 8018ace:	4a05      	ldr	r2, [pc, #20]	@ (8018ae4 <__sseek+0x28>)
 8018ad0:	4013      	ands	r3, r2
 8018ad2:	81a3      	strh	r3, [r4, #12]
 8018ad4:	bd70      	pop	{r4, r5, r6, pc}
 8018ad6:	2280      	movs	r2, #128	@ 0x80
 8018ad8:	0152      	lsls	r2, r2, #5
 8018ada:	4313      	orrs	r3, r2
 8018adc:	81a3      	strh	r3, [r4, #12]
 8018ade:	6560      	str	r0, [r4, #84]	@ 0x54
 8018ae0:	e7f8      	b.n	8018ad4 <__sseek+0x18>
 8018ae2:	46c0      	nop			@ (mov r8, r8)
 8018ae4:	ffffefff 	.word	0xffffefff

08018ae8 <__sclose>:
 8018ae8:	b510      	push	{r4, lr}
 8018aea:	230e      	movs	r3, #14
 8018aec:	5ec9      	ldrsh	r1, [r1, r3]
 8018aee:	f000 f8b7 	bl	8018c60 <_close_r>
 8018af2:	bd10      	pop	{r4, pc}

08018af4 <__swbuf_r>:
 8018af4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018af6:	0006      	movs	r6, r0
 8018af8:	000d      	movs	r5, r1
 8018afa:	0014      	movs	r4, r2
 8018afc:	2800      	cmp	r0, #0
 8018afe:	d004      	beq.n	8018b0a <__swbuf_r+0x16>
 8018b00:	6a03      	ldr	r3, [r0, #32]
 8018b02:	2b00      	cmp	r3, #0
 8018b04:	d101      	bne.n	8018b0a <__swbuf_r+0x16>
 8018b06:	f7ff fee1 	bl	80188cc <__sinit>
 8018b0a:	69a3      	ldr	r3, [r4, #24]
 8018b0c:	60a3      	str	r3, [r4, #8]
 8018b0e:	89a3      	ldrh	r3, [r4, #12]
 8018b10:	071b      	lsls	r3, r3, #28
 8018b12:	d502      	bpl.n	8018b1a <__swbuf_r+0x26>
 8018b14:	6923      	ldr	r3, [r4, #16]
 8018b16:	2b00      	cmp	r3, #0
 8018b18:	d109      	bne.n	8018b2e <__swbuf_r+0x3a>
 8018b1a:	0021      	movs	r1, r4
 8018b1c:	0030      	movs	r0, r6
 8018b1e:	f000 f82b 	bl	8018b78 <__swsetup_r>
 8018b22:	2800      	cmp	r0, #0
 8018b24:	d003      	beq.n	8018b2e <__swbuf_r+0x3a>
 8018b26:	2501      	movs	r5, #1
 8018b28:	426d      	negs	r5, r5
 8018b2a:	0028      	movs	r0, r5
 8018b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018b2e:	6923      	ldr	r3, [r4, #16]
 8018b30:	6820      	ldr	r0, [r4, #0]
 8018b32:	b2ef      	uxtb	r7, r5
 8018b34:	1ac0      	subs	r0, r0, r3
 8018b36:	6963      	ldr	r3, [r4, #20]
 8018b38:	b2ed      	uxtb	r5, r5
 8018b3a:	4283      	cmp	r3, r0
 8018b3c:	dc05      	bgt.n	8018b4a <__swbuf_r+0x56>
 8018b3e:	0021      	movs	r1, r4
 8018b40:	0030      	movs	r0, r6
 8018b42:	f000 fd6f 	bl	8019624 <_fflush_r>
 8018b46:	2800      	cmp	r0, #0
 8018b48:	d1ed      	bne.n	8018b26 <__swbuf_r+0x32>
 8018b4a:	68a3      	ldr	r3, [r4, #8]
 8018b4c:	3001      	adds	r0, #1
 8018b4e:	3b01      	subs	r3, #1
 8018b50:	60a3      	str	r3, [r4, #8]
 8018b52:	6823      	ldr	r3, [r4, #0]
 8018b54:	1c5a      	adds	r2, r3, #1
 8018b56:	6022      	str	r2, [r4, #0]
 8018b58:	701f      	strb	r7, [r3, #0]
 8018b5a:	6963      	ldr	r3, [r4, #20]
 8018b5c:	4283      	cmp	r3, r0
 8018b5e:	d004      	beq.n	8018b6a <__swbuf_r+0x76>
 8018b60:	89a3      	ldrh	r3, [r4, #12]
 8018b62:	07db      	lsls	r3, r3, #31
 8018b64:	d5e1      	bpl.n	8018b2a <__swbuf_r+0x36>
 8018b66:	2d0a      	cmp	r5, #10
 8018b68:	d1df      	bne.n	8018b2a <__swbuf_r+0x36>
 8018b6a:	0021      	movs	r1, r4
 8018b6c:	0030      	movs	r0, r6
 8018b6e:	f000 fd59 	bl	8019624 <_fflush_r>
 8018b72:	2800      	cmp	r0, #0
 8018b74:	d0d9      	beq.n	8018b2a <__swbuf_r+0x36>
 8018b76:	e7d6      	b.n	8018b26 <__swbuf_r+0x32>

08018b78 <__swsetup_r>:
 8018b78:	4b2d      	ldr	r3, [pc, #180]	@ (8018c30 <__swsetup_r+0xb8>)
 8018b7a:	b570      	push	{r4, r5, r6, lr}
 8018b7c:	0005      	movs	r5, r0
 8018b7e:	6818      	ldr	r0, [r3, #0]
 8018b80:	000c      	movs	r4, r1
 8018b82:	2800      	cmp	r0, #0
 8018b84:	d004      	beq.n	8018b90 <__swsetup_r+0x18>
 8018b86:	6a03      	ldr	r3, [r0, #32]
 8018b88:	2b00      	cmp	r3, #0
 8018b8a:	d101      	bne.n	8018b90 <__swsetup_r+0x18>
 8018b8c:	f7ff fe9e 	bl	80188cc <__sinit>
 8018b90:	230c      	movs	r3, #12
 8018b92:	5ee2      	ldrsh	r2, [r4, r3]
 8018b94:	0713      	lsls	r3, r2, #28
 8018b96:	d423      	bmi.n	8018be0 <__swsetup_r+0x68>
 8018b98:	06d3      	lsls	r3, r2, #27
 8018b9a:	d407      	bmi.n	8018bac <__swsetup_r+0x34>
 8018b9c:	2309      	movs	r3, #9
 8018b9e:	602b      	str	r3, [r5, #0]
 8018ba0:	2340      	movs	r3, #64	@ 0x40
 8018ba2:	2001      	movs	r0, #1
 8018ba4:	4313      	orrs	r3, r2
 8018ba6:	81a3      	strh	r3, [r4, #12]
 8018ba8:	4240      	negs	r0, r0
 8018baa:	e03a      	b.n	8018c22 <__swsetup_r+0xaa>
 8018bac:	0752      	lsls	r2, r2, #29
 8018bae:	d513      	bpl.n	8018bd8 <__swsetup_r+0x60>
 8018bb0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8018bb2:	2900      	cmp	r1, #0
 8018bb4:	d008      	beq.n	8018bc8 <__swsetup_r+0x50>
 8018bb6:	0023      	movs	r3, r4
 8018bb8:	3344      	adds	r3, #68	@ 0x44
 8018bba:	4299      	cmp	r1, r3
 8018bbc:	d002      	beq.n	8018bc4 <__swsetup_r+0x4c>
 8018bbe:	0028      	movs	r0, r5
 8018bc0:	f000 f8d2 	bl	8018d68 <_free_r>
 8018bc4:	2300      	movs	r3, #0
 8018bc6:	6363      	str	r3, [r4, #52]	@ 0x34
 8018bc8:	2224      	movs	r2, #36	@ 0x24
 8018bca:	89a3      	ldrh	r3, [r4, #12]
 8018bcc:	4393      	bics	r3, r2
 8018bce:	81a3      	strh	r3, [r4, #12]
 8018bd0:	2300      	movs	r3, #0
 8018bd2:	6063      	str	r3, [r4, #4]
 8018bd4:	6923      	ldr	r3, [r4, #16]
 8018bd6:	6023      	str	r3, [r4, #0]
 8018bd8:	2308      	movs	r3, #8
 8018bda:	89a2      	ldrh	r2, [r4, #12]
 8018bdc:	4313      	orrs	r3, r2
 8018bde:	81a3      	strh	r3, [r4, #12]
 8018be0:	6923      	ldr	r3, [r4, #16]
 8018be2:	2b00      	cmp	r3, #0
 8018be4:	d10b      	bne.n	8018bfe <__swsetup_r+0x86>
 8018be6:	21a0      	movs	r1, #160	@ 0xa0
 8018be8:	2280      	movs	r2, #128	@ 0x80
 8018bea:	89a3      	ldrh	r3, [r4, #12]
 8018bec:	0089      	lsls	r1, r1, #2
 8018bee:	0092      	lsls	r2, r2, #2
 8018bf0:	400b      	ands	r3, r1
 8018bf2:	4293      	cmp	r3, r2
 8018bf4:	d003      	beq.n	8018bfe <__swsetup_r+0x86>
 8018bf6:	0021      	movs	r1, r4
 8018bf8:	0028      	movs	r0, r5
 8018bfa:	f000 fd69 	bl	80196d0 <__smakebuf_r>
 8018bfe:	230c      	movs	r3, #12
 8018c00:	5ee2      	ldrsh	r2, [r4, r3]
 8018c02:	2101      	movs	r1, #1
 8018c04:	0013      	movs	r3, r2
 8018c06:	400b      	ands	r3, r1
 8018c08:	420a      	tst	r2, r1
 8018c0a:	d00b      	beq.n	8018c24 <__swsetup_r+0xac>
 8018c0c:	2300      	movs	r3, #0
 8018c0e:	60a3      	str	r3, [r4, #8]
 8018c10:	6963      	ldr	r3, [r4, #20]
 8018c12:	425b      	negs	r3, r3
 8018c14:	61a3      	str	r3, [r4, #24]
 8018c16:	2000      	movs	r0, #0
 8018c18:	6923      	ldr	r3, [r4, #16]
 8018c1a:	4283      	cmp	r3, r0
 8018c1c:	d101      	bne.n	8018c22 <__swsetup_r+0xaa>
 8018c1e:	0613      	lsls	r3, r2, #24
 8018c20:	d4be      	bmi.n	8018ba0 <__swsetup_r+0x28>
 8018c22:	bd70      	pop	{r4, r5, r6, pc}
 8018c24:	0791      	lsls	r1, r2, #30
 8018c26:	d400      	bmi.n	8018c2a <__swsetup_r+0xb2>
 8018c28:	6963      	ldr	r3, [r4, #20]
 8018c2a:	60a3      	str	r3, [r4, #8]
 8018c2c:	e7f3      	b.n	8018c16 <__swsetup_r+0x9e>
 8018c2e:	46c0      	nop			@ (mov r8, r8)
 8018c30:	200004c0 	.word	0x200004c0

08018c34 <memcmp>:
 8018c34:	b530      	push	{r4, r5, lr}
 8018c36:	2400      	movs	r4, #0
 8018c38:	3901      	subs	r1, #1
 8018c3a:	42a2      	cmp	r2, r4
 8018c3c:	d101      	bne.n	8018c42 <memcmp+0xe>
 8018c3e:	2000      	movs	r0, #0
 8018c40:	e005      	b.n	8018c4e <memcmp+0x1a>
 8018c42:	5d03      	ldrb	r3, [r0, r4]
 8018c44:	3401      	adds	r4, #1
 8018c46:	5d0d      	ldrb	r5, [r1, r4]
 8018c48:	42ab      	cmp	r3, r5
 8018c4a:	d0f6      	beq.n	8018c3a <memcmp+0x6>
 8018c4c:	1b58      	subs	r0, r3, r5
 8018c4e:	bd30      	pop	{r4, r5, pc}

08018c50 <memset>:
 8018c50:	0003      	movs	r3, r0
 8018c52:	1882      	adds	r2, r0, r2
 8018c54:	4293      	cmp	r3, r2
 8018c56:	d100      	bne.n	8018c5a <memset+0xa>
 8018c58:	4770      	bx	lr
 8018c5a:	7019      	strb	r1, [r3, #0]
 8018c5c:	3301      	adds	r3, #1
 8018c5e:	e7f9      	b.n	8018c54 <memset+0x4>

08018c60 <_close_r>:
 8018c60:	2300      	movs	r3, #0
 8018c62:	b570      	push	{r4, r5, r6, lr}
 8018c64:	4d06      	ldr	r5, [pc, #24]	@ (8018c80 <_close_r+0x20>)
 8018c66:	0004      	movs	r4, r0
 8018c68:	0008      	movs	r0, r1
 8018c6a:	602b      	str	r3, [r5, #0]
 8018c6c:	f7f4 fef1 	bl	800da52 <_close>
 8018c70:	1c43      	adds	r3, r0, #1
 8018c72:	d103      	bne.n	8018c7c <_close_r+0x1c>
 8018c74:	682b      	ldr	r3, [r5, #0]
 8018c76:	2b00      	cmp	r3, #0
 8018c78:	d000      	beq.n	8018c7c <_close_r+0x1c>
 8018c7a:	6023      	str	r3, [r4, #0]
 8018c7c:	bd70      	pop	{r4, r5, r6, pc}
 8018c7e:	46c0      	nop			@ (mov r8, r8)
 8018c80:	200035f0 	.word	0x200035f0

08018c84 <_lseek_r>:
 8018c84:	b570      	push	{r4, r5, r6, lr}
 8018c86:	0004      	movs	r4, r0
 8018c88:	0008      	movs	r0, r1
 8018c8a:	0011      	movs	r1, r2
 8018c8c:	001a      	movs	r2, r3
 8018c8e:	2300      	movs	r3, #0
 8018c90:	4d05      	ldr	r5, [pc, #20]	@ (8018ca8 <_lseek_r+0x24>)
 8018c92:	602b      	str	r3, [r5, #0]
 8018c94:	f7f4 fefe 	bl	800da94 <_lseek>
 8018c98:	1c43      	adds	r3, r0, #1
 8018c9a:	d103      	bne.n	8018ca4 <_lseek_r+0x20>
 8018c9c:	682b      	ldr	r3, [r5, #0]
 8018c9e:	2b00      	cmp	r3, #0
 8018ca0:	d000      	beq.n	8018ca4 <_lseek_r+0x20>
 8018ca2:	6023      	str	r3, [r4, #0]
 8018ca4:	bd70      	pop	{r4, r5, r6, pc}
 8018ca6:	46c0      	nop			@ (mov r8, r8)
 8018ca8:	200035f0 	.word	0x200035f0

08018cac <_read_r>:
 8018cac:	b570      	push	{r4, r5, r6, lr}
 8018cae:	0004      	movs	r4, r0
 8018cb0:	0008      	movs	r0, r1
 8018cb2:	0011      	movs	r1, r2
 8018cb4:	001a      	movs	r2, r3
 8018cb6:	2300      	movs	r3, #0
 8018cb8:	4d05      	ldr	r5, [pc, #20]	@ (8018cd0 <_read_r+0x24>)
 8018cba:	602b      	str	r3, [r5, #0]
 8018cbc:	f7f4 fe90 	bl	800d9e0 <_read>
 8018cc0:	1c43      	adds	r3, r0, #1
 8018cc2:	d103      	bne.n	8018ccc <_read_r+0x20>
 8018cc4:	682b      	ldr	r3, [r5, #0]
 8018cc6:	2b00      	cmp	r3, #0
 8018cc8:	d000      	beq.n	8018ccc <_read_r+0x20>
 8018cca:	6023      	str	r3, [r4, #0]
 8018ccc:	bd70      	pop	{r4, r5, r6, pc}
 8018cce:	46c0      	nop			@ (mov r8, r8)
 8018cd0:	200035f0 	.word	0x200035f0

08018cd4 <_write_r>:
 8018cd4:	b570      	push	{r4, r5, r6, lr}
 8018cd6:	0004      	movs	r4, r0
 8018cd8:	0008      	movs	r0, r1
 8018cda:	0011      	movs	r1, r2
 8018cdc:	001a      	movs	r2, r3
 8018cde:	2300      	movs	r3, #0
 8018ce0:	4d05      	ldr	r5, [pc, #20]	@ (8018cf8 <_write_r+0x24>)
 8018ce2:	602b      	str	r3, [r5, #0]
 8018ce4:	f7f4 fe99 	bl	800da1a <_write>
 8018ce8:	1c43      	adds	r3, r0, #1
 8018cea:	d103      	bne.n	8018cf4 <_write_r+0x20>
 8018cec:	682b      	ldr	r3, [r5, #0]
 8018cee:	2b00      	cmp	r3, #0
 8018cf0:	d000      	beq.n	8018cf4 <_write_r+0x20>
 8018cf2:	6023      	str	r3, [r4, #0]
 8018cf4:	bd70      	pop	{r4, r5, r6, pc}
 8018cf6:	46c0      	nop			@ (mov r8, r8)
 8018cf8:	200035f0 	.word	0x200035f0

08018cfc <__errno>:
 8018cfc:	4b01      	ldr	r3, [pc, #4]	@ (8018d04 <__errno+0x8>)
 8018cfe:	6818      	ldr	r0, [r3, #0]
 8018d00:	4770      	bx	lr
 8018d02:	46c0      	nop			@ (mov r8, r8)
 8018d04:	200004c0 	.word	0x200004c0

08018d08 <__libc_init_array>:
 8018d08:	b570      	push	{r4, r5, r6, lr}
 8018d0a:	2600      	movs	r6, #0
 8018d0c:	4c0c      	ldr	r4, [pc, #48]	@ (8018d40 <__libc_init_array+0x38>)
 8018d0e:	4d0d      	ldr	r5, [pc, #52]	@ (8018d44 <__libc_init_array+0x3c>)
 8018d10:	1b64      	subs	r4, r4, r5
 8018d12:	10a4      	asrs	r4, r4, #2
 8018d14:	42a6      	cmp	r6, r4
 8018d16:	d109      	bne.n	8018d2c <__libc_init_array+0x24>
 8018d18:	2600      	movs	r6, #0
 8018d1a:	f000 fda5 	bl	8019868 <_init>
 8018d1e:	4c0a      	ldr	r4, [pc, #40]	@ (8018d48 <__libc_init_array+0x40>)
 8018d20:	4d0a      	ldr	r5, [pc, #40]	@ (8018d4c <__libc_init_array+0x44>)
 8018d22:	1b64      	subs	r4, r4, r5
 8018d24:	10a4      	asrs	r4, r4, #2
 8018d26:	42a6      	cmp	r6, r4
 8018d28:	d105      	bne.n	8018d36 <__libc_init_array+0x2e>
 8018d2a:	bd70      	pop	{r4, r5, r6, pc}
 8018d2c:	00b3      	lsls	r3, r6, #2
 8018d2e:	58eb      	ldr	r3, [r5, r3]
 8018d30:	4798      	blx	r3
 8018d32:	3601      	adds	r6, #1
 8018d34:	e7ee      	b.n	8018d14 <__libc_init_array+0xc>
 8018d36:	00b3      	lsls	r3, r6, #2
 8018d38:	58eb      	ldr	r3, [r5, r3]
 8018d3a:	4798      	blx	r3
 8018d3c:	3601      	adds	r6, #1
 8018d3e:	e7f2      	b.n	8018d26 <__libc_init_array+0x1e>
 8018d40:	0801a088 	.word	0x0801a088
 8018d44:	0801a088 	.word	0x0801a088
 8018d48:	0801a08c 	.word	0x0801a08c
 8018d4c:	0801a088 	.word	0x0801a088

08018d50 <__retarget_lock_init_recursive>:
 8018d50:	4770      	bx	lr

08018d52 <__retarget_lock_acquire_recursive>:
 8018d52:	4770      	bx	lr

08018d54 <__retarget_lock_release_recursive>:
 8018d54:	4770      	bx	lr

08018d56 <memcpy>:
 8018d56:	2300      	movs	r3, #0
 8018d58:	b510      	push	{r4, lr}
 8018d5a:	429a      	cmp	r2, r3
 8018d5c:	d100      	bne.n	8018d60 <memcpy+0xa>
 8018d5e:	bd10      	pop	{r4, pc}
 8018d60:	5ccc      	ldrb	r4, [r1, r3]
 8018d62:	54c4      	strb	r4, [r0, r3]
 8018d64:	3301      	adds	r3, #1
 8018d66:	e7f8      	b.n	8018d5a <memcpy+0x4>

08018d68 <_free_r>:
 8018d68:	b570      	push	{r4, r5, r6, lr}
 8018d6a:	0005      	movs	r5, r0
 8018d6c:	1e0c      	subs	r4, r1, #0
 8018d6e:	d010      	beq.n	8018d92 <_free_r+0x2a>
 8018d70:	3c04      	subs	r4, #4
 8018d72:	6823      	ldr	r3, [r4, #0]
 8018d74:	2b00      	cmp	r3, #0
 8018d76:	da00      	bge.n	8018d7a <_free_r+0x12>
 8018d78:	18e4      	adds	r4, r4, r3
 8018d7a:	0028      	movs	r0, r5
 8018d7c:	f000 f8e0 	bl	8018f40 <__malloc_lock>
 8018d80:	4a1d      	ldr	r2, [pc, #116]	@ (8018df8 <_free_r+0x90>)
 8018d82:	6813      	ldr	r3, [r2, #0]
 8018d84:	2b00      	cmp	r3, #0
 8018d86:	d105      	bne.n	8018d94 <_free_r+0x2c>
 8018d88:	6063      	str	r3, [r4, #4]
 8018d8a:	6014      	str	r4, [r2, #0]
 8018d8c:	0028      	movs	r0, r5
 8018d8e:	f000 f8df 	bl	8018f50 <__malloc_unlock>
 8018d92:	bd70      	pop	{r4, r5, r6, pc}
 8018d94:	42a3      	cmp	r3, r4
 8018d96:	d908      	bls.n	8018daa <_free_r+0x42>
 8018d98:	6820      	ldr	r0, [r4, #0]
 8018d9a:	1821      	adds	r1, r4, r0
 8018d9c:	428b      	cmp	r3, r1
 8018d9e:	d1f3      	bne.n	8018d88 <_free_r+0x20>
 8018da0:	6819      	ldr	r1, [r3, #0]
 8018da2:	685b      	ldr	r3, [r3, #4]
 8018da4:	1809      	adds	r1, r1, r0
 8018da6:	6021      	str	r1, [r4, #0]
 8018da8:	e7ee      	b.n	8018d88 <_free_r+0x20>
 8018daa:	001a      	movs	r2, r3
 8018dac:	685b      	ldr	r3, [r3, #4]
 8018dae:	2b00      	cmp	r3, #0
 8018db0:	d001      	beq.n	8018db6 <_free_r+0x4e>
 8018db2:	42a3      	cmp	r3, r4
 8018db4:	d9f9      	bls.n	8018daa <_free_r+0x42>
 8018db6:	6811      	ldr	r1, [r2, #0]
 8018db8:	1850      	adds	r0, r2, r1
 8018dba:	42a0      	cmp	r0, r4
 8018dbc:	d10b      	bne.n	8018dd6 <_free_r+0x6e>
 8018dbe:	6820      	ldr	r0, [r4, #0]
 8018dc0:	1809      	adds	r1, r1, r0
 8018dc2:	1850      	adds	r0, r2, r1
 8018dc4:	6011      	str	r1, [r2, #0]
 8018dc6:	4283      	cmp	r3, r0
 8018dc8:	d1e0      	bne.n	8018d8c <_free_r+0x24>
 8018dca:	6818      	ldr	r0, [r3, #0]
 8018dcc:	685b      	ldr	r3, [r3, #4]
 8018dce:	1841      	adds	r1, r0, r1
 8018dd0:	6011      	str	r1, [r2, #0]
 8018dd2:	6053      	str	r3, [r2, #4]
 8018dd4:	e7da      	b.n	8018d8c <_free_r+0x24>
 8018dd6:	42a0      	cmp	r0, r4
 8018dd8:	d902      	bls.n	8018de0 <_free_r+0x78>
 8018dda:	230c      	movs	r3, #12
 8018ddc:	602b      	str	r3, [r5, #0]
 8018dde:	e7d5      	b.n	8018d8c <_free_r+0x24>
 8018de0:	6820      	ldr	r0, [r4, #0]
 8018de2:	1821      	adds	r1, r4, r0
 8018de4:	428b      	cmp	r3, r1
 8018de6:	d103      	bne.n	8018df0 <_free_r+0x88>
 8018de8:	6819      	ldr	r1, [r3, #0]
 8018dea:	685b      	ldr	r3, [r3, #4]
 8018dec:	1809      	adds	r1, r1, r0
 8018dee:	6021      	str	r1, [r4, #0]
 8018df0:	6063      	str	r3, [r4, #4]
 8018df2:	6054      	str	r4, [r2, #4]
 8018df4:	e7ca      	b.n	8018d8c <_free_r+0x24>
 8018df6:	46c0      	nop			@ (mov r8, r8)
 8018df8:	200035fc 	.word	0x200035fc

08018dfc <sbrk_aligned>:
 8018dfc:	b570      	push	{r4, r5, r6, lr}
 8018dfe:	4e0f      	ldr	r6, [pc, #60]	@ (8018e3c <sbrk_aligned+0x40>)
 8018e00:	000d      	movs	r5, r1
 8018e02:	6831      	ldr	r1, [r6, #0]
 8018e04:	0004      	movs	r4, r0
 8018e06:	2900      	cmp	r1, #0
 8018e08:	d102      	bne.n	8018e10 <sbrk_aligned+0x14>
 8018e0a:	f000 fcd9 	bl	80197c0 <_sbrk_r>
 8018e0e:	6030      	str	r0, [r6, #0]
 8018e10:	0029      	movs	r1, r5
 8018e12:	0020      	movs	r0, r4
 8018e14:	f000 fcd4 	bl	80197c0 <_sbrk_r>
 8018e18:	1c43      	adds	r3, r0, #1
 8018e1a:	d103      	bne.n	8018e24 <sbrk_aligned+0x28>
 8018e1c:	2501      	movs	r5, #1
 8018e1e:	426d      	negs	r5, r5
 8018e20:	0028      	movs	r0, r5
 8018e22:	bd70      	pop	{r4, r5, r6, pc}
 8018e24:	2303      	movs	r3, #3
 8018e26:	1cc5      	adds	r5, r0, #3
 8018e28:	439d      	bics	r5, r3
 8018e2a:	42a8      	cmp	r0, r5
 8018e2c:	d0f8      	beq.n	8018e20 <sbrk_aligned+0x24>
 8018e2e:	1a29      	subs	r1, r5, r0
 8018e30:	0020      	movs	r0, r4
 8018e32:	f000 fcc5 	bl	80197c0 <_sbrk_r>
 8018e36:	3001      	adds	r0, #1
 8018e38:	d1f2      	bne.n	8018e20 <sbrk_aligned+0x24>
 8018e3a:	e7ef      	b.n	8018e1c <sbrk_aligned+0x20>
 8018e3c:	200035f8 	.word	0x200035f8

08018e40 <_malloc_r>:
 8018e40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8018e42:	2203      	movs	r2, #3
 8018e44:	1ccb      	adds	r3, r1, #3
 8018e46:	4393      	bics	r3, r2
 8018e48:	3308      	adds	r3, #8
 8018e4a:	0005      	movs	r5, r0
 8018e4c:	001f      	movs	r7, r3
 8018e4e:	2b0c      	cmp	r3, #12
 8018e50:	d234      	bcs.n	8018ebc <_malloc_r+0x7c>
 8018e52:	270c      	movs	r7, #12
 8018e54:	42b9      	cmp	r1, r7
 8018e56:	d833      	bhi.n	8018ec0 <_malloc_r+0x80>
 8018e58:	0028      	movs	r0, r5
 8018e5a:	f000 f871 	bl	8018f40 <__malloc_lock>
 8018e5e:	4e37      	ldr	r6, [pc, #220]	@ (8018f3c <_malloc_r+0xfc>)
 8018e60:	6833      	ldr	r3, [r6, #0]
 8018e62:	001c      	movs	r4, r3
 8018e64:	2c00      	cmp	r4, #0
 8018e66:	d12f      	bne.n	8018ec8 <_malloc_r+0x88>
 8018e68:	0039      	movs	r1, r7
 8018e6a:	0028      	movs	r0, r5
 8018e6c:	f7ff ffc6 	bl	8018dfc <sbrk_aligned>
 8018e70:	0004      	movs	r4, r0
 8018e72:	1c43      	adds	r3, r0, #1
 8018e74:	d15f      	bne.n	8018f36 <_malloc_r+0xf6>
 8018e76:	6834      	ldr	r4, [r6, #0]
 8018e78:	9400      	str	r4, [sp, #0]
 8018e7a:	9b00      	ldr	r3, [sp, #0]
 8018e7c:	2b00      	cmp	r3, #0
 8018e7e:	d14a      	bne.n	8018f16 <_malloc_r+0xd6>
 8018e80:	2c00      	cmp	r4, #0
 8018e82:	d052      	beq.n	8018f2a <_malloc_r+0xea>
 8018e84:	6823      	ldr	r3, [r4, #0]
 8018e86:	0028      	movs	r0, r5
 8018e88:	18e3      	adds	r3, r4, r3
 8018e8a:	9900      	ldr	r1, [sp, #0]
 8018e8c:	9301      	str	r3, [sp, #4]
 8018e8e:	f000 fc97 	bl	80197c0 <_sbrk_r>
 8018e92:	9b01      	ldr	r3, [sp, #4]
 8018e94:	4283      	cmp	r3, r0
 8018e96:	d148      	bne.n	8018f2a <_malloc_r+0xea>
 8018e98:	6823      	ldr	r3, [r4, #0]
 8018e9a:	0028      	movs	r0, r5
 8018e9c:	1aff      	subs	r7, r7, r3
 8018e9e:	0039      	movs	r1, r7
 8018ea0:	f7ff ffac 	bl	8018dfc <sbrk_aligned>
 8018ea4:	3001      	adds	r0, #1
 8018ea6:	d040      	beq.n	8018f2a <_malloc_r+0xea>
 8018ea8:	6823      	ldr	r3, [r4, #0]
 8018eaa:	19db      	adds	r3, r3, r7
 8018eac:	6023      	str	r3, [r4, #0]
 8018eae:	6833      	ldr	r3, [r6, #0]
 8018eb0:	685a      	ldr	r2, [r3, #4]
 8018eb2:	2a00      	cmp	r2, #0
 8018eb4:	d133      	bne.n	8018f1e <_malloc_r+0xde>
 8018eb6:	9b00      	ldr	r3, [sp, #0]
 8018eb8:	6033      	str	r3, [r6, #0]
 8018eba:	e019      	b.n	8018ef0 <_malloc_r+0xb0>
 8018ebc:	2b00      	cmp	r3, #0
 8018ebe:	dac9      	bge.n	8018e54 <_malloc_r+0x14>
 8018ec0:	230c      	movs	r3, #12
 8018ec2:	602b      	str	r3, [r5, #0]
 8018ec4:	2000      	movs	r0, #0
 8018ec6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8018ec8:	6821      	ldr	r1, [r4, #0]
 8018eca:	1bc9      	subs	r1, r1, r7
 8018ecc:	d420      	bmi.n	8018f10 <_malloc_r+0xd0>
 8018ece:	290b      	cmp	r1, #11
 8018ed0:	d90a      	bls.n	8018ee8 <_malloc_r+0xa8>
 8018ed2:	19e2      	adds	r2, r4, r7
 8018ed4:	6027      	str	r7, [r4, #0]
 8018ed6:	42a3      	cmp	r3, r4
 8018ed8:	d104      	bne.n	8018ee4 <_malloc_r+0xa4>
 8018eda:	6032      	str	r2, [r6, #0]
 8018edc:	6863      	ldr	r3, [r4, #4]
 8018ede:	6011      	str	r1, [r2, #0]
 8018ee0:	6053      	str	r3, [r2, #4]
 8018ee2:	e005      	b.n	8018ef0 <_malloc_r+0xb0>
 8018ee4:	605a      	str	r2, [r3, #4]
 8018ee6:	e7f9      	b.n	8018edc <_malloc_r+0x9c>
 8018ee8:	6862      	ldr	r2, [r4, #4]
 8018eea:	42a3      	cmp	r3, r4
 8018eec:	d10e      	bne.n	8018f0c <_malloc_r+0xcc>
 8018eee:	6032      	str	r2, [r6, #0]
 8018ef0:	0028      	movs	r0, r5
 8018ef2:	f000 f82d 	bl	8018f50 <__malloc_unlock>
 8018ef6:	0020      	movs	r0, r4
 8018ef8:	2207      	movs	r2, #7
 8018efa:	300b      	adds	r0, #11
 8018efc:	1d23      	adds	r3, r4, #4
 8018efe:	4390      	bics	r0, r2
 8018f00:	1ac2      	subs	r2, r0, r3
 8018f02:	4298      	cmp	r0, r3
 8018f04:	d0df      	beq.n	8018ec6 <_malloc_r+0x86>
 8018f06:	1a1b      	subs	r3, r3, r0
 8018f08:	50a3      	str	r3, [r4, r2]
 8018f0a:	e7dc      	b.n	8018ec6 <_malloc_r+0x86>
 8018f0c:	605a      	str	r2, [r3, #4]
 8018f0e:	e7ef      	b.n	8018ef0 <_malloc_r+0xb0>
 8018f10:	0023      	movs	r3, r4
 8018f12:	6864      	ldr	r4, [r4, #4]
 8018f14:	e7a6      	b.n	8018e64 <_malloc_r+0x24>
 8018f16:	9c00      	ldr	r4, [sp, #0]
 8018f18:	6863      	ldr	r3, [r4, #4]
 8018f1a:	9300      	str	r3, [sp, #0]
 8018f1c:	e7ad      	b.n	8018e7a <_malloc_r+0x3a>
 8018f1e:	001a      	movs	r2, r3
 8018f20:	685b      	ldr	r3, [r3, #4]
 8018f22:	42a3      	cmp	r3, r4
 8018f24:	d1fb      	bne.n	8018f1e <_malloc_r+0xde>
 8018f26:	2300      	movs	r3, #0
 8018f28:	e7da      	b.n	8018ee0 <_malloc_r+0xa0>
 8018f2a:	230c      	movs	r3, #12
 8018f2c:	0028      	movs	r0, r5
 8018f2e:	602b      	str	r3, [r5, #0]
 8018f30:	f000 f80e 	bl	8018f50 <__malloc_unlock>
 8018f34:	e7c6      	b.n	8018ec4 <_malloc_r+0x84>
 8018f36:	6007      	str	r7, [r0, #0]
 8018f38:	e7da      	b.n	8018ef0 <_malloc_r+0xb0>
 8018f3a:	46c0      	nop			@ (mov r8, r8)
 8018f3c:	200035fc 	.word	0x200035fc

08018f40 <__malloc_lock>:
 8018f40:	b510      	push	{r4, lr}
 8018f42:	4802      	ldr	r0, [pc, #8]	@ (8018f4c <__malloc_lock+0xc>)
 8018f44:	f7ff ff05 	bl	8018d52 <__retarget_lock_acquire_recursive>
 8018f48:	bd10      	pop	{r4, pc}
 8018f4a:	46c0      	nop			@ (mov r8, r8)
 8018f4c:	200035f4 	.word	0x200035f4

08018f50 <__malloc_unlock>:
 8018f50:	b510      	push	{r4, lr}
 8018f52:	4802      	ldr	r0, [pc, #8]	@ (8018f5c <__malloc_unlock+0xc>)
 8018f54:	f7ff fefe 	bl	8018d54 <__retarget_lock_release_recursive>
 8018f58:	bd10      	pop	{r4, pc}
 8018f5a:	46c0      	nop			@ (mov r8, r8)
 8018f5c:	200035f4 	.word	0x200035f4

08018f60 <__ssputs_r>:
 8018f60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018f62:	688e      	ldr	r6, [r1, #8]
 8018f64:	b085      	sub	sp, #20
 8018f66:	001f      	movs	r7, r3
 8018f68:	000c      	movs	r4, r1
 8018f6a:	680b      	ldr	r3, [r1, #0]
 8018f6c:	9002      	str	r0, [sp, #8]
 8018f6e:	9203      	str	r2, [sp, #12]
 8018f70:	42be      	cmp	r6, r7
 8018f72:	d830      	bhi.n	8018fd6 <__ssputs_r+0x76>
 8018f74:	210c      	movs	r1, #12
 8018f76:	5e62      	ldrsh	r2, [r4, r1]
 8018f78:	2190      	movs	r1, #144	@ 0x90
 8018f7a:	00c9      	lsls	r1, r1, #3
 8018f7c:	420a      	tst	r2, r1
 8018f7e:	d028      	beq.n	8018fd2 <__ssputs_r+0x72>
 8018f80:	2003      	movs	r0, #3
 8018f82:	6921      	ldr	r1, [r4, #16]
 8018f84:	1a5b      	subs	r3, r3, r1
 8018f86:	9301      	str	r3, [sp, #4]
 8018f88:	6963      	ldr	r3, [r4, #20]
 8018f8a:	4343      	muls	r3, r0
 8018f8c:	9801      	ldr	r0, [sp, #4]
 8018f8e:	0fdd      	lsrs	r5, r3, #31
 8018f90:	18ed      	adds	r5, r5, r3
 8018f92:	1c7b      	adds	r3, r7, #1
 8018f94:	181b      	adds	r3, r3, r0
 8018f96:	106d      	asrs	r5, r5, #1
 8018f98:	42ab      	cmp	r3, r5
 8018f9a:	d900      	bls.n	8018f9e <__ssputs_r+0x3e>
 8018f9c:	001d      	movs	r5, r3
 8018f9e:	0552      	lsls	r2, r2, #21
 8018fa0:	d528      	bpl.n	8018ff4 <__ssputs_r+0x94>
 8018fa2:	0029      	movs	r1, r5
 8018fa4:	9802      	ldr	r0, [sp, #8]
 8018fa6:	f7ff ff4b 	bl	8018e40 <_malloc_r>
 8018faa:	1e06      	subs	r6, r0, #0
 8018fac:	d02c      	beq.n	8019008 <__ssputs_r+0xa8>
 8018fae:	9a01      	ldr	r2, [sp, #4]
 8018fb0:	6921      	ldr	r1, [r4, #16]
 8018fb2:	f7ff fed0 	bl	8018d56 <memcpy>
 8018fb6:	89a2      	ldrh	r2, [r4, #12]
 8018fb8:	4b18      	ldr	r3, [pc, #96]	@ (801901c <__ssputs_r+0xbc>)
 8018fba:	401a      	ands	r2, r3
 8018fbc:	2380      	movs	r3, #128	@ 0x80
 8018fbe:	4313      	orrs	r3, r2
 8018fc0:	81a3      	strh	r3, [r4, #12]
 8018fc2:	9b01      	ldr	r3, [sp, #4]
 8018fc4:	6126      	str	r6, [r4, #16]
 8018fc6:	18f6      	adds	r6, r6, r3
 8018fc8:	6026      	str	r6, [r4, #0]
 8018fca:	003e      	movs	r6, r7
 8018fcc:	6165      	str	r5, [r4, #20]
 8018fce:	1aed      	subs	r5, r5, r3
 8018fd0:	60a5      	str	r5, [r4, #8]
 8018fd2:	42be      	cmp	r6, r7
 8018fd4:	d900      	bls.n	8018fd8 <__ssputs_r+0x78>
 8018fd6:	003e      	movs	r6, r7
 8018fd8:	0032      	movs	r2, r6
 8018fda:	9903      	ldr	r1, [sp, #12]
 8018fdc:	6820      	ldr	r0, [r4, #0]
 8018fde:	f000 fbb8 	bl	8019752 <memmove>
 8018fe2:	2000      	movs	r0, #0
 8018fe4:	68a3      	ldr	r3, [r4, #8]
 8018fe6:	1b9b      	subs	r3, r3, r6
 8018fe8:	60a3      	str	r3, [r4, #8]
 8018fea:	6823      	ldr	r3, [r4, #0]
 8018fec:	199b      	adds	r3, r3, r6
 8018fee:	6023      	str	r3, [r4, #0]
 8018ff0:	b005      	add	sp, #20
 8018ff2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018ff4:	002a      	movs	r2, r5
 8018ff6:	9802      	ldr	r0, [sp, #8]
 8018ff8:	f000 fbff 	bl	80197fa <_realloc_r>
 8018ffc:	1e06      	subs	r6, r0, #0
 8018ffe:	d1e0      	bne.n	8018fc2 <__ssputs_r+0x62>
 8019000:	6921      	ldr	r1, [r4, #16]
 8019002:	9802      	ldr	r0, [sp, #8]
 8019004:	f7ff feb0 	bl	8018d68 <_free_r>
 8019008:	230c      	movs	r3, #12
 801900a:	2001      	movs	r0, #1
 801900c:	9a02      	ldr	r2, [sp, #8]
 801900e:	4240      	negs	r0, r0
 8019010:	6013      	str	r3, [r2, #0]
 8019012:	89a2      	ldrh	r2, [r4, #12]
 8019014:	3334      	adds	r3, #52	@ 0x34
 8019016:	4313      	orrs	r3, r2
 8019018:	81a3      	strh	r3, [r4, #12]
 801901a:	e7e9      	b.n	8018ff0 <__ssputs_r+0x90>
 801901c:	fffffb7f 	.word	0xfffffb7f

08019020 <_svfiprintf_r>:
 8019020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019022:	b0a1      	sub	sp, #132	@ 0x84
 8019024:	9003      	str	r0, [sp, #12]
 8019026:	001d      	movs	r5, r3
 8019028:	898b      	ldrh	r3, [r1, #12]
 801902a:	000f      	movs	r7, r1
 801902c:	0016      	movs	r6, r2
 801902e:	061b      	lsls	r3, r3, #24
 8019030:	d511      	bpl.n	8019056 <_svfiprintf_r+0x36>
 8019032:	690b      	ldr	r3, [r1, #16]
 8019034:	2b00      	cmp	r3, #0
 8019036:	d10e      	bne.n	8019056 <_svfiprintf_r+0x36>
 8019038:	2140      	movs	r1, #64	@ 0x40
 801903a:	f7ff ff01 	bl	8018e40 <_malloc_r>
 801903e:	6038      	str	r0, [r7, #0]
 8019040:	6138      	str	r0, [r7, #16]
 8019042:	2800      	cmp	r0, #0
 8019044:	d105      	bne.n	8019052 <_svfiprintf_r+0x32>
 8019046:	230c      	movs	r3, #12
 8019048:	9a03      	ldr	r2, [sp, #12]
 801904a:	6013      	str	r3, [r2, #0]
 801904c:	2001      	movs	r0, #1
 801904e:	4240      	negs	r0, r0
 8019050:	e0cf      	b.n	80191f2 <_svfiprintf_r+0x1d2>
 8019052:	2340      	movs	r3, #64	@ 0x40
 8019054:	617b      	str	r3, [r7, #20]
 8019056:	2300      	movs	r3, #0
 8019058:	ac08      	add	r4, sp, #32
 801905a:	6163      	str	r3, [r4, #20]
 801905c:	3320      	adds	r3, #32
 801905e:	7663      	strb	r3, [r4, #25]
 8019060:	3310      	adds	r3, #16
 8019062:	76a3      	strb	r3, [r4, #26]
 8019064:	9507      	str	r5, [sp, #28]
 8019066:	0035      	movs	r5, r6
 8019068:	782b      	ldrb	r3, [r5, #0]
 801906a:	2b00      	cmp	r3, #0
 801906c:	d001      	beq.n	8019072 <_svfiprintf_r+0x52>
 801906e:	2b25      	cmp	r3, #37	@ 0x25
 8019070:	d148      	bne.n	8019104 <_svfiprintf_r+0xe4>
 8019072:	1bab      	subs	r3, r5, r6
 8019074:	9305      	str	r3, [sp, #20]
 8019076:	42b5      	cmp	r5, r6
 8019078:	d00b      	beq.n	8019092 <_svfiprintf_r+0x72>
 801907a:	0032      	movs	r2, r6
 801907c:	0039      	movs	r1, r7
 801907e:	9803      	ldr	r0, [sp, #12]
 8019080:	f7ff ff6e 	bl	8018f60 <__ssputs_r>
 8019084:	3001      	adds	r0, #1
 8019086:	d100      	bne.n	801908a <_svfiprintf_r+0x6a>
 8019088:	e0ae      	b.n	80191e8 <_svfiprintf_r+0x1c8>
 801908a:	6963      	ldr	r3, [r4, #20]
 801908c:	9a05      	ldr	r2, [sp, #20]
 801908e:	189b      	adds	r3, r3, r2
 8019090:	6163      	str	r3, [r4, #20]
 8019092:	782b      	ldrb	r3, [r5, #0]
 8019094:	2b00      	cmp	r3, #0
 8019096:	d100      	bne.n	801909a <_svfiprintf_r+0x7a>
 8019098:	e0a6      	b.n	80191e8 <_svfiprintf_r+0x1c8>
 801909a:	2201      	movs	r2, #1
 801909c:	2300      	movs	r3, #0
 801909e:	4252      	negs	r2, r2
 80190a0:	6062      	str	r2, [r4, #4]
 80190a2:	a904      	add	r1, sp, #16
 80190a4:	3254      	adds	r2, #84	@ 0x54
 80190a6:	1852      	adds	r2, r2, r1
 80190a8:	1c6e      	adds	r6, r5, #1
 80190aa:	6023      	str	r3, [r4, #0]
 80190ac:	60e3      	str	r3, [r4, #12]
 80190ae:	60a3      	str	r3, [r4, #8]
 80190b0:	7013      	strb	r3, [r2, #0]
 80190b2:	65a3      	str	r3, [r4, #88]	@ 0x58
 80190b4:	4b54      	ldr	r3, [pc, #336]	@ (8019208 <_svfiprintf_r+0x1e8>)
 80190b6:	2205      	movs	r2, #5
 80190b8:	0018      	movs	r0, r3
 80190ba:	7831      	ldrb	r1, [r6, #0]
 80190bc:	9305      	str	r3, [sp, #20]
 80190be:	f000 fb91 	bl	80197e4 <memchr>
 80190c2:	1c75      	adds	r5, r6, #1
 80190c4:	2800      	cmp	r0, #0
 80190c6:	d11f      	bne.n	8019108 <_svfiprintf_r+0xe8>
 80190c8:	6822      	ldr	r2, [r4, #0]
 80190ca:	06d3      	lsls	r3, r2, #27
 80190cc:	d504      	bpl.n	80190d8 <_svfiprintf_r+0xb8>
 80190ce:	2353      	movs	r3, #83	@ 0x53
 80190d0:	a904      	add	r1, sp, #16
 80190d2:	185b      	adds	r3, r3, r1
 80190d4:	2120      	movs	r1, #32
 80190d6:	7019      	strb	r1, [r3, #0]
 80190d8:	0713      	lsls	r3, r2, #28
 80190da:	d504      	bpl.n	80190e6 <_svfiprintf_r+0xc6>
 80190dc:	2353      	movs	r3, #83	@ 0x53
 80190de:	a904      	add	r1, sp, #16
 80190e0:	185b      	adds	r3, r3, r1
 80190e2:	212b      	movs	r1, #43	@ 0x2b
 80190e4:	7019      	strb	r1, [r3, #0]
 80190e6:	7833      	ldrb	r3, [r6, #0]
 80190e8:	2b2a      	cmp	r3, #42	@ 0x2a
 80190ea:	d016      	beq.n	801911a <_svfiprintf_r+0xfa>
 80190ec:	0035      	movs	r5, r6
 80190ee:	2100      	movs	r1, #0
 80190f0:	200a      	movs	r0, #10
 80190f2:	68e3      	ldr	r3, [r4, #12]
 80190f4:	782a      	ldrb	r2, [r5, #0]
 80190f6:	1c6e      	adds	r6, r5, #1
 80190f8:	3a30      	subs	r2, #48	@ 0x30
 80190fa:	2a09      	cmp	r2, #9
 80190fc:	d950      	bls.n	80191a0 <_svfiprintf_r+0x180>
 80190fe:	2900      	cmp	r1, #0
 8019100:	d111      	bne.n	8019126 <_svfiprintf_r+0x106>
 8019102:	e017      	b.n	8019134 <_svfiprintf_r+0x114>
 8019104:	3501      	adds	r5, #1
 8019106:	e7af      	b.n	8019068 <_svfiprintf_r+0x48>
 8019108:	9b05      	ldr	r3, [sp, #20]
 801910a:	6822      	ldr	r2, [r4, #0]
 801910c:	1ac0      	subs	r0, r0, r3
 801910e:	2301      	movs	r3, #1
 8019110:	4083      	lsls	r3, r0
 8019112:	4313      	orrs	r3, r2
 8019114:	002e      	movs	r6, r5
 8019116:	6023      	str	r3, [r4, #0]
 8019118:	e7cc      	b.n	80190b4 <_svfiprintf_r+0x94>
 801911a:	9b07      	ldr	r3, [sp, #28]
 801911c:	1d19      	adds	r1, r3, #4
 801911e:	681b      	ldr	r3, [r3, #0]
 8019120:	9107      	str	r1, [sp, #28]
 8019122:	2b00      	cmp	r3, #0
 8019124:	db01      	blt.n	801912a <_svfiprintf_r+0x10a>
 8019126:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019128:	e004      	b.n	8019134 <_svfiprintf_r+0x114>
 801912a:	425b      	negs	r3, r3
 801912c:	60e3      	str	r3, [r4, #12]
 801912e:	2302      	movs	r3, #2
 8019130:	4313      	orrs	r3, r2
 8019132:	6023      	str	r3, [r4, #0]
 8019134:	782b      	ldrb	r3, [r5, #0]
 8019136:	2b2e      	cmp	r3, #46	@ 0x2e
 8019138:	d10c      	bne.n	8019154 <_svfiprintf_r+0x134>
 801913a:	786b      	ldrb	r3, [r5, #1]
 801913c:	2b2a      	cmp	r3, #42	@ 0x2a
 801913e:	d134      	bne.n	80191aa <_svfiprintf_r+0x18a>
 8019140:	9b07      	ldr	r3, [sp, #28]
 8019142:	3502      	adds	r5, #2
 8019144:	1d1a      	adds	r2, r3, #4
 8019146:	681b      	ldr	r3, [r3, #0]
 8019148:	9207      	str	r2, [sp, #28]
 801914a:	2b00      	cmp	r3, #0
 801914c:	da01      	bge.n	8019152 <_svfiprintf_r+0x132>
 801914e:	2301      	movs	r3, #1
 8019150:	425b      	negs	r3, r3
 8019152:	9309      	str	r3, [sp, #36]	@ 0x24
 8019154:	4e2d      	ldr	r6, [pc, #180]	@ (801920c <_svfiprintf_r+0x1ec>)
 8019156:	2203      	movs	r2, #3
 8019158:	0030      	movs	r0, r6
 801915a:	7829      	ldrb	r1, [r5, #0]
 801915c:	f000 fb42 	bl	80197e4 <memchr>
 8019160:	2800      	cmp	r0, #0
 8019162:	d006      	beq.n	8019172 <_svfiprintf_r+0x152>
 8019164:	2340      	movs	r3, #64	@ 0x40
 8019166:	1b80      	subs	r0, r0, r6
 8019168:	4083      	lsls	r3, r0
 801916a:	6822      	ldr	r2, [r4, #0]
 801916c:	3501      	adds	r5, #1
 801916e:	4313      	orrs	r3, r2
 8019170:	6023      	str	r3, [r4, #0]
 8019172:	7829      	ldrb	r1, [r5, #0]
 8019174:	2206      	movs	r2, #6
 8019176:	4826      	ldr	r0, [pc, #152]	@ (8019210 <_svfiprintf_r+0x1f0>)
 8019178:	1c6e      	adds	r6, r5, #1
 801917a:	7621      	strb	r1, [r4, #24]
 801917c:	f000 fb32 	bl	80197e4 <memchr>
 8019180:	2800      	cmp	r0, #0
 8019182:	d038      	beq.n	80191f6 <_svfiprintf_r+0x1d6>
 8019184:	4b23      	ldr	r3, [pc, #140]	@ (8019214 <_svfiprintf_r+0x1f4>)
 8019186:	2b00      	cmp	r3, #0
 8019188:	d122      	bne.n	80191d0 <_svfiprintf_r+0x1b0>
 801918a:	2207      	movs	r2, #7
 801918c:	9b07      	ldr	r3, [sp, #28]
 801918e:	3307      	adds	r3, #7
 8019190:	4393      	bics	r3, r2
 8019192:	3308      	adds	r3, #8
 8019194:	9307      	str	r3, [sp, #28]
 8019196:	6963      	ldr	r3, [r4, #20]
 8019198:	9a04      	ldr	r2, [sp, #16]
 801919a:	189b      	adds	r3, r3, r2
 801919c:	6163      	str	r3, [r4, #20]
 801919e:	e762      	b.n	8019066 <_svfiprintf_r+0x46>
 80191a0:	4343      	muls	r3, r0
 80191a2:	0035      	movs	r5, r6
 80191a4:	2101      	movs	r1, #1
 80191a6:	189b      	adds	r3, r3, r2
 80191a8:	e7a4      	b.n	80190f4 <_svfiprintf_r+0xd4>
 80191aa:	2300      	movs	r3, #0
 80191ac:	200a      	movs	r0, #10
 80191ae:	0019      	movs	r1, r3
 80191b0:	3501      	adds	r5, #1
 80191b2:	6063      	str	r3, [r4, #4]
 80191b4:	782a      	ldrb	r2, [r5, #0]
 80191b6:	1c6e      	adds	r6, r5, #1
 80191b8:	3a30      	subs	r2, #48	@ 0x30
 80191ba:	2a09      	cmp	r2, #9
 80191bc:	d903      	bls.n	80191c6 <_svfiprintf_r+0x1a6>
 80191be:	2b00      	cmp	r3, #0
 80191c0:	d0c8      	beq.n	8019154 <_svfiprintf_r+0x134>
 80191c2:	9109      	str	r1, [sp, #36]	@ 0x24
 80191c4:	e7c6      	b.n	8019154 <_svfiprintf_r+0x134>
 80191c6:	4341      	muls	r1, r0
 80191c8:	0035      	movs	r5, r6
 80191ca:	2301      	movs	r3, #1
 80191cc:	1889      	adds	r1, r1, r2
 80191ce:	e7f1      	b.n	80191b4 <_svfiprintf_r+0x194>
 80191d0:	aa07      	add	r2, sp, #28
 80191d2:	9200      	str	r2, [sp, #0]
 80191d4:	0021      	movs	r1, r4
 80191d6:	003a      	movs	r2, r7
 80191d8:	4b0f      	ldr	r3, [pc, #60]	@ (8019218 <_svfiprintf_r+0x1f8>)
 80191da:	9803      	ldr	r0, [sp, #12]
 80191dc:	e000      	b.n	80191e0 <_svfiprintf_r+0x1c0>
 80191de:	bf00      	nop
 80191e0:	9004      	str	r0, [sp, #16]
 80191e2:	9b04      	ldr	r3, [sp, #16]
 80191e4:	3301      	adds	r3, #1
 80191e6:	d1d6      	bne.n	8019196 <_svfiprintf_r+0x176>
 80191e8:	89bb      	ldrh	r3, [r7, #12]
 80191ea:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80191ec:	065b      	lsls	r3, r3, #25
 80191ee:	d500      	bpl.n	80191f2 <_svfiprintf_r+0x1d2>
 80191f0:	e72c      	b.n	801904c <_svfiprintf_r+0x2c>
 80191f2:	b021      	add	sp, #132	@ 0x84
 80191f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80191f6:	aa07      	add	r2, sp, #28
 80191f8:	9200      	str	r2, [sp, #0]
 80191fa:	0021      	movs	r1, r4
 80191fc:	003a      	movs	r2, r7
 80191fe:	4b06      	ldr	r3, [pc, #24]	@ (8019218 <_svfiprintf_r+0x1f8>)
 8019200:	9803      	ldr	r0, [sp, #12]
 8019202:	f000 f87b 	bl	80192fc <_printf_i>
 8019206:	e7eb      	b.n	80191e0 <_svfiprintf_r+0x1c0>
 8019208:	0801a04c 	.word	0x0801a04c
 801920c:	0801a052 	.word	0x0801a052
 8019210:	0801a056 	.word	0x0801a056
 8019214:	00000000 	.word	0x00000000
 8019218:	08018f61 	.word	0x08018f61

0801921c <_printf_common>:
 801921c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801921e:	0016      	movs	r6, r2
 8019220:	9301      	str	r3, [sp, #4]
 8019222:	688a      	ldr	r2, [r1, #8]
 8019224:	690b      	ldr	r3, [r1, #16]
 8019226:	000c      	movs	r4, r1
 8019228:	9000      	str	r0, [sp, #0]
 801922a:	4293      	cmp	r3, r2
 801922c:	da00      	bge.n	8019230 <_printf_common+0x14>
 801922e:	0013      	movs	r3, r2
 8019230:	0022      	movs	r2, r4
 8019232:	6033      	str	r3, [r6, #0]
 8019234:	3243      	adds	r2, #67	@ 0x43
 8019236:	7812      	ldrb	r2, [r2, #0]
 8019238:	2a00      	cmp	r2, #0
 801923a:	d001      	beq.n	8019240 <_printf_common+0x24>
 801923c:	3301      	adds	r3, #1
 801923e:	6033      	str	r3, [r6, #0]
 8019240:	6823      	ldr	r3, [r4, #0]
 8019242:	069b      	lsls	r3, r3, #26
 8019244:	d502      	bpl.n	801924c <_printf_common+0x30>
 8019246:	6833      	ldr	r3, [r6, #0]
 8019248:	3302      	adds	r3, #2
 801924a:	6033      	str	r3, [r6, #0]
 801924c:	6822      	ldr	r2, [r4, #0]
 801924e:	2306      	movs	r3, #6
 8019250:	0015      	movs	r5, r2
 8019252:	401d      	ands	r5, r3
 8019254:	421a      	tst	r2, r3
 8019256:	d027      	beq.n	80192a8 <_printf_common+0x8c>
 8019258:	0023      	movs	r3, r4
 801925a:	3343      	adds	r3, #67	@ 0x43
 801925c:	781b      	ldrb	r3, [r3, #0]
 801925e:	1e5a      	subs	r2, r3, #1
 8019260:	4193      	sbcs	r3, r2
 8019262:	6822      	ldr	r2, [r4, #0]
 8019264:	0692      	lsls	r2, r2, #26
 8019266:	d430      	bmi.n	80192ca <_printf_common+0xae>
 8019268:	0022      	movs	r2, r4
 801926a:	9901      	ldr	r1, [sp, #4]
 801926c:	9800      	ldr	r0, [sp, #0]
 801926e:	9d08      	ldr	r5, [sp, #32]
 8019270:	3243      	adds	r2, #67	@ 0x43
 8019272:	47a8      	blx	r5
 8019274:	3001      	adds	r0, #1
 8019276:	d025      	beq.n	80192c4 <_printf_common+0xa8>
 8019278:	2206      	movs	r2, #6
 801927a:	6823      	ldr	r3, [r4, #0]
 801927c:	2500      	movs	r5, #0
 801927e:	4013      	ands	r3, r2
 8019280:	2b04      	cmp	r3, #4
 8019282:	d105      	bne.n	8019290 <_printf_common+0x74>
 8019284:	6833      	ldr	r3, [r6, #0]
 8019286:	68e5      	ldr	r5, [r4, #12]
 8019288:	1aed      	subs	r5, r5, r3
 801928a:	43eb      	mvns	r3, r5
 801928c:	17db      	asrs	r3, r3, #31
 801928e:	401d      	ands	r5, r3
 8019290:	68a3      	ldr	r3, [r4, #8]
 8019292:	6922      	ldr	r2, [r4, #16]
 8019294:	4293      	cmp	r3, r2
 8019296:	dd01      	ble.n	801929c <_printf_common+0x80>
 8019298:	1a9b      	subs	r3, r3, r2
 801929a:	18ed      	adds	r5, r5, r3
 801929c:	2600      	movs	r6, #0
 801929e:	42b5      	cmp	r5, r6
 80192a0:	d120      	bne.n	80192e4 <_printf_common+0xc8>
 80192a2:	2000      	movs	r0, #0
 80192a4:	e010      	b.n	80192c8 <_printf_common+0xac>
 80192a6:	3501      	adds	r5, #1
 80192a8:	68e3      	ldr	r3, [r4, #12]
 80192aa:	6832      	ldr	r2, [r6, #0]
 80192ac:	1a9b      	subs	r3, r3, r2
 80192ae:	42ab      	cmp	r3, r5
 80192b0:	ddd2      	ble.n	8019258 <_printf_common+0x3c>
 80192b2:	0022      	movs	r2, r4
 80192b4:	2301      	movs	r3, #1
 80192b6:	9901      	ldr	r1, [sp, #4]
 80192b8:	9800      	ldr	r0, [sp, #0]
 80192ba:	9f08      	ldr	r7, [sp, #32]
 80192bc:	3219      	adds	r2, #25
 80192be:	47b8      	blx	r7
 80192c0:	3001      	adds	r0, #1
 80192c2:	d1f0      	bne.n	80192a6 <_printf_common+0x8a>
 80192c4:	2001      	movs	r0, #1
 80192c6:	4240      	negs	r0, r0
 80192c8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80192ca:	2030      	movs	r0, #48	@ 0x30
 80192cc:	18e1      	adds	r1, r4, r3
 80192ce:	3143      	adds	r1, #67	@ 0x43
 80192d0:	7008      	strb	r0, [r1, #0]
 80192d2:	0021      	movs	r1, r4
 80192d4:	1c5a      	adds	r2, r3, #1
 80192d6:	3145      	adds	r1, #69	@ 0x45
 80192d8:	7809      	ldrb	r1, [r1, #0]
 80192da:	18a2      	adds	r2, r4, r2
 80192dc:	3243      	adds	r2, #67	@ 0x43
 80192de:	3302      	adds	r3, #2
 80192e0:	7011      	strb	r1, [r2, #0]
 80192e2:	e7c1      	b.n	8019268 <_printf_common+0x4c>
 80192e4:	0022      	movs	r2, r4
 80192e6:	2301      	movs	r3, #1
 80192e8:	9901      	ldr	r1, [sp, #4]
 80192ea:	9800      	ldr	r0, [sp, #0]
 80192ec:	9f08      	ldr	r7, [sp, #32]
 80192ee:	321a      	adds	r2, #26
 80192f0:	47b8      	blx	r7
 80192f2:	3001      	adds	r0, #1
 80192f4:	d0e6      	beq.n	80192c4 <_printf_common+0xa8>
 80192f6:	3601      	adds	r6, #1
 80192f8:	e7d1      	b.n	801929e <_printf_common+0x82>
	...

080192fc <_printf_i>:
 80192fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80192fe:	b08b      	sub	sp, #44	@ 0x2c
 8019300:	9206      	str	r2, [sp, #24]
 8019302:	000a      	movs	r2, r1
 8019304:	3243      	adds	r2, #67	@ 0x43
 8019306:	9307      	str	r3, [sp, #28]
 8019308:	9005      	str	r0, [sp, #20]
 801930a:	9203      	str	r2, [sp, #12]
 801930c:	7e0a      	ldrb	r2, [r1, #24]
 801930e:	000c      	movs	r4, r1
 8019310:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019312:	2a78      	cmp	r2, #120	@ 0x78
 8019314:	d809      	bhi.n	801932a <_printf_i+0x2e>
 8019316:	2a62      	cmp	r2, #98	@ 0x62
 8019318:	d80b      	bhi.n	8019332 <_printf_i+0x36>
 801931a:	2a00      	cmp	r2, #0
 801931c:	d100      	bne.n	8019320 <_printf_i+0x24>
 801931e:	e0bc      	b.n	801949a <_printf_i+0x19e>
 8019320:	497b      	ldr	r1, [pc, #492]	@ (8019510 <_printf_i+0x214>)
 8019322:	9104      	str	r1, [sp, #16]
 8019324:	2a58      	cmp	r2, #88	@ 0x58
 8019326:	d100      	bne.n	801932a <_printf_i+0x2e>
 8019328:	e090      	b.n	801944c <_printf_i+0x150>
 801932a:	0025      	movs	r5, r4
 801932c:	3542      	adds	r5, #66	@ 0x42
 801932e:	702a      	strb	r2, [r5, #0]
 8019330:	e022      	b.n	8019378 <_printf_i+0x7c>
 8019332:	0010      	movs	r0, r2
 8019334:	3863      	subs	r0, #99	@ 0x63
 8019336:	2815      	cmp	r0, #21
 8019338:	d8f7      	bhi.n	801932a <_printf_i+0x2e>
 801933a:	f7e6 feeb 	bl	8000114 <__gnu_thumb1_case_shi>
 801933e:	0016      	.short	0x0016
 8019340:	fff6001f 	.word	0xfff6001f
 8019344:	fff6fff6 	.word	0xfff6fff6
 8019348:	001ffff6 	.word	0x001ffff6
 801934c:	fff6fff6 	.word	0xfff6fff6
 8019350:	fff6fff6 	.word	0xfff6fff6
 8019354:	003600a1 	.word	0x003600a1
 8019358:	fff60080 	.word	0xfff60080
 801935c:	00b2fff6 	.word	0x00b2fff6
 8019360:	0036fff6 	.word	0x0036fff6
 8019364:	fff6fff6 	.word	0xfff6fff6
 8019368:	0084      	.short	0x0084
 801936a:	0025      	movs	r5, r4
 801936c:	681a      	ldr	r2, [r3, #0]
 801936e:	3542      	adds	r5, #66	@ 0x42
 8019370:	1d11      	adds	r1, r2, #4
 8019372:	6019      	str	r1, [r3, #0]
 8019374:	6813      	ldr	r3, [r2, #0]
 8019376:	702b      	strb	r3, [r5, #0]
 8019378:	2301      	movs	r3, #1
 801937a:	e0a0      	b.n	80194be <_printf_i+0x1c2>
 801937c:	6818      	ldr	r0, [r3, #0]
 801937e:	6809      	ldr	r1, [r1, #0]
 8019380:	1d02      	adds	r2, r0, #4
 8019382:	060d      	lsls	r5, r1, #24
 8019384:	d50b      	bpl.n	801939e <_printf_i+0xa2>
 8019386:	6806      	ldr	r6, [r0, #0]
 8019388:	601a      	str	r2, [r3, #0]
 801938a:	2e00      	cmp	r6, #0
 801938c:	da03      	bge.n	8019396 <_printf_i+0x9a>
 801938e:	232d      	movs	r3, #45	@ 0x2d
 8019390:	9a03      	ldr	r2, [sp, #12]
 8019392:	4276      	negs	r6, r6
 8019394:	7013      	strb	r3, [r2, #0]
 8019396:	4b5e      	ldr	r3, [pc, #376]	@ (8019510 <_printf_i+0x214>)
 8019398:	270a      	movs	r7, #10
 801939a:	9304      	str	r3, [sp, #16]
 801939c:	e018      	b.n	80193d0 <_printf_i+0xd4>
 801939e:	6806      	ldr	r6, [r0, #0]
 80193a0:	601a      	str	r2, [r3, #0]
 80193a2:	0649      	lsls	r1, r1, #25
 80193a4:	d5f1      	bpl.n	801938a <_printf_i+0x8e>
 80193a6:	b236      	sxth	r6, r6
 80193a8:	e7ef      	b.n	801938a <_printf_i+0x8e>
 80193aa:	6808      	ldr	r0, [r1, #0]
 80193ac:	6819      	ldr	r1, [r3, #0]
 80193ae:	c940      	ldmia	r1!, {r6}
 80193b0:	0605      	lsls	r5, r0, #24
 80193b2:	d402      	bmi.n	80193ba <_printf_i+0xbe>
 80193b4:	0640      	lsls	r0, r0, #25
 80193b6:	d500      	bpl.n	80193ba <_printf_i+0xbe>
 80193b8:	b2b6      	uxth	r6, r6
 80193ba:	6019      	str	r1, [r3, #0]
 80193bc:	4b54      	ldr	r3, [pc, #336]	@ (8019510 <_printf_i+0x214>)
 80193be:	270a      	movs	r7, #10
 80193c0:	9304      	str	r3, [sp, #16]
 80193c2:	2a6f      	cmp	r2, #111	@ 0x6f
 80193c4:	d100      	bne.n	80193c8 <_printf_i+0xcc>
 80193c6:	3f02      	subs	r7, #2
 80193c8:	0023      	movs	r3, r4
 80193ca:	2200      	movs	r2, #0
 80193cc:	3343      	adds	r3, #67	@ 0x43
 80193ce:	701a      	strb	r2, [r3, #0]
 80193d0:	6863      	ldr	r3, [r4, #4]
 80193d2:	60a3      	str	r3, [r4, #8]
 80193d4:	2b00      	cmp	r3, #0
 80193d6:	db03      	blt.n	80193e0 <_printf_i+0xe4>
 80193d8:	2104      	movs	r1, #4
 80193da:	6822      	ldr	r2, [r4, #0]
 80193dc:	438a      	bics	r2, r1
 80193de:	6022      	str	r2, [r4, #0]
 80193e0:	2e00      	cmp	r6, #0
 80193e2:	d102      	bne.n	80193ea <_printf_i+0xee>
 80193e4:	9d03      	ldr	r5, [sp, #12]
 80193e6:	2b00      	cmp	r3, #0
 80193e8:	d00c      	beq.n	8019404 <_printf_i+0x108>
 80193ea:	9d03      	ldr	r5, [sp, #12]
 80193ec:	0030      	movs	r0, r6
 80193ee:	0039      	movs	r1, r7
 80193f0:	f7e6 ff20 	bl	8000234 <__aeabi_uidivmod>
 80193f4:	9b04      	ldr	r3, [sp, #16]
 80193f6:	3d01      	subs	r5, #1
 80193f8:	5c5b      	ldrb	r3, [r3, r1]
 80193fa:	702b      	strb	r3, [r5, #0]
 80193fc:	0033      	movs	r3, r6
 80193fe:	0006      	movs	r6, r0
 8019400:	429f      	cmp	r7, r3
 8019402:	d9f3      	bls.n	80193ec <_printf_i+0xf0>
 8019404:	2f08      	cmp	r7, #8
 8019406:	d109      	bne.n	801941c <_printf_i+0x120>
 8019408:	6823      	ldr	r3, [r4, #0]
 801940a:	07db      	lsls	r3, r3, #31
 801940c:	d506      	bpl.n	801941c <_printf_i+0x120>
 801940e:	6862      	ldr	r2, [r4, #4]
 8019410:	6923      	ldr	r3, [r4, #16]
 8019412:	429a      	cmp	r2, r3
 8019414:	dc02      	bgt.n	801941c <_printf_i+0x120>
 8019416:	2330      	movs	r3, #48	@ 0x30
 8019418:	3d01      	subs	r5, #1
 801941a:	702b      	strb	r3, [r5, #0]
 801941c:	9b03      	ldr	r3, [sp, #12]
 801941e:	1b5b      	subs	r3, r3, r5
 8019420:	6123      	str	r3, [r4, #16]
 8019422:	9b07      	ldr	r3, [sp, #28]
 8019424:	0021      	movs	r1, r4
 8019426:	9300      	str	r3, [sp, #0]
 8019428:	9805      	ldr	r0, [sp, #20]
 801942a:	9b06      	ldr	r3, [sp, #24]
 801942c:	aa09      	add	r2, sp, #36	@ 0x24
 801942e:	f7ff fef5 	bl	801921c <_printf_common>
 8019432:	3001      	adds	r0, #1
 8019434:	d148      	bne.n	80194c8 <_printf_i+0x1cc>
 8019436:	2001      	movs	r0, #1
 8019438:	4240      	negs	r0, r0
 801943a:	b00b      	add	sp, #44	@ 0x2c
 801943c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801943e:	2220      	movs	r2, #32
 8019440:	6809      	ldr	r1, [r1, #0]
 8019442:	430a      	orrs	r2, r1
 8019444:	6022      	str	r2, [r4, #0]
 8019446:	2278      	movs	r2, #120	@ 0x78
 8019448:	4932      	ldr	r1, [pc, #200]	@ (8019514 <_printf_i+0x218>)
 801944a:	9104      	str	r1, [sp, #16]
 801944c:	0021      	movs	r1, r4
 801944e:	3145      	adds	r1, #69	@ 0x45
 8019450:	700a      	strb	r2, [r1, #0]
 8019452:	6819      	ldr	r1, [r3, #0]
 8019454:	6822      	ldr	r2, [r4, #0]
 8019456:	c940      	ldmia	r1!, {r6}
 8019458:	0610      	lsls	r0, r2, #24
 801945a:	d402      	bmi.n	8019462 <_printf_i+0x166>
 801945c:	0650      	lsls	r0, r2, #25
 801945e:	d500      	bpl.n	8019462 <_printf_i+0x166>
 8019460:	b2b6      	uxth	r6, r6
 8019462:	6019      	str	r1, [r3, #0]
 8019464:	07d3      	lsls	r3, r2, #31
 8019466:	d502      	bpl.n	801946e <_printf_i+0x172>
 8019468:	2320      	movs	r3, #32
 801946a:	4313      	orrs	r3, r2
 801946c:	6023      	str	r3, [r4, #0]
 801946e:	2e00      	cmp	r6, #0
 8019470:	d001      	beq.n	8019476 <_printf_i+0x17a>
 8019472:	2710      	movs	r7, #16
 8019474:	e7a8      	b.n	80193c8 <_printf_i+0xcc>
 8019476:	2220      	movs	r2, #32
 8019478:	6823      	ldr	r3, [r4, #0]
 801947a:	4393      	bics	r3, r2
 801947c:	6023      	str	r3, [r4, #0]
 801947e:	e7f8      	b.n	8019472 <_printf_i+0x176>
 8019480:	681a      	ldr	r2, [r3, #0]
 8019482:	680d      	ldr	r5, [r1, #0]
 8019484:	1d10      	adds	r0, r2, #4
 8019486:	6949      	ldr	r1, [r1, #20]
 8019488:	6018      	str	r0, [r3, #0]
 801948a:	6813      	ldr	r3, [r2, #0]
 801948c:	062e      	lsls	r6, r5, #24
 801948e:	d501      	bpl.n	8019494 <_printf_i+0x198>
 8019490:	6019      	str	r1, [r3, #0]
 8019492:	e002      	b.n	801949a <_printf_i+0x19e>
 8019494:	066d      	lsls	r5, r5, #25
 8019496:	d5fb      	bpl.n	8019490 <_printf_i+0x194>
 8019498:	8019      	strh	r1, [r3, #0]
 801949a:	2300      	movs	r3, #0
 801949c:	9d03      	ldr	r5, [sp, #12]
 801949e:	6123      	str	r3, [r4, #16]
 80194a0:	e7bf      	b.n	8019422 <_printf_i+0x126>
 80194a2:	681a      	ldr	r2, [r3, #0]
 80194a4:	1d11      	adds	r1, r2, #4
 80194a6:	6019      	str	r1, [r3, #0]
 80194a8:	6815      	ldr	r5, [r2, #0]
 80194aa:	2100      	movs	r1, #0
 80194ac:	0028      	movs	r0, r5
 80194ae:	6862      	ldr	r2, [r4, #4]
 80194b0:	f000 f998 	bl	80197e4 <memchr>
 80194b4:	2800      	cmp	r0, #0
 80194b6:	d001      	beq.n	80194bc <_printf_i+0x1c0>
 80194b8:	1b40      	subs	r0, r0, r5
 80194ba:	6060      	str	r0, [r4, #4]
 80194bc:	6863      	ldr	r3, [r4, #4]
 80194be:	6123      	str	r3, [r4, #16]
 80194c0:	2300      	movs	r3, #0
 80194c2:	9a03      	ldr	r2, [sp, #12]
 80194c4:	7013      	strb	r3, [r2, #0]
 80194c6:	e7ac      	b.n	8019422 <_printf_i+0x126>
 80194c8:	002a      	movs	r2, r5
 80194ca:	6923      	ldr	r3, [r4, #16]
 80194cc:	9906      	ldr	r1, [sp, #24]
 80194ce:	9805      	ldr	r0, [sp, #20]
 80194d0:	9d07      	ldr	r5, [sp, #28]
 80194d2:	47a8      	blx	r5
 80194d4:	3001      	adds	r0, #1
 80194d6:	d0ae      	beq.n	8019436 <_printf_i+0x13a>
 80194d8:	6823      	ldr	r3, [r4, #0]
 80194da:	079b      	lsls	r3, r3, #30
 80194dc:	d415      	bmi.n	801950a <_printf_i+0x20e>
 80194de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80194e0:	68e0      	ldr	r0, [r4, #12]
 80194e2:	4298      	cmp	r0, r3
 80194e4:	daa9      	bge.n	801943a <_printf_i+0x13e>
 80194e6:	0018      	movs	r0, r3
 80194e8:	e7a7      	b.n	801943a <_printf_i+0x13e>
 80194ea:	0022      	movs	r2, r4
 80194ec:	2301      	movs	r3, #1
 80194ee:	9906      	ldr	r1, [sp, #24]
 80194f0:	9805      	ldr	r0, [sp, #20]
 80194f2:	9e07      	ldr	r6, [sp, #28]
 80194f4:	3219      	adds	r2, #25
 80194f6:	47b0      	blx	r6
 80194f8:	3001      	adds	r0, #1
 80194fa:	d09c      	beq.n	8019436 <_printf_i+0x13a>
 80194fc:	3501      	adds	r5, #1
 80194fe:	68e3      	ldr	r3, [r4, #12]
 8019500:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019502:	1a9b      	subs	r3, r3, r2
 8019504:	42ab      	cmp	r3, r5
 8019506:	dcf0      	bgt.n	80194ea <_printf_i+0x1ee>
 8019508:	e7e9      	b.n	80194de <_printf_i+0x1e2>
 801950a:	2500      	movs	r5, #0
 801950c:	e7f7      	b.n	80194fe <_printf_i+0x202>
 801950e:	46c0      	nop			@ (mov r8, r8)
 8019510:	0801a05d 	.word	0x0801a05d
 8019514:	0801a06e 	.word	0x0801a06e

08019518 <__sflush_r>:
 8019518:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801951a:	220c      	movs	r2, #12
 801951c:	5e8b      	ldrsh	r3, [r1, r2]
 801951e:	0005      	movs	r5, r0
 8019520:	000c      	movs	r4, r1
 8019522:	071a      	lsls	r2, r3, #28
 8019524:	d456      	bmi.n	80195d4 <__sflush_r+0xbc>
 8019526:	684a      	ldr	r2, [r1, #4]
 8019528:	2a00      	cmp	r2, #0
 801952a:	dc02      	bgt.n	8019532 <__sflush_r+0x1a>
 801952c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 801952e:	2a00      	cmp	r2, #0
 8019530:	dd4e      	ble.n	80195d0 <__sflush_r+0xb8>
 8019532:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8019534:	2f00      	cmp	r7, #0
 8019536:	d04b      	beq.n	80195d0 <__sflush_r+0xb8>
 8019538:	2200      	movs	r2, #0
 801953a:	2080      	movs	r0, #128	@ 0x80
 801953c:	682e      	ldr	r6, [r5, #0]
 801953e:	602a      	str	r2, [r5, #0]
 8019540:	001a      	movs	r2, r3
 8019542:	0140      	lsls	r0, r0, #5
 8019544:	6a21      	ldr	r1, [r4, #32]
 8019546:	4002      	ands	r2, r0
 8019548:	4203      	tst	r3, r0
 801954a:	d033      	beq.n	80195b4 <__sflush_r+0x9c>
 801954c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801954e:	89a3      	ldrh	r3, [r4, #12]
 8019550:	075b      	lsls	r3, r3, #29
 8019552:	d506      	bpl.n	8019562 <__sflush_r+0x4a>
 8019554:	6863      	ldr	r3, [r4, #4]
 8019556:	1ad2      	subs	r2, r2, r3
 8019558:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801955a:	2b00      	cmp	r3, #0
 801955c:	d001      	beq.n	8019562 <__sflush_r+0x4a>
 801955e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8019560:	1ad2      	subs	r2, r2, r3
 8019562:	2300      	movs	r3, #0
 8019564:	0028      	movs	r0, r5
 8019566:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8019568:	6a21      	ldr	r1, [r4, #32]
 801956a:	47b8      	blx	r7
 801956c:	89a2      	ldrh	r2, [r4, #12]
 801956e:	1c43      	adds	r3, r0, #1
 8019570:	d106      	bne.n	8019580 <__sflush_r+0x68>
 8019572:	6829      	ldr	r1, [r5, #0]
 8019574:	291d      	cmp	r1, #29
 8019576:	d846      	bhi.n	8019606 <__sflush_r+0xee>
 8019578:	4b29      	ldr	r3, [pc, #164]	@ (8019620 <__sflush_r+0x108>)
 801957a:	410b      	asrs	r3, r1
 801957c:	07db      	lsls	r3, r3, #31
 801957e:	d442      	bmi.n	8019606 <__sflush_r+0xee>
 8019580:	2300      	movs	r3, #0
 8019582:	6063      	str	r3, [r4, #4]
 8019584:	6923      	ldr	r3, [r4, #16]
 8019586:	6023      	str	r3, [r4, #0]
 8019588:	04d2      	lsls	r2, r2, #19
 801958a:	d505      	bpl.n	8019598 <__sflush_r+0x80>
 801958c:	1c43      	adds	r3, r0, #1
 801958e:	d102      	bne.n	8019596 <__sflush_r+0x7e>
 8019590:	682b      	ldr	r3, [r5, #0]
 8019592:	2b00      	cmp	r3, #0
 8019594:	d100      	bne.n	8019598 <__sflush_r+0x80>
 8019596:	6560      	str	r0, [r4, #84]	@ 0x54
 8019598:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801959a:	602e      	str	r6, [r5, #0]
 801959c:	2900      	cmp	r1, #0
 801959e:	d017      	beq.n	80195d0 <__sflush_r+0xb8>
 80195a0:	0023      	movs	r3, r4
 80195a2:	3344      	adds	r3, #68	@ 0x44
 80195a4:	4299      	cmp	r1, r3
 80195a6:	d002      	beq.n	80195ae <__sflush_r+0x96>
 80195a8:	0028      	movs	r0, r5
 80195aa:	f7ff fbdd 	bl	8018d68 <_free_r>
 80195ae:	2300      	movs	r3, #0
 80195b0:	6363      	str	r3, [r4, #52]	@ 0x34
 80195b2:	e00d      	b.n	80195d0 <__sflush_r+0xb8>
 80195b4:	2301      	movs	r3, #1
 80195b6:	0028      	movs	r0, r5
 80195b8:	47b8      	blx	r7
 80195ba:	0002      	movs	r2, r0
 80195bc:	1c43      	adds	r3, r0, #1
 80195be:	d1c6      	bne.n	801954e <__sflush_r+0x36>
 80195c0:	682b      	ldr	r3, [r5, #0]
 80195c2:	2b00      	cmp	r3, #0
 80195c4:	d0c3      	beq.n	801954e <__sflush_r+0x36>
 80195c6:	2b1d      	cmp	r3, #29
 80195c8:	d001      	beq.n	80195ce <__sflush_r+0xb6>
 80195ca:	2b16      	cmp	r3, #22
 80195cc:	d11a      	bne.n	8019604 <__sflush_r+0xec>
 80195ce:	602e      	str	r6, [r5, #0]
 80195d0:	2000      	movs	r0, #0
 80195d2:	e01e      	b.n	8019612 <__sflush_r+0xfa>
 80195d4:	690e      	ldr	r6, [r1, #16]
 80195d6:	2e00      	cmp	r6, #0
 80195d8:	d0fa      	beq.n	80195d0 <__sflush_r+0xb8>
 80195da:	680f      	ldr	r7, [r1, #0]
 80195dc:	600e      	str	r6, [r1, #0]
 80195de:	1bba      	subs	r2, r7, r6
 80195e0:	9201      	str	r2, [sp, #4]
 80195e2:	2200      	movs	r2, #0
 80195e4:	079b      	lsls	r3, r3, #30
 80195e6:	d100      	bne.n	80195ea <__sflush_r+0xd2>
 80195e8:	694a      	ldr	r2, [r1, #20]
 80195ea:	60a2      	str	r2, [r4, #8]
 80195ec:	9b01      	ldr	r3, [sp, #4]
 80195ee:	2b00      	cmp	r3, #0
 80195f0:	ddee      	ble.n	80195d0 <__sflush_r+0xb8>
 80195f2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80195f4:	0032      	movs	r2, r6
 80195f6:	001f      	movs	r7, r3
 80195f8:	0028      	movs	r0, r5
 80195fa:	9b01      	ldr	r3, [sp, #4]
 80195fc:	6a21      	ldr	r1, [r4, #32]
 80195fe:	47b8      	blx	r7
 8019600:	2800      	cmp	r0, #0
 8019602:	dc07      	bgt.n	8019614 <__sflush_r+0xfc>
 8019604:	89a2      	ldrh	r2, [r4, #12]
 8019606:	2340      	movs	r3, #64	@ 0x40
 8019608:	2001      	movs	r0, #1
 801960a:	4313      	orrs	r3, r2
 801960c:	b21b      	sxth	r3, r3
 801960e:	81a3      	strh	r3, [r4, #12]
 8019610:	4240      	negs	r0, r0
 8019612:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8019614:	9b01      	ldr	r3, [sp, #4]
 8019616:	1836      	adds	r6, r6, r0
 8019618:	1a1b      	subs	r3, r3, r0
 801961a:	9301      	str	r3, [sp, #4]
 801961c:	e7e6      	b.n	80195ec <__sflush_r+0xd4>
 801961e:	46c0      	nop			@ (mov r8, r8)
 8019620:	dfbffffe 	.word	0xdfbffffe

08019624 <_fflush_r>:
 8019624:	690b      	ldr	r3, [r1, #16]
 8019626:	b570      	push	{r4, r5, r6, lr}
 8019628:	0005      	movs	r5, r0
 801962a:	000c      	movs	r4, r1
 801962c:	2b00      	cmp	r3, #0
 801962e:	d102      	bne.n	8019636 <_fflush_r+0x12>
 8019630:	2500      	movs	r5, #0
 8019632:	0028      	movs	r0, r5
 8019634:	bd70      	pop	{r4, r5, r6, pc}
 8019636:	2800      	cmp	r0, #0
 8019638:	d004      	beq.n	8019644 <_fflush_r+0x20>
 801963a:	6a03      	ldr	r3, [r0, #32]
 801963c:	2b00      	cmp	r3, #0
 801963e:	d101      	bne.n	8019644 <_fflush_r+0x20>
 8019640:	f7ff f944 	bl	80188cc <__sinit>
 8019644:	220c      	movs	r2, #12
 8019646:	5ea3      	ldrsh	r3, [r4, r2]
 8019648:	2b00      	cmp	r3, #0
 801964a:	d0f1      	beq.n	8019630 <_fflush_r+0xc>
 801964c:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801964e:	07d2      	lsls	r2, r2, #31
 8019650:	d404      	bmi.n	801965c <_fflush_r+0x38>
 8019652:	059b      	lsls	r3, r3, #22
 8019654:	d402      	bmi.n	801965c <_fflush_r+0x38>
 8019656:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8019658:	f7ff fb7b 	bl	8018d52 <__retarget_lock_acquire_recursive>
 801965c:	0028      	movs	r0, r5
 801965e:	0021      	movs	r1, r4
 8019660:	f7ff ff5a 	bl	8019518 <__sflush_r>
 8019664:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8019666:	0005      	movs	r5, r0
 8019668:	07db      	lsls	r3, r3, #31
 801966a:	d4e2      	bmi.n	8019632 <_fflush_r+0xe>
 801966c:	89a3      	ldrh	r3, [r4, #12]
 801966e:	059b      	lsls	r3, r3, #22
 8019670:	d4df      	bmi.n	8019632 <_fflush_r+0xe>
 8019672:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8019674:	f7ff fb6e 	bl	8018d54 <__retarget_lock_release_recursive>
 8019678:	e7db      	b.n	8019632 <_fflush_r+0xe>
	...

0801967c <__swhatbuf_r>:
 801967c:	b570      	push	{r4, r5, r6, lr}
 801967e:	000e      	movs	r6, r1
 8019680:	001d      	movs	r5, r3
 8019682:	230e      	movs	r3, #14
 8019684:	5ec9      	ldrsh	r1, [r1, r3]
 8019686:	0014      	movs	r4, r2
 8019688:	b096      	sub	sp, #88	@ 0x58
 801968a:	2900      	cmp	r1, #0
 801968c:	da0c      	bge.n	80196a8 <__swhatbuf_r+0x2c>
 801968e:	89b2      	ldrh	r2, [r6, #12]
 8019690:	2380      	movs	r3, #128	@ 0x80
 8019692:	0011      	movs	r1, r2
 8019694:	4019      	ands	r1, r3
 8019696:	421a      	tst	r2, r3
 8019698:	d114      	bne.n	80196c4 <__swhatbuf_r+0x48>
 801969a:	2380      	movs	r3, #128	@ 0x80
 801969c:	00db      	lsls	r3, r3, #3
 801969e:	2000      	movs	r0, #0
 80196a0:	6029      	str	r1, [r5, #0]
 80196a2:	6023      	str	r3, [r4, #0]
 80196a4:	b016      	add	sp, #88	@ 0x58
 80196a6:	bd70      	pop	{r4, r5, r6, pc}
 80196a8:	466a      	mov	r2, sp
 80196aa:	f000 f865 	bl	8019778 <_fstat_r>
 80196ae:	2800      	cmp	r0, #0
 80196b0:	dbed      	blt.n	801968e <__swhatbuf_r+0x12>
 80196b2:	23f0      	movs	r3, #240	@ 0xf0
 80196b4:	9901      	ldr	r1, [sp, #4]
 80196b6:	021b      	lsls	r3, r3, #8
 80196b8:	4019      	ands	r1, r3
 80196ba:	4b04      	ldr	r3, [pc, #16]	@ (80196cc <__swhatbuf_r+0x50>)
 80196bc:	18c9      	adds	r1, r1, r3
 80196be:	424b      	negs	r3, r1
 80196c0:	4159      	adcs	r1, r3
 80196c2:	e7ea      	b.n	801969a <__swhatbuf_r+0x1e>
 80196c4:	2100      	movs	r1, #0
 80196c6:	2340      	movs	r3, #64	@ 0x40
 80196c8:	e7e9      	b.n	801969e <__swhatbuf_r+0x22>
 80196ca:	46c0      	nop			@ (mov r8, r8)
 80196cc:	ffffe000 	.word	0xffffe000

080196d0 <__smakebuf_r>:
 80196d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80196d2:	2602      	movs	r6, #2
 80196d4:	898b      	ldrh	r3, [r1, #12]
 80196d6:	0005      	movs	r5, r0
 80196d8:	000c      	movs	r4, r1
 80196da:	b085      	sub	sp, #20
 80196dc:	4233      	tst	r3, r6
 80196de:	d007      	beq.n	80196f0 <__smakebuf_r+0x20>
 80196e0:	0023      	movs	r3, r4
 80196e2:	3347      	adds	r3, #71	@ 0x47
 80196e4:	6023      	str	r3, [r4, #0]
 80196e6:	6123      	str	r3, [r4, #16]
 80196e8:	2301      	movs	r3, #1
 80196ea:	6163      	str	r3, [r4, #20]
 80196ec:	b005      	add	sp, #20
 80196ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80196f0:	ab03      	add	r3, sp, #12
 80196f2:	aa02      	add	r2, sp, #8
 80196f4:	f7ff ffc2 	bl	801967c <__swhatbuf_r>
 80196f8:	9f02      	ldr	r7, [sp, #8]
 80196fa:	9001      	str	r0, [sp, #4]
 80196fc:	0039      	movs	r1, r7
 80196fe:	0028      	movs	r0, r5
 8019700:	f7ff fb9e 	bl	8018e40 <_malloc_r>
 8019704:	2800      	cmp	r0, #0
 8019706:	d108      	bne.n	801971a <__smakebuf_r+0x4a>
 8019708:	220c      	movs	r2, #12
 801970a:	5ea3      	ldrsh	r3, [r4, r2]
 801970c:	059a      	lsls	r2, r3, #22
 801970e:	d4ed      	bmi.n	80196ec <__smakebuf_r+0x1c>
 8019710:	2203      	movs	r2, #3
 8019712:	4393      	bics	r3, r2
 8019714:	431e      	orrs	r6, r3
 8019716:	81a6      	strh	r6, [r4, #12]
 8019718:	e7e2      	b.n	80196e0 <__smakebuf_r+0x10>
 801971a:	2380      	movs	r3, #128	@ 0x80
 801971c:	89a2      	ldrh	r2, [r4, #12]
 801971e:	6020      	str	r0, [r4, #0]
 8019720:	4313      	orrs	r3, r2
 8019722:	81a3      	strh	r3, [r4, #12]
 8019724:	9b03      	ldr	r3, [sp, #12]
 8019726:	6120      	str	r0, [r4, #16]
 8019728:	6167      	str	r7, [r4, #20]
 801972a:	2b00      	cmp	r3, #0
 801972c:	d00c      	beq.n	8019748 <__smakebuf_r+0x78>
 801972e:	0028      	movs	r0, r5
 8019730:	230e      	movs	r3, #14
 8019732:	5ee1      	ldrsh	r1, [r4, r3]
 8019734:	f000 f832 	bl	801979c <_isatty_r>
 8019738:	2800      	cmp	r0, #0
 801973a:	d005      	beq.n	8019748 <__smakebuf_r+0x78>
 801973c:	2303      	movs	r3, #3
 801973e:	89a2      	ldrh	r2, [r4, #12]
 8019740:	439a      	bics	r2, r3
 8019742:	3b02      	subs	r3, #2
 8019744:	4313      	orrs	r3, r2
 8019746:	81a3      	strh	r3, [r4, #12]
 8019748:	89a3      	ldrh	r3, [r4, #12]
 801974a:	9a01      	ldr	r2, [sp, #4]
 801974c:	4313      	orrs	r3, r2
 801974e:	81a3      	strh	r3, [r4, #12]
 8019750:	e7cc      	b.n	80196ec <__smakebuf_r+0x1c>

08019752 <memmove>:
 8019752:	b510      	push	{r4, lr}
 8019754:	4288      	cmp	r0, r1
 8019756:	d806      	bhi.n	8019766 <memmove+0x14>
 8019758:	2300      	movs	r3, #0
 801975a:	429a      	cmp	r2, r3
 801975c:	d008      	beq.n	8019770 <memmove+0x1e>
 801975e:	5ccc      	ldrb	r4, [r1, r3]
 8019760:	54c4      	strb	r4, [r0, r3]
 8019762:	3301      	adds	r3, #1
 8019764:	e7f9      	b.n	801975a <memmove+0x8>
 8019766:	188b      	adds	r3, r1, r2
 8019768:	4298      	cmp	r0, r3
 801976a:	d2f5      	bcs.n	8019758 <memmove+0x6>
 801976c:	3a01      	subs	r2, #1
 801976e:	d200      	bcs.n	8019772 <memmove+0x20>
 8019770:	bd10      	pop	{r4, pc}
 8019772:	5c8b      	ldrb	r3, [r1, r2]
 8019774:	5483      	strb	r3, [r0, r2]
 8019776:	e7f9      	b.n	801976c <memmove+0x1a>

08019778 <_fstat_r>:
 8019778:	2300      	movs	r3, #0
 801977a:	b570      	push	{r4, r5, r6, lr}
 801977c:	4d06      	ldr	r5, [pc, #24]	@ (8019798 <_fstat_r+0x20>)
 801977e:	0004      	movs	r4, r0
 8019780:	0008      	movs	r0, r1
 8019782:	0011      	movs	r1, r2
 8019784:	602b      	str	r3, [r5, #0]
 8019786:	f7f4 f96e 	bl	800da66 <_fstat>
 801978a:	1c43      	adds	r3, r0, #1
 801978c:	d103      	bne.n	8019796 <_fstat_r+0x1e>
 801978e:	682b      	ldr	r3, [r5, #0]
 8019790:	2b00      	cmp	r3, #0
 8019792:	d000      	beq.n	8019796 <_fstat_r+0x1e>
 8019794:	6023      	str	r3, [r4, #0]
 8019796:	bd70      	pop	{r4, r5, r6, pc}
 8019798:	200035f0 	.word	0x200035f0

0801979c <_isatty_r>:
 801979c:	2300      	movs	r3, #0
 801979e:	b570      	push	{r4, r5, r6, lr}
 80197a0:	4d06      	ldr	r5, [pc, #24]	@ (80197bc <_isatty_r+0x20>)
 80197a2:	0004      	movs	r4, r0
 80197a4:	0008      	movs	r0, r1
 80197a6:	602b      	str	r3, [r5, #0]
 80197a8:	f7f4 f96b 	bl	800da82 <_isatty>
 80197ac:	1c43      	adds	r3, r0, #1
 80197ae:	d103      	bne.n	80197b8 <_isatty_r+0x1c>
 80197b0:	682b      	ldr	r3, [r5, #0]
 80197b2:	2b00      	cmp	r3, #0
 80197b4:	d000      	beq.n	80197b8 <_isatty_r+0x1c>
 80197b6:	6023      	str	r3, [r4, #0]
 80197b8:	bd70      	pop	{r4, r5, r6, pc}
 80197ba:	46c0      	nop			@ (mov r8, r8)
 80197bc:	200035f0 	.word	0x200035f0

080197c0 <_sbrk_r>:
 80197c0:	2300      	movs	r3, #0
 80197c2:	b570      	push	{r4, r5, r6, lr}
 80197c4:	4d06      	ldr	r5, [pc, #24]	@ (80197e0 <_sbrk_r+0x20>)
 80197c6:	0004      	movs	r4, r0
 80197c8:	0008      	movs	r0, r1
 80197ca:	602b      	str	r3, [r5, #0]
 80197cc:	f7f4 f96e 	bl	800daac <_sbrk>
 80197d0:	1c43      	adds	r3, r0, #1
 80197d2:	d103      	bne.n	80197dc <_sbrk_r+0x1c>
 80197d4:	682b      	ldr	r3, [r5, #0]
 80197d6:	2b00      	cmp	r3, #0
 80197d8:	d000      	beq.n	80197dc <_sbrk_r+0x1c>
 80197da:	6023      	str	r3, [r4, #0]
 80197dc:	bd70      	pop	{r4, r5, r6, pc}
 80197de:	46c0      	nop			@ (mov r8, r8)
 80197e0:	200035f0 	.word	0x200035f0

080197e4 <memchr>:
 80197e4:	b2c9      	uxtb	r1, r1
 80197e6:	1882      	adds	r2, r0, r2
 80197e8:	4290      	cmp	r0, r2
 80197ea:	d101      	bne.n	80197f0 <memchr+0xc>
 80197ec:	2000      	movs	r0, #0
 80197ee:	4770      	bx	lr
 80197f0:	7803      	ldrb	r3, [r0, #0]
 80197f2:	428b      	cmp	r3, r1
 80197f4:	d0fb      	beq.n	80197ee <memchr+0xa>
 80197f6:	3001      	adds	r0, #1
 80197f8:	e7f6      	b.n	80197e8 <memchr+0x4>

080197fa <_realloc_r>:
 80197fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80197fc:	0006      	movs	r6, r0
 80197fe:	000c      	movs	r4, r1
 8019800:	0015      	movs	r5, r2
 8019802:	2900      	cmp	r1, #0
 8019804:	d105      	bne.n	8019812 <_realloc_r+0x18>
 8019806:	0011      	movs	r1, r2
 8019808:	f7ff fb1a 	bl	8018e40 <_malloc_r>
 801980c:	0004      	movs	r4, r0
 801980e:	0020      	movs	r0, r4
 8019810:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8019812:	2a00      	cmp	r2, #0
 8019814:	d103      	bne.n	801981e <_realloc_r+0x24>
 8019816:	f7ff faa7 	bl	8018d68 <_free_r>
 801981a:	2400      	movs	r4, #0
 801981c:	e7f7      	b.n	801980e <_realloc_r+0x14>
 801981e:	f000 f81b 	bl	8019858 <_malloc_usable_size_r>
 8019822:	0007      	movs	r7, r0
 8019824:	4285      	cmp	r5, r0
 8019826:	d802      	bhi.n	801982e <_realloc_r+0x34>
 8019828:	0843      	lsrs	r3, r0, #1
 801982a:	42ab      	cmp	r3, r5
 801982c:	d3ef      	bcc.n	801980e <_realloc_r+0x14>
 801982e:	0029      	movs	r1, r5
 8019830:	0030      	movs	r0, r6
 8019832:	f7ff fb05 	bl	8018e40 <_malloc_r>
 8019836:	9001      	str	r0, [sp, #4]
 8019838:	2800      	cmp	r0, #0
 801983a:	d0ee      	beq.n	801981a <_realloc_r+0x20>
 801983c:	002a      	movs	r2, r5
 801983e:	42bd      	cmp	r5, r7
 8019840:	d900      	bls.n	8019844 <_realloc_r+0x4a>
 8019842:	003a      	movs	r2, r7
 8019844:	0021      	movs	r1, r4
 8019846:	9801      	ldr	r0, [sp, #4]
 8019848:	f7ff fa85 	bl	8018d56 <memcpy>
 801984c:	0021      	movs	r1, r4
 801984e:	0030      	movs	r0, r6
 8019850:	f7ff fa8a 	bl	8018d68 <_free_r>
 8019854:	9c01      	ldr	r4, [sp, #4]
 8019856:	e7da      	b.n	801980e <_realloc_r+0x14>

08019858 <_malloc_usable_size_r>:
 8019858:	1f0b      	subs	r3, r1, #4
 801985a:	681b      	ldr	r3, [r3, #0]
 801985c:	1f18      	subs	r0, r3, #4
 801985e:	2b00      	cmp	r3, #0
 8019860:	da01      	bge.n	8019866 <_malloc_usable_size_r+0xe>
 8019862:	580b      	ldr	r3, [r1, r0]
 8019864:	18c0      	adds	r0, r0, r3
 8019866:	4770      	bx	lr

08019868 <_init>:
 8019868:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801986a:	46c0      	nop			@ (mov r8, r8)
 801986c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801986e:	bc08      	pop	{r3}
 8019870:	469e      	mov	lr, r3
 8019872:	4770      	bx	lr

08019874 <_fini>:
 8019874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019876:	46c0      	nop			@ (mov r8, r8)
 8019878:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801987a:	bc08      	pop	{r3}
 801987c:	469e      	mov	lr, r3
 801987e:	4770      	bx	lr
